METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . Object > IDENT_0 = new java . util . HashMap ( ) ; IDENT_0 . put ( org . kaazing . IDENT_1 . transport . http . IDENT_2 . name ( ) , STRING_0 ) ; final java . lang . String IDENT_3 = STRING_1 ; final org . kaazing . IDENT_1 . resource . address . IDENT_4 IDENT_5 = IDENT_6 . METHOD_1 ( IDENT_3 , IDENT_0 ) ; final org . apache . IDENT_7 . core . service . IDENT_8 IDENT_9 = new org . kaazing . IDENT_1 . transport . METHOD_2 ( ) ; int [ ] IDENT_10 = new int [ ] { 1 , 2 , 10 } ; for ( int IDENT_11 : IDENT_10 ) { for ( int i = 0 ; i < IDENT_11 ; i ++ ) { IDENT_12 . METHOD_3 ( IDENT_5 , IDENT_9 , null ) ; } for ( int j = 0 ; j < IDENT_11 ; j ++ ) { IDENT_12 . METHOD_4 ( IDENT_5 ) ; } "<AssertPlaceHolder>" ; } } METHOD_5 ( ) { return IDENT_13 . isEmpty ( ) ; }
org . junit . Assert . assertTrue ( IDENT_12 . METHOD_5 ( ) ) 