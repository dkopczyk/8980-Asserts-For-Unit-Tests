METHOD_0 ( ) { org . kaazing . IDENT_0 . server . test . IDENT_1 IDENT_0 = new org . kaazing . IDENT_0 . server . test . METHOD_1 ( ) ; java . net . IDENT_2 IDENT_3 = null ; try { org . kaazing . IDENT_0 . server . test . config . IDENT_4 configuration = new org . kaazing . IDENT_0 . server . test . config . builder . METHOD_2 ( ) . service ( ) . accept ( STRING_0 ) . connect ( STRING_1 ) . type ( STRING_2 ) . METHOD_3 ( ) . service ( ) . accept ( STRING_1 ) . type ( STRING_3 ) . METHOD_4 ( STRING_4 , STRING_5 ) . METHOD_3 ( ) . security ( ) . METHOD_5 ( METHOD_5 ) . METHOD_6 ( IDENT_5 ) . METHOD_7 ( METHOD_7 ) . METHOD_3 ( ) . METHOD_3 ( ) ; IDENT_0 . start ( configuration ) ; IDENT_3 = javax . net . IDENT_6 . METHOD_8 ( ) . METHOD_9 ( STRING_6 , INT_0 ) ; java . io . IDENT_7 IDENT_8 = new java . io . METHOD_10 ( new java . io . METHOD_11 ( IDENT_3 . METHOD_12 ( ) ) ) ; java . io . IDENT_9 r = new java . io . METHOD_13 ( new java . io . METHOD_14 ( IDENT_3 . METHOD_15 ( ) ) ) ; java . lang . String expected = STRING_7 ; IDENT_8 . write ( expected ) ; IDENT_8 . METHOD_16 ( ) ; IDENT_8 . METHOD_17 ( ) ; java . lang . String IDENT_10 = r . METHOD_18 ( ) ; "<AssertPlaceHolder>" ; IDENT_8 . close ( ) ; r . close ( ) ; } finally { if ( IDENT_3 != null ) { try { IDENT_3 . close ( ) ; } catch ( java . io . IOException IDENT_11 ) { } } IDENT_0 . METHOD_19 ( ) ; } } METHOD_18 ( ) { return in . METHOD_18 ( ) ; }
org . junit . Assert . assertNull ( IDENT_10 ) 