METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . util . Map < java . lang . String , java . lang . Object > options = new java . util . HashMap ( ) ; org . kaazing . IDENT_1 . resource . address . ws . IDENT_2 address = ( ( org . kaazing . IDENT_1 . resource . address . ws . IDENT_2 ) ( org . kaazing . IDENT_1 . resource . address . IDENT_3 . METHOD_1 ( ) . METHOD_2 ( IDENT_0 , options ) ) ) ; org . kaazing . IDENT_1 . transport . ws . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 factory = new org . kaazing . IDENT_1 . transport . ws . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_3 ( ) ; org . kaazing . IDENT_1 . transport . ws . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_8 extension = ( ( org . kaazing . IDENT_1 . transport . ws . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_8 ) ( factory . METHOD_4 ( IDENT_9 , org . kaazing . IDENT_1 . transport . ws . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_10 . IDENT_11 , address ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . kaazing . IDENT_1 . transport . ws . extension . IDENT_12 , org . kaazing . IDENT_1 . transport . ws . extension . IDENT_13 , org . kaazing . IDENT_1 . resource . address . ws . IDENT_2 ) { long IDENT_14 = address . METHOD_5 ( IDENT_2 . IDENT_15 ) ; return IDENT_14 > 0 ? new org . kaazing . IDENT_1 . transport . ws . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_6 ( header , IDENT_11 , address . METHOD_5 ( IDENT_2 . IDENT_15 ) ) : null ; }
org . junit . Assert . assertNull ( extension ) 