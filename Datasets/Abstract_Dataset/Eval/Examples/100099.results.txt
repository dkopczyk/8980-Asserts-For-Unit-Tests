METHOD_0 ( ) { final org . apache . IDENT_0 . core . service . IDENT_1 handler = context . mock ( org . apache . IDENT_0 . core . service . IDENT_1 . class ) ; final java . util . concurrent . IDENT_2 close = new java . util . concurrent . METHOD_1 ( 1 ) ; context . METHOD_2 ( new org . IDENT_3 . METHOD_3 ( ) { { METHOD_4 ( handler ) . METHOD_5 ( with ( any ( org . kaazing . IDENT_0 . core . session . IDENT_4 . class ) ) ) ; METHOD_4 ( handler ) . METHOD_6 ( with ( any ( org . kaazing . IDENT_0 . core . session . IDENT_4 . class ) ) ) ; METHOD_4 ( handler ) . METHOD_7 ( with ( any ( org . kaazing . IDENT_0 . core . session . IDENT_4 . class ) ) ) ; METHOD_8 ( new org . IDENT_3 . lib . action . METHOD_9 ( STRING_0 ) { @ org . kaazing . IDENT_5 . transport . IDENT_6 . IDENT_7 . ws . IDENT_8 . Override public java . lang . Object invoke ( org . IDENT_3 . api . IDENT_9 IDENT_10 ) throws java . lang . Throwable { close . METHOD_10 ( ) ; return null ; } } ) ; } } ) ; org . apache . IDENT_0 . core . future . IDENT_11 IDENT_12 = IDENT_8 . connect ( STRING_1 , null , handler ) ; IDENT_12 . METHOD_11 ( 10 , java . util . concurrent . TimeUnit . IDENT_13 ) ; IDENT_12 . METHOD_12 ( ) . close ( false ) ; IDENT_14 . METHOD_13 ( ) ; "<AssertPlaceHolder>" ; } METHOD_11 ( long , java . util . concurrent . TimeUnit ) { return METHOD_14 ( unit . METHOD_15 ( IDENT_15 ) , true ) ; }
org . junit . Assert . assertTrue ( close . METHOD_11 ( 10 , java . util . concurrent . TimeUnit . IDENT_13 ) ) 