METHOD_0 ( ) { final org . apache . IDENT_0 . core . service . IDENT_1 handler = context . mock ( org . apache . IDENT_0 . core . service . IDENT_1 . class ) ; final java . util . List < java . nio . ByteBuffer > IDENT_2 = new java . util . ArrayList ( ) ; context . METHOD_1 ( new org . kaazing . IDENT_3 . transport . test . METHOD_2 ( ) { { METHOD_3 ( handler ) . METHOD_4 ( with ( any ( org . kaazing . IDENT_0 . core . session . IDENT_4 . class ) ) ) ; METHOD_3 ( handler ) . METHOD_5 ( with ( any ( org . kaazing . IDENT_0 . core . session . IDENT_4 . class ) ) ) ; METHOD_3 ( handler ) . METHOD_6 ( with ( any ( org . kaazing . IDENT_0 . core . session . IDENT_4 . class ) ) ) ; METHOD_7 ( handler ) . METHOD_8 ( with ( any ( org . kaazing . IDENT_0 . core . session . IDENT_4 . class ) ) , with ( any ( java . lang . Object . class ) ) ) ; METHOD_9 ( new org . IDENT_5 . lib . action . METHOD_10 ( STRING_0 ) { @ org . kaazing . IDENT_3 . transport . IDENT_6 . IDENT_7 . ws . IDENT_8 . Override public java . lang . Object invoke ( org . IDENT_5 . api . IDENT_9 IDENT_10 ) throws java . lang . Throwable { java . lang . Object message = IDENT_10 . METHOD_11 ( 1 ) ; org . kaazing . IDENT_0 . core . buffer . IDENT_11 IDENT_12 = ( ( org . kaazing . IDENT_0 . core . buffer . IDENT_11 ) ( message ) ) ; IDENT_2 . add ( IDENT_12 . buf ( ) ) ; if ( ( IDENT_2 . size ( ) ) == 5 ) { org . kaazing . IDENT_3 . transport . IDENT_6 . IDENT_13 IDENT_14 = ( ( org . kaazing . IDENT_3 . transport . IDENT_6 . IDENT_13 ) ( IDENT_10 . METHOD_11 ( 0 ) ) ) ; java . nio . ByteBuffer buffer = java . nio . ByteBuffer . METHOD_12 ( INT_0 ) ; for ( java . nio . ByteBuffer IDENT_15 : IDENT_2 ) { buffer . put ( IDENT_15 ) ; } buffer . METHOD_13 ( ) ; org . kaazing . IDENT_0 . core . buffer . IDENT_16 < ? extends org . kaazing . IDENT_3 . transport . ws . IDENT_17 . filter . IDENT_18 > IDENT_19 = IDENT_14 . METHOD_14 ( ) ; org . kaazing . IDENT_3 . transport . ws . IDENT_17 . filter . IDENT_18 IDENT_20 = IDENT_19 . METHOD_15 ( buffer , IDENT_11 . IDENT_21 ) ; IDENT_20 . METHOD_16 ( IDENT_18 . IDENT_22 . IDENT_23 ) ; IDENT_14 . write ( IDENT_20 ) ; } return null ; } } ) ; METHOD_17 ( 1 ) . of ( handler ) . METHOD_18 ( with ( any ( org . kaazing . IDENT_0 . core . session . IDENT_4 . class ) ) , with ( org . hamcrest . core . IDENT_24 . METHOD_19 ( any ( java . io . IOException . class ) , org . junit . internal . matchers . IDENT_25 . METHOD_20 ( equal ( IDENT_26 . IDENT_27 ) ) ) ) ) ; } } ) ; final org . apache . IDENT_0 . core . future . IDENT_28 IDENT_29 = IDENT_8 . connect ( STRING_1 , null , handler ) ; IDENT_29 . METHOD_21 ( ) ; "<AssertPlaceHolder>" ; IDENT_30 . METHOD_22 ( ) ; } METHOD_23 ( ) { return channel . METHOD_23 ( ) ; }
org . junit . Assert . assertTrue ( IDENT_29 . METHOD_23 ( ) ) 