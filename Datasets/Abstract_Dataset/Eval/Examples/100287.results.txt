METHOD_0 ( ) { org . kaazing . IDENT_0 . IDENT_1 helper = org . kaazing . IDENT_0 . IDENT_1 . newInstance ( ) ; java . net . URI location = java . net . URI . create ( STRING_0 ) ; org . kaazing . IDENT_0 . ws . IDENT_2 connection = ( ( org . kaazing . IDENT_0 . ws . IDENT_2 ) ( helper . METHOD_1 ( location ) ) ) ; java . io . IDENT_3 writer = connection . METHOD_2 ( ) ; java . io . IDENT_4 reader = connection . METHOD_3 ( ) ; java . lang . String IDENT_5 = new org . kaazing . IDENT_0 . ws . IDENT_6 . IDENT_7 . METHOD_4 ( INT_0 ) . METHOD_5 ( ) ; writer . write ( IDENT_5 . METHOD_6 ( ) ) ; char [ ] IDENT_8 = new char [ 50 ] ; char [ ] IDENT_9 = new char [ 50 ] ; char [ ] IDENT_10 = new char [ 50 ] ; int IDENT_11 = 0 ; int IDENT_12 = 0 ; int IDENT_13 = 0 ; int IDENT_14 = IDENT_8 . length ; int IDENT_15 = IDENT_9 . length ; int IDENT_16 = IDENT_10 . length ; int IDENT_17 = 0 ; int IDENT_18 = 0 ; int IDENT_19 = 0 ; while ( ( IDENT_17 != ( - 1 ) ) && ( IDENT_14 > 0 ) ) { IDENT_17 = reader . read ( IDENT_8 , IDENT_11 , IDENT_14 ) ; if ( IDENT_17 != ( - 1 ) ) { IDENT_11 += IDENT_17 ; IDENT_14 OP_0 IDENT_17 ; } } while ( ( IDENT_18 != ( - 1 ) ) && ( IDENT_15 > 0 ) ) { IDENT_18 = reader . read ( IDENT_9 , IDENT_12 , IDENT_15 ) ; if ( IDENT_18 != ( - 1 ) ) { IDENT_12 += IDENT_18 ; IDENT_15 OP_0 IDENT_18 ; } } while ( ( IDENT_19 != ( - 1 ) ) && ( IDENT_16 > 0 ) ) { IDENT_19 = reader . read ( IDENT_10 , IDENT_13 , IDENT_16 ) ; if ( IDENT_19 != ( - 1 ) ) { IDENT_13 += IDENT_19 ; IDENT_16 OP_0 IDENT_19 ; } } java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) . append ( IDENT_8 ) . append ( IDENT_9 ) . append ( IDENT_10 , 0 , IDENT_13 ) ; java . lang . String IDENT_20 = sb . toString ( ) ; IDENT_21 . METHOD_7 ( ) ; "<AssertPlaceHolder>" ; } toString ( ) { return ( ( ( ( ( ( ( getClass ( ) . getName ( ) ) + STRING_1 ) + ( position ( ) ) ) + STRING_2 ) + ( METHOD_8 ( ) ) ) + STRING_3 ) + ( METHOD_9 ( ) ) ) + "]" ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_20 ) 