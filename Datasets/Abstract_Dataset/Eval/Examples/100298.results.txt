METHOD_0 ( ) { org . kaazing . IDENT_0 . IDENT_1 helper = org . kaazing . IDENT_0 . IDENT_1 . newInstance ( ) ; java . net . URI location = java . net . URI . create ( STRING_0 ) ; org . kaazing . IDENT_0 . ws . IDENT_2 connection = ( ( org . kaazing . IDENT_0 . ws . IDENT_2 ) ( helper . METHOD_1 ( location ) ) ) ; java . io . IDENT_3 writer = connection . METHOD_2 ( ) ; java . io . IDENT_4 reader = connection . METHOD_3 ( ) ; java . lang . String IDENT_5 = new org . kaazing . IDENT_0 . ws . IDENT_6 . IDENT_7 . METHOD_4 ( INT_0 ) . METHOD_5 ( ) ; writer . write ( IDENT_5 . METHOD_6 ( ) ) ; char [ ] IDENT_8 = new char [ IDENT_5 . METHOD_6 ( ) . length ] ; int offset = 0 ; int length = IDENT_8 . length ; int IDENT_9 = 0 ; while ( ( IDENT_9 != ( - 1 ) ) && ( length > 0 ) ) { IDENT_9 = reader . read ( IDENT_8 , offset , length ) ; if ( IDENT_9 != ( - 1 ) ) { offset += IDENT_9 ; length OP_0 IDENT_9 ; } } java . lang . String IDENT_10 = java . lang . String . valueOf ( IDENT_8 ) ; IDENT_11 . METHOD_7 ( ) ; "<AssertPlaceHolder>" ; } read ( char [ ] , int , int ) { if ( ( ( offset < 0 ) || ( ( offset + length ) > ( IDENT_8 . length ) ) ) || ( length < 0 ) ) { int len = offset + length ; throw new java . lang . METHOD_8 ( java . lang . String . format ( org . kaazing . IDENT_0 . ws . internal . io . IDENT_12 . IDENT_13 , offset , len , IDENT_8 . length ) ) ; } if ( IDENT_14 . METHOD_9 ( ) ) { try { if ( ( IDENT_15 ) < ( IDENT_16 ) ) { return METHOD_10 ( IDENT_8 , offset , length ) ; } if ( ( IDENT_15 ) == ( IDENT_16 ) ) { IDENT_15 = 0 ; IDENT_16 = 0 ; } if ( ( IDENT_17 ) > ( IDENT_18 ) ) { int IDENT_19 = ( IDENT_17 ) - ( IDENT_18 ) ; java . lang . System . METHOD_11 ( IDENT_20 , IDENT_18 , IDENT_20 , 0 , IDENT_19 ) ; IDENT_18 = 0 ; IDENT_17 = IDENT_19 ; } while ( true ) { if ( ( IDENT_18 ) == ( IDENT_17 ) ) { IDENT_18 = 0 ; IDENT_17 = 0 ; int IDENT_21 = ( IDENT_20 . length ) - ( IDENT_17 ) ; int IDENT_22 = 0 ; try { IDENT_22 = in . read ( IDENT_20 , IDENT_17 , IDENT_21 ) ; if ( IDENT_22 == ( - 1 ) ) { return - 1 ; } } catch ( java . net . IDENT_23 ex ) { return - 1 ; } IDENT_18 = 0 ; IDENT_17 = IDENT_22 ; } int IDENT_24 = METHOD_12 ( ) ; if ( IDENT_24 == ( - 1 ) ) { return - 1 ; } IDENT_25 . METHOD_13 ( IDENT_26 , IDENT_18 ) ; int IDENT_27 = IDENT_25 . METHOD_14 ( ) ; if ( ( ( IDENT_25 . offset ( ) ) + METHOD_14 ) > ( IDENT_17 ) ) { if ( METHOD_14 > ( IDENT_20 . length ) ) { int IDENT_28 = connection . METHOD_15 ( ) ; throw new java . io . IOException ( java . lang . String . format ( org . kaazing . IDENT_0 . ws . internal . io . IDENT_12 . IDENT_29 , METHOD_14 , IDENT_28 ) ) ; } else { if ( ( ( IDENT_25 . offset ( ) ) + METHOD_14 ) > ( IDENT_20 . length ) ) { int len = ( IDENT_17 ) - ( IDENT_18 ) ; java . lang . System . METHOD_11 ( IDENT_20 , IDENT_18 , IDENT_20 , 0 , len ) ; IDENT_18 = 0 ; IDENT_17 = len ; } } int IDENT_30 = connection . METHOD_16 ( false , METHOD_14 ) ; int IDENT_31 = ( ( IDENT_18 ) + IDENT_30 ) - ( IDENT_17 ) ; while ( IDENT_31 > 0 ) { int IDENT_22 = in . read ( IDENT_20 , IDENT_17 , IDENT_31 ) ; if ( IDENT_22 == ( - 1 ) ) { return - 1 ; } IDENT_31 OP_0 IDENT_22 ; IDENT_17 += IDENT_22 ; } IDENT_25 . METHOD_13 ( IDENT_26 , IDENT_18 ) ; } METHOD_17 ( ) ; org . kaazing . IDENT_0 . ws . internal . IDENT_32 context = connection . METHOD_18 ( ) ; org . kaazing . IDENT_0 . ws . internal . io . IDENT_33 IDENT_34 = ( ( org . kaazing . IDENT_0 . ws . internal . io . IDENT_33 ) ( context . METHOD_19 ( ) ) ) ; IDENT_34 . METHOD_20 ( IDENT_35 , IDENT_25 . METHOD_21 ( ) ) ; connection . METHOD_22 ( IDENT_36 . METHOD_13 ( IDENT_37 , IDENT_18 ) ) ; IDENT_18 += IDENT_25 . length ( ) ; if ( ! ( METHOD_23 ( ) ) ) { break ; } } assert ( IDENT_15 ) < ( IDENT_16 ) ; return METHOD_10 ( IDENT_8 , offset , length ) ; } finally { IDENT_14 . METHOD_24 ( ) ; } } return 0 ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_10 ) 