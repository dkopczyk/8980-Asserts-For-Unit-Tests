METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 IDENT_1 = new org . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; IDENT_1 . add ( STRING_0 ) ; java . lang . Class IDENT_3 = IDENT_1 . METHOD_2 ( STRING_1 ) ; java . util . IDENT_4 IDENT_5 = java . util . IDENT_4 . load ( IDENT_3 , IDENT_1 ) ; java . util . Iterator IDENT_6 = IDENT_5 . iterator ( ) ; "<AssertPlaceHolder>" ; } load ( java . lang . String , boolean ) { java . lang . Class result = null ; byte [ ] IDENT_7 ; result = classes . get ( IDENT_8 ) ; if ( result != null ) { if ( logger . METHOD_3 ( ) ) logger . trace ( ( STRING_2 + IDENT_8 ) ) ; return result ; } IDENT_7 = METHOD_4 ( IDENT_8 ) ; if ( IDENT_7 == null ) { return null ; } result = METHOD_5 ( IDENT_8 , IDENT_7 , 0 , IDENT_7 . length ) ; if ( result == null ) { return null ; } if ( IDENT_9 ) METHOD_6 ( result ) ; classes . put ( IDENT_8 , result ) ; if ( logger . METHOD_3 ( ) ) logger . trace ( ( STRING_3 + IDENT_8 ) ) ; return result ; }
org . junit . Assert . assertTrue ( IDENT_6 . hasNext ( ) ) 