METHOD_0 ( ) { try ( java . io . InputStream IDENT_0 = new java . io . ByteArrayInputStream ( IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . utils . IDENT_5 . IDENT_6 ) ) { try ( java . io . ByteArrayOutputStream IDENT_7 = new java . io . ByteArrayOutputStream ( ) ) { when ( input . METHOD_1 ( ) ) . thenReturn ( IDENT_0 ) ; when ( output . METHOD_2 ( ) ) . thenReturn ( IDENT_7 ) ; IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . utils . IDENT_8 . METHOD_3 ( input , output ) ; "<AssertPlaceHolder>" ; } } } METHOD_3 ( java . net . IDENT_9 , java . net . IDENT_9 ) { java . io . InputStream IDENT_0 = null ; java . io . IDENT_10 IDENT_7 = null ; try { IDENT_0 = IDENT_11 . METHOD_1 ( ) ; IDENT_7 = IDENT_12 . METHOD_2 ( ) ; final byte [ ] buf = new byte [ INT_0 ] ; int length ; while ( true ) { try { length = IDENT_0 . read ( buf ) ; if ( length > 0 ) { IDENT_7 . write ( buf , 0 , length ) ; IDENT_7 . METHOD_4 ( ) ; } else if ( length == ( - 1 ) ) { break ; } } catch ( final java . io . IDENT_13 IDENT_14 ) { } } } finally { try { IDENT_11 . METHOD_5 ( ) ; } catch ( final java . lang . Exception e ) { } try { IDENT_12 . METHOD_6 ( ) ; } catch ( final java . lang . Exception e ) { } } }
org . junit . Assert . assertArrayEquals ( IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . utils . IDENT_5 . IDENT_6 , IDENT_7 . toByteArray ( ) ) 