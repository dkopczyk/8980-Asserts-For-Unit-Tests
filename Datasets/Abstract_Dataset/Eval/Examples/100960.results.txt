METHOD_0 ( ) { final org . IDENT_0 . java . nio . file . Path file = METHOD_1 ( ) . get ( ( ( STRING_0 + ( METHOD_2 ( ) ) ) + STRING_1 ) ) ; { METHOD_3 ( 1 ) ; METHOD_1 ( ) . write ( file , STRING_2 , java . util . Collections . < org . IDENT_0 . java . nio . file . IDENT_1 > METHOD_4 ( ) , new org . IDENT_0 . java . nio . file . IDENT_2 . IDENT_3 < java . lang . Object > ( ) { @ org . IDENT_0 . ext . metadata . io . IDENT_4 . Override public java . lang . String name ( ) { return STRING_3 ; } @ org . IDENT_0 . ext . metadata . io . IDENT_4 . Override public java . lang . Object value ( ) { return STRING_4 ; } } ) ; METHOD_5 ( 1000 ) ; METHOD_3 ( 2 ) ; METHOD_1 ( ) . write ( file , STRING_2 , java . util . Collections . < org . IDENT_0 . java . nio . file . IDENT_1 > METHOD_4 ( ) , new org . IDENT_0 . java . nio . file . IDENT_2 . IDENT_3 < java . lang . Object > ( ) { @ org . IDENT_0 . ext . metadata . io . IDENT_4 . Override public java . lang . String name ( ) { return STRING_3 ; } @ org . IDENT_0 . ext . metadata . io . IDENT_4 . Override public java . lang . Object value ( ) { return STRING_5 ; } } ) ; METHOD_5 ( 1000 ) ; } java . util . List < org . IDENT_0 . ext . metadata . model . IDENT_5 > result = config . METHOD_6 ( ) . METHOD_7 ( java . util . Arrays . asList ( METHOD_8 ( ( ( METHOD_2 ( ) ) + STRING_6 ) ) ) , new org . apache . lucene . search . METHOD_9 ( ) , null , 0 ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_6 . size ( ) ; }
org . junit . Assert . assertEquals ( 1 , result . size ( ) ) 