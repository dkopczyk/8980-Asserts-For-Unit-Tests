METHOD_0 ( ) { final java . lang . Object [ ] data = new java . lang . Object [ ] { STRING_0 , STRING_1 } ; final java . util . List < java . lang . Object > list = java . util . Arrays . asList ( data ) ; final org . apache . commons . io . output . ByteArrayOutputStream IDENT_0 = new org . apache . commons . io . output . ByteArrayOutputStream ( ) ; final org . apache . commons . io . IDENT_1 . IDENT_2 out = new org . apache . commons . io . IDENT_1 . METHOD_1 ( IDENT_0 , false , true ) ; org . apache . commons . io . IDENT_3 . METHOD_2 ( list , null , out , STRING_2 ) ; out . METHOD_3 ( ) ; out . METHOD_4 ( ) ; final java . lang . String expected = ( ( STRING_0 + ( org . apache . commons . io . IDENT_3 . IDENT_4 ) ) + STRING_1 ) + ( org . apache . commons . io . IDENT_3 . IDENT_4 ) ; final java . lang . String actual = IDENT_0 . toString ( ) ; "<AssertPlaceHolder>" ; } toString ( ) { final java . lang . StringBuilder builder = new java . lang . StringBuilder ( ) ; builder . append ( getClass ( ) . METHOD_5 ( ) ) ; builder . append ( STRING_3 ) ; builder . append ( IDENT_5 ) ; builder . append ( STRING_4 ) ; for ( int i = 0 ; i < ( bytes . length ) ; i ++ ) { if ( i > 0 ) { builder . append ( STRING_5 ) ; } builder . append ( STRING_6 ) ; builder . append ( java . lang . Integer . METHOD_6 ( ( 255 & ( bytes [ i ] ) ) ) . METHOD_7 ( Locale . IDENT_6 ) ) ; } builder . append ( STRING_7 ) ; return builder . toString ( ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 