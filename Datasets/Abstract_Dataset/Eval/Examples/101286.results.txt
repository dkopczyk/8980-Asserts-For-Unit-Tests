METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_0 . IDENT_1 . impl . METHOD_1 ( STRING_0 ) ; org . IDENT_0 . client . workbench . IDENT_4 . impl . IDENT_5 IDENT_6 = mock ( org . IDENT_0 . client . workbench . IDENT_4 . impl . IDENT_5 . class ) ; when ( IDENT_7 . METHOD_2 ( IDENT_3 ) ) . thenReturn ( METHOD_3 ( ( ( org . IDENT_0 . client . workbench . IDENT_4 . impl . IDENT_8 ) ( IDENT_6 ) ) ) ) ; final org . IDENT_0 . client . workbench . IDENT_4 . impl . IDENT_9 IDENT_10 = mock ( org . IDENT_0 . client . workbench . IDENT_4 . impl . IDENT_9 . class ) ; when ( IDENT_10 . METHOD_4 ( IDENT_11 . IDENT_12 . name ( ) ) ) . thenReturn ( true ) ; when ( IDENT_7 . METHOD_5 ( IDENT_3 ) ) . thenReturn ( IDENT_10 ) ; when ( IDENT_6 . METHOD_4 ( IDENT_11 . IDENT_13 . name ( ) ) ) . thenReturn ( true ) ; IDENT_14 . METHOD_6 ( IDENT_3 , ( ( org . IDENT_0 . client . workbench . IDENT_4 . impl . IDENT_15 ) ( null ) ) ) ; IDENT_14 . METHOD_7 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_10 ) . METHOD_8 ( ) ; verify ( IDENT_7 ) . METHOD_9 ( IDENT_10 ) ; } METHOD_10 ( ) { throw new java . lang . METHOD_11 ( STRING_1 ) ; }
org . junit . Assert . assertTrue ( IDENT_14 . METHOD_10 ( ) . isEmpty ( ) ) 