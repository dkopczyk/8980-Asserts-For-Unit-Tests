METHOD_0 ( ) { org . drools . runtime . IDENT_0 IDENT_1 = IDENT_2 . METHOD_1 ( ) ; try { org . drools . IDENT_3 . rules . IDENT_4 IDENT_5 = new org . drools . IDENT_3 . rules . METHOD_2 ( STRING_0 ) ; org . drools . IDENT_3 . rules . IDENT_6 IDENT_7 = new org . drools . IDENT_3 . rules . METHOD_3 ( STRING_1 ) ; org . drools . IDENT_3 . rules . METHOD_3 IDENT_8 = new org . drools . IDENT_3 . rules . METHOD_3 ( STRING_2 ) ; org . drools . IDENT_3 . rules . METHOD_3 IDENT_9 = new org . drools . IDENT_3 . rules . METHOD_3 ( STRING_3 ) ; IDENT_5 . METHOD_4 ( new java . lang . String [ ] { STRING_4 , IDENT_7 . getId ( ) , STRING_5 , STRING_6 , IDENT_8 . getId ( ) , IDENT_9 . getId ( ) , STRING_7 } ) ; IDENT_1 . insert ( IDENT_5 ) ; IDENT_1 . insert ( IDENT_7 ) ; IDENT_1 . insert ( IDENT_8 ) ; IDENT_1 . insert ( IDENT_9 ) ; IDENT_1 . METHOD_5 ( ) ; for ( java . lang . String s : new java . lang . String [ ] { IDENT_7 . getId ( ) , IDENT_8 . getId ( ) , IDENT_9 . getId ( ) } ) { "<AssertPlaceHolder>" ; } } finally { IDENT_1 . METHOD_6 ( ) ; } } METHOD_7 ( ) { return IDENT_10 ; }
org . junit . Assert . assertTrue ( IDENT_5 . METHOD_7 ( ) . contains ( s ) ) 