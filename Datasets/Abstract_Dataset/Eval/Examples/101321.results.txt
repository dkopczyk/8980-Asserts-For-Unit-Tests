METHOD_0 ( ) { org . drools . io . IDENT_0 res = org . drools . io . IDENT_1 . METHOD_1 ( STRING_0 ) ; org . drools . IDENT_2 . builder . model . IDENT_3 results = factory . METHOD_2 ( STRING_1 , res , org . drools . IDENT_2 . builder . IDENT_4 . METHOD_3 ( IDENT_3 . IDENT_5 . IDENT_6 ) ) ; METHOD_4 ( results ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . drools . IDENT_2 . builder . model . IDENT_3 ) { boolean IDENT_7 = true ; for ( org . drools . IDENT_2 . builder . model . IDENT_8 IDENT_9 : results . METHOD_5 ( ) ) { for ( org . drools . IDENT_2 . builder . model . IDENT_8 IDENT_10 : results . METHOD_5 ( ) ) { boolean IDENT_11 = org . drools . util . IDENT_12 . METHOD_6 ( IDENT_10 . METHOD_7 ( ) , IDENT_9 . METHOD_7 ( ) ) ; boolean IDENT_13 = METHOD_8 ( IDENT_9 , IDENT_10 ) ; if ( IDENT_11 && ( ! IDENT_13 ) ) { IDENT_7 = false ; System . out . println ( ( ( ( STRING_2 + IDENT_10 ) + STRING_3 ) + IDENT_9 ) ) ; } if ( ( ! IDENT_11 ) && IDENT_13 ) { IDENT_7 = false ; System . out . println ( ( ( ( STRING_4 + IDENT_10 ) + STRING_3 ) + IDENT_9 ) ) ; } } } org . junit . Assert . assertTrue ( IDENT_7 ) ; return IDENT_7 ; }
org . junit . Assert . assertNotNull ( results ) 