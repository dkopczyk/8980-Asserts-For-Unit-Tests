METHOD_0 ( ) { final org . kie . server . controller . impl . service . IDENT_0 IDENT_1 = ( ( org . kie . server . controller . impl . service . IDENT_0 ) ( this . IDENT_1 ) ) ; final org . kie . server . controller . impl . service . IDENT_2 IDENT_3 = mock ( org . kie . server . controller . impl . service . IDENT_2 . class ) ; final org . kie . server . controller . impl . service . IDENT_4 IDENT_5 = mock ( org . kie . server . controller . impl . service . IDENT_4 . class ) ; final org . kie . server . controller . impl . service . IDENT_6 IDENT_7 = mock ( org . kie . server . controller . impl . service . IDENT_6 . class ) ; final java . util . List < ? > IDENT_8 = mock ( java . util . List . class ) ; doReturn ( IDENT_9 . IDENT_10 ) . when ( IDENT_3 ) . METHOD_1 ( ) ; doReturn ( IDENT_8 ) . when ( IDENT_11 ) . METHOD_2 ( IDENT_5 , IDENT_7 ) ; final java . util . List < org . kie . server . controller . api . model . runtime . IDENT_12 > IDENT_13 = IDENT_1 . METHOD_3 ( IDENT_3 , IDENT_5 , IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . kie . server . controller . impl . service . IDENT_2 , org . kie . server . controller . impl . service . IDENT_4 , org . kie . server . controller . impl . service . IDENT_6 ) { final java . lang . Long IDENT_14 = IDENT_3 . METHOD_4 ( ) ; final org . kie . server . api . model . IDENT_9 status = IDENT_3 . METHOD_1 ( ) ; switch ( status ) { case IDENT_15 : return IDENT_11 . METHOD_5 ( IDENT_5 , IDENT_7 , IDENT_14 ) ; case IDENT_10 : return IDENT_11 . METHOD_2 ( IDENT_5 , IDENT_7 ) ; default : return new java . util . ArrayList ( ) ; } }
org . junit . Assert . assertEquals ( IDENT_8 , IDENT_13 ) 