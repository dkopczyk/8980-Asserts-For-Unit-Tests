METHOD_0 ( ) { java . lang . String str = ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( STRING_0 + ( ( ( "\n" + STRING_1 ) + STRING_2 1 ) + STRING_3 ) ) + ( org . drools . compiler . IDENT_0 . IDENT_1 . IDENT_2 . class . METHOD_1 ( ) ) ) + "\n" ) + STRING_3 ) + ( org . drools . compiler . IDENT_0 . IDENT_1 . IDENT_3 . class . METHOD_1 ( ) ) ) + "\n" ) + STRING_3 ) + ( org . drools . compiler . IDENT_0 . IDENT_1 . IDENT_3 . class . METHOD_1 ( ) ) ) + "\n" ) + "\n" ) + STRING_2 ) + STRING_4 ) + STRING_2 4 ) + "\n" ) + STRING_5 ) + STRING_6 ) + STRING_2 3 ) + STRING_7 ) + STRING_2 0 ) + STRING_2 2 ) + STRING_2 4 ) + "\n" ) + STRING_8 ) + STRING_6 ) + STRING_9 ) + STRING_7 ) + STRING_2 4 ; org . kie . api . IDENT_4 IDENT_5 = METHOD_2 ( str ) ; org . kie . api . runtime . IDENT_6 IDENT_7 = IDENT_5 . METHOD_3 ( ) ; java . util . Map < org . drools . compiler . IDENT_0 . IDENT_1 . IDENT_2 , java . lang . Double > values = new java . util . METHOD_4 ( org . drools . compiler . IDENT_0 . IDENT_1 . IDENT_2 . class ) ; values . put ( org . drools . compiler . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_8 , FLOAT_0 ) ; org . drools . compiler . IDENT_0 . IDENT_1 . IDENT_3 data = new org . drools . compiler . IDENT_0 . IDENT_1 . METHOD_5 ( ) ; data . METHOD_6 ( values ) ; IDENT_7 . insert ( data ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ) { return 0 ; }
org . junit . Assert . assertEquals ( 2 , IDENT_7 . METHOD_7 ( ) ) 