METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 + ( ( ( ( ( ( ( STRING_1 + "" ) + "" ) + STRING_2 ) + STRING_3 ) + STRING_4 ) + STRING_5 0 ) + STRING_6 ) ; int IDENT_1 = INT_0 ; org . kie . api . IDENT_2 IDENT_3 = METHOD_1 ( IDENT_0 ) ; final org . kie . api . runtime . IDENT_4 IDENT_5 = IDENT_3 . METHOD_2 ( ) ; java . util . ArrayList list = new java . util . ArrayList ( ) ; IDENT_5 . METHOD_3 ( STRING_7 , list ) ; new java . lang . Thread ( IDENT_5 :: IDENT_6 ) . start ( ) ; try { for ( int j = 0 ; j < IDENT_1 ; j ++ ) { IDENT_5 . METHOD_4 ( STRING_8 ) . insert ( new java . lang . Integer ( j ) ) ; } java . lang . Thread . sleep ( 1000 ) ; } finally { IDENT_5 . METHOD_5 ( ) ; IDENT_5 . METHOD_6 ( ) ; "<AssertPlaceHolder>" ; } } size ( ) { return IDENT_7 . size ( ) ; }
org . junit . Assert . assertEquals ( IDENT_1 , list . size ( ) ) 