METHOD_0 ( ) { final java . lang . StringBuilder fields = new java . lang . StringBuilder ( ) ; for ( int i = 10 ; i < 100 ; i ++ ) { fields . append ( STRING_0 ) . append ( i ) . append ( STRING_1 ) ; } final java . lang . String str = ( ( ( ( ( ( ( ( ( ( ( ( STRING_2 2 + ( STRING_3 + STRING_4 ) ) + fields ) + STRING_2 3 ) + STRING_2 1 ) + STRING_5 ) + STRING_6 ) + STRING_2 3 ) + STRING_7 ) + STRING_8 ) + STRING_5 ) + STRING_9 ) + STRING_2 ) + STRING_2 3 ; final org . kie . api . runtime . IDENT_0 IDENT_1 = new org . kie . internal . utils . METHOD_1 ( ) . METHOD_2 ( str , IDENT_2 . IDENT_3 ) . build ( ) . METHOD_3 ( ) ; final java . util . List < java . lang . Integer > list = new java . util . ArrayList < java . lang . Integer > ( ) ; IDENT_1 . METHOD_4 ( STRING_2 0 , list ) ; IDENT_1 . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_4 . size ( ) ; }
org . junit . Assert . assertEquals ( 10 , list . size ( ) ) 