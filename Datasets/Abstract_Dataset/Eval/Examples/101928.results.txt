METHOD_0 ( ) { org . drools . IDENT_0 . IDENT_1 . IDENT_2 unit = org . drools . IDENT_0 . IDENT_1 . IDENT_3 . METHOD_1 ( STRING_0 , STRING_1 ) ; org . kie . api . runtime . rule . IDENT_4 executor = unit . METHOD_2 ( ) ; java . lang . reflect . IDENT_5 < ? > IDENT_6 = unit . METHOD_3 ( STRING_2 , java . lang . String . class , int . class ) ; java . lang . reflect . IDENT_5 < ? > IDENT_7 = unit . METHOD_3 ( STRING_3 , java . lang . String . class , int . class , int . class ) ; org . kie . api . runtime . rule . IDENT_8 < ? > IDENT_9 = executor . METHOD_4 ( STRING_4 , IDENT_6 . newInstance ( STRING_5 , INT_0 ) , IDENT_6 . newInstance ( STRING_6 , INT_1 ) , IDENT_7 . newInstance ( STRING_7 , 5 , 10 ) ) ; org . kie . api . runtime . rule . IDENT_10 IDENT_11 = unit . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } run ( org . junit . runner . IDENT_12 . IDENT_13 ) { for ( org . drools . workbench . models . IDENT_14 . shared . IDENT_15 IDENT_16 : IDENT_17 ) { METHOD_6 ( IDENT_18 , IDENT_16 ) ; } }
org . junit . Assert . assertEquals ( 3 , executor . run ( IDENT_11 ) ) 