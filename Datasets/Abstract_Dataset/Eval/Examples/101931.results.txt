METHOD_0 ( ) { org . drools . model . IDENT_0 < org . drools . IDENT_1 . IDENT_2 . model . IDENT_3 > IDENT_4 = any ( org . drools . IDENT_1 . IDENT_2 . model . IDENT_3 . class ) ; org . drools . model . IDENT_0 < org . drools . IDENT_1 . IDENT_2 . model . IDENT_5 > IDENT_6 = any ( org . drools . IDENT_1 . IDENT_2 . model . IDENT_5 . class ) ; org . drools . model . IDENT_0 < org . drools . IDENT_1 . IDENT_2 . model . IDENT_7 > IDENT_8 = any ( org . drools . IDENT_1 . IDENT_2 . model . IDENT_7 . class ) ; org . drools . model . IDENT_0 < org . drools . IDENT_1 . IDENT_2 . model . IDENT_9 > IDENT_10 = any ( org . drools . IDENT_1 . IDENT_2 . model . IDENT_9 . class ) ; org . drools . model . IDENT_11 IDENT_12 = rule ( STRING_0 ) . build ( expr ( IDENT_8 , ( s ) -> ! ( s . METHOD_1 ( ) ) ) , expr ( IDENT_8 , IDENT_6 , ( s , f ) -> s . METHOD_2 ( ) . equals ( f . METHOD_2 ( ) ) ) , METHOD_3 ( IDENT_8 ) . execute ( ( drools , s ) -> { System . out . println ( ( STRING_1 1 + ( s . METHOD_2 ( ) . getName ( ) ) ) ) ; s . METHOD_4 ( true ) ; drools . update ( s , STRING_1 0 ) ; } ) ) ; org . drools . model . IDENT_13 IDENT_14 = org . drools . model . IDENT_13 . METHOD_5 ( org . drools . IDENT_1 . IDENT_2 . model . IDENT_7 . class , STRING_1 0 ) ; org . drools . model . IDENT_11 IDENT_15 = rule ( STRING_2 ) . build ( expr ( IDENT_8 , IDENT_7 :: METHOD_1 ) , METHOD_6 ( IDENT_6 , IDENT_8 , ( f , s ) -> f . METHOD_2 ( ) . equals ( s . METHOD_2 ( ) ) ) , METHOD_3 ( IDENT_8 ) . execute ( ( drools , s ) -> { System . out . println ( ( STRING_3 + ( s . METHOD_2 ( ) . getName ( ) ) ) ) ; s . METHOD_4 ( false ) ; drools . update ( s , IDENT_14 ) ; } ) ) ; org . drools . model . IDENT_11 IDENT_16 = rule ( STRING_4 ) . build ( exists ( IDENT_6 ) , execute ( ( drools ) -> { System . out . println ( STRING_5 ) ; drools . insert ( new org . drools . IDENT_1 . IDENT_2 . model . METHOD_7 ( ) ) ; } ) ) ; org . drools . model . IDENT_11 IDENT_17 = rule ( STRING_1 ) . build ( METHOD_6 ( IDENT_6 ) , METHOD_3 ( IDENT_10 ) . execute ( ( drools , a ) -> { System . out . println ( STRING_6 ) ; drools . delete ( a ) ; } ) ) ; org . drools . model . IDENT_11 IDENT_18 = rule ( STRING_7 ) . build ( METHOD_6 ( IDENT_10 ) , METHOD_6 ( IDENT_8 , IDENT_7 :: METHOD_1 ) , execute ( ( ) -> System . out . println ( STRING_8 ) ) ) ; org . drools . model . IDENT_19 model = new org . drools . model . impl . METHOD_8 ( ) . METHOD_9 ( asList ( IDENT_12 , IDENT_15 , IDENT_16 , IDENT_17 , IDENT_18 ) ) ; org . kie . api . IDENT_20 IDENT_21 = org . drools . IDENT_1 . builder . IDENT_22 . METHOD_10 ( model ) ; org . kie . api . runtime . IDENT_23 IDENT_24 = IDENT_21 . METHOD_11 ( ) ; org . drools . IDENT_1 . IDENT_2 . model . IDENT_3 IDENT_25 = new org . drools . IDENT_1 . IDENT_2 . model . METHOD_12 ( STRING_9 ) ; IDENT_24 . insert ( IDENT_25 ) ; org . kie . api . runtime . rule . IDENT_26 IDENT_27 = IDENT_24 . insert ( new org . drools . IDENT_1 . IDENT_2 . model . METHOD_13 ( IDENT_25 ) ) ; IDENT_24 . METHOD_14 ( ) ; org . drools . IDENT_1 . IDENT_2 . model . IDENT_7 IDENT_28 = new org . drools . IDENT_1 . IDENT_2 . model . METHOD_15 ( IDENT_25 ) ; IDENT_24 . insert ( IDENT_28 ) ; IDENT_24 . METHOD_14 ( ) ; "<AssertPlaceHolder>" ; IDENT_24 . delete ( IDENT_27 ) ; IDENT_24 . METHOD_14 ( ) ; } METHOD_1 ( ) { return METHOD_3 ; }
org . junit . Assert . assertTrue ( IDENT_28 . METHOD_1 ( ) ) 