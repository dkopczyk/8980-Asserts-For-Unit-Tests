METHOD_0 ( ) { java . lang . StringBuffer rule = new java . lang . StringBuffer ( ) ; rule . append ( STRING_0 ) ; rule . append ( STRING_1 ) ; rule . append ( STRING_2 ) ; rule . append ( STRING_3 ) ; rule . append ( STRING_4 ) ; rule . append ( STRING_5 ) ; rule . append ( STRING_6 ) ; org . drools . IDENT_0 . data . IDENT_1 result = org . drools . IDENT_0 . data . IDENT_2 . METHOD_1 ( ) ; java . util . Collection < ? extends java . lang . Object > IDENT_3 = METHOD_2 ( new java . io . ByteArrayInputStream ( rule . toString ( ) . getBytes ( ) ) , result . METHOD_3 ( ) ) ; int IDENT_4 = 0 ; for ( java . lang . Object o : IDENT_3 ) { if ( o instanceof org . drools . IDENT_0 . components . IDENT_5 ) { org . drools . IDENT_0 . components . IDENT_5 IDENT_6 = ( ( org . drools . IDENT_0 . components . IDENT_5 ) ( o ) ) ; if ( ( IDENT_6 . METHOD_4 ( ) . size ( ) ) == 2 ) { IDENT_4 ++ ; } } } "<AssertPlaceHolder>" ; } size ( ) { return set . size ( ) ; }
org . junit . Assert . assertEquals ( 3 , IDENT_4 ) 