METHOD_0 ( ) { org . drools . workbench . models . IDENT_0 . shared . IDENT_1 IDENT_2 = new org . drools . workbench . models . IDENT_0 . shared . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( ) . METHOD_3 ( new org . kie . IDENT_3 . project . datamodel . IDENT_4 . METHOD_4 ( STRING_0 ) ) ; IDENT_2 . METHOD_5 ( ) . add ( new org . drools . workbench . models . IDENT_0 . shared . METHOD_6 ( STRING_1 , STRING_2 , java . util . Arrays . < org . drools . workbench . models . IDENT_0 . shared . Field > asList ( new org . drools . workbench . models . IDENT_0 . shared . METHOD_7 ( STRING_3 1 , "1" ) ) , false ) ) ; org . drools . workbench . models . IDENT_0 . shared . IDENT_5 ex = new org . drools . workbench . models . IDENT_0 . shared . METHOD_8 ( ) ; IDENT_2 . METHOD_5 ( ) . add ( ex ) ; IDENT_2 . METHOD_5 ( ) . add ( new org . drools . workbench . models . IDENT_0 . shared . METHOD_6 ( STRING_1 , STRING_4 , java . util . Arrays . < org . drools . workbench . models . IDENT_0 . shared . Field > asList ( new org . drools . workbench . models . IDENT_0 . shared . METHOD_7 ( STRING_3 1 , "2" ) ) , false ) ) ; IDENT_2 . METHOD_5 ( ) . add ( new org . drools . workbench . models . IDENT_0 . shared . METHOD_9 ( STRING_2 , METHOD_10 ( new org . drools . workbench . models . IDENT_0 . shared . METHOD_11 ( STRING_5 , STRING_3 0 , STRING_6 ) ) ) ) ; ex = new org . drools . workbench . models . IDENT_0 . shared . METHOD_8 ( ) ; IDENT_2 . METHOD_5 ( ) . add ( ex ) ; IDENT_2 . METHOD_5 ( ) . add ( new org . drools . workbench . models . IDENT_0 . shared . METHOD_9 ( STRING_2 , METHOD_10 ( new org . drools . workbench . models . IDENT_0 . shared . METHOD_11 ( STRING_5 , STRING_7 , STRING_6 ) ) ) ) ; org . kie . api . runtime . IDENT_6 IDENT_7 = METHOD_12 ( STRING_3 ) ; org . drools . workbench . models . IDENT_0 . backend . IDENT_8 run = new org . drools . workbench . models . IDENT_0 . backend . METHOD_13 ( IDENT_7 ) ; run . run ( IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_14 ( ) { for ( org . drools . workbench . models . IDENT_0 . shared . METHOD_11 IDENT_9 : IDENT_10 ) { if ( ! ( IDENT_9 . METHOD_15 ( ) . METHOD_16 ( ) ) ) { return false ; } } return true ; }
org . junit . Assert . assertTrue ( IDENT_2 . METHOD_14 ( ) ) 