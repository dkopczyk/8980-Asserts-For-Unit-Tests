METHOD_0 ( ) { final org . kie . IDENT_0 . model . api . IDENT_1 IDENT_2 = METHOD_1 ( STRING_0 , "a" , "b" , STRING_1 ) ; final org . kie . IDENT_0 . core . ast . IDENT_3 a = METHOD_2 ( IDENT_2 , "a" ) ; final org . kie . IDENT_0 . core . ast . IDENT_3 b = METHOD_2 ( IDENT_2 , "b" ) ; final org . kie . IDENT_0 . core . ast . IDENT_3 c = METHOD_2 ( IDENT_2 , STRING_1 ) ; a . METHOD_3 ( STRING_1 , c ) ; b . METHOD_3 ( STRING_1 , c ) ; final org . kie . IDENT_0 . core . impl . IDENT_4 model = new org . kie . IDENT_0 . core . impl . METHOD_4 ( IDENT_2 ) ; model . METHOD_5 ( IDENT_2 ) ; model . METHOD_6 ( a ) ; model . METHOD_6 ( b ) ; model . METHOD_6 ( c ) ; final org . kie . IDENT_0 . api . core . IDENT_5 runtime = org . kie . IDENT_0 . core . util . IDENT_6 . METHOD_7 ( this . getClass ( ) ) ; final org . kie . IDENT_0 . api . core . IDENT_7 result = runtime . METHOD_8 ( model , org . kie . IDENT_0 . core . api . IDENT_8 . METHOD_9 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( ) { return messages . stream ( ) . METHOD_11 ( ( m ) -> IDENT_9 . IDENT_10 . IDENT_11 . equals ( m . METHOD_12 ( ) ) ) ; }
org . junit . Assert . assertFalse ( result . METHOD_10 ( ) ) 