METHOD_0 ( ) { org . drools . workbench . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 IDENT_4 = METHOD_1 ( ) ; final org . IDENT_5 . backend . IDENT_6 . Path IDENT_7 = mock ( org . IDENT_5 . backend . IDENT_6 . Path . class ) ; final java . lang . String IDENT_8 = "test" ; doReturn ( IDENT_4 ) . when ( IDENT_9 ) . METHOD_1 ( any ( ) , any ( ) ) ; final org . drools . workbench . IDENT_0 . IDENT_1 . model . IDENT_10 IDENT_11 = IDENT_9 . METHOD_0 ( IDENT_7 , IDENT_8 ) ; "<AssertPlaceHolder>" ; } METHOD_0 ( org . IDENT_5 . backend . IDENT_6 . Path , java . lang . String ) { final org . drools . workbench . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 IDENT_4 = METHOD_1 ( context , IDENT_8 ) ; org . drools . workbench . IDENT_0 . IDENT_1 . model . IDENT_10 IDENT_12 = new org . drools . workbench . IDENT_0 . IDENT_1 . model . METHOD_2 ( ) ; org . drools . workbench . IDENT_0 . IDENT_1 . model . IDENT_13 IDENT_14 = IDENT_12 . METHOD_3 ( ) ; IDENT_14 . METHOD_4 ( IDENT_15 . Type . IDENT_16 ) ; IDENT_14 . METHOD_5 ( IDENT_8 ) ; org . drools . workbench . IDENT_0 . IDENT_1 . model . IDENT_17 IDENT_18 = METHOD_6 ( IDENT_12 , IDENT_14 ) ; int row = IDENT_12 . METHOD_7 ( ) . indexOf ( IDENT_18 ) ; java . util . concurrent . atomic . IDENT_19 id = new java . util . concurrent . atomic . METHOD_8 ( 1 ) ; final java . util . Collection < org . drools . workbench . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_20 > IDENT_21 = IDENT_4 . METHOD_9 ( ) . values ( ) ; final java . util . Map < java . lang . String , org . drools . workbench . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_20 > IDENT_22 = IDENT_4 . METHOD_10 ( ) ; IDENT_21 . stream ( ) . METHOD_11 ( ( a , b ) -> { org . drools . workbench . IDENT_0 . IDENT_1 . backend . server . util . Type IDENT_23 = a . getType ( ) ; org . drools . workbench . IDENT_0 . IDENT_1 . backend . server . util . Type IDENT_24 = b . getType ( ) ; return IDENT_23 . equals ( IDENT_24 ) ? 0 : Type . IDENT_25 . equals ( IDENT_23 ) ? - 1 : 1 ; } ) . METHOD_12 ( ( IDENT_26 ) -> { org . drools . workbench . IDENT_0 . IDENT_1 . model . IDENT_27 IDENT_28 = new org . drools . workbench . IDENT_0 . IDENT_1 . model . METHOD_13 ( IDENT_26 . METHOD_14 ( ) , IDENT_26 . METHOD_14 ( ) ) ; org . drools . workbench . IDENT_0 . IDENT_1 . backend . server . util . IDENT_29 IDENT_30 = new org . drools . workbench . IDENT_0 . IDENT_1 . backend . server . util . METHOD_15 ( IDENT_28 , row , id , convert ( IDENT_26 . getType ( ) ) , IDENT_14 , IDENT_18 ) ; METHOD_16 ( IDENT_30 , IDENT_26 , new org . drools . workbench . IDENT_0 . IDENT_1 . backend . server . util . ArrayList < > ( ) , IDENT_22 ) ; } ) ; return IDENT_12 ; }
org . junit . Assert . assertNotNull ( IDENT_11 ) 