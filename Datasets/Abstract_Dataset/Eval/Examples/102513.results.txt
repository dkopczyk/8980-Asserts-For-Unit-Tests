METHOD_0 ( ) { org . kie . workbench . common . widgets . client . datamodel . IDENT_0 IDENT_1 = new org . kie . workbench . common . widgets . client . datamodel . METHOD_1 ( IDENT_2 , IDENT_3 ) ; IDENT_1 . METHOD_2 ( STRING_0 ) ; IDENT_1 . METHOD_3 ( new java . util . HashMap < java . lang . String , org . kie . IDENT_4 . project . datamodel . IDENT_1 . IDENT_5 [ ] > ( ) { { put ( STRING_1 , new org . kie . IDENT_4 . project . datamodel . IDENT_1 . IDENT_5 [ ] { METHOD_4 ( STRING_2 , STRING_1 ) } ) ; put ( STRING_3 , new org . kie . IDENT_4 . project . datamodel . IDENT_1 . IDENT_5 [ ] { METHOD_4 ( STRING_2 , STRING_3 ) } ) ; } } ) ; IDENT_1 . METHOD_5 ( new java . util . HashMap < java . lang . String , java . lang . Boolean > ( ) { { put ( STRING_1 , false ) ; put ( STRING_3 , true ) ; } } ) ; IDENT_1 . METHOD_6 ( new java . util . HashMap < java . lang . String , java . util . List < java . lang . String > > ( ) { { put ( STRING_1 , Collections . IDENT_6 ) ; put ( STRING_3 , Collections . IDENT_6 ) ; } } ) ; IDENT_1 . filter ( ) ; org . drools . workbench . models . datamodel . rule . IDENT_7 IDENT_8 = new org . drools . workbench . models . datamodel . rule . METHOD_7 ( ) ; IDENT_8 . METHOD_8 ( STRING_4 ) ; IDENT_8 . METHOD_9 ( STRING_5 ) ; org . drools . workbench . models . datamodel . rule . IDENT_9 IDENT_10 = new org . drools . workbench . models . datamodel . rule . METHOD_10 ( ) ; IDENT_10 . METHOD_8 ( STRING_4 ) ; IDENT_10 . METHOD_11 ( STRING_2 ) ; IDENT_10 . METHOD_12 ( STRING_4 ) ; IDENT_10 . METHOD_13 ( org . kie . IDENT_4 . project . datamodel . IDENT_1 . IDENT_11 . IDENT_12 [ 0 ] ) ; IDENT_8 . METHOD_14 ( IDENT_10 ) ; model . METHOD_15 ( IDENT_8 ) ; org . drools . workbench . IDENT_13 . IDENT_14 . rule . client . IDENT_15 . util . IDENT_16 helper = new org . drools . workbench . IDENT_13 . IDENT_14 . rule . client . IDENT_15 . util . METHOD_16 ( model , IDENT_1 , STRING_6 , STRING_2 , IDENT_10 , STRING_6 , new org . kie . IDENT_4 . project . datamodel . IDENT_1 . METHOD_17 ( ) ) ; helper . METHOD_18 ( STRING_5 , new org . IDENT_17 . client . IDENT_18 . IDENT_19 < java . lang . Boolean > ( ) { @ org . drools . workbench . IDENT_13 . IDENT_14 . rule . client . IDENT_15 . Override public void METHOD_19 ( java . lang . Boolean result ) { "<AssertPlaceHolder>" ; } } ) ; } METHOD_19 ( org . kie . IDENT_4 . project . datamodel . IDENT_1 . IDENT_5 [ ] ) { for ( org . kie . IDENT_4 . project . datamodel . IDENT_1 . IDENT_5 field : fields ) { final java . lang . String IDENT_20 = field . getName ( ) ; if ( ! ( IDENT_21 . METHOD_20 ( IDENT_20 ) ) ) { IDENT_22 . METHOD_21 ( IDENT_20 ) ; } } }
org . junit . Assert . assertFalse ( result ) 