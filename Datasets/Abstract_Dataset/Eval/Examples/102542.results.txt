METHOD_0 ( ) { java . lang . String str = STRING_0 ; str += STRING_1 ; str += STRING_2 ; org . kie . api . task . model . IDENT_0 task = org . IDENT_1 . services . task . impl . IDENT_2 . IDENT_3 . METHOD_1 ( new java . io . METHOD_2 ( str ) ) ; java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; for ( int i = 0 ; i < 1000 ; i ++ ) { sb . append ( "a" ) ; } java . lang . String IDENT_4 = sb . toString ( ) ; java . util . List < org . kie . api . task . model . IDENT_5 > IDENT_6 = new java . util . ArrayList < org . kie . api . task . model . IDENT_5 > ( ) ; org . kie . api . task . model . IDENT_5 IDENT_7 = org . kie . internal . task . api . IDENT_8 . METHOD_3 ( ) . METHOD_4 ( ) ; ( ( org . kie . internal . task . api . model . IDENT_9 ) ( IDENT_7 ) ) . METHOD_5 ( STRING_3 ) ; ( ( org . kie . internal . task . api . model . IDENT_9 ) ( IDENT_7 ) ) . METHOD_6 ( IDENT_4 ) ; IDENT_6 . add ( IDENT_7 ) ; ( ( org . kie . internal . task . api . model . IDENT_10 ) ( task ) ) . METHOD_7 ( IDENT_6 ) ; IDENT_11 . METHOD_8 ( task , new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ) ; long IDENT_12 = task . getId ( ) ; org . kie . api . task . model . IDENT_0 IDENT_13 = IDENT_11 . METHOD_9 ( IDENT_12 ) ; java . util . List < org . kie . api . task . model . IDENT_5 > IDENT_14 = IDENT_13 . METHOD_10 ( ) ; org . kie . internal . task . api . model . IDENT_9 IDENT_15 = ( ( org . kie . internal . task . api . model . IDENT_9 ) ( IDENT_14 . get ( 0 ) ) ) ; "<AssertPlaceHolder>" ; } getText ( ) { return text ; }
org . junit . Assert . assertEquals ( 1000 , IDENT_15 . getText ( ) . length ( ) ) 