METHOD_0 ( ) { METHOD_1 ( ) ; IDENT_0 . METHOD_2 ( trace ) ; try { verify ( IDENT_1 , times ( 1 ) ) . METHOD_3 ( IDENT_2 , trace ) ; } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( e . getMessage ( ) ) ; } org . IDENT_3 . IDENT_4 . pipeline . IDENT_5 . IDENT_6 result = IDENT_0 . METHOD_4 ( org . IDENT_3 . IDENT_4 . registry . IDENT_7 . IDENT_8 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . IDENT_3 . IDENT_4 . runtime . IDENT_9 ) { METHOD_5 ( STRING_0 , IDENT_10 ) ; return IDENT_11 . values ( ) . stream ( ) . filter ( ( trace ) -> ( ( trace . METHOD_6 ( ) . METHOD_7 ( ) ) instanceof org . IDENT_3 . IDENT_4 . runtime . IDENT_9 ) && ( IDENT_10 . getId ( ) . equals ( ( ( org . IDENT_3 . IDENT_4 . runtime . IDENT_9 ) ( trace . METHOD_6 ( ) . METHOD_7 ( ) ) ) . getId ( ) ) ) ) . METHOD_8 ( ) . METHOD_9 ( null ) ; }
org . junit . Assert . assertEquals ( trace , result ) 