METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final org . kie . workbench . common . IDENT_1 . client . IDENT_2 . IDENT_3 IDENT_4 = new org . kie . workbench . common . IDENT_1 . client . IDENT_2 . METHOD_1 ( IDENT_0 , STRING_1 , null , null , null ) ; final org . kie . workbench . common . IDENT_1 . client . IDENT_2 . METHOD_1 IDENT_5 = new org . kie . workbench . common . IDENT_1 . client . IDENT_2 . METHOD_1 ( IDENT_0 , STRING_1 , null , null , null ) ; final java . util . Map < java . lang . String , org . kie . workbench . common . IDENT_1 . client . IDENT_2 . METHOD_1 > IDENT_6 = new java . util . HashMap < java . lang . String , org . kie . workbench . common . IDENT_1 . client . IDENT_2 . METHOD_1 > ( ) { { put ( IDENT_0 , IDENT_5 ) ; } } ; doReturn ( IDENT_6 ) . when ( IDENT_7 ) . METHOD_2 ( ) ; final boolean IDENT_8 = IDENT_7 . METHOD_3 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . kie . workbench . common . IDENT_1 . client . IDENT_2 . METHOD_1 ) { final org . kie . workbench . common . IDENT_1 . client . IDENT_2 . METHOD_1 IDENT_9 = METHOD_2 ( ) . get ( item . METHOD_4 ( ) ) ; return ! ( item . equals ( IDENT_9 ) ) ; }
org . junit . Assert . assertFalse ( METHOD_3 ) 