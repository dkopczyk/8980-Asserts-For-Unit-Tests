METHOD_0 ( ) { final double [ ] IDENT_0 = new double [ ] { - FLOAT_0 } ; final double [ ] [ ] IDENT_1 = new double [ ] [ ] { new double [ ] { 1 } } ; final org . apache . commons . math4 . IDENT_2 . IDENT_3 IDENT_4 = new org . apache . commons . math4 . IDENT_2 . METHOD_1 ( IDENT_0 , IDENT_1 ) ; final org . apache . commons . IDENT_5 . IDENT_2 . IDENT_6 IDENT_7 = new org . apache . commons . IDENT_5 . IDENT_2 . METHOD_2 ( IDENT_0 [ 0 ] , IDENT_1 [ 0 ] [ 0 ] ) ; final java . util . IDENT_8 IDENT_9 = new java . util . METHOD_3 ( ) ; final int IDENT_10 = 100 ; final double IDENT_11 = java . lang . Math . METHOD_4 ( 1.0 ) ; for ( int i = 0 ; i < IDENT_10 ; i ++ ) { final double v = ( ( IDENT_9 . METHOD_5 ( ) ) * 10 ) - 5 ; "<AssertPlaceHolder>" ; } } METHOD_6 ( double ) { return METHOD_7 ( x ) ; }
org . junit . Assert . assertEquals ( IDENT_7 . METHOD_6 ( v ) , IDENT_4 . METHOD_6 ( new double [ ] { v } ) , IDENT_11 ) 