METHOD_0 ( ) { final com . google . IDENT_0 . json . client . JSONObject IDENT_1 = mock ( com . google . IDENT_0 . json . client . JSONObject . class ) ; doReturn ( IDENT_1 ) . when ( IDENT_2 ) . METHOD_1 ( ) ; final com . google . IDENT_0 . json . client . JSONObject IDENT_3 = IDENT_2 . METHOD_2 ( ) ; verify ( IDENT_1 ) . put ( STRING_0 , new com . google . IDENT_0 . json . client . METHOD_3 ( "" ) ) ; verify ( IDENT_1 ) . put ( STRING_1 , new com . google . IDENT_0 . json . client . METHOD_3 ( "" ) ) ; verify ( IDENT_1 ) . put ( STRING_2 , new com . google . IDENT_0 . json . client . METHOD_3 ( "" ) ) ; verify ( IDENT_1 ) . put ( STRING_3 , new com . google . IDENT_0 . json . client . METHOD_3 ( "" ) ) ; "<AssertPlaceHolder>" ; } put ( org . kie . workbench . common . IDENT_4 . IDENT_5 . management . model . IDENT_6 , org . kie . workbench . common . IDENT_4 . IDENT_5 . management . model . IDENT_7 ) { org . kie . workbench . common . IDENT_4 . IDENT_5 . management . backend . core . IDENT_8 entry = new org . kie . workbench . common . IDENT_4 . IDENT_5 . management . backend . core . METHOD_4 ( IDENT_9 ) ; IDENT_10 . put ( IDENT_11 , entry ) ; return entry ; }
org . junit . Assert . assertEquals ( IDENT_1 , IDENT_3 ) 