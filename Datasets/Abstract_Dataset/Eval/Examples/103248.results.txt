METHOD_0 ( ) { final org . kie . workbench . common . IDENT_0 . api . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = mock ( org . kie . workbench . common . IDENT_0 . api . IDENT_1 . IDENT_2 . IDENT_3 . class ) ; final org . kie . workbench . common . IDENT_0 . api . IDENT_1 . IDENT_2 . IDENT_5 IDENT_6 = METHOD_1 ( ) ; final java . util . List < org . kie . workbench . common . IDENT_0 . api . IDENT_1 . IDENT_2 . IDENT_5 > IDENT_7 = singletonList ( IDENT_6 ) ; when ( IDENT_8 . METHOD_2 ( ) ) . thenReturn ( IDENT_4 ) ; when ( IDENT_4 . METHOD_3 ( ) ) . thenReturn ( IDENT_7 ) ; final java . util . List < org . kie . workbench . common . IDENT_0 . api . IDENT_1 . IDENT_2 . IDENT_5 > IDENT_9 = handler . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { final java . util . Optional < org . kie . workbench . common . IDENT_0 . api . IDENT_1 . IDENT_2 . IDENT_3 > IDENT_4 = java . util . Optional . METHOD_5 ( IDENT_8 . METHOD_2 ( ) ) ; if ( IDENT_4 . METHOD_6 ( ) ) { return IDENT_4 . get ( ) . METHOD_3 ( ) ; } return new java . util . ArrayList ( ) ; }
org . junit . Assert . assertEquals ( IDENT_7 , IDENT_9 ) 