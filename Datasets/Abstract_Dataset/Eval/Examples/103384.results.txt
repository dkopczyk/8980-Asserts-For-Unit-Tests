METHOD_0 ( ) { final org . IDENT_0 . backend . IDENT_1 . Path path = mock ( org . IDENT_0 . backend . IDENT_1 . Path . class ) ; final org . IDENT_0 . backend . IDENT_1 . Path IDENT_2 = mock ( org . IDENT_0 . backend . IDENT_1 . Path . class ) ; final org . IDENT_3 . common . services . shared . metadata . model . IDENT_4 metadata = mock ( org . IDENT_3 . common . services . shared . metadata . model . IDENT_4 . class ) ; final org . kie . workbench . common . IDENT_5 . IDENT_6 . model . persistence . IDENT_7 content = mock ( org . kie . workbench . common . IDENT_5 . IDENT_6 . model . persistence . IDENT_7 . class ) ; final java . lang . String IDENT_8 = STRING_0 ; final java . lang . String IDENT_9 = STRING_1 ; doReturn ( IDENT_2 ) . when ( IDENT_10 ) . METHOD_1 ( path , IDENT_8 , metadata , content , IDENT_9 ) ; final org . IDENT_0 . backend . IDENT_1 . Path IDENT_11 = service . METHOD_1 ( path , IDENT_8 , metadata , content , IDENT_9 ) ; verify ( IDENT_10 ) . METHOD_1 ( path , IDENT_8 , metadata , content , IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( org . IDENT_0 . backend . IDENT_1 . Path , java . lang . String , org . IDENT_3 . common . services . shared . metadata . model . IDENT_4 , java . lang . String , java . lang . String ) { return IDENT_10 . METHOD_1 ( path , IDENT_12 , metadata , content , IDENT_9 ) ; }
org . junit . Assert . assertEquals ( IDENT_2 , IDENT_11 ) 