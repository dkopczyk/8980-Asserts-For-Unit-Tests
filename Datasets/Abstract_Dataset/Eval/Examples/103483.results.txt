METHOD_0 ( ) { final org . kie . workbench . common . services . shared . IDENT_0 . IDENT_1 IDENT_2 = new org . kie . workbench . common . services . shared . IDENT_0 . METHOD_1 ( ) ; final org . kie . workbench . common . services . shared . IDENT_0 . IDENT_3 IDENT_4 = new org . kie . workbench . common . services . shared . IDENT_0 . METHOD_2 ( ) ; IDENT_4 . METHOD_3 ( true ) ; final org . kie . workbench . common . IDENT_5 . library . client . IDENT_6 . IDENT_7 . IDENT_8 . item . IDENT_9 . IDENT_10 IDENT_11 = mock ( org . kie . workbench . common . IDENT_5 . library . client . IDENT_6 . IDENT_7 . IDENT_8 . item . IDENT_9 . IDENT_10 . class ) ; doReturn ( IDENT_2 ) . when ( IDENT_11 ) . METHOD_4 ( ) ; IDENT_12 . IDENT_11 = IDENT_11 ; IDENT_12 . IDENT_4 = IDENT_4 ; final org . kie . workbench . common . services . shared . IDENT_0 . METHOD_2 IDENT_13 = new org . kie . workbench . common . services . shared . IDENT_0 . METHOD_2 ( ) ; IDENT_13 . setName ( STRING_0 ) ; IDENT_12 . METHOD_5 ( new org . kie . workbench . common . IDENT_5 . library . client . IDENT_6 . IDENT_7 . IDENT_8 . item . IDENT_9 . METHOD_6 ( IDENT_2 , IDENT_13 ) ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ) { return true ; }
org . junit . Assert . assertEquals ( false , IDENT_4 . METHOD_7 ( ) ) 