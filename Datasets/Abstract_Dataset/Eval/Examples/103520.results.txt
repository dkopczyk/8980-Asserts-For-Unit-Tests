METHOD_0 ( ) { final org . kie . workbench . common . IDENT_0 . IDENT_1 . model . IDENT_2 IDENT_3 = new org . kie . workbench . common . IDENT_0 . IDENT_1 . model . METHOD_1 ( 10 , 10 ) ; try { METHOD_2 ( IDENT_3 ) . when ( IDENT_4 ) . METHOD_3 ( IDENT_5 ) ; service . save ( IDENT_6 , IDENT_5 , IDENT_7 , IDENT_8 , IDENT_9 . IDENT_10 ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( final org . kie . workbench . common . IDENT_0 . IDENT_1 . model . METHOD_1 e ) { "<AssertPlaceHolder>" ; } verify ( IDENT_11 , times ( 1 ) ) . METHOD_4 ( IDENT_6 ) ; verify ( IDENT_12 , METHOD_5 ( ) ) . load ( IDENT_13 ) ; verify ( IDENT_14 , METHOD_5 ( ) ) . METHOD_6 ( eq ( IDENT_5 ) , any ( org . IDENT_15 . common . services . project . model . IDENT_16 . class ) ) ; verify ( IDENT_17 , METHOD_5 ( ) ) . METHOD_7 ( any ( ) ) ; verify ( IDENT_17 , METHOD_5 ( ) ) . write ( any ( org . IDENT_18 . backend . IDENT_19 . Path . class ) , eq ( IDENT_5 ) , eq ( attributes ) , any ( org . IDENT_18 . java . nio . base . options . IDENT_20 . class ) ) ; verify ( IDENT_17 , METHOD_5 ( ) ) . METHOD_8 ( ) ; } save ( org . IDENT_18 . backend . IDENT_19 . Path , java . lang . String , org . IDENT_15 . common . services . shared . metadata . model . IDENT_21 , java . lang . String , org . IDENT_15 . common . services . project . service . IDENT_9 ) { if ( IDENT_9 . IDENT_10 . equals ( IDENT_22 ) ) { METHOD_9 ( IDENT_6 , IDENT_5 ) ; } try { final org . IDENT_18 . java . nio . file . Path IDENT_23 = org . IDENT_18 . backend . server . util . IDENT_24 . convert ( IDENT_6 ) ; IDENT_17 . METHOD_7 ( IDENT_23 . METHOD_10 ( ) ) ; IDENT_17 . write ( IDENT_23 , IDENT_5 , IDENT_25 . METHOD_11 ( IDENT_6 , metadata ) , IDENT_26 . METHOD_12 ( IDENT_8 ) ) ; return IDENT_6 ; } catch ( java . lang . Exception e ) { throw org . IDENT_15 . common . services . backend . exceptions . IDENT_27 . METHOD_13 ( e ) ; } finally { IDENT_17 . METHOD_8 ( ) ; } }
org . junit . Assert . assertEquals ( IDENT_3 , e ) 