METHOD_0 ( ) { final org . kie . workbench . common . IDENT_0 . core . graph . IDENT_1 . layout . IDENT_2 . IDENT_3 graph = new org . kie . workbench . common . IDENT_0 . core . graph . IDENT_1 . layout . IDENT_2 . METHOD_1 ( ) ; graph . METHOD_2 ( STRING_0 , STRING_1 ) ; graph . METHOD_2 ( STRING_0 , STRING_2 ) ; graph . METHOD_2 ( STRING_1 , STRING_3 ) ; graph . METHOD_2 ( STRING_2 , STRING_4 ) ; graph . METHOD_2 ( STRING_2 , STRING_5 ) ; graph . METHOD_2 ( STRING_2 , STRING_6 ) ; graph . METHOD_2 ( STRING_1 , STRING_7 ) ; graph . METHOD_2 ( STRING_6 , STRING_7 ) ; graph . METHOD_2 ( STRING_5 , STRING_7 ) ; final org . kie . workbench . common . IDENT_0 . core . graph . IDENT_1 . layout . IDENT_2 . IDENT_4 . IDENT_5 IDENT_6 = new org . kie . workbench . common . IDENT_0 . core . graph . IDENT_1 . layout . IDENT_2 . IDENT_4 . METHOD_3 ( ) ; IDENT_6 . METHOD_4 ( graph ) ; final java . util . List < org . kie . workbench . common . IDENT_0 . core . graph . IDENT_1 . layout . IDENT_2 . IDENT_7 > result = graph . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; final org . kie . workbench . common . IDENT_0 . core . graph . IDENT_1 . layout . IDENT_2 . IDENT_7 IDENT_8 = result . get ( 0 ) ; org . kie . workbench . common . IDENT_0 . core . graph . IDENT_1 . layout . IDENT_2 . IDENT_4 . IDENT_9 . match ( new java . lang . String [ ] { STRING_0 } , IDENT_8 ) ; final org . kie . workbench . common . IDENT_0 . core . graph . IDENT_1 . layout . IDENT_2 . IDENT_7 IDENT_10 = result . get ( 1 ) ; org . kie . workbench . common . IDENT_0 . core . graph . IDENT_1 . layout . IDENT_2 . IDENT_4 . IDENT_9 . match ( new java . lang . String [ ] { STRING_2 } , IDENT_10 ) ; final org . kie . workbench . common . IDENT_0 . core . graph . IDENT_1 . layout . IDENT_2 . IDENT_7 IDENT_11 = result . get ( 2 ) ; org . kie . workbench . common . IDENT_0 . core . graph . IDENT_1 . layout . IDENT_2 . IDENT_4 . IDENT_9 . match ( new java . lang . String [ ] { STRING_1 , STRING_5 , STRING_6 } , IDENT_11 ) ; final org . kie . workbench . common . IDENT_0 . core . graph . IDENT_1 . layout . IDENT_2 . IDENT_7 IDENT_12 = result . get ( 3 ) ; org . kie . workbench . common . IDENT_0 . core . graph . IDENT_1 . layout . IDENT_2 . IDENT_4 . IDENT_9 . match ( new java . lang . String [ ] { STRING_3 , STRING_7 , STRING_4 } , IDENT_12 ) ; } size ( ) { return index . size ( ) ; }
org . junit . Assert . assertEquals ( 4 , result . size ( ) ) 