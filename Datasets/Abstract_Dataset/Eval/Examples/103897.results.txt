METHOD_0 ( ) { final org . IDENT_0 . backend . IDENT_1 . Path path = mock ( org . IDENT_0 . backend . IDENT_1 . Path . class ) ; final org . IDENT_2 . common . services . shared . metadata . model . IDENT_3 metadata = mock ( org . IDENT_2 . common . services . shared . metadata . model . IDENT_3 . class ) ; final org . kie . workbench . common . IDENT_4 . project . IDENT_5 . IDENT_6 IDENT_7 = mock ( org . kie . workbench . common . IDENT_4 . project . IDENT_5 . IDENT_6 . class ) ; final org . IDENT_0 . backend . IDENT_1 . Path IDENT_8 = mock ( org . IDENT_0 . backend . IDENT_1 . Path . class ) ; final org . kie . workbench . common . IDENT_4 . project . IDENT_9 . IDENT_10 resource = new org . kie . workbench . common . IDENT_4 . project . IDENT_9 . impl . METHOD_1 ( IDENT_7 ) ; final java . lang . String IDENT_11 = STRING_0 ; when ( IDENT_12 . save ( path , IDENT_7 , metadata , IDENT_11 ) ) . thenReturn ( IDENT_8 ) ; final org . IDENT_0 . backend . IDENT_1 . Path IDENT_13 = service . save ( path , resource , metadata , IDENT_11 ) ; "<AssertPlaceHolder>" ; } save ( org . IDENT_0 . backend . IDENT_1 . Path , org . kie . workbench . common . IDENT_14 . IDENT_9 . model . IDENT_15 , org . IDENT_2 . common . services . shared . metadata . model . IDENT_3 , java . lang . String ) { IDENT_16 . write ( org . IDENT_0 . backend . server . util . IDENT_17 . convert ( path ) , IDENT_18 . serialize ( content . METHOD_2 ( ) ) , IDENT_19 . METHOD_3 ( path , metadata ) , IDENT_20 . METHOD_4 ( IDENT_11 ) ) ; return path ; }
org . junit . Assert . assertSame ( IDENT_8 , IDENT_13 ) 