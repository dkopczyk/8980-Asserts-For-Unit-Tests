METHOD_0 ( ) { org . IDENT_0 . common . services . shared . metadata . model . IDENT_1 metadata = mock ( org . IDENT_0 . common . services . shared . metadata . model . IDENT_1 . class ) ; java . lang . String IDENT_2 = STRING_0 ; java . util . Map < java . lang . String , java . lang . Object > attributes = java . util . Collections . METHOD_1 ( STRING_1 , "value" ) ; org . IDENT_3 . java . nio . base . options . IDENT_4 options = mock ( org . IDENT_3 . java . nio . base . options . IDENT_4 . class ) ; when ( IDENT_5 . METHOD_2 ( path , metadata ) ) . thenReturn ( attributes ) ; when ( IDENT_6 . METHOD_3 ( IDENT_2 ) ) . thenReturn ( options ) ; when ( IDENT_7 . save ( path , IDENT_8 , attributes , options ) ) . thenReturn ( IDENT_9 ) ; org . IDENT_3 . backend . IDENT_10 . Path result = IDENT_11 . save ( path , IDENT_8 , metadata , IDENT_2 ) ; verify ( IDENT_7 , times ( 1 ) ) . save ( path , IDENT_8 , attributes , options ) ; "<AssertPlaceHolder>" ; } save ( org . IDENT_3 . backend . IDENT_10 . Path , org . kie . workbench . common . IDENT_12 . IDENT_13 . model . IDENT_14 , org . IDENT_0 . common . services . shared . metadata . model . IDENT_1 , java . lang . String ) { IDENT_15 . write ( org . IDENT_3 . backend . server . util . IDENT_16 . convert ( path ) , IDENT_17 . serialize ( content . METHOD_4 ( ) ) , IDENT_5 . METHOD_2 ( path , metadata ) , IDENT_6 . METHOD_3 ( IDENT_2 ) ) ; return path ; }
org . junit . Assert . assertEquals ( IDENT_9 , result ) 