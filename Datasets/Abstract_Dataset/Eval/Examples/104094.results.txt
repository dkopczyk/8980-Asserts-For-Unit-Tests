METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( eq ( org . kie . workbench . common . IDENT_1 . IDENT_2 . client . IDENT_0 . IDENT_3 . IDENT_4 ) , eq ( org . kie . workbench . common . IDENT_1 . IDENT_2 . client . IDENT_0 . IDENT_3 . IDENT_5 ) ) ) . thenReturn ( java . util . Optional . empty ( ) ) ; when ( IDENT_0 . METHOD_2 ( ) ) . thenReturn ( java . util . Collections . emptyList ( ) ) ; final java . util . Optional < org . kie . workbench . common . IDENT_1 . core . graph . Element > node = handler . METHOD_3 ( org . kie . workbench . common . IDENT_1 . IDENT_2 . client . IDENT_0 . IDENT_3 . IDENT_4 , org . kie . workbench . common . IDENT_1 . IDENT_2 . client . IDENT_0 . IDENT_3 . IDENT_5 ) ; verify ( transform , times ( 1 ) ) . transform ( eq ( org . kie . workbench . common . IDENT_1 . IDENT_2 . client . IDENT_0 . IDENT_3 . IDENT_4 ) , eq ( org . kie . workbench . common . IDENT_1 . IDENT_2 . client . IDENT_0 . IDENT_3 . IDENT_5 ) ) ; verify ( IDENT_0 , times ( 1 ) ) . METHOD_1 ( eq ( org . kie . workbench . common . IDENT_1 . IDENT_2 . client . IDENT_0 . IDENT_3 . IDENT_4 ) , eq ( org . kie . workbench . common . IDENT_1 . IDENT_2 . client . IDENT_0 . IDENT_3 . IDENT_5 ) ) ; verify ( IDENT_0 , times ( 1 ) ) . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { return METHOD_4 ; }
org . junit . Assert . assertFalse ( node . METHOD_4 ( ) ) 