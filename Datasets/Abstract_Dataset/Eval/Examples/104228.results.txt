METHOD_0 ( ) { final IDENT_0 . IDENT_1 . model . IDENT_2 . type . IDENT_3 IDENT_4 = this . factory . METHOD_1 ( ) ; final IDENT_0 . IDENT_1 . model . IDENT_5 IDENT_6 = new IDENT_0 . IDENT_1 . model . METHOD_2 ( IDENT_4 , new IDENT_0 . IDENT_1 . IDENT_7 . METHOD_3 ( ) , new IDENT_0 . IDENT_1 . IDENT_7 . METHOD_4 ( ) ) ; IDENT_6 . METHOD_5 ( IDENT_0 . test . IDENT_1 . IDENT_8 . IDENT_9 , IDENT_0 . test . IDENT_1 . IDENT_8 . IDENT_10 ) ; IDENT_6 . METHOD_5 ( IDENT_0 . test . IDENT_1 . IDENT_8 . IDENT_9 , IDENT_0 . test . IDENT_1 . IDENT_8 . IDENT_11 ) ; IDENT_6 . METHOD_5 ( IDENT_0 . test . IDENT_1 . IDENT_8 . IDENT_12 , IDENT_0 . test . IDENT_1 . IDENT_8 . IDENT_13 ) ; final java . util . List < java . lang . String > IDENT_14 = IDENT_4 . METHOD_6 ( ) . get ( IDENT_0 . test . IDENT_1 . IDENT_8 . IDENT_9 ) . METHOD_7 ( ) . values ( ) . stream ( ) . map ( ( c ) -> c . METHOD_8 ( ) ) . collect ( java . util . stream . IDENT_15 . toList ( ) ) ; final java . util . List < java . lang . String > IDENT_16 = java . util . Arrays . asList ( IDENT_0 . test . IDENT_1 . IDENT_8 . IDENT_10 , IDENT_0 . test . IDENT_1 . IDENT_8 . IDENT_11 ) ; java . util . Collections . METHOD_9 ( IDENT_14 ) ; java . util . Collections . METHOD_9 ( IDENT_16 ) ; "<AssertPlaceHolder>" ; } equals ( java . lang . Object ) { if ( ! ( o instanceof IDENT_0 . IDENT_1 . util . IDENT_17 ) ) { return false ; } final IDENT_0 . IDENT_1 . util . IDENT_17 < ? , ? > p = ( ( IDENT_0 . IDENT_1 . util . IDENT_17 < ? , ? > ) ( o ) ) ; return ( com . google . common . base . IDENT_18 . equal ( p . first , this . first ) ) && ( com . google . common . base . IDENT_18 . equal ( p . IDENT_19 , this . IDENT_19 ) ) ; }
org . junit . Assert . assertTrue ( IDENT_14 . equals ( IDENT_16 ) ) 