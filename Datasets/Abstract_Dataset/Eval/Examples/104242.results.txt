METHOD_0 ( ) { final byte [ ] data = IDENT_0 . test . common . util . IDENT_1 . IDENT_2 . METHOD_1 ( INT_0 ) ; final int expected = INT_0 ; final int actual = this . METHOD_2 ( data ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . nio . ByteBuffer ) { final int IDENT_3 = buffer . position ( ) ; int value = 0 ; int IDENT_4 = 0 ; while ( true ) { final byte IDENT_5 = buffer . get ( ) ; final boolean IDENT_6 = IDENT_5 >= 0 ; if ( IDENT_6 ) { value OP_0 IDENT_5 << IDENT_4 ; break ; } else { value OP_0 ( IDENT_5 & INT_1 ) << IDENT_4 ; IDENT_4 += 7 ; } } if ( IDENT_4 > INT_2 ) { throw new java . lang . IllegalArgumentException ( ( STRING_0 + IDENT_3 ) ) ; } return value ; }
org . junit . Assert . assertEquals ( expected , actual ) 