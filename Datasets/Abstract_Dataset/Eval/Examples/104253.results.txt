METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final int IDENT_1 = INT_0 ; final int IDENT_2 = INT_1 ; final IDENT_3 . IDENT_4 . core . controller . IDENT_5 controller = this . METHOD_1 ( IDENT_0 , IDENT_2 ) ; for ( int IDENT_6 = 0 ; IDENT_6 < IDENT_1 ; IDENT_6 ++ ) { final IDENT_3 . common . record . IDENT_7 . IDENT_8 record = new IDENT_3 . common . record . IDENT_7 . METHOD_2 ( STRING_1 , STRING_2 , 0 , IDENT_6 , IDENT_6 , STRING_3 , IDENT_6 , 1 ) ; controller . METHOD_3 ( record ) ; } java . lang . Thread . sleep ( ( 2 * IDENT_2 ) ) ; controller . METHOD_4 ( ) ; controller . METHOD_5 ( ( IDENT_2 * INT_2 ) ) ; final byte [ ] data = IDENT_3 . test . IDENT_4 . junit . writer . IDENT_9 . IDENT_10 . getInstance ( ) . METHOD_6 ( IDENT_0 ) ; final java . util . List < java . lang . String > IDENT_11 = IDENT_3 . test . IDENT_4 . junit . writer . IDENT_9 . IDENT_12 . METHOD_7 ( data ) ; final int IDENT_13 = IDENT_11 . size ( ) ; "<AssertPlaceHolder>" ; } size ( ) { return this . repository . size ( ) ; }
org . junit . Assert . assertEquals ( ( IDENT_1 + 1 ) , IDENT_13 ) 