METHOD_0 ( ) { final java . util . List < java . lang . String > IDENT_0 = new java . util . IDENT_1 < java . lang . String > ( ) ; for ( int i = 0 ; i < 10 ; i ++ ) { IDENT_0 . add ( STRING_0 ) ; } com . googlecode . IDENT_2 . runtime . function . IDENT_3 . IDENT_4 IDENT_5 = new com . googlecode . IDENT_2 . runtime . function . IDENT_3 . METHOD_1 ( ) ; com . googlecode . IDENT_2 . utils . IDENT_6 IDENT_7 = com . googlecode . IDENT_2 . TestUtils . METHOD_2 ( ) ; com . googlecode . IDENT_2 . runtime . type . IDENT_8 result = IDENT_5 . call ( IDENT_7 , new com . googlecode . IDENT_2 . runtime . type . METHOD_3 ( IDENT_0 ) , new com . googlecode . IDENT_2 . runtime . type . METHOD_4 ( STRING_1 ) ) ; java . util . IDENT_1 array = ( ( java . util . IDENT_1 ) ( result . getValue ( IDENT_7 ) ) ) ; for ( java . lang . Object i : array ) { "<AssertPlaceHolder>" ; } } getValue ( java . util . Map ) { return ( "/" + ( this . pattern . pattern ( ) ) ) + "/" ; }
org . junit . Assert . assertEquals ( 5 , i ) 