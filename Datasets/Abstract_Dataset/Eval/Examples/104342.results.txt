METHOD_0 ( ) { final int count = 1000 ; final java . util . List < com . IDENT_0 . IDENT_1 . core . nio . impl . IDENT_2 > list = new java . util . ArrayList < com . IDENT_0 . IDENT_1 . core . nio . impl . IDENT_2 > ( ) ; for ( int i = 0 ; i < count ; i ++ ) { final com . IDENT_0 . IDENT_1 . core . nio . impl . IDENT_2 IDENT_3 = new com . IDENT_0 . IDENT_1 . core . nio . impl . METHOD_1 ( 1000 , null ) ; this . queue . add ( IDENT_3 ) ; list . add ( IDENT_3 ) ; } final java . util . concurrent . atomic . IDENT_4 IDENT_5 = new java . util . concurrent . atomic . METHOD_2 ( ) ; this . queue . METHOD_3 ( new com . IDENT_0 . IDENT_1 . core . nio . impl . IDENT_6 . METHOD_4 ( ) { public boolean METHOD_5 ( final com . IDENT_0 . IDENT_1 . core . nio . impl . METHOD_1 IDENT_7 ) { IDENT_5 . METHOD_6 ( ) ; return true ; } } ) ; "<AssertPlaceHolder>" ; } get ( ) { return buf . get ( ) ; }
org . junit . Assert . assertEquals ( count , IDENT_5 . get ( ) ) 