METHOD_0 ( ) { java . lang . String source = ( ( ( ( ( STRING_0 + ( METHOD_1 ( ) ) ) + STRING_1 ) + ( METHOD_1 ( ) ) ) + STRING_2 ) + ( METHOD_1 ( ) ) ) + STRING_3 ; org . apache . commons . math4 . linear . IDENT_0 expected = org . apache . commons . math4 . linear . IDENT_1 . METHOD_2 ( new double [ ] [ ] { new double [ ] { 0.0 , - FLOAT_0 , FLOAT_1 } } ) ; org . apache . commons . math4 . linear . IDENT_0 actual = IDENT_2 . parse ( source ) ; "<AssertPlaceHolder>" ; } parse ( java . lang . String ) { java . text . IDENT_3 IDENT_4 = new java . text . METHOD_3 ( 0 ) ; org . apache . commons . math4 . geometry . IDENT_5 . IDENT_6 . IDENT_7 result = parse ( source , IDENT_4 ) ; if ( ( IDENT_4 . METHOD_4 ( ) ) == 0 ) { throw new org . apache . commons . math4 . exception . METHOD_5 ( source , IDENT_4 . METHOD_6 ( ) , org . apache . commons . math4 . geometry . IDENT_5 . IDENT_6 . IDENT_7 . class ) ; } return result ; }
org . junit . Assert . assertEquals ( expected , actual ) 