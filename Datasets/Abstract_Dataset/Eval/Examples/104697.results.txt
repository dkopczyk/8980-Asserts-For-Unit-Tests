METHOD_0 ( ) { IDENT_0 . METHOD_1 ( IDENT_1 , INT_0 ) ; try ( final io . IDENT_2 . commons . transaction . IDENT_3 transaction = IDENT_4 . METHOD_2 ( ) ) { final io . IDENT_2 . IDENT_5 . task . IDENT_6 . IDENT_7 IDENT_8 = METHOD_3 ( STRING_0 , STRING_1 ) ; final io . IDENT_2 . IDENT_5 . domain . model . IDENT_9 < io . IDENT_2 . IDENT_5 . task . data . domain . IDENT_10 > IDENT_11 = new io . IDENT_2 . IDENT_5 . domain . model . METHOD_4 ( io . IDENT_2 . IDENT_5 . task . data . domain . IDENT_10 . class ) ; for ( int i = 0 ; i < INT_1 ; i ++ ) { IDENT_11 . add ( io . IDENT_2 . IDENT_5 . task . x . IDENT_12 . METHOD_5 ( ( INT_2 + ( 2 * i ) ) ) ) ; } final io . IDENT_2 . IDENT_5 . task . model . IDENT_13 task = io . IDENT_2 . IDENT_5 . task . model . IDENT_13 . builder ( IDENT_8 ) . METHOD_6 ( io . IDENT_2 . IDENT_5 . task . x . IDENT_12 . IDENT_14 , IDENT_11 ) . build ( ) ; final io . IDENT_2 . IDENT_5 . domain . model . METHOD_4 < io . IDENT_2 . IDENT_5 . task . data . domain . IDENT_10 > IDENT_15 = IDENT_16 . execute ( task ) . METHOD_7 ( ) ; "<AssertPlaceHolder>" ; } } size ( ) { return IDENT_17 . size ( ) ; }
org . junit . Assert . assertEquals ( INT_1 , IDENT_15 . size ( ) ) 