METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . util . ByteBuffer buf = new org . IDENT_0 . IDENT_1 . util . ByteBuffer ( ( ( byte ) ( 255 ) ) , ( ( byte ) ( INT_0 ) ) ) ; buf . append ( ( ( byte ) ( INT_1 ) ) , ( ( byte ) ( INT_2 ) ) ) ; java . util . List < java . lang . IDENT_2 > expected = java . util . Arrays . asList ( ( ( byte ) ( 255 ) ) , ( ( byte ) ( INT_0 ) ) , ( ( byte ) ( INT_1 ) ) , ( ( byte ) ( INT_2 ) ) ) ; java . util . List < java . lang . IDENT_2 > actual = new java . util . ArrayList < java . lang . IDENT_2 > ( buf . size ( ) ) ; for ( java . lang . IDENT_2 b : buf ) { actual . add ( b ) ; } "<AssertPlaceHolder>" ; } add ( IDENT_3 ) { return IDENT_4 . add ( e ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 