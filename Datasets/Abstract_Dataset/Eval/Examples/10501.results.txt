METHOD_0 ( ) { double [ ] IDENT_0 = METHOD_1 ( ) ; double [ ] [ ] IDENT_1 = METHOD_2 ( IDENT_0 ) ; int IDENT_2 = IDENT_1 . length ; org . apache . commons . math4 . IDENT_3 . IDENT_4 . IDENT_5 IDENT_6 = new org . apache . commons . math4 . IDENT_3 . IDENT_4 . METHOD_3 ( ) ; org . apache . commons . math4 . IDENT_3 . IDENT_4 . IDENT_7 IDENT_8 = new org . apache . commons . math4 . IDENT_3 . IDENT_4 . METHOD_4 ( ) ; org . apache . commons . math4 . IDENT_3 . IDENT_4 . METHOD_4 [ ] IDENT_9 = new org . apache . commons . math4 . IDENT_3 . IDENT_4 . METHOD_4 [ IDENT_2 ] ; for ( int i = 0 ; i < IDENT_2 ; i ++ ) { IDENT_9 [ i ] = IDENT_6 . METHOD_5 ( ) ; for ( int j = 0 ; j < ( IDENT_1 [ i ] . length ) ; j ++ ) { IDENT_9 [ i ] . METHOD_6 ( IDENT_1 [ i ] [ j ] ) ; } } for ( int i = 0 ; i < ( IDENT_0 . length ) ; i ++ ) { IDENT_8 . METHOD_6 ( IDENT_0 [ i ] ) ; } "<AssertPlaceHolder>" ; } METHOD_7 ( ) { return super . METHOD_7 ( ) ; }
org . junit . Assert . assertEquals ( IDENT_8 . METHOD_7 ( ) , IDENT_6 . METHOD_7 ( ) ) 