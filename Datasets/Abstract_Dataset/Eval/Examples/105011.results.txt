METHOD_0 ( ) { IDENT_0 . IDENT_1 . db . IDENT_2 random = new IDENT_0 . IDENT_1 . db . METHOD_1 ( INT_0 ) ; IDENT_0 . IDENT_1 . db . impl . IDENT_3 < IDENT_0 . IDENT_1 . db . helper . IDENT_4 > IDENT_5 = METHOD_2 ( STRING_0 , IDENT_0 . IDENT_1 . db . helper . IDENT_4 . class ) . METHOD_3 ( type ) . create ( ) ; IDENT_5 . METHOD_4 ( ) ; METHOD_5 ( IDENT_5 , 200 , random ) ; IDENT_0 . IDENT_1 . db . helper . IDENT_4 IDENT_6 = METHOD_6 ( random ) ; IDENT_5 . write ( STRING_1 , IDENT_6 ) ; IDENT_5 . METHOD_7 ( ) ; METHOD_5 ( IDENT_5 , 200 , random ) ; IDENT_0 . IDENT_1 . db . helper . IDENT_4 IDENT_7 = IDENT_5 . read ( STRING_1 ) ; "<AssertPlaceHolder>" ; } read ( long ) { IDENT_0 . IDENT_1 . db . remote . IDENT_8 connection = null ; try { connection = METHOD_8 ( ) ; METHOD_9 ( IDENT_9 . IDENT_10 , connection ) ; connection . METHOD_10 ( key ) ; connection . METHOD_7 ( ) ; T value = METHOD_11 ( connection ) ; METHOD_12 ( connection ) ; return value ; } catch ( java . lang . Exception e ) { METHOD_13 ( connection ) ; throw new java . lang . RuntimeException ( e ) ; } }
org . junit . Assert . assertEquals ( IDENT_6 , IDENT_7 ) 