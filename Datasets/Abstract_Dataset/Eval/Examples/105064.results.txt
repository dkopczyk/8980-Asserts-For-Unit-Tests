METHOD_0 ( ) { java . io . File IDENT_0 = new java . io . File ( IDENT_1 , STRING_0 ) ; try { java . io . IDENT_2 IDENT_3 = new java . io . METHOD_1 ( IDENT_0 , STRING_1 ) ; IDENT_3 . METHOD_2 ( ( ( ( ( 4 * INT_0 ) * INT_0 ) * INT_0 ) + 2 ) ) ; } catch ( java . io . IOException e ) { hudson . util . io . IDENT_4 . LOGGER . log ( IDENT_5 . IDENT_6 , STRING_2 , e ) ; return ; } java . io . File IDENT_7 = null ; hudson . util . io . IDENT_8 IDENT_9 = null ; try { IDENT_7 = java . io . File . METHOD_3 ( "test" , STRING_3 ) ; IDENT_9 = new hudson . util . io . METHOD_4 ( java . nio . file . IDENT_10 . METHOD_5 ( IDENT_7 . METHOD_6 ( ) ) ) ; IDENT_9 . METHOD_7 ( IDENT_0 , STRING_0 ) ; } catch ( java . lang . Exception e ) { fail ( STRING_4 , e ) ; } finally { if ( IDENT_9 != null ) { try { IDENT_9 . close ( ) ; } catch ( java . io . IOException e ) { } } } java . lang . String IDENT_11 = null ; java . util . IDENT_12 . IDENT_13 IDENT_14 = null ; try { IDENT_14 = new java . util . IDENT_12 . METHOD_8 ( IDENT_7 ) ; IDENT_11 = ( ( java . util . IDENT_12 . IDENT_15 ) ( IDENT_14 . METHOD_9 ( ) . METHOD_10 ( ) ) ) . getName ( ) ; } catch ( java . lang . Exception e ) { fail ( STRING_5 , e ) ; } finally { if ( IDENT_14 != null ) { try { IDENT_14 . close ( ) ; } catch ( java . io . IOException e ) { } } } "<AssertPlaceHolder>" ; } close ( ) { source . close ( ) ; }
org . junit . Assert . assertEquals ( STRING_0 , IDENT_11 ) 