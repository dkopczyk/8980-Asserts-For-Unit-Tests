METHOD_0 ( ) { byte [ ] array = new byte [ 4 ] ; java . nio . ByteBuffer buffer = java . nio . ByteBuffer . METHOD_1 ( array ) ; buffer . put ( 0 , ( ( byte ) ( 2 ) ) ) ; buffer . put ( 1 , ( ( byte ) ( 3 ) ) ) ; buffer . get ( ) ; buffer = buffer . METHOD_2 ( ) ; buffer . put ( 1 , ( ( byte ) ( 5 ) ) ) ; buffer . put ( 2 , ( ( byte ) ( 7 ) ) ) ; "<AssertPlaceHolder>" ; } put ( int , byte ) { if ( IDENT_0 ) { throw new org . IDENT_1 . IDENT_2 . java . nio . METHOD_3 ( ) ; } if ( ( index < 0 ) || ( index >= ( IDENT_3 ) ) ) { throw new java . lang . METHOD_4 ( ( ( ( ( STRING_0 + index ) + STRING_1 ) + ( IDENT_3 ) ) + STRING_2 ) ) ; } array [ ( ( start ) + index ) ] = b ; return this ; }
org . junit . Assert . assertThat ( array , org . hamcrest . CoreMatchers . is ( new byte [ ] { 2 , 3 , 5 , 7 } ) ) 