METHOD_0 ( ) { char [ ] array = new char [ 5 ] ; java . nio . IDENT_0 buffer = java . nio . IDENT_0 . METHOD_1 ( array ) ; buffer . put ( 0 , STRING_0 ) ; buffer . put ( 1 , STRING_1 ) ; buffer . get ( ) ; buffer = buffer . METHOD_2 ( ) ; buffer . put ( 1 , STRING_2 ) ; buffer . put ( 2 , STRING_3 ) ; buffer . put ( 3 , STRING_4 ) ; "<AssertPlaceHolder>" ; } put ( int , byte ) { if ( IDENT_1 ) { throw new org . IDENT_2 . IDENT_3 . java . nio . METHOD_3 ( ) ; } if ( ( index < 0 ) || ( index >= ( IDENT_4 ) ) ) { throw new java . lang . METHOD_4 ( ( ( ( ( STRING_5 + index ) + STRING_6 ) + ( IDENT_4 ) ) + STRING_7 ) ) ; } array [ ( ( start ) + index ) ] = b ; return this ; }
org . junit . Assert . assertThat ( array , org . hamcrest . CoreMatchers . is ( new char [ ] { STRING_0 , STRING_1 , STRING_2 , STRING_3 , STRING_4 } ) ) 