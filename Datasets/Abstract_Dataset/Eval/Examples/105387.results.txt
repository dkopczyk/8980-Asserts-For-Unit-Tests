METHOD_0 ( ) { java . lang . String [ ] s = new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 , "/" } ; java . lang . String IDENT_0 = STRING_11 ; for ( int i = 0 ; i < ( s . length ) ; i ++ ) { java . util . regex . IDENT_1 pattern = java . util . regex . IDENT_1 . METHOD_1 ( IDENT_0 ) ; java . util . regex . IDENT_2 matcher = pattern . matcher ( s [ i ] ) ; "<AssertPlaceHolder>" ; } } find ( ) { int length = string . length ( ) ; if ( ! ( METHOD_2 ( ) ) ) { length = IDENT_3 ; } if ( ( ( IDENT_4 . IDENT_5 ) >= 0 ) && ( ( IDENT_4 . METHOD_3 ( ) ) == ( org . IDENT_6 . IDENT_7 . java . util . regex . IDENT_8 . IDENT_9 ) ) ) { IDENT_4 . IDENT_5 = IDENT_4 . end ( ) ; if ( ( IDENT_4 . end ( ) ) == ( IDENT_4 . start ( ) ) ) { ( IDENT_4 . IDENT_5 ) ++ ; } return ( ( IDENT_4 . IDENT_5 ) <= length ) && ( find ( IDENT_4 . IDENT_5 ) ) ; } else { return find ( IDENT_10 ) ; } }
org . junit . Assert . assertTrue ( matcher . find ( ) ) 