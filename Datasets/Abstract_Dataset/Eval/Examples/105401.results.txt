METHOD_0 ( ) { int [ ] IDENT_0 = new int [ 2 ] ; java . util . stream . IDENT_1 . of ( 1 , 2 ) . METHOD_1 ( ( ) -> ( IDENT_0 [ 0 ] ) ++ ) . map ( ( x ) -> x * 2 ) . METHOD_1 ( ( ) -> ( IDENT_0 [ 1 ] ) ++ ) . close ( ) ; "<AssertPlaceHolder>" ; } close ( ) { org . IDENT_2 . model . util . IDENT_3 IDENT_4 = new org . IDENT_2 . model . util . METHOD_2 ( ) ; org . IDENT_2 . model . IDENT_5 block = org . IDENT_2 . IDENT_6 . impl . IDENT_7 . generator . METHOD_3 ( ) ; org . IDENT_2 . model . IDENT_8 IDENT_9 = block . METHOD_4 ( ) ; if ( IDENT_9 != null ) { IDENT_9 . METHOD_5 ( IDENT_4 ) ; } if ( ( IDENT_4 . METHOD_6 ( ) ) != null ) { return ; } org . IDENT_2 . model . IDENT_10 IDENT_11 ; if ( ( org . IDENT_2 . IDENT_6 . impl . IDENT_7 . IDENT_12 ) instanceof org . IDENT_2 . model . IDENT_13 . IDENT_14 ) { IDENT_11 = null ; } else if ( ( org . IDENT_2 . IDENT_6 . impl . IDENT_7 . IDENT_12 ) instanceof org . IDENT_2 . model . IDENT_13 . IDENT_15 ) { IDENT_11 = org . IDENT_2 . IDENT_6 . impl . IDENT_7 . generator . IDENT_16 . METHOD_7 ( ) ; switch ( ( ( org . IDENT_2 . model . IDENT_13 . IDENT_15 ) ( org . IDENT_2 . IDENT_6 . impl . IDENT_7 . IDENT_12 ) ) . METHOD_8 ( ) ) { case IDENT_17 : case IDENT_18 : case IDENT_19 : case IDENT_20 : case IDENT_21 : { org . IDENT_2 . model . IDENT_22 . IDENT_23 IDENT_24 = new org . IDENT_2 . model . IDENT_22 . METHOD_9 ( ) ; IDENT_24 . METHOD_10 ( IDENT_11 ) ; org . IDENT_2 . IDENT_6 . impl . IDENT_7 . generator . add ( IDENT_24 ) ; break ; } case IDENT_25 : { org . IDENT_2 . model . IDENT_22 . IDENT_26 IDENT_24 = new org . IDENT_2 . model . IDENT_22 . METHOD_11 ( ) ; IDENT_24 . METHOD_10 ( IDENT_11 ) ; org . IDENT_2 . IDENT_6 . impl . IDENT_7 . generator . add ( IDENT_24 ) ; break ; } case IDENT_27 : { org . IDENT_2 . model . IDENT_22 . IDENT_28 IDENT_24 = new org . IDENT_2 . model . IDENT_22 . METHOD_12 ( ) ; IDENT_24 . METHOD_10 ( IDENT_11 ) ; org . IDENT_2 . IDENT_6 . impl . IDENT_7 . generator . add ( IDENT_24 ) ; break ; } case IDENT_29 : { org . IDENT_2 . model . IDENT_22 . IDENT_30 IDENT_24 = new org . IDENT_2 . model . IDENT_22 . METHOD_13 ( ) ; IDENT_24 . METHOD_10 ( IDENT_11 ) ; org . IDENT_2 . IDENT_6 . impl . IDENT_7 . generator . add ( IDENT_24 ) ; break ; } } } else { org . IDENT_2 . model . IDENT_22 . IDENT_31 IDENT_24 = new org . IDENT_2 . model . IDENT_22 . METHOD_14 ( ) ; IDENT_11 = org . IDENT_2 . IDENT_6 . impl . IDENT_7 . generator . IDENT_16 . METHOD_7 ( ) ; IDENT_24 . METHOD_10 ( IDENT_11 ) ; org . IDENT_2 . IDENT_6 . impl . IDENT_7 . generator . add ( IDENT_24 ) ; } org . IDENT_2 . IDENT_6 . impl . IDENT_7 . METHOD_15 ( IDENT_11 ) ; }
org . junit . Assert . assertArrayEquals ( new int [ ] { 1 , 1 } , IDENT_0 ) 