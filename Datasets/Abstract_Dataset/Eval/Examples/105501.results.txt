METHOD_0 ( ) { java . lang . String expected = "" + ( ( ( ( ( ( ( ( ( ( ( ( STRING_0 + STRING_1 ) + STRING_2 2 ) + STRING_2 6 ) + STRING_3 0 ) + STRING_2 8 ) + STRING_3 1 ) + STRING_2 4 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_2 5 ) ; IDENT_0 . model . IDENT_1 IDENT_2 = new IDENT_0 . model . METHOD_1 ( STRING_2 1 , STRING_3 ) ; IDENT_0 . model . METHOD_1 IDENT_3 = new IDENT_0 . model . METHOD_1 ( STRING_2 9 , STRING_2 , STRING_2 3 , IDENT_0 . model . IDENT_4 . IDENT_5 . IDENT_6 ) ; IDENT_0 . model . METHOD_1 IDENT_7 = new IDENT_0 . model . METHOD_1 ( STRING_2 7 , STRING_2 0 , STRING_8 , IDENT_0 . model . IDENT_4 . IDENT_5 . IDENT_8 ) ; IDENT_9 = java . util . Arrays . asList ( IDENT_2 , IDENT_3 , IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . util . List , java . util . List ) { java . lang . StringBuffer sb = new java . lang . StringBuffer ( ) ; sb . append ( STRING_9 4 ) ; if ( ! ( IDENT_10 . isEmpty ( ) ) ) { sb . append ( STRING_10 ) ; sb . append ( STRING_11 ) ; } for ( int i = 1 ; i <= ( IDENT_9 . size ( ) ) ; ++ i ) { sb . append ( STRING_10 ) ; sb . append ( STRING_12 ) ; sb . append ( i ) ; } if ( METHOD_3 ( IDENT_10 , IDENT_9 ) ) sb . append ( STRING_9 5 ) ; java . util . List < java . lang . String > IDENT_11 = new java . util . ArrayList ( ) ; if ( ! ( IDENT_10 . isEmpty ( ) ) ) { IDENT_11 . add ( STRING_9 8 ) ; IDENT_11 . add ( STRING_9 2 ) ; IDENT_11 . add ( STRING_13 . replace ( STRING_14 , org . apache . commons . lang3 . StringUtils . join ( IDENT_10 , STRING_10 ) ) ) ; } for ( int i = 1 ; i <= ( IDENT_9 . size ( ) ) ; ++ i ) { IDENT_0 . model . METHOD_1 annotation = IDENT_9 . get ( ( i - 1 ) ) ; if ( ( annotation . METHOD_4 ( ) ) != null ) IDENT_11 . add ( ( ( ( ( STRING_9 + i ) + STRING_9 6 ) + ( annotation . METHOD_4 ( ) ) ) + STRING_9 0 ) ) ; IDENT_11 . add ( ( ( ( ( STRING_9 + i ) + STRING_9 7 ) + ( annotation . getName ( ) ) ) + STRING_9 0 ) ) ; if ( ( annotation . getValue ( ) ) != null ) { java . lang . String value = annotation . getValue ( ) ; if ( ( ( annotation . METHOD_5 ( ) ) == ( IDENT_4 . IDENT_5 . IDENT_8 ) ) || ( ( annotation . METHOD_5 ( ) ) == ( IDENT_4 . IDENT_5 . IDENT_12 ) ) ) { value = ( STRING_15 + value ) + STRING_9 1 ; } IDENT_11 . add ( ( ( ( ( ( ( STRING_9 + i ) + STRING_16 ) + ( annotation . METHOD_5 ( ) . METHOD_6 ( ) ) ) + STRING_9 3 ) + value ) + STRING_9 0 ) ) ; } IDENT_11 . add ( ( ( STRING_9 + i ) + STRING_17 ) ) ; } sb . append ( org . apache . commons . lang3 . StringUtils . join ( IDENT_11 , STRING_18 ) ) ; return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( expected , strategy . METHOD_2 ( IDENT_10 , IDENT_9 ) ) 