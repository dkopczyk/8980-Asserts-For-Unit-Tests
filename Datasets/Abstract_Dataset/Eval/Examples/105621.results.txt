METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 . METHOD_0 . support . IDENT_3 IDENT_4 = IDENT_0 . IDENT_1 . IDENT_2 . METHOD_0 . support . IDENT_3 . METHOD_1 ( IDENT_5 . IDENT_6 ) ; java . util . List < java . lang . String > result = new IDENT_0 . IDENT_1 . IDENT_2 . METHOD_0 . support . METHOD_2 ( input , IDENT_4 ) . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { IDENT_0 . IDENT_1 . IDENT_2 . METHOD_0 . support . IDENT_5 IDENT_7 = IDENT_4 . METHOD_4 ( ) ; IDENT_0 . IDENT_1 . IDENT_2 . METHOD_0 . support . List < IDENT_0 . IDENT_1 . IDENT_2 . METHOD_0 . support . IDENT_8 > IDENT_9 = IDENT_7 . METHOD_3 ( new IDENT_0 . IDENT_1 . IDENT_2 . METHOD_0 . support . ArrayList < IDENT_0 . IDENT_1 . IDENT_2 . METHOD_0 . support . IDENT_8 > ( this . IDENT_9 ) , IDENT_4 . METHOD_5 ( ) ) ; IDENT_0 . IDENT_1 . IDENT_2 . METHOD_0 . support . List < java . lang . String > result = new IDENT_0 . IDENT_1 . IDENT_2 . METHOD_0 . support . ArrayList < java . lang . String > ( ) ; for ( int i = 0 ; i < ( IDENT_9 . size ( ) ) ; i ++ ) { IDENT_0 . IDENT_1 . IDENT_2 . METHOD_0 . support . IDENT_8 IDENT_10 = this . IDENT_9 . get ( i ) ; IDENT_0 . IDENT_1 . IDENT_2 . METHOD_0 . support . IDENT_8 IDENT_11 = IDENT_9 . get ( i ) ; result . add ( IDENT_10 . METHOD_6 ( IDENT_11 ) ) ; } for ( Map . Entry < java . lang . Integer , java . lang . String > IDENT_12 : IDENT_13 . entrySet ( ) ) { result . add ( IDENT_12 . getKey ( ) , IDENT_12 . getValue ( ) ) ; } return result ; }
org . junit . Assert . assertEquals ( expected , result ) 