METHOD_0 ( ) { java . lang . Object IDENT_0 = new java . lang . Object ( ) ; when ( IDENT_1 . find ( any ( java . lang . Class . class ) , any ( ) ) ) . thenReturn ( IDENT_0 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_1 ) . find ( any ( java . lang . Class . class ) , eq ( STRING_0 ) ) ; } find ( java . lang . Class , java . lang . Object ) { return METHOD_1 ( new java . util . concurrent . IDENT_2 < T > ( ) { @ org . IDENT_3 . IDENT_4 . IDENT_5 . data . jpa . Override public T call ( ) { if ( id instanceof org . IDENT_3 . IDENT_4 . IDENT_5 . data . IDENT_6 ) { org . IDENT_3 . IDENT_4 . core . api . criteria . IDENT_7 < T > results = METHOD_2 ( type , IDENT_8 . Builder . METHOD_3 ( ( ( org . IDENT_3 . IDENT_4 . IDENT_5 . data . IDENT_6 ) ( id ) ) . METHOD_4 ( ) ) . build ( ) ) ; if ( ( results . METHOD_5 ( ) . size ( ) ) > 1 ) { throw new javax . persistence . METHOD_6 ( ( ( ( ( STRING_1 + id ) + STRING_2 ) + ( type . getName ( ) ) ) + STRING_3 ) ) ; } if ( ! ( results . METHOD_5 ( ) . isEmpty ( ) ) ) { return results . METHOD_5 ( ) . get ( 0 ) ; } return null ; } else { return IDENT_9 . find ( type , id ) ; } } } ) ; }
org . junit . Assert . assertSame ( IDENT_0 , service . find ( java . lang . Object . class , STRING_0 ) ) 