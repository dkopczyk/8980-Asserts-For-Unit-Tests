METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . api . repository . IDENT_3 . IDENT_4 data = org . IDENT_0 . IDENT_1 . IDENT_2 . api . repository . IDENT_5 . METHOD_1 ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . api . repository . IDENT_3 . IDENT_4 IDENT_6 = org . IDENT_0 . IDENT_1 . IDENT_2 . api . repository . IDENT_5 . METHOD_1 ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . impl . repository . IDENT_7 IDENT_8 = service . from ( org . IDENT_0 . IDENT_1 . IDENT_2 . api . repository . IDENT_5 . METHOD_1 ( ) ) ; when ( IDENT_9 . find ( any ( java . lang . Class . class ) , any ( java . lang . String . class ) ) ) . thenReturn ( service . from ( IDENT_6 ) ) ; when ( IDENT_9 . save ( any ( org . IDENT_0 . IDENT_1 . IDENT_2 . impl . repository . IDENT_7 . class ) , any ( org . IDENT_0 . IDENT_1 . IDENT_10 . data . IDENT_11 . class ) ) ) . thenReturn ( IDENT_8 ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . api . repository . IDENT_3 . IDENT_4 IDENT_12 = service . METHOD_2 ( data ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . IDENT_0 . IDENT_1 . IDENT_2 . api . repository . IDENT_3 . IDENT_4 ) { METHOD_3 ( IDENT_13 , STRING_0 ) ; final org . IDENT_0 . IDENT_1 . IDENT_2 . api . repository . IDENT_3 . IDENT_4 IDENT_14 = METHOD_4 ( IDENT_13 . getId ( ) ) ; if ( IDENT_14 == null ) { throw new java . lang . IllegalStateException ( ( STRING_1 + IDENT_13 ) ) ; } final org . IDENT_0 . IDENT_1 . IDENT_2 . api . repository . IDENT_3 . IDENT_4 IDENT_15 ; if ( ! ( IDENT_14 . getId ( ) . equals ( IDENT_13 . getId ( ) ) ) ) { final org . IDENT_0 . IDENT_1 . IDENT_2 . api . repository . IDENT_3 . IDENT_4 . Builder builder = IDENT_4 . Builder . create ( IDENT_13 ) ; builder . setId ( IDENT_14 . getId ( ) ) ; IDENT_15 = builder . build ( ) ; } else { IDENT_15 = IDENT_13 ; } org . IDENT_0 . IDENT_1 . IDENT_2 . impl . repository . IDENT_7 IDENT_16 = from ( IDENT_15 ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . impl . repository . IDENT_7 IDENT_12 = IDENT_17 . save ( IDENT_16 , IDENT_11 . IDENT_18 ) ; return to ( IDENT_12 ) ; }
org . junit . Assert . assertNotNull ( IDENT_12 ) 