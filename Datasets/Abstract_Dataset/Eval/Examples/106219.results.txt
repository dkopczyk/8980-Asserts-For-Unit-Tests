METHOD_0 ( ) { final java . lang . String IDENT_0 = new io . IDENT_1 . client . IDENT_2 . METHOD_1 ( ) . format ( IDENT_3 . IDENT_4 . IDENT_5 , 0 ) ; "<AssertPlaceHolder>" ; } format ( io . IDENT_1 . client . IDENT_2 . IDENT_6 , int ) { switch ( format ) { case IDENT_5 : return METHOD_2 ( IDENT_7 ) ; case IDENT_8 : return METHOD_3 ( IDENT_7 ) ; case IDENT_9 : return IDENT_7 == 0 ? "" : STRING_0 + IDENT_7 ; default : throw new java . lang . IllegalStateException ( ( ( ( STRING_1 + format ) + STRING_2 ) + IDENT_7 ) ) ; } }
org . junit . Assert . assertThat ( IDENT_0 , org . hamcrest . core . Is . is ( "" ) ) 