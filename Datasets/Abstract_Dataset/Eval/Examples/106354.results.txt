METHOD_0 ( ) { java . util . List < java . lang . Integer > a = com . google . common . collect . Lists . newArrayList ( ) ; a . add ( 100 ) ; a . add ( 2 ) ; a . add ( INT_0 ) ; a . add ( 1 ) ; a . add ( 0 ) ; org . apache . IDENT_0 . common . util . IDENT_1 . METHOD_1 ( a , com . google . common . collect . Lists . newArrayList ( 1 , 3 , 4 ) , new java . util . IDENT_2 < java . lang . Integer > ( ) { @ org . apache . IDENT_0 . common . util . Override public int compare ( java . lang . Integer IDENT_3 , java . lang . Integer IDENT_4 ) { return IDENT_3 . compareTo ( IDENT_4 ) ; } } ) ; "<AssertPlaceHolder>" ; } compareTo ( org . apache . IDENT_0 . job . IDENT_5 ) { return ( o . IDENT_6 ) < ( this . IDENT_6 ) ? - 1 : ( o . IDENT_6 ) > ( this . IDENT_6 ) ? 1 : 0 ; }
org . junit . Assert . assertArrayEquals ( a . toArray ( ) , new java . lang . Integer [ ] { 100 , 0 , INT_0 , 1 , 2 } ) 