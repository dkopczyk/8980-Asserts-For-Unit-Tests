METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . attributes . parser . IDENT_2 info = com . IDENT_0 . IDENT_1 . attributes . parser . IDENT_3 . METHOD_1 ( STRING_0 , this . getClass ( ) . getResource ( STRING_1 ) . getPath ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String ) { com . IDENT_0 . IDENT_1 . command . IDENT_4 IDENT_5 = new com . IDENT_0 . IDENT_1 . command . METHOD_2 ( IDENT_6 , IDENT_7 ) ; java . lang . IDENT_8 p = com . IDENT_0 . IDENT_1 . command . IDENT_9 . execute ( IDENT_5 ) ; if ( ( p . METHOD_3 ( ) ) != 0 ) { throw new java . lang . IllegalStateException ( ( STRING_2 + ( p . METHOD_4 ( ) ) ) ) ; } java . io . InputStream IDENT_10 = p . METHOD_5 ( ) ; com . IDENT_0 . IDENT_1 . attributes . parser . IDENT_2 IDENT_11 = new com . google . gson . METHOD_6 ( ) . METHOD_7 ( IDENT_12 . IDENT_13 ) . create ( ) . METHOD_8 ( new java . io . METHOD_9 ( IDENT_10 ) , com . IDENT_0 . IDENT_1 . attributes . parser . IDENT_2 . class ) ; com . IDENT_0 . IDENT_1 . command . IDENT_14 IDENT_15 = new com . IDENT_0 . IDENT_1 . command . METHOD_10 ( ) { @ com . IDENT_0 . IDENT_1 . attributes . parser . Override public java . util . List < java . lang . String > METHOD_11 ( ) { return java . util . Arrays . asList ( IDENT_6 , STRING_3 , STRING_4 , STRING_5 ) ; } } ; java . lang . IDENT_8 IDENT_16 = com . IDENT_0 . IDENT_1 . command . IDENT_9 . execute ( IDENT_15 ) ; if ( ( IDENT_16 . METHOD_3 ( ) ) != 0 ) { throw new java . lang . IllegalStateException ( ( STRING_2 + ( IDENT_16 . METHOD_4 ( ) ) ) ) ; } java . util . IDENT_17 IDENT_18 = new java . util . METHOD_12 ( IDENT_16 . METHOD_5 ( ) ) ; while ( ! ( IDENT_18 . METHOD_13 ( ) . equals ( STRING_6 ) ) ) ; java . util . List < com . IDENT_0 . IDENT_1 . attributes . parser . IDENT_19 > IDENT_20 = new java . util . ArrayList ( ) ; java . util . List < com . IDENT_0 . IDENT_1 . attributes . parser . IDENT_19 > IDENT_21 = new java . util . ArrayList ( ) ; while ( IDENT_18 . METHOD_14 ( ) ) { java . lang . String line = IDENT_18 . METHOD_13 ( ) ; java . util . regex . IDENT_22 matcher = com . IDENT_0 . IDENT_1 . attributes . parser . IDENT_3 . IDENT_23 . matcher ( line ) ; if ( matcher . matches ( ) ) { java . lang . String support = matcher . group ( 1 ) ; if ( support . startsWith ( com . IDENT_0 . IDENT_1 . attributes . parser . IDENT_3 . IDENT_24 ) ) { com . IDENT_0 . IDENT_1 . attributes . parser . IDENT_19 IDENT_25 = new com . IDENT_0 . IDENT_1 . attributes . parser . METHOD_15 ( ) ; IDENT_25 . METHOD_16 ( support ) ; IDENT_25 . setName ( matcher . group ( 2 ) ) ; IDENT_25 . METHOD_17 ( matcher . group ( 3 ) ) ; IDENT_20 . add ( IDENT_25 ) ; } else if ( support . startsWith ( com . IDENT_0 . IDENT_1 . attributes . parser . IDENT_3 . IDENT_26 ) ) { com . IDENT_0 . IDENT_1 . attributes . parser . METHOD_15 IDENT_27 = new com . IDENT_0 . IDENT_1 . attributes . parser . METHOD_15 ( ) ; IDENT_27 . METHOD_16 ( support ) ; IDENT_27 . setName ( matcher . group ( 2 ) ) ; IDENT_27 . METHOD_17 ( matcher . group ( 3 ) ) ; IDENT_21 . add ( IDENT_27 ) ; } } } IDENT_11 . METHOD_18 ( IDENT_20 ) ; IDENT_11 . METHOD_19 ( IDENT_21 ) ; com . IDENT_0 . IDENT_1 . command . METHOD_10 IDENT_28 = new com . IDENT_0 . IDENT_1 . command . METHOD_10 ( ) { @ com . IDENT_0 . IDENT_1 . attributes . parser . Override public java . util . List < java . lang . String > METHOD_11 ( ) { return java . util . Arrays . asList ( IDENT_6 , STRING_7 , STRING_4 , STRING_5 ) ; } } ; java . lang . IDENT_8 IDENT_29 = com . IDENT_0 . IDENT_1 . command . IDENT_9 . execute ( IDENT_28 ) ; if ( ( IDENT_29 . METHOD_3 ( ) ) != 0 ) { throw new java . lang . IllegalStateException ( ( STRING_2 + ( IDENT_29 . METHOD_4 ( ) ) ) ) ; } java . util . METHOD_12 IDENT_30 = new java . util . METHOD_12 ( IDENT_29 . METHOD_5 ( ) ) ; while ( ! ( IDENT_30 . METHOD_13 ( ) . equals ( STRING_8 ) ) ) { } java . util . List < com . IDENT_0 . IDENT_1 . attributes . parser . METHOD_15 > IDENT_31 = new java . util . ArrayList ( ) ; while ( IDENT_30 . METHOD_14 ( ) ) { java . lang . String line = IDENT_30 . METHOD_13 ( ) ; java . util . regex . IDENT_22 matcher = com . IDENT_0 . IDENT_1 . attributes . parser . IDENT_3 . IDENT_23 . matcher ( line ) ; if ( matcher . matches ( ) ) { java . lang . String support = matcher . group ( 1 ) ; if ( support . startsWith ( com . IDENT_0 . IDENT_1 . attributes . parser . IDENT_3 . IDENT_32 ) ) { com . IDENT_0 . IDENT_1 . attributes . parser . METHOD_15 item = new com . IDENT_0 . IDENT_1 . attributes . parser . METHOD_15 ( ) ; item . METHOD_16 ( support ) ; item . setName ( matcher . group ( 2 ) ) ; item . METHOD_17 ( matcher . group ( 3 ) ) ; IDENT_31 . add ( item ) ; } } } IDENT_11 . METHOD_20 ( IDENT_31 ) ; com . IDENT_0 . IDENT_1 . command . METHOD_10 IDENT_33 = new com . IDENT_0 . IDENT_1 . command . METHOD_10 ( ) { @ com . IDENT_0 . IDENT_1 . attributes . parser . Override public java . util . List < java . lang . String > METHOD_11 ( ) { return java . util . Arrays . asList ( IDENT_6 , STRING_9 , STRING_4 , STRING_5 ) ; } } ; java . lang . IDENT_8 IDENT_34 = com . IDENT_0 . IDENT_1 . command . IDENT_9 . execute ( IDENT_33 ) ; if ( ( IDENT_34 . METHOD_3 ( ) ) != 0 ) { throw new java . lang . IllegalStateException ( ( STRING_2 + ( IDENT_29 . METHOD_4 ( ) ) ) ) ; } java . util . METHOD_12 IDENT_35 = new java . util . METHOD_12 ( IDENT_34 . METHOD_5 ( ) ) ; while ( ! ( IDENT_35 . METHOD_13 ( ) . equals ( STRING_10 ) ) ) { } java . util . List < com . IDENT_0 . IDENT_1 . attributes . parser . METHOD_15 > IDENT_36 = new java . util . ArrayList ( ) ; while ( IDENT_35 . METHOD_14 ( ) ) { java . lang . String line = IDENT_35 . METHOD_13 ( ) ; java . util . regex . IDENT_22 matcher = com . IDENT_0 . IDENT_1 . attributes . parser . IDENT_3 . IDENT_37 . matcher ( line ) ; if ( matcher . matches ( ) ) { java . lang . String support = matcher . group ( 1 ) ; if ( support . startsWith ( com . IDENT_0 . IDENT_1 . attributes . parser . IDENT_3 . IDENT_38 ) ) { com . IDENT_0 . IDENT_1 . attributes . parser . METHOD_15 item = new com . IDENT_0 . IDENT_1 . attributes . parser . METHOD_15 ( ) ; item . METHOD_16 ( support ) ; item . setName ( matcher . group ( 2 ) ) ; item . METHOD_17 ( matcher . group ( 3 ) ) ; IDENT_36 . add ( item ) ; } } } IDENT_11 . METHOD_21 ( IDENT_36 ) ; return IDENT_11 ; }
org . junit . Assert . assertNotNull ( info ) 