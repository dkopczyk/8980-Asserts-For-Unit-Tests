METHOD_0 ( ) { java . util . List < org . IDENT_0 . rules . IDENT_1 . IDENT_2 > IDENT_3 = new java . util . ArrayList ( ) ; org . IDENT_0 . rules . IDENT_1 . IDENT_4 IDENT_5 = new org . IDENT_0 . rules . IDENT_1 . METHOD_1 ( STRING_0 , org . IDENT_0 . rules . IDENT_6 . IDENT_7 , IDENT_3 , STRING_1 , STRING_2 , STRING_3 ) ; org . IDENT_0 . rules . IDENT_1 . METHOD_1 IDENT_8 = new org . IDENT_0 . rules . IDENT_1 . METHOD_1 ( STRING_0 , org . IDENT_0 . rules . IDENT_6 . IDENT_7 , IDENT_3 , STRING_4 , STRING_5 , STRING_6 ) ; org . IDENT_0 . rules . IDENT_9 IDENT_10 = new org . IDENT_0 . rules . METHOD_2 ( IDENT_5 , null , 10 , 20 , STRING_7 ) ; org . IDENT_0 . rules . METHOD_2 IDENT_11 = new org . IDENT_0 . rules . METHOD_2 ( IDENT_8 , null , INT_0 , INT_1 , STRING_8 ) ; org . IDENT_0 . rules . IDENT_12 filter = new org . IDENT_0 . rules . METHOD_3 ( ) ; java . util . List < org . IDENT_0 . rules . METHOD_2 > IDENT_13 = filter . filter ( java . util . Arrays . asList ( IDENT_10 , IDENT_11 ) ) ; "<AssertPlaceHolder>" ; } filter ( java . util . List , java . util . regex . IDENT_14 ) { return IDENT_15 . stream ( ) . filter ( ( token ) -> METHOD_4 ( token , IDENT_16 ) ) . collect ( java . util . stream . IDENT_17 . toList ( ) ) ; }
org . junit . Assert . assertEquals ( 2 , IDENT_13 . size ( ) ) 