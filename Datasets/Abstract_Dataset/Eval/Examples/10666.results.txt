METHOD_0 ( ) { org . apache . IDENT_0 . types . IDENT_1 < org . apache . avro . IDENT_2 . IDENT_3 . IDENT_4 > IDENT_5 = org . apache . IDENT_0 . types . avro . IDENT_6 . METHOD_1 ( Person . IDENT_7 . ) ; org . apache . avro . IDENT_2 . IDENT_3 . IDENT_4 IDENT_8 = METHOD_2 ( STRING_0 ) ; final org . apache . IDENT_0 . IDENT_9 < org . apache . avro . IDENT_2 . IDENT_3 . IDENT_4 > IDENT_10 = org . apache . IDENT_0 . impl . IDENT_11 . IDENT_12 . METHOD_3 ( IDENT_5 , IDENT_8 ) ; IDENT_10 . write ( org . apache . IDENT_0 . io . IDENT_13 . METHOD_4 ( METHOD_4 . getAbsolutePath ( ) ) ) ; org . apache . IDENT_0 . IDENT_9 < org . apache . avro . IDENT_2 . IDENT_3 . IDENT_4 > IDENT_14 = org . apache . IDENT_0 . impl . IDENT_11 . IDENT_12 . getInstance ( ) . read ( org . apache . IDENT_0 . io . IDENT_15 . METHOD_4 ( METHOD_4 . getAbsolutePath ( ) , org . apache . IDENT_0 . types . avro . IDENT_6 . METHOD_1 ( IDENT_8 . METHOD_5 ( ) ) ) ) ; org . apache . avro . IDENT_2 . IDENT_3 . IDENT_4 IDENT_16 = IDENT_14 . METHOD_6 ( ) . iterator ( ) . next ( ) ; "<AssertPlaceHolder>" ; } next ( ) { org . apache . IDENT_0 . impl . spark . IDENT_17 IDENT_18 = null ; java . util . List < byte [ ] > next = null ; while ( IDENT_19 . hasNext ( ) ) { IDENT_20 . IDENT_21 < org . apache . IDENT_0 . impl . spark . IDENT_17 , java . util . List < byte [ ] > > t = IDENT_19 . next ( ) ; if ( ( key ) == null ) { key = t . METHOD_7 ( ) ; bytes . addAll ( t . METHOD_8 ( ) ) ; } else if ( ( IDENT_22 . compare ( key . value , 0 , key . value . length , t . METHOD_7 ( ) . value , 0 , t . METHOD_7 ( ) . value . length ) ) == 0 ) { bytes . addAll ( t . METHOD_8 ( ) ) ; } else { IDENT_18 = t . METHOD_7 ( ) ; next = com . google . common . collect . Lists . newArrayList ( t . METHOD_8 ( ) ) ; break ; } } IDENT_20 . IDENT_21 < org . apache . IDENT_0 . impl . spark . IDENT_17 , java . util . List < byte [ ] > > ret = new IDENT_20 . IDENT_21 < org . apache . IDENT_0 . impl . spark . IDENT_17 , java . util . List < byte [ ] > > ( key , bytes ) ; key = IDENT_18 ; bytes = next ; return ret ; }
org . junit . Assert . assertEquals ( IDENT_8 , IDENT_16 ) 