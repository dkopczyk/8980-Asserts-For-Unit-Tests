METHOD_0 ( ) { org . neo4j . jdbc . http . IDENT_0 connection = org . neo4j . jdbc . http . IDENT_1 . METHOD_1 ( METHOD_2 ( ) ) ; org . neo4j . jdbc . http . IDENT_2 statement = connection . METHOD_3 ( STRING_0 ) ; statement . METHOD_4 ( 1 , STRING_1 ) ; "<AssertPlaceHolder>" ; connection . close ( ) ; } execute ( ) { org . neo4j . driver . v1 . IDENT_3 result = METHOD_5 ( ) ; boolean IDENT_4 = METHOD_6 ( result ) ; if ( METHOD_6 ) { this . IDENT_5 = org . neo4j . jdbc . IDENT_6 . IDENT_7 . newInstance ( this . METHOD_7 ( ) , this , result , this . IDENT_8 ) ; this . IDENT_9 = - 1 ; } else { this . IDENT_5 = null ; try { org . neo4j . driver . v1 . IDENT_10 . IDENT_11 IDENT_12 = result . METHOD_8 ( ) . METHOD_9 ( ) ; this . IDENT_9 = ( ( ( IDENT_12 . METHOD_10 ( ) ) + ( IDENT_12 . METHOD_11 ( ) ) ) + ( IDENT_12 . METHOD_12 ( ) ) ) + ( IDENT_12 . METHOD_13 ( ) ) ; } catch ( java . lang . Exception e ) { throw new java . sql . METHOD_14 ( e ) ; } } return METHOD_6 ; }
org . junit . Assert . assertTrue ( statement . execute ( ) ) 