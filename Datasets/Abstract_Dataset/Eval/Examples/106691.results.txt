METHOD_0 ( ) { java . util . List < java . lang . String > IDENT_0 = java . util . Arrays . asList ( "" , STRING_0 , executor . IDENT_1 , ( ( executor . IDENT_1 ) + STRING_1 ) ) ; for ( java . lang . String url : IDENT_0 ) { java . lang . Integer IDENT_2 = executor . METHOD_1 ( url ) ; "<AssertPlaceHolder>" ; } } METHOD_1 ( java . lang . String ) { java . lang . Integer IDENT_3 = - 1 ; if ( ( url != null ) && ( url . contains ( IDENT_1 ) ) ) { java . lang . String [ ] IDENT_4 = url . split ( "/" ) ; java . lang . String IDENT_5 = IDENT_4 [ ( ( IDENT_4 . length ) - 1 ) ] ; try { IDENT_3 = java . lang . Integer . valueOf ( IDENT_5 ) ; } catch ( java . lang . IDENT_6 e ) { IDENT_3 = - 1 ; } } return IDENT_3 ; }
org . junit . Assert . assertTrue ( ( IDENT_2 < 0 ) ) 