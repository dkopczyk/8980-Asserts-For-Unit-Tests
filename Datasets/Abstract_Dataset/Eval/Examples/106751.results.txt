METHOD_0 ( ) { org . IDENT_0 . IDENT_1 IDENT_2 = new org . IDENT_0 . METHOD_1 ( INT_0 , INT_1 , 3 , true ) ; org . IDENT_0 . IDENT_3 . METHOD_2 ( IDENT_2 ) ; final org . IDENT_0 . IDENT_3 IDENT_4 = new org . IDENT_0 . METHOD_3 ( ) ; try { java . lang . Thread . sleep ( 100 ) ; IDENT_2 . METHOD_4 ( ( ( org . IDENT_0 . IDENT_5 . METHOD_5 ( ) ) + ( INT_2 * ( org . IDENT_0 . IDENT_6 . IDENT_7 ) ) ) ) ; org . IDENT_0 . IDENT_5 . METHOD_6 ( INT_3 ) ; TimeUnit . IDENT_8 . sleep ( ( 1 * ( org . IDENT_0 . IDENT_6 . IDENT_7 ) ) ) ; org . IDENT_0 . IDENT_5 . METHOD_6 ( INT_0 ) ; TimeUnit . IDENT_8 . sleep ( ( 1 * ( org . IDENT_0 . IDENT_6 . IDENT_7 ) ) ) ; org . IDENT_0 . IDENT_5 . METHOD_6 ( INT_4 ) ; TimeUnit . IDENT_8 . sleep ( ( 1 * ( org . IDENT_0 . IDENT_6 . IDENT_7 ) ) ) ; org . IDENT_0 . IDENT_5 . METHOD_6 ( INT_5 ) ; TimeUnit . IDENT_8 . sleep ( ( 1 * ( org . IDENT_0 . IDENT_6 . IDENT_7 ) ) ) ; TimeUnit . IDENT_8 . sleep ( ( 10 * ( org . IDENT_0 . IDENT_6 . IDENT_7 ) ) ) ; long IDENT_9 = org . IDENT_0 . IDENT_5 . METHOD_5 ( ) ; try { IDENT_4 . METHOD_7 ( Long . MAX_VALUE ) ; } catch ( org . IDENT_0 . java . lang . IDENT_10 e ) { } TimeUnit . IDENT_8 . sleep ( ( 1 * ( org . IDENT_0 . IDENT_6 . IDENT_7 ) ) ) ; java . util . concurrent . IDENT_11 IDENT_12 = java . util . concurrent . IDENT_13 . METHOD_8 ( 1 ) ; java . util . concurrent . IDENT_14 < java . lang . Boolean > future = IDENT_12 . METHOD_9 ( new java . lang . METHOD_10 ( ) { @ org . IDENT_0 . Override public void run ( ) { System . out . println ( STRING_0 ) ; IDENT_4 . METHOD_11 ( ) ; System . out . println ( STRING_1 ) ; } } , Boolean . IDENT_15 ) ; try { java . lang . Boolean response = future . get ( 5 , TimeUnit . IDENT_16 ) ; "<AssertPlaceHolder>" ; } catch ( java . util . concurrent . IDENT_17 e ) { System . err . println ( STRING_2 ) ; System . out . println ( STRING_3 ) ; try { java . lang . reflect . Field f = org . IDENT_0 . METHOD_3 . class . METHOD_12 ( STRING_4 ) ; f . METHOD_13 ( true ) ; f . set ( IDENT_4 , ( ( ( java . lang . Long ) ( f . get ( IDENT_4 ) ) ) + 1 ) ) ; System . out . println ( ( STRING_5 + ( future . get ( 5 , TimeUnit . IDENT_16 ) ) ) ) ; } catch ( java . lang . Throwable t ) { t . printStackTrace ( ) ; } org . junit . Assert . fail ( STRING_6 ) ; } finally { IDENT_12 . METHOD_14 ( ) ; System . out . println ( STRING_7 ) ; } } catch ( java . lang . IDENT_18 ex ) { } finally { IDENT_4 . METHOD_15 ( ) ; IDENT_2 . METHOD_16 ( ) ; } } METHOD_11 ( ) { org . IDENT_19 . IDENT_20 IDENT_21 = new org . IDENT_19 . METHOD_17 ( IDENT_22 , IDENT_23 , IDENT_24 ) ; METHOD_18 ( IDENT_21 ) ; return IDENT_21 ; }
org . junit . Assert . assertEquals ( Boolean . IDENT_15 , response ) 