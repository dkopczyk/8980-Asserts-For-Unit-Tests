METHOD_0 ( ) { final java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 , STRING_3 } ; org . apache . hadoop . io . IDENT_1 . IDENT_2 IDENT_3 = new org . apache . hadoop . io . IDENT_1 . METHOD_1 ( IDENT_4 . METHOD_2 ( ) ) ; org . apache . hadoop . io . IDENT_1 . IDENT_5 IDENT_6 = IDENT_3 . METHOD_3 ( org . apache . hadoop . io . IDENT_1 . IDENT_7 . class . getName ( ) ) ; java . io . File IDENT_8 = IDENT_4 . METHOD_4 ( ( STRING_4 + ( IDENT_6 . METHOD_5 ( ) ) ) ) ; java . io . InputStream in = org . apache . IDENT_9 . io . text . IDENT_10 . IDENT_11 . class . METHOD_6 ( ) . getResourceAsStream ( STRING_5 ) ; java . io . IDENT_12 out = IDENT_6 . METHOD_7 ( new java . io . METHOD_8 ( IDENT_8 ) ) ; try { org . apache . commons . IDENT_1 . utils . IDENT_13 . METHOD_9 ( in , out ) ; } finally { in . close ( ) ; out . close ( ) ; } final java . lang . String IDENT_14 = IDENT_4 . METHOD_10 ( STRING_5 ) ; final org . apache . IDENT_9 . IDENT_15 pipeline = new org . apache . IDENT_9 . impl . IDENT_16 . METHOD_11 ( org . apache . IDENT_9 . io . text . IDENT_10 . IDENT_11 . class , IDENT_4 . METHOD_2 ( ) ) ; final org . apache . IDENT_9 . IDENT_17 < java . lang . String > IDENT_18 = pipeline . read ( new org . apache . IDENT_9 . io . text . IDENT_10 . METHOD_12 ( new org . apache . hadoop . fs . Path ( IDENT_8 . getPath ( ) ) ) ) ; final java . util . Collection < java . lang . String > IDENT_19 = IDENT_18 . METHOD_13 ( ) . getValue ( ) ; for ( int i = 0 ; i < ( IDENT_0 . length ) ; i ++ ) { "<AssertPlaceHolder>" ; } } getValue ( ) { return value ; }
org . junit . Assert . assertTrue ( IDENT_19 . contains ( IDENT_0 [ i ] ) ) 