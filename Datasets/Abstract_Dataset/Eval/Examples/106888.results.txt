METHOD_0 ( ) { int [ ] [ ] IDENT_0 = new int [ ] [ ] { new int [ ] { 1 , 2 , 3 } , new int [ ] { 4 , 5 , 6 } , new int [ ] { 7 , 8 , 9 } } ; int IDENT_1 = IDENT_0 . length ; int IDENT_2 = IDENT_0 [ 0 ] . length ; java . io . File IDENT_3 = java . io . File . METHOD_1 ( STRING_0 , STRING_1 ) ; int IDENT_4 = 1 ; int [ ] IDENT_5 = new int [ ] { 0 , 2 } ; cc . IDENT_6 . util . IDENT_7 . METHOD_2 ( IDENT_0 , IDENT_4 , IDENT_1 , IDENT_2 , IDENT_3 . getAbsolutePath ( ) , IDENT_5 ) ; java . lang . String IDENT_8 = java . lang . String . format ( ( ( ( ( ( ( IDENT_3 . getAbsolutePath ( ) ) + STRING_2 ) + IDENT_1 ) + STRING_2 ) + IDENT_2 ) + STRING_3 ) , IDENT_4 ) ; java . io . IDENT_9 IDENT_10 = new java . io . METHOD_3 ( IDENT_8 , STRING_4 ) ; java . nio . IDENT_11 . IDENT_12 IDENT_13 = IDENT_10 . METHOD_4 ( ) ; final int IDENT_14 = ( 8 * IDENT_2 ) * IDENT_1 ; java . nio . ByteBuffer buf = IDENT_13 . map ( IDENT_12 . IDENT_15 . IDENT_16 , 0 , IDENT_14 ) ; for ( int to = 0 ; to < ( IDENT_5 . length ) ; to ++ ) { for ( int IDENT_17 = 0 ; IDENT_17 < IDENT_2 ; IDENT_17 ++ ) { int IDENT_18 = buf . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } } IDENT_10 . close ( ) ; } METHOD_2 ( int [ ] [ ] , int , int , int , java . lang . String , int [ ] ) { java . lang . String IDENT_8 = java . lang . String . format ( ( ( ( ( ( IDENT_19 + STRING_2 ) + IDENT_1 ) + STRING_2 ) + IDENT_2 ) + STRING_3 ) , IDENT_4 ) ; try ( java . io . METHOD_3 IDENT_20 = new java . io . METHOD_3 ( IDENT_8 , STRING_4 ) ) { java . nio . IDENT_11 . IDENT_12 IDENT_13 = IDENT_20 . METHOD_4 ( ) ; final int IDENT_14 = ( 8 * IDENT_2 ) * IDENT_1 ; java . nio . ByteBuffer buf = IDENT_13 . map ( IDENT_12 . IDENT_15 . IDENT_21 , 0 , IDENT_14 ) ; for ( int to = 0 ; to < ( IDENT_22 . length ) ; to ++ ) { for ( int IDENT_17 = 0 ; IDENT_17 < IDENT_2 ; IDENT_17 ++ ) { buf . METHOD_6 ( IDENT_0 [ IDENT_22 [ to ] ] [ IDENT_17 ] ) ; } } } }
org . junit . Assert . assertEquals ( IDENT_0 [ IDENT_5 [ to ] ] [ IDENT_17 ] , IDENT_18 ) 