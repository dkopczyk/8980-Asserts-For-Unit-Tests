METHOD_0 ( ) { double [ ] IDENT_0 = new double [ ] { FLOAT_0 / FLOAT_1 , 0.0 / FLOAT_1 , FLOAT_2 / FLOAT_1 } ; IDENT_1 . METHOD_1 ( IDENT_0 ) ; int IDENT_2 = INT_0 ; int [ ] IDENT_3 = new int [ IDENT_2 ] ; for ( int i = 0 ; i < ( IDENT_3 . length ) ; i ++ ) { IDENT_3 [ i ] = IDENT_1 . METHOD_2 ( ) ; } long [ ] IDENT_4 = new long [ IDENT_0 . length ] ; for ( int i = 0 ; i < ( IDENT_3 . length ) ; i ++ ) { ( IDENT_4 [ IDENT_3 [ i ] ] ) ++ ; } "<AssertPlaceHolder>" ; } METHOD_2 ( ) { double IDENT_5 = java . util . concurrent . IDENT_6 . METHOD_3 ( ) . METHOD_4 ( ) ; return METHOD_2 ( IDENT_5 ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_4 [ 1 ] ) 