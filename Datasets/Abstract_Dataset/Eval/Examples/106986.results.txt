METHOD_0 ( ) { final int IDENT_0 = INT_0 ; final int IDENT_1 = 1000 ; java . util . IDENT_2 r = new java . util . METHOD_1 ( ) ; int [ ] data = new int [ IDENT_0 ] ; int [ ] IDENT_3 = new int [ IDENT_0 ] ; int [ ] IDENT_4 = new int [ IDENT_0 ] ; for ( int IDENT_5 = 0 ; IDENT_5 < INT_1 ; ++ IDENT_5 ) { for ( int t = 0 ; t < IDENT_1 ; ++ t ) { for ( int k = 0 ; k < IDENT_0 ; ++ k ) { data [ k ] = r . METHOD_2 ( ) ; } me . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_3 ( data , 0 , IDENT_3 , 0 , IDENT_5 ) ; me . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_4 ( IDENT_3 , 0 , IDENT_4 , 0 , IDENT_5 ) ; me . IDENT_6 . IDENT_7 . IDENT_9 . METHOD_5 ( data , ( ( 1 << IDENT_5 ) - 1 ) ) ; "<AssertPlaceHolder>" ; } } } METHOD_5 ( int [ ] , int ) { for ( int i = 0 , end = array . length ; i < end ; ++ i ) { array [ i ] OP_0 IDENT_10 ; } }
org . junit . Assert . assertArrayEquals ( data , IDENT_4 ) 