METHOD_0 ( ) { com . alibaba . dubbo . common . serialize . IDENT_0 . IDENT_1 bean = new com . alibaba . dubbo . common . serialize . IDENT_0 . METHOD_1 ( ) ; int len = 0 ; long now = java . lang . System . currentTimeMillis ( ) ; for ( int i = 0 ; i < INT_0 ; i ++ ) { java . io . ByteArrayOutputStream IDENT_2 = new java . io . ByteArrayOutputStream ( ) ; java . io . IDENT_3 out = new java . io . METHOD_2 ( IDENT_2 ) ; out . METHOD_3 ( bean ) ; IDENT_2 . close ( ) ; if ( i == 0 ) len = IDENT_2 . toByteArray ( ) . length ; java . io . ByteArrayInputStream is = new java . io . ByteArrayInputStream ( IDENT_2 . toByteArray ( ) ) ; java . io . IDENT_4 in = new java . io . METHOD_4 ( is ) ; "<AssertPlaceHolder>" ; } System . out . println ( ( ( ( STRING_0 + ( ( java . lang . System . currentTimeMillis ( ) ) - now ) ) + STRING_1 ) + len ) ) ; } METHOD_5 ( ) { java . lang . String IDENT_5 ; byte b = METHOD_6 ( ) ; switch ( b ) { case IDENT_6 : return null ; case IDENT_7 : return new java . lang . Object ( ) ; case IDENT_8 : { IDENT_5 = METHOD_7 ( ) ; break ; } case IDENT_9 : { int index = METHOD_8 ( ) ; IDENT_5 = IDENT_10 . METHOD_9 ( index ) ; if ( IDENT_5 == null ) throw new java . io . IOException ( ( STRING_2 + index ) ) ; break ; } default : throw new java . io . IOException ( ( STRING_3 + b ) ) ; } try { java . lang . Class < ? > c = com . alibaba . dubbo . common . utils . IDENT_11 . METHOD_10 ( IDENT_5 ) ; return com . alibaba . dubbo . common . serialize . support . dubbo . Builder . METHOD_11 ( c ) . METHOD_12 ( this ) ; } catch ( java . lang . IDENT_12 e ) { throw new java . io . IOException ( ( STRING_4 + ( com . alibaba . dubbo . common . utils . StringUtils . toString ( e ) ) ) ) ; } }
org . junit . Assert . assertEquals ( in . METHOD_5 ( ) . getClass ( ) , com . alibaba . dubbo . common . serialize . IDENT_0 . METHOD_1 . class ) 