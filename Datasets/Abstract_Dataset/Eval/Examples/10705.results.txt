METHOD_0 ( ) { java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 , STRING_3 } ; java . lang . String IDENT_1 = IDENT_2 . METHOD_1 ( STRING_4 ) ; java . io . File IDENT_3 = new java . io . File ( IDENT_1 ) ; java . io . InputStream IDENT_4 = new java . io . METHOD_2 ( IDENT_3 ) ; org . apache . IDENT_5 . io . text . IDENT_6 . IDENT_7 IDENT_8 = new org . apache . IDENT_5 . io . text . IDENT_6 . METHOD_3 ( IDENT_4 ) ; java . util . ArrayList < java . lang . String > IDENT_9 = new java . util . ArrayList < java . lang . String > ( 5 ) ; while ( IDENT_8 . hasNext ( ) ) { IDENT_9 . add ( IDENT_8 . next ( ) ) ; } for ( int i = 0 ; i < ( IDENT_0 . length ) ; i ++ ) { "<AssertPlaceHolder>" ; } } get ( int ) { switch ( index ) { case 0 : return first ; case 1 : return IDENT_10 ; case 2 : return IDENT_11 ; default : throw new java . lang . METHOD_4 ( ) ; } }
org . junit . Assert . assertEquals ( IDENT_0 [ i ] , IDENT_9 . get ( i ) ) 