METHOD_0 ( ) { final java . util . concurrent . atomic . IDENT_0 IDENT_1 = new java . util . concurrent . atomic . METHOD_1 ( 0 ) ; com . IDENT_2 . redis . IDENT_3 . IDENT_4 IDENT_3 = new com . IDENT_2 . redis . IDENT_3 . METHOD_2 ( STRING_0 , INT_0 , com . IDENT_2 . redis . IDENT_3 . Configuration . METHOD_3 ( ) . METHOD_4 ( false ) ) ; IDENT_3 . METHOD_5 ( new com . IDENT_2 . redis . IDENT_3 . METHOD_6 ( ) { @ com . IDENT_2 . redis . IDENT_3 . Override public void METHOD_7 ( com . IDENT_2 . redis . IDENT_3 . IDENT_4 IDENT_3 ) { IDENT_1 . METHOD_8 ( ) ; } } ) ; try { IDENT_3 . METHOD_9 ( ) ; org . junit . Assert . fail ( ) ; } catch ( java . io . IOException e ) { } "<AssertPlaceHolder>" ; } METHOD_9 ( ) { com . IDENT_2 . redis . IDENT_3 . IDENT_4 IDENT_3 = new com . IDENT_2 . redis . IDENT_3 . METHOD_2 ( new com . IDENT_2 . redis . IDENT_3 . io . METHOD_10 ( com . IDENT_2 . redis . IDENT_3 . IDENT_5 . class . METHOD_11 ( ) . getResourceAsStream ( STRING_1 ) , 1000 ) , IDENT_6 . IDENT_7 , com . IDENT_2 . redis . IDENT_3 . Configuration . METHOD_3 ( ) ) ; final java . util . concurrent . atomic . METHOD_1 IDENT_1 = new java . util . concurrent . atomic . METHOD_1 ( 0 ) ; IDENT_3 . METHOD_12 ( new com . IDENT_2 . redis . IDENT_3 . event . METHOD_13 ( ) { @ com . IDENT_2 . redis . IDENT_3 . Override public void METHOD_14 ( com . IDENT_2 . redis . IDENT_3 . IDENT_4 IDENT_3 , com . IDENT_2 . redis . IDENT_3 . event . IDENT_8 event ) { if ( event instanceof com . IDENT_2 . redis . IDENT_3 . IDENT_9 . IDENT_10 ) { IDENT_1 . METHOD_8 ( ) ; } } } ) ; IDENT_3 . METHOD_9 ( ) ; org . junit . Assert . assertEquals ( 4 , IDENT_1 . get ( ) ) ; }
org . junit . Assert . assertEquals ( 1 , IDENT_1 . get ( ) ) 