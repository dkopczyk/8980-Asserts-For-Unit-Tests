METHOD_0 ( ) { redis . IDENT_0 . IDENT_1 . IDENT_2 IDENT_1 = new redis . IDENT_0 . IDENT_1 . METHOD_1 ( STRING_0 , INT_0 ) ; for ( int i = 0 ; i < INT_1 ; i ++ ) { IDENT_1 . METHOD_2 ( ( STRING_1 + i ) ) ; IDENT_1 . set ( ( STRING_1 + i ) , ( STRING_2 + i ) ) ; } IDENT_1 . close ( ) ; com . IDENT_3 . redis . IDENT_4 . IDENT_5 IDENT_6 = new com . IDENT_3 . redis . IDENT_4 . METHOD_3 ( STRING_0 , INT_0 , com . IDENT_3 . redis . IDENT_4 . Configuration . METHOD_4 ( ) ) ; final java . util . concurrent . atomic . IDENT_7 IDENT_8 = new java . util . concurrent . atomic . METHOD_5 ( 0 ) ; IDENT_6 . METHOD_6 ( new com . IDENT_3 . redis . IDENT_4 . event . METHOD_7 ( ) { @ com . IDENT_3 . redis . IDENT_4 . Override public void METHOD_8 ( com . IDENT_3 . redis . IDENT_4 . IDENT_5 IDENT_4 , com . IDENT_3 . redis . IDENT_4 . event . IDENT_9 event ) { if ( event instanceof com . IDENT_3 . redis . IDENT_4 . IDENT_10 . IDENT_11 . IDENT_12 ) { com . IDENT_3 . redis . IDENT_4 . IDENT_10 . IDENT_11 . IDENT_12 < ? , ? > IDENT_13 = ( ( com . IDENT_3 . redis . IDENT_4 . IDENT_10 . IDENT_11 . IDENT_12 < ? , ? > ) ( event ) ) ; if ( com . IDENT_3 . redis . IDENT_4 . util . IDENT_14 . toString ( IDENT_13 . getKey ( ) ) . startsWith ( STRING_1 ) ) { try { java . lang . Thread . sleep ( 1 ) ; } catch ( java . lang . IDENT_15 e ) { } IDENT_8 . METHOD_9 ( ) ; } } if ( event instanceof com . IDENT_3 . redis . IDENT_4 . event . IDENT_16 ) { try { IDENT_4 . close ( ) ; } catch ( java . io . IOException e ) { } } } } ) ; IDENT_6 . METHOD_10 ( ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( ) { if ( ! ( this . IDENT_17 . METHOD_11 ( com . IDENT_3 . redis . IDENT_4 . Status . IDENT_18 , com . IDENT_3 . redis . IDENT_4 . Status . IDENT_19 ) ) ) return ; try { METHOD_12 ( ) ; } catch ( java . io . IDENT_20 e ) { if ( ! ( ( e . METHOD_13 ( ) ) instanceof java . io . IDENT_21 ) ) throw e . METHOD_13 ( ) ; } finally { METHOD_14 ( ) ; METHOD_15 ( this ) ; } }
org . junit . Assert . assertEquals ( INT_1 , IDENT_8 . get ( ) ) 