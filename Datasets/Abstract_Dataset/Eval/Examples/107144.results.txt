METHOD_0 ( ) { final java . lang . String expected = "" ; java . lang . String res ; final long IDENT_0 = - 1L ; final com . IDENT_1 . IDENT_2 . IDENT_3 a = new com . IDENT_1 . IDENT_2 . METHOD_1 ( STRING_0 ) ; res = a . encode ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } encode ( long [ ] ) { if ( ( IDENT_4 . length ) == 0 ) { return "" ; } for ( final long IDENT_5 : IDENT_4 ) { if ( IDENT_5 < 0 ) { return "" ; } if ( IDENT_5 > ( com . IDENT_1 . IDENT_2 . METHOD_1 . IDENT_6 ) ) { throw new java . lang . IllegalArgumentException ( ( ( STRING_1 + ( com . IDENT_1 . IDENT_2 . METHOD_1 . IDENT_6 ) ) + STRING_2 ) ) ; } } return this . METHOD_2 ( IDENT_4 ) ; }
org . junit . Assert . assertEquals ( expected , res ) 