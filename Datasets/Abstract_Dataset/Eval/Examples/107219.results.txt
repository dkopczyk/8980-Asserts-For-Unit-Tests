METHOD_0 ( ) { java . util . function . IDENT_0 IDENT_1 = new java . util . function . METHOD_1 ( ) { @ com . IDENT_2 . java . string . Override public boolean test ( int t ) { return ( ( ( ( ( ( ( ( ( t == STRING_0 ) || ( t == STRING_1 ) ) || ( t == STRING_2 ) ) || ( t == STRING_3 ) ) || ( t == STRING_4 ) ) || ( t == STRING_5 ) ) || ( t == STRING_6 ) ) || ( t == STRING_7 ) ) || ( t == STRING_8 ) ) || ( t == STRING_9 ) ; } } ; java . lang . String IDENT_3 = STRING_10 ; long IDENT_4 = IDENT_3 . METHOD_2 ( ) . filter ( IDENT_1 ) . count ( ) ; "<AssertPlaceHolder>" ; } test ( java . lang . String ) { return ( t . length ( ) ) > 10 ; }
org . junit . Assert . assertEquals ( 5 , IDENT_4 ) 