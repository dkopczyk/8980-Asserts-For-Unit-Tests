METHOD_0 ( ) { final com . IDENT_0 . maven . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new com . IDENT_0 . maven . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; final com . IDENT_0 . maven . IDENT_1 . IDENT_2 . IDENT_5 IDENT_6 = new com . IDENT_0 . maven . IDENT_1 . IDENT_2 . METHOD_2 ( ) ; final com . IDENT_0 . maven . IDENT_1 . IDENT_7 IDENT_8 = IDENT_9 . mock ( com . IDENT_0 . maven . IDENT_1 . IDENT_7 . class , STRING_0 ) ; final com . IDENT_0 . maven . IDENT_1 . IDENT_7 IDENT_10 = IDENT_9 . mock ( com . IDENT_0 . maven . IDENT_1 . IDENT_7 . class , STRING_1 ) ; IDENT_9 . METHOD_3 ( new org . IDENT_11 . METHOD_4 ( ) { { METHOD_5 ( IDENT_8 ) . METHOD_6 ( ) ; METHOD_7 ( METHOD_8 ( java . util . Collections . METHOD_9 ( com . IDENT_0 . maven . IDENT_1 . IDENT_2 . IDENT_12 ) ) ) ; METHOD_5 ( IDENT_10 ) . METHOD_6 ( ) ; METHOD_7 ( METHOD_8 ( java . util . Collections . METHOD_9 ( com . IDENT_0 . maven . IDENT_1 . IDENT_2 . IDENT_13 ) ) ) ; METHOD_10 ( IDENT_8 ) . METHOD_11 ( with ( new com . IDENT_0 . maven . IDENT_1 . IDENT_2 . METHOD_12 ( com . IDENT_0 . maven . IDENT_1 . IDENT_2 . IDENT_12 , org . apache . maven . project . IDENT_14 . class ) ) ) ; METHOD_7 ( METHOD_8 ( IDENT_4 ) ) ; METHOD_10 ( IDENT_10 ) . METHOD_11 ( with ( new com . IDENT_0 . maven . IDENT_1 . IDENT_2 . METHOD_12 ( com . IDENT_0 . maven . IDENT_1 . IDENT_2 . IDENT_13 , com . IDENT_0 . maven . IDENT_1 . IDENT_2 . METHOD_1 . class ) ) ) ; METHOD_7 ( METHOD_8 ( IDENT_6 ) ) ; } } ) ; IDENT_15 . put ( com . IDENT_0 . maven . IDENT_1 . IDENT_2 . IDENT_13 , IDENT_8 ) ; IDENT_15 . put ( com . IDENT_0 . maven . IDENT_1 . IDENT_2 . IDENT_16 , IDENT_10 ) ; java . util . Set < java . lang . String > IDENT_17 = new java . util . HashSet < java . lang . String > ( ) ; IDENT_17 . add ( com . IDENT_0 . maven . IDENT_1 . IDENT_2 . IDENT_16 ) ; java . util . Map < java . lang . String , java . lang . Object > models = IDENT_18 . METHOD_13 ( IDENT_17 ) ; "<AssertPlaceHolder>" ; } METHOD_13 ( java . util . Set ) { java . util . Map < java . lang . String , java . lang . Object > IDENT_19 = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; for ( java . lang . String IDENT_20 : IDENT_17 ) { java . lang . Object model = models . get ( IDENT_20 ) ; if ( model == null ) { com . IDENT_0 . maven . IDENT_1 . IDENT_7 IDENT_21 = IDENT_15 . get ( IDENT_20 ) ; if ( IDENT_21 == null ) { throw new java . lang . IllegalArgumentException ( ( ( STRING_2 + IDENT_20 ) + STRING_3 ) ) ; } java . util . Map < java . lang . String , java . lang . Object > IDENT_22 = METHOD_13 ( IDENT_21 . METHOD_6 ( ) ) ; model = IDENT_21 . METHOD_11 ( IDENT_22 ) ; models . put ( IDENT_20 , model ) ; } IDENT_19 . put ( IDENT_20 , model ) ; } return IDENT_19 ; }
org . junit . Assert . assertEquals ( IDENT_6 , models . get ( com . IDENT_0 . maven . IDENT_1 . IDENT_2 . IDENT_16 ) ) 