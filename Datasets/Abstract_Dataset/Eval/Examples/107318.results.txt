METHOD_0 ( ) { final it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 g = it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_4 . METHOD_1 ( INT_0 ) . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } run ( it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 , int , it . IDENT_0 . IDENT_1 . logging . IDENT_5 , long ) { it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_7 IDENT_8 = new it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_3 ( IDENT_9 , IDENT_10 , true , IDENT_11 ) ; final java . util . concurrent . atomic . IDENT_12 parent = IDENT_8 . IDENT_13 ; it . IDENT_0 . IDENT_1 . util . IDENT_14 random = new it . IDENT_0 . IDENT_1 . util . METHOD_4 ( IDENT_15 ) ; final int n = IDENT_9 . METHOD_5 ( ) ; int IDENT_16 = 0 ; int IDENT_17 = n - 1 ; int IDENT_18 = - 1 ; while ( IDENT_16 < IDENT_17 ) { if ( IDENT_11 != null ) IDENT_11 . logger ( ) . info ( ( ( ( ( STRING_0 + IDENT_16 ) + STRING_1 4 ) + IDENT_17 ) + "]" ) ) ; IDENT_8 . METHOD_6 ( ) ; IDENT_8 . METHOD_7 ( ( METHOD_7 . queue . isEmpty ( ) ? random . METHOD_8 ( n ) : METHOD_7 . queue . METHOD_9 ( random . METHOD_8 ( METHOD_7 . queue . size ( ) ) ) ) , IDENT_18 ) ; int IDENT_19 = METHOD_7 . METHOD_10 ( ) ; IDENT_18 = it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_20 . METHOD_11 ( METHOD_7 , METHOD_11 ) ; IDENT_16 = java . lang . Math . max ( METHOD_7 . METHOD_12 ( ) , IDENT_16 ) ; IDENT_17 = java . lang . Math . min ( IDENT_17 , ( 2 * ( METHOD_7 . METHOD_12 ( ) ) ) ) ; if ( IDENT_11 != null ) IDENT_11 . logger ( ) . info ( ( ( ( ( STRING_2 + IDENT_16 ) + STRING_1 4 ) + IDENT_17 ) + "]" ) ) ; if ( IDENT_16 == IDENT_17 ) break ; METHOD_7 . METHOD_6 ( ) ; METHOD_7 . METHOD_7 ( IDENT_19 , METHOD_11 ) ; IDENT_19 = METHOD_7 . METHOD_10 ( ) ; METHOD_11 = it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_20 . METHOD_11 ( METHOD_7 , METHOD_11 ) ; IDENT_16 = java . lang . Math . max ( METHOD_7 . METHOD_12 ( ) , IDENT_16 ) ; IDENT_17 = java . lang . Math . min ( IDENT_17 , ( 2 * ( METHOD_7 . METHOD_12 ( ) ) ) ) ; if ( IDENT_11 != null ) IDENT_11 . logger ( ) . info ( ( ( ( ( STRING_1 3 + IDENT_16 ) + STRING_1 4 ) + IDENT_17 ) + "]" ) ) ; if ( IDENT_16 == IDENT_17 ) break ; int IDENT_21 = IDENT_19 ; for ( int i = ( METHOD_7 . METHOD_12 ( ) ) / 2 ; ( i OP_0 ) != 0 ; ) IDENT_21 = parent . get ( IDENT_21 ) ; METHOD_7 . METHOD_6 ( ) ; METHOD_7 . METHOD_7 ( IDENT_21 , METHOD_11 ) ; IDENT_19 = METHOD_7 . METHOD_10 ( ) ; METHOD_11 = it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_20 . METHOD_11 ( METHOD_7 , METHOD_11 ) ; IDENT_16 = java . lang . Math . max ( METHOD_7 . METHOD_12 ( ) , IDENT_16 ) ; IDENT_17 = java . lang . Math . min ( IDENT_17 , ( 2 * ( METHOD_7 . METHOD_12 ( ) ) ) ) ; if ( IDENT_11 != null ) IDENT_11 . logger ( ) . info ( ( ( ( ( ( ( STRING_1 6 + IDENT_21 ) + STRING_3 ) + IDENT_16 ) + STRING_1 4 ) + IDENT_17 ) + "]" ) ) ; if ( IDENT_16 == IDENT_17 ) break ; METHOD_7 . METHOD_6 ( ) ; METHOD_7 . METHOD_7 ( IDENT_19 ) ; IDENT_19 = METHOD_7 . METHOD_10 ( ) ; METHOD_11 = it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_20 . METHOD_11 ( METHOD_7 , METHOD_11 ) ; IDENT_16 = java . lang . Math . max ( METHOD_7 . METHOD_12 ( ) , IDENT_16 ) ; IDENT_17 = java . lang . Math . min ( IDENT_17 , ( 2 * ( METHOD_7 . METHOD_12 ( ) ) ) ) ; if ( IDENT_11 != null ) IDENT_11 . logger ( ) . info ( ( ( ( ( STRING_1 1 + IDENT_16 ) + STRING_1 4 ) + IDENT_17 ) + "]" ) ) ; if ( IDENT_16 == IDENT_17 ) break ; IDENT_21 = IDENT_19 ; for ( int i = ( METHOD_7 . METHOD_12 ( ) ) / 2 ; ( i OP_0 ) != 0 ; ) IDENT_21 = parent . get ( IDENT_21 ) ; METHOD_7 . METHOD_6 ( ) ; METHOD_7 . METHOD_7 ( IDENT_21 , METHOD_11 ) ; METHOD_11 = it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_20 . METHOD_11 ( METHOD_7 , METHOD_11 ) ; IDENT_16 = java . lang . Math . max ( METHOD_7 . METHOD_12 ( ) , IDENT_16 ) ; IDENT_17 = java . lang . Math . min ( IDENT_17 , ( 2 * ( METHOD_7 . METHOD_12 ( ) ) ) ) ; if ( IDENT_11 != null ) IDENT_11 . logger ( ) . info ( ( ( ( ( ( ( STRING_4 + IDENT_21 ) + STRING_3 ) + IDENT_16 ) + STRING_1 4 ) + IDENT_17 ) + "]" ) ) ; if ( IDENT_16 == IDENT_17 ) break ; final it . IDENT_0 . IDENT_1 . IDENT_22 . IDENT_23 . IDENT_24 IDENT_25 = METHOD_7 . IDENT_25 . METHOD_13 ( ) ; final it . IDENT_0 . IDENT_1 . IDENT_22 . IDENT_23 . IDENT_24 queue = METHOD_7 . queue . METHOD_13 ( ) ; final it . IDENT_0 . IDENT_1 . logging . IDENT_5 IDENT_26 = ( IDENT_11 == null ) ? null : new it . IDENT_0 . IDENT_1 . logging . METHOD_14 ( IDENT_11 . logger ( ) , IDENT_11 . IDENT_27 , java . util . concurrent . TimeUnit . IDENT_28 , STRING_5 ) ; if ( IDENT_11 != null ) { IDENT_11 . logger ( ) . debug ( ( STRING_1 + IDENT_25 ) ) ; IDENT_26 . start ( STRING_6 ) ; } int IDENT_29 = 0 ; for ( int d = METHOD_7 . METHOD_12 ( ) ; ( d > 0 ) && ( IDENT_16 < IDENT_17 ) ; d OP_0 ) { if ( IDENT_11 != null ) { IDENT_26 . IDENT_30 = ( ( IDENT_11 . count ) + ( IDENT_25 . METHOD_9 ( ( d + 1 ) ) ) ) - ( IDENT_25 . METHOD_9 ( ( ( IDENT_16 / 2 ) + 1 ) ) ) ; IDENT_11 . logger ( ) . info ( ( ( ( ( ( ( STRING_1 5 + ( ( IDENT_25 . METHOD_9 ( ( d + 1 ) ) ) - ( IDENT_25 . METHOD_9 ( d ) ) ) ) + STRING_1 0 ) + d ) + STRING_1 2 ) + ( IDENT_26 . IDENT_30 ) ) + STRING_7 ) ) ; } for ( int pos = IDENT_25 . METHOD_9 ( d ) ; pos < ( IDENT_25 . METHOD_9 ( ( d + 1 ) ) ) ; pos ++ ) { final int x = queue . METHOD_9 ( pos ) ; METHOD_7 . METHOD_6 ( ) ; METHOD_7 . METHOD_7 ( x ) ; METHOD_11 = it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_20 . METHOD_11 ( METHOD_7 , METHOD_11 ) ; IDENT_29 = java . lang . Math . max ( IDENT_29 , METHOD_7 . METHOD_12 ( ) ) ; IDENT_16 = java . lang . Math . max ( IDENT_16 , IDENT_29 ) ; if ( IDENT_16 == IDENT_17 ) return IDENT_16 ; } IDENT_17 = java . lang . Math . max ( IDENT_29 , ( 2 * ( d - 1 ) ) ) ; if ( IDENT_11 != null ) { IDENT_26 . METHOD_15 ( ( ( IDENT_25 . METHOD_9 ( ( d + 1 ) ) ) - ( IDENT_25 . METHOD_9 ( d ) ) ) ) ; IDENT_11 . logger ( ) . info ( ( ( ( ( STRING_8 + IDENT_16 ) + STRING_1 4 ) + IDENT_17 ) + "]" ) ) ; } } if ( IDENT_26 != null ) IDENT_26 . METHOD_16 ( ) ; } return IDENT_16 ; }
org . junit . Assert . assertEquals ( 20 , it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_20 . run ( g , 0 , new it . IDENT_0 . IDENT_1 . logging . METHOD_14 ( ) , 0 ) ) 