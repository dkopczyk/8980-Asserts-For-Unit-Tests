METHOD_0 ( ) { final int length = INT_0 ; final int [ ] IDENT_0 = new int [ ] { INT_1 , INT_2 , INT_3 , INT_4 , INT_5 , INT_6 , INT_7 } ; final java . lang . String [ ] IDENT_1 = new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 1 , STRING_3 , STRING_2 2 , STRING_4 , STRING_5 } ; for ( int i = 0 ; i < ( IDENT_0 . length ) ; i ++ ) { final int IDENT_2 = INT_8 ; final long [ ] IDENT_3 = new long [ length ] ; for ( int j = 0 ; j < length ; j ++ ) { IDENT_3 [ j ] = ( ( long ) ( ( java . lang . Math . METHOD_1 ( ( ( ( ( j * ( IDENT_0 [ i ] ) ) * 2 ) * ( Math . IDENT_4 ) ) / IDENT_2 ) ) ) * FLOAT_0 ) ) ; } final org . IDENT_5 . IDENT_6 . IDENT_7 . model . IDENT_8 . IDENT_9 . IDENT_10 s = new org . IDENT_5 . IDENT_6 . IDENT_7 . model . IDENT_8 . IDENT_9 . METHOD_2 ( IDENT_3 , new org . IDENT_5 . IDENT_6 . IDENT_7 . model . IDENT_8 . METHOD_3 ( 2 , IDENT_2 ) , 1 ) ; final org . IDENT_5 . IDENT_6 . IDENT_7 . model . library . IDENT_11 . IDENT_12 . IDENT_13 n = IDENT_14 . select ( org . IDENT_5 . IDENT_6 . IDENT_7 . model . library . IDENT_11 . IDENT_12 . IDENT_15 . class ) . convert ( new org . IDENT_5 . IDENT_6 . IDENT_7 . model . library . IDENT_11 . IDENT_12 . METHOD_4 ( ( ( ( ( STRING_2 0 + ( IDENT_1 [ i ] ) ) + STRING_6 ) + ( IDENT_0 [ i ] ) ) + STRING_2 ) ) , new org . IDENT_5 . IDENT_6 . IDENT_7 . model . IDENT_8 . IDENT_9 . METHOD_5 ( new org . IDENT_5 . IDENT_6 . IDENT_7 . model . IDENT_8 . IDENT_9 . METHOD_2 [ ] { s } ) ) ; new org . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_16 . service . IDENT_17 . METHOD_6 ( ) . METHOD_7 ( ( ( ( ( ( ( STRING_2 0 + ( IDENT_1 [ i ] ) ) + STRING_6 ) + ( IDENT_0 [ i ] ) ) + STRING_7 ) + ( n . METHOD_8 ( ) ) ) + STRING_8 ) ) ; "<AssertPlaceHolder>" ; new org . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_16 . service . IDENT_17 . METHOD_6 ( ) . METHOD_7 ( STRING_9 ) ; } } METHOD_8 ( ) { return this . IDENT_18 ; }
org . junit . Assert . assertTrue ( ( ( ( n . METHOD_8 ( ) ) > ( ( IDENT_0 [ i ] ) - 10 ) ) && ( ( n . METHOD_8 ( ) ) < ( ( IDENT_0 [ i ] ) + 10 ) ) ) ) 