METHOD_0 ( ) { org . IDENT_0 . business . IDENT_1 . entities . IDENT_2 order = METHOD_1 ( ) ; org . IDENT_0 . business . IDENT_3 . entities . IDENT_4 IDENT_5 = order . METHOD_2 ( IDENT_6 . METHOD_3 ( ) ) ; org . IDENT_0 . business . IDENT_1 . entities . IDENT_7 IDENT_8 = org . IDENT_0 . business . test . IDENT_1 . entities . IDENT_9 . METHOD_4 ( IDENT_5 , INT_0 , INT_1 ) ; order . add ( IDENT_8 ) ; order . METHOD_5 ( order . METHOD_2 ( IDENT_6 . METHOD_3 ( ) ) ) ; java . util . List < org . IDENT_0 . business . IDENT_1 . entities . IDENT_7 > IDENT_10 = IDENT_8 . METHOD_6 ( ) ; org . IDENT_0 . business . IDENT_11 . entities . IDENT_12 IDENT_13 = IDENT_14 . IDENT_15 . getType ( ) ; org . IDENT_0 . business . test . IDENT_1 . entities . IDENT_9 . METHOD_7 ( IDENT_10 . get ( 0 ) , IDENT_13 , new java . math . BigDecimal ( 1000 ) , new java . math . BigDecimal ( 100 ) , true ) ; org . IDENT_0 . business . test . IDENT_1 . entities . IDENT_9 . METHOD_7 ( IDENT_10 . get ( 1 ) , IDENT_13 , new java . math . BigDecimal ( 1000 ) , new java . math . BigDecimal ( INT_2 ) , true ) ; IDENT_16 . save ( IDENT_8 ) ; IDENT_16 . METHOD_8 ( ) ; java . lang . Long id = IDENT_8 . getId ( ) ; org . IDENT_0 . business . IDENT_1 . entities . IDENT_17 found = ( ( org . IDENT_0 . business . IDENT_1 . entities . IDENT_17 ) ( IDENT_16 . find ( id ) ) ) ; "<AssertPlaceHolder>" ; IDENT_16 . remove ( id ) ; IDENT_16 . METHOD_8 ( ) ; try { IDENT_16 . find ( id ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( org . IDENT_0 . business . common . exceptions . IDENT_18 IDENT_19 ) { } } find ( org . IDENT_20 . IDENT_21 . data . IDENT_22 ) { java . util . List < org . IDENT_20 . IDENT_21 . IDENT_23 > IDENT_24 = METHOD_9 ( ) ; for ( org . IDENT_20 . IDENT_21 . IDENT_23 IDENT_25 : IDENT_24 ) { if ( IDENT_25 . METHOD_10 ( ) . equals ( task ) ) { return IDENT_25 ; } } return null ; }
org . junit . Assert . assertNotNull ( found ) 