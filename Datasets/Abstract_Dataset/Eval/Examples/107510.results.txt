METHOD_0 ( ) { org . joda . time . IDENT_0 start = new org . joda . time . METHOD_1 ( INT_0 , 10 , 5 ) ; METHOD_2 ( org . IDENT_1 . business . test . IDENT_2 . entities . IDENT_3 . METHOD_3 ( start , org . joda . time . IDENT_4 . METHOD_4 ( 4 ) ) ) ; METHOD_5 ( task ) ; METHOD_6 ( ) ; org . IDENT_1 . business . IDENT_5 . IDENT_6 IDENT_7 = org . IDENT_1 . business . IDENT_5 . IDENT_6 . METHOD_7 ( 1 ) ; IDENT_8 . METHOD_8 ( java . util . Collections . singletonList ( IDENT_9 ) ) . METHOD_9 ( org . IDENT_1 . business . test . IDENT_2 . entities . IDENT_3 . METHOD_10 ( start , 1 ) ) . METHOD_11 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_12 ( org . IDENT_1 . business . resources . entities . IDENT_10 ) { java . util . List < org . IDENT_1 . business . IDENT_2 . entities . IDENT_11 > IDENT_12 = METHOD_12 ( ) . get ( resource ) ; return IDENT_12 == null ? java . util . Collections . emptyList ( ) : java . util . Collections . METHOD_13 ( IDENT_12 ) ; }
org . junit . Assert . assertTrue ( IDENT_8 . METHOD_12 ( IDENT_9 ) . isEmpty ( ) ) 