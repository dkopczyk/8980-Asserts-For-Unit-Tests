METHOD_0 ( ) { METHOD_1 ( org . IDENT_0 . business . IDENT_1 . entities . IDENT_2 . create ( METHOD_2 ( 8 ) ) . METHOD_3 ( METHOD_2 ( 2 ) ) , java . util . Collections . METHOD_4 ( ) ) ; org . IDENT_0 . business . IDENT_3 . IDENT_4 start = org . IDENT_0 . business . test . IDENT_5 . entities . IDENT_6 . date ( INT_0 , 2 , 4 ) ; METHOD_5 ( start , 4 ) ; IDENT_7 . METHOD_6 ( org . IDENT_0 . business . test . IDENT_5 . entities . IDENT_6 . METHOD_7 ( start , 3 ) ) . METHOD_8 ( org . IDENT_0 . business . IDENT_3 . IDENT_8 . METHOD_9 ( 2 ) ) ; java . math . BigDecimal IDENT_9 = IDENT_7 . METHOD_10 ( ) . METHOD_11 ( ) ; java . math . BigDecimal IDENT_10 = IDENT_7 . METHOD_12 ( ) . METHOD_11 ( ) ; "<AssertPlaceHolder>" ; } compareTo ( org . IDENT_0 . web . IDENT_11 . IDENT_12 ) { final java . lang . String code = getCode ( ) ; final java . lang . String IDENT_13 = IDENT_14 . getCode ( ) ; if ( code == null ) { org . IDENT_0 . web . IDENT_11 . IDENT_12 . LOG . warn ( ( ( IDENT_15 ) + STRING_0 ) ) ; return - 1 ; } if ( IDENT_13 == null ) { org . IDENT_0 . web . IDENT_11 . IDENT_12 . LOG . warn ( ( ( IDENT_14 . IDENT_15 ) + STRING_0 ) ) ; return 1 ; } return code . compareTo ( IDENT_13 ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_9 . compareTo ( IDENT_10 ) ) > 0 ) ) 