METHOD_0 ( ) { int IDENT_0 = IDENT_1 . METHOD_1 ( new org . IDENT_2 . business . common . IDENT_3 < java . lang . Integer > ( ) { @ org . IDENT_2 . business . test . IDENT_4 . IDENT_5 . Override public org . IDENT_2 . business . test . IDENT_4 . IDENT_5 . Integer execute ( ) { return IDENT_6 . METHOD_2 ( null ) . size ( ) ; } } ) ; IDENT_1 . METHOD_3 ( new org . IDENT_2 . business . common . IDENT_3 < java . lang . IDENT_7 > ( ) { @ org . IDENT_2 . business . test . IDENT_4 . IDENT_5 . Override public org . IDENT_2 . business . test . IDENT_4 . IDENT_5 . IDENT_7 execute ( ) { IDENT_6 . save ( METHOD_4 ( METHOD_5 ( ) ) ) ; return null ; } } ) ; int size = IDENT_1 . METHOD_1 ( new org . IDENT_2 . business . common . IDENT_3 < java . lang . Integer > ( ) { @ org . IDENT_2 . business . test . IDENT_4 . IDENT_5 . Override public org . IDENT_2 . business . test . IDENT_4 . IDENT_5 . Integer execute ( ) { return IDENT_6 . METHOD_2 ( null ) . size ( ) ; } } ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . IDENT_2 . business . resources . entities . IDENT_8 ) { java . util . List < org . IDENT_2 . business . IDENT_4 . entities . User > result = new java . util . ArrayList ( ) ; boolean condition ; for ( org . IDENT_2 . business . IDENT_4 . entities . User user : METHOD_6 ( ) ) { condition = ( ( user . METHOD_7 ( ) ) == null ) || ( ( ( IDENT_9 != null ) && ( ! ( IDENT_9 . METHOD_8 ( ) ) ) ) && ( IDENT_9 . getId ( ) . equals ( user . METHOD_7 ( ) . getId ( ) ) ) ) ; if ( condition ) { result . add ( user ) ; } } return result ; }
org . junit . Assert . assertEquals ( ( IDENT_0 + 1 ) , size ) 