METHOD_0 ( ) { final java . util . List list = new java . util . ArrayList ( ) ; list . add ( null ) ; IDENT_0 . METHOD_1 ( list ) ; IDENT_1 = IDENT_2 . METHOD_2 ( STRING_0 ) ; org . IDENT_3 . rules . IDENT_4 . support . IDENT_5 IDENT_6 = new org . IDENT_3 . rules . IDENT_4 . support . METHOD_3 ( ) { public void METHOD_4 ( java . lang . Object IDENT_7 ) { list . set ( 0 , IDENT_7 ) ; } } ; org . IDENT_3 . rules . IDENT_4 . IDENT_8 IDENT_9 = new org . IDENT_3 . rules . IDENT_4 . METHOD_5 ( ) { public java . lang . Object call ( java . lang . Object IDENT_10 ) { return list . get ( 0 ) ; } } ; java . lang . Object [ ] IDENT_11 = new java . lang . Object [ ] { "1" , "2" , null , STRING_1 } ; METHOD_6 ( IDENT_11 , IDENT_9 , IDENT_6 ) ; list . add ( "a" ) ; org . IDENT_3 . binding . value . IDENT_12 IDENT_13 = IDENT_2 . METHOD_2 ( STRING_2 ) ; "<AssertPlaceHolder>" ; try { java . util . List IDENT_14 = new java . util . ArrayList ( ) ; IDENT_2 . METHOD_2 ( STRING_2 0 ) . setValue ( IDENT_14 ) ; if ( METHOD_7 ( ) ) org . junit . Assert . fail ( STRING_3 ) ; } catch ( org . springframework . beans . IDENT_15 e ) { if ( ! ( METHOD_7 ( ) ) ) org . junit . Assert . fail ( STRING_4 ) ; } try { IDENT_2 . METHOD_2 ( STRING_2 0 ) . setValue ( null ) ; if ( METHOD_7 ( ) ) org . junit . Assert . fail ( STRING_5 ) ; } catch ( org . springframework . beans . IDENT_16 e ) { if ( ! ( METHOD_7 ( ) ) ) org . junit . Assert . fail ( STRING_6 ) ; } catch ( org . springframework . beans . IDENT_15 e ) { if ( ( e . METHOD_8 ( ) ) instanceof org . springframework . beans . IDENT_16 ) { if ( ! ( METHOD_7 ( ) ) ) org . junit . Assert . fail ( STRING_6 ) ; } else { throw e ; } } } getValue ( ) { return IDENT_17 ; }
org . junit . Assert . assertEquals ( "a" , IDENT_13 . getValue ( ) ) 