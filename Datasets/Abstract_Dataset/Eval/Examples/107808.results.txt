METHOD_0 ( ) { IDENT_0 . METHOD_1 ( ) ; IDENT_0 . IDENT_1 . METHOD_2 ( project . getName ( ) , com . liferay . IDENT_2 . ui . IDENT_3 . tests . IDENT_4 ) ; IDENT_0 . METHOD_3 ( ) ; IDENT_5 . METHOD_4 ( ) ; IDENT_6 . project . METHOD_5 ( com . liferay . IDENT_2 . ui . IDENT_3 . tests . IDENT_7 . IDENT_8 . getName ( ) ) ; IDENT_9 . IDENT_10 . METHOD_6 ( ) ; IDENT_9 . METHOD_7 ( ) ; IDENT_5 . METHOD_8 ( ) ; "<AssertPlaceHolder>" ; IDENT_6 . project . METHOD_9 ( com . liferay . IDENT_2 . ui . IDENT_3 . tests . IDENT_7 . IDENT_8 . METHOD_10 ( project . getName ( ) ) ) ; } METHOD_11 ( java . lang . String [ ] ) { try { return METHOD_12 ( ) . METHOD_13 ( IDENT_11 ) ; } catch ( java . lang . Exception e ) { METHOD_12 ( ) . METHOD_14 ( ) ; try { java . lang . String [ ] IDENT_12 = java . util . Arrays . METHOD_15 ( IDENT_11 , 0 , ( ( IDENT_11 . length ) - 1 ) ) ; METHOD_12 ( ) . METHOD_16 ( IDENT_12 ) ; METHOD_12 ( ) . METHOD_17 ( com . liferay . IDENT_2 . ui . liferay . action . IDENT_13 , IDENT_12 ) ; IDENT_2 . sleep ( INT_0 ) ; } catch ( java . lang . Exception IDENT_14 ) { } for ( int i = ( IDENT_11 . length ) - 1 ; i > 0 ; i OP_0 ) { java . lang . String [ ] IDENT_12 = java . util . Arrays . METHOD_15 ( IDENT_11 , 0 , ( ( IDENT_11 . length ) - i ) ) ; org . eclipse . IDENT_15 . swt . IDENT_16 . widgets . IDENT_17 parent = METHOD_12 ( ) . METHOD_18 ( IDENT_12 ) ; METHOD_12 ( ) . METHOD_16 ( IDENT_12 ) ; java . lang . String IDENT_18 = IDENT_11 [ ( ( IDENT_11 . length ) - i ) ] ; IDENT_19 . METHOD_19 ( parent , IDENT_18 , com . liferay . IDENT_2 . ui . liferay . action . IDENT_13 ) ; } return METHOD_12 ( ) . METHOD_13 ( IDENT_11 ) ; } }
org . junit . Assert . assertTrue ( IDENT_6 . project . METHOD_11 ( com . liferay . IDENT_2 . ui . IDENT_3 . tests . IDENT_7 . IDENT_8 . METHOD_10 ( project . getName ( ) ) ) ) 