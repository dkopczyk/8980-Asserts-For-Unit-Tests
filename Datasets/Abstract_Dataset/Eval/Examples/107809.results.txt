METHOD_0 ( ) { IDENT_0 . METHOD_1 ( ) ; IDENT_0 . IDENT_1 . METHOD_2 ( project . getName ( ) , com . liferay . IDENT_2 . ui . IDENT_3 . tests . IDENT_4 ) ; IDENT_0 . METHOD_3 ( ) ; IDENT_5 . METHOD_4 ( ) ; IDENT_6 . project . METHOD_5 ( project . getName ( ) ) ; IDENT_7 . IDENT_8 . METHOD_6 ( ) ; IDENT_7 . METHOD_7 ( ) ; IDENT_5 . METHOD_8 ( ) ; "<AssertPlaceHolder>" ; IDENT_6 . project . METHOD_9 ( project . getName ( ) ) ; } METHOD_10 ( java . lang . String [ ] ) { try { return METHOD_11 ( ) . METHOD_12 ( IDENT_9 ) ; } catch ( java . lang . Exception e ) { METHOD_11 ( ) . METHOD_13 ( ) ; try { java . lang . String [ ] IDENT_10 = java . util . Arrays . METHOD_14 ( IDENT_9 , 0 , ( ( IDENT_9 . length ) - 1 ) ) ; METHOD_11 ( ) . METHOD_15 ( IDENT_10 ) ; METHOD_11 ( ) . METHOD_16 ( com . liferay . IDENT_2 . ui . liferay . action . IDENT_11 , IDENT_10 ) ; IDENT_2 . sleep ( INT_0 ) ; } catch ( java . lang . Exception IDENT_12 ) { } for ( int i = ( IDENT_9 . length ) - 1 ; i > 0 ; i OP_0 ) { java . lang . String [ ] IDENT_10 = java . util . Arrays . METHOD_14 ( IDENT_9 , 0 , ( ( IDENT_9 . length ) - i ) ) ; org . eclipse . IDENT_13 . swt . IDENT_14 . widgets . IDENT_15 parent = METHOD_11 ( ) . METHOD_17 ( IDENT_10 ) ; METHOD_11 ( ) . METHOD_15 ( IDENT_10 ) ; java . lang . String IDENT_16 = IDENT_9 [ ( ( IDENT_9 . length ) - i ) ] ; IDENT_17 . METHOD_18 ( parent , IDENT_16 , com . liferay . IDENT_2 . ui . liferay . action . IDENT_11 ) ; } return METHOD_11 ( ) . METHOD_12 ( IDENT_9 ) ; } }
org . junit . Assert . assertTrue ( IDENT_6 . project . METHOD_10 ( project . getName ( ) ) ) 