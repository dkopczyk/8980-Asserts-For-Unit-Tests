METHOD_0 ( ) { java . util . Date now = new java . util . Date ( ) ; java . util . Date IDENT_0 = new java . util . Date ( ( ( now . getTime ( ) ) + ( com . liferay . portal . kernel . util . IDENT_1 . IDENT_2 ) ) ) ; java . util . Date IDENT_3 = new java . util . Date ( ( ( now . getTime ( ) ) + ( com . liferay . portal . kernel . util . IDENT_1 . IDENT_4 ) ) ) ; com . liferay . portal . kernel . util . IDENT_5 IDENT_6 = new com . liferay . portal . kernel . util . METHOD_1 ( IDENT_0 , IDENT_3 ) ; com . liferay . IDENT_7 . kernel . IDENT_8 . IDENT_9 . METHOD_2 ( IDENT_10 . METHOD_3 ( ) , IDENT_10 . METHOD_4 ( ) , IDENT_6 , IDENT_3 ) ; IDENT_10 = com . liferay . portal . kernel . service . IDENT_11 . METHOD_5 ( IDENT_10 . METHOD_6 ( ) ) ; java . util . Date IDENT_12 = com . liferay . IDENT_7 . kernel . IDENT_8 . IDENT_9 . METHOD_7 ( IDENT_10 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( com . liferay . portal . kernel . model . IDENT_13 ) { long IDENT_12 = com . liferay . portal . kernel . util . IDENT_14 . METHOD_8 ( IDENT_15 . METHOD_9 ( com . liferay . IDENT_7 . kernel . IDENT_8 . IDENT_9 . IDENT_16 ) ) ; if ( IDENT_12 == 0 ) { return null ; } return new java . util . Date ( IDENT_12 ) ; }
org . junit . Assert . assertNull ( IDENT_12 ) 