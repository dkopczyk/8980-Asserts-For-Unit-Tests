METHOD_0 ( ) { com . liferay . item . IDENT_0 . test . IDENT_1 IDENT_2 = new com . liferay . item . IDENT_0 . test . METHOD_1 ( ) ; org . osgi . framework . IDENT_3 < com . liferay . item . IDENT_0 . IDENT_4 > IDENT_5 = METHOD_2 ( IDENT_2 , STRING_0 ) ; org . osgi . framework . IDENT_3 < com . liferay . item . IDENT_0 . IDENT_6 > IDENT_7 = METHOD_3 ( new com . liferay . item . IDENT_0 . test . METHOD_4 ( ) , 50 ) ; org . osgi . framework . IDENT_3 < com . liferay . item . IDENT_0 . IDENT_8 > IDENT_9 = METHOD_5 ( new com . liferay . item . IDENT_0 . test . METHOD_6 ( ) , STRING_0 ) ; java . util . List IDENT_10 = new java . util . ArrayList ( ) ; IDENT_10 . add ( IDENT_5 ) ; IDENT_10 . add ( IDENT_7 ) ; IDENT_10 . add ( IDENT_9 ) ; try { com . liferay . item . IDENT_0 . test . IDENT_11 IDENT_12 = new com . liferay . item . IDENT_0 . test . METHOD_7 ( ) ; IDENT_12 . METHOD_8 ( java . util . Arrays . asList ( new com . liferay . item . IDENT_0 . test . METHOD_9 ( ) ) ) ; com . liferay . item . IDENT_0 . IDENT_6 IDENT_13 = IDENT_14 . METHOD_10 ( IDENT_12 , IDENT_2 , java . lang . String . class ) ; "<AssertPlaceHolder>" ; } finally { METHOD_11 ( IDENT_10 ) ; } } METHOD_10 ( com . liferay . item . IDENT_0 . IDENT_15 , com . liferay . item . IDENT_0 . IDENT_4 , java . lang . Class ) { java . util . List < com . liferay . item . IDENT_0 . IDENT_16 > IDENT_17 = IDENT_18 . METHOD_12 ( ) ; java . util . List < com . liferay . item . IDENT_0 . IDENT_16 > IDENT_19 = IDENT_20 . METHOD_13 ( IDENT_21 ) ; com . liferay . item . IDENT_0 . IDENT_16 IDENT_22 = METHOD_14 ( IDENT_17 , IDENT_19 ) ; return METHOD_10 ( IDENT_22 . getClass ( ) , IDENT_23 ) ; }
org . junit . Assert . assertTrue ( ( IDENT_13 instanceof com . liferay . item . IDENT_0 . test . METHOD_4 ) ) 