METHOD_0 ( ) { com . liferay . IDENT_0 . data . mapping . storage . IDENT_1 IDENT_2 = new com . liferay . IDENT_0 . data . mapping . storage . METHOD_1 ( ) ; com . liferay . IDENT_0 . data . mapping . storage . Field IDENT_3 = METHOD_2 ( IDENT_4 . METHOD_3 ( ) ) ; IDENT_3 . setValue ( IDENT_5 , IDENT_3 . getValue ( IDENT_6 ) ) ; IDENT_2 . put ( IDENT_3 ) ; com . liferay . IDENT_0 . data . mapping . storage . Field IDENT_7 = METHOD_4 ( IDENT_4 . METHOD_3 ( ) , STRING_0 ) ; IDENT_2 . put ( IDENT_7 ) ; java . lang . String content = read ( STRING_1 ) ; com . liferay . IDENT_0 . data . mapping . storage . METHOD_1 IDENT_8 = IDENT_9 . METHOD_5 ( IDENT_4 , content ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( com . liferay . IDENT_0 . data . mapping . model . IDENT_10 , java . lang . String ) { try { return METHOD_5 ( IDENT_11 , com . liferay . portal . kernel . xml . IDENT_12 . read ( content ) ) ; } catch ( com . liferay . portal . kernel . xml . IDENT_13 de ) { throw new com . liferay . portal . kernel . exception . METHOD_6 ( de ) ; } }
org . junit . Assert . assertEquals ( IDENT_2 , IDENT_8 ) 