METHOD_0 ( ) { java . util . List < com . liferay . message . IDENT_0 . web . internal . util . IDENT_1 > IDENT_2 = new java . util . ArrayList ( ) ; com . liferay . portal . kernel . repository . model . IDENT_3 IDENT_4 = org . mockito . Mockito . mock ( com . liferay . portal . kernel . repository . model . IDENT_3 . class ) ; long IDENT_5 = 1 ; java . lang . String IDENT_6 = STRING_0 ; java . lang . String IDENT_7 = STRING_1 ; org . mockito . Mockito . doReturn ( IDENT_7 ) . when ( IDENT_8 ) . METHOD_1 ( org . mockito . Mockito . METHOD_2 ( com . liferay . portal . kernel . IDENT_9 . IDENT_10 . class ) , org . mockito . Mockito . eq ( IDENT_4 ) , org . mockito . Mockito . eq ( IDENT_11 . IDENT_12 ) ) ; IDENT_2 . add ( new com . liferay . message . IDENT_0 . web . internal . util . METHOD_3 ( IDENT_5 , IDENT_4 ) ) ; java . lang . String IDENT_13 = IDENT_14 . METHOD_4 ( IDENT_6 , IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String , java . util . List ) { for ( com . liferay . message . IDENT_0 . web . internal . util . METHOD_3 IDENT_15 : IDENT_16 ) { com . liferay . IDENT_17 . string . IDENT_18 sb = new com . liferay . IDENT_17 . string . METHOD_5 ( 8 ) ; sb . append ( STRING_2 ) ; sb . append ( com . liferay . message . IDENT_0 . web . internal . IDENT_19 . format . IDENT_20 . IDENT_21 . IDENT_22 ) ; sb . append ( IDENT_23 . IDENT_24 ) ; sb . append ( STRING_3 ) ; sb . append ( IDENT_15 . METHOD_6 ( ) ) ; sb . append ( STRING_4 ) ; sb . append ( com . liferay . message . IDENT_0 . web . internal . IDENT_19 . format . IDENT_20 . IDENT_21 . IDENT_22 ) ; sb . append ( STRING_5 ) ; content = content . replaceAll ( sb . toString ( ) , METHOD_7 ( IDENT_15 . METHOD_8 ( ) ) ) ; } return content ; }
org . junit . Assert . assertEquals ( IDENT_6 , IDENT_13 ) 