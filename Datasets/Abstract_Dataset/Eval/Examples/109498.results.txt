METHOD_0 ( ) { com . liferay . portal . search . engine . adapter . index . IDENT_0 IDENT_1 = new com . liferay . portal . search . engine . adapter . index . METHOD_1 ( ) ; IDENT_1 . METHOD_2 ( com . liferay . portal . search . IDENT_2 . internal . search . engine . adapter . index . IDENT_3 . IDENT_4 ) ; com . liferay . portal . search . IDENT_2 . internal . search . engine . adapter . index . IDENT_5 IDENT_6 = new com . liferay . portal . search . IDENT_2 . internal . search . engine . adapter . index . METHOD_3 ( ) { { METHOD_4 ( IDENT_7 ) ; } } ; org . elasticsearch . action . admin . IDENT_8 . IDENT_9 . IDENT_10 IDENT_11 = IDENT_6 . METHOD_5 ( IDENT_1 ) ; org . elasticsearch . action . admin . IDENT_8 . IDENT_9 . IDENT_12 IDENT_13 = IDENT_11 . request ( ) ; "<AssertPlaceHolder>" ; } index ( ) { for ( Map . Entry < java . lang . String , java . util . Set < java . lang . Long > > IDENT_14 : IDENT_15 . entrySet ( ) ) { java . lang . String IDENT_16 = IDENT_14 . getKey ( ) ; com . liferay . portal . kernel . search . IDENT_17 < ? > IDENT_18 = IDENT_19 . METHOD_6 ( IDENT_16 ) ; if ( IDENT_18 == null ) { if ( com . liferay . IDENT_20 . resources . IDENT_21 . internal . util . IDENT_22 . IDENT_23 . METHOD_7 ( ) ) { com . liferay . IDENT_20 . resources . IDENT_21 . internal . util . IDENT_22 . IDENT_23 . warn ( ( STRING_0 + IDENT_16 ) ) ; } continue ; } if ( com . liferay . IDENT_20 . resources . IDENT_21 . internal . util . IDENT_22 . IDENT_23 . METHOD_8 ( ) ) { com . liferay . IDENT_20 . resources . IDENT_21 . internal . util . IDENT_22 . IDENT_23 . debug ( ( STRING_1 + IDENT_16 ) ) ; } for ( long IDENT_24 : IDENT_14 . getValue ( ) ) { try { IDENT_18 . METHOD_9 ( IDENT_16 , IDENT_24 ) ; } catch ( com . liferay . portal . kernel . search . IDENT_25 IDENT_26 ) { if ( com . liferay . IDENT_20 . resources . IDENT_21 . internal . util . IDENT_22 . IDENT_23 . METHOD_7 ( ) ) { com . liferay . IDENT_20 . resources . IDENT_21 . internal . util . IDENT_22 . IDENT_23 . warn ( com . liferay . IDENT_27 . string . IDENT_28 . METHOD_10 ( STRING_2 , IDENT_16 , STRING_3 , IDENT_24 ) , IDENT_26 ) ; } } } } if ( IDENT_29 . isEmpty ( ) ) { return ; } java . util . Set < java . lang . Long > IDENT_30 = IDENT_15 . get ( com . liferay . IDENT_31 . model . IDENT_32 . class . getName ( ) ) ; com . liferay . portal . kernel . search . IDENT_17 < ? > IDENT_18 = IDENT_19 . METHOD_6 ( com . liferay . IDENT_31 . model . IDENT_32 . class . getName ( ) ) ; for ( java . lang . String IDENT_33 : IDENT_29 ) { java . util . List < com . liferay . IDENT_31 . model . IDENT_32 > IDENT_34 = IDENT_35 . METHOD_11 ( METHOD_12 ( ) , IDENT_33 , IDENT_36 . IDENT_37 , IDENT_36 . IDENT_37 , null ) ; for ( com . liferay . IDENT_31 . model . IDENT_32 IDENT_38 : IDENT_34 ) { if ( ( IDENT_30 != null ) && ( IDENT_30 . contains ( IDENT_38 . METHOD_13 ( ) ) ) ) { continue ; } try { IDENT_18 . METHOD_9 ( com . liferay . IDENT_31 . model . IDENT_32 . class . getName ( ) , IDENT_38 . METHOD_13 ( ) ) ; } catch ( com . liferay . portal . kernel . search . IDENT_25 IDENT_26 ) { if ( com . liferay . IDENT_20 . resources . IDENT_21 . internal . util . IDENT_22 . IDENT_23 . METHOD_7 ( ) ) { com . liferay . IDENT_27 . string . IDENT_28 sb = new com . liferay . IDENT_27 . string . METHOD_14 ( 4 ) ; sb . append ( STRING_4 ) ; sb . append ( com . liferay . IDENT_31 . model . IDENT_32 . class . getName ( ) ) ; sb . append ( STRING_5 ) ; sb . append ( IDENT_38 . METHOD_13 ( ) ) ; com . liferay . IDENT_20 . resources . IDENT_21 . internal . util . IDENT_22 . IDENT_23 . warn ( sb . toString ( ) , IDENT_26 ) ; } } } } }
org . junit . Assert . assertEquals ( com . liferay . portal . search . IDENT_2 . internal . search . engine . adapter . index . IDENT_3 . IDENT_4 , IDENT_13 . index ( ) ) 