METHOD_0 ( ) { org . apache . cxf . jaxrs . provider . IDENT_0 < org . apache . cxf . jaxrs . resources . IDENT_1 > provider = new org . apache . cxf . jaxrs . provider . METHOD_1 ( ) ; java . util . Map < java . lang . String , java . lang . String > map = new java . util . HashMap ( ) ; map . put ( STRING_0 , STRING_1 ) ; provider . METHOD_2 ( map ) ; org . apache . cxf . jaxrs . resources . IDENT_1 IDENT_2 = new org . apache . cxf . jaxrs . resources . METHOD_3 ( STRING_2 , STRING_3 ) ; java . io . ByteArrayOutputStream IDENT_3 = new java . io . ByteArrayOutputStream ( ) ; provider . METHOD_4 ( IDENT_2 , org . apache . cxf . jaxrs . resources . METHOD_3 . class , org . apache . cxf . jaxrs . resources . METHOD_3 . class , new java . lang . annotation . IDENT_4 [ 0 ] , IDENT_5 . IDENT_6 , new org . apache . cxf . jaxrs . impl . IDENT_7 < java . lang . String , java . lang . Object > ( ) , IDENT_3 ) ; java . lang . String expected = STRING_4 + STRING_5 ; "<AssertPlaceHolder>" ; } toString ( ) { java . lang . StringBuilder builder = new java . lang . StringBuilder ( INT_0 ) ; builder . append ( STRING_6 ) ; builder . append ( super . toString ( ) ) ; builder . append ( STRING_7 ) ; builder . append ( IDENT_8 ) ; builder . append ( STRING_8 ) ; builder . append ( IDENT_9 ) ; builder . append ( STRING_9 ) ; builder . append ( IDENT_10 ) ; builder . append ( STRING_10 ) ; return builder . toString ( ) ; }
org . junit . Assert . assertEquals ( expected , IDENT_3 . toString ( ) ) 