METHOD_0 ( ) { java . util . concurrent . atomic . IDENT_0 count = com . liferay . repository . registry . test . IDENT_1 . METHOD_1 ( IDENT_2 , IDENT_3 . IDENT_4 . class , com . liferay . portal . kernel . repository . model . IDENT_5 . class ) ; int IDENT_6 = java . lang . Math . METHOD_2 ( com . liferay . portal . kernel . test . util . IDENT_7 . METHOD_3 ( ) ) ; for ( int i = 0 ; i < IDENT_6 ; i ++ ) { IDENT_2 . METHOD_4 ( IDENT_3 . IDENT_4 . class , com . liferay . portal . kernel . repository . model . IDENT_5 . class , null ) ; } "<AssertPlaceHolder>" ; } get ( ) { return IDENT_8 . get ( ) ; }
org . junit . Assert . assertEquals ( IDENT_6 , count . get ( ) ) 