METHOD_0 ( ) { com . liferay . IDENT_0 . kernel . model . IDENT_1 IDENT_2 = METHOD_1 ( IDENT_3 , com . liferay . portal . kernel . test . util . IDENT_4 . METHOD_2 ( ) , IDENT_5 . IDENT_6 , IDENT_5 . IDENT_7 ) ; java . util . Map < java . util . Locale , java . lang . String > IDENT_8 = new java . util . HashMap ( ) ; java . util . Locale IDENT_9 = com . liferay . portal . kernel . util . IDENT_10 . METHOD_3 ( STRING_0 ) ; IDENT_8 . put ( IDENT_9 , STRING_1 ) ; IDENT_8 . put ( com . liferay . portal . kernel . util . IDENT_10 . METHOD_4 ( ) , STRING_2 ) ; java . io . IDENT_11 IDENT_12 = ( ( java . io . IDENT_11 ) ( IDENT_8 ) ) ; com . liferay . portal . kernel . model . IDENT_13 IDENT_14 = METHOD_5 ( IDENT_2 . getName ( ) , IDENT_12 ) ; IDENT_15 . add ( IDENT_14 ) ; com . liferay . portal . kernel . model . IDENT_13 IDENT_16 = com . liferay . portal . kernel . test . util . IDENT_17 . METHOD_6 ( ) ; IDENT_15 . add ( IDENT_16 ) ; java . lang . String IDENT_18 = java . lang . String . format ( STRING_3 , METHOD_7 ( IDENT_2 ) , IDENT_8 . get ( IDENT_9 ) ) ; int count = METHOD_8 ( ) . METHOD_9 ( com . liferay . portal . kernel . test . util . IDENT_19 . METHOD_10 ( ) , IDENT_18 , IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( ) { if ( ( com . liferay . portal . kernel . test . util . IDENT_19 . IDENT_20 ) > 0 ) { return com . liferay . portal . kernel . test . util . IDENT_19 . IDENT_20 ; } com . liferay . portal . kernel . model . IDENT_21 IDENT_22 = com . liferay . portal . kernel . service . IDENT_23 . METHOD_11 ( com . liferay . portal . kernel . test . util . IDENT_19 . IDENT_24 ) ; com . liferay . portal . kernel . test . util . IDENT_19 . IDENT_20 = IDENT_22 . METHOD_10 ( ) ; return com . liferay . portal . kernel . test . util . IDENT_19 . IDENT_20 ; }
org . junit . Assert . assertEquals ( 0 , count ) 