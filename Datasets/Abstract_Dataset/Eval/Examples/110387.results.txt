METHOD_0 ( ) { com . liferay . osgi . service . IDENT_0 . collections . list . IDENT_1 < java . lang . Object , java . lang . Object > IDENT_2 = com . liferay . osgi . service . IDENT_0 . collections . list . IDENT_3 . METHOD_1 ( IDENT_4 , java . lang . Object . class , new java . util . IDENT_5 < org . osgi . framework . IDENT_6 < java . lang . Object > > ( ) { @ com . liferay . osgi . service . IDENT_0 . collections . list . test . Override public int compare ( org . osgi . framework . IDENT_6 < java . lang . Object > IDENT_7 , org . osgi . framework . IDENT_6 < java . lang . Object > IDENT_8 ) { return 0 ; } } ) ; java . lang . Object [ ] services = new java . lang . Object [ ] { new java . lang . Object ( ) , new java . lang . Object ( ) } ; java . util . Collection < org . osgi . framework . IDENT_9 < java . lang . Object > > IDENT_10 = METHOD_2 ( java . lang . Object . class , services ) ; "<AssertPlaceHolder>" ; METHOD_3 ( IDENT_10 ) ; } toString ( ) { com . liferay . IDENT_11 . string . IDENT_12 sb = new com . liferay . IDENT_11 . string . METHOD_4 ( INT_0 ) ; sb . append ( STRING_0 1 ) ; sb . append ( IDENT_13 ) ; sb . append ( STRING_0 0 ) ; sb . append ( IDENT_14 ) ; sb . append ( STRING_1 ) ; sb . append ( IDENT_15 ) ; sb . append ( STRING_2 ) ; sb . append ( IDENT_16 ) ; sb . append ( STRING_3 ) ; sb . append ( IDENT_17 ) ; sb . append ( STRING_4 ) ; sb . append ( IDENT_18 ) ; sb . append ( STRING_5 ) ; sb . append ( IDENT_19 ) ; sb . append ( STRING_6 ) ; sb . append ( IDENT_20 ) ; sb . append ( STRING_7 ) ; sb . append ( IDENT_21 ) ; sb . append ( STRING_0 ) ; sb . append ( IDENT_22 ) ; sb . append ( STRING_8 ) ; sb . append ( size ) ; sb . append ( STRING_9 ) ; return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_2 . toString ( ) , 2 , IDENT_2 . size ( ) ) 