METHOD_0 ( ) { java . nio . ByteBuffer IDENT_0 = java . nio . ByteBuffer . METHOD_1 ( 1 ) ; IDENT_0 . put ( IDENT_1 . IDENT_2 ) ; IDENT_0 . METHOD_2 ( ) ; com . liferay . IDENT_3 . io . IDENT_4 IDENT_5 = new com . liferay . IDENT_3 . io . METHOD_3 ( IDENT_0 ) ; java . lang . Object object = IDENT_5 . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { byte IDENT_6 = IDENT_7 [ ( ( IDENT_8 ) ++ ) ] ; if ( IDENT_6 == ( IDENT_1 . IDENT_9 ) ) { return ( ( T ) ( java . lang . Boolean . valueOf ( METHOD_5 ( ) ) ) ) ; } else if ( IDENT_6 == ( IDENT_1 . IDENT_10 ) ) { return ( ( T ) ( java . lang . IDENT_11 . valueOf ( METHOD_6 ( ) ) ) ) ; } else if ( IDENT_6 == ( IDENT_1 . IDENT_12 ) ) { return ( ( T ) ( java . lang . IDENT_13 . valueOf ( METHOD_7 ( ) ) ) ) ; } else if ( IDENT_6 == ( IDENT_1 . IDENT_14 ) ) { java . lang . String IDENT_15 = METHOD_8 ( ) ; java . lang . String IDENT_16 = METHOD_8 ( ) ; java . lang . IDENT_17 IDENT_18 = com . liferay . IDENT_3 . lang . IDENT_19 . METHOD_9 ( IDENT_15 ) ; return ( ( T ) ( com . liferay . IDENT_3 . lang . IDENT_20 . resolve ( IDENT_16 , IDENT_18 ) ) ) ; } else if ( IDENT_6 == ( IDENT_1 . IDENT_21 ) ) { return ( ( T ) ( java . lang . Double . valueOf ( METHOD_10 ( ) ) ) ) ; } else if ( IDENT_6 == ( IDENT_1 . IDENT_22 ) ) { return ( ( T ) ( java . lang . IDENT_23 . valueOf ( METHOD_11 ( ) ) ) ) ; } else if ( IDENT_6 == ( IDENT_1 . IDENT_24 ) ) { return ( ( T ) ( java . lang . Integer . valueOf ( METHOD_12 ( ) ) ) ) ; } else if ( IDENT_6 == ( IDENT_1 . IDENT_25 ) ) { return ( ( T ) ( java . lang . Long . valueOf ( METHOD_13 ( ) ) ) ) ; } else if ( IDENT_6 == ( IDENT_1 . IDENT_2 ) ) { return null ; } else if ( IDENT_6 == ( IDENT_1 . IDENT_26 ) ) { return ( ( T ) ( java . lang . IDENT_27 . valueOf ( METHOD_14 ( ) ) ) ) ; } else if ( IDENT_6 == ( IDENT_1 . IDENT_28 ) ) { return ( ( T ) ( METHOD_8 ( ) ) ) ; } else if ( IDENT_6 == ( IDENT_1 . IDENT_29 ) ) { try { java . io . IDENT_30 IDENT_31 = new com . liferay . IDENT_3 . io . METHOD_15 ( new com . liferay . IDENT_3 . io . METHOD_3 . METHOD_16 ( ) ) ; return ( ( T ) ( IDENT_31 . METHOD_4 ( ) ) ) ; } catch ( java . io . IOException IDENT_32 ) { throw new java . lang . RuntimeException ( IDENT_32 ) ; } } throw new java . lang . IllegalStateException ( ( STRING_0 + IDENT_6 ) ) ; }
org . junit . Assert . assertNull ( object ) 