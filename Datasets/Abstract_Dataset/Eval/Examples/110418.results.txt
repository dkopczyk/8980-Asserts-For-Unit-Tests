METHOD_0 ( ) { com . liferay . IDENT_0 . io . IDENT_1 serializer = new com . liferay . IDENT_0 . io . METHOD_1 ( ) ; java . nio . ByteBuffer IDENT_2 = java . nio . ByteBuffer . METHOD_2 ( ( ( com . liferay . IDENT_0 . io . IDENT_3 . IDENT_4 ) * 4 ) ) ; IDENT_2 . order ( IDENT_5 . IDENT_6 ) ; java . nio . IDENT_7 IDENT_8 = IDENT_2 . METHOD_3 ( ) ; int [ ] IDENT_9 = new int [ com . liferay . IDENT_0 . io . IDENT_3 . IDENT_4 ] ; for ( int i = 0 ; i < ( com . liferay . IDENT_0 . io . IDENT_3 . IDENT_4 ) ; i ++ ) { IDENT_9 [ i ] = IDENT_10 . METHOD_4 ( ) ; serializer . METHOD_5 ( IDENT_9 [ i ] ) ; IDENT_8 . put ( IDENT_9 [ i ] ) ; } java . nio . ByteBuffer IDENT_11 = serializer . METHOD_6 ( ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( ) { java . nio . ByteBuffer IDENT_2 = java . nio . ByteBuffer . METHOD_7 ( java . util . Arrays . METHOD_8 ( IDENT_12 , IDENT_13 ) ) ; if ( ( IDENT_12 . length ) <= ( com . liferay . IDENT_0 . io . METHOD_1 . IDENT_14 ) ) { com . liferay . IDENT_0 . io . METHOD_1 . IDENT_15 IDENT_16 = METHOD_9 ( ) ; IDENT_16 . METHOD_10 ( IDENT_12 ) ; } IDENT_12 = null ; return IDENT_2 ; }
org . junit . Assert . assertArrayEquals ( IDENT_2 . array ( ) , IDENT_11 . array ( ) ) 