METHOD_0 ( ) { java . nio . file . Path path = java . nio . file . IDENT_0 . get ( STRING_0 ) ; java . lang . String IDENT_1 = path . toString ( ) ; com . liferay . IDENT_2 . process . IDENT_3 IDENT_4 = new com . liferay . IDENT_2 . process . METHOD_1 ( path ) ; "<AssertPlaceHolder>" ; } hashCode ( ) { int hash = ( ( IDENT_5 . hashCode ( ) ) OP_0 ( IDENT_6 . hashCode ( ) ) ) OP_0 ( java . lang . Boolean . hashCode ( IDENT_7 ) ) ; for ( Map . Entry < java . lang . String , java . lang . String > entry : IDENT_8 . entrySet ( ) ) { hash OP_1 entry . hashCode ( ) ; } return hash ; }
org . junit . Assert . assertEquals ( IDENT_1 . hashCode ( ) , IDENT_4 . hashCode ( ) ) 