METHOD_0 ( ) { java . util . Properties p = new java . util . Properties ( ) ; p . put ( IDENT_0 . IDENT_1 , STRING_0 ) ; p . put ( IDENT_0 . IDENT_2 , STRING_1 ) ; p . put ( IDENT_0 . IDENT_3 , STRING_2 ) ; org . apache . cxf . rs . security . IDENT_4 . IDENT_5 . IDENT_6 IDENT_5 = org . apache . cxf . rs . security . IDENT_4 . IDENT_5 . IDENT_7 . METHOD_1 ( METHOD_2 ( ) , p , new org . apache . cxf . rs . security . IDENT_4 . IDENT_5 . METHOD_3 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { org . apache . cxf . jaxrs . provider . IDENT_8 factory = org . apache . cxf . jaxrs . provider . IDENT_9 . getInstance ( ) ; org . apache . cxf . message . Message m = new org . apache . cxf . message . METHOD_4 ( ) ; m . put ( STRING_3 , false ) ; org . apache . cxf . message . IDENT_10 e = new org . apache . cxf . message . METHOD_5 ( ) ; m . METHOD_6 ( e ) ; e . METHOD_7 ( m ) ; e . METHOD_8 ( new org . apache . cxf . message . METHOD_4 ( ) ) ; org . apache . cxf . IDENT_11 . IDENT_12 IDENT_11 = org . easymock . EasyMock . METHOD_9 ( org . apache . cxf . IDENT_11 . IDENT_12 . class ) ; org . easymock . EasyMock . expect ( IDENT_11 . METHOD_10 ( ) ) . andReturn ( null ) . METHOD_11 ( ) ; org . easymock . EasyMock . expect ( IDENT_11 . get ( javax . ws . rs . core . IDENT_13 . class . getName ( ) ) ) . andReturn ( null ) ; org . easymock . EasyMock . expect ( IDENT_11 . size ( ) ) . andReturn ( 0 ) . METHOD_11 ( ) ; org . easymock . EasyMock . expect ( IDENT_11 . isEmpty ( ) ) . andReturn ( true ) . METHOD_11 ( ) ; org . easymock . EasyMock . expect ( IDENT_11 . get ( org . apache . cxf . jaxrs . provider . IDENT_9 . class . getName ( ) ) ) . andReturn ( factory ) . METHOD_11 ( ) ; org . easymock . EasyMock . replay ( IDENT_11 ) ; e . put ( org . apache . cxf . IDENT_11 . IDENT_12 . class , IDENT_11 ) ; return m ; }
org . junit . Assert . assertNotNull ( IDENT_5 ) 