METHOD_0 ( ) { final java . io . IOException IDENT_0 = new java . io . IOException ( STRING_0 ) ; java . nio . file . Path IDENT_1 = java . nio . file . IDENT_2 . get ( STRING_1 ) ; final java . nio . file . Path IDENT_3 = IDENT_1 . resolve ( STRING_2 ) ; METHOD_1 ( IDENT_3 ) ; try ( com . liferay . portal . kernel . test . IDENT_4 IDENT_5 = new com . liferay . portal . kernel . test . METHOD_2 ( ) { @ com . liferay . portal . IDENT_6 . netty . IDENT_7 . Override public void METHOD_3 ( java . lang . String file ) { if ( file . equals ( IDENT_3 . toString ( ) ) ) { com . liferay . IDENT_8 . reflect . IDENT_9 . METHOD_4 ( new java . nio . file . METHOD_5 ( IDENT_0 ) ) ; } } } ) { IDENT_5 . METHOD_6 ( ) ; com . liferay . portal . IDENT_6 . netty . IDENT_7 . IDENT_10 . delete ( true , IDENT_1 ) ; com . liferay . portal . IDENT_6 . netty . IDENT_7 . IDENT_10 . delete ( IDENT_1 ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . Exception e ) { "<AssertPlaceHolder>" ; } finally { java . nio . file . IDENT_11 . delete ( IDENT_3 ) ; java . nio . file . IDENT_11 . delete ( IDENT_1 ) ; } } METHOD_7 ( ) { return IDENT_12 ; }
org . junit . Assert . assertSame ( IDENT_0 , e . METHOD_7 ( ) ) 