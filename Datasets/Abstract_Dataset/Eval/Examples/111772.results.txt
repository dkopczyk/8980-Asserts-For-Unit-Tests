METHOD_0 ( ) { final java . util . concurrent . atomic . IDENT_0 < java . lang . String > IDENT_1 = new java . util . concurrent . atomic . METHOD_1 ( ) ; final java . util . concurrent . atomic . METHOD_1 < java . lang . String > IDENT_2 = new java . util . concurrent . atomic . METHOD_1 ( ) ; final java . util . concurrent . atomic . IDENT_3 IDENT_4 = new java . util . concurrent . atomic . METHOD_2 ( ) ; com . liferay . portal . kernel . servlet . IDENT_5 IDENT_6 = new com . liferay . portal . kernel . servlet . METHOD_3 ( ) { @ com . liferay . portal . kernel . servlet . Override public boolean METHOD_4 ( ) { return false ; } @ com . liferay . portal . kernel . servlet . Override public void METHOD_5 ( ) { } @ com . liferay . portal . kernel . servlet . Override public void METHOD_6 ( java . lang . String location ) { IDENT_1 . set ( location ) ; } @ com . liferay . portal . kernel . servlet . Override public void METHOD_7 ( int status ) { IDENT_4 . set ( status ) ; } @ com . liferay . portal . kernel . servlet . IDENT_7 @ com . liferay . portal . kernel . servlet . Override public void METHOD_7 ( int status , java . lang . String message ) { IDENT_4 . set ( status ) ; IDENT_2 . set ( message ) ; } } ; com . liferay . portal . kernel . servlet . IDENT_8 IDENT_9 = new com . liferay . portal . kernel . servlet . METHOD_8 ( IDENT_6 ) ; IDENT_9 . METHOD_6 ( STRING_0 ) ; "<AssertPlaceHolder>" ; IDENT_9 . METHOD_9 ( ) ; try { IDENT_9 . METHOD_6 ( STRING_0 ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . IllegalStateException IDENT_10 ) { } } get ( ) { return IDENT_11 . get ( ) ; }
org . junit . Assert . assertEquals ( STRING_0 , IDENT_1 . get ( ) ) 