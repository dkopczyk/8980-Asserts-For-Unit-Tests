METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . commons . oak . impl . IDENT_2 impl = new com . IDENT_0 . IDENT_1 . commons . oak . impl . METHOD_1 ( ) ; context . METHOD_2 ( impl , IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( boolean ) { com . IDENT_0 . IDENT_1 . commons . oak . impl . METHOD_1 . log . info ( STRING_0 ) ; int count = 0 ; for ( com . IDENT_0 . IDENT_1 . commons . oak . impl . IDENT_4 index : this . IDENT_5 ) { if ( ( ! ( index . METHOD_4 ( ) ) ) || IDENT_6 ) { index . apply ( IDENT_6 ) ; count ++ ; com . IDENT_0 . IDENT_1 . commons . oak . impl . METHOD_1 . log . debug ( STRING_1 , index ) ; } else { com . IDENT_0 . IDENT_1 . commons . oak . impl . METHOD_1 . log . debug ( STRING_2 , index ) ; } } return count ; }
org . junit . Assert . assertEquals ( 0 , impl . METHOD_3 ( true ) ) 