METHOD_0 ( ) { com . fasterxml . jackson . databind . node . IDENT_0 node = null ; com . IDENT_1 . IDENT_2 . query . IDENT_3 expResult = null ; com . IDENT_1 . IDENT_2 . query . IDENT_3 result = com . IDENT_1 . IDENT_2 . query . IDENT_3 . METHOD_1 ( node ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( com . fasterxml . jackson . databind . node . IDENT_0 ) { if ( ( node . size ( ) ) == 1 ) { com . fasterxml . jackson . databind . IDENT_4 IDENT_5 = node . get ( STRING_0 ) ; if ( IDENT_5 instanceof com . fasterxml . jackson . databind . node . IDENT_0 ) { com . fasterxml . jackson . databind . node . IDENT_0 IDENT_6 = ( ( com . fasterxml . jackson . databind . node . IDENT_0 ) ( IDENT_5 ) ) ; if ( ( IDENT_6 . size ( ) ) == 2 ) { com . fasterxml . jackson . databind . IDENT_4 IDENT_7 = null ; com . fasterxml . jackson . databind . IDENT_4 IDENT_8 = null ; com . IDENT_1 . IDENT_2 . util . Path field = null ; for ( java . util . Iterator < Map . Entry < java . lang . String , com . fasterxml . jackson . databind . IDENT_4 > > IDENT_9 = IDENT_6 . fields ( ) ; IDENT_9 . hasNext ( ) ; ) { Map . Entry < java . lang . String , com . fasterxml . jackson . databind . IDENT_4 > entry = IDENT_9 . next ( ) ; if ( STRING_1 . equals ( entry . getKey ( ) ) ) { IDENT_7 = entry . getValue ( ) ; } else { field = new com . IDENT_1 . IDENT_2 . util . Path ( entry . getKey ( ) ) ; IDENT_8 = entry . getValue ( ) ; } } if ( ( ( IDENT_8 != null ) && ( IDENT_7 != null ) ) && ( field != null ) ) { return new com . IDENT_1 . IDENT_2 . query . METHOD_2 ( field , com . IDENT_1 . IDENT_2 . query . IDENT_10 . METHOD_1 ( IDENT_8 ) , com . IDENT_1 . IDENT_2 . query . IDENT_11 . METHOD_1 ( IDENT_7 ) ) ; } } } } throw com . IDENT_1 . IDENT_2 . util . IDENT_12 . get ( IDENT_13 . IDENT_14 , node . toString ( ) ) ; }
org . junit . Assert . assertEquals ( expResult , result ) 