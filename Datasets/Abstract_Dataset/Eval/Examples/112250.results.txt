METHOD_0 ( ) { java . util . ArrayList < ch . puzzle . itc . mobiliar . business . IDENT_0 . entity . IDENT_1 > IDENT_2 = new java . util . ArrayList < ch . puzzle . itc . mobiliar . business . IDENT_0 . entity . IDENT_1 > ( ) ; ch . puzzle . itc . mobiliar . business . IDENT_0 . entity . IDENT_1 IDENT_3 = new ch . puzzle . itc . mobiliar . business . IDENT_0 . entity . METHOD_1 ( ) ; IDENT_3 . METHOD_2 ( java . lang . Integer . valueOf ( 12 ) ) ; IDENT_3 . METHOD_3 ( IDENT_4 . IDENT_5 ) ; IDENT_3 . METHOD_4 ( IDENT_6 . METHOD_5 ( ) ) ; IDENT_3 . METHOD_6 ( context ) ; IDENT_2 . add ( IDENT_3 ) ; when ( IDENT_7 . METHOD_7 ( anyString ( ) , anyString ( ) , any ( javax . mail . IDENT_8 [ ] . class ) ) ) . thenReturn ( false ) ; when ( IDENT_9 . METHOD_8 ( ) ) . thenReturn ( IDENT_10 ) ; java . lang . String result = IDENT_11 . METHOD_9 ( IDENT_2 ) ; "<AssertPlaceHolder>" ; verify ( log , times ( 0 ) ) . log ( any ( java . util . logging . IDENT_12 . class ) , anyString ( ) ) ; } METHOD_9 ( java . util . List ) { java . lang . String message = null ; if ( ( IDENT_2 != null ) && ( ! ( IDENT_2 . isEmpty ( ) ) ) ) { java . lang . String IDENT_13 = STRING_0 + ( IDENT_2 . get ( 0 ) . METHOD_10 ( ) ) ; try { javax . mail . IDENT_8 [ ] IDENT_14 = METHOD_11 ( IDENT_2 ) ; if ( IDENT_7 . METHOD_7 ( IDENT_13 , METHOD_12 ( IDENT_2 ) , IDENT_14 ) ) { message = METHOD_13 ( IDENT_14 ) ; } } catch ( javax . mail . IDENT_15 e ) { message = METHOD_14 ( e . getMessage ( ) ) ; log . log ( IDENT_12 . IDENT_16 , ( ( STRING_1 + IDENT_13 ) + STRING_2 ) , e ) ; } } return message ; }
org . junit . Assert . assertNull ( result ) 