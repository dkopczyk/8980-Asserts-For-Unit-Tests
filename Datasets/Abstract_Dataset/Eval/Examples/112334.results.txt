METHOD_0 ( ) { ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 result = new ch . puzzle . itc . mobiliar . business . generator . control . METHOD_1 ( ) ; ch . puzzle . itc . mobiliar . business . generator . control . IDENT_1 IDENT_2 = org . mockito . Mockito . mock ( ch . puzzle . itc . mobiliar . business . generator . control . IDENT_1 . class ) ; org . mockito . Mockito . when ( IDENT_2 . METHOD_2 ( ) ) . thenReturn ( Boolean . IDENT_3 ) ; java . util . List < ch . puzzle . itc . mobiliar . business . generator . control . IDENT_1 > IDENT_4 = new java . util . ArrayList < ch . puzzle . itc . mobiliar . business . generator . control . IDENT_1 > ( ) ; IDENT_4 . add ( IDENT_2 ) ; result . METHOD_3 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { for ( ch . puzzle . itc . mobiliar . business . generator . control . IDENT_1 result : IDENT_4 ) { if ( ! ( result . METHOD_2 ( ) ) ) { return true ; } } return false ; }
org . junit . Assert . assertTrue ( result . METHOD_4 ( ) ) 