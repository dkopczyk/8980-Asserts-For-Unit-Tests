METHOD_0 ( ) { ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . IDENT_1 < ch . puzzle . itc . mobiliar . business . IDENT_2 . entity . IDENT_3 > IDENT_4 = new ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . METHOD_1 ( ) ; IDENT_4 . add ( IDENT_5 ) ; IDENT_4 . add ( IDENT_6 ) ; IDENT_4 . add ( IDENT_7 ) ; IDENT_4 . add ( IDENT_8 ) ; ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . Calendar IDENT_9 = new ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . METHOD_2 ( ) ; IDENT_9 . set ( INT_0 , Calendar . IDENT_10 , 1 ) ; ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . Date IDENT_11 = new ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . Date ( IDENT_9 . METHOD_3 ( ) ) ; ch . puzzle . itc . mobiliar . business . IDENT_2 . entity . IDENT_3 IDENT_12 = service . METHOD_4 ( IDENT_4 , IDENT_11 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . IDENT_1 , ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . Date ) { return METHOD_5 ( IDENT_4 , IDENT_13 , false ) ; }
org . junit . Assert . assertThat ( IDENT_6 , org . hamcrest . CoreMatchers . is ( IDENT_12 ) ) 