METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( ch . puzzle . itc . mobiliar . business . security . control . IDENT_1 . IDENT_2 ) ) . thenReturn ( false ) ; when ( IDENT_0 . METHOD_1 ( ch . puzzle . itc . mobiliar . business . security . control . IDENT_1 . IDENT_3 ) ) . thenReturn ( false ) ; when ( IDENT_0 . METHOD_2 ( ) ) . thenReturn ( IDENT_4 ) ; IDENT_5 = new ch . puzzle . itc . mobiliar . business . security . control . HashMap ( ) ; ch . puzzle . itc . mobiliar . business . security . control . IDENT_6 res = new ch . puzzle . itc . mobiliar . business . security . control . METHOD_3 ( ) ; res . METHOD_4 ( IDENT_7 . IDENT_8 ) ; IDENT_5 . put ( ch . puzzle . itc . mobiliar . business . security . control . IDENT_1 . IDENT_2 , ch . puzzle . itc . mobiliar . business . security . control . Arrays . asList ( new ch . puzzle . itc . mobiliar . IDENT_9 . METHOD_5 ( ) . METHOD_6 ( IDENT_10 . IDENT_11 , res ) ) ) ; IDENT_5 . put ( ch . puzzle . itc . mobiliar . business . security . control . IDENT_1 . IDENT_3 , ch . puzzle . itc . mobiliar . business . security . control . Arrays . asList ( new ch . puzzle . itc . mobiliar . IDENT_9 . METHOD_5 ( ) . METHOD_6 ( IDENT_10 . IDENT_11 , res ) ) ) ; IDENT_12 . IDENT_13 = IDENT_5 ; boolean result = IDENT_12 . METHOD_7 ( IDENT_10 . IDENT_11 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ch . puzzle . itc . mobiliar . business . security . control . IDENT_10 ) { return ( METHOD_8 ( IDENT_14 . name ( ) , null , null , null , null ) ) || ( METHOD_9 ( IDENT_14 . name ( ) , null , null , null , null ) ) ; }
org . junit . Assert . assertFalse ( result ) 