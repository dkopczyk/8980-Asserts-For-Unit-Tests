METHOD_0 ( ) { ch . puzzle . itc . mobiliar . business . property . entity . IDENT_0 . IDENT_1 IDENT_2 = IDENT_0 . IDENT_1 . INSTANCE ; ch . puzzle . itc . mobiliar . business . property . entity . IDENT_0 IDENT_3 = mock ( ch . puzzle . itc . mobiliar . business . property . entity . IDENT_0 . class ) ; when ( IDENT_3 . METHOD_1 ( ) ) . thenReturn ( IDENT_2 ) ; when ( IDENT_3 . METHOD_2 ( ) ) . thenReturn ( true ) ; IDENT_4 . METHOD_3 ( METHOD_4 ( 1 ) ) ; IDENT_4 . METHOD_5 ( true ) ; boolean IDENT_5 = IDENT_4 . METHOD_6 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( ch . puzzle . itc . mobiliar . business . property . entity . IDENT_0 ) { boolean METHOD_6 = false ; ch . puzzle . itc . mobiliar . business . property . entity . IDENT_0 . IDENT_1 IDENT_2 = property . METHOD_1 ( ) ; switch ( IDENT_2 ) { case INSTANCE : METHOD_6 = METHOD_7 ( ) ; break ; case IDENT_6 : METHOD_6 = ( METHOD_8 ( ) ) && ( ! ( property . METHOD_9 ( ) ) ) ; break ; } if ( METHOD_2 ( ) ) { return ( property . METHOD_2 ( ) ) && METHOD_6 ; } return METHOD_6 ; }
org . junit . Assert . assertFalse ( METHOD_6 ) 