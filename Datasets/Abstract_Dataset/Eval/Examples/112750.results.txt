METHOD_0 ( ) { java . util . List < ch . puzzle . itc . mobiliar . business . property . entity . IDENT_0 > IDENT_1 = new java . util . ArrayList ( ) ; java . lang . String IDENT_2 = STRING_0 ; java . lang . String s = helper . METHOD_1 ( IDENT_1 , INT_0 , IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . util . List , java . lang . Integer , java . lang . String ) { int count = 0 ; java . util . List < java . lang . String > IDENT_3 = new java . util . ArrayList ( ) ; java . lang . String IDENT_2 = null ; for ( ch . puzzle . itc . mobiliar . business . property . entity . IDENT_0 IDENT_4 : IDENT_1 ) { if ( IDENT_4 . METHOD_2 ( ) . equals ( IDENT_5 ) ) { if ( IDENT_2 == null ) { IDENT_2 = IDENT_4 . METHOD_3 ( ) ; } IDENT_3 . add ( IDENT_4 . METHOD_4 ( ) ) ; ++ count ; } } IDENT_2 = ( IDENT_2 == null ) ? IDENT_6 : IDENT_2 ; return METHOD_5 ( IDENT_3 , IDENT_2 , count ) ; }
org . junit . Assert . assertThat ( s , org . hamcrest . core . Is . is ( IDENT_2 ) ) 