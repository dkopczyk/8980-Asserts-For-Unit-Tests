METHOD_0 ( ) { java . util . List < ch . puzzle . itc . mobiliar . business . property . entity . IDENT_0 > IDENT_1 = new java . util . ArrayList ( ) ; ch . puzzle . itc . mobiliar . business . property . entity . IDENT_0 IDENT_2 = new ch . puzzle . itc . mobiliar . business . property . entity . METHOD_1 ( null , null , null , null , null , null , STRING_0 , null , null , null , 1 , null , null , null , null , null , null , null , null , null , null , STRING_1 , null ) ; IDENT_1 . add ( IDENT_2 ) ; java . lang . String IDENT_3 = STRING_2 ; java . lang . String s = helper . METHOD_2 ( IDENT_1 , INT_0 , IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . util . List , java . lang . Integer , java . lang . String ) { int count = 0 ; java . util . List < java . lang . String > IDENT_4 = new java . util . ArrayList ( ) ; java . lang . String IDENT_3 = null ; for ( ch . puzzle . itc . mobiliar . business . property . entity . METHOD_1 IDENT_5 : IDENT_1 ) { if ( IDENT_5 . METHOD_3 ( ) . equals ( IDENT_6 ) ) { if ( IDENT_3 == null ) { IDENT_3 = IDENT_5 . METHOD_4 ( ) ; } IDENT_4 . add ( IDENT_5 . METHOD_5 ( ) ) ; ++ count ; } } IDENT_3 = ( IDENT_3 == null ) ? IDENT_7 : IDENT_3 ; return METHOD_6 ( IDENT_4 , IDENT_3 , count ) ; }
org . junit . Assert . assertThat ( s , org . hamcrest . core . Is . is ( IDENT_3 ) ) 