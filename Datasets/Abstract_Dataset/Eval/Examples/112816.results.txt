METHOD_0 ( ) { logger . info ( IDENT_0 . IDENT_1 ) ; java . util . Date IDENT_2 = new java . util . Date ( ) ; org . IDENT_3 . IDENT_4 . core . domain . entities . User user = IDENT_5 . auth ( IDENT_6 , IDENT_7 , IDENT_8 , IDENT_9 , IDENT_10 ) ; java . util . Date IDENT_11 = new java . util . Date ( ) ; "<AssertPlaceHolder>" ; METHOD_1 ( user ) ; logger . info ( ( STRING_0 + ( java . lang . String . valueOf ( ( ( IDENT_11 . getTime ( ) ) - ( IDENT_2 . getTime ( ) ) ) ) ) ) ) ; logger . debug ( IDENT_0 . IDENT_12 ) ; } auth ( org . IDENT_3 . IDENT_4 . core . domain . entities . IDENT_13 , java . lang . String , org . IDENT_3 . IDENT_4 . core . domain . entities . IDENT_14 , java . lang . String , java . lang . String ) { javax . IDENT_15 . ldap . IDENT_16 IDENT_17 = ( ( javax . IDENT_15 . ldap . IDENT_16 ) ( METHOD_2 ( IDENT_18 , IDENT_7 ) . METHOD_3 ( ) ) ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_19 = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; IDENT_19 . put ( STRING_1 , IDENT_7 ) ; IDENT_19 . put ( STRING_2 , org . IDENT_3 . IDENT_4 . core . service . impl . IDENT_20 . logger ) ; org . IDENT_21 . IDENT_22 . authorization . IDENT_23 . IDENT_24 IDENT_25 = new org . IDENT_21 . IDENT_22 . authorization . IDENT_23 . METHOD_4 ( IDENT_17 , IDENT_19 , true ) ; org . IDENT_21 . IDENT_22 . authorization . IDENT_23 . IDENT_26 . IDENT_27 IDENT_28 = new org . IDENT_3 . IDENT_4 . ldap . METHOD_5 ( IDENT_8 . METHOD_6 ( ) , IDENT_8 . METHOD_7 ( ) ) ; org . IDENT_3 . IDENT_4 . core . service . impl . IDENT_20 . logger . debug ( ( ( ( ( STRING_3 + IDENT_7 ) + STRING_4 ) + IDENT_29 ) + STRING_5 ) ) ; org . IDENT_3 . IDENT_4 . core . domain . entities . User user = null ; try { org . IDENT_3 . IDENT_4 . ldap . IDENT_30 query = new org . IDENT_3 . IDENT_4 . ldap . METHOD_8 ( IDENT_25 , IDENT_7 , IDENT_8 , IDENT_28 ) ; user = query . auth ( IDENT_18 , IDENT_29 , IDENT_31 ) ; } finally { IDENT_17 . close ( ) ; } return user ; }
org . junit . Assert . assertNotNull ( user ) 