METHOD_0 ( ) { IDENT_0 . IDENT_1 . data . IDENT_2 IDENT_3 = new IDENT_0 . IDENT_1 . data . METHOD_1 ( INT_0 ) ; int [ ] IDENT_4 = new int [ ] { 0 , 5 , 10 , INT_1 } ; for ( int i : IDENT_4 ) { IDENT_3 . set ( i ) ; } java . io . ByteArrayOutputStream IDENT_5 = new java . io . ByteArrayOutputStream ( ) ; java . io . IDENT_6 IDENT_7 = new java . io . METHOD_2 ( IDENT_5 ) ; IDENT_3 . write ( IDENT_7 ) ; IDENT_7 . close ( ) ; java . io . ByteArrayInputStream IDENT_8 = new java . io . ByteArrayInputStream ( IDENT_5 . toByteArray ( ) ) ; java . io . IDENT_9 IDENT_10 = new java . io . METHOD_3 ( IDENT_8 ) ; IDENT_0 . IDENT_1 . data . METHOD_1 IDENT_11 = new IDENT_0 . IDENT_1 . data . METHOD_1 ( ) ; IDENT_11 . METHOD_4 ( IDENT_10 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . io . IDENT_12 ) { IDENT_13 = new IDENT_0 . IDENT_14 . data . METHOD_5 ( ) ; try { IDENT_15 = in . METHOD_6 ( ) ; } catch ( java . io . IOException IDENT_16 ) { IDENT_16 . printStackTrace ( ) ; throw new java . lang . RuntimeException ( STRING_0 ) ; } try { IDENT_13 . METHOD_4 ( in ) ; } catch ( java . io . IOException e ) { IDENT_0 . IDENT_14 . data . IDENT_17 . logger . warn ( STRING_1 ) ; IDENT_13 = null ; } }
org . junit . Assert . assertEquals ( IDENT_3 , IDENT_11 ) 