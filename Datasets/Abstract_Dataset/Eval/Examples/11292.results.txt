METHOD_0 ( ) { org . apache . cxf . IDENT_0 . IDENT_1 . repo . IDENT_2 IDENT_3 = org . easymock . EasyMock . METHOD_1 ( org . apache . cxf . IDENT_0 . IDENT_1 . repo . IDENT_2 . class ) ; org . easymock . EasyMock . expect ( IDENT_3 . METHOD_2 ( org . easymock . EasyMock . eq ( STRING_0 ) ) ) . andReturn ( METHOD_3 ( ) ) ; org . easymock . EasyMock . replay ( IDENT_3 ) ; org . apache . cxf . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 IDENT_6 = new org . apache . cxf . IDENT_0 . IDENT_1 . IDENT_4 . METHOD_4 ( IDENT_3 ) ; org . apache . cxf . IDENT_0 . model . IDENT_0 . IDENT_7 request = METHOD_5 ( ) ; org . apache . cxf . IDENT_0 . model . IDENT_0 . IDENT_8 result = IDENT_6 . METHOD_0 ( request ) ; "<AssertPlaceHolder>" ; } METHOD_0 ( org . apache . cxf . IDENT_0 . model . IDENT_0 . IDENT_7 ) { java . util . List < org . apache . cxf . IDENT_0 . model . IDENT_0 . IDENT_9 > IDENT_10 = parse ( request ) ; java . security . IDENT_11 . IDENT_12 IDENT_11 ; try { IDENT_11 = METHOD_6 ( IDENT_10 ) ; if ( IDENT_11 == null ) { return null ; } org . apache . cxf . IDENT_0 . model . IDENT_0 . IDENT_8 result = new org . apache . cxf . IDENT_0 . model . IDENT_0 . METHOD_7 ( ) ; result . METHOD_8 ( org . apache . cxf . IDENT_0 . IDENT_1 . utils . IDENT_13 . METHOD_9 ( IDENT_11 ) ) ; return result ; } catch ( java . security . IDENT_11 . IDENT_14 e ) { throw new org . apache . cxf . IDENT_0 . exception . METHOD_10 ( ( STRING_1 + ( e . getMessage ( ) ) ) , e ) ; } catch ( java . security . IDENT_11 . IDENT_15 IDENT_16 ) { throw new org . apache . cxf . IDENT_0 . exception . METHOD_10 ( IDENT_16 . getMessage ( ) , IDENT_16 ) ; } }
org . junit . Assert . assertNotNull ( result . METHOD_9 ( ) ) 