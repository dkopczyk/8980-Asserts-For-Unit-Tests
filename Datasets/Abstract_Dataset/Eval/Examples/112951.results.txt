METHOD_0 ( ) { IDENT_0 . IDENT_1 . data . map . IDENT_2 IDENT_3 = new IDENT_0 . IDENT_1 . data . map . METHOD_1 ( ) ; IDENT_3 . put ( 1 , ( ( short ) ( 2 ) ) ) ; IDENT_3 . put ( 2 , ( ( short ) ( 1 ) ) ) ; IDENT_3 . put ( 3 , ( ( short ) ( 3 ) ) ) ; IDENT_0 . IDENT_1 . data . map . METHOD_1 IDENT_4 = new IDENT_0 . IDENT_1 . data . map . METHOD_1 ( ) ; IDENT_4 . put ( 1 , ( ( short ) ( 1 ) ) ) ; IDENT_4 . put ( 2 , ( ( short ) ( 4 ) ) ) ; IDENT_4 . put ( 4 , ( ( short ) ( 5 ) ) ) ; long s = IDENT_3 . METHOD_2 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( IDENT_0 . IDENT_1 . data . map . IDENT_5 ) { long s = 0 ; for ( IDENT_0 . IDENT_1 . data . map . IDENT_5 . Entry < IDENT_6 > e : m . entrySet ( ) ) { IDENT_6 key = e . getKey ( ) ; if ( this . containsKey ( key ) ) { s += ( this . get ( key ) ) * ( e . getValue ( ) ) ; } } return s ; }
org . junit . Assert . assertEquals ( 6 , s ) 