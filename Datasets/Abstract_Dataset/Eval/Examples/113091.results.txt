METHOD_0 ( ) { IDENT_0 . integration . IDENT_1 . IDENT_2 . run ( new java . lang . String [ ] { STRING_0 } ) ; "<AssertPlaceHolder>" ; } run ( java . lang . String [ ] ) { return IDENT_0 . integration . IDENT_1 . IDENT_3 . child ( null , IDENT_0 . integration . IDENT_1 . Collections . METHOD_1 ( IDENT_3 . IDENT_4 . IDENT_5 . name ( ) , new IDENT_0 . integration . IDENT_1 . METHOD_2 ( ) ) , new IDENT_0 . integration . IDENT_1 . IDENT_3 . IDENT_6 < java . lang . Integer > ( ) { @ java . lang . Override public java . lang . Integer run ( ) throws java . lang . Exception { IDENT_0 . logging . IDENT_7 log = IDENT_0 . integration . IDENT_1 . IDENT_3 . METHOD_3 ( ) . METHOD_4 ( . class ) ; boolean IDENT_8 = false ; try { IDENT_0 . configuration . IDENT_9 IDENT_10 = IDENT_0 . configuration . IDENT_11 . getInstance ( ) . METHOD_5 ( . class ) ; if ( ! ( IDENT_10 . METHOD_6 ( ) ) ) { log . METHOD_7 ( IDENT_12 . IDENT_13 , java . lang . String . format ( IDENT_0 . integration . IDENT_1 . IDENT_2 . IDENT_14 . getString ( STRING_1 ) , IDENT_0 . configuration . IDENT_11 . getInstance ( ) . METHOD_8 ( IDENT_10 . getProperty ( IDENT_9 . IDENT_15 ) ) ) ) ; return 0 ; } IDENT_0 . integration . IDENT_1 . IDENT_2 IDENT_16 = new IDENT_0 . integration . IDENT_1 . METHOD_9 ( ) ; log . info ( IDENT_12 . IDENT_13 , IDENT_0 . integration . IDENT_1 . IDENT_17 . METHOD_10 ( ) ) ; if ( ( args . length == 1 ) && ( ( STRING_2 + IDENT_18 . IDENT_19 ) . equals ( args [ 0 ] ) ) ) { IDENT_16 . METHOD_11 ( System . out ) ; return 0 ; } else if ( ( args . length == 1 ) && ( ( STRING_2 + IDENT_18 . IDENT_20 ) . equals ( args [ 0 ] ) ) ) { log . info ( IDENT_12 . IDENT_13 , java . lang . String . format ( IDENT_0 . integration . IDENT_1 . METHOD_9 . IDENT_14 . getString ( STRING_3 ) , ( ( IDENT_0 . util . IDENT_21 . METHOD_12 ( ) ) + ( IDENT_0 . util . IDENT_22 . METHOD_13 ( ) ) ) ) ) ; return 0 ; } try { IDENT_16 . METHOD_14 ( args ) ; } catch ( e ) { log . METHOD_7 ( IDENT_12 . IDENT_13 , IDENT_0 . integration . IDENT_1 . METHOD_9 . IDENT_14 . getString ( STRING_4 ) ) ; throw IDENT_0 . integration . IDENT_1 . e ; } List < java . lang . String > IDENT_23 = IDENT_16 . METHOD_15 ( ) ; if ( ! ( IDENT_23 . isEmpty ( ) ) ) { IDENT_16 . METHOD_11 ( IDENT_23 , System . err ) ; return 1 ; } IDENT_16 . METHOD_16 ( ) ; IDENT_0 . integration . IDENT_1 . IDENT_3 . child ( IDENT_3 . IDENT_4 . IDENT_24 , new IDENT_0 . resource . METHOD_17 ( IDENT_16 . METHOD_18 ( ) ) , ( ) -> { IDENT_16 . METHOD_19 ( ) ; if ( IDENT_25 . IDENT_26 . equals ( IDENT_16 . command ) ) { log . info ( IDENT_12 . IDENT_13 , IDENT_0 . integration . IDENT_1 . METHOD_9 . IDENT_14 . getString ( STRING_5 ) ) ; } else if ( ( IDENT_16 . command . startsWith ( IDENT_25 . IDENT_27 ) ) && ( ! ( IDENT_16 . command . METHOD_20 ( STRING_6 ) ) ) ) { log . info ( IDENT_12 . IDENT_13 , IDENT_0 . integration . IDENT_1 . METHOD_9 . IDENT_14 . getString ( STRING_7 ) ) ; } else if ( ! ( IDENT_16 . command . METHOD_20 ( STRING_6 ) ) ) { log . info ( IDENT_12 . IDENT_13 , java . lang . String . format ( IDENT_0 . integration . IDENT_1 . METHOD_9 . IDENT_14 . getString ( STRING_8 ) , IDENT_16 . command ) ) ; } } ) ; } catch ( e ) { java . lang . String message = IDENT_0 . integration . IDENT_1 . e . getMessage ( ) ; if ( ( IDENT_0 . integration . IDENT_1 . e . METHOD_21 ( ) ) != null ) { message = IDENT_0 . integration . IDENT_1 . e . METHOD_21 ( ) . getMessage ( ) ; } if ( message == null ) { message = IDENT_0 . integration . IDENT_1 . METHOD_9 . IDENT_14 . getString ( STRING_9 ) ; } try { if ( ( IDENT_0 . integration . IDENT_1 . e . METHOD_21 ( ) ) instanceof IDENT_0 . integration . IDENT_1 . IDENT_28 ) { ( ( IDENT_0 . integration . IDENT_1 . IDENT_28 ) ( IDENT_0 . integration . IDENT_1 . e . METHOD_21 ( ) ) ) . METHOD_22 ( System . out ) ; } else { log . METHOD_23 ( IDENT_12 . IDENT_13 , java . lang . String . format ( IDENT_0 . integration . IDENT_1 . METHOD_9 . IDENT_14 . getString ( STRING_10 ) , message ) , IDENT_0 . integration . IDENT_1 . e ) ; log . METHOD_23 ( IDENT_12 . IDENT_13 , METHOD_24 ( IDENT_8 ) ) ; } } catch ( IDENT_29 ) { IDENT_0 . integration . IDENT_1 . IDENT_29 . printStackTrace ( ) ; } throw new < IDENT_0 . integration . IDENT_1 . e > IDENT_0 . integration . IDENT_1 . METHOD_25 ( java . lang . String . format ( IDENT_0 . integration . IDENT_1 . METHOD_9 . IDENT_14 . getString ( STRING_10 ) , message ) ) ; } return 0 ; } } ) ; }
org . junit . Assert . assertTrue ( true ) 