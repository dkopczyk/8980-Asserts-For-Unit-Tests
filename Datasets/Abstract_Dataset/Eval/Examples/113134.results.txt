METHOD_0 ( ) { IDENT_0 . tuple . IDENT_1 tuple = new IDENT_0 . tuple . METHOD_1 ( 1 , STRING_0 , INT_0 ) ; com . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = new com . IDENT_2 . IDENT_3 . METHOD_2 ( com . IDENT_2 . IDENT_3 . IDENT_6 . get ( ) . METHOD_3 ( ) ) ; byte [ ] IDENT_7 = IDENT_5 . serialize ( tuple ) ; IDENT_0 . tuple . METHOD_1 IDENT_8 = new IDENT_0 . tuple . METHOD_1 ( 1 , STRING_0 , INT_0 ) ; IDENT_0 . tuple . METHOD_1 IDENT_9 = IDENT_5 . METHOD_4 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( T ) { com . IDENT_2 . IDENT_3 . serialization . IDENT_10 IDENT_11 = null ; try { byte [ ] buffer = IDENT_12 ; int size = IDENT_13 . METHOD_5 ( ) ; if ( size > ( IDENT_12 . length ) ) { buffer = new byte [ size ] ; } int IDENT_14 = 0 ; int IDENT_15 ; while ( ( IDENT_15 = IDENT_13 . read ( buffer , IDENT_14 , ( size - IDENT_14 ) ) ) != ( - 1 ) ) { IDENT_14 += IDENT_15 ; if ( IDENT_14 == size ) break ; } IDENT_11 = new com . IDENT_2 . IDENT_3 . serialization . METHOD_6 ( new com . IDENT_2 . IDENT_3 . serialization . ByteArrayInputStream ( buffer ) ) ; IDENT_16 = ( ( T ) ( IDENT_11 . METHOD_7 ( ) ) ) ; } catch ( java . lang . IDENT_17 e ) { throw new java . lang . RuntimeException ( e ) ; } finally { if ( IDENT_11 != null ) { IDENT_11 . close ( ) ; } } return IDENT_16 ; }
org . junit . Assert . assertEquals ( IDENT_8 , IDENT_9 ) 