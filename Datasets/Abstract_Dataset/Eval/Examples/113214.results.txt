METHOD_0 ( ) { org . IDENT_0 . commons . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_0 . commons . IDENT_1 . METHOD_1 ( ) ; IDENT_3 . execute ( null ) ; "<AssertPlaceHolder>" ; } execute ( java . util . List ) { java . util . List < java . lang . Long > IDENT_4 = new java . util . ArrayList < java . lang . Long > ( ) ; java . util . List < java . lang . Long > IDENT_5 = new java . util . ArrayList < java . lang . Long > ( ) ; java . lang . Long id ; for ( org . IDENT_0 . server . domain . dto . IDENT_6 IDENT_7 : IDENT_8 ) { id = IDENT_7 . METHOD_2 ( ) ; switch ( IDENT_7 . METHOD_3 ( ) ) { case IDENT_9 : if ( ! ( IDENT_4 . contains ( id ) ) ) { IDENT_4 . add ( id ) ; } break ; case IDENT_10 : if ( ! ( IDENT_5 . contains ( id ) ) ) { IDENT_5 . add ( id ) ; } break ; default : break ; } } java . util . List < org . IDENT_0 . server . search . IDENT_11 . IDENT_12 > IDENT_13 = IDENT_14 . execute ( IDENT_4 ) ; java . util . List < org . IDENT_0 . server . search . IDENT_11 . IDENT_15 > IDENT_16 = IDENT_17 . execute ( IDENT_5 ) ; java . util . Map < java . lang . String , org . IDENT_0 . server . search . IDENT_11 . IDENT_12 > IDENT_18 = new java . util . HashMap < java . lang . String , org . IDENT_0 . server . search . IDENT_11 . IDENT_12 > ( ) ; java . util . Map < java . lang . String , org . IDENT_0 . server . search . IDENT_11 . IDENT_15 > IDENT_19 = new java . util . HashMap < java . lang . String , org . IDENT_0 . server . search . IDENT_11 . IDENT_15 > ( ) ; for ( org . IDENT_0 . server . search . IDENT_11 . IDENT_12 person : IDENT_13 ) { IDENT_18 . put ( person . METHOD_4 ( ) , person ) ; } for ( org . IDENT_0 . server . search . IDENT_11 . IDENT_15 IDENT_20 : IDENT_16 ) { IDENT_19 . put ( IDENT_20 . METHOD_5 ( ) , IDENT_20 ) ; } org . IDENT_0 . server . search . IDENT_11 . IDENT_12 IDENT_21 ; org . IDENT_0 . server . search . IDENT_11 . IDENT_15 IDENT_22 ; for ( org . IDENT_0 . server . domain . dto . IDENT_6 IDENT_7 : IDENT_8 ) { if ( ( IDENT_7 . METHOD_3 ( ) ) == ( org . IDENT_0 . server . domain . IDENT_23 . IDENT_9 ) ) { IDENT_21 = IDENT_18 . get ( IDENT_7 . METHOD_6 ( ) ) ; if ( IDENT_21 != null ) { IDENT_7 . METHOD_7 ( IDENT_21 . METHOD_8 ( ) ) ; IDENT_7 . METHOD_9 ( IDENT_21 . METHOD_10 ( ) ) ; } } else if ( ( IDENT_7 . METHOD_3 ( ) ) == ( org . IDENT_0 . server . domain . IDENT_23 . IDENT_10 ) ) { IDENT_22 = IDENT_19 . get ( IDENT_7 . METHOD_6 ( ) ) ; if ( IDENT_22 != null ) { IDENT_7 . METHOD_7 ( IDENT_22 . METHOD_8 ( ) ) ; IDENT_7 . METHOD_9 ( IDENT_22 . METHOD_10 ( ) ) ; } } } return IDENT_8 ; }
org . junit . Assert . assertTrue ( IDENT_3 . execute ( null ) ) 