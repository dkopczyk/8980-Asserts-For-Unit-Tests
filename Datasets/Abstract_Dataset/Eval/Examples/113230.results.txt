METHOD_0 ( ) { org . IDENT_0 . commons . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_0 . commons . IDENT_1 . METHOD_1 ( ) ; java . lang . Object IDENT_4 = IDENT_3 . METHOD_2 ( org . IDENT_0 . commons . search . IDENT_5 . IDENT_6 . class ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . Class ) { java . lang . reflect . IDENT_7 < ? > IDENT_8 = null ; for ( java . lang . reflect . IDENT_7 < ? > IDENT_9 : IDENT_10 . METHOD_3 ( ) ) { if ( ( IDENT_9 . METHOD_4 ( ) . length ) == 0 ) { IDENT_8 = IDENT_9 ; break ; } } if ( IDENT_8 == null ) { java . lang . String message = STRING_0 + ( IDENT_10 . getName ( ) ) ; log . error ( message ) ; throw new java . lang . RuntimeException ( message ) ; } IDENT_8 . METHOD_5 ( true ) ; java . lang . Object obj = null ; try { obj = IDENT_8 . newInstance ( new java . lang . Object [ 0 ] ) ; } catch ( java . lang . Exception e ) { java . lang . String message = STRING_1 + ( IDENT_10 . getName ( ) ) ; log . error ( message , e ) ; throw new java . lang . RuntimeException ( message ) ; } return obj ; }
org . junit . Assert . assertTrue ( ( IDENT_4 instanceof org . IDENT_0 . commons . search . IDENT_5 . IDENT_6 ) ) 