METHOD_0 ( ) { IDENT_0 . add ( IDENT_1 ) ; IDENT_0 . add ( IDENT_2 ) ; boolean result = METHOD_1 ( new org . IDENT_3 . METHOD_2 ( ) { { METHOD_3 ( IDENT_1 ) . execute ( IDENT_4 , person ) ; METHOD_4 ( METHOD_5 ( false ) ) ; METHOD_3 ( IDENT_2 ) . execute ( IDENT_4 , person ) ; METHOD_4 ( METHOD_5 ( false ) ) ; } } ) ; "<AssertPlaceHolder>" ; } execute ( org . IDENT_5 . commons . client . IDENT_6 , org . springframework . security . IDENT_7 . IDENT_8 ) { log . debug ( ( STRING_0 0 + ( IDENT_9 . METHOD_6 ( ) ) ) ) ; java . lang . String IDENT_10 = METHOD_7 ( IDENT_11 ) ; try { java . lang . Object IDENT_12 = IDENT_13 . METHOD_8 ( IDENT_9 . METHOD_6 ( ) ) ; java . io . IDENT_14 result = null ; if ( IDENT_12 instanceof org . IDENT_5 . commons . IDENT_15 . service . IDENT_16 ) { org . IDENT_5 . commons . IDENT_15 . service . IDENT_16 action = ( ( org . IDENT_5 . commons . IDENT_15 . service . IDENT_16 ) ( IDENT_12 ) ) ; java . io . IDENT_14 IDENT_17 = IDENT_9 . METHOD_9 ( ) ; org . IDENT_5 . commons . IDENT_15 . context . service . IDENT_18 IDENT_19 = new org . IDENT_5 . commons . IDENT_15 . context . service . METHOD_10 ( IDENT_17 , IDENT_20 . METHOD_11 ( IDENT_11 . METHOD_12 ( ) , IDENT_9 . METHOD_13 ( ) ) ) ; IDENT_19 . METHOD_14 ( IDENT_9 . METHOD_6 ( ) ) ; result = IDENT_21 . execute ( IDENT_19 , action ) ; } else if ( IDENT_12 instanceof org . IDENT_5 . commons . IDENT_15 . service . IDENT_22 ) { org . IDENT_5 . commons . IDENT_15 . service . IDENT_22 action = ( ( org . IDENT_5 . commons . IDENT_15 . service . IDENT_22 ) ( IDENT_12 ) ) ; java . io . IDENT_14 IDENT_17 = IDENT_9 . METHOD_9 ( ) ; org . IDENT_5 . commons . IDENT_15 . context . service . METHOD_10 IDENT_19 = new org . IDENT_5 . commons . IDENT_15 . context . service . METHOD_10 ( IDENT_17 , IDENT_20 . METHOD_11 ( IDENT_11 . METHOD_12 ( ) , IDENT_9 . METHOD_13 ( ) ) ) ; IDENT_19 . METHOD_14 ( IDENT_9 . METHOD_6 ( ) ) ; result = IDENT_21 . execute ( IDENT_19 , action ) ; } else { throw new org . IDENT_5 . commons . exceptions . METHOD_15 ( STRING_1 ) ; } long IDENT_23 = java . lang . System . currentTimeMillis ( ) ; IDENT_9 . METHOD_16 ( ( ( java . io . IDENT_14 ) ( IDENT_24 . METHOD_17 ( result ) ) ) ) ; log . debug ( ( ( ( ( IDENT_9 . METHOD_6 ( ) ) + STRING_2 ) + ( ( java . lang . System . currentTimeMillis ( ) ) - IDENT_23 ) ) + STRING_3 ) ) ; } catch ( java . lang . Exception ex ) { java . lang . String IDENT_25 = STRING_4 ; if ( ( IDENT_9 . METHOD_9 ( ) ) != null ) { try { IDENT_25 = IDENT_9 . METHOD_9 ( ) . toString ( ) ; } catch ( java . lang . Exception IDENT_26 ) { IDENT_25 = ( STRING_5 + ( IDENT_26 . getMessage ( ) ) ) + STRING_0 2 ; } } log . error ( ( ( ( ( ( ( STRING_6 + ( IDENT_9 . METHOD_6 ( ) ) ) + STRING_7 ) + IDENT_10 ) + STRING_0 1 ) + IDENT_25 ) + STRING_8 ) , ex ) ; IDENT_9 . METHOD_16 ( IDENT_27 . transform ( ex ) ) ; } IDENT_9 . METHOD_18 ( null ) ; log . debug ( ( STRING_0 + ( IDENT_9 . METHOD_6 ( ) ) ) ) ; return IDENT_9 ; }
org . junit . Assert . assertFalse ( result ) 