METHOD_0 ( ) { org . IDENT_0 . server . persistence . IDENT_1 . stream . IDENT_2 IDENT_3 = new org . IDENT_0 . server . persistence . IDENT_1 . stream . METHOD_1 ( IDENT_4 , IDENT_5 ) ; IDENT_3 . METHOD_2 ( cache ) ; final org . IDENT_0 . server . domain . stream . IDENT_6 IDENT_7 = context . mock ( org . IDENT_0 . server . domain . stream . IDENT_6 . class ) ; final org . IDENT_0 . server . domain . stream . IDENT_8 IDENT_9 = context . mock ( org . IDENT_0 . server . domain . stream . IDENT_8 . class ) ; context . METHOD_3 ( new org . IDENT_10 . METHOD_4 ( ) { { METHOD_5 ( IDENT_7 ) . getId ( ) ; METHOD_6 ( METHOD_7 ( INT_0 ) ) ; METHOD_5 ( IDENT_7 ) . METHOD_8 ( ) ; METHOD_6 ( METHOD_7 ( IDENT_9 ) ) ; METHOD_5 ( IDENT_9 ) . METHOD_9 ( ) ; METHOD_6 ( METHOD_7 ( IDENT_11 . IDENT_12 ) ) ; METHOD_5 ( IDENT_9 ) . METHOD_10 ( ) ; METHOD_6 ( METHOD_7 ( STRING_0 ) ) ; } } ) ; boolean IDENT_13 = false ; try { IDENT_3 . execute ( IDENT_7 ) ; } catch ( java . lang . RuntimeException ex ) { IDENT_13 = true ; } "<AssertPlaceHolder>" ; } execute ( java . util . List ) { java . util . List < java . lang . Long > IDENT_14 = new java . util . ArrayList < java . lang . Long > ( ) ; java . util . List < java . lang . Long > IDENT_15 = new java . util . ArrayList < java . lang . Long > ( ) ; java . lang . Long id ; for ( org . IDENT_0 . server . domain . dto . IDENT_16 IDENT_17 : IDENT_18 ) { id = IDENT_17 . METHOD_11 ( ) ; switch ( IDENT_17 . METHOD_12 ( ) ) { case IDENT_19 : if ( ! ( IDENT_14 . contains ( id ) ) ) { IDENT_14 . add ( id ) ; } break ; case IDENT_20 : if ( ! ( IDENT_15 . contains ( id ) ) ) { IDENT_15 . add ( id ) ; } break ; default : break ; } } java . util . List < org . IDENT_0 . server . search . IDENT_21 . IDENT_22 > IDENT_23 = IDENT_24 . execute ( IDENT_14 ) ; java . util . List < org . IDENT_0 . server . search . IDENT_21 . IDENT_25 > IDENT_26 = IDENT_27 . execute ( IDENT_15 ) ; java . util . Map < java . lang . String , org . IDENT_0 . server . search . IDENT_21 . IDENT_22 > IDENT_28 = new java . util . HashMap < java . lang . String , org . IDENT_0 . server . search . IDENT_21 . IDENT_22 > ( ) ; java . util . Map < java . lang . String , org . IDENT_0 . server . search . IDENT_21 . IDENT_25 > IDENT_29 = new java . util . HashMap < java . lang . String , org . IDENT_0 . server . search . IDENT_21 . IDENT_25 > ( ) ; for ( org . IDENT_0 . server . search . IDENT_21 . IDENT_22 person : IDENT_23 ) { IDENT_28 . put ( person . METHOD_13 ( ) , person ) ; } for ( org . IDENT_0 . server . search . IDENT_21 . IDENT_25 IDENT_30 : IDENT_26 ) { IDENT_29 . put ( IDENT_30 . METHOD_14 ( ) , IDENT_30 ) ; } org . IDENT_0 . server . search . IDENT_21 . IDENT_22 IDENT_31 ; org . IDENT_0 . server . search . IDENT_21 . IDENT_25 IDENT_32 ; for ( org . IDENT_0 . server . domain . dto . IDENT_16 IDENT_17 : IDENT_18 ) { if ( ( IDENT_17 . METHOD_12 ( ) ) == ( org . IDENT_0 . server . domain . IDENT_33 . IDENT_19 ) ) { IDENT_31 = IDENT_28 . get ( IDENT_17 . METHOD_15 ( ) ) ; if ( IDENT_31 != null ) { IDENT_17 . METHOD_16 ( IDENT_31 . METHOD_17 ( ) ) ; IDENT_17 . METHOD_18 ( IDENT_31 . METHOD_19 ( ) ) ; } } else if ( ( IDENT_17 . METHOD_12 ( ) ) == ( org . IDENT_0 . server . domain . IDENT_33 . IDENT_20 ) ) { IDENT_32 = IDENT_29 . get ( IDENT_17 . METHOD_15 ( ) ) ; if ( IDENT_32 != null ) { IDENT_17 . METHOD_16 ( IDENT_32 . METHOD_17 ( ) ) ; IDENT_17 . METHOD_18 ( IDENT_32 . METHOD_19 ( ) ) ; } } } return IDENT_18 ; }
org . junit . Assert . assertTrue ( IDENT_13 ) 