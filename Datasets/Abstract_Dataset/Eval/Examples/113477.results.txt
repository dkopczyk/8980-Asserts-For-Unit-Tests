METHOD_0 ( ) { org . locationtech . IDENT_0 . repository . IDENT_1 repo = IDENT_2 . METHOD_1 ( STRING_0 , null ) ; IDENT_2 . METHOD_2 ( STRING_0 ) . METHOD_3 ( ) ; org . locationtech . IDENT_0 . test . IDENT_3 IDENT_4 = new org . locationtech . IDENT_0 . test . METHOD_4 ( repo ) . init ( STRING_1 , STRING_2 ) . METHOD_5 ( ) ; IDENT_4 . METHOD_6 ( STRING_3 , METHOD_4 . IDENT_5 ) ; java . util . Iterator < org . locationtech . IDENT_0 . model . IDENT_6 > IDENT_7 = repo . command ( org . locationtech . IDENT_0 . IDENT_8 . IDENT_9 . class ) . METHOD_7 ( 1 ) . call ( ) ; "<AssertPlaceHolder>" ; org . locationtech . IDENT_0 . model . IDENT_6 IDENT_10 = IDENT_7 . next ( ) ; org . springframework . test . web . servlet . request . IDENT_11 get = org . springframework . test . web . servlet . request . IDENT_12 . get ( ( STRING_4 + ( IDENT_10 . getId ( ) . toString ( ) ) ) ) ; java . lang . String IDENT_13 = METHOD_8 ( get ) . METHOD_9 ( status ( ) . METHOD_10 ( ) ) . METHOD_9 ( content ( ) . METHOD_11 ( IDENT_14 . IDENT_15 ) ) . andReturn ( ) . METHOD_12 ( ) . METHOD_13 ( ) ; org . locationtech . IDENT_0 . model . IDENT_16 . valueOf ( IDENT_13 ) ; repo . close ( ) ; } hasNext ( ) { if ( IDENT_17 ) { return false ; } if ( ( next ) == null ) { next = METHOD_14 ( ) ; } return ( next ) != null ; }
org . junit . Assert . assertTrue ( IDENT_7 . hasNext ( ) ) 