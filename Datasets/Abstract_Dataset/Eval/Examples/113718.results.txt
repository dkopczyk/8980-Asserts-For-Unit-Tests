METHOD_0 ( ) { System . out . println ( STRING_0 ) ; java . lang . String IDENT_0 = STRING_1 + ( new java . util . Date ( ) . getTime ( ) ) ; java . lang . String IDENT_1 = STRING_2 + ( new java . util . Date ( ) . getTime ( ) ) ; IDENT_2 . storage . index . IDENT_3 . IDENT_4 . IDENT_5 instance ; try { instance = IDENT_2 . storage . index . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_1 ( IDENT_2 . storage . index . IDENT_3 . IDENT_4 . IDENT_6 . config , STRING_3 , STRING_4 , IDENT_2 . storage . index . IDENT_3 . IDENT_4 . IDENT_6 . database ) ; instance . METHOD_2 ( IDENT_0 ) ; instance . METHOD_2 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; } catch ( IDENT_2 . storage . exception . IDENT_7 ex ) { org . junit . Assert . fail ( ( STRING_5 + ex ) ) ; } } METHOD_3 ( ) { java . util . Map < java . lang . String , java . lang . Integer > IDENT_8 = new java . util . HashMap < java . lang . String , java . lang . Integer > ( ) ; try ( redis . IDENT_9 . IDENT_10 . IDENT_11 redis = this . redis . getResource ( ) ) { java . util . Set < java . lang . String > keys = redis . METHOD_4 ( this . IDENT_12 ) ; java . util . Iterator < java . lang . String > it = keys . iterator ( ) ; while ( it . hasNext ( ) ) { java . lang . String key = it . next ( ) ; IDENT_8 . put ( key , ( - 1 ) ) ; } } return IDENT_8 ; }
org . junit . Assert . assertEquals ( true , ( ( instance . METHOD_3 ( ) . size ( ) ) >= 2 ) ) 