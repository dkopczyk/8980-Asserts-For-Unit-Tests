METHOD_0 ( ) { final java . util . List < java . lang . Integer > list = new java . util . ArrayList ( ) ; list . add ( null ) ; final int start = 1 ; final int end = - INT_0 ; final int IDENT_0 = 0 ; final java . util . List < java . lang . Integer > IDENT_1 = IDENT_2 . IDENT_3 . core . collection . IDENT_4 . METHOD_1 ( list , start , end , IDENT_0 ) ; final java . util . List < java . lang . Integer > IDENT_5 = new java . util . ArrayList ( ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . util . List , int , int , int ) { if ( ( list == null ) || ( list . isEmpty ( ) ) ) { return null ; } final int size = list . size ( ) ; if ( start < 0 ) { start += size ; } if ( end < 0 ) { end += size ; } if ( start == size ) { return new java . util . ArrayList ( 0 ) ; } if ( start > end ) { int IDENT_6 = start ; start = end ; end = IDENT_6 ; } if ( end > size ) { if ( start >= size ) { return new java . util . ArrayList ( 0 ) ; } end = size ; } if ( IDENT_0 <= 1 ) { return list . METHOD_2 ( start , end ) ; } final java . util . List < T > result = new java . util . ArrayList ( ) ; for ( int i = start ; i < end ; i += IDENT_0 ) { result . add ( list . get ( i ) ) ; } return result ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_1 ) 