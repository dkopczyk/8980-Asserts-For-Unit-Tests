METHOD_0 ( ) { IDENT_0 . IDENT_1 . core . lang . IDENT_2 IDENT_3 = new IDENT_0 . IDENT_1 . core . lang . METHOD_1 ( 0 , 0 ) ; long IDENT_4 = IDENT_3 . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { long IDENT_5 = METHOD_3 ( ) ; if ( IDENT_5 < ( IDENT_6 ) ) { throw new java . lang . IllegalStateException ( IDENT_0 . IDENT_1 . core . util . IDENT_7 . format ( STRING_0 , ( ( IDENT_6 ) - IDENT_5 ) ) ) ; } if ( ( IDENT_6 ) == IDENT_5 ) { IDENT_8 = ( ( IDENT_8 ) + 1 ) & ( IDENT_9 ) ; if ( ( IDENT_8 ) == 0 ) { IDENT_5 = METHOD_4 ( IDENT_6 ) ; } } else { IDENT_8 = 0L ; } IDENT_6 = IDENT_5 ; return ( ( ( ( IDENT_5 - ( IDENT_10 ) ) << ( IDENT_11 ) ) | ( ( IDENT_12 ) << ( IDENT_13 ) ) ) | ( ( IDENT_14 ) << ( IDENT_15 ) ) ) | ( IDENT_8 ) ; }
org . junit . Assert . assertTrue ( ( METHOD_2 > 0 ) ) 