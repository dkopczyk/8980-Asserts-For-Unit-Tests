METHOD_0 ( ) { javax . xml . IDENT_0 . IDENT_1 IDENT_2 = new javax . xml . IDENT_0 . METHOD_1 ( STRING_0 , STRING_1 ) ; javax . xml . IDENT_0 . METHOD_1 IDENT_3 = new javax . xml . IDENT_0 . METHOD_1 ( STRING_0 , STRING_2 ) ; javax . xml . ws . IDENT_4 service = javax . xml . ws . IDENT_4 . create ( IDENT_2 ) ; java . lang . String IDENT_5 = ( STRING_3 + ( org . apache . cxf . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 ) ) + STRING_4 ; service . METHOD_2 ( IDENT_3 , IDENT_10 . IDENT_11 , IDENT_5 ) ; org . apache . cxf . IDENT_6 . IDENT_7 . IDENT_12 IDENT_13 = service . METHOD_3 ( org . apache . cxf . IDENT_6 . IDENT_7 . IDENT_12 . class ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String ) { if ( STRING_5 . equalsIgnoreCase ( IDENT_14 ) ) { java . util . List < org . apache . cxf . IDENT_6 . IDENT_7 . IDENT_15 > IDENT_16 = new java . util . ArrayList ( ) ; IDENT_16 . add ( new org . apache . cxf . IDENT_6 . IDENT_7 . METHOD_5 ( STRING_6 , STRING_7 , STRING_8 ) ) ; IDENT_16 . add ( new org . apache . cxf . IDENT_6 . IDENT_7 . METHOD_5 ( STRING_9 , STRING_10 , STRING_11 ) ) ; return IDENT_16 ; } return null ; }
org . junit . Assert . assertEquals ( 2 , IDENT_13 . METHOD_4 ( STRING_5 ) . size ( ) ) 