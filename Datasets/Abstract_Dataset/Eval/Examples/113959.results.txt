METHOD_0 ( ) { IDENT_0 . IDENT_1 < IDENT_0 . IDENT_2 . IDENT_3 , java . lang . Integer > IDENT_4 = new IDENT_0 . IDENT_2 . METHOD_1 ( 0 , null ) ; java . lang . Integer init = 0 ; java . util . List < java . lang . Integer > IDENT_5 = java . util . Arrays . asList ( 1 ) ; java . util . List < IDENT_6 . IDENT_7 . IDENT_8 < IDENT_0 . IDENT_2 . IDENT_3 , java . lang . Integer > > IDENT_9 = new java . util . ArrayList < IDENT_6 . IDENT_7 . IDENT_8 < IDENT_0 . IDENT_2 . IDENT_3 , java . lang . Integer > > ( ) ; IDENT_9 . add ( new IDENT_6 . IDENT_7 . IDENT_10 < IDENT_0 . IDENT_2 . IDENT_3 , java . lang . Integer > ( 0 , 1 , new IDENT_0 . IDENT_2 . METHOD_2 ( null , null ) ) ) ; IDENT_9 . add ( new IDENT_6 . IDENT_7 . IDENT_10 < IDENT_0 . IDENT_2 . METHOD_2 , java . lang . Integer > ( 1 , 1 , new IDENT_0 . IDENT_2 . METHOD_2 ( 1 , null ) ) ) ; IDENT_9 . add ( new IDENT_6 . IDENT_7 . IDENT_10 < IDENT_0 . IDENT_2 . METHOD_2 , java . lang . Integer > ( 1 , 0 , new IDENT_0 . IDENT_2 . METHOD_2 ( null , 0 ) ) ) ; IDENT_6 . IDENT_7 . IDENT_11 < IDENT_0 . IDENT_2 . METHOD_2 , java . lang . Integer > IDENT_12 = IDENT_6 . IDENT_7 . IDENT_11 . METHOD_3 ( IDENT_9 , init , IDENT_5 , IDENT_4 , false ) ; IDENT_13 . IDENT_7 . IDENT_14 < IDENT_0 . IDENT_2 . METHOD_2 , java . lang . Integer > o = new IDENT_13 . IDENT_7 . IDENT_15 < IDENT_0 . IDENT_2 . METHOD_2 , java . lang . Integer > ( IDENT_12 , IDENT_4 ) ; java . lang . Integer IDENT_16 = 0 ; java . util . List < java . lang . Integer > IDENT_17 = java . util . Arrays . asList ( 0 ) ; java . util . List < IDENT_6 . IDENT_7 . IDENT_8 < IDENT_0 . IDENT_2 . METHOD_2 , java . lang . Integer > > IDENT_18 = new java . util . ArrayList < IDENT_6 . IDENT_7 . IDENT_8 < IDENT_0 . IDENT_2 . METHOD_2 , java . lang . Integer > > ( ) ; IDENT_18 . add ( new IDENT_6 . IDENT_7 . IDENT_10 < IDENT_0 . IDENT_2 . METHOD_2 , java . lang . Integer > ( 0 , 0 , new IDENT_0 . IDENT_2 . METHOD_2 ( null , null ) ) ) ; IDENT_6 . IDENT_7 . IDENT_11 < IDENT_0 . IDENT_2 . METHOD_2 , java . lang . Integer > IDENT_19 = IDENT_6 . IDENT_7 . IDENT_11 . METHOD_3 ( IDENT_18 , IDENT_16 , IDENT_17 , IDENT_4 , false ) ; java . util . List < IDENT_0 . IDENT_2 . METHOD_2 > IDENT_20 = o . METHOD_4 ( IDENT_19 ) ; "<AssertPlaceHolder>" ; } equals ( java . lang . Object ) { if ( ! ( o instanceof IDENT_21 . IDENT_22 . IDENT_23 < ? , ? > ) ) return false ; return IDENT_24 . equals ( ( ( IDENT_21 . IDENT_22 . IDENT_23 < ? , ? > ) ( o ) ) . IDENT_24 ) ; }
org . junit . Assert . assertTrue ( IDENT_20 . equals ( new java . util . ArrayList < IDENT_0 . IDENT_2 . METHOD_2 > ( ) ) ) 