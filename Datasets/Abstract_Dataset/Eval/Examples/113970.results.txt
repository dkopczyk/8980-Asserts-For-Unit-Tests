METHOD_0 ( ) { test . IDENT_0 . IDENT_1 < java . lang . IDENT_2 > IDENT_3 = new test . IDENT_0 . IDENT_1 < java . lang . IDENT_2 > ( ) ; IDENT_3 . add ( null ) ; IDENT_3 . add ( null ) ; IDENT_4 . IDENT_5 . IDENT_6 IDENT_7 = IDENT_8 . METHOD_1 ( new IDENT_4 . IDENT_5 . METHOD_2 ( STRING_0 ) , new IDENT_4 . IDENT_5 . METHOD_2 ( STRING_1 ) ) ; test . IDENT_0 . Collection < test . IDENT_0 . IDENT_9 < IDENT_4 . IDENT_5 . METHOD_2 , java . lang . IDENT_2 > > IDENT_10 = new test . IDENT_0 . IDENT_1 < test . IDENT_0 . IDENT_9 < IDENT_4 . IDENT_5 . METHOD_2 , java . lang . IDENT_2 > > ( ) ; IDENT_10 . add ( new test . IDENT_0 . IDENT_11 < IDENT_4 . IDENT_5 . METHOD_2 , java . lang . IDENT_2 > ( 0 , 1 , IDENT_7 , 0 , IDENT_3 . size ( ) ) ) ; IDENT_10 . add ( new test . IDENT_0 . IDENT_11 < IDENT_4 . IDENT_5 . METHOD_2 , java . lang . IDENT_2 > ( 1 , 2 , IDENT_7 , 1 , IDENT_3 . size ( ) ) ) ; IDENT_10 . add ( new test . IDENT_0 . IDENT_11 < IDENT_4 . IDENT_5 . METHOD_2 , java . lang . IDENT_2 > ( 2 , 3 , IDENT_12 , 1 , IDENT_3 . size ( ) ) ) ; test . IDENT_0 . IDENT_0 < IDENT_4 . IDENT_5 . METHOD_2 , java . lang . IDENT_2 > IDENT_13 = test . IDENT_0 . IDENT_0 . METHOD_3 ( IDENT_10 , 0 , test . IDENT_0 . Collections . METHOD_4 ( 3 ) , IDENT_3 , IDENT_8 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( IDENT_14 . IDENT_15 . IDENT_0 , IDENT_4 . IDENT_16 , long ) { long IDENT_17 = java . lang . System . currentTimeMillis ( ) ; if ( IDENT_18 . isEmpty ) return true ; if ( ! ( IDENT_18 . IDENT_19 ) ) IDENT_18 = IDENT_18 . METHOD_6 ( IDENT_8 , IDENT_20 ) ; IDENT_14 . IDENT_15 . HashSet < IDENT_21 > IDENT_22 = IDENT_18 . METHOD_7 ( IDENT_20 ) ; for ( IDENT_23 IDENT_24 : IDENT_18 . IDENT_3 ) if ( IDENT_24 != null ) { IDENT_21 IDENT_25 = IDENT_8 . METHOD_8 ( IDENT_24 ) ; IDENT_22 . add ( IDENT_8 . METHOD_8 ( IDENT_24 ) ) ; } IDENT_14 . IDENT_15 . ArrayList < IDENT_21 > IDENT_26 = new IDENT_14 . IDENT_15 . ArrayList ( IDENT_22 ) ; IDENT_14 . IDENT_15 . IDENT_1 < IDENT_14 . IDENT_15 . IDENT_0 . IDENT_27 < IDENT_21 > > IDENT_28 = new IDENT_14 . IDENT_15 . METHOD_9 ( ) ; for ( IDENT_14 . IDENT_15 . IDENT_29 < IDENT_21 , IDENT_14 . IDENT_15 . ArrayList < java . lang . Integer > > IDENT_30 : IDENT_8 . METHOD_10 ( IDENT_26 ) ) IDENT_28 . add ( new IDENT_14 . IDENT_15 . IDENT_0 . METHOD_11 ( IDENT_30 . first , IDENT_30 . IDENT_31 ) ) ; IDENT_14 . IDENT_15 . HashMap < IDENT_21 , IDENT_14 . IDENT_15 . METHOD_9 < IDENT_14 . IDENT_15 . IDENT_0 . METHOD_11 < IDENT_21 > > > IDENT_32 = IDENT_14 . IDENT_15 . IDENT_0 . METHOD_12 ( IDENT_26 , IDENT_28 ) ; IDENT_14 . IDENT_15 . HashMap < java . lang . Integer , IDENT_14 . IDENT_15 . IDENT_0 . METHOD_11 < IDENT_21 > > IDENT_33 = IDENT_18 . METHOD_13 ( IDENT_26 , IDENT_8 , IDENT_32 ) ; IDENT_14 . IDENT_15 . IDENT_0 . IDENT_34 < IDENT_21 > IDENT_35 = new IDENT_14 . IDENT_15 . IDENT_0 . METHOD_14 ( IDENT_18 . IDENT_36 , IDENT_33 ) ; IDENT_14 . IDENT_15 . HashMap < IDENT_14 . IDENT_15 . IDENT_0 . METHOD_14 < IDENT_21 > , java . lang . Integer > IDENT_37 = new IDENT_14 . IDENT_15 . HashMap ( ) ; IDENT_14 . IDENT_15 . METHOD_9 < IDENT_14 . IDENT_15 . IDENT_0 . METHOD_14 < IDENT_21 > > IDENT_38 = new IDENT_14 . IDENT_15 . METHOD_9 ( ) ; IDENT_38 . add ( IDENT_35 ) ; IDENT_37 . put ( IDENT_35 , 0 ) ; while ( ! ( IDENT_38 . isEmpty ( ) ) ) { IDENT_14 . IDENT_15 . IDENT_0 . METHOD_14 < IDENT_21 > IDENT_39 = IDENT_38 . METHOD_15 ( ) ; if ( IDENT_18 . IDENT_40 . contains ( IDENT_39 . METHOD_16 ( ) ) ) return false ; for ( IDENT_14 . IDENT_15 . IDENT_9 < IDENT_21 , IDENT_23 > IDENT_41 : IDENT_18 . METHOD_17 ( IDENT_39 . METHOD_16 ( ) ) ) { IDENT_14 . IDENT_15 . METHOD_9 < IDENT_14 . IDENT_15 . IDENT_0 . IDENT_42 < IDENT_21 > > IDENT_43 = IDENT_14 . IDENT_15 . IDENT_0 . METHOD_18 ( IDENT_8 , IDENT_39 . METHOD_19 ( ) , IDENT_32 , IDENT_41 , null ) ; if ( ( ( java . lang . System . currentTimeMillis ( ) ) - IDENT_17 ) > IDENT_20 ) throw new org . IDENT_44 . IDENT_45 . METHOD_20 ( ) ; for ( IDENT_14 . IDENT_15 . IDENT_0 . IDENT_42 < IDENT_21 > IDENT_46 : IDENT_43 ) { IDENT_14 . IDENT_15 . IDENT_0 . METHOD_14 < IDENT_21 > IDENT_47 = IDENT_46 . to ; IDENT_14 . IDENT_15 . IDENT_0 . METHOD_16 ( IDENT_47 , IDENT_37 , IDENT_38 ) ; } } } return true ; }
org . junit . Assert . assertFalse ( test . IDENT_0 . IDENT_0 . METHOD_5 ( IDENT_13 , IDENT_8 , Long . MAX_VALUE ) ) 