METHOD_0 ( ) { test . IDENT_0 . IDENT_1 < java . lang . IDENT_2 > IDENT_3 = new test . IDENT_0 . IDENT_1 < java . lang . IDENT_2 > ( ) ; IDENT_3 . add ( STRING_0 ) ; IDENT_3 . add ( STRING_0 ) ; IDENT_3 . add ( STRING_1 ) ; IDENT_4 . IDENT_5 . IDENT_6 IDENT_7 = IDENT_8 . METHOD_1 ( new IDENT_4 . IDENT_5 . METHOD_2 ( STRING_0 ) , new IDENT_4 . IDENT_5 . METHOD_2 ( STRING_1 ) ) ; test . IDENT_0 . Collection < test . IDENT_0 . IDENT_9 < IDENT_4 . IDENT_5 . METHOD_2 , java . lang . IDENT_2 > > IDENT_10 = new test . IDENT_0 . IDENT_1 < test . IDENT_0 . IDENT_9 < IDENT_4 . IDENT_5 . METHOD_2 , java . lang . IDENT_2 > > ( ) ; IDENT_10 . add ( new test . IDENT_0 . IDENT_9 < IDENT_4 . IDENT_5 . METHOD_2 , java . lang . IDENT_2 > ( 0 , 1 , IDENT_7 , new test . IDENT_0 . HashSet ( test . IDENT_0 . Arrays . asList ( 0 ) ) , test . IDENT_0 . Collections . METHOD_3 ( ) , test . IDENT_0 . Collections . METHOD_4 ( 1 ) ) ) ; IDENT_10 . add ( new test . IDENT_0 . IDENT_9 < IDENT_4 . IDENT_5 . METHOD_2 , java . lang . IDENT_2 > ( 1 , 1 , IDENT_11 , test . IDENT_0 . Collections . METHOD_3 ( ) , new test . IDENT_0 . HashSet ( test . IDENT_0 . Arrays . asList ( 0 , 1 ) ) , test . IDENT_0 . Collections . METHOD_4 ( 1 ) ) ) ; IDENT_10 . add ( new test . IDENT_0 . IDENT_9 < IDENT_4 . IDENT_5 . METHOD_2 , java . lang . IDENT_2 > ( 1 , 2 , IDENT_12 , test . IDENT_0 . Collections . METHOD_3 ( ) , test . IDENT_0 . Collections . METHOD_3 ( ) , test . IDENT_0 . Collections . METHOD_4 ( 1 ) ) ) ; IDENT_10 . add ( new test . IDENT_0 . IDENT_9 < IDENT_4 . IDENT_5 . METHOD_2 , java . lang . IDENT_2 > ( 2 , 3 , IDENT_11 , test . IDENT_0 . Collections . METHOD_3 ( ) , test . IDENT_0 . Collections . METHOD_3 ( ) , test . IDENT_0 . Collections . METHOD_3 ( ) ) ) ; test . IDENT_0 . IDENT_0 < IDENT_4 . IDENT_5 . METHOD_2 , java . lang . IDENT_2 > IDENT_13 = test . IDENT_0 . IDENT_0 . METHOD_5 ( IDENT_10 , 0 , test . IDENT_0 . Collections . METHOD_4 ( 3 ) , IDENT_3 , IDENT_8 ) ; test . IDENT_0 . IDENT_0 < IDENT_4 . IDENT_5 . METHOD_2 , java . lang . IDENT_2 > IDENT_14 = IDENT_13 . METHOD_6 ( IDENT_8 , Long . MAX_VALUE ) ; IDENT_14 . METHOD_7 ( IDENT_8 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( IDENT_15 . IDENT_13 . IDENT_0 , IDENT_4 . IDENT_16 , long ) { IDENT_15 . IDENT_13 . IDENT_0 < IDENT_17 , IDENT_18 > IDENT_19 = ( ( IDENT_15 . IDENT_13 . IDENT_0 < IDENT_17 , IDENT_18 > ) ( this . METHOD_9 ( ) ) ) ; IDENT_15 . IDENT_13 . IDENT_0 < IDENT_17 , IDENT_18 > IDENT_20 = ( ( IDENT_15 . IDENT_13 . IDENT_0 < IDENT_17 , IDENT_18 > ) ( IDENT_21 . METHOD_9 ( ) ) ) ; if ( ! ( IDENT_19 . IDENT_22 ) ) IDENT_19 = IDENT_19 . METHOD_6 ( IDENT_8 , IDENT_23 ) ; if ( ! ( IDENT_20 . IDENT_22 ) ) IDENT_20 = IDENT_20 . METHOD_6 ( IDENT_8 , IDENT_23 ) ; if ( ! ( IDENT_19 . IDENT_24 ) ) IDENT_19 . METHOD_7 ( IDENT_8 ) ; if ( ! ( IDENT_20 . IDENT_24 ) ) IDENT_20 . METHOD_7 ( IDENT_8 ) ; return IDENT_15 . IDENT_13 . IDENT_0 . METHOD_10 ( IDENT_19 , IDENT_20 , IDENT_8 , true , IDENT_23 ) ; }
org . junit . Assert . assertTrue ( IDENT_14 . METHOD_8 ( IDENT_14 , IDENT_8 , Long . MAX_VALUE ) ) 