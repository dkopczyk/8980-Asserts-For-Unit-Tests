METHOD_0 ( ) { java . io . File IDENT_0 = new java . io . File ( ( ( output . METHOD_1 ( ) ) + STRING_0 ) ) ; IDENT_0 . METHOD_2 ( ) ; if ( org . apache . cxf . helpers . IDENT_1 . METHOD_3 ( ) ) { java . lang . System . setProperty ( STRING_1 6 , STRING_2 ) ; java . lang . String IDENT_2 = ( ( output . METHOD_4 ( ) ) + java . io . java . io . File ) + STRING_3 ; java . lang . System . setProperty ( STRING_4 , ( ( ( ( ( java . lang . System . getProperty ( STRING_4 ) ) + java . io . java . io . File ) + IDENT_2 ) + java . io . java . io . File ) + STRING_1 5 ) ) ; } IDENT_3 . put ( IDENT_4 . IDENT_5 , IDENT_4 . IDENT_5 ) ; IDENT_3 . put ( IDENT_4 . IDENT_6 , ( ( output . METHOD_1 ( ) ) + STRING_0 ) ) ; IDENT_3 . put ( org . apache . cxf . tools . IDENT_7 . core . IDENT_8 . class , org . apache . cxf . tools . IDENT_7 . core . IDENT_9 . getInstance ( ) . METHOD_5 ( STRING_1 7 ) ) ; IDENT_3 . put ( org . apache . cxf . tools . IDENT_7 . core . IDENT_10 . class , org . apache . cxf . tools . IDENT_7 . core . IDENT_9 . getInstance ( ) . METHOD_6 ( STRING_1 ) ) ; IDENT_3 . put ( IDENT_4 . IDENT_11 , output . METHOD_1 ( ) ) ; IDENT_3 . put ( IDENT_4 . IDENT_12 , STRING_5 ) ; IDENT_3 . put ( IDENT_4 . IDENT_6 , ( ( output . METHOD_1 ( ) ) + STRING_0 ) ) ; IDENT_3 . put ( IDENT_4 . IDENT_13 , METHOD_7 ( STRING_6 ) ) ; org . apache . cxf . tools . IDENT_7 . IDENT_14 . IDENT_15 . IDENT_16 IDENT_17 = new org . apache . cxf . tools . IDENT_7 . IDENT_14 . IDENT_15 . METHOD_8 ( null ) ; IDENT_17 . METHOD_9 ( IDENT_3 ) ; IDENT_17 . execute ( ) ; java . lang . System . setProperty ( STRING_4 , STRING_1 4 ) ; java . lang . String [ ] args = new java . lang . String [ ] { STRING_1 0 , STRING_7 , STRING_1 3 , STRING_8 , IDENT_0 . METHOD_1 ( ) , STRING_1 2 , output . getPath ( ) , STRING_9 } ; org . apache . cxf . tools . IDENT_18 . IDENT_19 . METHOD_10 ( args ) ; java . io . File IDENT_20 = new java . io . File ( output , STRING_7 ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( java . lang . String [ ] ) { java . lang . System . setProperty ( STRING_10 , STRING_2 ) ; try { org . apache . cxf . tools . common . IDENT_21 . IDENT_22 . METHOD_11 ( org . apache . cxf . tools . IDENT_18 . IDENT_19 . class , org . apache . cxf . tools . IDENT_18 . IDENT_19 . class . getResourceAsStream ( STRING_11 ) , false , IDENT_23 ) ; } catch ( java . lang . Exception ex ) { System . err . println ( ( STRING_12 + ( ex . getMessage ( ) ) ) ) ; System . err . println ( ) ; ex . printStackTrace ( ) ; } }
org . junit . Assert . assertTrue ( STRING_1 1 , IDENT_20 . exists ( ) ) 