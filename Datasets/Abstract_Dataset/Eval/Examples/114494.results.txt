METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 < java . lang . String > target = com . IDENT_0 . IDENT_1 . IDENT_2 . < java . lang . String > apply ( com . IDENT_0 . IDENT_1 . IDENT_3 . < com . IDENT_0 . IDENT_1 . IDENT_4 < ? , java . lang . String > > apply ( com . IDENT_0 . IDENT_1 . IDENT_4 . METHOD_1 ( java . lang . String . class ) . METHOD_2 ( new com . IDENT_0 . IDENT_1 . IDENT_5 < java . lang . String , java . lang . String > ( ) { public java . lang . String apply ( java . lang . String v1 ) throws com . IDENT_0 . IDENT_1 . Exception { return v1 ; } } ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . Object ) { return METHOD_4 ( ) . METHOD_5 ( false , new com . IDENT_0 . IDENT_1 . IDENT_6 < java . lang . Boolean , com . IDENT_0 . IDENT_1 . IDENT_4 < ? , IDENT_7 > , java . lang . Boolean > ( ) { public com . IDENT_0 . IDENT_1 . Boolean apply ( java . lang . Boolean METHOD_3 , com . IDENT_0 . IDENT_1 . IDENT_4 < ? , IDENT_7 > IDENT_8 ) throws com . IDENT_0 . IDENT_1 . Exception { if ( METHOD_3 ) { return true ; } return IDENT_8 . METHOD_3 ( v ) ; } } ) ; }
org . junit . Assert . assertThat ( target . METHOD_3 ( "foo" ) , org . hamcrest . CoreMatchers . is ( true ) ) 