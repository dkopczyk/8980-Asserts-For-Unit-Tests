METHOD_0 ( ) { java . lang . Integer value = INT_0 ; com . IDENT_0 . IDENT_1 . IDENT_2 < java . lang . String , java . lang . Integer > target = com . IDENT_0 . IDENT_1 . IDENT_3 . apply ( value ) ; com . IDENT_0 . IDENT_1 . IDENT_4 < java . lang . String , java . lang . Integer > IDENT_5 = new com . IDENT_0 . IDENT_1 . IDENT_6 < java . lang . String , java . lang . Integer > ( ) { public com . IDENT_0 . IDENT_1 . Integer apply ( java . lang . String v ) throws com . IDENT_0 . IDENT_1 . Exception { return v . length ( ) ; } } ; java . lang . Integer actual = target . METHOD_1 ( IDENT_5 ) ; java . lang . Integer expected = INT_0 ; "<AssertPlaceHolder>" ; } METHOD_1 ( com . IDENT_0 . IDENT_1 . IDENT_4 ) { try { return IDENT_5 . apply ( value . METHOD_2 ( ) ) ; } catch ( java . lang . Throwable t ) { throw new com . IDENT_0 . IDENT_1 . METHOD_3 ( t ) ; } }
org . junit . Assert . assertThat ( actual , org . hamcrest . CoreMatchers . is ( org . hamcrest . CoreMatchers . equalTo ( expected ) ) ) 