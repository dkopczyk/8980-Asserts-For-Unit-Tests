METHOD_0 ( ) { java . time . IDENT_0 IDENT_1 = java . time . IDENT_0 . of ( INT_0 , 1 , 1 , 0 , 0 , 0 ) ; java . time . IDENT_0 IDENT_2 = java . time . IDENT_0 . of ( INT_0 , 1 , 2 , 0 , 0 , 0 ) ; com . IDENT_3 . common . IDENT_4 . IDENT_5 < com . IDENT_3 . order . IDENT_6 . repository . IDENT_7 > IDENT_8 = com . IDENT_3 . common . IDENT_4 . IDENT_9 . and ( com . IDENT_3 . order . IDENT_6 . repository . IDENT_10 . METHOD_1 ( STRING_0 ) , com . IDENT_3 . order . IDENT_6 . repository . IDENT_10 . METHOD_2 ( java . sql . Date . from ( IDENT_1 . METHOD_3 ( java . time . IDENT_11 . METHOD_4 ( ) ) . METHOD_5 ( ) ) , java . sql . Date . from ( IDENT_2 . METHOD_3 ( java . time . IDENT_11 . METHOD_4 ( ) ) . METHOD_5 ( ) ) ) ) ; java . lang . Long METHOD_0 = IDENT_12 . METHOD_0 ( IDENT_8 ) ; "<AssertPlaceHolder>" ; } METHOD_0 ( com . IDENT_3 . common . IDENT_4 . IDENT_5 ) { javax . persistence . criteria . IDENT_13 cb = em . METHOD_6 ( ) ; javax . persistence . criteria . IDENT_14 < java . lang . Long > IDENT_15 = cb . METHOD_7 ( com . IDENT_3 . order . IDENT_6 . dao . Long . class ) ; javax . persistence . criteria . IDENT_16 < com . IDENT_3 . order . query . dto . IDENT_17 > root = IDENT_15 . from ( com . IDENT_3 . order . query . dto . IDENT_17 . class ) ; if ( spec != null ) { javax . persistence . criteria . IDENT_18 IDENT_19 = spec . METHOD_8 ( root , cb ) ; IDENT_15 . METHOD_9 ( IDENT_19 ) ; } IDENT_15 . select ( cb . count ( root ) ) ; javax . persistence . IDENT_20 < java . lang . Long > query = em . METHOD_7 ( IDENT_15 ) ; return query . METHOD_10 ( ) . METHOD_11 ( ) ; }
org . junit . Assert . assertThat ( METHOD_0 . METHOD_11 ( ) , org . hamcrest . Matchers . equalTo ( 1L ) ) 