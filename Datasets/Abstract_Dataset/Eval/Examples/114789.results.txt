METHOD_0 ( ) { try { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . select ( java . util . Collections . emptyList ( ) ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . lang . IllegalArgumentException expected ) { } java . util . List < java . lang . Integer > IDENT_4 = new java . util . ArrayList ( ) ; IDENT_4 . add ( 0 ) ; "<AssertPlaceHolder>" ; } select ( java . util . List ) { if ( list . isEmpty ( ) ) { throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } return list . get ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( list . size ( ) ) ) ; }
org . junit . Assert . assertTrue ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . select ( IDENT_4 ) . equals ( 0 ) ) 