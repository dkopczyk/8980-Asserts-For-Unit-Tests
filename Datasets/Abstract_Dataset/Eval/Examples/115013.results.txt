METHOD_0 ( ) { java . lang . Thread t = new java . lang . Thread ( new java . lang . METHOD_1 ( ) { @ uk . org . IDENT_0 . IDENT_1 . Override public void run ( ) { uk . org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 ( STRING_0 ) . info ( STRING_1 ) ; } } ) ; t . start ( ) ; t . join ( ) ; uk . org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 ( STRING_0 ) . info ( STRING_2 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { uk . org . IDENT_0 . IDENT_1 . IDENT_3 IDENT_4 = uk . org . IDENT_0 . IDENT_1 . IDENT_2 . getInstance ( ) . METHOD_4 ( STRING_0 ) ; uk . org . IDENT_0 . IDENT_1 . IDENT_3 IDENT_5 = uk . org . IDENT_0 . IDENT_1 . IDENT_2 . getInstance ( ) . METHOD_4 ( STRING_3 ) ; IDENT_4 . trace ( STRING_4 ) ; IDENT_5 . trace ( STRING_5 ) ; IDENT_4 . trace ( STRING_6 ) ; IDENT_5 . trace ( STRING_7 ) ; org . junit . Assert . assertThat ( uk . org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_5 ( ) , org . hamcrest . CoreMatchers . is ( asList ( uk . org . IDENT_0 . IDENT_1 . IDENT_6 . trace ( STRING_4 ) , uk . org . IDENT_0 . IDENT_1 . IDENT_6 . trace ( STRING_5 ) , uk . org . IDENT_0 . IDENT_1 . IDENT_6 . trace ( STRING_6 ) , uk . org . IDENT_0 . IDENT_1 . IDENT_6 . trace ( STRING_7 ) ) ) ) ; }
org . junit . Assert . assertThat ( uk . org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_3 ( ) , org . hamcrest . CoreMatchers . is ( asList ( uk . org . IDENT_0 . IDENT_1 . IDENT_6 . info ( STRING_1 ) , uk . org . IDENT_0 . IDENT_1 . IDENT_6 . info ( STRING_2 ) ) ) ) 