METHOD_0 ( ) { final java . lang . reflect . Type [ ] IDENT_0 = new java . lang . reflect . Type [ ] { java . lang . String . class , java . lang . String . class } ; final java . lang . reflect . Type [ ] IDENT_1 = new java . lang . reflect . Type [ ] { java . lang . String . class } ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . reflect . Type [ ] ) { org . apache . commons . lang3 . IDENT_2 . METHOD_2 ( IDENT_3 , STRING_0 ) ; if ( ( IDENT_3 . length ) < 2 ) { return IDENT_3 ; } final java . util . Set < java . lang . reflect . Type > types = new java . util . HashSet ( IDENT_3 . length ) ; for ( final java . lang . reflect . Type IDENT_4 : IDENT_3 ) { boolean IDENT_5 = false ; for ( final java . lang . reflect . Type IDENT_6 : IDENT_3 ) { if ( ( IDENT_4 != IDENT_6 ) && ( org . apache . commons . lang3 . reflect . IDENT_7 . METHOD_3 ( IDENT_6 , IDENT_4 , null ) ) ) { IDENT_5 = true ; break ; } } if ( ! IDENT_5 ) { types . add ( IDENT_4 ) ; } } return types . toArray ( new java . lang . reflect . Type [ types . size ( ) ] ) ; }
org . junit . Assert . assertArrayEquals ( IDENT_1 , org . apache . commons . lang3 . reflect . IDENT_7 . METHOD_1 ( IDENT_0 ) ) 