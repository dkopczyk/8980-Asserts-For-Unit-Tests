object ( ) { IDENT_0 . util . IDENT_1 < java . lang . String , java . lang . Object > object = new IDENT_0 . util . IDENT_1 < java . lang . String , java . lang . Object > ( ) ; object . put ( "a" , STRING_0 ) ; object . put ( "b" , 2 ) ; object . put ( "b" , FLOAT_0 ) ; object . put ( "b" , null ) ; IDENT_0 . io . json . IDENT_2 value = IDENT_0 . io . json . IDENT_2 . object ( object ) ; java . util . Map < java . lang . String , IDENT_0 . io . json . IDENT_3 > IDENT_4 = new java . util . HashMap < java . lang . String , IDENT_0 . io . json . IDENT_3 > ( ) ; IDENT_4 . put ( "a" , new IDENT_0 . io . json . METHOD_0 ( STRING_0 ) ) ; IDENT_4 . put ( "b" , new IDENT_0 . io . json . METHOD_0 ( java . util . Arrays . asList ( new IDENT_0 . io . json . METHOD_0 ( 2 ) , new IDENT_0 . io . json . METHOD_0 ( FLOAT_0 ) , new IDENT_0 . io . json . METHOD_0 ( ( ( java . lang . Object ) ( null ) ) ) ) ) ) ; java . util . List < IDENT_0 . io . json . METHOD_0 > expected = java . util . Arrays . asList ( new IDENT_0 . io . json . METHOD_0 ( IDENT_4 ) ) ; java . util . List < IDENT_0 . io . json . METHOD_0 > actual = value . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( ) { return values ; }
org . junit . Assert . assertEquals ( expected , actual ) 