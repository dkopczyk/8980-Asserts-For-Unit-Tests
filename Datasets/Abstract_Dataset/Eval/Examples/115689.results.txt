METHOD_0 ( ) { org . junit . IDENT_0 . METHOD_1 ( ( ( ! ( METHOD_2 ( ) ) ) && ( METHOD_3 ( 8 , 0 , 3 ) ) ) ) ; org . junit . IDENT_0 . METHOD_4 ( ( ( java . lang . System . METHOD_5 ( STRING_0 ) ) == null ) ) ; org . junit . IDENT_0 . METHOD_1 ( METHOD_6 ( ) ) ; java . sql . IDENT_1 stmt = IDENT_2 . METHOD_7 ( ) ; java . sql . ResultSet rs = stmt . METHOD_8 ( STRING_1 ) ; "<AssertPlaceHolder>" ; long IDENT_3 = rs . METHOD_9 ( 1 ) ; org . junit . IDENT_0 . METHOD_4 ( ( IDENT_3 < INT_0 ) ) ; METHOD_10 ( ( IDENT_3 + INT_1 ) ) ; } next ( ) { if ( IDENT_4 ) { throw new java . sql . METHOD_11 ( STRING_2 , STRING_3 ) ; } if ( ( IDENT_5 ) < ( ( IDENT_6 ) - 1 ) ) { ( IDENT_5 ) ++ ; return true ; } else { if ( ( streaming ) && ( ! ( IDENT_7 ) ) ) { IDENT_8 . METHOD_12 ( ) ; try { if ( ! ( IDENT_7 ) ) { METHOD_13 ( ) ; } } catch ( java . io . IOException IDENT_9 ) { throw METHOD_14 ( IDENT_9 ) ; } finally { METHOD_12 . METHOD_15 ( ) ; } if ( ( IDENT_10 ) == ( IDENT_11 ) ) { IDENT_5 = 0 ; return ( IDENT_6 ) > 0 ; } else { ( IDENT_5 ) ++ ; return ( IDENT_6 ) > ( IDENT_5 ) ; } } IDENT_5 = IDENT_6 ; return false ; } }
org . junit . Assert . assertTrue ( rs . next ( ) ) 