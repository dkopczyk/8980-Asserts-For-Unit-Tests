METHOD_0 ( ) { org . junit . IDENT_0 . METHOD_1 ( ( ( METHOD_2 ( IDENT_1 ) ) && ( METHOD_3 ( ) ) ) ) ; java . lang . String IDENT_2 = java . lang . System . getProperty ( STRING_0 0 ) ; java . lang . String IDENT_3 = java . lang . System . getProperty ( STRING_1 ) ; java . lang . String IDENT_4 = java . lang . System . getProperty ( STRING_2 ) ; org . junit . IDENT_0 . METHOD_1 ( ( ( ( IDENT_4 != null ) && ( IDENT_3 != null ) ) && ( IDENT_2 != null ) ) ) ; java . lang . String IDENT_5 = STRING_3 ; METHOD_4 ( IDENT_5 ) ; try { java . util . Properties info = new java . util . Properties ( ) ; info . setProperty ( STRING_4 , STRING_5 ) ; info . setProperty ( STRING_6 , IDENT_6 ) ; info . setProperty ( STRING_0 2 , ( STRING_7 + IDENT_2 ) ) ; info . setProperty ( STRING_0 , IDENT_3 ) ; METHOD_5 ( info , true , IDENT_5 , STRING_8 ) ; org . junit . Assert . fail ( STRING_9 ) ; } catch ( java . sql . IDENT_7 IDENT_8 ) { IDENT_8 . printStackTrace ( ) ; "<AssertPlaceHolder>" ; } try { java . util . Properties info = new java . util . Properties ( ) ; info . setProperty ( STRING_4 , STRING_5 ) ; info . setProperty ( STRING_6 , IDENT_6 ) ; info . setProperty ( STRING_0 2 , ( STRING_7 + IDENT_2 ) ) ; info . setProperty ( STRING_0 , IDENT_3 ) ; info . setProperty ( STRING_2 , IDENT_4 ) ; METHOD_5 ( info , true , IDENT_5 , STRING_8 ) ; } finally { METHOD_6 ( IDENT_5 ) ; } } getMessage ( ) { return message ; }
org . junit . Assert . assertTrue ( IDENT_8 . getMessage ( ) . contains ( STRING_0 1 ) ) 