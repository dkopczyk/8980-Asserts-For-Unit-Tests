METHOD_0 ( ) { ch . IDENT_0 . IDENT_1 < java . lang . Integer , java . lang . Integer , java . lang . Integer , java . lang . Integer > IDENT_2 = METHOD_1 ( ch . IDENT_0 . Integer . class , ch . IDENT_0 . Integer . class , ch . IDENT_0 . Integer . class , ch . IDENT_0 . Integer . class ) ; { of ( this ) . METHOD_2 ( METHOD_3 ( ch . IDENT_0 . Integer . class ) , METHOD_3 ( ch . IDENT_0 . Integer . class ) , METHOD_3 ( ch . IDENT_0 . Integer . class ) , METHOD_3 ( ch . IDENT_0 . Integer . class ) ) ; } ch . IDENT_0 . IDENT_3 . IDENT_4 IDENT_5 = IDENT_2 . METHOD_4 ( ch . IDENT_0 . IDENT_3 . IDENT_4 . class ) ; int result = IDENT_5 . METHOD_5 ( 5 , 2 , 4 , 3 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . Class ) { if ( ! ( IDENT_6 . METHOD_6 ( ) ) ) throw new java . lang . IllegalArgumentException ( ( STRING_0 + ( IDENT_6 . getName ( ) ) ) ) ; ch . IDENT_0 . function . METHOD_1 . Method [ ] methods = IDENT_6 . METHOD_7 ( ) ; if ( ( methods . length ) != 1 ) throw new java . lang . IllegalArgumentException ( STRING_1 ) ; return ( ( T ) ( ch . IDENT_0 . function . METHOD_1 . IDENT_7 . METHOD_8 ( IDENT_6 . METHOD_9 ( ) , new java . lang . Class < ? > [ ] { IDENT_6 } , new ch . IDENT_0 . function . METHOD_1 . METHOD_10 ( ) { public java . lang . Object invoke ( java . lang . Object proxy , ch . IDENT_0 . function . METHOD_1 . Method method , java . lang . Object [ ] args ) throws ch . IDENT_0 . function . METHOD_1 . IDENT_8 { return METHOD_11 ( args ) ; } } ) ) ) ; }
org . junit . Assert . assertEquals ( ( ( 5 - 2 ) * ( 4 - 3 ) ) , result ) 