METHOD_0 ( ) { System . out . println ( STRING_0 ) ; java . lang . String IDENT_0 = STRING_1 2 ; java . util . IDENT_1 < java . lang . String , java . lang . String > IDENT_2 = new java . util . IDENT_1 < java . lang . String , java . lang . String > ( ) ; com . IDENT_3 . client . IDENT_4 . IDENT_5 < com . IDENT_3 . client . IDENT_6 . IDENT_7 , java . lang . Long > IDENT_8 = com . IDENT_3 . client . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 . METHOD_1 ( com . IDENT_3 . client . IDENT_6 . IDENT_7 . class , com . IDENT_3 . client . IDENT_9 . IDENT_10 . Long . class ) ; java . io . IDENT_13 IDENT_14 = null ; java . io . IDENT_15 IDENT_16 = null ; java . io . IDENT_17 IDENT_18 = null ; try { java . lang . String IDENT_19 = null ; for ( int i = 1 ; i < INT_0 ; i ++ ) { if ( ( i OP_0 2 ) == 0 ) { IDENT_8 . write ( this . METHOD_2 ( i ) , STRING_1 0 , STRING_1 ) ; } else { IDENT_8 . write ( this . METHOD_2 ( i ) , STRING_2 , STRING_1 ) ; } IDENT_19 = ( STRING_3 + i ) + STRING_4 ; IDENT_2 . put ( IDENT_19 , STRING_5 ) ; } com . IDENT_3 . client . query . IDENT_20 IDENT_21 = com . IDENT_3 . client . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 . METHOD_3 ( ) ; com . IDENT_3 . client . query . IDENT_22 IDENT_23 = IDENT_21 . METHOD_4 ( ) ; IDENT_23 . METHOD_5 ( STRING_6 ) ; IDENT_14 = new java . io . METHOD_6 ( IDENT_0 , true ) ; java . lang . StringBuilder IDENT_24 = new java . lang . StringBuilder ( ) ; java . lang . StringBuilder IDENT_25 = new java . lang . StringBuilder ( ) ; com . IDENT_3 . client . IDENT_9 . IDENT_26 IDENT_27 = com . IDENT_3 . client . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_28 . METHOD_7 ( IDENT_23 ) ; IDENT_27 . METHOD_8 ( ( batch ) -> { for ( java . lang . String str : batch . METHOD_9 ( ) ) { IDENT_24 . append ( str ) . append ( STRING_7 ) ; } } ) . METHOD_8 ( new com . IDENT_3 . client . IDENT_9 . METHOD_10 ( IDENT_14 ) ) . METHOD_11 ( ( IDENT_29 ) -> { System . out . println ( STRING_8 ) ; IDENT_29 . printStackTrace ( ) ; IDENT_25 . append ( STRING_1 1 ) ; } ) ; com . IDENT_3 . client . IDENT_9 . IDENT_30 IDENT_31 = com . IDENT_3 . client . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_28 . METHOD_12 ( IDENT_27 ) ; IDENT_27 . METHOD_13 ( ) ; com . IDENT_3 . client . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_28 . METHOD_14 ( IDENT_31 ) ; IDENT_14 . METHOD_15 ( ) ; java . util . IDENT_1 < java . lang . String , java . lang . String > IDENT_32 = new java . util . IDENT_1 < java . lang . String , java . lang . String > ( ) ; java . lang . String line = null ; IDENT_16 = new java . io . METHOD_16 ( IDENT_0 ) ; IDENT_18 = new java . io . METHOD_17 ( IDENT_16 ) ; while ( ( line = IDENT_18 . METHOD_18 ( ) ) != null ) { System . out . println ( ( STRING_9 + line ) ) ; IDENT_32 . put ( line , STRING_5 ) ; } "<AssertPlaceHolder>" ; } catch ( java . lang . Exception ex ) { System . out . println ( ( STRING_10 + ( ex . getMessage ( ) ) ) ) ; } finally { try { if ( IDENT_14 != null ) IDENT_14 . close ( ) ; if ( IDENT_18 != null ) IDENT_18 . close ( ) ; if ( IDENT_16 != null ) IDENT_16 . close ( ) ; java . io . File file = new java . io . File ( IDENT_0 ) ; file . METHOD_19 ( ) ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; } } } equals ( com . IDENT_3 . client . example . IDENT_33 . IDENT_9 . IDENT_34 ) { if ( e == null ) return false ; if ( e == ( this ) ) return true ; return new org . apache . commons . lang3 . builder . METHOD_20 ( ) . append ( METHOD_21 ( ) , e . METHOD_21 ( ) ) . append ( METHOD_22 ( ) , e . METHOD_22 ( ) ) . append ( METHOD_23 ( ) , e . METHOD_23 ( ) ) . append ( METHOD_24 ( ) , e . METHOD_24 ( ) ) . append ( METHOD_25 ( ) , e . METHOD_25 ( ) ) . append ( METHOD_26 ( ) , e . METHOD_26 ( ) ) . append ( METHOD_27 ( ) , e . METHOD_27 ( ) ) . append ( METHOD_28 ( ) , e . METHOD_28 ( ) ) . METHOD_29 ( ) ; }
org . junit . Assert . assertTrue ( STRING_1 3 , IDENT_2 . equals ( IDENT_32 ) ) 