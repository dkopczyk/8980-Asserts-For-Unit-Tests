METHOD_0 ( ) { System . out . println ( STRING_0 ) ; java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { STRING_1 1 , STRING_2 , STRING_1 3 , STRING_3 2 , STRING_3 } ; com . IDENT_1 . client . IDENT_2 client = METHOD_1 ( STRING_1 9 , STRING_1 5 , METHOD_2 ( ) ) ; for ( java . lang . String IDENT_3 : IDENT_0 ) { METHOD_3 ( client , IDENT_3 , STRING_4 , STRING_1 0 ) ; } com . IDENT_1 . client . IDENT_4 . IDENT_5 IDENT_6 = client . METHOD_4 ( ) ; com . IDENT_1 . client . io . IDENT_7 IDENT_8 = new com . IDENT_1 . client . io . METHOD_5 ( ) ; com . IDENT_1 . client . io . METHOD_5 IDENT_9 = new com . IDENT_1 . client . io . METHOD_5 ( ) ; com . IDENT_1 . client . io . METHOD_5 IDENT_10 = new com . IDENT_1 . client . io . METHOD_5 ( ) ; java . io . InputStream IDENT_11 = new java . io . METHOD_6 ( STRING_5 ) ; java . io . InputStream IDENT_12 = new java . io . METHOD_6 ( STRING_1 6 ) ; java . io . InputStream IDENT_13 = new java . io . METHOD_6 ( STRING_1 2 ) ; IDENT_8 . set ( IDENT_11 ) ; IDENT_9 . set ( IDENT_12 ) ; IDENT_10 . set ( IDENT_13 ) ; IDENT_6 . METHOD_7 ( STRING_3 1 , IDENT_8 ) ; IDENT_6 . METHOD_7 ( STRING_6 , IDENT_9 ) ; IDENT_6 . METHOD_7 ( STRING_7 , IDENT_10 ) ; java . io . File file = new java . io . File ( STRING_3 0 ) ; java . lang . String IDENT_14 = METHOD_8 ( file ) ; com . IDENT_1 . client . io . IDENT_15 IDENT_16 = new com . IDENT_1 . client . io . METHOD_9 ( IDENT_14 ) ; IDENT_16 . METHOD_10 ( IDENT_17 . IDENT_18 ) ; IDENT_6 . METHOD_7 ( STRING_1 8 , IDENT_16 ) ; com . IDENT_1 . client . query . IDENT_19 IDENT_20 = client . METHOD_11 ( ) ; java . lang . String criteria = STRING_1 ; com . IDENT_1 . client . query . IDENT_21 IDENT_22 = IDENT_20 . METHOD_12 ( ) ; IDENT_22 . METHOD_13 ( criteria ) ; com . IDENT_1 . client . IDENT_4 . IDENT_5 IDENT_23 = client . METHOD_4 ( ) ; java . lang . String [ ] IDENT_24 = new java . lang . String [ ] { STRING_1 7 , "bar" , "foo" } ; com . IDENT_1 . client . IDENT_4 . IDENT_25 IDENT_26 = IDENT_23 . match ( IDENT_22 , 1 , 2 , IDENT_24 , new com . IDENT_1 . client . IDENT_4 . METHOD_14 ( ) ) ; System . out . println ( IDENT_26 . size ( ) ) ; "<AssertPlaceHolder>" ; client . METHOD_15 ( ) ; } size ( ) { if ( ( IDENT_27 ) == null ) return 0 ; return IDENT_27 . size ( ) ; }
org . junit . Assert . assertEquals ( STRING_1 4 , 0 , IDENT_26 . size ( ) ) 