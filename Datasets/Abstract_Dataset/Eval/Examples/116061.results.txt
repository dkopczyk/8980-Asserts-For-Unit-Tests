METHOD_0 ( ) { METHOD_1 ( ) ; org . IDENT_0 . api . core . IDENT_1 . IDENT_2 < org . IDENT_0 . IDENT_3 . IDENT_4 > IDENT_5 = org . IDENT_0 . api . core . IDENT_1 . IDENT_2 . create ( STRING_0 , org . IDENT_0 . IDENT_3 . IDENT_4 . class ) ; org . IDENT_0 . api . core . IDENT_1 . IDENT_2 < org . IDENT_0 . IDENT_3 . IDENT_6 > IDENT_7 = org . IDENT_0 . api . core . IDENT_1 . IDENT_2 . create ( "" , org . IDENT_0 . IDENT_3 . IDENT_6 . class ) ; org . IDENT_0 . IDENT_3 . IDENT_8 IDENT_9 = org . IDENT_0 . IDENT_3 . IDENT_10 . METHOD_2 ( ) ; double IDENT_11 = FLOAT_0 ; org . IDENT_0 . api . core . IDENT_1 . network . IDENT_12 IDENT_13 = METHOD_3 ( STRING_1 , IDENT_11 , IDENT_14 ) ; org . IDENT_0 . IDENT_3 . IDENT_4 IDENT_15 = IDENT_9 . METHOD_4 ( IDENT_5 , IDENT_9 . METHOD_5 ( IDENT_7 ) ) ; IDENT_16 = false ; try { org . IDENT_0 . IDENT_17 . IDENT_18 . Map < java . lang . String , java . lang . Double > IDENT_19 = IDENT_20 . METHOD_6 ( IDENT_15 , IDENT_13 , ( ( FLOAT_1 * IDENT_11 ) / ( IDENT_14 ) ) ) ; IDENT_20 . METHOD_7 ( FLOAT_2 , IDENT_13 . getId ( ) , IDENT_5 , IDENT_19 ) ; } catch ( java . lang . Exception e ) { IDENT_16 = true ; } "<AssertPlaceHolder>" ; IDENT_16 = false ; } getId ( ) { throw new java . lang . RuntimeException ( STRING_2 ) ; }
org . junit . Assert . assertTrue ( IDENT_16 ) 