METHOD_0 ( ) { final java . io . IDENT_0 IDENT_1 = System . out ; com . IDENT_2 . IDENT_3 . data . generator . IDENT_4 . IDENT_5 . METHOD_1 ( true ) ; final java . io . ByteArrayOutputStream IDENT_6 = new java . io . ByteArrayOutputStream ( ) ; final java . io . IDENT_0 IDENT_7 = new java . io . METHOD_2 ( IDENT_6 ) ; java . lang . System . METHOD_3 ( IDENT_7 ) ; com . IDENT_2 . IDENT_3 . data . generator . IDENT_4 . IDENT_5 . METHOD_4 ( com . IDENT_2 . IDENT_3 . data . generator . IDENT_4 . IDENT_8 ) ; IDENT_7 . METHOD_5 ( ) ; IDENT_7 . close ( ) ; "<AssertPlaceHolder>" ; java . lang . System . METHOD_3 ( IDENT_1 ) ; com . IDENT_2 . IDENT_3 . data . generator . IDENT_4 . IDENT_5 . METHOD_1 ( false ) ; } METHOD_4 ( java . util . List ) { org . apache . log4j . IDENT_9 IDENT_10 = org . apache . log4j . IDENT_9 . METHOD_6 ( ) ; if ( ! ( IDENT_10 . METHOD_7 ( ) . METHOD_8 ( ) ) ) IDENT_10 . METHOD_9 ( org . apache . log4j . IDENT_11 . IDENT_12 ) ; com . IDENT_2 . IDENT_3 . data . generator . IDENT_13 registry = new com . IDENT_2 . IDENT_3 . data . generator . METHOD_10 ( ) ; com . IDENT_2 . IDENT_3 . data . generator . parser . IDENT_14 parser = new com . IDENT_2 . IDENT_3 . data . generator . parser . METHOD_11 ( registry , IDENT_15 , IDENT_16 ) ; com . IDENT_2 . IDENT_3 . data . generator . IDENT_17 generator = new com . IDENT_2 . IDENT_3 . data . generator . METHOD_12 ( registry ) ; for ( java . lang . String IDENT_18 : IDENT_19 ) { METHOD_13 ( new java . io . File ( IDENT_18 ) , parser ) ; } java . io . File IDENT_20 = new java . io . File ( IDENT_21 , IDENT_22 . replace ( STRING_0 , STRING_1 ) ) ; IDENT_20 . METHOD_14 ( ) ; de . IDENT_23 . IDENT_24 . IDENT_25 IDENT_24 = new de . IDENT_23 . IDENT_24 . METHOD_15 ( ) ; for ( com . IDENT_2 . IDENT_3 . data . generator . type . IDENT_26 type : registry . METHOD_16 ( com . IDENT_2 . IDENT_3 . data . generator . type . IDENT_26 . class ) ) { if ( ( type . METHOD_17 ( ) ) == null ) { java . io . File file = new java . io . File ( IDENT_20 , ( ( type . METHOD_18 ( ) ) + STRING_2 ) ) ; java . io . StringWriter IDENT_27 = new java . io . StringWriter ( ) ; try { IDENT_27 . append ( STRING_3 ) . append ( IDENT_22 ) . append ( STRING_4 ) ; generator . METHOD_4 ( IDENT_27 , type ) ; IDENT_27 . METHOD_5 ( ) ; java . lang . StringBuffer buffer = new java . lang . StringBuffer ( ) ; IDENT_24 . METHOD_19 ( IDENT_27 . toString ( ) , file . getPath ( ) ) ; IDENT_24 . METHOD_20 ( buffer ) ; java . io . IDENT_28 writer = new java . io . METHOD_21 ( file ) ; if ( ( IDENT_24 . format ( ) ) && ( ( METHOD_15 . IDENT_29 . IDENT_30 ) == ( IDENT_24 . METHOD_22 ( ) ) ) ) { writer . write ( buffer . toString ( ) ) ; } else { writer . write ( IDENT_27 . toString ( ) ) ; } writer . close ( ) ; } catch ( java . lang . Exception e ) { System . err . println ( ( STRING_5 + ( type . METHOD_23 ( ) ) ) ) ; System . err . println ( e ) ; try { java . io . METHOD_21 writer = new java . io . METHOD_21 ( file ) ; writer . write ( IDENT_27 . toString ( ) ) ; writer . close ( ) ; } catch ( java . lang . Exception f ) { System . err . println ( ( STRING_6 + ( type . METHOD_23 ( ) ) ) ) ; System . err . println ( f ) ; } } } } }
org . junit . Assert . assertEquals ( IDENT_6 . size ( ) , 0 ) 