METHOD_0 ( ) { java . lang . String IDENT_0 = ( IDENT_1 ) + STRING_0 ; com . github . IDENT_2 . IDENT_3 . analysis . IDENT_4 . IDENT_5 parser = new com . github . IDENT_2 . IDENT_3 . analysis . IDENT_4 . METHOD_1 ( IDENT_0 ) ; java . util . Map < java . lang . String , com . github . IDENT_2 . IDENT_3 . IDENT_6 . IDENT_7 > results = new java . util . HashMap ( ) ; parser . execute ( new org . eclipse . IDENT_8 . core . dom . METHOD_2 ( ) { public void METHOD_3 ( java . lang . String IDENT_9 , org . eclipse . IDENT_8 . core . dom . IDENT_10 IDENT_11 ) { final com . github . IDENT_2 . IDENT_3 . IDENT_6 . IDENT_12 IDENT_13 = new com . github . IDENT_2 . IDENT_3 . IDENT_6 . METHOD_4 ( ) ; IDENT_11 . accept ( IDENT_13 ) ; results . put ( METHOD_5 ( IDENT_9 ) , IDENT_13 . METHOD_6 ( ) ) ; } } ) ; java . util . Map < java . lang . String , com . github . IDENT_2 . IDENT_3 . IDENT_6 . IDENT_7 > expected = new java . util . HashMap ( ) ; expected . put ( STRING_1 , IDENT_14 . IDENT_15 ) ; expected . put ( STRING_2 , IDENT_14 . IDENT_15 ) ; expected . put ( STRING_3 , IDENT_14 . IDENT_16 ) ; expected . put ( STRING_4 , IDENT_14 . IDENT_17 ) ; expected . put ( STRING_5 , IDENT_14 . IDENT_18 ) ; expected . put ( STRING_6 , IDENT_14 . IDENT_19 ) ; expected . put ( STRING_7 , IDENT_7 . IDENT_20 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( ) { return IDENT_21 ; }
org . junit . Assert . assertEquals ( expected , results ) 