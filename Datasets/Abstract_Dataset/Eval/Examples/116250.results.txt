METHOD_0 ( ) { org . IDENT_0 . stream . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_0 . stream . IDENT_1 . METHOD_1 ( INT_0 , INT_1 ) ; IDENT_3 . METHOD_2 ( "a" ) ; IDENT_3 . METHOD_2 ( "b" ) ; IDENT_3 . METHOD_2 ( STRING_0 ) ; IDENT_3 . METHOD_2 ( STRING_1 ) ; IDENT_3 . METHOD_2 ( STRING_2 ) ; org . IDENT_0 . stream . IDENT_1 . METHOD_1 IDENT_4 = METHOD_1 . Builder . build ( IDENT_3 . getBytes ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { org . IDENT_0 . stream . METHOD_3 . HashMap < java . lang . Integer , java . lang . Integer > results = new org . IDENT_0 . stream . METHOD_3 . HashMap < java . lang . Integer , java . lang . Integer > ( ) ; for ( int i = 0 ; i < ( IDENT_5 ) ; i ++ ) { int IDENT_6 = ( ( int ) ( ( IDENT_7 . get ( i ) . size ( ) ) * ( java . lang . Math . METHOD_4 ( 2 , IDENT_8 . get ( i ) ) ) ) ) ; if ( ! ( results . containsKey ( IDENT_6 ) ) ) { results . put ( IDENT_6 , 1 ) ; } else { int IDENT_9 = results . get ( IDENT_6 ) ; results . put ( IDENT_6 , ( IDENT_9 + 1 ) ) ; } } int IDENT_10 = 0 ; int IDENT_11 = 0 ; for ( Map . Entry < java . lang . Integer , java . lang . Integer > IDENT_12 : results . entrySet ( ) ) { int IDENT_13 = IDENT_12 . getValue ( ) ; if ( IDENT_13 > IDENT_11 ) { IDENT_11 = IDENT_13 ; IDENT_10 = IDENT_12 . getKey ( ) ; } } return IDENT_10 ; }
org . junit . Assert . assertEquals ( IDENT_3 . METHOD_3 ( ) , IDENT_4 . METHOD_3 ( ) ) 