METHOD_0 ( ) { for ( int i = 0 ; i < ( org . IDENT_0 . stream . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 ) ; i ++ ) { IDENT_5 . add ( new java . lang . Integer ( ( ( int ) ( java . lang . Math . METHOD_1 ( ( ( random . METHOD_2 ( ) ) * ( org . IDENT_0 . stream . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_6 ) ) ) ) ) ) ) ; } java . util . List < org . IDENT_0 . stream . IDENT_1 . util . IDENT_7 < java . lang . Integer > > IDENT_8 = IDENT_5 . METHOD_3 ( 5 ) ; System . out . println ( STRING_0 ) ; for ( org . IDENT_0 . stream . IDENT_1 . util . IDENT_7 < java . lang . Integer > e : IDENT_8 ) { System . out . println ( e ) ; } org . IDENT_0 . stream . IDENT_1 . util . IDENT_7 < java . lang . Integer > IDENT_9 = IDENT_8 . get ( 0 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { return item ; }
org . junit . Assert . assertTrue ( ( ( ( IDENT_9 . METHOD_4 ( ) ) > ( - 15 ) ) && ( ( IDENT_9 . METHOD_4 ( ) ) < 15 ) ) ) 