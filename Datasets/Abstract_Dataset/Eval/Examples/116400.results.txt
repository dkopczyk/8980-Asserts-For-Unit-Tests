METHOD_0 ( ) { com . amazonaws . services . IDENT_0 . model . IDENT_1 schema = new com . amazonaws . services . IDENT_0 . model . METHOD_1 ( new com . amazonaws . services . IDENT_0 . model . METHOD_2 ( ) . METHOD_3 ( STRING_0 ) . METHOD_4 ( IDENT_2 . IDENT_3 ) ) ; schema . METHOD_5 ( new com . amazonaws . services . IDENT_0 . model . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) . METHOD_4 ( IDENT_2 . IDENT_3 ) ) ; METHOD_6 ( tableName , schema ) ; com . amazonaws . services . IDENT_0 . model . IDENT_4 request = new com . amazonaws . services . IDENT_0 . model . METHOD_7 ( ) . METHOD_8 ( tableName ) ; try { METHOD_9 ( ) . METHOD_10 ( request ) ; "<AssertPlaceHolder>" ; } catch ( com . amazonaws . IDENT_5 IDENT_6 ) { } } METHOD_10 ( com . amazonaws . services . IDENT_0 . model . METHOD_7 ) { com . amazonaws . http . IDENT_7 IDENT_8 = METHOD_11 ( IDENT_9 ) ; com . amazonaws . util . IDENT_10 IDENT_11 = IDENT_8 . METHOD_12 ( ) ; com . amazonaws . IDENT_12 < com . amazonaws . services . IDENT_0 . model . METHOD_7 > request = METHOD_13 ( IDENT_9 , new com . amazonaws . services . IDENT_0 . model . transform . METHOD_14 ( ) , IDENT_8 . METHOD_12 ( ) ) ; request . METHOD_15 ( IDENT_11 ) ; com . amazonaws . transform . IDENT_13 < com . amazonaws . services . IDENT_0 . model . IDENT_14 , com . amazonaws . transform . IDENT_15 > IDENT_16 = new com . amazonaws . services . IDENT_0 . model . transform . METHOD_16 ( ) ; com . amazonaws . http . IDENT_17 < com . amazonaws . services . IDENT_0 . model . IDENT_14 > IDENT_18 = new com . amazonaws . http . IDENT_17 < com . amazonaws . services . IDENT_0 . model . IDENT_14 > ( IDENT_16 ) ; return invoke ( request , IDENT_18 , IDENT_8 ) ; }
org . junit . Assert . assertTrue ( false ) 