METHOD_0 ( ) { METHOD_1 ( tableName ) ; com . amazonaws . services . IDENT_0 . model . IDENT_1 request = new com . amazonaws . services . IDENT_0 . model . METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) ) ; try { METHOD_5 ( ) . METHOD_6 ( request ) ; "<AssertPlaceHolder>" ; } catch ( com . amazonaws . IDENT_2 IDENT_3 ) { } } METHOD_6 ( com . amazonaws . services . IDENT_4 . model . METHOD_2 ) { com . amazonaws . http . IDENT_5 IDENT_6 = METHOD_7 ( IDENT_7 ) ; com . amazonaws . util . IDENT_8 IDENT_9 = IDENT_6 . METHOD_8 ( ) ; com . amazonaws . IDENT_10 < com . amazonaws . services . IDENT_4 . model . METHOD_2 > request = METHOD_9 ( IDENT_7 , new com . amazonaws . services . IDENT_4 . model . transform . METHOD_10 ( ) , IDENT_6 . METHOD_8 ( ) ) ; request . METHOD_11 ( IDENT_9 ) ; com . amazonaws . transform . IDENT_11 < com . amazonaws . services . IDENT_4 . model . IDENT_12 , com . amazonaws . transform . IDENT_13 > IDENT_14 = new com . amazonaws . services . IDENT_4 . model . transform . METHOD_12 ( ) ; com . amazonaws . http . IDENT_15 < com . amazonaws . services . IDENT_4 . model . IDENT_12 > IDENT_16 = new com . amazonaws . http . IDENT_15 < com . amazonaws . services . IDENT_4 . model . IDENT_12 > ( IDENT_14 ) ; return invoke ( request , IDENT_16 , IDENT_6 ) ; }
org . junit . Assert . assertTrue ( false ) 