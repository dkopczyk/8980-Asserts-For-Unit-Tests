METHOD_0 ( ) { final org . springframework . validation . IDENT_0 IDENT_1 = mock ( org . springframework . validation . IDENT_0 . class , STRING_0 ) ; final org . springframework . validation . IDENT_0 IDENT_2 = mock ( org . springframework . validation . IDENT_0 . class , STRING_1 ) ; when ( IDENT_1 . METHOD_1 ( any ( java . lang . Class . class ) ) ) . thenReturn ( false ) ; when ( IDENT_2 . METHOD_1 ( any ( java . lang . Class . class ) ) ) . thenReturn ( true ) ; final IDENT_3 . IDENT_4 . validation . IDENT_5 IDENT_6 = new IDENT_3 . IDENT_4 . validation . METHOD_2 ( new org . springframework . validation . IDENT_0 [ ] { IDENT_1 , IDENT_2 } ) ; "<AssertPlaceHolder>" ; IDENT_6 . validate ( new java . util . Date ( ) , new org . springframework . validation . METHOD_3 ( new java . util . HashMap ( ) , STRING_2 ) ) ; verify ( IDENT_1 , times ( 0 ) ) . validate ( any ( java . lang . Object . class ) , any ( org . springframework . validation . IDENT_7 . class ) ) ; verify ( IDENT_2 , times ( 1 ) ) . validate ( any ( java . lang . Object . class ) , any ( org . springframework . validation . IDENT_7 . class ) ) ; } METHOD_1 ( java . net . URI ) { return delegate . METHOD_1 ( uri ) ; }
org . junit . Assert . assertTrue ( IDENT_6 . METHOD_1 ( java . util . Date . class ) ) 