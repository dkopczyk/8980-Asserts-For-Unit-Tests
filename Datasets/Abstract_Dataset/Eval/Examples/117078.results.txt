METHOD_0 ( ) { System . out . println ( ( ( ( IDENT_0 . tools . IDENT_1 . IDENT_2 . IDENT_3 ) + STRING_0 7 ) + ( IDENT_0 . tools . IDENT_1 . IDENT_2 . IDENT_4 ) ) ) ; java . lang . String IDENT_5 = STRING_1 ; java . lang . String IDENT_6 = STRING_2 ; java . lang . String IDENT_7 = STRING_0 9 ; java . lang . String IDENT_8 = STRING_0 6 ; java . lang . String IDENT_9 = STRING_3 0 ; java . lang . String IDENT_10 = STRING_4 ; java . lang . String IDENT_11 = STRING_0 0 ; java . lang . String IDENT_12 = STRING_0 3 ; java . lang . String IDENT_13 = STRING_5 ; java . lang . String IDENT_14 = STRING_6 ; java . lang . String IDENT_15 = ( ( ( ( ( ( STRING_3 + IDENT_5 ) + STRING_0 2 ) + IDENT_6 ) + STRING_0 4 ) + ( IDENT_0 . tools . IDENT_1 . IDENT_2 . IDENT_16 ) ) + STRING_0 5 ) + STRING_0 ; java . lang . String [ ] args = IDENT_15 . split ( STRING_0 2 ) ; IDENT_0 . IDENT_17 . METHOD_1 ( args ) ; java . io . File output = new java . io . File ( STRING_7 ) ; if ( output . METHOD_2 ( ) ) { java . lang . String [ ] IDENT_18 = output . list ( ) ; "<AssertPlaceHolder>" ; } IDENT_0 . tools . IDENT_1 . IDENT_19 . METHOD_3 ( IDENT_7 , IDENT_11 ) ; System . out . println ( STRING_0 8 ) ; IDENT_0 . tools . IDENT_1 . IDENT_19 . METHOD_3 ( IDENT_8 , IDENT_12 ) ; System . out . println ( STRING_8 ) ; IDENT_0 . tools . IDENT_1 . IDENT_19 . METHOD_3 ( IDENT_9 , IDENT_13 ) ; System . out . println ( STRING_0 1 ) ; IDENT_0 . tools . IDENT_1 . IDENT_19 . METHOD_3 ( IDENT_10 , IDENT_14 ) ; System . out . println ( STRING_9 ) ; } METHOD_1 ( java . lang . String [ ] ) { IDENT_0 . IDENT_17 IDENT_0 = new IDENT_0 . METHOD_4 ( ) ; IDENT_0 . METHOD_4 . parser = IDENT_0 . METHOD_5 ( ) ; net . sourceforge . IDENT_20 . IDENT_21 . IDENT_22 IDENT_23 ; try { if ( IDENT_24 == ( IDENT_25 . IDENT_26 ) ) { IDENT_0 . tools . IDENT_27 . IDENT_28 IDENT_29 = new IDENT_0 . tools . IDENT_27 . METHOD_6 ( IDENT_30 ) ; IDENT_29 . METHOD_7 ( ) ; } else if ( IDENT_24 == ( IDENT_25 . IDENT_31 ) ) { IDENT_0 . tools . IDENT_32 . IDENT_33 IDENT_34 = new IDENT_0 . tools . IDENT_32 . METHOD_8 ( IDENT_30 ) ; IDENT_34 . METHOD_9 ( ) ; } } catch ( net . sourceforge . IDENT_20 . IDENT_21 . IDENT_35 e ) { IDENT_0 . METHOD_4 . METHOD_10 ( e ) ; } catch ( java . lang . Exception e ) { IDENT_0 . METHOD_4 . logger . error ( STRING_10 ) ; e . printStackTrace ( ) ; } }
org . junit . Assert . assertTrue ( ( ( IDENT_18 . length ) == 8 ) ) 