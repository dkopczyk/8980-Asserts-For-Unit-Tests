METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new com . IDENT_0 . IDENT_1 . METHOD_1 ( STRING_0 ) ; IDENT_3 . put ( com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 . IDENT_6 , new org . apache . hadoop . io . METHOD_2 ( STRING_1 ) , com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 . IDENT_7 ) ; org . apache . accumulo . core . data . IDENT_8 actual = instance . METHOD_3 ( row , IDENT_9 , IDENT_10 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , java . lang . String [ ] , java . lang . String [ ] ) { org . apache . commons . lang . IDENT_11 . METHOD_4 ( IDENT_12 , com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_13 . IDENT_14 ) ; java . util . Map < org . apache . accumulo . core . data . IDENT_15 , org . apache . accumulo . core . data . IDENT_16 > IDENT_17 = new java . util . IDENT_18 < org . apache . accumulo . core . data . IDENT_15 , org . apache . accumulo . core . data . IDENT_16 > ( ) ; org . apache . accumulo . core . data . IDENT_8 IDENT_19 = IDENT_12 . METHOD_3 ( row , IDENT_20 , IDENT_21 ) ; org . apache . hadoop . io . METHOD_2 IDENT_22 = new org . apache . hadoop . io . METHOD_2 ( IDENT_19 . METHOD_5 ( ) ) ; for ( org . apache . accumulo . core . data . IDENT_23 IDENT_24 : IDENT_19 . METHOD_6 ( ) ) { org . apache . hadoop . io . METHOD_2 IDENT_25 = new org . apache . hadoop . io . METHOD_2 ( IDENT_24 . METHOD_7 ( ) ) ; if ( IDENT_26 ) { key = new org . apache . accumulo . core . data . METHOD_8 ( IDENT_22 , com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_27 . IDENT_28 , IDENT_25 , 0 ) ; } else { key = new org . apache . accumulo . core . data . METHOD_8 ( IDENT_22 , com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_27 . IDENT_28 , IDENT_25 ) ; } IDENT_17 . put ( key , IDENT_12 . IDENT_29 ) ; } return IDENT_17 ; }
org . junit . Assert . assertEquals ( IDENT_3 , actual ) 