METHOD_0 ( ) { final java . util . concurrent . atomic . IDENT_0 IDENT_1 = new java . util . concurrent . atomic . METHOD_1 ( 0 ) ; instance . METHOD_2 ( ( ) -> { IDENT_1 . METHOD_3 ( ) ; return null ; } ) ; java . lang . Thread . sleep ( 20 ) ; "<AssertPlaceHolder>" ; } get ( ) { IDENT_2 . METHOD_4 ( ) ; try { java . util . Optional < java . nio . file . Path > IDENT_3 = IDENT_4 . METHOD_5 ( IDENT_5 ) ; if ( IDENT_3 . METHOD_6 ( ) ) { return IDENT_3 . get ( ) ; } } catch ( java . io . IOException e ) { edu . illinois . library . cantaloupe . processor . IDENT_6 . LOGGER . error ( STRING_0 , e . getMessage ( ) ) ; } return null ; }
org . junit . Assert . assertEquals ( 1 , IDENT_1 . get ( ) ) 