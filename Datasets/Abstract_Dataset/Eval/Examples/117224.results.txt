METHOD_0 ( ) { for ( edu . illinois . library . cantaloupe . image . IDENT_0 format : edu . illinois . library . cantaloupe . image . IDENT_1 . IDENT_2 . METHOD_1 ( ) ) { edu . illinois . library . cantaloupe . image . IDENT_3 IDENT_4 = format . METHOD_2 ( ) ; java . nio . file . Path file = edu . illinois . library . cantaloupe . image . IDENT_1 . IDENT_2 . get ( format ) ; try ( java . io . InputStream is = new java . io . METHOD_3 ( java . nio . file . IDENT_5 . METHOD_4 ( file ) ) ) { boolean result = edu . illinois . library . cantaloupe . image . IDENT_3 . METHOD_5 ( is ) . contains ( IDENT_4 ) ; if ( ! result ) { System . err . println ( ( ( ( ( STRING_0 + STRING_1 ) + format ) + STRING_2 ) + ( file . METHOD_6 ( ) ) ) ) ; } if ( ! ( java . util . Set . of ( STRING_3 , STRING_4 ) . contains ( file . METHOD_6 ( ) . toString ( ) ) ) ) { "<AssertPlaceHolder>" ; } } } } toString ( ) { return ( IDENT_6 ) + "" ; }
org . junit . Assert . assertTrue ( result ) 