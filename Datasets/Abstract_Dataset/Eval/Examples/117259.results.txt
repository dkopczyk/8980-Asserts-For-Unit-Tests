METHOD_0 ( ) { final edu . illinois . library . cantaloupe . operation . IDENT_0 IDENT_1 = new edu . illinois . library . cantaloupe . operation . METHOD_1 ( 2 ) ; final edu . illinois . library . cantaloupe . image . IDENT_2 IDENT_3 = new edu . illinois . library . cantaloupe . image . METHOD_2 ( INT_0 , 200 ) ; final edu . illinois . library . cantaloupe . image . IDENT_4 IDENT_5 = new edu . illinois . library . cantaloupe . image . METHOD_3 ( 1 , 2 ) ; edu . illinois . library . cantaloupe . operation . IDENT_6 IDENT_7 = new edu . illinois . library . cantaloupe . operation . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( edu . illinois . library . cantaloupe . image . METHOD_2 , edu . illinois . library . cantaloupe . operation . METHOD_1 , edu . illinois . library . cantaloupe . image . METHOD_3 ) { final double IDENT_8 = IDENT_9 . METHOD_6 ( ) ; final double IDENT_10 = IDENT_5 . METHOD_7 ( ) . METHOD_8 ( ) ; final double IDENT_11 = IDENT_8 / IDENT_10 ; double x = ( METHOD_9 ( ) ) * IDENT_11 ; double y = ( METHOD_10 ( ) ) * IDENT_11 ; double IDENT_12 = ( METHOD_11 ( ) ) * IDENT_11 ; double IDENT_13 = ( METHOD_12 ( ) ) * IDENT_11 ; switch ( IDENT_14 ) { case IDENT_15 : double IDENT_16 = x ; double IDENT_17 = IDENT_12 ; x = y ; y = ( ( IDENT_3 . METHOD_13 ( ) ) - IDENT_16 ) - IDENT_12 ; y = ( y < 0 ) ? 0 : y ; IDENT_12 = METHOD_13 ; METHOD_13 = java . lang . Math . min ( ( ( IDENT_3 . METHOD_14 ( ) ) - IDENT_16 ) , IDENT_17 ) ; break ; case IDENT_18 : x = ( ( IDENT_3 . METHOD_15 ( ) ) - x ) - METHOD_15 ; y = ( ( IDENT_3 . METHOD_13 ( ) ) - y ) - METHOD_13 ; x = ( x < 0 ) ? 0 : x ; y = ( y < 0 ) ? 0 : y ; break ; case IDENT_19 : double IDENT_20 = y ; y = x ; x = ( ( IDENT_3 . METHOD_15 ( ) ) - IDENT_20 ) - METHOD_13 ; x = ( x < 0 ) ? 0 : x ; IDENT_17 = METHOD_15 ; METHOD_15 = METHOD_13 ; METHOD_13 = ( IDENT_17 <= ( ( IDENT_3 . METHOD_13 ( ) ) - y ) ) ? IDENT_17 : ( IDENT_3 . METHOD_13 ( ) ) - y ; break ; } METHOD_15 = ( ( x + METHOD_15 ) > ( IDENT_3 . METHOD_15 ( ) ) ) ? ( IDENT_3 . METHOD_15 ( ) ) - x : METHOD_15 ; METHOD_13 = ( ( y + METHOD_13 ) > ( IDENT_3 . METHOD_13 ( ) ) ) ? ( IDENT_3 . METHOD_13 ( ) ) - y : METHOD_13 ; return new edu . illinois . library . cantaloupe . image . METHOD_16 ( x , y , METHOD_15 , METHOD_13 ) ; }
org . junit . Assert . assertEquals ( new edu . illinois . library . cantaloupe . image . METHOD_16 ( 50 , 0 , 200 , 200 ) , IDENT_7 . METHOD_5 ( IDENT_3 , IDENT_1 , IDENT_5 ) ) 