METHOD_0 ( ) { java . awt . image . IDENT_0 IDENT_1 = edu . illinois . library . cantaloupe . processor . IDENT_2 . METHOD_1 ( 100 , 100 , 8 , false ) ; edu . illinois . library . cantaloupe . operation . IDENT_3 IDENT_4 = new edu . illinois . library . cantaloupe . operation . METHOD_2 ( ) ; IDENT_4 . METHOD_3 ( METHOD_2 . IDENT_5 . IDENT_6 ) ; edu . illinois . library . cantaloupe . image . IDENT_7 IDENT_8 = new edu . illinois . library . cantaloupe . image . METHOD_4 ( 1 , 1 ) ; edu . illinois . library . cantaloupe . operation . IDENT_9 IDENT_10 = new edu . illinois . library . cantaloupe . operation . METHOD_5 ( 0 ) ; java . awt . image . IDENT_0 IDENT_11 = edu . illinois . library . cantaloupe . processor . IDENT_12 . METHOD_6 ( IDENT_1 , METHOD_6 , IDENT_8 , IDENT_10 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( java . awt . image . IDENT_0 , edu . illinois . library . cantaloupe . operation . METHOD_2 , edu . illinois . library . cantaloupe . image . METHOD_4 , edu . illinois . library . cantaloupe . operation . METHOD_5 ) { final edu . illinois . library . cantaloupe . image . IDENT_13 IDENT_14 = new edu . illinois . library . cantaloupe . image . METHOD_7 ( IDENT_1 . METHOD_8 ( ) , IDENT_1 . METHOD_9 ( ) ) ; final edu . illinois . library . cantaloupe . image . METHOD_7 IDENT_15 = METHOD_6 . METHOD_10 ( IDENT_14 , IDENT_16 , IDENT_17 ) ; java . awt . image . IDENT_0 IDENT_18 = IDENT_1 ; if ( ( ( ( ( IDENT_14 . METHOD_11 ( ) ) >= 3 ) && ( ( IDENT_14 . METHOD_12 ( ) ) >= 3 ) ) && ( ( IDENT_15 . METHOD_11 ( ) ) >= 3 ) ) && ( ( IDENT_15 . METHOD_12 ( ) ) >= 3 ) ) { if ( ! ( IDENT_15 . equals ( IDENT_14 ) ) ) { final edu . illinois . library . cantaloupe . util . IDENT_19 IDENT_20 = new edu . illinois . library . cantaloupe . util . METHOD_13 ( ) ; final edu . illinois . library . cantaloupe . processor . IDENT_21 . IDENT_22 IDENT_23 = new edu . illinois . library . cantaloupe . processor . IDENT_21 . METHOD_14 ( IDENT_15 . METHOD_11 ( ) , IDENT_15 . METHOD_12 ( ) ) ; edu . illinois . library . cantaloupe . processor . IDENT_21 . IDENT_24 filter = null ; if ( ( METHOD_6 . METHOD_15 ( ) ) != null ) { filter = METHOD_6 . METHOD_15 ( ) . METHOD_16 ( ) ; } if ( filter == null ) { if ( ( ( IDENT_15 . METHOD_17 ( ) ) < ( IDENT_14 . METHOD_17 ( ) ) ) || ( ( IDENT_15 . METHOD_18 ( ) ) < ( IDENT_14 . METHOD_18 ( ) ) ) ) { filter = edu . illinois . library . cantaloupe . processor . IDENT_12 . IDENT_25 . METHOD_16 ( ) ; } else { filter = edu . illinois . library . cantaloupe . processor . IDENT_12 . IDENT_26 . METHOD_16 ( ) ; } } IDENT_23 . METHOD_19 ( filter ) ; IDENT_18 = IDENT_23 . filter ( IDENT_1 , null ) ; edu . illinois . library . cantaloupe . processor . IDENT_12 . LOGGER . debug ( ( STRING_0 + STRING_1 ) , IDENT_14 . METHOD_11 ( ) , IDENT_14 . METHOD_12 ( ) , IDENT_15 . METHOD_11 ( ) , IDENT_15 . METHOD_12 ( ) , filter . getName ( ) , IDENT_20 ) ; } } else { IDENT_18 = new java . awt . image . METHOD_20 ( IDENT_15 . METHOD_11 ( ) , IDENT_15 . METHOD_12 ( ) , IDENT_1 . getType ( ) ) ; } return IDENT_18 ; }
org . junit . Assert . assertSame ( IDENT_1 , IDENT_11 ) 