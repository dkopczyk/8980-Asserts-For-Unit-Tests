METHOD_0 ( ) { edu . illinois . library . cantaloupe . processor . IDENT_0 instance = ( ( edu . illinois . library . cantaloupe . processor . IDENT_0 ) ( newInstance ( ) ) ) ; instance . METHOD_1 ( METHOD_2 ( instance ) ) ; java . util . Set < edu . illinois . library . cantaloupe . resource . IDENT_1 . IDENT_2 > IDENT_3 = new java . util . HashSet ( ) ; IDENT_3 . add ( IDENT_2 . IDENT_4 ) ; IDENT_3 . add ( IDENT_2 . IDENT_5 ) ; IDENT_3 . add ( IDENT_2 . IDENT_6 ) ; IDENT_3 . add ( IDENT_2 . IDENT_7 ) ; IDENT_3 . add ( IDENT_2 . IDENT_8 ) ; IDENT_3 . add ( IDENT_2 . IDENT_9 ) ; IDENT_3 . add ( IDENT_2 . IDENT_10 ) ; IDENT_3 . add ( IDENT_2 . IDENT_11 ) ; IDENT_3 . add ( IDENT_2 . IDENT_12 ) ; IDENT_3 . add ( IDENT_2 . IDENT_13 ) ; IDENT_3 . add ( IDENT_2 . IDENT_14 ) ; IDENT_3 . add ( IDENT_2 . IDENT_15 ) ; IDENT_3 . add ( IDENT_2 . IDENT_16 ) ; IDENT_3 . add ( IDENT_2 . IDENT_17 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { java . util . Set < edu . illinois . library . cantaloupe . resource . IDENT_1 . IDENT_2 > IDENT_18 ; if ( ! ( METHOD_4 ( ) . isEmpty ( ) ) ) { IDENT_18 = edu . illinois . library . cantaloupe . processor . IDENT_19 . IDENT_20 ; } else { IDENT_18 = java . util . Collections . METHOD_5 ( java . util . Collections . METHOD_6 ( ) ) ; } return IDENT_18 ; }
org . junit . Assert . assertEquals ( IDENT_3 , instance . METHOD_3 ( ) ) 