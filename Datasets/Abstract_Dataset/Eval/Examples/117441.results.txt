METHOD_0 ( ) { instance = new edu . illinois . library . cantaloupe . resource . IDENT_0 . v2 . METHOD_1 ( ) ; instance . METHOD_2 ( METHOD_1 . Type . IDENT_1 ) ; edu . illinois . library . cantaloupe . operation . IDENT_2 actual = instance . METHOD_3 ( ) ; edu . illinois . library . cantaloupe . operation . IDENT_2 expected = new edu . illinois . library . cantaloupe . operation . METHOD_4 ( 0 , 0 , 1 , 1 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { if ( edu . illinois . library . cantaloupe . resource . IDENT_0 . v2 . METHOD_1 . Type . IDENT_1 . equals ( getType ( ) ) ) { return new edu . illinois . library . cantaloupe . operation . METHOD_4 ( ) ; } else if ( edu . illinois . library . cantaloupe . resource . IDENT_0 . v2 . METHOD_1 . Type . IDENT_3 . equals ( getType ( ) ) ) { return new edu . illinois . library . cantaloupe . operation . METHOD_5 ( ) ; } else if ( edu . illinois . library . cantaloupe . resource . IDENT_0 . v2 . METHOD_1 . Type . IDENT_4 . equals ( getType ( ) ) ) { return new edu . illinois . library . cantaloupe . operation . METHOD_4 ( ( ( METHOD_6 ( ) ) / FLOAT_0 ) , ( ( METHOD_7 ( ) ) / FLOAT_0 ) , ( ( METHOD_8 ( ) ) / FLOAT_0 ) , ( ( METHOD_9 ( ) ) / FLOAT_0 ) ) ; } else { return new edu . illinois . library . cantaloupe . operation . METHOD_10 ( java . lang . Math . METHOD_11 ( METHOD_6 ( ) ) , java . lang . Math . METHOD_11 ( METHOD_7 ( ) ) , java . lang . Math . METHOD_11 ( METHOD_8 ( ) ) , java . lang . Math . METHOD_11 ( METHOD_9 ( ) ) ) ; } }
org . junit . Assert . assertEquals ( expected , actual ) 