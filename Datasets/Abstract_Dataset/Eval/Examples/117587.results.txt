METHOD_0 ( ) { net . time4j . engine . IDENT_0 IDENT_1 = net . time4j . engine . IDENT_0 . of ( 5 ) ; net . time4j . engine . IDENT_0 IDENT_2 = net . time4j . engine . IDENT_0 . of ( 3 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( net . time4j . engine . IDENT_0 ) { long result = java . lang . Math . METHOD_2 ( this . METHOD_3 ( ) , IDENT_3 . METHOD_4 ( ) ) ; try { return this . METHOD_5 ( ) . METHOD_6 ( ) . transform ( result ) ; } catch ( java . lang . IllegalArgumentException IDENT_4 ) { java . lang . IDENT_5 ex = new java . lang . METHOD_7 ( ( STRING_0 + result ) ) ; ex . METHOD_8 ( IDENT_4 ) ; throw ex ; } }
org . junit . Assert . assertThat ( IDENT_1 . METHOD_1 ( IDENT_2 ) , org . hamcrest . CoreMatchers . is ( net . time4j . engine . IDENT_0 . of ( 8 ) ) ) 