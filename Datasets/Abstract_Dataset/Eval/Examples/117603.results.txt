METHOD_0 ( ) { net . time4j . IDENT_0 < net . time4j . IDENT_1 > IDENT_2 = this . start . METHOD_1 ( this . end , net . time4j . IDENT_0 . in ( net . time4j . IDENT_1 . IDENT_3 , net . time4j . IDENT_1 . IDENT_4 , net . time4j . IDENT_1 . IDENT_5 ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( net . time4j . engine . IDENT_6 ) { long result = java . lang . Math . METHOD_3 ( this . METHOD_4 ( ) , IDENT_7 . METHOD_5 ( ) ) ; try { return this . METHOD_6 ( ) . METHOD_7 ( ) . transform ( result ) ; } catch ( java . lang . IllegalArgumentException IDENT_8 ) { java . lang . IDENT_9 ex = new java . lang . METHOD_8 ( ( STRING_0 + result ) ) ; ex . METHOD_9 ( IDENT_8 ) ; throw ex ; } }
org . junit . Assert . assertThat ( this . start . METHOD_2 ( IDENT_2 ) , org . hamcrest . CoreMatchers . is ( this . end ) ) 