METHOD_0 ( ) { net . time4j . IDENT_0 start = net . time4j . IDENT_1 . of ( INT_0 , 2 , INT_1 , 0 , 0 ) . METHOD_1 ( ) ; net . time4j . IDENT_0 end = net . time4j . IDENT_1 . of ( INT_0 , 5 , INT_2 , 0 , 0 ) . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( net . time4j . IDENT_0 , net . time4j . IDENT_0 ) { return new net . time4j . range . METHOD_3 ( net . time4j . range . IDENT_2 . of ( net . time4j . range . IDENT_3 . IDENT_4 , start ) , net . time4j . range . IDENT_2 . of ( net . time4j . range . IDENT_3 . IDENT_5 , end ) ) ; }
org . junit . Assert . assertThat ( net . time4j . range . METHOD_3 . METHOD_2 ( start , end ) . contains ( end ) , org . hamcrest . CoreMatchers . is ( false ) ) 