METHOD_0 ( ) { net . time4j . range . IDENT_0 rule = new net . time4j . range . METHOD_1 ( ) . METHOD_2 ( net . time4j . range . IDENT_1 , net . time4j . range . IDENT_2 . METHOD_3 ( net . time4j . IDENT_3 . of ( 9 , 0 ) , net . time4j . IDENT_3 . of ( 12 , INT_0 ) ) ) . METHOD_2 ( net . time4j . range . IDENT_4 , net . time4j . range . IDENT_2 . METHOD_3 ( net . time4j . IDENT_3 . of ( 1 , 10 ) , net . time4j . IDENT_3 . of ( 2 , 20 ) ) ) . METHOD_2 ( net . time4j . range . IDENT_4 , net . time4j . range . IDENT_2 . METHOD_3 ( net . time4j . IDENT_3 . of ( 2 , INT_0 ) , net . time4j . IDENT_3 . of ( 3 , 15 ) ) ) . METHOD_2 ( net . time4j . range . IDENT_5 , net . time4j . range . IDENT_2 . METHOD_3 ( net . time4j . IDENT_3 . of ( 10 , 0 ) , net . time4j . IDENT_3 . of ( 12 , 0 ) ) ) . build ( ) ; java . util . List < net . time4j . range . IDENT_6 > IDENT_7 = net . time4j . range . IDENT_8 . METHOD_3 ( net . time4j . IDENT_9 . of ( INT_1 , 3 , INT_2 ) , net . time4j . IDENT_9 . of ( INT_1 , 3 , INT_3 ) ) . METHOD_4 ( rule , IDENT_10 . IDENT_11 ) . collect ( java . util . stream . IDENT_12 . toList ( ) ) ; java . util . List < net . time4j . range . IDENT_6 > expected = new java . util . ArrayList ( ) ; expected . add ( net . time4j . range . IDENT_6 . METHOD_3 ( net . time4j . IDENT_13 . of ( INT_1 , 3 , INT_2 , 10 , 0 ) . METHOD_5 ( IDENT_10 . IDENT_11 ) , net . time4j . IDENT_13 . of ( INT_1 , 3 , INT_2 , 12 , 0 ) . METHOD_5 ( IDENT_10 . IDENT_11 ) ) ) ; expected . add ( net . time4j . range . IDENT_6 . METHOD_3 ( net . time4j . IDENT_13 . of ( INT_1 , 3 , INT_4 , 1 , 10 ) . METHOD_5 ( IDENT_10 . IDENT_11 ) , net . time4j . IDENT_13 . of ( INT_1 , 3 , INT_4 , 3 , 0 ) . METHOD_5 ( IDENT_10 . IDENT_11 ) ) ) ; expected . add ( net . time4j . range . IDENT_6 . METHOD_3 ( net . time4j . IDENT_13 . of ( INT_1 , 3 , INT_4 , 3 , 0 ) . METHOD_5 ( IDENT_10 . IDENT_11 ) , net . time4j . IDENT_13 . of ( INT_1 , 3 , INT_4 , 3 , 15 ) . METHOD_5 ( IDENT_10 . IDENT_11 ) ) ) ; expected . add ( net . time4j . range . IDENT_6 . METHOD_3 ( net . time4j . IDENT_13 . of ( INT_1 , 3 , INT_3 , 9 , 0 ) . METHOD_5 ( IDENT_10 . IDENT_11 ) , net . time4j . IDENT_13 . of ( INT_1 , 3 , INT_3 , 12 , INT_0 ) . METHOD_5 ( IDENT_10 . IDENT_11 ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( net . time4j . IDENT_14 . IDENT_15 ) { return this . in ( net . time4j . IDENT_14 . IDENT_16 . of ( IDENT_17 ) ) ; }
org . junit . Assert . assertThat ( IDENT_7 , org . hamcrest . CoreMatchers . is ( expected ) ) 