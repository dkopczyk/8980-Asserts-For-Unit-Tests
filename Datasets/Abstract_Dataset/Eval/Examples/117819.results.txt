METHOD_0 ( ) { net . time4j . IDENT_0 start = net . time4j . IDENT_1 . of ( INT_0 , 12 , INT_1 , INT_2 , 0 , 0 ) . METHOD_1 ( net . time4j . IDENT_2 . model . IDENT_3 . IDENT_4 ) . METHOD_2 ( 1 , TimeUnit . IDENT_5 ) ; net . time4j . IDENT_0 end = net . time4j . IDENT_1 . of ( INT_3 , 6 , INT_4 , INT_5 , 0 , 0 ) . METHOD_1 ( net . time4j . IDENT_2 . model . IDENT_3 . IDENT_6 ) ; java . util . List < net . time4j . IDENT_2 . IDENT_7 > IDENT_8 = net . time4j . IDENT_2 . model . IDENT_3 . IDENT_9 . METHOD_3 ( start , end ) ; java . util . List < net . time4j . IDENT_2 . IDENT_7 > expected = java . util . Arrays . asList ( net . time4j . IDENT_2 . model . IDENT_3 . IDENT_10 , net . time4j . IDENT_2 . model . IDENT_3 . IDENT_11 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( net . time4j . base . IDENT_12 , net . time4j . base . IDENT_12 ) { java . util . List < net . time4j . IDENT_2 . IDENT_7 > result = new java . util . ArrayList ( ) ; result . addAll ( this . IDENT_13 . METHOD_3 ( start , end ) ) ; result . addAll ( this . IDENT_14 . METHOD_3 ( start , end ) ) ; return java . util . Collections . METHOD_4 ( result ) ; }
org . junit . Assert . assertThat ( IDENT_8 , org . hamcrest . CoreMatchers . is ( expected ) ) 