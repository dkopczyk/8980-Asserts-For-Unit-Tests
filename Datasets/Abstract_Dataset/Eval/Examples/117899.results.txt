METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . sql . impl . parser . IDENT_2 IDENT_3 = METHOD_1 ( ( IDENT_4 ) -> { IDENT_4 . METHOD_2 ( IDENT_5 . IDENT_6 ) ; IDENT_4 . METHOD_3 ( true ) ; return IDENT_4 ; } ) ; org . IDENT_0 . IDENT_1 . sql . impl . task . strategy . IDENT_7 strategy = METHOD_4 ( ) ; org . IDENT_0 . IDENT_1 . sql . IDENT_8 IDENT_9 = strategy . process ( IDENT_3 , org . IDENT_0 . IDENT_1 . sql . impl . task . strategy . IDENT_10 ) ; METHOD_5 ( IDENT_9 , 3 ) ; java . util . List < org . IDENT_0 . IDENT_1 . sql . IDENT_11 > IDENT_12 = IDENT_9 . METHOD_6 ( ) ; java . util . List < java . util . List < java . lang . Object > > IDENT_13 = java . util . Arrays . asList ( java . util . Arrays . asList ( "1" , STRING_0 , "2" , "1" , STRING_1 ) , java . util . Arrays . asList ( "2" , STRING_2 , "1" , "2" , STRING_3 ) , java . util . Arrays . asList ( STRING_4 , STRING_5 , "2" , STRING_4 , STRING_6 ) ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( org . IDENT_0 . IDENT_1 . sql . impl . task . strategy . List ) { return IDENT_12 . stream ( ) . map ( IDENT_11 :: IDENT_14 ) . collect ( java . util . stream . IDENT_15 . toList ( ) ) ; }
org . junit . Assert . assertThat ( METHOD_7 ( IDENT_12 ) , equalTo ( IDENT_13 ) ) 