METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . util . IDENT_2 . METHOD_1 ( org . IDENT_0 . IDENT_1 . util . IDENT_3 . IDENT_4 , new byte [ ] { } , false ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { java . io . File file = new java . io . File ( path ) ; if ( ( file . exists ( ) ) && ( file . METHOD_3 ( ) ) ) { int IDENT_5 = ( ( int ) ( file . length ( ) ) ) ; try { java . io . IDENT_6 in = new java . io . METHOD_4 ( file ) ; java . io . IDENT_7 IDENT_8 = new java . io . METHOD_5 ( in ) ; byte [ ] IDENT_9 = new byte [ IDENT_5 ] ; if ( ( IDENT_8 . read ( IDENT_9 , 0 , IDENT_5 ) ) == ( - 1 ) ) return null ; IDENT_8 . close ( ) ; in . close ( ) ; return IDENT_9 ; } catch ( java . io . IOException e ) { e . printStackTrace ( ) ; } } return null ; }
org . junit . Assert . assertArrayEquals ( new byte [ 0 ] , org . IDENT_0 . IDENT_1 . util . IDENT_2 . METHOD_2 ( org . IDENT_0 . IDENT_1 . util . IDENT_3 . IDENT_4 ) ) 