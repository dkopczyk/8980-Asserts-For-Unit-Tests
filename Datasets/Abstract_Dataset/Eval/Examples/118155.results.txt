METHOD_0 ( ) { edu . IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_3 s = edu . IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_4 . getInstance ( ) ; edu . IDENT_0 . IDENT_1 . IDENT_5 . model . IDENT_6 [ ] IDENT_7 = new edu . IDENT_0 . IDENT_1 . IDENT_5 . model . IDENT_6 [ 2 ] ; IDENT_7 [ 0 ] = new edu . IDENT_0 . IDENT_1 . IDENT_5 . model . METHOD_1 ( s , new edu . IDENT_0 . IDENT_1 . IDENT_5 . model . METHOD_2 ( new edu . IDENT_0 . IDENT_1 . IDENT_5 . model . METHOD_3 ( edu . IDENT_0 . IDENT_1 . IDENT_5 . model . METHOD_3 . IDENT_8 . IDENT_9 , 2 , STRING_0 , null ) ) ) ; IDENT_7 [ 1 ] = new edu . IDENT_0 . IDENT_1 . IDENT_5 . model . METHOD_1 ( s , new edu . IDENT_0 . IDENT_1 . IDENT_5 . model . METHOD_2 ( new edu . IDENT_0 . IDENT_1 . IDENT_5 . model . METHOD_3 ( edu . IDENT_0 . IDENT_1 . IDENT_5 . model . METHOD_3 . IDENT_8 . IDENT_9 , 3 , STRING_1 , null ) ) ) ; edu . IDENT_0 . IDENT_1 . IDENT_5 . model . IDENT_10 fs = new edu . IDENT_0 . IDENT_1 . IDENT_5 . model . METHOD_4 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; } size ( ) { return ( edu . IDENT_0 . IDENT_1 . IDENT_11 . IDENT_12 . count ( IDENT_13 ) ) + ( edu . IDENT_0 . IDENT_1 . IDENT_11 . IDENT_12 . count ( IDENT_14 ) ) ; }
org . junit . Assert . assertEquals ( 5 , fs . size ( ) ) 