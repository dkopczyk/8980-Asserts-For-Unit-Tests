METHOD_0 ( ) { edu . IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_3 IDENT_4 = new edu . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_1 ( edu . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_1 . IDENT_5 . IDENT_6 , 2 , STRING_0 , null ) ; edu . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_1 IDENT_7 = new edu . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_1 ( edu . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_1 . IDENT_5 . IDENT_6 , 5 , STRING_1 , null ) ; edu . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_1 IDENT_8 = new edu . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_1 ( edu . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_1 . IDENT_5 . IDENT_6 , 3 , STRING_2 , null ) ; edu . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_1 IDENT_9 = new edu . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_1 ( edu . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_1 . IDENT_5 . IDENT_6 , 3 , STRING_3 , null ) ; edu . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_1 IDENT_10 = new edu . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_1 ( edu . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_1 . IDENT_5 . IDENT_6 , 6 , STRING_4 , null ) ; edu . IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_11 config = new edu . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_2 ( ) ; config . put ( IDENT_4 , 1 ) ; config . put ( IDENT_7 , 4 ) ; config . put ( IDENT_8 , 1 ) ; config . put ( IDENT_9 , 2 ) ; config . put ( IDENT_10 , 2 ) ; edu . IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_12 IDENT_13 = new edu . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_3 ( IDENT_4 , IDENT_7 , IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( edu . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_3 ) { int IDENT_14 = 0 ; int IDENT_15 = 1 ; for ( int v = ( IDENT_13 . size ( ) ) - 1 ; v >= 0 ; v OP_0 ) { edu . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_1 IDENT_16 = IDENT_13 . get ( v ) ; int state = config . get ( IDENT_16 ) ; IDENT_14 += state * IDENT_15 ; IDENT_15 OP_1 IDENT_16 . METHOD_5 ( ) ; if ( IDENT_15 <= 0 ) { throw new java . lang . IllegalStateException ( ( STRING_5 + IDENT_15 ) ) ; } } return IDENT_14 ; }
org . junit . Assert . assertEquals ( ( ( 1 + ( 4 * 2 ) ) + ( 2 * 10 ) ) , config . METHOD_4 ( IDENT_13 ) ) 