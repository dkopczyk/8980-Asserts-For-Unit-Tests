METHOD_0 ( ) { java . util . Calendar IDENT_0 = new java . util . METHOD_1 ( INT_0 , 1 , 15 ) ; java . util . Date expected = IDENT_0 . getTime ( ) ; java . lang . String fixture = STRING_0 ; try { java . util . Date actual = info . IDENT_1 . IDENT_2 . date . IDENT_3 . METHOD_2 ( fixture ) ; "<AssertPlaceHolder>" ; } catch ( java . text . IDENT_4 e ) { org . junit . Assert . fail ( e . getMessage ( ) ) ; } } METHOD_2 ( java . lang . String ) { if ( info . IDENT_1 . IDENT_2 . date . IDENT_3 . METHOD_3 ( IDENT_5 ) ) return info . IDENT_1 . IDENT_2 . date . IDENT_6 . METHOD_4 ( ) ; else if ( info . IDENT_1 . IDENT_2 . date . IDENT_3 . METHOD_5 ( IDENT_5 ) ) return info . IDENT_1 . IDENT_2 . date . IDENT_6 . METHOD_6 ( ) ; else if ( info . IDENT_1 . IDENT_2 . date . IDENT_3 . METHOD_7 ( IDENT_5 ) ) return info . IDENT_1 . IDENT_2 . date . IDENT_6 . METHOD_8 ( ) ; return info . IDENT_1 . IDENT_2 . date . IDENT_3 . IDENT_7 . parse ( IDENT_5 ) ; }
org . junit . Assert . assertTrue ( actual . equals ( expected ) ) 