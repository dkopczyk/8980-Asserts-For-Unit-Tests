METHOD_0 ( ) { info . IDENT_0 . IDENT_1 . io . IDENT_2 . METHOD_1 ( info . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 , info . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . io . File , java . io . File ) { METHOD_2 ( from , STRING_0 ) ; METHOD_2 ( to , STRING_1 ) ; if ( from . METHOD_3 ( ) ) { for ( java . lang . String name : java . util . Arrays . asList ( from . list ( ) ) ) { if ( ! ( info . IDENT_0 . IDENT_1 . io . IDENT_2 . METHOD_1 ( from , to , name ) ) ) { throw new java . io . IOException ( ( ( ( ( ( STRING_2 + name ) + STRING_3 ) + from ) + STRING_4 ) + to ) ) ; } } } else { java . io . IDENT_6 is = new java . io . METHOD_4 ( from ) ; java . io . IDENT_7 IDENT_8 = info . IDENT_0 . IDENT_1 . io . IDENT_2 . METHOD_5 ( to ) ; byte [ ] buf = new byte [ info . IDENT_0 . IDENT_1 . io . IDENT_2 . IDENT_9 ] ; int len ; while ( ( len = is . read ( buf ) ) > 0 ) { IDENT_8 . write ( buf , 0 , len ) ; } is . close ( ) ; IDENT_8 . close ( ) ; } return true ; }
org . junit . Assert . assertTrue ( info . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_5 . exists ( ) ) 