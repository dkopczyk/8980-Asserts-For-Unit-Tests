METHOD_0 ( ) { org . IDENT_0 . platform . IDENT_1 . ui . model . IDENT_2 IDENT_3 = METHOD_1 ( ( ( " " + ( org . IDENT_0 . platform . IDENT_1 . ui . controller . IDENT_4 . IDENT_5 ) ) + " " ) , STRING_0 , STRING_1 , STRING_2 ) ; java . lang . String result = IDENT_6 . METHOD_2 ( IDENT_3 , IDENT_7 , false ) ; "<AssertPlaceHolder>" ; org . IDENT_0 . platform . IDENT_1 . service . IDENT_8 IDENT_9 = METHOD_3 ( org . IDENT_0 . platform . IDENT_1 . ui . controller . IDENT_4 . IDENT_5 , STRING_3 , STRING_4 , STRING_1 , STRING_2 ) ; IDENT_9 . METHOD_4 ( false ) ; verify ( IDENT_10 ) . METHOD_5 ( METHOD_6 ( new org . IDENT_0 . platform . IDENT_1 . matchers . METHOD_7 ( IDENT_9 ) ) ) ; } METHOD_2 ( org . IDENT_0 . platform . IDENT_1 . ui . model . IDENT_2 , org . springframework . IDENT_11 . IDENT_12 . IDENT_13 , boolean ) { java . lang . String result = STRING_5 ; if ( ! ( METHOD_8 ( IDENT_14 , IDENT_7 ) ) ) { org . IDENT_0 . platform . IDENT_1 . service . IDENT_8 IDENT_9 = null ; try { if ( IDENT_15 ) { IDENT_14 . METHOD_4 ( true ) ; } if ( IDENT_14 . METHOD_9 ( ) ) { IDENT_9 = IDENT_10 . METHOD_10 ( IDENT_14 . METHOD_3 ( ) ) ; } else { IDENT_9 = IDENT_10 . METHOD_5 ( IDENT_14 . METHOD_3 ( ) ) ; } if ( ( METHOD_11 ( IDENT_14 . METHOD_12 ( ) ) ) && ( IDENT_14 . METHOD_13 ( ) ) ) { IDENT_10 . METHOD_14 ( IDENT_9 . getId ( ) ) ; } java . util . List < org . IDENT_0 . platform . IDENT_1 . service . IDENT_16 > IDENT_17 = METHOD_15 ( IDENT_14 . METHOD_16 ( ) , IDENT_9 ) ; java . util . List < org . IDENT_0 . platform . IDENT_1 . service . IDENT_18 > IDENT_19 = METHOD_17 ( IDENT_14 . METHOD_18 ( ) , IDENT_9 ) ; IDENT_10 . METHOD_19 ( IDENT_17 ) ; IDENT_10 . METHOD_20 ( IDENT_19 ) ; } catch ( org . springframework . security . IDENT_20 . IDENT_21 e ) { METHOD_21 ( IDENT_7 . METHOD_22 ( ) , new org . IDENT_0 . framework . exceptions . METHOD_23 ( org . IDENT_0 . platform . IDENT_1 . IDENT_22 . IDENT_23 , e ) ) ; result = STRING_6 ; } catch ( org . IDENT_0 . framework . exceptions . METHOD_23 e ) { METHOD_21 ( IDENT_7 . METHOD_22 ( ) , e ) ; result = STRING_6 ; } } else { result = STRING_6 ; } return result ; }
org . junit . Assert . assertThat ( result , org . hamcrest . core . Is . is ( STRING_5 ) ) 