METHOD_0 ( ) { java . util . List < java . lang . Object > args = METHOD_1 ( Locale . IDENT_0 ) ; org . IDENT_1 . ui . IDENT_2 . IDENT_3 IDENT_4 = new org . IDENT_1 . ui . IDENT_2 . METHOD_2 ( ) ; java . lang . String result = ( ( java . lang . String ) ( IDENT_4 . exec ( args ) ) ) ; java . lang . String expected = STRING_0 ; "<AssertPlaceHolder>" ; } exec ( java . util . List ) { if ( ( args . size ( ) ) != 3 ) { throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } java . lang . Object date = IDENT_5 . template . IDENT_6 . IDENT_7 . METHOD_3 ( ( ( IDENT_5 . template . IDENT_8 ) ( args . get ( 0 ) ) ) ) ; java . lang . String pattern = ( ( java . lang . String ) ( IDENT_5 . template . IDENT_6 . IDENT_7 . METHOD_3 ( ( ( IDENT_5 . template . IDENT_8 ) ( args . get ( 1 ) ) ) ) ) ) ; java . util . Locale IDENT_9 = ( ( java . util . Locale ) ( IDENT_5 . template . IDENT_6 . IDENT_7 . METHOD_3 ( ( ( IDENT_5 . template . IDENT_8 ) ( args . get ( 2 ) ) ) ) ) ) ; if ( date instanceof org . joda . time . IDENT_10 ) { date = ( ( org . joda . time . IDENT_10 ) ( date ) ) . METHOD_4 ( ) ; } java . lang . String IDENT_11 = "" ; if ( date instanceof org . joda . time . IDENT_12 ) { IDENT_11 = org . joda . time . format . IDENT_13 . METHOD_5 ( pattern ) . METHOD_6 ( IDENT_9 ) . METHOD_7 ( ( ( org . joda . time . IDENT_12 ) ( date ) ) ) ; } else if ( date instanceof java . util . Date ) { IDENT_11 = new java . text . METHOD_8 ( pattern , IDENT_9 ) . format ( ( ( java . util . Date ) ( date ) ) ) ; } else if ( date != null ) { throw new java . lang . IllegalArgumentException ( ( STRING_2 + ( date . getClass ( ) ) ) ) ; } return IDENT_11 ; }
org . junit . Assert . assertEquals ( expected , result ) 