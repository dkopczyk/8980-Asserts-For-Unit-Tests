METHOD_0 ( ) { int [ ] IDENT_0 = IDENT_1 . IDENT_2 . util . IDENT_3 . of ( 1 , 2 , 3 , 4 ) ; int [ ] IDENT_4 = IDENT_1 . IDENT_2 . util . IDENT_3 . of ( 2 , 3 , 7 ) ; int [ ] IDENT_5 = IDENT_1 . IDENT_2 . util . IDENT_3 . of ( 2 , 3 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( int [ ] , int [ ] ) { int IDENT_6 = IDENT_0 . length ; int IDENT_7 = IDENT_4 . length ; int IDENT_8 = IDENT_1 . IDENT_2 . util . IDENT_3 . METHOD_2 ( IDENT_0 , IDENT_4 ) ; if ( IDENT_8 == IDENT_6 ) return IDENT_0 ; if ( IDENT_8 == IDENT_7 ) return IDENT_4 ; int [ ] rs = new int [ IDENT_8 ] ; int IDENT_9 = 0 ; int IDENT_10 = 0 ; for ( int i = 0 ; i < ( rs . length ) ; i ++ ) { int x = IDENT_0 [ IDENT_9 ] ; int y = IDENT_4 [ IDENT_10 ] ; while ( x != y ) { if ( x < y ) { IDENT_9 ++ ; x = IDENT_0 [ IDENT_9 ] ; } else { IDENT_10 ++ ; y = IDENT_4 [ IDENT_10 ] ; } } rs [ i ] = x ; IDENT_9 ++ ; IDENT_10 ++ ; } return rs ; }
org . junit . Assert . assertArrayEquals ( IDENT_5 , IDENT_1 . IDENT_2 . util . IDENT_3 . METHOD_1 ( IDENT_0 , IDENT_4 ) ) 