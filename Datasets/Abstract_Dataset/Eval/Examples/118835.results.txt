METHOD_0 ( ) { final java . util . List < java . lang . Class < ? > > classes = nl . bzk . IDENT_0 . dal . domein . brp . entity . IDENT_1 . METHOD_1 ( nl . bzk . IDENT_0 . dal . domein . brp . entity . IDENT_1 . IDENT_2 ) ; final java . util . List < java . lang . Class < ? > > IDENT_3 = METHOD_2 ( classes ) ; for ( final java . lang . Class < ? > clazz : IDENT_3 ) { final java . lang . Object obj = clazz . METHOD_3 ( ) [ 0 ] ; final java . lang . reflect . Field [ ] IDENT_4 = clazz . METHOD_4 ( ) ; for ( final java . lang . reflect . Field IDENT_5 : IDENT_4 ) { final java . lang . reflect . Method IDENT_6 = METHOD_5 ( IDENT_5 ) ; if ( ( IDENT_6 != null ) && ( METHOD_6 ( IDENT_6 , IDENT_5 ) ) ) { IDENT_5 . METHOD_7 ( true ) ; "<AssertPlaceHolder>" ; } } } } get ( java . lang . Integer ) { final nl . bzk . brp . model . IDENT_7 . kern . IDENT_8 item = IDENT_9 . METHOD_8 ( id ) ; if ( item == null ) { throw new nl . bzk . brp . IDENT_10 . IDENT_11 . IDENT_12 . IDENT_13 . METHOD_9 ( ) ; } return item ; }
org . junit . Assert . assertSame ( IDENT_5 . get ( obj ) , IDENT_6 . invoke ( obj ) ) 