METHOD_0 ( ) { final nl . bzk . brp . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new nl . bzk . brp . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; org . mockito . Mockito . when ( request . METHOD_2 ( STRING_0 ) ) . thenReturn ( STRING_1 ) ; org . mockito . Mockito . when ( request . METHOD_3 ( ) ) . thenReturn ( STRING_2 ) ; org . mockito . Mockito . when ( request . METHOD_4 ( ) ) . thenReturn ( STRING_3 ) ; org . mockito . Mockito . when ( request . METHOD_5 ( ) ) . thenReturn ( new java . lang . StringBuffer ( STRING_4 ) ) ; org . mockito . Mockito . when ( request . METHOD_6 ( STRING_5 ) ) . thenReturn ( STRING_6 ) ; org . mockito . Mockito . when ( request . METHOD_6 ( STRING_7 ) ) . thenReturn ( STRING_8 ) ; final java . util . IDENT_5 < java . lang . String > IDENT_6 = new java . util . IDENT_5 < java . lang . String > ( ) { MOD_0 final java . util . List < java . lang . String > IDENT_7 = java . util . Arrays . asList ( STRING_5 , STRING_7 ) ; MOD_0 int IDENT_8 ; @ nl . bzk . brp . IDENT_0 . IDENT_1 . IDENT_2 . Override public boolean METHOD_7 ( ) { return ( IDENT_8 ) < 2 ; } @ nl . bzk . brp . IDENT_0 . IDENT_1 . IDENT_2 . Override public java . lang . String METHOD_8 ( ) { return IDENT_7 . get ( ( ( IDENT_8 ) ++ ) ) ; } } ; org . mockito . Mockito . when ( request . METHOD_9 ( ) ) . thenReturn ( IDENT_6 ) ; org . mockito . Mockito . when ( response . getStatus ( ) ) . thenReturn ( IDENT_9 . IDENT_10 ) ; org . mockito . Mockito . METHOD_10 ( new java . io . IOException ( "test" ) ) . when ( IDENT_11 ) . METHOD_11 ( request , response ) ; try { IDENT_4 . METHOD_12 ( request , response , IDENT_11 ) ; org . junit . Assert . fail ( ) ; } catch ( java . io . IOException | javax . servlet . IDENT_12 ex ) { "<AssertPlaceHolder>" ; } } size ( ) { return IDENT_13 . size ( ) ; }
org . junit . Assert . assertEquals ( 3 , events . size ( ) ) 