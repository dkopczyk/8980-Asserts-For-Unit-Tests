METHOD_0 ( ) { final nl . bzk . brp . bijhouding . bericht . model . IDENT_0 builder = new nl . bzk . brp . bijhouding . bericht . model . METHOD_1 ( ) ; final java . lang . String IDENT_1 = STRING_0 ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_2 IDENT_3 = builder . METHOD_2 ( STRING_1 , IDENT_1 ) ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_4 IDENT_5 = builder . METHOD_3 ( STRING_2 , true ) ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_6 IDENT_7 = builder . METHOD_4 ( STRING_3 , IDENT_8 . IDENT_9 , IDENT_3 , IDENT_5 ) ; IDENT_3 . METHOD_5 ( METHOD_6 ( ) ) ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_10 IDENT_11 = new nl . bzk . brp . bijhouding . bericht . model . METHOD_7 ( new nl . bzk . IDENT_12 . dal . domein . brp . entity . METHOD_8 ( nl . bzk . IDENT_12 . dal . domein . brp . IDENT_13 . IDENT_14 . IDENT_15 ) ) ; when ( METHOD_6 ( ) . METHOD_9 ( nl . bzk . brp . bijhouding . bericht . model . METHOD_7 . class , IDENT_1 ) ) . thenReturn ( IDENT_11 ) ; final java . util . List < nl . bzk . brp . bijhouding . bericht . model . IDENT_16 > IDENT_17 = IDENT_7 . METHOD_10 ( ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_18 . size ( ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_17 . size ( ) ) 