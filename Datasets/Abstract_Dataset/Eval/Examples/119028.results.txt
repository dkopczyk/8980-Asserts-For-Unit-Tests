METHOD_0 ( ) { final nl . bzk . brp . bijhouding . bericht . model . IDENT_0 . IDENT_1 IDENT_2 = new nl . bzk . brp . bijhouding . bericht . model . IDENT_0 . METHOD_1 ( ) ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_0 . IDENT_3 params = new nl . bzk . brp . bijhouding . bericht . model . IDENT_0 . METHOD_2 ( ) ; params . METHOD_3 ( INT_0 ) ; nl . bzk . brp . bijhouding . bericht . model . IDENT_4 IDENT_5 = builder . METHOD_4 ( STRING_0 , params ) ; IDENT_2 . METHOD_5 ( IDENT_5 ) ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_6 IDENT_7 = METHOD_6 ( IDENT_2 ) ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_8 IDENT_9 = mock ( nl . bzk . brp . bijhouding . bericht . model . IDENT_8 . class ) ; final nl . bzk . IDENT_10 . dal . domein . brp . entity . IDENT_11 IDENT_12 = new nl . bzk . IDENT_10 . dal . domein . brp . entity . METHOD_7 ( IDENT_9 , INT_0 , nl . bzk . brp . bijhouding . bericht . model . IDENT_13 . IDENT_14 ) ; when ( bericht . METHOD_8 ( nl . bzk . brp . bijhouding . bericht . model . IDENT_8 . class , nl . bzk . brp . bijhouding . bericht . model . IDENT_13 . IDENT_15 ) ) . thenReturn ( IDENT_9 ) ; when ( IDENT_9 . METHOD_9 ( IDENT_5 ) ) . thenReturn ( IDENT_12 ) ; nl . bzk . IDENT_10 . dal . domein . brp . entity . IDENT_16 IDENT_17 = IDENT_7 . METHOD_10 ( ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( ) { return METHOD_11 ( ) . METHOD_12 ( ) . METHOD_9 ( METHOD_11 ( ) . METHOD_13 ( ) ) ; }
org . junit . Assert . assertNotNull ( IDENT_17 ) 