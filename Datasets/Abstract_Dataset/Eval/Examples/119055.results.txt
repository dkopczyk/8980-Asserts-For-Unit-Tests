METHOD_0 ( ) { final nl . bzk . brp . bijhouding . bericht . model . IDENT_0 IDENT_1 = mock ( nl . bzk . brp . bijhouding . bericht . model . IDENT_0 . class ) ; when ( bericht . METHOD_1 ( nl . bzk . brp . bijhouding . bericht . model . IDENT_0 . class , nl . bzk . brp . bijhouding . bericht . model . IDENT_2 . IDENT_3 ) ) . thenReturn ( IDENT_1 ) ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_4 . IDENT_5 IDENT_6 = new nl . bzk . brp . bijhouding . bericht . model . IDENT_4 . METHOD_2 ( ) ; final java . lang . String IDENT_7 = STRING_0 ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_8 IDENT_9 = builder . METHOD_3 ( STRING_1 , IDENT_7 ) ; IDENT_6 . METHOD_4 ( IDENT_9 ) ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_10 IDENT_11 = METHOD_5 ( IDENT_6 ) ; when ( IDENT_1 . METHOD_6 ( IDENT_7 , nl . bzk . IDENT_12 . dal . domein . brp . entity . IDENT_13 . class ) ) . thenReturn ( null ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ) { nl . bzk . IDENT_12 . dal . domein . brp . entity . IDENT_14 result = null ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_0 IDENT_15 = METHOD_8 ( ) . METHOD_9 ( ) ; final java . lang . String IDENT_7 = METHOD_8 ( ) . METHOD_10 ( ) . METHOD_11 ( ) ; if ( ( IDENT_15 != null ) && ( IDENT_7 != null ) ) { result = IDENT_15 . METHOD_6 ( IDENT_7 , nl . bzk . IDENT_12 . dal . domein . brp . entity . IDENT_14 . class ) ; } return result ; }
org . junit . Assert . assertNull ( IDENT_11 . METHOD_7 ( ) ) 