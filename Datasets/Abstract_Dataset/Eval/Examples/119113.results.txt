METHOD_0 ( ) { int i = 0 ; for ( java . lang . String IDENT_0 : nl . bzk . brp . bijhouding . bericht . model . IDENT_1 . IDENT_2 ) { test ( STRING_0 , IDENT_0 , IDENT_3 . IDENT_4 ) ; i ++ ; } "<AssertPlaceHolder>" ; } test ( nl . bzk . brp . model . IDENT_5 . kern . IDENT_6 , nl . bzk . brp . model . IDENT_5 . kern . IDENT_6 , nl . bzk . brp . model . IDENT_5 . kern . IDENT_6 ) { final java . util . Set < nl . bzk . brp . model . IDENT_5 . kern . IDENT_6 > IDENT_7 = new java . util . METHOD_1 ( ) ; IDENT_7 . add ( IDENT_8 ) ; IDENT_7 . add ( IDENT_9 ) ; IDENT_7 . add ( IDENT_10 ) ; final java . util . Map < java . lang . Integer , java . lang . String > IDENT_11 = subject . METHOD_2 ( IDENT_7 ) ; org . junit . Assert . assertEquals ( 3 , IDENT_11 . size ( ) ) ; org . junit . Assert . assertEquals ( STRING_1 , IDENT_11 . get ( 2 ) ) ; org . junit . Assert . assertEquals ( STRING_1 , IDENT_11 . get ( 3 ) ) ; org . junit . Assert . assertEquals ( STRING_1 , IDENT_11 . get ( 6 ) ) ; }
org . junit . Assert . assertEquals ( i , nl . bzk . brp . bijhouding . bericht . model . IDENT_1 . IDENT_2 . length ) 