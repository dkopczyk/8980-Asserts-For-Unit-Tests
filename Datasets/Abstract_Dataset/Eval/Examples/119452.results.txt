METHOD_0 ( ) { final nl . bzk . brp . domain . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = METHOD_1 ( STRING_0 , 1 ) ; final nl . bzk . IDENT_4 . dal . domein . brp . IDENT_5 . IDENT_6 IDENT_7 = nl . bzk . IDENT_4 . dal . domein . brp . IDENT_5 . IDENT_6 . IDENT_8 ; final nl . bzk . IDENT_4 . dal . domein . brp . entity . IDENT_9 IDENT_10 = new nl . bzk . IDENT_4 . dal . domein . brp . entity . METHOD_2 ( nl . bzk . brp . domain . algemeen . IDENT_11 . METHOD_3 ( ) . METHOD_4 ( 1 ) . METHOD_5 ( STRING_0 ) . build ( ) , nl . bzk . IDENT_4 . dal . domein . brp . IDENT_5 . IDENT_12 . IDENT_13 ) ; final nl . bzk . IDENT_4 . dal . domein . brp . entity . IDENT_14 IDENT_15 = nl . bzk . brp . domain . algemeen . IDENT_16 . METHOD_6 ( 1 , IDENT_7 ) ; IDENT_15 . setId ( 1 ) ; IDENT_15 . METHOD_7 ( STRING_1 ) ; final nl . bzk . IDENT_4 . dal . domein . brp . entity . IDENT_17 IDENT_18 = new nl . bzk . IDENT_4 . dal . domein . brp . entity . METHOD_8 ( IDENT_10 , IDENT_15 ) ; final nl . bzk . brp . domain . algemeen . IDENT_19 IDENT_20 = new nl . bzk . brp . domain . algemeen . METHOD_9 ( IDENT_18 , null ) ; METHOD_10 ( true ) ; final nl . bzk . brp . service . algemeen . IDENT_21 . IDENT_22 IDENT_23 = new nl . bzk . brp . service . algemeen . IDENT_21 . METHOD_11 ( IDENT_3 , IDENT_24 , IDENT_20 ) ; final nl . bzk . brp . domain . algemeen . IDENT_25 IDENT_26 = IDENT_23 . METHOD_12 ( ) ; "<AssertPlaceHolder>" ; org . mockito . Mockito . METHOD_13 ( IDENT_24 ) ; } METHOD_12 ( ) { if ( ( ( ( IDENT_20 ) != null ) && ( ( IDENT_20 . METHOD_14 ( ) ) != null ) ) && ( ( IDENT_20 . METHOD_15 ( ) ) != null ) ) { final boolean IDENT_27 = METHOD_16 ( ) ; if ( ! METHOD_16 ) { return new nl . bzk . brp . domain . algemeen . METHOD_17 ( nl . bzk . IDENT_4 . dal . domein . brp . IDENT_5 . IDENT_28 . IDENT_29 ) ; } } return null ; }
org . junit . Assert . assertNull ( IDENT_26 ) 