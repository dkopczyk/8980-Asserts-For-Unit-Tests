METHOD_0 ( ) { final java . time . IDENT_0 IDENT_1 = java . time . IDENT_2 . of ( INT_0 , 10 , 10 ) . METHOD_1 ( IDENT_3 . IDENT_4 ) ; final java . time . IDENT_0 IDENT_5 = java . time . IDENT_2 . of ( INT_1 , 10 , 10 ) . METHOD_1 ( IDENT_3 . IDENT_4 ) ; final nl . bzk . brp . domain . IDENT_6 . IDENT_7 IDENT_8 = METHOD_2 ( IDENT_1 ) ; final nl . bzk . brp . domain . IDENT_6 . IDENT_7 IDENT_9 = METHOD_2 ( IDENT_5 ) ; final int compare = IDENT_10 . INSTANCE . compare ( null , IDENT_9 ) ; "<AssertPlaceHolder>" ; } compare ( nl . bzk . brp . model . IDENT_11 . kern . IDENT_12 , nl . bzk . brp . model . IDENT_11 . kern . IDENT_12 ) { if ( ( IDENT_13 == null ) || ( IDENT_14 == null ) ) { throw new java . lang . IllegalArgumentException ( STRING_0 ) ; } int IDENT_15 ; if ( ( IDENT_13 . METHOD_3 ( ) ) == ( IDENT_14 . METHOD_3 ( ) ) ) { IDENT_15 = 0 ; } else if ( ( IDENT_13 . METHOD_3 ( ) ) == null ) { IDENT_15 = 1 ; } else if ( ( IDENT_14 . METHOD_3 ( ) ) == null ) { IDENT_15 = - 1 ; } else { IDENT_15 = ( IDENT_13 . METHOD_3 ( ) . compareTo ( IDENT_14 . METHOD_3 ( ) ) ) * ( - 1 ) ; } if ( IDENT_15 == 0 ) { IDENT_15 = METHOD_4 ( IDENT_13 , IDENT_14 ) ; } return IDENT_15 ; }
org . junit . Assert . assertEquals ( 1 , compare ) 