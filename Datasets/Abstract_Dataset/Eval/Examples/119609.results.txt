METHOD_0 ( ) { nl . bzk . brp . domain . IDENT_0 . IDENT_1 . Builder IDENT_2 = new nl . bzk . brp . domain . IDENT_0 . IDENT_1 . Builder ( null ) ; IDENT_2 . METHOD_1 ( Element . IDENT_3 . getId ( ) ) ; final nl . bzk . brp . domain . IDENT_0 . IDENT_1 IDENT_4 = IDENT_2 . build ( null ) ; final int IDENT_5 = INT_0 ; final int IDENT_6 = 1 ; final int IDENT_7 = 1 ; final java . time . IDENT_8 IDENT_9 = METHOD_2 ( IDENT_5 , IDENT_6 , IDENT_7 ) ; java . util . Calendar IDENT_10 = java . util . Calendar . getInstance ( ) ; IDENT_10 . set ( IDENT_5 , IDENT_6 , IDENT_7 ) ; final nl . bzk . brp . domain . IDENT_0 . IDENT_11 IDENT_12 = nl . bzk . brp . domain . IDENT_0 . IDENT_13 . METHOD_3 ( 1 , IDENT_9 ) ; nl . bzk . brp . domain . IDENT_0 . IDENT_14 . Builder IDENT_15 = new nl . bzk . brp . domain . IDENT_0 . IDENT_14 . Builder ( IDENT_2 ) ; IDENT_15 . METHOD_4 ( IDENT_12 ) ; IDENT_15 . METHOD_5 ( METHOD_6 ( IDENT_5 , IDENT_6 , IDENT_7 ) ) ; IDENT_15 . METHOD_7 ( METHOD_6 ( ( IDENT_5 + 1 ) , IDENT_6 , IDENT_7 ) ) ; final nl . bzk . brp . domain . IDENT_0 . IDENT_14 IDENT_16 = IDENT_15 . build ( IDENT_4 ) ; final java . lang . Integer IDENT_17 = METHOD_6 ( INT_1 , 6 , IDENT_7 ) ; final java . time . IDENT_8 IDENT_18 = METHOD_2 ( IDENT_5 , IDENT_6 , IDENT_7 ) ; final nl . bzk . brp . domain . IDENT_0 . IDENT_19 . IDENT_20 IDENT_21 = new nl . bzk . brp . domain . IDENT_0 . IDENT_19 . METHOD_8 ( IDENT_17 , IDENT_18 , nl . bzk . IDENT_22 . dal . domein . brp . IDENT_23 . IDENT_24 . IDENT_25 ) ; final boolean apply = IDENT_21 . apply ( IDENT_16 ) ; "<AssertPlaceHolder>" ; } apply ( T ) { return IDENT_26 . apply ( input ) ; }
org . junit . Assert . assertThat ( apply , org . hamcrest . core . Is . is ( false ) ) 