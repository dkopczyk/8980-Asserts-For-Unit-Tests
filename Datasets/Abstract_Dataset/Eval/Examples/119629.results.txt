METHOD_0 ( ) { final nl . bzk . brp . domain . IDENT_0 . IDENT_1 IDENT_2 = METHOD_1 ( ) ; final nl . bzk . brp . domain . IDENT_0 . IDENT_3 . IDENT_4 IDENT_5 = new nl . bzk . brp . domain . IDENT_0 . IDENT_3 . METHOD_2 ( IDENT_2 , 1L ) ; final nl . bzk . brp . service . IDENT_6 . algemeen . IDENT_7 IDENT_8 = new nl . bzk . brp . service . IDENT_6 . algemeen . METHOD_3 ( ) ; final nl . bzk . brp . service . IDENT_6 . algemeen . IDENT_9 IDENT_10 = new nl . bzk . brp . service . IDENT_6 . algemeen . METHOD_4 ( IDENT_8 , null , new nl . bzk . brp . service . IDENT_6 . algemeen . METHOD_5 ( nl . bzk . IDENT_11 . dal . domein . brp . IDENT_12 . IDENT_13 . IDENT_14 ) , null , new nl . bzk . brp . service . IDENT_6 . IDENT_15 . METHOD_6 ( ) ) ; IDENT_10 . METHOD_7 ( true ) ; IDENT_10 . METHOD_8 ( METHOD_1 ( ) ) ; final nl . bzk . brp . domain . IDENT_0 . IDENT_16 IDENT_17 = IDENT_5 . METHOD_9 ( ) . METHOD_10 ( METHOD_11 ( Element . IDENT_18 ) ) . iterator ( ) . next ( ) . METHOD_12 ( ) . iterator ( ) . next ( ) ; IDENT_10 . METHOD_8 ( IDENT_17 ) ; IDENT_19 . execute ( IDENT_10 ) ; "<AssertPlaceHolder>" ; } METHOD_13 ( ) { return IDENT_20 ; }
org . junit . Assert . assertFalse ( IDENT_10 . METHOD_13 ( ) ) 