METHOD_0 ( ) { IDENT_0 . METHOD_1 ( ) . METHOD_2 ( IDENT_1 . IDENT_2 ) ; IDENT_0 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( null ) ; final boolean IDENT_3 = service . METHOD_6 ( IDENT_0 , IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( nl . bzk . IDENT_5 . dal . domein . brp . entity . IDENT_6 , nl . bzk . IDENT_5 . dal . domein . brp . entity . IDENT_7 ) { if ( METHOD_7 ( IDENT_8 , IDENT_4 ) ) { return false ; } final nl . bzk . IDENT_5 . dal . domein . brp . entity . IDENT_9 IDENT_10 = IDENT_8 . METHOD_1 ( ) ; final nl . bzk . IDENT_5 . dal . domein . brp . entity . IDENT_11 IDENT_12 = IDENT_8 . METHOD_3 ( ) ; try { nl . bzk . brp . service . algemeen . IDENT_13 . IDENT_14 . METHOD_8 ( IDENT_4 ) ; nl . bzk . brp . service . algemeen . IDENT_13 . IDENT_14 . METHOD_9 ( IDENT_4 . METHOD_10 ( ) ) ; nl . bzk . brp . service . algemeen . IDENT_13 . IDENT_14 . METHOD_11 ( IDENT_8 ) ; nl . bzk . brp . service . algemeen . IDENT_13 . IDENT_14 . METHOD_12 ( IDENT_10 ) ; nl . bzk . brp . service . algemeen . IDENT_13 . IDENT_14 . METHOD_13 ( IDENT_4 ) ; nl . bzk . brp . service . algemeen . IDENT_13 . IDENT_14 . METHOD_14 ( IDENT_4 . METHOD_10 ( ) ) ; nl . bzk . brp . service . algemeen . IDENT_13 . IDENT_14 . METHOD_15 ( IDENT_8 ) ; nl . bzk . brp . service . algemeen . IDENT_13 . IDENT_14 . METHOD_16 ( IDENT_10 ) ; nl . bzk . brp . service . algemeen . IDENT_13 . IDENT_14 . METHOD_17 ( IDENT_12 ) ; nl . bzk . brp . service . algemeen . IDENT_13 . IDENT_14 . METHOD_18 ( IDENT_12 ) ; nl . bzk . brp . service . algemeen . IDENT_13 . IDENT_14 . METHOD_19 ( IDENT_10 , IDENT_12 . METHOD_4 ( ) , ( ( IDENT_10 . METHOD_20 ( ) ) == ( nl . bzk . IDENT_5 . dal . domein . brp . IDENT_15 . IDENT_1 . IDENT_16 ) ) ) ; } catch ( nl . bzk . brp . service . algemeen . IDENT_13 . IDENT_17 e ) { nl . bzk . brp . service . IDENT_18 . IDENT_19 . job . IDENT_20 . LOGGER . info ( ( STRING_0 + e ) , IDENT_8 . getId ( ) , IDENT_4 . getId ( ) ) ; return false ; } return true ; }
org . junit . Assert . assertTrue ( IDENT_3 ) 