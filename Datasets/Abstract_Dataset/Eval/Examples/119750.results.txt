METHOD_0 ( ) { final nl . bzk . migratiebrp . conversie . model . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new nl . bzk . migratiebrp . conversie . model . IDENT_0 . IDENT_1 . METHOD_1 ( nl . bzk . migratiebrp . conversie . model . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 , ( - 1 ) , 0 ) ; IDENT_3 . METHOD_2 ( IDENT_7 . IDENT_8 , STRING_0 8 ) ; IDENT_3 . METHOD_2 ( IDENT_7 . IDENT_9 , STRING_1 0 ) ; final nl . bzk . migratiebrp . conversie . model . IDENT_0 . IDENT_1 . METHOD_1 IDENT_10 = new nl . bzk . migratiebrp . conversie . model . IDENT_0 . IDENT_1 . METHOD_1 ( nl . bzk . migratiebrp . conversie . model . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_11 , ( - 1 ) , 1 ) ; IDENT_10 . METHOD_2 ( IDENT_7 . IDENT_8 , STRING_0 7 ) ; IDENT_10 . METHOD_2 ( IDENT_7 . IDENT_9 , STRING_0 7 ) ; final nl . bzk . migratiebrp . conversie . model . IDENT_0 . IDENT_1 . METHOD_1 IDENT_12 = new nl . bzk . migratiebrp . conversie . model . IDENT_0 . IDENT_1 . METHOD_1 ( nl . bzk . migratiebrp . conversie . model . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_13 , ( - 1 ) , 0 ) ; IDENT_12 . METHOD_2 ( IDENT_7 . IDENT_14 , STRING_1 8 ) ; IDENT_12 . METHOD_2 ( IDENT_7 . IDENT_15 , STRING_2 ) ; final nl . bzk . migratiebrp . conversie . model . IDENT_0 . IDENT_1 . METHOD_1 IDENT_16 = new nl . bzk . migratiebrp . conversie . model . IDENT_0 . IDENT_1 . METHOD_1 ( nl . bzk . migratiebrp . conversie . model . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_17 , ( - 1 ) , 1 ) ; IDENT_16 . METHOD_2 ( IDENT_7 . IDENT_14 , STRING_0 ) ; IDENT_16 . METHOD_2 ( IDENT_7 . IDENT_15 , STRING_0 4 ) ; final java . util . List < nl . bzk . migratiebrp . conversie . model . IDENT_0 . IDENT_1 . METHOD_1 > IDENT_18 = java . util . Arrays . asList ( IDENT_3 , IDENT_10 , IDENT_12 , IDENT_16 ) ; final java . util . List < java . lang . String > IDENT_19 = java . util . Arrays . asList ( STRING_1 4 , STRING_2 1 , STRING_3 7 , STRING_0 6 , STRING_3 0 , STRING_1 , STRING_2 0 , STRING_0 3 , STRING_1 7 , STRING_1 9 , STRING_3 , STRING_2 2 , STRING_3 5 , STRING_0 2 , STRING_2 5 , STRING_2 3 , STRING_4 , STRING_0 0 , STRING_5 , STRING_1 3 , STRING_1 1 , STRING_0 1 , STRING_6 , STRING_3 2 , STRING_7 , STRING_0 9 , STRING_1 2 , STRING_1 5 , STRING_3 8 , STRING_3 9 , STRING_3 6 , STRING_0 5 , STRING_8 , STRING_1 6 , STRING_3 4 , STRING_3 1 , STRING_2 4 , STRING_9 ) ; final java . util . List < nl . bzk . migratiebrp . conversie . model . IDENT_0 . IDENT_1 . METHOD_1 > IDENT_20 = subject . filter ( null , null , null , null , IDENT_18 , IDENT_19 ) ; System . out . println ( ( STRING_3 3 + IDENT_20 ) ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_21 . size ( ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_20 . size ( ) ) 