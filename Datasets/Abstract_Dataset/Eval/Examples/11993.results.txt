METHOD_0 ( ) { java . util . Map < java . net . IDENT_0 , java . util . Set < java . lang . String > > IDENT_1 = new java . util . HashMap < java . net . IDENT_0 , java . util . Set < java . lang . String > > ( ) ; java . util . Set < java . lang . String > streams = new java . util . HashSet < java . lang . String > ( ) ; for ( int j = 0 ; j < 10 ; j ++ ) { streams . add ( ( STRING_0 + j ) ) ; } int port = 1000 ; java . net . IDENT_0 address = new java . net . METHOD_1 ( STRING_1 , port ) ; IDENT_1 . put ( address , streams ) ; java . util . Set < java . lang . String > IDENT_2 = new java . util . HashSet < java . lang . String > ( ) ; org . apache . IDENT_3 . service . IDENT_4 . IDENT_5 IDENT_6 = new org . apache . IDENT_3 . service . IDENT_4 . METHOD_2 ( IDENT_1 ) ; org . apache . IDENT_3 . service . IDENT_4 . IDENT_7 IDENT_8 = org . apache . IDENT_3 . service . IDENT_4 . IDENT_7 . of ( IDENT_6 , 1 ) ; for ( int l = 0 ; l < 10 ; l ++ ) { java . lang . String s = IDENT_8 . METHOD_3 ( ) ; if ( null != s ) { IDENT_2 . add ( s ) ; } } "<AssertPlaceHolder>" ; } size ( ) { return IDENT_9 . size ( ) ; }
org . junit . Assert . assertEquals ( 1 , IDENT_2 . size ( ) ) 