METHOD_0 ( ) { final org . apache . IDENT_0 . service . IDENT_1 . IDENT_2 IDENT_3 = new org . apache . IDENT_0 . service . IDENT_1 . METHOD_1 ( STRING_0 ) ; for ( int i = 0 ; i < 20 ; i ++ ) { IDENT_3 . METHOD_2 ( new org . apache . IDENT_0 . service . IDENT_1 . METHOD_3 ( ( STRING_1 + i ) , i ) ) ; } "<AssertPlaceHolder>" ; } METHOD_4 ( byte [ ] ) { org . apache . IDENT_0 . service . IDENT_1 . IDENT_4 . METHOD_1 IDENT_5 = new org . apache . IDENT_0 . service . IDENT_1 . IDENT_4 . METHOD_1 ( ) ; org . apache . IDENT_4 . transport . IDENT_6 transport = new org . apache . IDENT_4 . transport . METHOD_5 ( data ) ; org . apache . IDENT_4 . protocol . IDENT_7 protocol = new org . apache . IDENT_4 . protocol . METHOD_6 ( transport ) ; try { IDENT_5 . read ( protocol ) ; org . apache . IDENT_0 . service . IDENT_1 . METHOD_1 IDENT_3 = new org . apache . IDENT_0 . service . IDENT_1 . METHOD_1 ( IDENT_5 . METHOD_7 ( ) ) ; if ( IDENT_5 . METHOD_8 ( ) ) { for ( org . apache . IDENT_0 . service . IDENT_1 . IDENT_4 . METHOD_3 IDENT_8 : IDENT_5 . METHOD_9 ( ) ) { IDENT_3 . METHOD_2 ( new org . apache . IDENT_0 . service . IDENT_1 . METHOD_3 ( IDENT_8 . METHOD_10 ( ) , IDENT_8 . METHOD_11 ( ) ) ) ; } } return IDENT_3 ; } catch ( org . apache . IDENT_4 . IDENT_9 e ) { throw new java . io . IOException ( STRING_2 , e ) ; } }
org . junit . Assert . assertEquals ( IDENT_3 , org . apache . IDENT_0 . service . IDENT_1 . METHOD_1 . METHOD_4 ( IDENT_3 . serialize ( ) ) ) 