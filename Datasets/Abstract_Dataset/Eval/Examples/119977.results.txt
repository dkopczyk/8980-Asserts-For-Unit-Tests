METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; org . mockito . Mockito . METHOD_1 ( new java . lang . IllegalArgumentException ( nl . bzk . migratiebrp . IDENT_1 . IDENT_2 . service . impl . IDENT_3 . IDENT_4 ) ) . when ( IDENT_5 ) . METHOD_2 ( IDENT_0 ) ; final java . lang . String IDENT_6 = IDENT_7 . METHOD_3 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( int ) { final int IDENT_8 = 4 ; java . lang . String result ; try { final nl . bzk . migratiebrp . synchronisatie . dal . domein . brp . kern . entity . IDENT_9 IDENT_10 = METHOD_4 ( ) . METHOD_2 ( IDENT_11 ) ; final java . lang . String IDENT_0 = nl . bzk . migratiebrp . IDENT_1 . IDENT_2 . util . IDENT_12 . METHOD_5 ( java . lang . Integer . toString ( IDENT_10 . getCode ( ) ) , IDENT_8 ) ; result = java . lang . String . format ( nl . bzk . migratiebrp . IDENT_1 . IDENT_2 . service . impl . IDENT_13 , IDENT_0 , IDENT_10 . METHOD_6 ( ) ) ; } catch ( final java . lang . IllegalArgumentException IDENT_14 ) { final java . lang . String IDENT_15 = java . lang . String . format ( nl . bzk . migratiebrp . IDENT_1 . IDENT_2 . service . impl . IDENT_16 , STRING_1 , IDENT_11 ) ; nl . bzk . migratiebrp . IDENT_1 . IDENT_2 . service . impl . IDENT_17 . LOG . warn ( IDENT_15 ) ; result = java . lang . String . valueOf ( IDENT_11 ) ; } return result ; }
org . junit . Assert . assertEquals ( STRING_0 , IDENT_6 ) 