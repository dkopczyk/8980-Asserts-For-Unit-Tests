METHOD_0 ( ) { org . mockito . Mockito . when ( IDENT_0 . METHOD_1 ( STRING_0 ) ) . thenReturn ( null ) ; org . mockito . Mockito . when ( IDENT_0 . METHOD_1 ( STRING_1 ) ) . thenReturn ( 4 ) ; "<AssertPlaceHolder>" ; } execute ( java . util . Map ) { nl . bzk . migratiebrp . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . LOG . debug ( STRING_2 , parameters ) ; final java . lang . Long IDENT_5 = ( ( java . lang . Long ) ( parameters . get ( STRING_3 ) ) ) ; final nl . bzk . migratiebrp . bericht . model . IDENT_6 . IDENT_7 input = ( ( nl . bzk . migratiebrp . bericht . model . IDENT_6 . IDENT_7 ) ( IDENT_8 . METHOD_2 ( IDENT_5 ) ) ) ; final nl . bzk . migratiebrp . bericht . model . sync . IDENT_9 IDENT_10 = METHOD_3 ( input ) ; final java . lang . Long IDENT_11 = IDENT_8 . METHOD_4 ( IDENT_10 ) ; final java . util . Map < java . lang . String , java . lang . Object > result = new java . util . HashMap ( ) ; result . put ( STRING_4 , IDENT_11 ) ; nl . bzk . migratiebrp . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . LOG . debug ( STRING_5 , result ) ; return result ; }
org . junit . Assert . assertNull ( subject . execute ( null ) ) 