METHOD_0 ( ) { final java . util . List < java . lang . Long > IDENT_0 = new java . util . ArrayList ( ) ; IDENT_0 . add ( java . lang . Long . valueOf ( STRING_0 ) ) ; IDENT_0 . add ( java . lang . Long . valueOf ( STRING_1 ) ) ; final java . util . List < java . lang . String > IDENT_1 = new java . util . ArrayList ( ) ; IDENT_1 . add ( STRING_2 ) ; IDENT_1 . add ( STRING_3 ) ; final java . lang . String IDENT_2 = ( ( ( ( ( ( ( IDENT_1 . get ( 0 ) ) + STRING_4 ) + ( IDENT_0 . get ( 0 ) ) ) + "\n" ) + ( IDENT_1 . get ( 1 ) ) ) + STRING_4 ) + ( IDENT_0 . get ( 1 ) ) ) + "\n" ; final nl . bzk . migratiebrp . bericht . model . IDENT_3 . impl . IDENT_4 IDENT_5 = new nl . bzk . migratiebrp . bericht . model . IDENT_3 . impl . METHOD_1 ( ) ; IDENT_5 . METHOD_2 ( IDENT_2 ) ; METHOD_3 ( IDENT_5 ) ; "<AssertPlaceHolder>" ; METHOD_4 ( IDENT_0 , IDENT_1 ) ; } METHOD_5 ( ) { final org . IDENT_6 . IDENT_7 IDENT_8 = org . IDENT_6 . IDENT_9 . getInstance ( ) . METHOD_6 ( ) ; try { final org . IDENT_6 . graph . IDENT_10 . IDENT_11 IDENT_12 = IDENT_8 . METHOD_7 ( IDENT_13 ) ; return IDENT_12 . METHOD_8 ( ) ; } finally { IDENT_8 . close ( ) ; } }
org . junit . Assert . assertTrue ( METHOD_5 ( ) ) 