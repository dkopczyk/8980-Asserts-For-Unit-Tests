METHOD_0 ( ) { final java . util . List < org . apache . drill . common . types . IDENT_0 . IDENT_1 > IDENT_2 = org . apache . drill . IDENT_3 . IDENT_4 . com . google . common . collect . Lists . newArrayList ( ) ; IDENT_2 . add ( IDENT_0 . IDENT_1 . IDENT_5 ) ; IDENT_2 . add ( IDENT_0 . IDENT_1 . IDENT_6 ) ; final org . apache . drill . common . types . IDENT_0 . IDENT_1 result = org . apache . drill . exec . resolver . IDENT_7 . METHOD_1 ( IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . util . List ) { assert ( types . size ( ) ) >= 2 ; org . apache . drill . common . types . IDENT_0 . IDENT_1 result = types . get ( 0 ) ; if ( result == ( org . apache . drill . common . types . IDENT_0 . IDENT_1 . IDENT_8 ) ) { return result ; } int IDENT_9 = IDENT_10 . IDENT_11 . get ( result ) ; for ( int i = 1 ; i < ( types . size ( ) ) ; i ++ ) { org . apache . drill . common . types . IDENT_0 . IDENT_1 next = types . get ( i ) ; if ( next == ( org . apache . drill . common . types . IDENT_0 . IDENT_1 . IDENT_8 ) ) { return next ; } if ( next == result ) { continue ; } int IDENT_12 = IDENT_10 . IDENT_11 . get ( next ) ; if ( ( org . apache . drill . exec . resolver . IDENT_7 . METHOD_2 ( next , result ) ) && ( IDENT_9 >= IDENT_12 ) ) { continue ; } else if ( ( org . apache . drill . exec . resolver . IDENT_7 . METHOD_2 ( result , next ) ) && ( IDENT_12 >= IDENT_9 ) ) { result = next ; IDENT_9 = IDENT_12 ; } else { return null ; } } return result ; }
org . junit . Assert . assertEquals ( result , IDENT_0 . IDENT_1 . IDENT_5 ) 