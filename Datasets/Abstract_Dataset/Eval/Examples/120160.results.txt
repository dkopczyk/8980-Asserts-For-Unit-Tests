METHOD_0 ( ) { final nl . bzk . migratiebrp . conversie . model . brp . IDENT_0 IDENT_1 = new nl . bzk . migratiebrp . conversie . model . brp . METHOD_1 ( ) . METHOD_2 ( 1L ) . METHOD_3 ( 1L ) . build ( ) ; final nl . bzk . migratiebrp . conversie . model . brp . IDENT_0 IDENT_2 = new nl . bzk . migratiebrp . conversie . model . brp . METHOD_1 ( ) . METHOD_2 ( INT_0 ) . METHOD_3 ( INT_1 ) . build ( ) ; final nl . bzk . migratiebrp . bericht . model . sync . impl . IDENT_3 IDENT_4 = METHOD_4 ( nl . bzk . migratiebrp . synchronisatie . runtime . service . synchronisatie . IDENT_5 . IDENT_6 . IDENT_7 , INT_2 ) ; final nl . bzk . migratiebrp . synchronisatie . runtime . service . synchronisatie . IDENT_8 . context . IDENT_9 context = METHOD_5 ( IDENT_4 ) ; org . mockito . Mockito . when ( IDENT_10 . METHOD_6 ( 1L ) ) . thenReturn ( IDENT_1 ) ; org . mockito . Mockito . when ( IDENT_10 . METHOD_6 ( INT_0 ) ) . thenReturn ( IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( nl . bzk . migratiebrp . synchronisatie . runtime . service . synchronisatie . IDENT_8 . context . IDENT_9 ) { final nl . bzk . migratiebrp . synchronisatie . runtime . service . synchronisatie . IDENT_8 . logging . IDENT_11 logging = new nl . bzk . migratiebrp . synchronisatie . runtime . service . synchronisatie . IDENT_8 . logging . METHOD_8 ( nl . bzk . migratiebrp . synchronisatie . runtime . service . synchronisatie . IDENT_8 . logging . IDENT_12 . IDENT_13 ) ; final nl . bzk . migratiebrp . synchronisatie . runtime . service . synchronisatie . METHOD_7 . logging . IDENT_14 result ; if ( IDENT_15 . METHOD_9 ( context ) ) { logging . METHOD_10 ( IDENT_16 . IDENT_17 ) ; result = nl . bzk . migratiebrp . synchronisatie . runtime . service . synchronisatie . METHOD_7 . logging . IDENT_14 . IDENT_18 ; } else if ( IDENT_19 . METHOD_9 ( context ) ) { logging . METHOD_10 ( IDENT_16 . IDENT_20 ) ; result = nl . bzk . migratiebrp . synchronisatie . runtime . service . synchronisatie . METHOD_7 . logging . IDENT_14 . IDENT_18 ; } else if ( IDENT_21 . METHOD_9 ( context ) ) { logging . METHOD_10 ( IDENT_16 . IDENT_22 ) ; result = nl . bzk . migratiebrp . synchronisatie . runtime . service . synchronisatie . METHOD_7 . logging . IDENT_14 . IDENT_18 ; } else if ( IDENT_23 . METHOD_9 ( context ) ) { logging . METHOD_10 ( IDENT_16 . IDENT_24 ) ; result = nl . bzk . migratiebrp . synchronisatie . runtime . service . synchronisatie . METHOD_7 . logging . IDENT_14 . IDENT_18 ; } else if ( IDENT_25 . METHOD_9 ( context ) ) { logging . METHOD_10 ( IDENT_16 . IDENT_26 ) ; result = nl . bzk . migratiebrp . synchronisatie . runtime . service . synchronisatie . METHOD_7 . logging . IDENT_14 . IDENT_18 ; } else if ( IDENT_27 . METHOD_9 ( context ) ) { logging . METHOD_10 ( IDENT_16 . IDENT_28 ) ; result = nl . bzk . migratiebrp . synchronisatie . runtime . service . synchronisatie . METHOD_7 . logging . IDENT_14 . IDENT_29 ; } else if ( IDENT_30 . METHOD_9 ( context ) ) { logging . METHOD_10 ( IDENT_16 . IDENT_31 ) ; result = nl . bzk . migratiebrp . synchronisatie . runtime . service . synchronisatie . METHOD_7 . logging . IDENT_14 . IDENT_32 ; } else if ( IDENT_33 . METHOD_9 ( context ) ) { logging . METHOD_10 ( IDENT_16 . IDENT_34 ) ; result = nl . bzk . migratiebrp . synchronisatie . runtime . service . synchronisatie . METHOD_7 . logging . IDENT_14 . IDENT_32 ; } else if ( IDENT_35 . METHOD_9 ( context ) ) { logging . METHOD_10 ( IDENT_16 . IDENT_36 ) ; result = nl . bzk . migratiebrp . synchronisatie . runtime . service . synchronisatie . METHOD_7 . logging . IDENT_14 . IDENT_32 ; } else { logging . METHOD_10 ( IDENT_16 . IDENT_37 ) ; result = nl . bzk . migratiebrp . synchronisatie . runtime . service . synchronisatie . METHOD_7 . logging . IDENT_14 . IDENT_38 ; IDENT_39 . METHOD_11 ( context ) ; IDENT_40 . METHOD_11 ( context ) ; IDENT_41 . METHOD_11 ( context ) ; } return result ; }
org . junit . Assert . assertFalse ( subject . METHOD_7 ( context ) ) 