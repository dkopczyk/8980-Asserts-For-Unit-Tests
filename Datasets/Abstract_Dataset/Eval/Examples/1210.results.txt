METHOD_0 ( ) { org . apache . IDENT_0 . api . resource . IDENT_1 IDENT_2 = context . METHOD_1 ( ) ; org . apache . IDENT_0 . testing . mock . IDENT_0 . servlet . IDENT_3 request = context . request ( ) ; request . METHOD_2 ( METHOD_1 . getResource ( STRING_0 ) ) ; org . apache . IDENT_0 . testing . mock . IDENT_0 . servlet . IDENT_4 IDENT_5 = ( ( org . apache . IDENT_0 . testing . mock . IDENT_0 . servlet . IDENT_4 ) ( request . METHOD_3 ( ) ) ) ; IDENT_5 . METHOD_4 ( STRING_1 ) ; IDENT_5 . METHOD_5 ( STRING_2 ) ; IDENT_5 . METHOD_6 ( STRING_3 ) ; request . METHOD_7 ( STRING_4 ) ; java . lang . String expResult = STRING_5 ; java . lang . String result = com . IDENT_6 . IDENT_7 . commons . util . IDENT_8 . METHOD_8 ( request ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( org . apache . IDENT_0 . api . IDENT_9 ) { final java . lang . String [ ] IDENT_10 = com . IDENT_6 . IDENT_7 . commons . util . IDENT_8 . METHOD_9 ( request ) ; if ( ( IDENT_10 . length ) < 1 ) { return null ; } else { return IDENT_10 [ ( ( IDENT_10 . length ) - 1 ) ] ; } }
org . junit . Assert . assertEquals ( expResult , result ) 