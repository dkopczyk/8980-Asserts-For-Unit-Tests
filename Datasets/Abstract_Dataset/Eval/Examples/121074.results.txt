METHOD_0 ( ) { final nl . bzk . brp . model . objecttype . operationeel . IDENT_0 IDENT_1 = mock ( nl . bzk . brp . model . objecttype . operationeel . IDENT_0 . class ) ; final nl . bzk . brp . model . objecttype . bericht . IDENT_2 IDENT_3 = METHOD_1 ( IDENT_4 . IDENT_5 , "1" ) ; final nl . bzk . brp . model . objecttype . bericht . IDENT_2 IDENT_6 = METHOD_1 ( IDENT_4 . IDENT_7 , "2" ) ; final nl . bzk . brp . model . objecttype . bericht . IDENT_2 IDENT_8 = METHOD_1 ( IDENT_4 . IDENT_7 , STRING_0 ) ; final nl . bzk . brp . model . objecttype . operationeel . IDENT_9 IDENT_10 = mock ( nl . bzk . brp . model . objecttype . operationeel . IDENT_9 . class ) ; final nl . bzk . brp . model . objecttype . operationeel . IDENT_9 IDENT_11 = mock ( nl . bzk . brp . model . objecttype . operationeel . IDENT_9 . class ) ; final nl . bzk . brp . model . objecttype . bericht . IDENT_12 IDENT_13 = new nl . bzk . brp . model . objecttype . bericht . METHOD_2 ( ) ; IDENT_13 . METHOD_3 ( IDENT_14 . IDENT_15 ) ; IDENT_13 . METHOD_4 ( java . util . Arrays . asList ( IDENT_3 , IDENT_8 , IDENT_6 ) ) ; final nl . bzk . brp . model . IDENT_16 . operationeel . IDENT_17 . IDENT_18 IDENT_19 = mock ( nl . bzk . brp . model . IDENT_16 . operationeel . IDENT_17 . IDENT_18 . class ) ; final nl . bzk . brp . model . IDENT_16 . operationeel . IDENT_17 . IDENT_18 IDENT_20 = mock ( nl . bzk . brp . model . IDENT_16 . operationeel . IDENT_17 . IDENT_18 . class ) ; when ( IDENT_21 . METHOD_5 ( new nl . bzk . brp . model . IDENT_22 . METHOD_6 ( "2" ) ) ) . thenReturn ( IDENT_11 ) ; when ( IDENT_21 . METHOD_5 ( new nl . bzk . brp . model . IDENT_22 . METHOD_6 ( STRING_0 ) ) ) . thenReturn ( IDENT_10 ) ; org . springframework . test . util . IDENT_23 . METHOD_7 ( IDENT_19 , STRING_1 , nl . bzk . brp . util . IDENT_24 . METHOD_8 ( ) ) ; when ( IDENT_11 . METHOD_9 ( ) ) . thenReturn ( IDENT_19 ) ; when ( IDENT_10 . METHOD_9 ( ) ) . thenReturn ( IDENT_20 ) ; when ( IDENT_19 . METHOD_10 ( ) ) . thenReturn ( nl . bzk . brp . util . IDENT_24 . METHOD_11 ( ) ) ; when ( IDENT_20 . METHOD_10 ( ) ) . thenReturn ( nl . bzk . brp . util . IDENT_24 . METHOD_11 ( ) ) ; java . util . List < nl . bzk . brp . model . validatie . IDENT_25 > IDENT_26 = IDENT_27 . METHOD_12 ( IDENT_1 , IDENT_13 , null ) ; "<AssertPlaceHolder>" ; verify ( IDENT_21 , times ( 2 ) ) . METHOD_5 ( METHOD_13 ( nl . bzk . brp . model . IDENT_22 . METHOD_6 . class ) ) ; } size ( ) { return IDENT_28 . size ( ) ; }
org . junit . Assert . assertThat ( IDENT_26 . size ( ) , org . hamcrest . core . Is . is ( 2 ) ) 