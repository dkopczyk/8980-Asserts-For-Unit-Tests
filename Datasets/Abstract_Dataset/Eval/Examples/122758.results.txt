METHOD_0 ( ) { nl . bzk . brp . IDENT_0 . model . IDENT_1 bericht = new nl . bzk . brp . IDENT_0 . model . METHOD_1 ( ) ; bericht . METHOD_2 ( STRING_0 0 ) ; bericht . METHOD_3 ( STRING_1 ) ; bericht . METHOD_4 ( STRING_2 ) ; bericht . METHOD_5 ( 2 ) ; java . util . Calendar IDENT_2 = java . util . Calendar . getInstance ( ) ; IDENT_2 . METHOD_6 ( ) ; IDENT_2 . set ( INT_0 , Calendar . IDENT_3 , INT_1 , 10 , INT_2 , INT_3 ) ; bericht . METHOD_7 ( IDENT_2 ) ; bericht . METHOD_8 ( STRING_3 ) ; bericht . METHOD_9 ( IDENT_4 . IDENT_5 ) ; bericht . METHOD_10 ( true ) ; IDENT_6 . METHOD_11 ( bericht ) ; java . lang . String sql = STRING_0 2 + ( ( ( ( ( ( ( STRING_0 1 + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) + STRING_9 ) + STRING_0 ) ; long count = IDENT_7 . METHOD_12 ( sql , ( ( java . util . Map < java . lang . String , ? > ) ( null ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_12 ( java . lang . String , int , java . lang . Object [ ] ) { int count = 0 ; while ( count < IDENT_8 ) { count ++ ; try { return IDENT_7 . METHOD_12 ( sql , params ) ; } catch ( final org . springframework . dao . IDENT_9 e ) { try { java . lang . Thread . sleep ( ( ( nl . IDENT_10 . IDENT_11 . test . IDENT_12 . IDENT_13 . IDENT_14 . IDENT_15 ) * count ) ) ; } catch ( final java . lang . IDENT_16 IDENT_17 ) { } } } return null ; }
org . junit . Assert . assertEquals ( 1 , count ) 