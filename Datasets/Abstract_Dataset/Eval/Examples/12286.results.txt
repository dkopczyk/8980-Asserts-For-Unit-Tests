METHOD_0 ( ) { try { java . util . List < org . apache . IDENT_0 . query . IDENT_1 . IDENT_2 . IDENT_3 > result = client . METHOD_1 ( table , IDENT_4 , IDENT_5 , java . util . Arrays . asList ( STRING_0 , STRING_1 ) , java . util . Arrays . asList ( IDENT_6 . count ) , java . util . Arrays . asList ( STRING_2 ) , true , IDENT_7 , java . lang . System . currentTimeMillis ( ) , 10 ) . METHOD_2 ( ) ; if ( org . apache . IDENT_0 . storage . hbase . METHOD_1 . IDENT_8 . IDENT_9 . LOG . METHOD_3 ( ) ) org . apache . IDENT_0 . storage . hbase . METHOD_1 . IDENT_8 . IDENT_9 . LOG . debug ( STRING_3 ) ; METHOD_4 ( result ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( e . getMessage ( ) ) ; } } METHOD_4 ( java . util . List ) { for ( org . apache . IDENT_0 . query . METHOD_1 . IDENT_2 . IDENT_3 IDENT_10 : IDENT_11 ) { org . apache . IDENT_0 . query . METHOD_1 . IDENT_2 . IDENT_12 key = IDENT_10 . getKey ( ) ; java . util . List < java . lang . String > keys = new java . util . ArrayList < java . lang . String > ( ) ; for ( org . apache . hadoop . io . IDENT_13 bytes : key . getValue ( ) ) { keys . add ( new java . lang . String ( bytes . METHOD_5 ( ) ) ) ; } java . util . List < java . lang . Double > IDENT_14 = new java . util . ArrayList < java . lang . Double > ( ) ; org . apache . IDENT_0 . query . METHOD_1 . IDENT_2 . IDENT_15 val = IDENT_10 . getValue ( ) ; for ( org . apache . hadoop . io . IDENT_16 IDENT_17 : val . getValue ( ) ) { IDENT_14 . add ( IDENT_17 . get ( ) ) ; } if ( org . apache . IDENT_0 . storage . hbase . METHOD_1 . IDENT_8 . IDENT_9 . LOG . METHOD_3 ( ) ) org . apache . IDENT_0 . storage . hbase . METHOD_1 . IDENT_8 . IDENT_9 . LOG . debug ( ( ( ( STRING_4 + keys ) + STRING_5 ) + IDENT_14 ) ) ; } }
org . junit . Assert . assertNotNull ( result ) 