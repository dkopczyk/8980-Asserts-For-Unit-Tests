METHOD_0 ( ) { final org . jboss . IDENT_0 . IDENT_1 . message . Message message = org . mockito . Mockito . mock ( org . jboss . IDENT_0 . IDENT_1 . message . Message . class ) ; final org . jboss . IDENT_0 . IDENT_1 . message . IDENT_2 header = org . mockito . Mockito . mock ( org . jboss . IDENT_0 . IDENT_1 . message . IDENT_2 . class ) ; final org . jboss . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 call = org . mockito . Mockito . mock ( org . jboss . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 . class ) ; final org . jboss . IDENT_0 . IDENT_1 . message . Properties properties = org . mockito . Mockito . mock ( org . jboss . IDENT_0 . IDENT_1 . message . Properties . class ) ; final org . jboss . IDENT_0 . IDENT_1 . message . IDENT_5 body = org . mockito . Mockito . mock ( org . jboss . IDENT_0 . IDENT_1 . message . IDENT_5 . class ) ; org . mockito . Mockito . when ( message . METHOD_1 ( ) ) . thenReturn ( header ) ; org . mockito . Mockito . when ( header . METHOD_2 ( ) ) . thenReturn ( call ) ; org . mockito . Mockito . when ( message . METHOD_3 ( ) ) . thenReturn ( properties ) ; org . mockito . Mockito . when ( properties . getProperty ( IDENT_6 . IDENT_7 ) ) . thenReturn ( INT_0 ) ; org . mockito . Mockito . when ( message . METHOD_4 ( ) ) . thenReturn ( body ) ; final org . jboss . IDENT_0 . IDENT_1 . message . Message result = subject . process ( message ) ; "<AssertPlaceHolder>" ; } process ( nl . bzk . brp . IDENT_8 . IDENT_9 . context . IDENT_10 ) { nl . bzk . brp . IDENT_8 . IDENT_9 . IDENT_11 . IDENT_12 . LOGGER . debug ( nl . bzk . brp . IDENT_8 . IDENT_9 . IDENT_11 . IDENT_12 . IDENT_13 ) ; final long start = java . lang . System . currentTimeMillis ( ) ; final javax . xml . ws . IDENT_14 < javax . xml . transform . IDENT_15 > IDENT_16 = METHOD_5 ( IDENT_17 ) ; final nl . bzk . brp . model . operationeel . IDENT_18 . IDENT_19 IDENT_20 = IDENT_17 . METHOD_6 ( ) ; final java . util . Map < java . lang . String , java . lang . Object > IDENT_21 = IDENT_16 . METHOD_7 ( ) ; IDENT_21 . put ( IDENT_22 . IDENT_23 , IDENT_20 . METHOD_8 ( ) ) ; final java . lang . String IDENT_24 = IDENT_17 . METHOD_9 ( ) ; IDENT_21 . put ( IDENT_25 . IDENT_26 , IDENT_24 ) ; final nl . bzk . brp . model . IDENT_27 . IDENT_28 IDENT_29 = IDENT_17 . METHOD_10 ( ) ; final java . lang . String IDENT_30 = IDENT_17 . METHOD_11 ( ) ; try { METHOD_12 ( IDENT_17 ) ; METHOD_13 ( IDENT_21 . entrySet ( ) ) ; if ( IDENT_30 != null ) { nl . bzk . brp . IDENT_8 . IDENT_9 . IDENT_11 . IDENT_12 . LOGGER . info ( nl . bzk . brp . IDENT_8 . IDENT_9 . IDENT_11 . IDENT_12 . IDENT_31 , IDENT_24 ) ; final javax . xml . transform . IDENT_15 request = new javax . xml . transform . stream . METHOD_14 ( new java . io . METHOD_15 ( IDENT_30 ) ) ; final java . lang . String IDENT_32 = IDENT_29 . METHOD_16 ( ) . toString ( ) ; IDENT_16 . invoke ( request ) ; nl . bzk . brp . IDENT_8 . IDENT_9 . IDENT_11 . IDENT_12 . LOGGER . info ( STRING_0 , IDENT_24 , IDENT_29 . METHOD_17 ( ) , IDENT_32 ) ; nl . bzk . brp . logging . IDENT_33 . put ( IDENT_34 . IDENT_35 , java . lang . String . valueOf ( IDENT_29 . METHOD_18 ( ) . size ( ) ) ) ; if ( ( IDENT_29 . METHOD_19 ( ) ) != null ) { nl . bzk . brp . logging . IDENT_33 . put ( IDENT_34 . IDENT_36 , IDENT_29 . METHOD_19 ( ) . METHOD_20 ( ) ) ; } if ( ( IDENT_29 . METHOD_21 ( ) ) != null ) { nl . bzk . brp . logging . IDENT_33 . put ( IDENT_34 . IDENT_37 , IDENT_29 . METHOD_21 ( ) . METHOD_22 ( ) . METHOD_20 ( ) ) ; } java . lang . String IDENT_38 = "" ; if ( ( IDENT_29 . METHOD_21 ( ) ) != null ) { IDENT_38 = IDENT_29 . METHOD_21 ( ) . METHOD_22 ( ) . METHOD_20 ( ) ; } nl . bzk . brp . IDENT_8 . IDENT_9 . IDENT_11 . IDENT_12 . LOGGER . info ( STRING_1 , IDENT_38 , IDENT_29 . METHOD_18 ( ) . size ( ) ) ; nl . bzk . brp . logging . IDENT_33 . remove ( IDENT_34 . IDENT_35 ) ; nl . bzk . brp . logging . IDENT_33 . remove ( IDENT_34 . IDENT_37 ) ; IDENT_17 . METHOD_23 ( ) . METHOD_24 ( ( ( java . lang . System . currentTimeMillis ( ) ) - start ) ) ; } else { throw new nl . bzk . brp . IDENT_8 . IDENT_9 . IDENT_39 . METHOD_25 ( ( ( nl . bzk . brp . IDENT_8 . IDENT_9 . IDENT_11 . IDENT_12 . IDENT_40 ) + IDENT_24 ) ) ; } } catch ( final java . lang . Exception e ) { throw new nl . bzk . brp . IDENT_8 . IDENT_9 . IDENT_39 . METHOD_25 ( java . lang . String . format ( STRING_2 , IDENT_29 . METHOD_26 ( ) , IDENT_30 ) , e ) ; } finally { METHOD_27 ( ) ; } }
org . junit . Assert . assertSame ( message , result ) 