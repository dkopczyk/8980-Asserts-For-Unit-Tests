METHOD_0 ( ) { final org . jboss . IDENT_0 . IDENT_1 . message . Message message = org . mockito . Mockito . mock ( org . jboss . IDENT_0 . IDENT_1 . message . Message . class ) ; final org . jboss . IDENT_0 . IDENT_1 . message . IDENT_2 header = org . mockito . Mockito . mock ( org . jboss . IDENT_0 . IDENT_1 . message . IDENT_2 . class ) ; final org . jboss . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 call = org . mockito . Mockito . mock ( org . jboss . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 . class ) ; final org . jboss . IDENT_0 . IDENT_1 . message . Properties properties = org . mockito . Mockito . mock ( org . jboss . IDENT_0 . IDENT_1 . message . Properties . class ) ; final org . jboss . IDENT_0 . IDENT_1 . message . IDENT_5 body = org . mockito . Mockito . mock ( org . jboss . IDENT_0 . IDENT_1 . message . IDENT_5 . class ) ; org . mockito . Mockito . when ( message . METHOD_1 ( ) ) . thenReturn ( header ) ; org . mockito . Mockito . when ( header . METHOD_2 ( ) ) . thenReturn ( call ) ; org . mockito . Mockito . when ( message . METHOD_3 ( ) ) . thenReturn ( properties ) ; org . mockito . Mockito . when ( properties . getProperty ( IDENT_6 . IDENT_7 ) ) . thenReturn ( INT_0 ) ; org . mockito . Mockito . when ( message . METHOD_4 ( ) ) . thenReturn ( body ) ; org . mockito . Mockito . when ( body . get ( IDENT_8 . IDENT_9 ) ) . thenReturn ( STRING_0 ) ; final org . jboss . IDENT_0 . IDENT_1 . message . Message result = subject . process ( message ) ; "<AssertPlaceHolder>" ; org . mockito . Mockito . verify ( IDENT_10 ) . METHOD_5 ( INT_0 , INT_1 ) ; } process ( nl . bzk . brp . IDENT_11 . IDENT_12 . context . IDENT_13 ) { nl . bzk . brp . IDENT_11 . IDENT_12 . IDENT_14 . IDENT_15 . LOGGER . debug ( nl . bzk . brp . IDENT_11 . IDENT_12 . IDENT_14 . IDENT_15 . IDENT_16 ) ; final long start = java . lang . System . currentTimeMillis ( ) ; final javax . xml . ws . IDENT_17 < javax . xml . transform . IDENT_18 > IDENT_19 = METHOD_6 ( IDENT_20 ) ; final nl . bzk . brp . model . operationeel . IDENT_21 . IDENT_22 IDENT_23 = IDENT_20 . METHOD_7 ( ) ; final java . util . Map < java . lang . String , java . lang . Object > IDENT_24 = IDENT_19 . METHOD_8 ( ) ; IDENT_24 . put ( IDENT_25 . IDENT_26 , IDENT_23 . METHOD_9 ( ) ) ; final java . lang . String IDENT_27 = IDENT_20 . METHOD_10 ( ) ; IDENT_24 . put ( IDENT_28 . IDENT_29 , IDENT_27 ) ; final nl . bzk . brp . model . IDENT_30 . IDENT_31 IDENT_32 = IDENT_20 . METHOD_11 ( ) ; final java . lang . String IDENT_33 = IDENT_20 . METHOD_12 ( ) ; try { METHOD_13 ( IDENT_20 ) ; METHOD_14 ( IDENT_24 . entrySet ( ) ) ; if ( IDENT_33 != null ) { nl . bzk . brp . IDENT_11 . IDENT_12 . IDENT_14 . IDENT_15 . LOGGER . info ( nl . bzk . brp . IDENT_11 . IDENT_12 . IDENT_14 . IDENT_15 . IDENT_34 , IDENT_27 ) ; final javax . xml . transform . IDENT_18 request = new javax . xml . transform . stream . METHOD_15 ( new java . io . METHOD_16 ( IDENT_33 ) ) ; final java . lang . String IDENT_35 = IDENT_32 . METHOD_17 ( ) . toString ( ) ; IDENT_19 . invoke ( request ) ; nl . bzk . brp . IDENT_11 . IDENT_12 . IDENT_14 . IDENT_15 . LOGGER . info ( STRING_1 , IDENT_27 , IDENT_32 . METHOD_18 ( ) , IDENT_35 ) ; nl . bzk . brp . logging . IDENT_36 . put ( IDENT_37 . IDENT_38 , java . lang . String . valueOf ( IDENT_32 . METHOD_19 ( ) . size ( ) ) ) ; if ( ( IDENT_32 . METHOD_20 ( ) ) != null ) { nl . bzk . brp . logging . IDENT_36 . put ( IDENT_37 . IDENT_39 , IDENT_32 . METHOD_20 ( ) . METHOD_21 ( ) ) ; } if ( ( IDENT_32 . METHOD_22 ( ) ) != null ) { nl . bzk . brp . logging . IDENT_36 . put ( IDENT_37 . IDENT_40 , IDENT_32 . METHOD_22 ( ) . METHOD_23 ( ) . METHOD_21 ( ) ) ; } java . lang . String IDENT_41 = "" ; if ( ( IDENT_32 . METHOD_22 ( ) ) != null ) { IDENT_41 = IDENT_32 . METHOD_22 ( ) . METHOD_23 ( ) . METHOD_21 ( ) ; } nl . bzk . brp . IDENT_11 . IDENT_12 . IDENT_14 . IDENT_15 . LOGGER . info ( STRING_2 , IDENT_41 , IDENT_32 . METHOD_19 ( ) . size ( ) ) ; nl . bzk . brp . logging . IDENT_36 . remove ( IDENT_37 . IDENT_38 ) ; nl . bzk . brp . logging . IDENT_36 . remove ( IDENT_37 . IDENT_40 ) ; IDENT_20 . METHOD_24 ( ) . METHOD_25 ( ( ( java . lang . System . currentTimeMillis ( ) ) - start ) ) ; } else { throw new nl . bzk . brp . IDENT_11 . IDENT_12 . IDENT_42 . METHOD_26 ( ( ( nl . bzk . brp . IDENT_11 . IDENT_12 . IDENT_14 . IDENT_15 . IDENT_43 ) + IDENT_27 ) ) ; } } catch ( final java . lang . Exception e ) { throw new nl . bzk . brp . IDENT_11 . IDENT_12 . IDENT_42 . METHOD_26 ( java . lang . String . format ( STRING_3 , IDENT_32 . METHOD_27 ( ) , IDENT_33 ) , e ) ; } finally { METHOD_28 ( ) ; } }
org . junit . Assert . assertSame ( message , result ) 