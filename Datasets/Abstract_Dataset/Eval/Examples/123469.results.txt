METHOD_0 ( ) { final java . math . BigDecimal IDENT_0 = new java . math . BigDecimal ( INT_0 ) ; try { when ( IDENT_1 . METHOD_1 ( any ( nl . IDENT_2 . IDENT_3 . synchronisatie . domein . brp . kern . entity . IDENT_4 . class ) , any ( java . math . BigDecimal . class ) ) ) . METHOD_2 ( new java . lang . IllegalArgumentException ( ) ) ; service . METHOD_3 ( METHOD_4 ( ) , IDENT_0 ) ; } catch ( final nl . IDENT_2 . IDENT_3 . conversie . validatie . IDENT_5 IDENT_6 ) { org . junit . Assert . fail ( STRING_0 ) ; } catch ( final java . lang . IllegalArgumentException IDENT_7 ) { "<AssertPlaceHolder>" ; } } getMessage ( ) { return message ; }
org . junit . Assert . assertNull ( IDENT_7 . getMessage ( ) ) 