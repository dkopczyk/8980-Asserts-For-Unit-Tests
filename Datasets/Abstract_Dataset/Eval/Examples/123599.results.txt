METHOD_0 ( ) { final java . util . Set < nl . bzk . brp . model . algemeen . IDENT_0 . IDENT_1 . IDENT_2 > IDENT_3 = new java . util . HashSet ( ) ; final nl . bzk . brp . model . IDENT_4 . IDENT_5 . IDENT_6 IDENT_5 = new nl . bzk . brp . model . IDENT_4 . IDENT_5 . METHOD_1 ( IDENT_3 , false ) ; final nl . bzk . brp . model . algemeen . IDENT_0 . kern . IDENT_7 element = new nl . bzk . brp . model . algemeen . IDENT_0 . kern . METHOD_2 ( nl . bzk . brp . model . algemeen . IDENT_0 . kern . IDENT_8 . METHOD_3 ( ) . METHOD_4 ( IDENT_9 . IDENT_10 ) . METHOD_5 ( ) ) ; final nl . bzk . brp . model . algemeen . IDENT_0 . IDENT_1 . IDENT_2 IDENT_11 = nl . bzk . brp . model . algemeen . IDENT_0 . IDENT_1 . IDENT_12 . METHOD_3 ( ) . METHOD_6 ( element . METHOD_7 ( ) ) . METHOD_8 ( false ) . METHOD_9 ( false ) . METHOD_10 ( false ) . METHOD_5 ( ) ; IDENT_3 . add ( IDENT_11 ) ; final java . util . Set < nl . bzk . brp . model . operationeel . kern . IDENT_13 > IDENT_14 = METHOD_11 ( ) . METHOD_12 ( ) . METHOD_13 ( ) ; for ( final nl . bzk . brp . model . operationeel . kern . IDENT_13 IDENT_15 : IDENT_14 ) { final nl . bzk . brp . model . IDENT_16 . IDENT_17 IDENT_18 = ( ( nl . bzk . brp . model . IDENT_16 . IDENT_17 ) ( org . springframework . test . util . IDENT_19 . METHOD_14 ( IDENT_15 , STRING_0 ) ) ) ; IDENT_18 . METHOD_15 ( null ) ; } final java . util . Collection IDENT_20 = org . apache . commons . collections . IDENT_21 . select ( IDENT_14 , IDENT_5 ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_22 . size ( ) ; }
org . junit . Assert . assertThat ( IDENT_20 . size ( ) , org . hamcrest . Matchers . is ( 1 ) ) 