METHOD_0 ( ) { final nl . bzk . brp . model . IDENT_0 . IDENT_1 IDENT_2 = METHOD_1 ( IDENT_3 . IDENT_4 , null , IDENT_5 , IDENT_6 , IDENT_7 , null , IDENT_8 . IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { boolean IDENT_10 ; if ( ( IDENT_11 ) == null ) { IDENT_10 = false ; nl . bzk . brp . model . IDENT_0 . IDENT_1 . LOGGER . debug ( STRING_0 ) ; } else if ( ( ( IDENT_12 ) == null ) || ( IDENT_12 . isEmpty ( ) ) ) { IDENT_10 = false ; nl . bzk . brp . model . IDENT_0 . IDENT_1 . LOGGER . debug ( STRING_1 ) ; } else if ( ( IDENT_11 . METHOD_3 ( ) ) == null ) { IDENT_10 = false ; nl . bzk . brp . model . IDENT_0 . IDENT_1 . LOGGER . debug ( STRING_2 ) ; } else if ( ( IDENT_11 . METHOD_4 ( ) ) == null ) { IDENT_10 = false ; nl . bzk . brp . model . IDENT_0 . IDENT_1 . LOGGER . debug ( STRING_3 ) ; } else if ( ( ( IDENT_11 . METHOD_5 ( ) ) == null ) || ( IDENT_11 . METHOD_5 ( ) . METHOD_6 ( ) ) ) { IDENT_10 = false ; nl . bzk . brp . model . IDENT_0 . IDENT_1 . LOGGER . debug ( STRING_4 ) ; } else if ( ( METHOD_7 ( ) ) == null ) { IDENT_10 = false ; nl . bzk . brp . model . IDENT_0 . IDENT_1 . LOGGER . debug ( STRING_5 ) ; } else if ( ( nl . bzk . brp . model . IDENT_0 . IDENT_1 . IDENT_13 . contains ( METHOD_7 ( ) ) ) && ( ( ( IDENT_11 . METHOD_8 ( ) ) == null ) || ( IDENT_11 . METHOD_8 ( ) . METHOD_6 ( ) ) ) ) { IDENT_10 = false ; nl . bzk . brp . model . IDENT_0 . IDENT_1 . LOGGER . debug ( STRING_2 0 , METHOD_7 ( ) ) ; } else { switch ( IDENT_14 ) { case IDENT_15 : case IDENT_16 : IDENT_10 = METHOD_9 ( ) ; break ; case IDENT_4 : case IDENT_17 : IDENT_10 = METHOD_10 ( METHOD_11 ( ) ) ; break ; case IDENT_18 : case IDENT_19 : case IDENT_20 : IDENT_10 = METHOD_12 ( ) ; break ; case IDENT_21 : IDENT_10 = METHOD_13 ( ) ; break ; case IDENT_22 : IDENT_10 = METHOD_14 ( ) ; break ; default : final java . lang . String IDENT_23 = STRING_6 + ( IDENT_14 ) ; nl . bzk . brp . model . IDENT_0 . IDENT_1 . LOGGER . error ( IDENT_23 ) ; throw new java . lang . IllegalArgumentException ( IDENT_23 ) ; } if ( ! IDENT_10 ) { nl . bzk . brp . model . IDENT_0 . IDENT_1 . LOGGER . debug ( ( STRING_7 + ( ( STRING_8 + STRING_9 ) + STRING_2 1 ) ) , IDENT_14 , IDENT_11 . METHOD_15 ( ) , IDENT_11 . METHOD_16 ( ) , IDENT_11 . METHOD_17 ( ) , IDENT_11 . METHOD_18 ( ) , IDENT_11 . METHOD_19 ( ) , IDENT_24 ) ; } } return IDENT_10 ; }
org . junit . Assert . assertFalse ( IDENT_2 . METHOD_2 ( ) ) 