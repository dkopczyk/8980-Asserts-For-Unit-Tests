METHOD_0 ( ) { final java . util . List < nl . bzk . brp . model . algemeen . IDENT_0 . kern . IDENT_1 > IDENT_2 = java . util . Arrays . asList ( IDENT_1 . IDENT_3 , IDENT_1 . IDENT_4 , IDENT_1 . IDENT_5 , IDENT_1 . IDENT_6 , IDENT_1 . IDENT_7 , IDENT_1 . IDENT_8 , IDENT_1 . IDENT_9 , IDENT_1 . IDENT_10 , IDENT_1 . IDENT_11 , IDENT_1 . IDENT_12 , IDENT_1 . IDENT_13 , IDENT_1 . IDENT_14 , IDENT_1 . IDENT_15 , IDENT_1 . IDENT_16 , IDENT_1 . IDENT_17 ) ; for ( nl . bzk . brp . model . algemeen . IDENT_0 . kern . IDENT_1 IDENT_18 : IDENT_2 ) { try { IDENT_19 . METHOD_1 ( null , IDENT_18 ) ; org . junit . Assert . fail ( java . lang . String . format ( STRING_0 , IDENT_18 ) ) ; } catch ( java . lang . IllegalArgumentException e ) { "<AssertPlaceHolder>" ; } } } getMessage ( ) { return message ; }
org . junit . Assert . assertNotNull ( e . getMessage ( ) ) 