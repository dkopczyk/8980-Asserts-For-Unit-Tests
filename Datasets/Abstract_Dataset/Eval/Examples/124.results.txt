METHOD_0 ( ) { org . springframework . data . IDENT_0 . query . IDENT_1 IDENT_2 = METHOD_1 ( STRING_0 , org . springframework . data . IDENT_0 . query . IDENT_3 . class ) ; org . springframework . data . IDENT_0 . query . IDENT_4 . IDENT_5 IDENT_6 = new org . springframework . data . IDENT_0 . query . IDENT_4 . METHOD_2 ( null ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . springframework . data . IDENT_0 . query . IDENT_1 ) { java . lang . String query = method . METHOD_4 ( ) ; if ( method . METHOD_5 ( ) ) { return org . springframework . data . IDENT_0 . query . IDENT_4 . METHOD_2 . IDENT_7 . IDENT_8 ; } else if ( ( org . springframework . data . IDENT_0 . query . IDENT_9 . METHOD_6 ( query ) . size ( ) ) > 1 ) { return org . springframework . data . IDENT_0 . query . IDENT_4 . METHOD_2 . IDENT_7 . IDENT_10 ; } else { if ( method . METHOD_7 ( ) ) { return org . springframework . data . IDENT_0 . query . IDENT_4 . METHOD_2 . IDENT_7 . IDENT_10 ; } else if ( method . METHOD_8 ( ) ) { return org . springframework . data . IDENT_0 . query . IDENT_4 . METHOD_2 . IDENT_7 . IDENT_11 ; } else if ( java . util . List . class . METHOD_9 ( method . METHOD_10 ( ) ) ) { return org . springframework . data . IDENT_0 . query . IDENT_4 . METHOD_2 . IDENT_7 . IDENT_12 ; } else if ( java . util . Set . class . METHOD_9 ( method . METHOD_10 ( ) ) ) { return org . springframework . data . IDENT_0 . query . IDENT_4 . METHOD_2 . IDENT_7 . IDENT_13 ; } else { throw new java . lang . IllegalArgumentException ( ( STRING_1 + query ) ) ; } } }
org . junit . Assert . assertEquals ( METHOD_2 . IDENT_7 . IDENT_10 , IDENT_6 . METHOD_3 ( IDENT_2 ) ) 