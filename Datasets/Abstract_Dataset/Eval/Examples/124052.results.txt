METHOD_0 ( ) { final nl . bzk . brp . model . IDENT_0 . kern . IDENT_1 IDENT_2 = METHOD_1 ( INT_0 ) ; final nl . bzk . brp . model . bericht . kern . IDENT_3 IDENT_4 = new nl . bzk . brp . model . bericht . kern . METHOD_2 ( ) ; IDENT_4 . METHOD_3 ( new java . util . ArrayList < nl . bzk . brp . model . bericht . kern . IDENT_5 > ( ) ) ; final nl . bzk . brp . model . bericht . kern . IDENT_6 IDENT_7 = METHOD_4 ( INT_1 ) ; final nl . bzk . brp . model . bericht . kern . IDENT_8 IDENT_9 = new nl . bzk . brp . model . bericht . kern . METHOD_5 ( ) ; IDENT_9 . METHOD_6 ( IDENT_7 ) ; final nl . bzk . brp . model . bericht . kern . IDENT_6 IDENT_10 = METHOD_4 ( INT_2 ) ; final nl . bzk . brp . model . bericht . kern . IDENT_11 IDENT_12 = new nl . bzk . brp . model . bericht . kern . METHOD_7 ( ) ; IDENT_12 . METHOD_6 ( IDENT_10 ) ; final nl . bzk . brp . model . bericht . kern . IDENT_6 IDENT_13 = METHOD_4 ( INT_3 ) ; final nl . bzk . brp . model . bericht . kern . METHOD_7 IDENT_14 = new nl . bzk . brp . model . bericht . kern . METHOD_7 ( ) ; IDENT_14 . METHOD_6 ( IDENT_13 ) ; IDENT_4 . METHOD_8 ( ) . add ( IDENT_9 ) ; IDENT_4 . METHOD_8 ( ) . add ( IDENT_12 ) ; IDENT_4 . METHOD_8 ( ) . add ( IDENT_14 ) ; final java . util . List < nl . bzk . brp . model . IDENT_15 . IDENT_16 > IDENT_17 = new nl . bzk . brp . bijhouding . business . IDENT_18 . impl . IDENT_19 . object . IDENT_20 . METHOD_9 ( ) . METHOD_10 ( null , IDENT_4 , IDENT_2 , null ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_21 . size ( ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_17 . size ( ) ) == 1 ) ) 