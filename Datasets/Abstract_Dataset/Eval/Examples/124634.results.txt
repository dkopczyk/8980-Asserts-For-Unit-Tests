METHOD_0 ( ) { org . mockito . Mockito . when ( IDENT_0 . METHOD_1 ( any ( nl . bzk . brp . IDENT_1 . business . IDENT_2 . IDENT_3 . IDENT_4 . class ) , any ( nl . bzk . brp . IDENT_1 . business . IDENT_2 . IDENT_3 . IDENT_5 . class ) ) ) . thenReturn ( new nl . bzk . brp . IDENT_1 . business . IDENT_2 . IDENT_3 . METHOD_2 ( ) ) ; final nl . bzk . brp . model . operationeel . kern . IDENT_6 IDENT_7 = METHOD_3 ( ) ; final nl . bzk . brp . model . IDENT_8 . kern . IDENT_9 IDENT_10 = nl . bzk . brp . util . IDENT_11 . IDENT_12 . METHOD_4 ( ) ; final java . util . Map < java . lang . Integer , nl . bzk . brp . IDENT_1 . model . IDENT_13 > IDENT_14 = new java . util . HashMap ( ) ; IDENT_14 . put ( IDENT_10 . METHOD_5 ( ) , IDENT_13 . IDENT_15 ) ; final java . util . Map < nl . bzk . brp . IDENT_1 . model . IDENT_16 , java . util . Map < java . lang . Integer , nl . bzk . brp . IDENT_1 . model . IDENT_13 > > IDENT_17 = METHOD_6 ( IDENT_14 , IDENT_18 . IDENT_19 ) ; final nl . bzk . brp . IDENT_1 . business . IDENT_2 . IDENT_3 . METHOD_2 IDENT_20 = IDENT_21 . METHOD_7 ( IDENT_7 , java . util . Collections . singletonList ( IDENT_10 ) , IDENT_17 , new java . util . HashMap < java . lang . Integer , java . util . Map < java . lang . String , java . util . List < nl . bzk . brp . model . IDENT_22 . IDENT_23 > > > ( ) , new java . util . HashMap < java . lang . Integer , java . util . Map < java . lang . Integer , java . util . List < nl . bzk . brp . model . IDENT_22 . IDENT_23 > > > ( ) ) ; "<AssertPlaceHolder>" ; verify ( IDENT_0 ) . METHOD_1 ( any ( nl . bzk . brp . IDENT_1 . business . IDENT_2 . IDENT_3 . IDENT_4 . class ) , any ( nl . bzk . brp . IDENT_1 . business . IDENT_2 . IDENT_3 . IDENT_5 . class ) ) ; } METHOD_8 ( ) { return IDENT_24 ; }
org . junit . Assert . assertTrue ( IDENT_20 . METHOD_8 ( ) ) 