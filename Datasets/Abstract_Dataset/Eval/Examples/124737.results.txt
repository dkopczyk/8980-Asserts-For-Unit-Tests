METHOD_0 ( ) { final nl . bzk . migratiebrp . bericht . model . IDENT_0 . impl . IDENT_1 bericht = new nl . bzk . migratiebrp . bericht . model . IDENT_0 . impl . METHOD_1 ( ) ; final java . util . List < nl . bzk . migratiebrp . conversie . model . IDENT_0 . IDENT_2 . IDENT_3 > IDENT_4 = METHOD_2 ( ) ; java . lang . reflect . Method IDENT_5 = bericht . getClass ( ) . METHOD_3 ( STRING_0 , java . util . List . class ) ; IDENT_5 . METHOD_4 ( true ) ; bericht . METHOD_5 ( IDENT_6 . IDENT_7 , STRING_1 ) ; IDENT_5 . invoke ( bericht , IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( ) { java . lang . String IDENT_8 = null ; boolean result = true ; for ( final nl . bzk . migratiebrp . conversie . model . IDENT_0 . IDENT_2 . IDENT_3 IDENT_9 : IDENT_10 ) { if ( IDENT_9 . METHOD_7 ( ) . containsKey ( IDENT_11 . IDENT_12 ) ) { if ( IDENT_8 == null ) { IDENT_8 = IDENT_9 . METHOD_8 ( IDENT_11 . IDENT_12 ) ; } else { result = result && ( IDENT_9 . METHOD_8 ( IDENT_11 . IDENT_12 ) . equals ( IDENT_8 ) ) ; } } } return result ; }
org . junit . Assert . assertTrue ( bericht . METHOD_6 ( ) ) 