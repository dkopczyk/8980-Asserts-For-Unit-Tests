METHOD_0 ( ) { org . apache . flink . api . common . io . IDENT_0 < org . apache . flink . api . java . tuple . IDENT_1 < java . lang . String , java . lang . Integer , java . lang . Integer > > IDENT_2 = new org . apache . flink . batch . IDENT_3 . cassandra . METHOD_1 ( METHOD_2 ( org . apache . flink . streaming . IDENT_3 . cassandra . IDENT_4 . IDENT_5 ) , org . apache . flink . streaming . IDENT_3 . cassandra . IDENT_4 . builder ) ; try { IDENT_2 . METHOD_3 ( new org . apache . flink . configuration . Configuration ( ) ) ; IDENT_2 . METHOD_4 ( 0 , 1 ) ; for ( org . apache . flink . api . java . tuple . IDENT_1 < java . lang . String , java . lang . Integer , java . lang . Integer > value : org . apache . flink . streaming . IDENT_3 . cassandra . IDENT_4 . collection ) { IDENT_2 . METHOD_5 ( value ) ; } } finally { IDENT_2 . close ( ) ; } IDENT_2 = new org . apache . flink . batch . IDENT_3 . cassandra . METHOD_6 ( METHOD_2 ( org . apache . flink . streaming . IDENT_3 . cassandra . IDENT_4 . IDENT_5 ) , org . apache . flink . streaming . IDENT_3 . cassandra . IDENT_4 . builder ) ; try { IDENT_2 . METHOD_3 ( new org . apache . flink . configuration . Configuration ( ) ) ; IDENT_2 . METHOD_4 ( 0 , 1 ) ; for ( org . apache . flink . api . java . tuple . IDENT_1 < java . lang . String , java . lang . Integer , java . lang . Integer > value : org . apache . flink . streaming . IDENT_3 . cassandra . IDENT_4 . collection ) { IDENT_2 . METHOD_5 ( value ) ; } } finally { IDENT_2 . close ( ) ; } org . apache . flink . api . common . io . IDENT_6 < org . apache . flink . api . java . tuple . IDENT_1 < java . lang . String , java . lang . Integer , java . lang . Integer > , org . apache . flink . core . io . IDENT_7 > source = new org . apache . flink . batch . IDENT_3 . cassandra . METHOD_7 ( METHOD_2 ( org . apache . flink . streaming . IDENT_3 . cassandra . IDENT_4 . IDENT_8 ) , org . apache . flink . streaming . IDENT_3 . cassandra . IDENT_4 . builder ) ; java . util . List < org . apache . flink . api . java . tuple . IDENT_1 < java . lang . String , java . lang . Integer , java . lang . Integer > > result = new java . util . ArrayList ( ) ; try { source . METHOD_3 ( new org . apache . flink . configuration . Configuration ( ) ) ; source . METHOD_4 ( null ) ; while ( ! ( source . METHOD_8 ( ) ) ) { result . add ( source . METHOD_9 ( new org . apache . flink . api . java . tuple . IDENT_1 < java . lang . String , java . lang . Integer , java . lang . Integer > ( ) ) ) ; } } finally { source . close ( ) ; } "<AssertPlaceHolder>" ; } size ( ) { return IDENT_9 . size ( ) ; }
org . junit . Assert . assertEquals ( 20 , result . size ( ) ) 