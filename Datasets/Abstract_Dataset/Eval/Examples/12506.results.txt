METHOD_0 ( ) { final org . apache . flink . streaming . IDENT_0 . elasticsearch . IDENT_1 . IDENT_2 < java . lang . String > IDENT_3 = new org . apache . flink . streaming . IDENT_0 . elasticsearch . IDENT_1 . METHOD_1 ( new java . util . HashMap < java . lang . String , java . lang . String > ( ) , new org . apache . flink . streaming . IDENT_0 . elasticsearch . IDENT_1 . IDENT_4 < java . lang . String > ( ) , new org . apache . flink . streaming . IDENT_0 . elasticsearch . util . METHOD_2 ( ) ) ; final org . apache . flink . streaming . util . IDENT_5 < java . lang . String , java . lang . Object > IDENT_6 = new org . apache . flink . streaming . util . METHOD_3 ( new org . apache . flink . streaming . api . IDENT_7 . METHOD_4 ( IDENT_3 ) ) ; IDENT_6 . METHOD_5 ( ) ; IDENT_3 . METHOD_6 ( new java . lang . Exception ( STRING_0 ) ) ; IDENT_6 . METHOD_7 ( new org . apache . flink . streaming . runtime . IDENT_8 . METHOD_8 ( STRING_1 ) ) ; verify ( IDENT_3 . METHOD_9 ( ) , times ( 1 ) ) . add ( any ( org . elasticsearch . action . index . IDENT_9 . class ) ) ; IDENT_3 . METHOD_10 ( ) ; try { IDENT_6 . METHOD_11 ( 1L , INT_0 ) ; } catch ( java . lang . Exception e ) { "<AssertPlaceHolder>" ; return ; } org . junit . Assert . fail ( ) ; } METHOD_12 ( ) { return IDENT_10 ; }
org . junit . Assert . assertTrue ( e . METHOD_12 ( ) . METHOD_12 ( ) . getMessage ( ) . contains ( STRING_0 ) ) 