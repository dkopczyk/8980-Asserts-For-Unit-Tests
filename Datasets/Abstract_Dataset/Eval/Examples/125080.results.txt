METHOD_0 ( ) { org . mockito . Mockito . when ( IDENT_0 . METHOD_1 ( ) ) . thenReturn ( IDENT_1 . IDENT_2 ) ; final nl . bzk . migratiebrp . bericht . model . sync . impl . IDENT_3 IDENT_4 = new nl . bzk . migratiebrp . bericht . model . sync . impl . METHOD_2 ( ) ; final nl . bzk . migratiebrp . bericht . model . sync . IDENT_5 . IDENT_6 IDENT_7 = new nl . bzk . migratiebrp . bericht . model . sync . IDENT_5 . METHOD_3 ( ) ; final nl . bzk . migratiebrp . bericht . model . sync . IDENT_5 . IDENT_8 IDENT_9 = new nl . bzk . migratiebrp . bericht . model . sync . IDENT_5 . METHOD_4 ( ) ; IDENT_9 . METHOD_5 ( IDENT_7 ) ; IDENT_4 . METHOD_6 ( IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( nl . bzk . migratiebrp . synchronisatie . dal . domein . brp . kern . entity . IDENT_10 , nl . bzk . migratiebrp . bericht . model . sync . impl . METHOD_2 ) { final nl . bzk . migratiebrp . bericht . model . sync . IDENT_5 . METHOD_4 IDENT_0 = IDENT_4 . METHOD_8 ( ) ; if ( IDENT_0 == null ) { return false ; } return IDENT_11 . METHOD_9 ( ) . isEmpty ( ) ; }
org . junit . Assert . assertFalse ( subject . METHOD_7 ( IDENT_0 , IDENT_4 ) ) 