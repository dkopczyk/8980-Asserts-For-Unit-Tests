METHOD_0 ( ) { try { java . lang . String IDENT_0 = org . apache . flink . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; java . lang . String IDENT_3 = org . apache . flink . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; java . lang . String IDENT_4 = org . apache . flink . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; java . io . File IDENT_5 = IDENT_6 . METHOD_2 ( IDENT_0 , IDENT_3 , IDENT_4 ) ; java . io . File IDENT_7 = IDENT_5 . METHOD_3 ( ) ; java . io . File IDENT_8 = IDENT_7 . METHOD_3 ( ) ; org . apache . flink . IDENT_1 . IDENT_2 . METHOD_4 ( IDENT_8 . getAbsolutePath ( ) , STRING_0 ) ; org . apache . flink . IDENT_1 . IDENT_2 . METHOD_4 ( IDENT_7 . getAbsolutePath ( ) , STRING_1 ) ; org . apache . flink . IDENT_1 . IDENT_2 . METHOD_4 ( IDENT_7 . getAbsolutePath ( ) , STRING_2 ) ; org . apache . flink . IDENT_1 . IDENT_2 . METHOD_4 ( IDENT_5 . getAbsolutePath ( ) , STRING_3 ) ; this . format . METHOD_5 ( new org . apache . flink . core . fs . Path ( IDENT_8 . METHOD_6 ( ) . toString ( ) ) ) ; this . config . METHOD_7 ( STRING_4 , true ) ; format . METHOD_8 ( this . config ) ; org . apache . flink . core . fs . IDENT_9 [ ] IDENT_10 = format . METHOD_9 ( 1 ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception ex ) { ex . printStackTrace ( ) ; org . junit . Assert . fail ( ex . getMessage ( ) ) ; } } METHOD_9 ( int ) { return new org . apache . flink . core . io . IDENT_11 [ ] { new org . apache . flink . runtime . IDENT_12 . IDENT_13 . METHOD_10 ( 0 , 1 ) } ; }
org . junit . Assert . assertEquals ( 4 , IDENT_10 . length ) 