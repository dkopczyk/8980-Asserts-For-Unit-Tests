METHOD_0 ( ) { resource . METHOD_1 ( STRING_0 , parameters ) ; final com . cloud . IDENT_0 . IDENT_1 . command . IDENT_2 IDENT_3 = mock ( com . cloud . IDENT_0 . IDENT_1 . command . IDENT_2 . class ) ; final com . cloud . IDENT_0 . to . IDENT_4 rule = new com . cloud . IDENT_0 . to . METHOD_2 ( 1 , STRING_1 , INT_0 , INT_0 , STRING_2 , INT_1 , INT_1 , STRING_3 , true , true ) ; final java . util . List < com . cloud . IDENT_0 . to . METHOD_2 > rules = new java . util . ArrayList ( ) ; rules . add ( rule ) ; when ( IDENT_3 . METHOD_3 ( ) ) . thenReturn ( rules ) ; when ( IDENT_3 . METHOD_4 ( ) ) . thenReturn ( STRING_4 ) ; final com . cloud . network . IDENT_5 . IDENT_6 [ ] IDENT_7 = resource . METHOD_5 ( STRING_2 , new int [ ] { INT_1 , INT_1 } , STRING_1 , new int [ ] { INT_0 , INT_0 } , STRING_3 ) ; final java . util . UUID IDENT_8 = java . util . UUID . METHOD_6 ( ) ; final java . util . UUID IDENT_9 = java . util . UUID . METHOD_6 ( ) ; IDENT_7 [ 0 ] . METHOD_7 ( IDENT_8 ) ; IDENT_7 [ 1 ] . METHOD_7 ( IDENT_9 ) ; when ( IDENT_10 . METHOD_8 ( eq ( STRING_4 ) , ( ( com . cloud . network . IDENT_5 . IDENT_6 ) ( any ( ) ) ) ) ) . thenReturn ( IDENT_7 [ 0 ] ) . thenReturn ( IDENT_7 [ 1 ] ) ; final java . util . List < com . cloud . network . IDENT_5 . IDENT_6 > IDENT_11 = java . util . Arrays . asList ( IDENT_7 ) ; when ( IDENT_10 . METHOD_9 ( STRING_4 ) ) . thenReturn ( IDENT_11 ) ; final com . cloud . IDENT_0 . IDENT_1 . IDENT_12 . IDENT_13 a = ( ( com . cloud . IDENT_0 . IDENT_1 . IDENT_12 . IDENT_13 ) ( resource . METHOD_10 ( IDENT_3 ) ) ) ; "<AssertPlaceHolder>" ; verify ( IDENT_10 , METHOD_11 ( 2 ) ) . METHOD_12 ( eq ( STRING_4 ) , METHOD_13 ( new org . mockito . IDENT_14 < java . util . UUID > ( ) { @ com . cloud . network . resource . Override public boolean matches ( final java . lang . Object IDENT_15 ) { final java . util . UUID IDENT_16 = ( ( java . util . UUID ) ( IDENT_15 ) ) ; if ( ( IDENT_8 . equals ( IDENT_16 ) ) || ( IDENT_9 . equals ( IDENT_16 ) ) ) { return true ; } return false ; } } ) ) ; } METHOD_14 ( ) { return result ; }
org . junit . Assert . assertTrue ( a . METHOD_14 ( ) ) 