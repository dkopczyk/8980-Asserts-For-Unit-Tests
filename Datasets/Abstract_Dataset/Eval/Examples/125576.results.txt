test ( ) { IDENT_0 . IDENT_1 . IDENT_2 conf = new IDENT_0 . IDENT_1 . METHOD_0 ( ) ; if ( java . lang . System . getProperty ( STRING_0 ) . METHOD_1 ( STRING_1 0 ) ) { conf . put ( IDENT_3 . IDENT_4 , STRING_2 ) ; conf . put ( IDENT_5 . IDENT_6 , STRING_3 ) ; } else { conf . put ( IDENT_3 . IDENT_4 , STRING_4 ) ; conf . put ( IDENT_5 . IDENT_6 , STRING_5 ) ; } java . util . IDENT_7 < java . lang . String > IDENT_8 = new java . util . IDENT_7 < java . lang . String > ( ) ; for ( int i = 0 ; i < 10 ; ++ i ) { IDENT_8 . add ( ( i + STRING_1 2 ) ) ; } conf . put ( IDENT_3 . IDENT_9 , IDENT_8 ) ; IDENT_0 . IDENT_1 . IDENT_10 . IDENT_11 builder = new IDENT_0 . IDENT_1 . IDENT_10 . METHOD_2 ( ) ; final int IDENT_12 = 1 + ( this . r . METHOD_3 ( 10 ) ) ; builder . METHOD_4 ( STRING_6 , new de . IDENT_13 . cs . IDENT_14 . IDENT_15 . IDENT_16 . METHOD_5 ( ) , new java . lang . Integer ( IDENT_12 ) ) ; de . IDENT_13 . cs . IDENT_14 . IDENT_15 . IDENT_16 . IDENT_5 IDENT_17 = new de . IDENT_13 . cs . IDENT_14 . IDENT_15 . IDENT_16 . METHOD_6 ( ) ; builder . METHOD_7 ( STRING_1 , new de . IDENT_13 . cs . IDENT_14 . IDENT_18 . utils . METHOD_8 ( IDENT_17 , 0 ) , new java . lang . Integer ( 1 ) ) . METHOD_9 ( STRING_6 ) . METHOD_10 ( STRING_6 , METHOD_8 . IDENT_19 ) ; IDENT_0 . IDENT_1 . IDENT_20 cluster = new IDENT_0 . IDENT_1 . METHOD_11 ( ) ; cluster . METHOD_12 ( STRING_7 , conf , builder . METHOD_13 ( ) ) ; IDENT_0 . IDENT_1 . utils . Utils . sleep ( ( 10 * 1000 ) ) ; cluster . METHOD_14 ( STRING_7 ) ; IDENT_0 . IDENT_1 . utils . Utils . sleep ( 1000 ) ; cluster . METHOD_15 ( STRING_7 ) ; IDENT_0 . IDENT_1 . utils . Utils . sleep ( ( 5 * 1000 ) ) ; cluster . METHOD_16 ( ) ; java . io . IDENT_21 reader = new java . io . METHOD_17 ( new java . io . METHOD_18 ( ( ( ( ( java . lang . String ) ( conf . get ( METHOD_6 . IDENT_6 ) ) ) + ( java . io . File . IDENT_22 ) ) + STRING_1 3 ) ) ) ; java . util . IDENT_7 < java . lang . String > result = new java . util . IDENT_7 < java . lang . String > ( ) ; java . lang . String line ; while ( ( line = reader . METHOD_19 ( ) ) != null ) { result . add ( line ) ; } reader . close ( ) ; java . util . IDENT_7 < java . lang . String > IDENT_23 = new java . util . IDENT_7 < java . lang . String > ( ) ; for ( java . lang . String file : IDENT_8 ) { reader = new java . io . METHOD_17 ( new java . io . METHOD_18 ( ( ( ( java . lang . String ) ( conf . get ( METHOD_5 . IDENT_4 ) ) ) + file ) ) ) ; while ( ( line = reader . METHOD_19 ( ) ) != null ) { int IDENT_24 = line . indexOf ( STRING_8 ) ; int IDENT_25 = line . indexOf ( STRING_8 , ( IDENT_24 + 1 ) ) ; IDENT_23 . add ( ( ( ( line . substring ( ( IDENT_24 + 1 ) , IDENT_25 ) ) + STRING_8 ) + line ) ) ; } reader . close ( ) ; } java . util . Collections . METHOD_20 ( IDENT_23 ) ; IDENT_23 . add ( STRING_1 1 ) ; "<AssertPlaceHolder>" ; } close ( ) { }
org . junit . Assert . assertEquals ( IDENT_23 , result ) 