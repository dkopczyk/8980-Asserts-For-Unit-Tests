METHOD_0 ( ) { org . apache . flink . types . IDENT_0 row = new org . apache . flink . types . METHOD_1 ( 5 ) ; row . METHOD_2 ( 0 , 1 ) ; row . METHOD_2 ( 1 , STRING_0 ) ; row . METHOD_2 ( 2 , null ) ; row . METHOD_2 ( 3 , new org . apache . flink . api . java . tuple . METHOD_3 ( 2 , STRING_1 ) ) ; row . METHOD_2 ( 4 , STRING_2 ) ; org . apache . flink . types . METHOD_1 IDENT_1 = org . apache . flink . types . METHOD_1 . project ( row , new int [ ] { 0 , 2 , 4 } ) ; org . apache . flink . types . METHOD_1 expected = new org . apache . flink . types . METHOD_1 ( 3 ) ; expected . METHOD_2 ( 0 , 1 ) ; expected . METHOD_2 ( 1 , null ) ; expected . METHOD_2 ( 2 , STRING_2 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( T , int ) { switch ( pos ) { case 0 : this . IDENT_2 = ( ( IDENT_3 ) ( value ) ) ; break ; case 1 : this . IDENT_4 = ( ( IDENT_5 ) ( value ) ) ; break ; case 2 : this . IDENT_6 = ( ( IDENT_7 ) ( value ) ) ; break ; case 3 : this . IDENT_8 = ( ( IDENT_9 ) ( value ) ) ; break ; case 4 : this . IDENT_10 = ( ( IDENT_11 ) ( value ) ) ; break ; case 5 : this . IDENT_12 = ( ( IDENT_13 ) ( value ) ) ; break ; case 6 : this . IDENT_14 = ( ( IDENT_15 ) ( value ) ) ; break ; case 7 : this . IDENT_16 = ( ( IDENT_17 ) ( value ) ) ; break ; case 8 : this . IDENT_18 = ( ( IDENT_19 ) ( value ) ) ; break ; case 9 : this . IDENT_20 = ( ( IDENT_21 ) ( value ) ) ; break ; case 10 : this . IDENT_22 = ( ( IDENT_23 ) ( value ) ) ; break ; case INT_0 : this . IDENT_24 = ( ( IDENT_25 ) ( value ) ) ; break ; case 12 : this . IDENT_26 = ( ( IDENT_27 ) ( value ) ) ; break ; case INT_1 : this . IDENT_28 = ( ( IDENT_29 ) ( value ) ) ; break ; case INT_2 : this . IDENT_30 = ( ( IDENT_31 ) ( value ) ) ; break ; case 15 : this . IDENT_32 = ( ( IDENT_33 ) ( value ) ) ; break ; case 16 : this . IDENT_34 = ( ( IDENT_35 ) ( value ) ) ; break ; case INT_3 : this . IDENT_36 = ( ( IDENT_37 ) ( value ) ) ; break ; case INT_4 : this . IDENT_38 = ( ( IDENT_39 ) ( value ) ) ; break ; default : throw new java . lang . METHOD_4 ( java . lang . String . valueOf ( pos ) ) ; } }
org . junit . Assert . assertEquals ( expected , IDENT_1 ) 