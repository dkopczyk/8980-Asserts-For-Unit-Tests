METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; com . amazonaws . services . IDENT_1 . model . IDENT_2 IDENT_3 = new com . amazonaws . services . IDENT_1 . model . METHOD_1 ( ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_4 = new java . util . HashMap ( ) ; IDENT_4 . put ( IDENT_5 . IDENT_6 , IDENT_0 ) ; IDENT_3 . METHOD_2 ( IDENT_4 ) ; expect ( IDENT_7 . METHOD_3 ( org . IDENT_8 . jcr . value . IDENT_9 . IDENT_10 . IDENT_11 , org . IDENT_8 . jcr . value . IDENT_9 . IDENT_10 . IDENT_12 ) ) . andReturn ( IDENT_3 ) ; METHOD_4 ( ) ; org . IDENT_8 . jcr . value . IDENT_13 IDENT_14 = METHOD_5 ( org . IDENT_8 . jcr . value . IDENT_9 . IDENT_10 . IDENT_12 , org . IDENT_8 . jcr . value . IDENT_9 . IDENT_10 . IDENT_15 ) ; java . lang . String IDENT_16 = IDENT_17 . METHOD_6 ( IDENT_14 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( org . IDENT_8 . jcr . value . IDENT_13 ) { if ( ! ( METHOD_7 ( source ) ) ) { throw new org . IDENT_8 . jcr . value . IDENT_9 . METHOD_8 ( IDENT_18 . IDENT_19 . text ( source . getKey ( ) , directory ) ) ; } org . IDENT_8 . jcr . value . IDENT_20 IDENT_21 = METHOD_9 ( source . getKey ( ) , org . IDENT_8 . jcr . value . IDENT_9 . IDENT_22 . IDENT_23 ) ; return METHOD_10 ( IDENT_21 ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_16 ) 