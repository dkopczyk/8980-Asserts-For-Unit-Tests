METHOD_0 ( ) { java . io . InputStream stream = METHOD_1 ( STRING_0 ) ; image . METHOD_2 ( stream ) ; image . METHOD_3 ( true ) ; image . METHOD_4 ( true ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { format = - 1 ; IDENT_0 = - 1 ; IDENT_1 = - 1 ; IDENT_2 = - 1 ; IDENT_3 = 1 ; IDENT_4 = - 1 ; IDENT_5 = - 1 ; IDENT_6 = null ; try { int IDENT_7 = ( read ( ) ) & 255 ; int IDENT_8 = ( read ( ) ) & 255 ; if ( ( IDENT_7 == INT_0 ) && ( IDENT_8 == INT_1 ) ) { return METHOD_6 ( ) ; } else if ( ( IDENT_7 == INT_2 ) && ( IDENT_8 == INT_3 ) ) { return METHOD_7 ( ) ; } else if ( ( IDENT_7 == 255 ) && ( IDENT_8 == INT_4 ) ) { return METHOD_8 ( ) ; } else if ( ( IDENT_7 == INT_5 ) && ( IDENT_8 == INT_6 ) ) { return METHOD_9 ( ) ; } else if ( ( IDENT_7 == 10 ) && ( IDENT_8 < 6 ) ) { return METHOD_10 ( ) ; } else if ( ( IDENT_7 == INT_7 ) && ( IDENT_8 == INT_8 ) ) { return METHOD_11 ( ) ; } else if ( ( IDENT_7 == INT_9 ) && ( IDENT_8 == INT_10 ) ) { return METHOD_12 ( ) ; } else if ( ( ( IDENT_7 == INT_3 ) && ( IDENT_8 >= INT_11 ) ) && ( IDENT_8 <= INT_12 ) ) { return METHOD_13 ( ( IDENT_8 - STRING_1 ) ) ; } else if ( ( IDENT_7 == INT_13 ) && ( IDENT_8 == INT_5 ) ) { return METHOD_14 ( ) ; } else { return false ; } } catch ( java . io . IOException IDENT_9 ) { return false ; } }
org . junit . Assert . assertThat ( image . METHOD_5 ( ) , org . hamcrest . core . Is . is ( false ) ) 