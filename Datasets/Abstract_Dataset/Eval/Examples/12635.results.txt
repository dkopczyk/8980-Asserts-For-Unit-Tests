METHOD_0 ( ) { final java . io . File IDENT_0 = new java . io . File ( IDENT_1 . METHOD_1 ( ) , ( STRING_0 + ( java . util . UUID . METHOD_2 ( ) ) ) ) ; final java . io . IDENT_2 out = java . nio . file . IDENT_3 . METHOD_3 ( IDENT_0 . METHOD_4 ( ) , IDENT_4 . IDENT_5 ) ; org . apache . flink . fs . IDENT_6 . common . utils . IDENT_7 IDENT_8 = org . apache . flink . fs . IDENT_6 . common . utils . IDENT_7 . METHOD_5 ( METHOD_5 , out ) ; METHOD_6 ( ) ; IDENT_8 . METHOD_7 ( ) ; try ( java . util . stream . IDENT_9 < java . nio . file . Path > IDENT_10 = java . nio . file . IDENT_3 . list ( IDENT_1 . METHOD_1 ( ) . METHOD_4 ( ) ) ) { "<AssertPlaceHolder>" ; } } count ( ) { final java . lang . String id = new org . apache . flink . util . METHOD_8 ( ) . toString ( ) ; output ( new org . apache . flink . api . java . Utils . IDENT_11 < T > ( id ) ) . name ( STRING_1 ) ; org . apache . flink . api . common . IDENT_12 res = METHOD_9 ( ) . execute ( ) ; return res . < java . lang . Long > METHOD_10 ( id ) ; }
org . junit . Assert . assertEquals ( 0L , IDENT_10 . count ( ) ) 