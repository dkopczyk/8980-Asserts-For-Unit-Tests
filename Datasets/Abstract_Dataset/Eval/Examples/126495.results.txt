METHOD_0 ( ) { java . time . IDENT_0 IDENT_1 = date . METHOD_1 ( ) ; when ( IDENT_2 . METHOD_2 ( ) ) . thenReturn ( com . fasterxml . jackson . core . IDENT_3 . IDENT_4 ) ; when ( IDENT_2 . METHOD_3 ( ) ) . thenReturn ( IDENT_1 ) ; IDENT_5 = IDENT_6 . METHOD_4 ( IDENT_2 , IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( com . fasterxml . jackson . core . IDENT_8 , com . fasterxml . jackson . databind . IDENT_9 ) { if ( IDENT_10 instanceof org . IDENT_11 . internal . IDENT_12 ) { IDENT_13 id = null ; java . lang . String IDENT_14 = null ; com . fasterxml . jackson . core . IDENT_15 token = IDENT_10 . METHOD_5 ( ) ; if ( token == ( com . fasterxml . jackson . core . IDENT_15 . IDENT_16 ) ) { return null ; } if ( token == ( com . fasterxml . jackson . core . IDENT_15 . IDENT_17 ) ) { java . lang . Object object = IDENT_10 . METHOD_3 ( ) ; if ( object instanceof com . mongodb . IDENT_18 ) { if ( ( IDENT_19 ) != null ) { id = IDENT_19 . METHOD_4 ( IDENT_10 , IDENT_20 ) ; } else { id = ( ( IDENT_13 ) ( ( ( com . mongodb . IDENT_18 ) ( object ) ) . getId ( ) ) ) ; } IDENT_14 = ( ( com . mongodb . IDENT_18 ) ( object ) ) . METHOD_6 ( ) ; } else { throw IDENT_20 . METHOD_7 ( org . IDENT_11 . IDENT_18 . class , ( STRING_0 + object ) ) ; } } else if ( token == ( com . fasterxml . jackson . core . IDENT_15 . IDENT_21 ) ) { token = IDENT_10 . METHOD_8 ( ) ; while ( token != ( com . fasterxml . jackson . core . IDENT_15 . IDENT_22 ) ) { if ( IDENT_10 . METHOD_9 ( ) . equals ( STRING_1 ) ) { if ( ( IDENT_19 ) != null ) { id = IDENT_19 . METHOD_4 ( IDENT_10 , IDENT_20 ) ; } else { id = ( ( IDENT_13 ) ( IDENT_10 . METHOD_3 ( ) ) ) ; } } else if ( IDENT_10 . METHOD_9 ( ) . equals ( STRING_2 ) ) { IDENT_14 = IDENT_10 . getText ( ) ; } else { } token = IDENT_10 . METHOD_8 ( ) ; } } if ( id == null ) { return null ; } if ( IDENT_14 == null ) { throw IDENT_20 . METHOD_7 ( org . IDENT_11 . IDENT_18 . class , STRING_3 ) ; } org . IDENT_11 . IDENT_23 IDENT_24 = ( ( org . IDENT_11 . internal . IDENT_12 ) ( IDENT_10 ) ) . METHOD_10 ( ) ; org . IDENT_11 . IDENT_23 < T , IDENT_13 > IDENT_25 = IDENT_24 . METHOD_11 ( IDENT_14 , type , IDENT_26 ) ; return new org . IDENT_11 . internal . IDENT_27 < T , IDENT_13 > ( id , IDENT_25 ) ; } else { throw IDENT_20 . METHOD_7 ( org . IDENT_11 . IDENT_18 . class , ( ( ( STRING_4 + ( org . IDENT_11 . internal . IDENT_12 . class . getName ( ) ) ) + STRING_5 ) + ( IDENT_10 . getClass ( ) . getName ( ) ) ) ) ; } }
org . junit . Assert . assertEquals ( IDENT_1 , IDENT_5 ) 