METHOD_0 ( ) { final java . math . BigDecimal id = java . math . BigDecimal . valueOf ( INT_0 ) ; final java . lang . String name = STRING_0 5 ; final byte [ ] bytes = new byte [ INT_1 ] ; java . util . concurrent . IDENT_0 . METHOD_1 ( ) . METHOD_2 ( bytes ) ; final java . math . BigDecimal [ ] IDENT_1 = new java . math . BigDecimal [ ] { java . math . BigDecimal . valueOf ( 1 ) , java . math . BigDecimal . valueOf ( 2 ) , java . math . BigDecimal . valueOf ( 3 ) } ; final java . lang . String [ ] IDENT_2 = new java . lang . String [ ] { STRING_1 1 , STRING_2 , STRING_3 } ; final org . apache . flink . IDENT_3 . IDENT_4 . com . fasterxml . jackson . databind . IDENT_5 IDENT_6 = new org . apache . flink . IDENT_3 . IDENT_4 . com . fasterxml . jackson . databind . METHOD_3 ( ) ; org . apache . flink . IDENT_3 . IDENT_4 . com . fasterxml . jackson . databind . node . IDENT_7 root = IDENT_6 . METHOD_4 ( ) ; root . put ( STRING_4 3 , id . METHOD_5 ( ) ) ; root . METHOD_6 ( STRING_1 0 ) ; root . put ( STRING_0 2 , name ) ; root . put ( STRING_4 6 , STRING_1 ) ; root . put ( STRING_1 4 , STRING_0 ) ; root . put ( STRING_4 5 , STRING_4 7 ) ; root . put ( STRING_1 8 , bytes ) ; root . METHOD_7 ( STRING_5 ) . add ( 1 ) . add ( 2 ) . add ( 3 ) ; root . METHOD_7 ( STRING_0 6 ) . add ( STRING_1 1 ) . add ( STRING_2 ) . add ( STRING_3 ) ; root . METHOD_8 ( STRING_1 2 ) . put ( STRING_4 , true ) . put ( STRING_4 9 , 12 ) ; final byte [ ] IDENT_8 = IDENT_6 . METHOD_9 ( root ) ; org . apache . flink . IDENT_9 . json . IDENT_10 IDENT_11 = new org . apache . flink . IDENT_9 . json . METHOD_10 ( ( STRING_0 3 + ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( STRING_0 4 + STRING_6 ) + STRING_7 ) + STRING_0 9 ) + STRING_1 5 ) + STRING_1 7 ) + STRING_8 ) + STRING_4 1 ) + STRING_7 1 ) + STRING_1 6 ) + STRING_4 8 ) + STRING_7 0 ) + STRING_0 1 ) + STRING_9 ) + STRING_4 2 ) + STRING_0 0 ) + STRING_4 0 ) + STRING_0 7 ) + STRING_1 3 ) + STRING_0 8 ) ) ) ; final org . apache . flink . types . IDENT_12 IDENT_13 = IDENT_11 . METHOD_11 ( IDENT_8 ) ; final org . apache . flink . types . IDENT_12 expected = new org . apache . flink . types . METHOD_12 ( 10 ) ; expected . METHOD_13 ( 0 , id ) ; expected . METHOD_13 ( 1 , null ) ; expected . METHOD_13 ( 2 , name ) ; expected . METHOD_13 ( 3 , java . sql . Date . valueOf ( STRING_1 ) ) ; expected . METHOD_13 ( 4 , java . sql . IDENT_14 . valueOf ( STRING_4 4 ) ) ; expected . METHOD_13 ( 5 , java . sql . IDENT_15 . valueOf ( STRING_1 9 ) ) ; expected . METHOD_13 ( 6 , bytes ) ; expected . METHOD_13 ( 7 , IDENT_1 ) ; expected . METHOD_13 ( 8 , IDENT_2 ) ; final org . apache . flink . types . METHOD_12 IDENT_16 = new org . apache . flink . types . METHOD_12 ( 2 ) ; IDENT_16 . METHOD_13 ( 0 , true ) ; IDENT_16 . METHOD_13 ( 1 , java . math . BigDecimal . valueOf ( 12 ) ) ; expected . METHOD_13 ( 9 , IDENT_16 ) ; "<AssertPlaceHolder>" ; } METHOD_13 ( T , int ) { switch ( pos ) { case 0 : this . IDENT_17 = ( ( IDENT_18 ) ( value ) ) ; break ; case 1 : this . IDENT_19 = ( ( IDENT_20 ) ( value ) ) ; break ; case 2 : this . IDENT_21 = ( ( IDENT_22 ) ( value ) ) ; break ; case 3 : this . IDENT_23 = ( ( IDENT_24 ) ( value ) ) ; break ; case 4 : this . IDENT_25 = ( ( IDENT_26 ) ( value ) ) ; break ; case 5 : this . IDENT_27 = ( ( IDENT_28 ) ( value ) ) ; break ; case 6 : this . IDENT_29 = ( ( IDENT_30 ) ( value ) ) ; break ; case 7 : this . IDENT_31 = ( ( IDENT_32 ) ( value ) ) ; break ; case 8 : this . IDENT_33 = ( ( IDENT_34 ) ( value ) ) ; break ; case 9 : this . IDENT_35 = ( ( IDENT_36 ) ( value ) ) ; break ; case 10 : this . IDENT_37 = ( ( IDENT_38 ) ( value ) ) ; break ; case INT_2 : this . IDENT_39 = ( ( IDENT_40 ) ( value ) ) ; break ; case 12 : this . IDENT_41 = ( ( IDENT_42 ) ( value ) ) ; break ; case INT_3 : this . IDENT_43 = ( ( IDENT_44 ) ( value ) ) ; break ; case INT_4 : this . IDENT_45 = ( ( IDENT_46 ) ( value ) ) ; break ; case 15 : this . IDENT_47 = ( ( IDENT_48 ) ( value ) ) ; break ; case 16 : this . IDENT_49 = ( ( IDENT_50 ) ( value ) ) ; break ; case INT_5 : this . IDENT_51 = ( ( IDENT_52 ) ( value ) ) ; break ; case INT_6 : this . IDENT_53 = ( ( IDENT_54 ) ( value ) ) ; break ; default : throw new java . lang . METHOD_14 ( java . lang . String . valueOf ( pos ) ) ; } }
org . junit . Assert . assertEquals ( expected , IDENT_13 ) 