METHOD_0 ( ) { final org . apache . flink . api . common . IDENT_0 . IDENT_1 < org . apache . flink . types . IDENT_2 > IDENT_3 = org . apache . flink . api . common . IDENT_0 . IDENT_4 . METHOD_1 ( new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 } , IDENT_4 . IDENT_5 , IDENT_4 . IDENT_6 , IDENT_4 . IDENT_7 ) ; final org . apache . flink . types . IDENT_2 row = new org . apache . flink . types . METHOD_2 ( 3 ) ; row . METHOD_3 ( 0 , 1 ) ; row . METHOD_3 ( 1 , true ) ; row . METHOD_3 ( 2 , STRING_3 ) ; final org . apache . flink . types . METHOD_2 IDENT_8 = METHOD_4 ( IDENT_3 , row ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( IDENT_9 extends org . apache . flink . streaming . runtime . IDENT_10 . IDENT_11 , org . apache . flink . streaming . runtime . IDENT_10 . IDENT_12 ) { org . apache . flink . core . IDENT_13 . IDENT_14 output = new org . apache . flink . core . IDENT_13 . METHOD_5 ( INT_0 ) ; serializer . serialize ( record , output ) ; org . apache . flink . core . IDENT_13 . IDENT_15 IDENT_16 = new org . apache . flink . core . IDENT_13 . METHOD_6 ( output . METHOD_7 ( ) , 0 , output . length ( ) ) ; org . apache . flink . core . IDENT_13 . METHOD_5 IDENT_17 = new org . apache . flink . core . IDENT_13 . METHOD_5 ( INT_0 ) ; serializer . METHOD_8 ( IDENT_16 , IDENT_17 ) ; org . apache . flink . core . IDENT_13 . METHOD_6 input = new org . apache . flink . core . IDENT_13 . METHOD_6 ( IDENT_17 . METHOD_7 ( ) , 0 , IDENT_17 . length ( ) ) ; return ( ( IDENT_9 ) ( serializer . METHOD_9 ( input ) ) ) ; }
org . junit . Assert . assertEquals ( row , IDENT_8 ) 