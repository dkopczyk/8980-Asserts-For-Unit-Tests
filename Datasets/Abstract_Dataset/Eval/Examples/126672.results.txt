METHOD_0 ( ) { io . IDENT_0 . IDENT_1 . IDENT_2 . schema . IDENT_3 validator = new io . IDENT_0 . IDENT_1 . IDENT_2 . schema . METHOD_1 ( ) ; boolean IDENT_4 = validator . METHOD_2 ( STRING_0 , IDENT_5 . IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String , io . IDENT_0 . IDENT_1 . IDENT_2 . schema . IDENT_5 ) { com . github . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 schema = IDENT_11 . get ( IDENT_12 ) ; com . github . IDENT_7 . IDENT_8 . report . IDENT_13 report = null ; if ( schema == null ) { try { java . lang . String IDENT_14 = IDENT_12 . toString ( ) . toLowerCase ( ) ; com . fasterxml . jackson . databind . IDENT_15 IDENT_16 = com . github . IDENT_7 . jackson . IDENT_17 . METHOD_3 ( ( ( STRING_1 + IDENT_14 ) + STRING_2 ) ) ; schema = factory . METHOD_4 ( IDENT_16 ) ; IDENT_11 . put ( IDENT_12 , schema ) ; } catch ( java . io . IOException e ) { io . IDENT_0 . IDENT_1 . IDENT_2 . schema . METHOD_1 . LOG . error ( ( STRING_3 + IDENT_12 ) , e ) ; return false ; } catch ( com . github . IDENT_7 . IDENT_8 . exceptions . IDENT_18 e ) { io . IDENT_0 . IDENT_1 . IDENT_2 . schema . METHOD_1 . LOG . error ( ( STRING_4 + IDENT_12 ) , e ) ; return false ; } } try { com . fasterxml . jackson . databind . IDENT_15 IDENT_19 = com . github . IDENT_7 . jackson . IDENT_17 . METHOD_5 ( request ) ; report = schema . validate ( IDENT_19 ) ; } catch ( java . io . IOException e ) { io . IDENT_0 . IDENT_1 . IDENT_2 . schema . METHOD_1 . LOG . error ( ( STRING_5 + IDENT_12 ) , e ) ; } catch ( com . github . IDENT_7 . IDENT_8 . exceptions . IDENT_18 e ) { io . IDENT_0 . IDENT_1 . IDENT_2 . schema . METHOD_1 . LOG . error ( ( STRING_6 + IDENT_12 ) , e ) ; } return ( report != null ) && ( report . METHOD_6 ( ) ) ; }
org . junit . Assert . assertFalse ( IDENT_4 ) 