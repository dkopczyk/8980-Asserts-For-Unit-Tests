METHOD_0 ( ) { java . lang . String actual = STRING_0 ; org . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; org . IDENT_0 . core . IDENT_4 . IDENT_5 IDENT_6 = IDENT_3 . METHOD_2 ( actual ) ; org . IDENT_0 . core . IDENT_4 . IDENT_7 expected = org . IDENT_0 . core . IDENT_4 . IDENT_7 . create ( java . util . Arrays . < org . IDENT_0 . core . IDENT_4 . IDENT_8 > asList ( new org . IDENT_0 . core . IDENT_4 . METHOD_3 ( STRING_1 , new org . IDENT_0 . core . IDENT_4 . METHOD_4 ( ) ) ) , java . util . Arrays . < org . IDENT_0 . core . IDENT_4 . IDENT_5 > asList ( new org . IDENT_0 . core . IDENT_4 . METHOD_5 ( STRING_2 , STRING_3 , STRING_4 ) ) ) ; "<AssertPlaceHolder>" ; } create ( org . IDENT_0 . core . IDENT_9 . IDENT_10 , java . util . List , java . util . List , org . IDENT_0 . core . IDENT_11 . IDENT_12 , org . IDENT_0 . core . IDENT_9 . IDENT_13 . IDENT_14 ) { org . IDENT_0 . core . IDENT_9 . IDENT_13 . IDENT_15 node = new org . IDENT_0 . core . IDENT_9 . IDENT_13 . METHOD_6 ( IDENT_16 ) ; java . lang . String IDENT_17 = org . IDENT_0 . core . IDENT_9 . IDENT_13 . METHOD_6 . IDENT_18 ; org . apache . commons . lang3 . tuple . IDENT_19 < org . IDENT_0 . core . IDENT_4 . METHOD_5 , org . IDENT_0 . core . IDENT_9 . IDENT_20 > IDENT_21 = node . METHOD_7 ( IDENT_17 ) ; org . IDENT_0 . core . IDENT_4 . METHOD_5 IDENT_22 = IDENT_21 . METHOD_8 ( ) ; org . IDENT_0 . core . IDENT_9 . IDENT_20 IDENT_23 = IDENT_21 . METHOD_9 ( ) ; org . IDENT_0 . core . IDENT_9 . IDENT_24 IDENT_25 = ( ( org . IDENT_0 . core . IDENT_9 . IDENT_24 ) ( IDENT_26 . get ( 0 ) . METHOD_10 ( ) ) ) ; IDENT_25 . METHOD_11 ( IDENT_23 ) ; for ( org . IDENT_0 . core . IDENT_9 . IDENT_27 c : IDENT_28 ) { c . METHOD_11 ( IDENT_23 ) ; } node . METHOD_12 ( meta ) ; node . METHOD_13 ( IDENT_16 ) ; org . IDENT_0 . core . IDENT_9 . IDENT_13 . IDENT_29 IDENT_30 = IDENT_25 . METHOD_14 ( ) ; java . util . List < org . IDENT_0 . core . IDENT_4 . IDENT_8 > IDENT_31 = IDENT_25 . METHOD_15 ( ) . METHOD_16 ( ) ; org . apache . commons . lang3 . tuple . IDENT_32 < java . util . List < org . IDENT_0 . core . IDENT_4 . METHOD_3 > , org . IDENT_0 . core . IDENT_4 . IDENT_33 , java . util . Map < java . lang . Integer , java . lang . String > > IDENT_34 = org . IDENT_0 . core . IDENT_9 . IDENT_13 . METHOD_6 . METHOD_17 ( IDENT_30 , IDENT_31 , IDENT_22 , meta ) ; node . IDENT_35 = IDENT_34 . METHOD_8 ( ) ; org . IDENT_0 . core . IDENT_4 . IDENT_7 IDENT_36 = ( ( org . IDENT_0 . core . IDENT_4 . IDENT_7 ) ( IDENT_34 . METHOD_18 ( ) ) ) ; org . apache . commons . lang3 . tuple . IDENT_19 < org . IDENT_0 . core . IDENT_4 . IDENT_7 , java . util . HashMap < java . lang . String , org . IDENT_0 . core . IDENT_4 . IDENT_37 > > IDENT_38 = org . IDENT_0 . core . IDENT_9 . IDENT_13 . METHOD_6 . METHOD_19 ( IDENT_36 , IDENT_30 ) ; node . IDENT_39 = IDENT_38 . METHOD_8 ( ) ; node . IDENT_40 = IDENT_38 . METHOD_9 ( ) ; node . IDENT_41 = new ImmutableMap . Builder < java . lang . Integer , java . lang . String > ( ) . METHOD_20 ( IDENT_34 . METHOD_9 ( ) ) . build ( ) ; org . IDENT_0 . core . IDENT_9 . IDENT_42 IDENT_43 = ( ( org . IDENT_0 . core . IDENT_9 . IDENT_42 ) ( IDENT_44 . METHOD_10 ( ) ) ) ; org . IDENT_0 . core . IDENT_4 . IDENT_7 IDENT_45 = IDENT_43 . METHOD_15 ( ) ; if ( IDENT_46 . METHOD_21 ( ) instanceof IDENT_47 ) { IDENT_48 = ( ( IDENT_47 ) IDENT_46 . METHOD_21 ( ) ) . METHOD_22 ( ) ; } else if ( IDENT_46 . METHOD_21 ( ) instanceof IDENT_49 ) { IDENT_48 = ( ( IDENT_49 ) IDENT_46 . METHOD_21 ( ) ) . METHOD_22 ( ) ; } else { return null ; } node . IDENT_39 . METHOD_23 ( IDENT_45 . METHOD_24 ( ) ) ; if ( IDENT_45 . METHOD_25 ( ) . METHOD_26 ( ) ) { node . IDENT_39 . METHOD_27 ( IDENT_45 . METHOD_25 ( ) . get ( ) ) ; } if ( IDENT_45 . METHOD_28 ( ) . METHOD_26 ( ) ) { node . IDENT_39 . METHOD_29 ( IDENT_45 . METHOD_28 ( ) . get ( ) ) ; } return node ; }
org . junit . Assert . assertEquals ( expected , IDENT_6 ) 