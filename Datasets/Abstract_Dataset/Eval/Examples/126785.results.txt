METHOD_0 ( ) { org . IDENT_0 . core . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_0 . core . IDENT_1 . METHOD_1 ( STRING_0 , STRING_1 , STRING_1 2 ) ; org . IDENT_0 . core . IDENT_1 . IDENT_4 expected = org . IDENT_0 . core . IDENT_1 . IDENT_4 . create ( java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_5 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_2 , new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_3 2 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_6 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_4 ( STRING_1 2 , STRING_3 8 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_4 ( STRING_1 2 , STRING_3 0 ) ) ) ) , STRING_3 9 ) ) , IDENT_3 ) ; expected . METHOD_5 ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_4 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_6 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_4 ( STRING_1 2 , STRING_3 6 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_1 3 , org . IDENT_0 . core . IDENT_1 . IDENT_7 . valueOf ( STRING_3 5 ) ) ) ) ) ; expected . METHOD_5 ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_3 1 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_6 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_4 ( STRING_1 2 , STRING_3 6 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_1 0 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_6 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_1 3 , org . IDENT_0 . core . IDENT_1 . IDENT_7 . valueOf ( STRING_3 5 ) ) , new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_5 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_6 > asList ( org . IDENT_0 . core . IDENT_1 . IDENT_7 . valueOf ( STRING_6 ) , org . IDENT_0 . core . IDENT_1 . IDENT_7 . valueOf ( STRING_1 8 ) ) ) ) ) ) ) ) ; expected . METHOD_5 ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_1 1 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_6 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_4 ( STRING_1 2 , STRING_3 0 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_1 4 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_6 > asList ( org . IDENT_0 . core . IDENT_1 . IDENT_7 . valueOf ( STRING_4 2 ) , org . IDENT_0 . core . IDENT_1 . IDENT_7 . valueOf ( STRING_7 ) ) ) , new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_1 0 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_6 > asList ( org . IDENT_0 . core . IDENT_1 . IDENT_7 . valueOf ( STRING_4 2 ) , org . IDENT_0 . core . IDENT_1 . IDENT_7 . valueOf ( STRING_7 ) ) ) ) ) ) ; expected . METHOD_5 ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_3 1 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_6 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_4 ( STRING_1 2 , STRING_4 1 ) , org . IDENT_0 . core . IDENT_1 . IDENT_7 . valueOf ( STRING_3 4 ) ) ) ) ; expected . METHOD_6 ( org . IDENT_0 . core . IDENT_1 . IDENT_7 . valueOf ( 1 ) ) ; java . lang . String sql = STRING_1 9 + ( ( ( ( ( ( ( ( STRING_1 7 + STRING_4 0 ) + STRING_3 3 ) + STRING_3 7 ) + STRING_3 ) + STRING_1 5 ) + STRING_8 ) + STRING_9 ) + STRING_1 6 ) ; org . IDENT_0 . IDENT_8 . IDENT_9 IDENT_10 = new org . IDENT_0 . IDENT_8 . METHOD_7 ( ) ; org . IDENT_0 . core . IDENT_1 . IDENT_2 IDENT_11 = IDENT_10 . METHOD_8 ( sql ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( java . lang . String ) { org . IDENT_0 . parser . IDENT_12 p = org . IDENT_0 . IDENT_8 . METHOD_7 . METHOD_9 ( sql ) ; org . IDENT_0 . IDENT_8 . IDENT_13 g = new org . IDENT_0 . IDENT_8 . METHOD_10 ( ) ; return g . METHOD_11 ( p . METHOD_12 ( ) ) ; }
org . junit . Assert . assertEquals ( expected , IDENT_11 ) 