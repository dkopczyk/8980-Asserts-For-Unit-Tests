METHOD_0 ( ) { org . IDENT_0 . core . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_0 . core . IDENT_1 . METHOD_1 ( STRING_0 , STRING_1 , STRING_1 4 ) ; org . IDENT_0 . core . IDENT_1 . IDENT_2 IDENT_4 = new org . IDENT_0 . core . IDENT_1 . METHOD_1 ( STRING_0 , STRING_2 8 , STRING_2 ) ; org . IDENT_0 . core . IDENT_1 . IDENT_5 IDENT_6 = org . IDENT_0 . core . IDENT_1 . IDENT_5 . create ( java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_7 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_1 4 , STRING_3 ) , STRING_2 5 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( new org . IDENT_0 . core . IDENT_1 . METHOD_4 ( STRING_2 0 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_8 > asList ( org . IDENT_0 . core . IDENT_1 . IDENT_9 . valueOf ( STRING_2 2 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_4 ( STRING_1 5 , new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_1 4 , STRING_4 4 ) ) ) ) , STRING_1 1 ) ) , IDENT_3 ) ; IDENT_6 . METHOD_5 ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_3 ) ) ; IDENT_6 . METHOD_6 ( STRING_4 6 ) ; org . IDENT_0 . core . IDENT_1 . IDENT_5 expected = org . IDENT_0 . core . IDENT_1 . IDENT_5 . create ( java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_7 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( new org . IDENT_0 . core . IDENT_1 . METHOD_4 ( STRING_4 7 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_8 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_4 ( STRING_5 , new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_1 4 , STRING_1 0 ) ) , org . IDENT_0 . core . IDENT_1 . IDENT_9 . valueOf ( STRING_1 2 ) ) ) , STRING_4 ) ) , java . util . Arrays . asList ( IDENT_3 , IDENT_4 , IDENT_6 ) ) ; expected . METHOD_7 ( new org . IDENT_0 . core . IDENT_1 . METHOD_4 ( STRING_1 7 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_8 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_2 , STRING_1 8 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_1 4 , STRING_3 ) ) ) ) ; expected . METHOD_7 ( new org . IDENT_0 . core . IDENT_1 . METHOD_4 ( STRING_1 7 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_8 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_4 6 , STRING_2 5 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_1 4 , STRING_3 ) ) ) ) ; expected . METHOD_7 ( new org . IDENT_0 . core . IDENT_1 . METHOD_4 ( STRING_1 7 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_8 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_2 , STRING_2 3 ) , org . IDENT_0 . core . IDENT_1 . IDENT_9 . valueOf ( STRING_2 4 ) ) ) ) ; expected . METHOD_7 ( new org . IDENT_0 . core . IDENT_1 . METHOD_4 ( STRING_1 7 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_8 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_2 , STRING_1 3 ) , org . IDENT_0 . core . IDENT_1 . IDENT_9 . valueOf ( STRING_1 6 ) ) ) ) ; expected . METHOD_7 ( new org . IDENT_0 . core . IDENT_1 . METHOD_4 ( STRING_6 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_8 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_1 4 , STRING_4 4 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_4 6 , STRING_1 1 ) ) ) ) ; expected . METHOD_8 ( org . IDENT_0 . core . IDENT_1 . IDENT_9 . valueOf ( 1 ) ) ; java . lang . String sql = STRING_4 3 + ( ( ( ( ( ( ( ( ( ( ( STRING_2 1 + STRING_4 2 ) + STRING_7 ) + STRING_2 9 ) + STRING_4 0 ) + STRING_2 6 ) + STRING_8 ) + STRING_2 7 ) + STRING_1 9 ) + STRING_4 5 ) + STRING_9 ) + STRING_4 1 ) ; org . IDENT_0 . IDENT_10 . IDENT_11 IDENT_12 = new org . IDENT_0 . IDENT_10 . METHOD_9 ( ) ; org . IDENT_0 . core . IDENT_1 . IDENT_2 IDENT_13 = IDENT_12 . METHOD_10 ( sql ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( java . lang . String ) { org . IDENT_0 . parser . IDENT_14 p = org . IDENT_0 . IDENT_10 . METHOD_9 . METHOD_11 ( sql ) ; org . IDENT_0 . IDENT_10 . IDENT_15 g = new org . IDENT_0 . IDENT_10 . METHOD_12 ( ) ; return g . METHOD_13 ( p . METHOD_14 ( ) ) ; }
org . junit . Assert . assertEquals ( expected , IDENT_13 ) 