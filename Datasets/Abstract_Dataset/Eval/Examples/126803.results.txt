METHOD_0 ( ) { org . IDENT_0 . core . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_0 . core . IDENT_1 . METHOD_1 ( STRING_0 , STRING_1 2 , STRING_1 5 ) ; org . IDENT_0 . core . IDENT_1 . IDENT_2 IDENT_4 = new org . IDENT_0 . core . IDENT_1 . METHOD_1 ( STRING_0 , STRING_2 , STRING_3 ) ; org . IDENT_0 . core . IDENT_1 . IDENT_2 IDENT_5 = new org . IDENT_0 . core . IDENT_1 . METHOD_1 ( STRING_0 , STRING_1 , STRING_3 9 ) ; org . IDENT_0 . core . IDENT_1 . IDENT_6 IDENT_7 = new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( STRING_4 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_8 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_3 9 , STRING_3 7 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( STRING_1 3 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_8 > asList ( org . IDENT_0 . core . IDENT_1 . IDENT_9 . valueOf ( 1 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_3 9 , STRING_5 ) ) ) ) ) ; org . IDENT_0 . core . IDENT_1 . IDENT_10 IDENT_11 = org . IDENT_0 . core . IDENT_1 . IDENT_10 . create ( java . util . Arrays . asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_3 9 , STRING_3 0 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_4 ( new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( STRING_6 , IDENT_7 ) , STRING_3 8 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_3 , STRING_3 6 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_3 , STRING_1 7 ) ) , java . util . Arrays . asList ( IDENT_3 , IDENT_4 , IDENT_5 ) ) ; IDENT_11 . METHOD_5 ( new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( STRING_1 0 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_8 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_1 5 , STRING_1 4 ) , org . IDENT_0 . core . IDENT_1 . IDENT_9 . valueOf ( STRING_3 2 ) ) ) ) ; IDENT_11 . METHOD_5 ( new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( STRING_1 0 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_8 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_1 5 , STRING_3 3 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_3 , STRING_7 ) ) ) ) ; IDENT_11 . METHOD_5 ( new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( STRING_1 0 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_8 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_3 9 , STRING_3 0 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_3 , STRING_3 1 ) ) ) ) ; IDENT_11 . METHOD_5 ( new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( STRING_8 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_8 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_3 , STRING_3 6 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( STRING_1 1 , org . IDENT_0 . core . IDENT_1 . IDENT_9 . valueOf ( STRING_3 4 ) ) ) ) ) ; IDENT_11 . METHOD_5 ( new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( STRING_9 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_8 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_3 9 , STRING_3 5 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( STRING_1 1 , org . IDENT_0 . core . IDENT_1 . IDENT_9 . valueOf ( STRING_3 4 ) ) ) ) ) ; IDENT_11 . METHOD_6 ( java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_12 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_7 ( STRING_3 0 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_7 ( STRING_3 6 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_7 ( STRING_1 7 ) ) ) ; IDENT_11 . METHOD_8 ( java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_13 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_9 ( STRING_3 8 , STRING_1 6 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_9 ( STRING_3 6 ) ) ) ; IDENT_11 . METHOD_10 ( org . IDENT_0 . core . IDENT_1 . IDENT_9 . valueOf ( 10 ) ) ; org . IDENT_0 . IDENT_14 . IDENT_15 IDENT_16 = new org . IDENT_0 . IDENT_14 . METHOD_11 ( new org . IDENT_0 . IDENT_17 . METHOD_12 ( ) ) ; java . lang . String actual = IDENT_16 . METHOD_13 ( IDENT_11 ) ; java . util . List < java . lang . Object [ ] > result = shell . METHOD_14 ( actual ) ; "<AssertPlaceHolder>" ; } METHOD_13 ( org . IDENT_0 . core . IDENT_1 . IDENT_18 ) { java . lang . StringBuilder sql = new java . lang . StringBuilder ( ) ; java . lang . String IDENT_19 = query . METHOD_15 ( ) ; java . lang . String tableName = query . METHOD_16 ( ) ; java . util . List < java . lang . Object > values = query . METHOD_17 ( ) ; sql . append ( STRING_10 ) ; sql . append ( METHOD_18 ( IDENT_19 ) ) ; sql . append ( STRING_11 ) ; sql . append ( METHOD_18 ( tableName ) ) ; sql . append ( STRING_12 ) ; boolean IDENT_20 = true ; for ( java . lang . Object v : values ) { if ( IDENT_20 == false ) { sql . append ( STRING_13 ) ; } if ( v instanceof org . IDENT_0 . commons . IDENT_21 ) { if ( ( IDENT_22 ) instanceof org . IDENT_0 . IDENT_17 . IDENT_23 ) { sql . append ( ( ( STRING_14 + ( v . toString ( ) ) ) + STRING_15 ) ) ; } else { sql . append ( ( ( STRING_15 + ( v . toString ( ) ) ) + STRING_15 ) ) ; } } else if ( v instanceof java . lang . String ) { sql . append ( ( ( STRING_15 + v ) + STRING_15 ) ) ; } else { sql . append ( v . toString ( ) ) ; } IDENT_20 = false ; } sql . append ( STRING_16 ) ; return sql . toString ( ) ; }
org . junit . Assert . assertEquals ( 0 , result . size ( ) ) 