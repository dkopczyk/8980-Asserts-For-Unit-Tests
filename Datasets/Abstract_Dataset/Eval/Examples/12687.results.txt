METHOD_0 ( ) { java . util . List < org . apache . flink . streaming . runtime . IDENT_0 . IDENT_1 < org . apache . flink . IDENT_2 . IDENT_3 > > IDENT_4 = new java . util . ArrayList ( ) ; org . apache . flink . IDENT_2 . IDENT_3 IDENT_5 = new org . apache . flink . IDENT_2 . METHOD_1 ( INT_0 , "a" , 1.0 ) ; org . apache . flink . IDENT_2 . METHOD_1 IDENT_6 = new org . apache . flink . IDENT_2 . METHOD_1 ( INT_1 , "b" , FLOAT_0 ) ; org . apache . flink . IDENT_2 . METHOD_1 IDENT_7 = new org . apache . flink . IDENT_2 . METHOD_1 ( INT_2 , STRING_0 , 2.0 ) ; org . apache . flink . IDENT_2 . METHOD_1 IDENT_8 = new org . apache . flink . IDENT_2 . METHOD_1 ( INT_3 , STRING_0 , FLOAT_1 ) ; org . apache . flink . IDENT_2 . METHOD_1 d = new org . apache . flink . IDENT_2 . METHOD_1 ( INT_3 , STRING_1 , FLOAT_1 ) ; IDENT_4 . add ( new org . apache . flink . streaming . runtime . IDENT_0 . METHOD_2 ( IDENT_5 , 1 ) ) ; IDENT_4 . add ( new org . apache . flink . streaming . runtime . IDENT_0 . METHOD_2 ( IDENT_6 , 2 ) ) ; IDENT_4 . add ( new org . apache . flink . streaming . runtime . IDENT_0 . METHOD_2 ( IDENT_7 , 3 ) ) ; IDENT_4 . add ( new org . apache . flink . streaming . runtime . IDENT_0 . METHOD_2 ( IDENT_8 , 4 ) ) ; IDENT_4 . add ( new org . apache . flink . streaming . runtime . IDENT_0 . METHOD_2 ( d , 5 ) ) ; org . apache . flink . IDENT_2 . pattern . IDENT_9 < org . apache . flink . IDENT_2 . METHOD_1 , ? > pattern = org . apache . flink . IDENT_2 . pattern . IDENT_9 . < org . apache . flink . IDENT_2 . METHOD_1 > METHOD_3 ( STRING_2 ) . METHOD_4 ( new org . apache . flink . IDENT_2 . pattern . IDENT_10 . IDENT_11 < org . apache . flink . IDENT_2 . METHOD_1 > ( ) { MOD_0 MOD_1 final long IDENT_12 = - INT_4 ; @ org . apache . flink . IDENT_2 . IDENT_13 . Override public boolean filter ( org . apache . flink . IDENT_2 . METHOD_1 value ) throws org . apache . flink . IDENT_2 . IDENT_13 . Exception { return value . getName ( ) . equals ( "a" ) ; } } ) . METHOD_5 ( STRING_3 ) . METHOD_4 ( new org . apache . flink . IDENT_2 . pattern . IDENT_10 . IDENT_11 < org . apache . flink . IDENT_2 . METHOD_1 > ( ) { MOD_0 MOD_1 final long IDENT_12 = - INT_5 ; @ org . apache . flink . IDENT_2 . IDENT_13 . Override public boolean filter ( org . apache . flink . IDENT_2 . METHOD_1 value ) throws org . apache . flink . IDENT_2 . IDENT_13 . Exception { return value . getName ( ) . equals ( "b" ) ; } } ) . METHOD_6 ( STRING_4 ) . METHOD_4 ( new org . apache . flink . IDENT_2 . pattern . IDENT_10 . IDENT_11 < org . apache . flink . IDENT_2 . METHOD_1 > ( ) { MOD_0 MOD_1 final long IDENT_12 = INT_6 ; @ org . apache . flink . IDENT_2 . IDENT_13 . Override public boolean filter ( org . apache . flink . IDENT_2 . METHOD_1 value ) throws org . apache . flink . IDENT_2 . IDENT_13 . Exception { return value . getName ( ) . equals ( STRING_0 ) ; } } ) . METHOD_6 ( STRING_5 ) . METHOD_4 ( new org . apache . flink . IDENT_2 . pattern . IDENT_10 . IDENT_11 < org . apache . flink . IDENT_2 . METHOD_1 > ( ) { MOD_0 MOD_1 final long IDENT_12 = INT_7 ; @ org . apache . flink . IDENT_2 . IDENT_13 . Override public boolean filter ( org . apache . flink . IDENT_2 . METHOD_1 value ) throws org . apache . flink . IDENT_2 . IDENT_13 . Exception { return value . getName ( ) . equals ( STRING_1 ) ; } } ) ; org . apache . flink . IDENT_2 . IDENT_13 . IDENT_14 < org . apache . flink . IDENT_2 . METHOD_1 > IDENT_13 = METHOD_7 ( pattern , false ) ; final java . util . List < java . util . List < org . apache . flink . IDENT_2 . METHOD_1 > > matches = METHOD_8 ( IDENT_4 , IDENT_13 ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_15 . size ( ) ; }
org . junit . Assert . assertEquals ( 0 , matches . size ( ) ) 