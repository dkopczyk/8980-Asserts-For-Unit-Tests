METHOD_0 ( ) { final org . apache . flink . IDENT_0 . pattern . IDENT_1 < org . apache . flink . IDENT_0 . IDENT_2 , org . apache . flink . IDENT_0 . IDENT_2 > pattern = org . apache . flink . IDENT_0 . pattern . IDENT_1 . < org . apache . flink . IDENT_0 . IDENT_2 > METHOD_1 ( STRING_0 ) . METHOD_2 ( org . apache . flink . IDENT_0 . IDENT_3 . compiler . IDENT_4 . IDENT_5 ) . METHOD_3 ( STRING_1 ) . METHOD_2 ( org . apache . flink . IDENT_0 . IDENT_3 . compiler . IDENT_4 . IDENT_5 ) . METHOD_4 ( STRING_2 ) . METHOD_2 ( org . apache . flink . IDENT_0 . IDENT_3 . compiler . IDENT_4 . IDENT_5 ) . METHOD_5 ( ) . METHOD_4 ( STRING_3 ) . METHOD_2 ( org . apache . flink . IDENT_0 . IDENT_3 . compiler . IDENT_4 . IDENT_6 ) ; final org . apache . flink . IDENT_0 . IDENT_3 . compiler . IDENT_7 . IDENT_8 < org . apache . flink . IDENT_0 . IDENT_2 > IDENT_9 = new org . apache . flink . IDENT_0 . IDENT_3 . compiler . IDENT_7 . IDENT_8 < > ( pattern ) ; IDENT_9 . METHOD_6 ( ) ; int IDENT_10 = 0 ; for ( org . apache . flink . IDENT_0 . IDENT_3 . IDENT_11 < org . apache . flink . IDENT_0 . IDENT_2 > state : IDENT_9 . METHOD_7 ( ) ) { if ( state . getName ( ) . equals ( STRING_3 ) ) { IDENT_10 ++ ; } } "<AssertPlaceHolder>" ; } equals ( java . lang . Object ) { if ( ( this ) == o ) { return true ; } if ( ( o == null ) || ( ( getClass ( ) ) != ( o . getClass ( ) ) ) ) { return false ; } org . apache . flink . table . utils . IDENT_12 . IDENT_13 IDENT_14 = ( ( org . apache . flink . table . utils . IDENT_12 . IDENT_13 ) ( o ) ) ; return ( ( IDENT_15 ) == ( IDENT_14 . IDENT_15 ) ) && ( java . util . IDENT_16 . equals ( string , IDENT_14 . string ) ) ; }
org . junit . Assert . assertEquals ( 1 , IDENT_10 ) 