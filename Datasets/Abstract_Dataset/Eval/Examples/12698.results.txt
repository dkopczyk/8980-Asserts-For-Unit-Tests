METHOD_0 ( ) { java . lang . String IDENT_0 = IDENT_1 . METHOD_1 ( ) . getAbsolutePath ( ) ; org . apache . flink . IDENT_2 . streaming . state . IDENT_3 IDENT_4 = new org . apache . flink . IDENT_2 . streaming . state . METHOD_2 ( new org . apache . flink . runtime . state . IDENT_5 . METHOD_3 ( ) ) ; IDENT_4 . METHOD_4 ( IDENT_0 ) ; org . apache . flink . IDENT_6 . IDENT_7 . IDENT_8 < org . apache . flink . IDENT_6 . IDENT_9 , java . lang . Integer , java . util . Map < java . lang . String , java . util . List < org . apache . flink . IDENT_6 . IDENT_9 > > > IDENT_7 = org . apache . flink . IDENT_6 . IDENT_7 . IDENT_10 . METHOD_5 ( true , new org . apache . flink . IDENT_6 . IDENT_7 . IDENT_11 . METHOD_6 ( ) ) ; org . apache . flink . streaming . util . IDENT_12 < org . apache . flink . IDENT_6 . IDENT_9 , java . util . Map < java . lang . String , java . util . List < org . apache . flink . IDENT_6 . IDENT_9 > > > IDENT_13 = org . apache . flink . IDENT_6 . IDENT_7 . IDENT_10 . METHOD_7 ( IDENT_7 ) ; try { IDENT_13 . METHOD_8 ( IDENT_4 ) ; IDENT_13 . METHOD_9 ( ) ; org . apache . flink . IDENT_6 . IDENT_9 IDENT_14 = new org . apache . flink . IDENT_6 . METHOD_10 ( INT_0 , STRING_0 , 1.0 ) ; org . apache . flink . IDENT_6 . IDENT_15 IDENT_16 = new org . apache . flink . IDENT_6 . METHOD_11 ( INT_0 , "a" , 1.0 , FLOAT_0 ) ; org . apache . flink . IDENT_6 . METHOD_10 IDENT_17 = new org . apache . flink . IDENT_6 . METHOD_10 ( INT_0 , "b" , 1.0 ) ; IDENT_13 . METHOD_12 ( new org . apache . flink . streaming . runtime . IDENT_18 . METHOD_13 ( IDENT_14 , 1L ) ) ; org . apache . flink . runtime . IDENT_19 . IDENT_20 IDENT_21 = IDENT_13 . METHOD_14 ( 0L , 0L ) ; IDENT_13 . close ( ) ; IDENT_7 = org . apache . flink . IDENT_6 . IDENT_7 . IDENT_10 . METHOD_5 ( true , new org . apache . flink . IDENT_6 . IDENT_7 . IDENT_11 . METHOD_6 ( ) ) ; IDENT_13 = org . apache . flink . IDENT_6 . IDENT_7 . IDENT_10 . METHOD_7 ( IDENT_7 ) ; IDENT_4 = new org . apache . flink . IDENT_2 . streaming . state . METHOD_2 ( new org . apache . flink . runtime . state . IDENT_5 . METHOD_3 ( ) ) ; IDENT_4 . METHOD_4 ( IDENT_0 ) ; IDENT_13 . METHOD_8 ( IDENT_4 ) ; IDENT_13 . METHOD_15 ( ) ; IDENT_13 . METHOD_16 ( METHOD_14 ) ; IDENT_13 . METHOD_9 ( ) ; IDENT_13 . METHOD_12 ( new org . apache . flink . streaming . runtime . IDENT_18 . METHOD_13 ( new org . apache . flink . IDENT_6 . METHOD_10 ( INT_0 , STRING_1 , 1.0 ) , INT_1 ) ) ; org . apache . flink . runtime . IDENT_19 . IDENT_20 IDENT_22 = IDENT_13 . METHOD_14 ( 0L , 0L ) ; IDENT_13 . close ( ) ; IDENT_7 = org . apache . flink . IDENT_6 . IDENT_7 . IDENT_10 . METHOD_5 ( true , new org . apache . flink . IDENT_6 . IDENT_7 . IDENT_11 . METHOD_6 ( ) ) ; IDENT_13 = org . apache . flink . IDENT_6 . IDENT_7 . IDENT_10 . METHOD_7 ( IDENT_7 ) ; IDENT_4 = new org . apache . flink . IDENT_2 . streaming . state . METHOD_2 ( new org . apache . flink . runtime . state . IDENT_5 . METHOD_3 ( ) ) ; IDENT_4 . METHOD_4 ( IDENT_0 ) ; IDENT_13 . METHOD_8 ( IDENT_4 ) ; IDENT_13 . METHOD_15 ( ) ; IDENT_13 . METHOD_16 ( IDENT_22 ) ; IDENT_13 . METHOD_9 ( ) ; IDENT_13 . METHOD_12 ( new org . apache . flink . streaming . runtime . IDENT_18 . METHOD_13 < org . apache . flink . IDENT_6 . METHOD_10 > ( IDENT_16 , INT_1 ) ) ; IDENT_13 . METHOD_12 ( new org . apache . flink . streaming . runtime . IDENT_18 . METHOD_13 ( IDENT_17 , INT_1 ) ) ; java . util . IDENT_23 < java . lang . Object > result = IDENT_13 . METHOD_17 ( ) ; "<AssertPlaceHolder>" ; METHOD_18 ( result . METHOD_19 ( ) , IDENT_14 , IDENT_16 , IDENT_17 ) ; } finally { IDENT_13 . close ( ) ; } } size ( ) { return IDENT_24 . size ( ) ; }
org . junit . Assert . assertEquals ( 1 , result . size ( ) ) 