METHOD_0 ( ) { double [ ] array = new double [ METHOD_1 ( ) ] ; for ( int i = 0 ; i < ( array . length ) ; i ++ ) { array [ i ] = IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . util . IDENT_4 . IDENT_5 . METHOD_2 ( ) ; } "<AssertPlaceHolder>" ; } hashCode ( java . lang . Object ) { if ( array == null ) { return 0 ; } java . lang . Class < ? > IDENT_6 = array . getClass ( ) ; if ( ! ( IDENT_6 . METHOD_3 ( ) ) ) { throw new java . lang . IllegalArgumentException ( STRING_0 ) ; } int result = 1 ; java . lang . Class < ? > IDENT_7 = IDENT_6 . METHOD_4 ( ) ; int len = java . lang . reflect . IDENT_8 . METHOD_5 ( array ) ; for ( int i = 0 ; i < len ; i ++ ) { int IDENT_9 = 0 ; java . lang . Object value = java . lang . reflect . IDENT_8 . get ( array , i ) ; if ( value != null ) { if ( ! ( IDENT_7 . METHOD_3 ( ) ) ) { IDENT_9 = value . hashCode ( ) ; } else { IDENT_9 = IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . util . IDENT_10 . hashCode ( value ) ; } } result = ( INT_0 * result ) + IDENT_9 ; } return result ; }
org . junit . Assert . assertEquals ( java . util . Arrays . hashCode ( array ) , IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . util . IDENT_10 . hashCode ( array ) ) 