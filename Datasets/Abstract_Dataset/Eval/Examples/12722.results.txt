METHOD_0 ( ) { org . apache . flink . api . java . IDENT_0 < org . apache . flink . graph . IDENT_1 < org . apache . flink . types . IDENT_2 , org . apache . flink . graph . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 > > IDENT_9 = IDENT_10 . run ( new org . apache . flink . graph . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 < org . apache . flink . types . IDENT_2 , org . apache . flink . types . IDENT_11 , org . apache . flink . types . IDENT_11 > ( ) . METHOD_1 ( false ) ) ; "<AssertPlaceHolder>" ; org . apache . flink . api . java . IDENT_0 < org . apache . flink . graph . IDENT_1 < org . apache . flink . types . IDENT_2 , org . apache . flink . graph . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 > > IDENT_12 = IDENT_10 . run ( new org . apache . flink . graph . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 < org . apache . flink . types . IDENT_2 , org . apache . flink . types . IDENT_11 , org . apache . flink . types . IDENT_11 > ( ) . METHOD_1 ( true ) ) ; java . lang . String IDENT_13 = STRING_0 + ( STRING_1 + STRING_2 ) ; org . apache . flink . test . util . IDENT_14 . METHOD_2 ( IDENT_12 . collect ( ) , IDENT_13 ) ; } collect ( ) { final java . lang . String id = new org . apache . flink . util . METHOD_3 ( ) . toString ( ) ; final org . apache . flink . api . common . IDENT_15 . IDENT_16 < T > serializer = getType ( ) . METHOD_4 ( METHOD_5 ( ) . METHOD_6 ( ) ) ; this . output ( new org . apache . flink . api . java . Utils . IDENT_17 < > ( id , serializer ) ) . name ( STRING_3 ) ; org . apache . flink . api . common . IDENT_18 res = METHOD_5 ( ) . execute ( ) ; java . util . ArrayList < byte [ ] > IDENT_19 = res . METHOD_7 ( id ) ; if ( IDENT_19 != null ) { try { return org . apache . flink . api . common . IDENT_20 . IDENT_21 . METHOD_8 ( IDENT_19 , serializer ) ; } catch ( java . lang . IDENT_22 e ) { throw new java . lang . RuntimeException ( STRING_4 , e ) ; } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( STRING_5 , e ) ; } } else { throw new java . lang . RuntimeException ( STRING_6 ) ; } }
org . junit . Assert . assertEquals ( 0 , IDENT_9 . collect ( ) . size ( ) ) 