METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 action = mock ( com . IDENT_0 . IDENT_1 . IDENT_2 . class ) ; when ( action . METHOD_1 ( ) ) . thenReturn ( FLOAT_0 ) ; when ( action . METHOD_2 ( STRING_0 ) ) . thenReturn ( FLOAT_1 ) ; io . github . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 provider = factory . METHOD_3 ( action ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( com . IDENT_0 . IDENT_1 . IDENT_2 ) { final io . github . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_8 . Status status = ( ( action . METHOD_2 ( io . github . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_9 . IDENT_10 ) ) <= ( action . METHOD_1 ( ) ) ) ? io . github . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_8 . Status . IDENT_11 : io . github . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_8 . Status . IDENT_12 ; return new io . github . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_4 ( ) { @ io . github . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . Override public io . github . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_8 . Status METHOD_5 ( ) { return status ; } @ io . github . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . Override public java . lang . String METHOD_6 ( ) { return io . github . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_9 . IDENT_10 ; } } ; }
org . junit . Assert . assertThat ( provider . METHOD_5 ( ) , org . hamcrest . Matchers . equalTo ( IDENT_8 . Status . IDENT_12 ) ) 