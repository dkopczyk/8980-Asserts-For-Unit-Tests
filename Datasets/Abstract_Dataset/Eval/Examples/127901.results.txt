METHOD_0 ( ) { java . lang . String template = STRING_0 ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 session = new org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; session . METHOD_2 ( new org . IDENT_4 . Document ( new org . IDENT_0 . common . xml . METHOD_3 ( ) . METHOD_4 ( template , null , null ) ) ) ; java . util . Map < java . lang . String , java . lang . String [ ] > IDENT_5 = new java . util . HashMap ( ) ; IDENT_5 . put ( STRING_1 , new java . lang . String [ ] { STRING_2 } ) ; IDENT_5 . put ( STRING_3 , new java . lang . String [ ] { STRING_4 } ) ; IDENT_5 . put ( STRING_5 , new java . lang . String [ ] { "" } ) ; session . METHOD_5 ( ) . METHOD_6 ( IDENT_5 ) ; session . METHOD_5 ( ) . METHOD_7 ( ) ; template = STRING_6 ; org . IDENT_4 . Document expected = new org . IDENT_4 . Document ( new org . IDENT_0 . common . xml . METHOD_3 ( ) . METHOD_4 ( template , null , null ) ) ; org . IDENT_4 . Document result = session . METHOD_8 ( ) ; result = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_7 . METHOD_9 ( result ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( org . IDENT_4 . Document , org . IDENT_4 . Document ) { try { return org . IDENT_0 . common . xml . IDENT_8 . IDENT_9 . METHOD_11 ( org . IDENT_0 . common . xml . IDENT_8 . METHOD_12 ( IDENT_10 ) , org . IDENT_0 . common . xml . IDENT_8 . METHOD_12 ( IDENT_11 ) ) ; } catch ( java . lang . Exception e ) { org . IDENT_0 . common . xml . IDENT_8 . LOGGER . warn ( STRING_7 , e ) ; return false ; } }
org . junit . Assert . assertTrue ( org . IDENT_0 . common . xml . IDENT_8 . METHOD_10 ( expected , result ) ) 