METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; fr . IDENT_1 . IDENT_2 . api . domain . IDENT_3 IDENT_4 = new fr . IDENT_1 . IDENT_2 . api . domain . METHOD_1 ( IDENT_0 ) ; java . lang . String IDENT_5 = fr . IDENT_1 . IDENT_2 . plugin . IDENT_6 . IDENT_7 . connection . METHOD_2 ( IDENT_4 ) ; java . util . List < java . lang . String > IDENT_8 = fr . IDENT_1 . IDENT_2 . plugin . IDENT_6 . IDENT_7 . connection . METHOD_3 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( fr . IDENT_1 . IDENT_2 . api . domain . METHOD_1 ) { METHOD_4 ( ) ; METHOD_5 ( IDENT_4 ) ; try { java . util . Set < java . lang . String > IDENT_9 = new java . util . IDENT_10 < java . lang . String > ( ) ; fr . IDENT_1 . IDENT_2 . IDENT_11 . IDENT_6 . resource . IDENT_12 IDENT_13 = IDENT_14 . METHOD_6 ( IDENT_4 . METHOD_7 ( ) ) ; METHOD_8 ( IDENT_9 , IDENT_13 ) ; java . util . List < java . lang . String > IDENT_15 = new java . util . ArrayList < java . lang . String > ( IDENT_9 ) ; java . util . Collections . METHOD_9 ( IDENT_15 , new fr . IDENT_1 . IDENT_2 . plugin . IDENT_6 . METHOD_10 ( ) ) ; return IDENT_15 ; } catch ( fr . IDENT_1 . IDENT_2 . IDENT_11 . IDENT_6 . exception . IDENT_16 e ) { throw new fr . IDENT_1 . IDENT_2 . api . exception . METHOD_11 ( ( STRING_1 + IDENT_4 ) , e ) ; } }
org . junit . Assert . assertTrue ( IDENT_8 . contains ( IDENT_5 ) ) 