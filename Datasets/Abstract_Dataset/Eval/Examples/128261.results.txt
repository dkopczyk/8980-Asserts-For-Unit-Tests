METHOD_0 ( ) { java . lang . String path = STRING_0 ; fixture . METHOD_1 ( path ) ; if ( ( fixture . METHOD_2 ( ) ) == null ) { org . junit . Assert . fail ( ) ; } java . lang . String IDENT_0 = ( ( ( ( ( ( ( ( ( path + ( java . io . File . IDENT_1 ) ) + STRING_1 ) + ( java . io . File . IDENT_1 ) ) + STRING_2 ) + STRING_3 ) + path ) + ( java . io . File . IDENT_1 ) ) + STRING_4 ) + ( java . io . File . IDENT_1 ) ) + STRING_5 ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { java . lang . StringBuffer command = new java . lang . StringBuffer ( ) ; if ( METHOD_3 ( ) . toLowerCase ( ) . contains ( STRING_6 ) ) { command . append ( IDENT_2 ) ; command . append ( File . IDENT_1 ) ; command . append ( IDENT_3 ) ; command . append ( STRING_7 ) ; } else { command . append ( METHOD_4 ( ) ) ; command . append ( File . IDENT_1 ) ; command . append ( IDENT_3 ) ; command . append ( " " ) ; command . append ( IDENT_4 . IDENT_5 ) ; command . append ( " " ) ; command . append ( METHOD_5 ( ) ) ; } return command . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , fixture . METHOD_2 ( ) ) 