METHOD_0 ( ) { try ( org . apache . flink . runtime . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new org . apache . flink . runtime . IDENT_0 . IDENT_1 . METHOD_1 ( IDENT_4 ) ) { final java . util . concurrent . IDENT_5 < org . apache . flink . runtime . messages . IDENT_6 > IDENT_7 = new java . util . concurrent . METHOD_2 ( ) ; final java . util . concurrent . METHOD_2 < org . apache . flink . runtime . IDENT_8 . types . IDENT_9 > IDENT_10 = new java . util . concurrent . METHOD_2 ( ) ; final java . util . concurrent . METHOD_2 < org . apache . flink . runtime . IDENT_8 . types . IDENT_9 > IDENT_11 = new java . util . concurrent . METHOD_2 ( ) ; IDENT_12 . METHOD_3 ( IDENT_7 ) ; IDENT_12 . METHOD_4 ( ( IDENT_13 ) -> IDENT_11 . METHOD_5 ( IDENT_13 . METHOD_6 ( ) ) ) ; IDENT_12 . METHOD_7 ( IDENT_10 :: METHOD_5 ) ; final org . apache . flink . runtime . IDENT_14 . IDENT_15 . IDENT_16 IDENT_17 = new org . apache . flink . runtime . IDENT_14 . IDENT_15 . METHOD_8 ( new org . apache . flink . runtime . IDENT_18 . METHOD_9 ( ) , null , null ) ; org . apache . flink . runtime . IDENT_0 . IDENT_1 . IDENT_19 . METHOD_10 ( IDENT_3 , IDENT_12 , IDENT_20 ) ; org . apache . flink . runtime . IDENT_0 . IDENT_1 . IDENT_21 IDENT_15 = org . apache . flink . runtime . IDENT_0 . IDENT_1 . IDENT_19 . METHOD_11 ( IDENT_3 , IDENT_20 ) ; org . apache . flink . runtime . IDENT_8 . types . IDENT_22 IDENT_23 = new org . apache . flink . runtime . IDENT_8 . types . METHOD_12 ( org . apache . flink . runtime . IDENT_8 . types . IDENT_24 . IDENT_25 , java . util . Collections . emptyList ( ) , java . util . Collections . METHOD_13 ( ) ) ; java . util . concurrent . METHOD_2 < org . apache . flink . runtime . IDENT_0 . IDENT_26 > IDENT_27 = IDENT_15 . METHOD_14 ( new org . apache . flink . runtime . IDENT_0 . METHOD_15 ( ) , IDENT_17 , IDENT_23 , true , IDENT_28 ) ; IDENT_7 . METHOD_16 ( new org . apache . flink . util . METHOD_17 ( STRING_0 ) ) ; try { IDENT_27 . get ( ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( java . lang . Exception IDENT_29 ) { } "<AssertPlaceHolder>" ; } } get ( ) { return delegate . get ( ) ; }
org . junit . Assert . assertEquals ( IDENT_11 . get ( ) , IDENT_10 . get ( ) ) 