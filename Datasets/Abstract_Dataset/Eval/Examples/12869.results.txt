METHOD_0 ( ) { final int IDENT_0 = 100 ; final int IDENT_1 = 20 ; final double IDENT_2 = 1.0 ; try { METHOD_1 ( org . apache . flink . runtime . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 , org . apache . flink . runtime . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_7 ) ; METHOD_2 ( new org . apache . flink . runtime . IDENT_3 . IDENT_8 . METHOD_3 ( IDENT_0 , IDENT_1 , false ) , 0 ) ; METHOD_4 ( this . IDENT_9 ) ; { final org . apache . flink . runtime . IDENT_3 . util . IDENT_10 IDENT_11 = new org . apache . flink . runtime . IDENT_3 . util . METHOD_5 ( new org . apache . flink . configuration . Configuration ( ) ) ; IDENT_11 . METHOD_6 ( 0 ) ; IDENT_11 . METHOD_7 ( IDENT_12 , 0 ) ; IDENT_11 . METHOD_8 ( IDENT_13 . IDENT_14 ) ; IDENT_11 . METHOD_9 ( IDENT_12 ) ; IDENT_11 . METHOD_10 ( IDENT_15 . IDENT_16 ) ; IDENT_11 . METHOD_11 ( IDENT_17 , 0 ) ; IDENT_11 . METHOD_11 ( IDENT_17 , 1 ) ; IDENT_11 . METHOD_12 ( IDENT_2 ) ; IDENT_11 . METHOD_13 ( new org . apache . flink . api . common . IDENT_3 . util . METHOD_14 ( org . apache . flink . runtime . IDENT_3 . IDENT_18 . IDENT_19 . class ) ) ; METHOD_15 ( ) . METHOD_16 ( org . apache . flink . runtime . IDENT_3 . IDENT_4 . IDENT_20 . class , IDENT_11 , STRING_0 ) ; } { METHOD_17 ( org . apache . flink . runtime . IDENT_3 . IDENT_21 . class , org . apache . flink . runtime . IDENT_3 . IDENT_22 . IDENT_23 . class ) ; org . apache . flink . runtime . IDENT_3 . IDENT_24 < org . apache . flink . api . common . IDENT_25 . IDENT_26 < org . apache . flink . types . IDENT_27 , org . apache . flink . types . IDENT_27 > , org . apache . flink . types . IDENT_27 > IDENT_28 = new org . apache . flink . runtime . IDENT_3 . METHOD_18 ( this . IDENT_29 ) ; try { IDENT_28 . invoke ( ) ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( STRING_1 ) ; } } "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( e . getMessage ( ) ) ; } } size ( ) { return IDENT_30 . size ( ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , this . IDENT_9 . size ( ) ) 