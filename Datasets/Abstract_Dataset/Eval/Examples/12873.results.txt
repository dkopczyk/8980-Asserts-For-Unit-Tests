METHOD_0 ( ) { final org . apache . flink . api . common . IDENT_0 IDENT_1 = new org . apache . flink . api . common . METHOD_1 ( ) ; org . apache . flink . runtime . IDENT_2 . IDENT_3 IDENT_4 = new org . apache . flink . runtime . IDENT_2 . METHOD_2 ( ) ; org . apache . flink . runtime . IDENT_5 . IDENT_6 IDENT_7 = new org . apache . flink . runtime . IDENT_5 . METHOD_3 ( null , null ) ; IDENT_4 . METHOD_4 ( IDENT_1 , IDENT_7 ) ; org . apache . flink . runtime . concurrent . IDENT_8 IDENT_9 = mock ( org . apache . flink . runtime . concurrent . IDENT_8 . class ) ; org . apache . flink . api . common . time . IDENT_10 IDENT_11 = org . apache . flink . api . common . time . IDENT_10 . METHOD_5 ( INT_0 ) ; org . apache . flink . runtime . IDENT_12 . IDENT_13 IDENT_14 = mock ( org . apache . flink . runtime . IDENT_12 . IDENT_13 . class ) ; org . apache . flink . runtime . IDENT_12 . IDENT_15 IDENT_16 = new org . apache . flink . runtime . IDENT_12 . METHOD_6 ( IDENT_4 , IDENT_9 , IDENT_11 ) ; IDENT_16 . start ( IDENT_14 ) ; IDENT_16 . METHOD_7 ( IDENT_1 ) ; java . util . concurrent . IDENT_17 < org . apache . flink . runtime . IDENT_18 . IDENT_19 > IDENT_20 = IDENT_16 . METHOD_8 ( IDENT_1 ) ; IDENT_16 . METHOD_9 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; try { IDENT_20 . get ( ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . util . concurrent . IDENT_21 IDENT_22 ) { } } METHOD_10 ( org . apache . flink . api . common . METHOD_1 ) { org . apache . flink . util . IDENT_23 . METHOD_11 ( ( ( org . apache . flink . runtime . IDENT_24 . IDENT_25 . IDENT_26 . IDENT_27 ) == ( state ) ) , STRING_1 ) ; return IDENT_28 . containsKey ( IDENT_1 ) ; }
org . junit . Assert . assertFalse ( IDENT_16 . METHOD_10 ( IDENT_1 ) ) 