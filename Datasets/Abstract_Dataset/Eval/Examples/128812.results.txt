METHOD_0 ( ) { java . util . Map < java . lang . Integer , java . lang . Integer > IDENT_0 = new java . util . METHOD_1 ( ) ; IDENT_1 . IDENT_2 . mapreduce . IDENT_3 . IDENT_4 IDENT_5 = METHOD_2 ( ) ; int IDENT_6 = 10 ; METHOD_3 ( IDENT_0 , IDENT_6 , IDENT_5 ) ; int IDENT_7 = 0 ; for ( Map . Entry < java . lang . Integer , java . lang . Integer > IDENT_8 : IDENT_0 . entrySet ( ) ) { int IDENT_9 = IDENT_8 . getValue ( ) . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; IDENT_7 = IDENT_9 ; } } toString ( ) { return ( ( ( ( ( ( ( ( STRING_0 + STRING_1 ) + ( IDENT_10 ) ) + STRING_2 ) + ( IDENT_11 ) ) + STRING_3 ) + ( IDENT_12 ) ) + STRING_4 ) + ( IDENT_13 ) ) + STRING_5 ; }
org . junit . Assert . assertTrue ( IDENT_8 . toString ( ) , ( IDENT_7 <= IDENT_9 ) ) 