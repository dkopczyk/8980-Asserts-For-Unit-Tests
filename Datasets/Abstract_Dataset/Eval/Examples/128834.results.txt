METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new IDENT_0 . IDENT_1 . METHOD_1 ( ) ; IDENT_0 . IDENT_4 . query . IDENT_5 q = new IDENT_0 . IDENT_4 . query . METHOD_2 ( ) ; q . METHOD_3 ( STRING_0 ) ; java . util . List < java . lang . String > IDENT_6 = IDENT_3 . METHOD_4 ( q ) ; java . util . List < java . lang . String > expected = com . google . common . collect . Lists . newArrayList ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( IDENT_0 . IDENT_4 . query . Query ) { java . util . List < java . lang . String > IDENT_6 = new java . util . ArrayList ( ) ; java . util . List < org . apache . commons . IDENT_7 . parser . IDENT_8 > IDENT_9 = null ; IDENT_0 . query . IDENT_10 . tree . IDENT_11 node = null ; org . apache . commons . IDENT_7 . parser . IDENT_12 IDENT_13 = null ; try { IDENT_13 = IDENT_0 . query . IDENT_14 . IDENT_15 . METHOD_5 ( query . METHOD_6 ( ) ) ; } catch ( java . lang . Throwable IDENT_16 ) { try { node = IDENT_17 . parse ( query . METHOD_6 ( ) ) ; java . lang . String IDENT_18 = node . METHOD_7 ( ) ; IDENT_13 = IDENT_0 . query . IDENT_14 . IDENT_15 . METHOD_5 ( IDENT_18 ) ; } catch ( java . lang . Throwable IDENT_19 ) { } } if ( IDENT_13 != null ) { IDENT_9 = IDENT_0 . query . IDENT_14 . IDENT_15 . METHOD_8 ( IDENT_13 ) ; } for ( org . apache . commons . IDENT_7 . parser . IDENT_8 n : IDENT_9 ) { java . lang . Object IDENT_20 = IDENT_0 . query . IDENT_14 . IDENT_15 . METHOD_9 ( n ) ; if ( IDENT_20 != null ) { IDENT_6 . add ( IDENT_20 . toString ( ) ) ; } } return IDENT_6 ; }
org . junit . Assert . assertEquals ( expected , IDENT_6 ) 