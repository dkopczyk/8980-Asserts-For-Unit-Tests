METHOD_0 ( ) { org . apache . commons . IDENT_0 . parser . IDENT_1 IDENT_2 = IDENT_3 . query . IDENT_4 . IDENT_5 . METHOD_1 ( STRING_0 ) ; org . apache . commons . IDENT_0 . parser . IDENT_1 IDENT_6 = IDENT_3 . query . IDENT_4 . IDENT_5 . METHOD_1 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } equals ( org . apache . commons . IDENT_0 . parser . IDENT_7 , org . apache . commons . IDENT_0 . parser . IDENT_7 ) { if ( IDENT_2 == IDENT_6 ) { return true ; } if ( ( null == IDENT_2 ) || ( null == IDENT_6 ) ) { return false ; } if ( ! ( IDENT_2 . getClass ( ) . equals ( IDENT_6 . getClass ( ) ) ) ) { return false ; } if ( ( IDENT_2 . METHOD_2 ( ) ) != ( IDENT_6 . METHOD_2 ( ) ) ) { return false ; } for ( int i = 0 ; i < ( IDENT_2 . METHOD_2 ( ) ) ; i ++ ) { if ( ! ( IDENT_3 . query . IDENT_4 . IDENT_5 . equals ( IDENT_2 . METHOD_3 ( i ) , IDENT_6 . METHOD_3 ( i ) ) ) ) { return false ; } } if ( IDENT_2 instanceof org . apache . commons . IDENT_0 . parser . IDENT_8 ) { org . apache . commons . IDENT_0 . parser . IDENT_8 IDENT_9 = ( ( org . apache . commons . IDENT_0 . parser . IDENT_8 ) ( IDENT_2 ) ) ; org . apache . commons . IDENT_0 . parser . IDENT_8 IDENT_10 = ( ( org . apache . commons . IDENT_0 . parser . IDENT_8 ) ( IDENT_6 ) ) ; if ( ( ! ( IDENT_9 . METHOD_4 ( ) . equals ( IDENT_10 . METHOD_4 ( ) ) ) ) || ( ! ( IDENT_9 . METHOD_5 ( ) . equals ( IDENT_10 . METHOD_5 ( ) ) ) ) ) { return false ; } } else if ( IDENT_2 instanceof org . apache . commons . IDENT_0 . parser . IDENT_7 . IDENT_11 ) { org . apache . commons . IDENT_0 . parser . IDENT_7 . IDENT_11 < ? > IDENT_9 = ( ( org . apache . commons . IDENT_0 . parser . IDENT_7 . IDENT_11 < ? > ) ( IDENT_2 ) ) ; org . apache . commons . IDENT_0 . parser . IDENT_7 . IDENT_11 < ? > IDENT_10 = ( ( org . apache . commons . IDENT_0 . parser . IDENT_7 . IDENT_11 < ? > ) ( IDENT_6 ) ) ; if ( ! ( IDENT_9 . METHOD_5 ( ) . equals ( IDENT_10 . METHOD_5 ( ) ) ) ) { return false ; } } else if ( IDENT_2 instanceof org . apache . commons . IDENT_0 . parser . IDENT_12 ) { if ( ! ( IDENT_2 . image . equals ( IDENT_6 . image ) ) ) { return false ; } } return true ; }
org . junit . Assert . assertTrue ( IDENT_3 . query . IDENT_4 . IDENT_5 . equals ( IDENT_2 , IDENT_6 ) ) 