METHOD_0 ( ) { try ( io . IDENT_0 . streaming . IDENT_1 IDENT_2 = new io . IDENT_0 . streaming . METHOD_1 ( io . IDENT_0 . streaming . IDENT_3 . IDENT_4 , false ) ) { io . IDENT_0 . streaming . IDENT_5 IDENT_6 = new io . IDENT_0 . streaming . IDENT_5 . Builder ( ) . METHOD_2 ( IDENT_2 . METHOD_3 ( ) ) . METHOD_4 ( java . time . IDENT_7 . METHOD_5 ( 50 ) ) . build ( ) ; try ( io . IDENT_0 . streaming . IDENT_8 IDENT_9 = io . IDENT_0 . streaming . IDENT_10 . connect ( io . IDENT_0 . streaming . IDENT_3 . IDENT_4 , io . IDENT_0 . streaming . IDENT_3 . IDENT_11 , IDENT_6 ) ) { "<AssertPlaceHolder>" ; io . IDENT_0 . streaming . IDENT_12 IDENT_13 = IDENT_9 . METHOD_6 ( "foo" , null ) ; final java . util . concurrent . IDENT_14 IDENT_15 = new java . util . concurrent . METHOD_7 ( 1 ) ; java . lang . Thread t = new java . lang . Thread ( ( ) -> { try { java . lang . Thread . sleep ( java . util . concurrent . IDENT_16 . METHOD_8 ( ) . METHOD_9 ( 0 , 50 ) ) ; } catch ( exp ) { } try { IDENT_9 . close ( ) ; } catch ( e ) { System . err . println ( STRING_0 ) ; io . IDENT_0 . streaming . e . printStackTrace ( ) ; } IDENT_15 . METHOD_10 ( ) ; } ) ; t . start ( ) ; IDENT_13 . METHOD_11 ( ) ; IDENT_15 . METHOD_12 ( ) ; } } } connect ( java . lang . String , java . lang . String , io . IDENT_0 . streaming . IDENT_5 ) { try { io . IDENT_0 . streaming . IDENT_17 conn = new io . IDENT_0 . streaming . METHOD_13 ( IDENT_18 , IDENT_19 , IDENT_6 ) ; conn . connect ( ) ; return conn ; } catch ( java . lang . IDENT_20 e ) { java . lang . Thread . METHOD_14 ( ) . METHOD_15 ( ) ; return null ; } }
org . junit . Assert . assertNotNull ( IDENT_9 ) 