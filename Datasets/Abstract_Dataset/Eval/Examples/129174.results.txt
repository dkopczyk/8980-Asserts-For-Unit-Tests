METHOD_0 ( ) { sleep ( INT_0 ) ; java . util . Set < net . IDENT_0 . common . IDENT_1 . IDENT_2 > IDENT_3 = IDENT_4 . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; net . IDENT_0 . IDENT_5 IDENT_6 = new net . IDENT_0 . METHOD_2 ( INT_1 ) ; IDENT_6 . start ( ) ; IDENT_6 . METHOD_3 ( new java . io . File ( STRING_0 ) ) ; net . IDENT_0 . common . IDENT_7 IDENT_8 = new net . IDENT_0 . common . METHOD_4 ( ) ; IDENT_8 . METHOD_5 ( METHOD_4 . IDENT_9 , IDENT_6 . METHOD_6 ( ) ) ; IDENT_4 . METHOD_7 ( IDENT_8 , METHOD_8 ( IDENT_3 , 0 ) ) ; IDENT_4 . METHOD_7 ( IDENT_8 , METHOD_8 ( IDENT_3 , 1 ) ) ; METHOD_9 ( IDENT_6 , 2 , 2 ) ; IDENT_4 . METHOD_10 ( ) ; METHOD_9 ( IDENT_6 , 0 , 5 ) ; IDENT_4 = new net . IDENT_0 . METHOD_11 ( IDENT_4 . METHOD_12 ( ) ) ; IDENT_4 . start ( ) ; METHOD_9 ( IDENT_4 , 2 , 3 ) ; sleep ( INT_0 ) ; IDENT_3 = IDENT_4 . METHOD_1 ( ) ; IDENT_4 . METHOD_7 ( IDENT_8 , METHOD_8 ( IDENT_3 , 0 ) ) ; IDENT_4 . METHOD_7 ( IDENT_8 , METHOD_8 ( IDENT_3 , 1 ) ) ; METHOD_9 ( IDENT_6 , 2 , 2 ) ; } METHOD_1 ( ) { return IDENT_10 . METHOD_13 ( net . IDENT_0 . IDENT_11 . class ) . METHOD_14 ( ) ; }
org . junit . Assert . assertThat ( IDENT_3 . size ( ) , org . hamcrest . Matchers . is ( 2 ) ) 