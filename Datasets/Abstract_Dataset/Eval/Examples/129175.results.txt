METHOD_0 ( ) { net . IDENT_0 . IDENT_1 IDENT_2 = new net . IDENT_0 . METHOD_1 ( METHOD_2 ( ) ) { @ net . IDENT_0 . Override public long METHOD_3 ( ) { return 10 ; } @ net . IDENT_0 . Override public java . util . Map < java . lang . String , java . lang . Object > METHOD_4 ( ) { java . util . Map < java . lang . String , java . lang . Object > IDENT_3 = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; java . util . Map < java . lang . Object , java . lang . Object > IDENT_4 = new java . util . HashMap < java . lang . Object , java . lang . Object > ( ) ; IDENT_4 . put ( STRING_0 , IDENT_5 ) ; IDENT_4 . put ( STRING_1 , IDENT_6 ) ; IDENT_3 . put ( STRING_2 , IDENT_4 ) ; return IDENT_3 ; } } ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { return Long . MAX_VALUE ; }
org . junit . Assert . assertThat ( IDENT_2 . METHOD_3 ( ) , org . hamcrest . Matchers . is ( ( ( long ) ( ( IDENT_5 ) + ( IDENT_6 ) ) ) ) ) 