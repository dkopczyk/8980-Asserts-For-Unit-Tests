METHOD_0 ( ) { int count = 100 ; long from = 1000 ; long to = INT_0 ; int IDENT_0 = 100 ; int IDENT_1 = 100 ; com . IDENT_2 . IDENT_3 . web . IDENT_4 . IDENT_5 IDENT_6 = new com . IDENT_2 . IDENT_3 . web . IDENT_4 . METHOD_1 ( from , to , IDENT_0 , IDENT_1 ) ; java . util . List < com . IDENT_2 . IDENT_3 . web . vo . IDENT_4 . IDENT_7 > IDENT_8 = METHOD_2 ( IDENT_9 , IDENT_10 , count , from ) ; for ( com . IDENT_2 . IDENT_3 . web . vo . IDENT_4 . IDENT_7 IDENT_11 : IDENT_8 ) { com . IDENT_2 . IDENT_3 . web . IDENT_4 . METHOD_1 IDENT_12 = new com . IDENT_2 . IDENT_3 . web . IDENT_4 . METHOD_1 ( from , to , IDENT_0 , IDENT_1 ) ; IDENT_12 . METHOD_3 ( IDENT_11 ) ; IDENT_6 . METHOD_4 ( IDENT_12 ) ; } java . util . List < com . IDENT_2 . IDENT_3 . web . vo . IDENT_4 . IDENT_7 > IDENT_13 = METHOD_5 ( IDENT_6 ) ; "<AssertPlaceHolder>" ; } size ( ) { return this . queue . size ( ) ; }
org . junit . Assert . assertEquals ( count , IDENT_13 . size ( ) ) 