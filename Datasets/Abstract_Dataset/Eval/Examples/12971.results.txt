METHOD_0 ( ) { org . apache . flink . runtime . io . network . IDENT_0 . consumer . IDENT_1 [ ] IDENT_2 = new org . apache . flink . runtime . io . network . IDENT_0 . consumer . IDENT_1 [ ] { org . apache . flink . streaming . runtime . io . IDENT_3 . METHOD_1 ( 1L , 0 ) , org . apache . flink . streaming . runtime . io . IDENT_3 . METHOD_2 ( INT_0 , 0 ) , org . apache . flink . streaming . runtime . io . IDENT_3 . METHOD_2 ( 1L , 1 ) , org . apache . flink . streaming . runtime . io . IDENT_3 . METHOD_2 ( INT_0 , 1 ) , org . apache . flink . streaming . runtime . io . IDENT_3 . METHOD_2 ( 1L , 2 ) , org . apache . flink . streaming . runtime . io . IDENT_3 . METHOD_2 ( INT_0 , 2 ) , org . apache . flink . streaming . runtime . io . IDENT_3 . METHOD_3 ( 0 ) } ; org . apache . flink . streaming . runtime . io . IDENT_4 IDENT_5 = new org . apache . flink . streaming . runtime . io . METHOD_4 ( org . apache . flink . streaming . runtime . io . IDENT_3 . IDENT_6 , 3 , java . util . Arrays . asList ( IDENT_2 ) ) ; org . apache . flink . streaming . runtime . io . IDENT_7 IDENT_8 = new org . apache . flink . streaming . runtime . io . METHOD_5 ( IDENT_5 ) ; org . apache . flink . runtime . IDENT_9 . IDENT_10 . IDENT_11 IDENT_12 = mock ( org . apache . flink . runtime . IDENT_9 . IDENT_10 . IDENT_11 . class ) ; IDENT_8 . METHOD_6 ( IDENT_12 ) ; for ( org . apache . flink . runtime . io . network . IDENT_0 . consumer . IDENT_1 IDENT_13 : IDENT_2 ) { if ( ( IDENT_13 . METHOD_7 ( ) ) || ( ( ( IDENT_13 . METHOD_8 ( ) . getClass ( ) ) != ( org . apache . flink . runtime . io . network . api . IDENT_14 . class ) ) && ( ( IDENT_13 . METHOD_8 ( ) . getClass ( ) ) != ( org . apache . flink . runtime . io . network . api . IDENT_15 . class ) ) ) ) { "<AssertPlaceHolder>" ; } } verify ( IDENT_12 , times ( 1 ) ) . METHOD_9 ( eq ( 1L ) , any ( java . lang . Throwable . class ) ) ; verify ( IDENT_12 , times ( 1 ) ) . METHOD_9 ( eq ( INT_0 ) , any ( java . lang . Throwable . class ) ) ; } METHOD_10 ( ) { while ( true ) { java . util . Optional < org . apache . flink . runtime . io . network . IDENT_0 . consumer . IDENT_1 > next = IDENT_16 . METHOD_11 ( ) ; if ( ! ( next . METHOD_12 ( ) ) ) { return null ; } org . apache . flink . runtime . io . network . IDENT_0 . consumer . IDENT_1 IDENT_17 = next . get ( ) ; if ( IDENT_17 . METHOD_7 ( ) ) { return IDENT_17 ; } else if ( ( IDENT_17 . METHOD_8 ( ) . getClass ( ) ) == ( org . apache . flink . runtime . io . network . api . IDENT_14 . class ) ) { METHOD_13 ( ( ( org . apache . flink . runtime . io . network . api . IDENT_14 ) ( IDENT_17 . METHOD_8 ( ) ) ) , IDENT_17 . METHOD_14 ( ) ) ; } else if ( ( IDENT_17 . METHOD_8 ( ) . getClass ( ) ) == ( org . apache . flink . runtime . io . network . api . IDENT_15 . class ) ) { METHOD_15 ( ( ( org . apache . flink . runtime . io . network . api . IDENT_15 ) ( IDENT_17 . METHOD_8 ( ) ) ) , IDENT_17 . METHOD_14 ( ) ) ; } else { return IDENT_17 ; } } }
org . junit . Assert . assertEquals ( IDENT_13 , IDENT_8 . METHOD_10 ( ) ) 