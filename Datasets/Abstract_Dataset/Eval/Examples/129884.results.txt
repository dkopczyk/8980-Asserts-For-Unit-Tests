METHOD_0 ( ) { org . neo4j . IDENT_0 . core . utils . IDENT_1 . IDENT_2 array = org . neo4j . IDENT_0 . core . utils . IDENT_1 . IDENT_2 . METHOD_1 ( 10 , IDENT_3 . IDENT_4 ) ; int index = METHOD_2 ( 2 , 8 ) ; int value = METHOD_2 ( INT_0 , INT_1 ) ; array . set ( index , value ) ; for ( int i = 0 ; i < 10 ; i ++ ) { boolean IDENT_5 = i == index ; long actual = array . get ( i ) ; java . lang . String message = ( IDENT_5 ) ? ( ( ( ( ( STRING_0 + i ) + STRING_1 ) + value ) + STRING_2 ) + actual ) + STRING_3 : ( ( ( STRING_0 + i ) + STRING_4 ) + actual ) + STRING_3 ; "<AssertPlaceHolder>" ; } } get ( int ) { int IDENT_6 = this . IDENT_6 . get ( IDENT_7 ) ; return IDENT_6 == ( Integer . MAX_VALUE ) ? Double . IDENT_8 : IDENT_6 / ( IDENT_9 ) ; }
org . junit . Assert . assertEquals ( message , ( IDENT_5 ? value : - 1L ) , actual ) 