METHOD_0 ( ) { final int IDENT_0 = com . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( 5 , 50 ) ; final org . neo4j . IDENT_4 . core . utils . queue . IDENT_5 queue = org . neo4j . IDENT_4 . core . utils . queue . IDENT_5 . min ( ) ; int min = - 1 ; double IDENT_6 = Double . IDENT_7 ; for ( int i = 0 ; i < IDENT_0 ; i ++ ) { final double IDENT_8 = METHOD_2 ( 0.0 , FLOAT_0 ) ; if ( IDENT_8 < IDENT_6 ) { IDENT_6 = IDENT_8 ; min = i ; } queue . add ( i , IDENT_8 ) ; "<AssertPlaceHolder>" ; } } METHOD_3 ( ) { return IDENT_9 [ 1 ] ; }
org . junit . Assert . assertEquals ( queue . METHOD_3 ( ) , min ) 