METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . Object > IDENT_0 = new java . util . HashMap ( ) ; IDENT_0 . put ( "name" , STRING_0 ) ; IDENT_0 . put ( STRING_1 , STRING_0 1 ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_1 = new java . util . HashMap ( ) ; IDENT_1 . put ( "name" , STRING_0 0 ) ; IDENT_1 . put ( STRING_2 , STRING_3 ) ; java . util . Map < java . lang . String , java . lang . Object > params = new java . util . HashMap ( ) ; params . put ( STRING_4 , IDENT_0 ) ; params . put ( STRING_5 , IDENT_1 ) ; java . lang . String query = STRING_6 + ( STRING_7 + STRING_8 ) ; org . neo4j . IDENT_2 . Result result = db . execute ( query , params ) ; "<AssertPlaceHolder>" ; } execute ( java . lang . String , java . util . Map ) { return METHOD_1 ( ) . execute ( query , parameters ) ; }
org . junit . Assert . assertThat ( count ( result ) , org . hamcrest . CoreMatchers . is ( 1L ) ) 