METHOD_0 ( ) { org . neo4j . IDENT_0 . runtime . IDENT_1 IDENT_2 = mock ( org . neo4j . IDENT_0 . runtime . IDENT_1 . class ) ; METHOD_1 ( new org . neo4j . IDENT_3 . security . METHOD_2 ( STRING_0 ) ) . when ( IDENT_2 ) . METHOD_3 ( any ( ) , METHOD_4 ( ) ) ; org . neo4j . IDENT_0 . runtime . IDENT_4 IDENT_5 = org . neo4j . IDENT_0 . v1 . runtime . IDENT_6 . init ( org . neo4j . IDENT_0 . v1 . runtime . IDENT_6 . METHOD_5 ( ) ) ; IDENT_5 . process ( new org . neo4j . IDENT_0 . v1 . IDENT_7 . request . METHOD_6 ( STRING_1 , org . neo4j . IDENT_0 . v1 . runtime . IDENT_6 . IDENT_8 ) , METHOD_7 ( ) ) ; org . neo4j . IDENT_0 . v1 . runtime . IDENT_9 . METHOD_8 ( IDENT_5 ) . ctx . IDENT_10 = org . neo4j . IDENT_0 . runtime . IDENT_11 . IDENT_12 ; try { IDENT_5 . process ( IDENT_13 . INSTANCE , IDENT_2 ) ; org . junit . Assert . fail ( STRING_2 ) ; } catch ( org . neo4j . IDENT_0 . runtime . IDENT_14 e ) { "<AssertPlaceHolder>" ; } } METHOD_9 ( ) { return IDENT_15 ; }
org . junit . Assert . assertEquals ( STRING_0 , e . METHOD_9 ( ) . getMessage ( ) ) 