test ( ) { java . lang . String [ ] arr = new java . lang . String [ ] { STRING_0 , STRING_1 , "" , STRING_2 } ; java . lang . String key = STRING_3 ; for ( java . lang . String str : arr ) { java . lang . String random = com . IDENT_0 . util . IDENT_1 . METHOD_0 ( ) ; java . lang . String IDENT_2 = com . IDENT_0 . util . IDENT_3 . IDENT_4 . METHOD_1 ( key , ( str + random ) ) ; java . lang . String decode = com . IDENT_0 . util . METHOD_1 . IDENT_4 . decode ( key , IDENT_2 ) ; "<AssertPlaceHolder>" ; } } decode ( java . lang . String , java . lang . String ) { return com . IDENT_0 . util . METHOD_1 . IDENT_4 . METHOD_2 ( IDENT_5 , com . IDENT_0 . util . METHOD_1 . IDENT_6 . METHOD_3 ( str ) ) ; }
org . junit . Assert . assertEquals ( decode , ( str + random ) ) 