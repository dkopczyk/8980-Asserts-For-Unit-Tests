METHOD_0 ( ) { db = METHOD_1 ( ) ; try ( org . neo4j . IDENT_0 . IDENT_1 tx = db . METHOD_2 ( ) ) { METHOD_3 ( ) ; tx . METHOD_4 ( ) ; } long IDENT_2 ; long IDENT_3 ; try ( org . neo4j . IDENT_0 . IDENT_1 tx = db . METHOD_2 ( ) ) { METHOD_5 ( ) ; org . neo4j . IDENT_0 . Node IDENT_4 = db . METHOD_6 ( org . neo4j . kernel . api . impl . IDENT_5 . IDENT_6 . IDENT_7 ) ; IDENT_4 . setProperty ( org . neo4j . kernel . api . impl . IDENT_5 . IDENT_6 . IDENT_8 , "value" ) ; IDENT_2 = IDENT_4 . getId ( ) ; org . neo4j . IDENT_0 . Node IDENT_9 = db . METHOD_6 ( org . neo4j . kernel . api . impl . IDENT_5 . IDENT_6 . IDENT_7 ) ; IDENT_9 . setProperty ( org . neo4j . kernel . api . impl . IDENT_5 . IDENT_6 . IDENT_8 , "value" ) ; IDENT_3 = IDENT_9 . getId ( ) ; tx . METHOD_4 ( ) ; } try ( org . neo4j . IDENT_0 . IDENT_1 tx = db . METHOD_2 ( ) ) { try ( org . neo4j . IDENT_0 . Result result = db . execute ( java . lang . String . format ( org . neo4j . kernel . api . impl . IDENT_5 . IDENT_6 . IDENT_10 , STRING_0 , "value" ) ) ) { org . neo4j . test . IDENT_11 . METHOD_7 ( ( ) -> { try ( org . neo4j . IDENT_0 . IDENT_1 IDENT_12 = db . METHOD_2 ( ) ) { db . METHOD_8 ( IDENT_2 ) . delete ( ) ; db . METHOD_8 ( IDENT_3 ) . delete ( ) ; IDENT_12 . METHOD_4 ( ) ; } return null ; } ) . get ( ) ; "<AssertPlaceHolder>" ; } tx . METHOD_4 ( ) ; } } stream ( ) { return java . util . stream . IDENT_13 . stream ( java . util . IDENT_14 . METHOD_9 ( this , IDENT_15 . IDENT_16 ) , false ) ; }
org . junit . Assert . assertThat ( result . stream ( ) . count ( ) , org . hamcrest . Matchers . is ( 0L ) ) 