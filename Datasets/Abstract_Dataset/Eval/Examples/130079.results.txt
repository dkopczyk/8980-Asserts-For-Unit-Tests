METHOD_0 ( ) { java . time . IDENT_0 IDENT_1 = org . neo4j . values . IDENT_2 . IDENT_3 . METHOD_1 ( INT_0 , 1 , 1 , 0 , 0 , INT_1 , INT_2 ) . METHOD_2 ( ) ; java . lang . String key = STRING_0 ; IDENT_4 . setProperty ( key , IDENT_1 ) ; METHOD_3 ( ) ; java . lang . Object property = IDENT_4 . getProperty ( key ) ; "<AssertPlaceHolder>" ; } getProperty ( java . lang . String ) { if ( null == key ) { throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } org . neo4j . kernel . api . IDENT_5 transaction = spi . METHOD_4 ( ) ; int IDENT_6 = transaction . METHOD_5 ( ) . METHOD_6 ( key ) ; if ( METHOD_6 == ( org . neo4j . internal . kernel . api . IDENT_7 . IDENT_8 ) ) { throw new org . neo4j . IDENT_9 . METHOD_7 ( java . lang . String . format ( STRING_2 , key ) ) ; } org . neo4j . internal . kernel . api . IDENT_10 IDENT_11 = transaction . METHOD_8 ( ) ; org . neo4j . internal . kernel . api . IDENT_12 properties = transaction . METHOD_9 ( ) ; METHOD_10 ( transaction , IDENT_11 ) ; IDENT_11 . properties ( properties ) ; while ( properties . next ( ) ) { if ( METHOD_6 == ( properties . METHOD_6 ( ) ) ) { org . neo4j . values . IDENT_2 . IDENT_13 value = properties . METHOD_11 ( ) ; if ( value == ( org . neo4j . values . IDENT_2 . IDENT_14 . IDENT_15 ) ) { throw new org . neo4j . IDENT_9 . METHOD_7 ( java . lang . String . format ( STRING_2 , key ) ) ; } return value . METHOD_2 ( ) ; } } throw new org . neo4j . IDENT_9 . METHOD_7 ( java . lang . String . format ( STRING_2 , key ) ) ; }
org . junit . Assert . assertEquals ( IDENT_1 , property ) 