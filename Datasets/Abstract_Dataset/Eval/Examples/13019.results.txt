METHOD_0 ( ) { final int IDENT_0 = 10 ; org . apache . flink . streaming . api . IDENT_1 . IDENT_2 IDENT_3 = org . apache . flink . streaming . api . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; org . apache . flink . streaming . api . IDENT_4 . IDENT_5 < org . apache . flink . api . java . tuple . IDENT_6 < java . lang . Integer , org . apache . flink . test . streaming . api . IDENT_7 . IDENT_8 > > input = IDENT_3 . METHOD_2 ( new org . apache . flink . test . streaming . api . IDENT_7 . METHOD_3 ( IDENT_0 ) ) ; final org . apache . flink . test . streaming . api . IDENT_7 . IDENT_9 IDENT_10 = new org . apache . flink . test . streaming . api . IDENT_7 . METHOD_4 ( 0 ) ; final java . util . ArrayList < java . lang . Integer > IDENT_11 = new java . util . ArrayList ( ) ; org . apache . flink . test . streaming . api . IDENT_7 . METHOD_4 . METHOD_5 ( 0 , IDENT_11 ) ; input . METHOD_6 ( 0 ) . METHOD_7 ( new org . apache . flink . test . streaming . api . IDENT_7 . METHOD_8 ( INT_0 ) , new org . apache . flink . api . common . IDENT_12 . IDENT_13 < org . apache . flink . api . java . tuple . IDENT_6 < java . lang . Integer , org . apache . flink . test . streaming . api . IDENT_7 . METHOD_8 > , org . apache . flink . test . streaming . api . IDENT_7 . METHOD_8 > ( ) { MOD_0 MOD_1 final long IDENT_14 = INT_1 ; @ org . apache . flink . test . streaming . api . Override public org . apache . flink . test . streaming . api . IDENT_7 . METHOD_8 METHOD_7 ( org . apache . flink . test . streaming . api . IDENT_7 . METHOD_8 IDENT_15 , org . apache . flink . api . java . tuple . IDENT_6 < java . lang . Integer , org . apache . flink . test . streaming . api . IDENT_7 . METHOD_8 > value ) throws org . apache . flink . test . streaming . api . Exception { return new org . apache . flink . test . streaming . api . IDENT_7 . METHOD_8 ( ( ( IDENT_15 . value ) + ( value . IDENT_16 . value ) ) ) ; } } ) . map ( new org . apache . flink . api . common . IDENT_12 . IDENT_17 < org . apache . flink . test . streaming . api . IDENT_7 . METHOD_8 , java . lang . Integer > ( ) { MOD_0 MOD_1 final long IDENT_14 = INT_2 ; @ org . apache . flink . test . streaming . api . Override public org . apache . flink . test . streaming . api . Integer map ( org . apache . flink . test . streaming . api . IDENT_7 . METHOD_8 value ) throws org . apache . flink . test . streaming . api . Exception { return value . value ; } } ) . METHOD_9 ( IDENT_10 ) ; java . util . Collection < java . lang . Integer > expected = new java . util . ArrayList ( 10 ) ; for ( int i = 0 ; i < IDENT_0 ; i ++ ) { expected . add ( ( INT_0 + i ) ) ; } IDENT_3 . execute ( ) ; java . util . Collections . METHOD_10 ( IDENT_11 ) ; "<AssertPlaceHolder>" ; org . apache . flink . test . streaming . api . IDENT_7 . METHOD_4 . METHOD_11 ( ) ; } METHOD_10 ( org . apache . flink . runtime . IDENT_18 . METHOD_10 . IDENT_19 ) { METHOD_10 ( s , 0 , s . size ( ) ) ; }
org . junit . Assert . assertEquals ( expected , IDENT_11 ) 