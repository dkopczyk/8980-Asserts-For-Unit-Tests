METHOD_0 ( ) { boolean IDENT_0 = METHOD_1 ( ) ; int IDENT_1 = token . METHOD_2 ( STRING_0 ) ; int IDENT_2 = token . METHOD_3 ( STRING_1 ) ; org . neo4j . internal . kernel . api . IDENT_3 index = IDENT_4 . index ( IDENT_1 , IDENT_2 ) ; try ( org . neo4j . IDENT_5 . org . neo4j . internal . kernel . api . IDENT_6 tx = org . neo4j . internal . kernel . api . IDENT_7 . METHOD_4 ( ) ; org . neo4j . internal . kernel . api . IDENT_8 node = IDENT_9 . METHOD_5 ( ) ) { tx . METHOD_6 ( ) . METHOD_7 ( org . neo4j . internal . kernel . api . IDENT_7 . IDENT_10 , IDENT_2 , org . neo4j . internal . kernel . api . IDENT_7 . METHOD_8 ( STRING_2 ) ) ; tx . METHOD_6 ( ) . METHOD_7 ( org . neo4j . internal . kernel . api . IDENT_7 . IDENT_11 , IDENT_2 , org . neo4j . internal . kernel . api . IDENT_7 . METHOD_8 ( STRING_3 ) ) ; tx . METHOD_6 ( ) . METHOD_7 ( org . neo4j . internal . kernel . api . IDENT_7 . IDENT_12 , IDENT_2 , org . neo4j . internal . kernel . api . IDENT_7 . METHOD_8 ( STRING_3 ) ) ; tx . METHOD_6 ( ) . METHOD_7 ( org . neo4j . internal . kernel . api . IDENT_7 . IDENT_13 , IDENT_2 , org . neo4j . internal . kernel . api . IDENT_7 . METHOD_8 ( STRING_3 ) ) ; tx . METHOD_9 ( ) . METHOD_10 ( index , node , IDENT_14 . IDENT_15 , IDENT_0 , org . neo4j . internal . kernel . api . IDENT_16 . range ( IDENT_2 , STRING_4 , true , STRING_5 , true ) ) ; "<AssertPlaceHolder>" ; } } next ( ) { return IDENT_17 . next ( ) ; }
org . junit . Assert . assertFalse ( node . next ( ) ) 