METHOD_0 ( ) { org . neo4j . kernel . impl . api . state . IDENT_0 state = METHOD_1 ( ) ; state . METHOD_2 ( STRING_0 , 1 , STRING_1 , STRING_2 ) ; state . METHOD_3 ( STRING_0 , 1 , STRING_3 , STRING_4 , INT_0 , INT_0 ) ; state . METHOD_2 ( STRING_0 , 2 , STRING_1 , STRING_5 ) ; state . METHOD_3 ( STRING_0 , 3 , STRING_3 , STRING_6 , INT_1 , INT_1 ) ; state . METHOD_3 ( STRING_7 , 4 , STRING_1 , STRING_8 , INT_2 , INT_2 ) ; org . neo4j . kernel . impl . index . IDENT_1 IDENT_2 = new org . neo4j . kernel . impl . index . METHOD_4 ( ) ; IDENT_2 . METHOD_5 ( STRING_0 ) ; IDENT_2 . METHOD_5 ( STRING_7 ) ; IDENT_2 . METHOD_6 ( STRING_1 ) ; IDENT_2 . METHOD_6 ( STRING_3 ) ; java . util . Set < org . neo4j . kernel . impl . transaction . command . IDENT_3 > IDENT_4 = new java . util . HashSet ( java . util . Arrays . asList ( IDENT_2 , org . neo4j . kernel . impl . api . state . IDENT_5 . METHOD_2 ( 1 , 1 , 1 , STRING_2 ) , org . neo4j . kernel . impl . api . state . IDENT_5 . METHOD_3 ( 1 , 1 , 2 , STRING_4 , INT_0 , INT_0 ) , org . neo4j . kernel . impl . api . state . IDENT_5 . METHOD_2 ( 1 , 2 , 1 , STRING_5 ) , org . neo4j . kernel . impl . api . state . IDENT_5 . METHOD_3 ( 1 , 3 , 2 , STRING_6 , INT_1 , INT_1 ) , org . neo4j . kernel . impl . api . state . IDENT_5 . METHOD_3 ( 2 , 4 , 1 , STRING_8 , INT_2 , INT_2 ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( org . neo4j . kernel . impl . api . state . IDENT_0 ) { java . util . Set < org . neo4j . IDENT_6 . api . IDENT_7 > commands = new java . util . HashSet ( ) ; state . METHOD_7 ( commands ) ; return commands ; }
org . junit . Assert . assertEquals ( IDENT_4 , org . neo4j . kernel . impl . api . state . IDENT_5 . METHOD_7 ( state ) ) 