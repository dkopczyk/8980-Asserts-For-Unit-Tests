METHOD_0 ( ) { org . neo4j . kernel . impl . factory . IDENT_0 . IDENT_1 loader = org . neo4j . kernel . impl . factory . IDENT_0 . METHOD_1 ( mock ( org . neo4j . kernel . impl . IDENT_2 . IDENT_3 . class ) , mock ( org . neo4j . kernel . impl . IDENT_2 . IDENT_4 . class ) , mock ( org . neo4j . kernel . impl . IDENT_2 . IDENT_4 . class ) , mock ( org . neo4j . kernel . impl . IDENT_2 . IDENT_4 . class ) ) ; try { loader . select ( ) ; } catch ( java . lang . Exception e ) { "<AssertPlaceHolder>" ; } } METHOD_2 ( java . lang . Class ) { return clazz :: IDENT_5 ; }
org . junit . Assert . assertThat ( e , org . hamcrest . Matchers . METHOD_2 ( org . neo4j . kernel . impl . factory . IllegalStateException . class ) ) 