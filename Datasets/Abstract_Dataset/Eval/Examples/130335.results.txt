METHOD_0 ( ) { java . io . File root = storage . directory ( ) . directory ( STRING_0 ) ; org . neo4j . kernel . api . index . IDENT_0 IDENT_1 = org . neo4j . kernel . api . index . IDENT_0 . METHOD_1 ( root ) . METHOD_2 ( IDENT_2 . IDENT_3 ) ; long IDENT_4 = 8 ; java . io . File IDENT_5 = IDENT_1 . METHOD_3 ( IDENT_4 ) ; java . io . File IDENT_6 = new java . io . File ( IDENT_5 , STRING_1 ) ; org . neo4j . IDENT_7 . api . schema . IDENT_8 IDENT_9 = org . neo4j . IDENT_7 . api . schema . IDENT_10 . METHOD_4 ( org . neo4j . kernel . api . schema . IDENT_11 . METHOD_5 ( 1 , 1 ) ) . METHOD_6 ( IDENT_4 ) ; org . neo4j . kernel . impl . index . schema . config . IDENT_12 IDENT_13 = mock ( org . neo4j . kernel . impl . index . schema . config . IDENT_12 . class ) ; org . neo4j . io . fs . IDENT_14 fs = storage . METHOD_7 ( ) ; org . neo4j . kernel . impl . index . schema . IDENT_15 IDENT_16 = new org . neo4j . kernel . impl . index . schema . METHOD_8 ( fs , IDENT_1 ) ; org . neo4j . kernel . impl . index . schema . IDENT_17 IDENT_18 = new org . neo4j . kernel . impl . index . schema . METHOD_9 ( storage . METHOD_10 ( ) , fs , IDENT_6 , new org . neo4j . kernel . impl . index . schema . METHOD_11 ( 1 , IDENT_13 ) , METHOD_12 ( ) , IDENT_19 , IDENT_9 , IDENT_13 , mock ( org . neo4j . IDENT_20 . IDENT_21 . index . IDENT_22 . IDENT_23 . class ) , IDENT_16 ) ; IDENT_18 . METHOD_13 ( ) ; "<AssertPlaceHolder>" ; } METHOD_14 ( java . io . File ) { return fs . METHOD_14 ( file ) ; }
org . junit . Assert . assertFalse ( fs . METHOD_14 ( IDENT_5 ) ) 