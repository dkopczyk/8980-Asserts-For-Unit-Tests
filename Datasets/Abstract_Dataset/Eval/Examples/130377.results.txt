METHOD_0 ( ) { org . neo4j . kernel . impl . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new org . neo4j . kernel . impl . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; org . neo4j . kernel . impl . IDENT_0 . IDENT_4 IDENT_5 = new org . neo4j . kernel . impl . IDENT_0 . METHOD_2 ( IDENT_3 , IDENT_6 , IDENT_7 ) ; org . neo4j . kernel . impl . IDENT_0 . IDENT_1 . METHOD_3 ( transaction , false , new org . neo4j . internal . kernel . api . helpers . METHOD_4 ( IDENT_8 ) . METHOD_5 ( INT_0 , INT_1 , 0 ) . METHOD_6 ( INT_2 , INT_3 , org . neo4j . kernel . impl . IDENT_0 . IDENT_1 . IDENT_9 ) . METHOD_5 ( INT_4 , INT_5 , org . neo4j . kernel . impl . IDENT_0 . IDENT_1 . IDENT_9 ) . METHOD_5 ( INT_6 , INT_7 , org . neo4j . kernel . impl . IDENT_0 . IDENT_1 . IDENT_9 ) . METHOD_6 ( INT_7 , INT_8 , org . neo4j . kernel . impl . IDENT_0 . IDENT_1 . IDENT_9 ) . METHOD_5 ( INT_9 , INT_5 , org . neo4j . kernel . impl . IDENT_0 . IDENT_1 . IDENT_9 ) ) ; org . mockito . IDENT_10 IDENT_11 = METHOD_7 ( IDENT_6 ) ; IDENT_5 . METHOD_8 ( IDENT_8 , transaction , new org . neo4j . internal . kernel . api . helpers . METHOD_9 ( false ) . METHOD_10 ( IDENT_8 ) ) ; METHOD_7 . verify ( IDENT_6 ) . METHOD_11 ( org . neo4j . kernel . impl . IDENT_0 . IDENT_7 , org . neo4j . kernel . impl . IDENT_0 . IDENT_12 , INT_7 , INT_3 , INT_5 , IDENT_8 , INT_1 , INT_8 ) ; "<AssertPlaceHolder>" ; } verify ( org . neo4j . kernel . impl . store . record . IDENT_13 ) { boolean IDENT_14 = record . METHOD_12 ( ) ; if ( ( ( this ) == ( org . neo4j . kernel . impl . store . record . IDENT_15 . IDENT_16 ) ) & ( ! METHOD_12 ) ) { throw new org . neo4j . kernel . impl . store . METHOD_13 ( ( record + STRING_0 ) ) ; } return ( ( this ) == ( org . neo4j . kernel . impl . store . record . IDENT_15 . IDENT_17 ) ) | METHOD_12 ; }
org . junit . Assert . assertEquals ( set ( INT_0 , INT_2 , INT_4 , INT_6 , INT_7 , INT_9 ) , IDENT_3 . set ) 