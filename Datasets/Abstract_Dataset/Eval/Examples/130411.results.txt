METHOD_0 ( ) { java . lang . IDENT_0 IDENT_1 = ( ) -> { IDENT_2 . METHOD_1 ( ) ; IDENT_3 . METHOD_2 ( ) ; } ; IDENT_4 . METHOD_3 ( IDENT_5 . IDENT_6 , IDENT_1 , 100 , 100 ) ; for ( int i = 0 ; i < 4 ; i ++ ) { IDENT_4 . METHOD_4 ( ) ; IDENT_7 . METHOD_5 ( 100 , TimeUnit . IDENT_8 ) ; } IDENT_3 . METHOD_6 ( Integer . MAX_VALUE ) ; IDENT_9 . METHOD_7 ( IDENT_5 . IDENT_6 ) . METHOD_8 ( ) ; "<AssertPlaceHolder>" ; } get ( ) { org . neo4j . kernel . IDENT_10 . IDENT_11 . IDENT_12 IDENT_13 = IDENT_14 . METHOD_9 ( ) ; org . neo4j . kernel . impl . transaction . log . entry . IDENT_15 IDENT_16 = IDENT_13 . IDENT_16 ; long IDENT_17 = IDENT_13 . IDENT_18 ; if ( ! ( IDENT_13 . METHOD_10 ( ) ) ) { monitor . METHOD_11 ( ( IDENT_16 != null ? IDENT_16 . METHOD_12 ( ) : null ) ) ; return METHOD_13 ( IDENT_19 . IDENT_20 , IDENT_17 ) ; } if ( IDENT_16 != null ) { monitor . METHOD_14 ( IDENT_16 . METHOD_12 ( ) , IDENT_17 ) ; return METHOD_13 ( IDENT_16 . METHOD_12 ( ) , IDENT_17 ) ; } else { if ( ( IDENT_13 . IDENT_21 ) != ( IDENT_22 ) ) { long IDENT_23 = java . lang . Math . max ( org . neo4j . kernel . IDENT_10 . IDENT_22 , IDENT_13 . IDENT_21 ) ; throw new org . neo4j . kernel . impl . store . METHOD_15 ( ( ( ( STRING_0 + IDENT_23 ) + STRING_1 ) + ( IDENT_13 . IDENT_24 ) ) ) ; } monitor . METHOD_16 ( ) ; return METHOD_13 ( org . neo4j . kernel . impl . transaction . log . IDENT_19 . start ( 0 ) , IDENT_17 ) ; } }
org . junit . Assert . assertThat ( IDENT_2 . get ( ) , org . hamcrest . Matchers . is ( 1 ) ) 