METHOD_0 ( ) { java . lang . IDENT_0 IDENT_1 = ( ) -> { IDENT_2 . METHOD_1 ( ) ; IDENT_3 . METHOD_2 ( ) ; } ; org . neo4j . IDENT_4 . IDENT_5 IDENT_6 = IDENT_4 . METHOD_3 ( IDENT_7 . IDENT_8 , IDENT_1 , 100 , 100 ) ; IDENT_9 . METHOD_4 ( 100 , TimeUnit . IDENT_10 ) ; IDENT_4 . METHOD_5 ( ) ; while ( ( IDENT_2 . get ( ) ) < 1 ) { java . lang . Thread . METHOD_6 ( ) ; } IDENT_9 . METHOD_4 ( 100 , TimeUnit . IDENT_10 ) ; IDENT_4 . METHOD_5 ( ) ; IDENT_9 . METHOD_4 ( 100 , TimeUnit . IDENT_10 ) ; IDENT_3 . METHOD_7 ( ) ; IDENT_4 . METHOD_5 ( ) ; long IDENT_11 = ( java . lang . System . METHOD_8 ( ) ) + ( TimeUnit . IDENT_12 . METHOD_9 ( 10 ) ) ; while ( ( ( IDENT_2 . get ( ) ) < 2 ) && ( ( java . lang . System . METHOD_8 ( ) ) < IDENT_11 ) ) { IDENT_4 . METHOD_5 ( ) ; java . lang . Thread . METHOD_6 ( ) ; } "<AssertPlaceHolder>" ; IDENT_3 . METHOD_7 ( Integer . MAX_VALUE ) ; IDENT_6 . METHOD_10 ( false ) ; } get ( ) { org . neo4j . kernel . IDENT_13 . IDENT_14 . IDENT_15 IDENT_16 = IDENT_17 . METHOD_11 ( ) ; org . neo4j . kernel . impl . transaction . log . entry . IDENT_18 IDENT_19 = IDENT_16 . IDENT_19 ; long IDENT_20 = IDENT_16 . IDENT_21 ; if ( ! ( IDENT_16 . METHOD_12 ( ) ) ) { monitor . METHOD_13 ( ( IDENT_19 != null ? IDENT_19 . METHOD_14 ( ) : null ) ) ; return METHOD_15 ( IDENT_22 . IDENT_23 , IDENT_20 ) ; } if ( IDENT_19 != null ) { monitor . METHOD_16 ( IDENT_19 . METHOD_14 ( ) , IDENT_20 ) ; return METHOD_15 ( IDENT_19 . METHOD_14 ( ) , IDENT_20 ) ; } else { if ( ( IDENT_16 . IDENT_24 ) != ( IDENT_25 ) ) { long IDENT_26 = java . lang . Math . max ( org . neo4j . kernel . IDENT_13 . IDENT_25 , IDENT_16 . IDENT_24 ) ; throw new org . neo4j . kernel . impl . store . METHOD_17 ( ( ( ( STRING_0 + IDENT_26 ) + STRING_1 ) + ( IDENT_16 . IDENT_27 ) ) ) ; } monitor . METHOD_18 ( ) ; return METHOD_15 ( org . neo4j . kernel . impl . transaction . log . IDENT_22 . start ( 0 ) , IDENT_20 ) ; } }
org . junit . Assert . assertThat ( IDENT_2 . get ( ) , org . hamcrest . Matchers . is ( 2 ) ) 