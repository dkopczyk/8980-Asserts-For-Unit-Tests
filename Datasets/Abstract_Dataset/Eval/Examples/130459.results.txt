METHOD_0 ( ) { org . neo4j . kernel . impl . store . id . IDENT_0 . METHOD_1 ( IDENT_1 . get ( ) , file , 0 , false ) ; org . neo4j . kernel . impl . store . id . IDENT_2 IDENT_3 = new org . neo4j . kernel . impl . store . id . METHOD_2 ( IDENT_1 . get ( ) , file , 1 , Long . MAX_VALUE , false , IDENT_4 . IDENT_5 , ( ) -> 0L ) ; IDENT_3 . METHOD_3 ( METHOD_2 . IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { assert ! ( IDENT_7 ) ; long id ; while ( ( ( IDENT_8 ) == null ) || ( ( id = IDENT_8 . METHOD_4 ( ) ) == ( org . neo4j . kernel . impl . store . id . IDENT_9 . IDENT_10 ) ) ) { IDENT_8 = source . METHOD_5 ( IDENT_11 ) . iterator ( ) ; } return id ; }
org . junit . Assert . assertEquals ( ( ( METHOD_2 . IDENT_6 ) + 1 ) , IDENT_3 . METHOD_4 ( ) ) 