METHOD_0 ( ) { long [ ] first = new long [ ] { 1 , 4 , 7 , 10 , 100 , INT_0 } ; long [ ] other = new long [ ] { 2 , 3 , INT_1 , INT_2 , INT_0 } ; boolean IDENT_0 = org . neo4j . IDENT_1 . impl . IDENT_2 . Utils . METHOD_1 ( first , first . length , other , other . length ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( long [ ] , int , long [ ] , int ) { int f = 0 ; int o = 0 ; while ( ( f < IDENT_3 ) && ( o < IDENT_4 ) ) { if ( ( first [ f ] ) == ( other [ o ] ) ) { return true ; } if ( ( first [ f ] ) < ( other [ o ] ) ) { while ( ( ( ++ f ) < IDENT_3 ) && ( ( first [ f ] ) < ( other [ o ] ) ) ) { } } else { while ( ( ( ++ o ) < IDENT_4 ) && ( ( first [ f ] ) > ( other [ o ] ) ) ) { } } } return false ; }
org . junit . Assert . assertTrue ( IDENT_0 ) 