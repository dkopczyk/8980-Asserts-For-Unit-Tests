METHOD_0 ( ) { org . neo4j . IDENT_0 . impl . IDENT_1 . store . IDENT_2 IDENT_3 = new org . neo4j . IDENT_0 . impl . IDENT_1 . store . METHOD_1 ( ) ; org . neo4j . kernel . impl . store . id . IDENT_4 actual = mock ( org . neo4j . kernel . impl . store . id . IDENT_4 . class ) ; long IDENT_5 = 10 ; org . neo4j . kernel . impl . store . id . IDENT_4 IDENT_6 = IDENT_3 . apply ( actual ) . apply ( IDENT_5 ) ; long IDENT_7 = IDENT_6 . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; METHOD_3 ( actual ) ; } METHOD_2 ( ) { assert ! ( IDENT_8 ) ; long id ; while ( ( ( IDENT_9 ) == null ) || ( ( id = IDENT_9 . METHOD_2 ( ) ) == ( org . neo4j . kernel . impl . store . id . IDENT_10 . IDENT_11 ) ) ) { IDENT_9 = source . METHOD_4 ( IDENT_12 ) . iterator ( ) ; } return id ; }
org . junit . Assert . assertEquals ( ( 10 + 1 ) , IDENT_7 ) 