METHOD_0 ( ) { final java . lang . String IDENT_0 = IDENT_1 . newInstance ( ) ; final java . lang . String key = STRING_0 ; final java . lang . String value = STRING_1 ; long IDENT_2 = METHOD_1 ( ) ; gen ( ) . METHOD_2 ( INT_0 ) . payload ( org . neo4j . server . rest . domain . IDENT_3 . METHOD_3 ( METHOD_4 ( key , value , org . neo4j . server . rest . IDENT_4 . IDENT_5 . METHOD_5 ( IDENT_2 ) ) ) ) . METHOD_6 ( ( ( org . neo4j . server . rest . IDENT_4 . IDENT_5 . METHOD_7 ( IDENT_0 ) ) + STRING_2 ) ) ; org . neo4j . server . rest . IDENT_6 response = org . neo4j . server . rest . IDENT_7 . req ( ) . get ( org . neo4j . server . rest . IDENT_4 . IDENT_5 . METHOD_7 ( IDENT_0 , key , org . neo4j . server . rest . domain . IDENT_8 . encode ( value ) ) ) ; java . lang . String entity = response . METHOD_8 ( ) ; java . util . Collection < ? > IDENT_9 = ( ( java . util . Collection < ? > ) ( org . neo4j . server . rest . domain . IDENT_3 . METHOD_9 ( entity ) ) ) ; "<AssertPlaceHolder>" ; } size ( ) { return map . size ( ) ; }
org . junit . Assert . assertEquals ( 1 , IDENT_9 . size ( ) ) 