METHOD_0 ( ) { data . get ( ) ; java . lang . String IDENT_0 = IDENT_1 . newInstance ( ) ; java . lang . String IDENT_2 = properties . newInstance ( ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_3 = map ( STRING_0 , singletonList ( IDENT_2 ) ) ; java . lang . String result = gen . get ( ) . METHOD_1 ( 200 ) . payload ( METHOD_2 ( IDENT_3 ) ) . METHOD_3 ( METHOD_4 ( IDENT_0 ) ) . entity ( ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_4 = METHOD_5 ( result ) ; java . util . Map < java . lang . String , java . lang . Object > index = new java . util . HashMap ( ) ; index . put ( STRING_1 , IDENT_0 ) ; index . put ( STRING_2 , singletonList ( IDENT_0 ) ) ; index . put ( STRING_0 , singletonList ( IDENT_2 ) ) ; "<AssertPlaceHolder>" ; } put ( org . neo4j . index . internal . IDENT_5 . IDENT_6 , long ) { org . apache . commons . lang3 . mutable . IDENT_7 IDENT_8 = layout . key ( key ) ; org . apache . commons . lang3 . mutable . IDENT_7 IDENT_9 = layout . value ( org . neo4j . index . internal . IDENT_5 . IDENT_10 . value ( key ) ) ; writer . put ( IDENT_8 , IDENT_9 ) ; }
org . junit . Assert . assertThat ( IDENT_4 , org . hamcrest . Matchers . equalTo ( index ) ) 