METHOD_0 ( ) { byte [ ] packet = new byte [ ] { ( ( byte ) ( 255 ) ) , ( ( byte ) ( 255 ) ) } ; com . IDENT_0 . server . IDENT_1 . IDENT_2 . IDENT_3 IDENT_2 = new com . IDENT_0 . server . IDENT_1 . IDENT_2 . METHOD_1 ( packet ) ; java . util . ArrayList < byte [ ] > payload = new java . util . ArrayList < byte [ ] > ( ) ; payload . add ( com . IDENT_0 . server . IDENT_1 . IDENT_2 . METHOD_1 . METHOD_2 ( packet . length , IDENT_2 . METHOD_3 ( packet . length ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . util . ArrayList ) { int size = 0 ; for ( byte [ ] field : input ) size += field . length ; byte [ ] result = new byte [ size ] ; int offset = 0 ; for ( byte [ ] field : input ) { java . lang . System . METHOD_5 ( field , 0 , result , offset , field . length ) ; offset += field . length ; } return result ; }
org . junit . Assert . assertArrayEquals ( packet , com . IDENT_0 . server . IDENT_1 . IDENT_2 . METHOD_1 . METHOD_4 ( payload ) ) 