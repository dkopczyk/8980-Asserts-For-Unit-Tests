METHOD_0 ( ) { org . apache . IDENT_0 . IDENT_1 . hdfs . IDENT_2 . LOG . debug ( STRING_0 6 ) ; final int IDENT_3 = 4 ; final java . lang . String IDENT_4 = STRING_0 0 ; final long IDENT_5 = 2 ; java . lang . String IDENT_6 = ( IDENT_7 ) + STRING_1 ; int i = 1 ; int j = 1 ; org . apache . IDENT_0 . IDENT_1 . hdfs . IDENT_8 IDENT_9 = new org . apache . IDENT_0 . IDENT_1 . hdfs . METHOD_1 ( ) ; IDENT_1 = new org . apache . IDENT_0 . IDENT_1 . hdfs . METHOD_2 ( IDENT_9 ) ; org . apache . hadoop . conf . Configuration conf = new org . apache . hadoop . conf . Configuration ( ) ; org . apache . hadoop . fs . IDENT_10 fs = org . apache . hadoop . fs . IDENT_10 . get ( conf ) ; org . apache . hadoop . fs . Path IDENT_11 = new org . apache . hadoop . fs . Path ( IDENT_6 ) ; fs . delete ( IDENT_11 , true ) ; fs . METHOD_3 ( IDENT_11 ) ; org . apache . IDENT_0 . Context context = new org . apache . IDENT_0 . Context ( ) ; context . put ( STRING_2 , IDENT_6 ) ; context . put ( STRING_0 8 , IDENT_4 ) ; context . put ( STRING_0 7 , java . lang . String . valueOf ( 0 ) ) ; context . put ( STRING_3 , java . lang . String . valueOf ( 0 ) ) ; context . put ( STRING_4 , java . lang . String . valueOf ( 2 ) ) ; context . put ( STRING_0 1 , java . lang . String . valueOf ( IDENT_5 ) ) ; context . put ( STRING_5 , METHOD_1 . IDENT_12 ) ; org . apache . IDENT_0 . conf . IDENT_13 . METHOD_4 ( IDENT_1 , context ) ; org . apache . IDENT_0 . channel . IDENT_14 channel = new org . apache . IDENT_0 . channel . METHOD_5 ( ) ; org . apache . IDENT_0 . conf . IDENT_13 . METHOD_4 ( channel , new org . apache . IDENT_0 . Context ( ) ) ; IDENT_1 . METHOD_6 ( channel ) ; IDENT_1 . start ( ) ; java . util . Calendar IDENT_15 = java . util . Calendar . getInstance ( ) ; java . util . List < java . lang . String > IDENT_16 = com . google . common . collect . Lists . newArrayList ( ) ; for ( i = 1 ; i < IDENT_3 ; i ++ ) { channel . METHOD_7 ( ) . METHOD_8 ( ) ; try { for ( j = 1 ; j <= IDENT_5 ; j ++ ) { org . apache . IDENT_0 . IDENT_17 event = new org . apache . IDENT_0 . event . METHOD_9 ( ) ; IDENT_15 . METHOD_10 ( ) ; IDENT_15 . set ( INT_0 , i , i , i , 0 ) ; event . METHOD_11 ( ) . put ( STRING_0 3 , java . lang . String . valueOf ( IDENT_15 . METHOD_12 ( ) ) ) ; event . METHOD_11 ( ) . put ( STRING_0 2 , ( STRING_0 9 + i ) ) ; java . lang . String body = ( ( STRING_6 + i ) + STRING_0 ) + j ; event . METHOD_13 ( body . getBytes ( ) ) ; IDENT_16 . add ( body ) ; event . METHOD_11 ( ) . put ( STRING_0 4 , "" ) ; channel . put ( event ) ; } channel . METHOD_7 ( ) . commit ( ) ; } finally { channel . METHOD_7 ( ) . close ( ) ; } org . apache . IDENT_0 . IDENT_1 . hdfs . IDENT_2 . LOG . info ( ( STRING_7 + ( IDENT_1 . process ( ) ) ) ) ; if ( i == 1 ) { java . lang . Thread . sleep ( INT_1 ) ; } } org . apache . IDENT_0 . IDENT_1 . hdfs . IDENT_2 . LOG . info ( ( STRING_0 5 + ( IDENT_1 . process ( ) ) ) ) ; IDENT_1 . METHOD_14 ( ) ; "<AssertPlaceHolder>" ; org . apache . IDENT_0 . IDENT_1 . hdfs . IDENT_2 . LOG . info ( STRING_8 , IDENT_9 . IDENT_18 . get ( ) ) ; METHOD_15 ( fs , conf , IDENT_11 . METHOD_16 ( ) . getPath ( ) , IDENT_4 , IDENT_16 ) ; } get ( ) { if ( iterator . hasNext ( ) ) { return iterator . next ( ) ; } else { iterator = elements . iterator ( ) ; return iterator . next ( ) ; } }
org . junit . Assert . assertTrue ( ( ( IDENT_9 . IDENT_18 . get ( ) ) >= 2 ) ) 