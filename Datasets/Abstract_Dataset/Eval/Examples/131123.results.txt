METHOD_0 ( ) { buffer . METHOD_1 ( ) ; buffer . METHOD_2 ( STRING_0 . getBytes ( IDENT_0 . IDENT_1 ) ) ; final java . util . concurrent . atomic . IDENT_2 IDENT_3 = new java . util . concurrent . atomic . METHOD_3 ( INT_0 ) ; final java . util . concurrent . atomic . IDENT_4 < java . lang . Throwable > IDENT_5 = new java . util . concurrent . atomic . IDENT_4 < java . lang . Throwable > ( ) ; java . util . List < java . lang . Thread > IDENT_6 = new java . util . ArrayList < java . lang . Thread > ( ) ; for ( int i = 0 ; i < 10 ; i ++ ) { java . lang . Thread IDENT_7 = new java . lang . Thread ( new java . lang . METHOD_4 ( ) { @ io . netty . buffer . Override public void run ( ) { try { while ( ( ( IDENT_5 . get ( ) ) == null ) && ( ( IDENT_3 . METHOD_5 ( ) ) > 0 ) ) { "<AssertPlaceHolder>" ; } } catch ( java . lang . Throwable IDENT_8 ) { IDENT_5 . METHOD_6 ( null , IDENT_8 ) ; } } } ) ; IDENT_6 . add ( IDENT_7 ) ; } for ( java . lang . Thread IDENT_7 : IDENT_6 ) { IDENT_7 . start ( ) ; } for ( java . lang . Thread IDENT_7 : IDENT_6 ) { IDENT_7 . join ( ) ; } java . lang . Throwable error = IDENT_5 . get ( ) ; if ( error != null ) { throw error ; } } toString ( java . nio . IDENT_9 . IDENT_10 ) { io . netty . buffer . IDENT_11 . METHOD_7 ( IDENT_12 ) ; return super . toString ( IDENT_9 ) ; }
org . junit . Assert . assertEquals ( STRING_0 , buffer . toString ( IDENT_0 . IDENT_1 ) ) 