METHOD_0 ( ) { METHOD_1 ( 1 , 1 , 1 ) ; final java . lang . String text = "" ; final io . netty . buffer . IDENT_0 content = io . netty . buffer . IDENT_1 . METHOD_2 ( text . getBytes ( ) ) ; final io . netty . handler . codec . http . IDENT_2 request = new io . netty . handler . codec . http . METHOD_3 ( io . netty . handler . codec . http . IDENT_3 . IDENT_4 , io . netty . handler . codec . http . IDENT_5 . IDENT_6 , STRING_0 , content , true ) ; try { io . netty . handler . codec . http . IDENT_7 IDENT_8 = request . headers ( ) ; IDENT_8 . METHOD_4 ( IDENT_9 . IDENT_10 . IDENT_11 . text ( ) , 3 ) ; IDENT_8 . METHOD_4 ( IDENT_12 . IDENT_13 , text . length ( ) ) ; IDENT_8 . METHOD_5 ( IDENT_9 . IDENT_10 . IDENT_14 . text ( ) , ( ( short ) ( 16 ) ) ) ; final io . netty . handler . codec . IDENT_15 . IDENT_16 IDENT_17 = new io . netty . handler . codec . IDENT_15 . METHOD_6 ( ) . method ( new io . netty . util . METHOD_7 ( STRING_1 ) ) . path ( new io . netty . util . METHOD_7 ( STRING_0 ) ) ; io . netty . handler . codec . IDENT_15 . IDENT_18 . METHOD_8 ( IDENT_19 , new io . netty . handler . codec . IDENT_15 . IDENT_18 . METHOD_9 ( ) { @ io . netty . handler . codec . IDENT_15 . Override public void run ( ) throws io . netty . handler . codec . IDENT_15 . IDENT_20 { IDENT_21 . METHOD_10 ( ) . METHOD_11 ( METHOD_12 ( ) , 3 , IDENT_17 , 0 , false , METHOD_13 ( ) ) ; IDENT_21 . METHOD_10 ( ) . METHOD_14 ( METHOD_12 ( ) , 3 , content . METHOD_15 ( ) , 0 , false , METHOD_13 ( ) ) ; IDENT_21 . METHOD_10 ( ) . METHOD_14 ( METHOD_12 ( ) , 3 , content . METHOD_15 ( ) , 0 , false , METHOD_13 ( ) ) ; IDENT_21 . METHOD_10 ( ) . METHOD_14 ( METHOD_12 ( ) , 3 , content . METHOD_15 ( ) , 0 , true , METHOD_13 ( ) ) ; IDENT_19 . METHOD_16 ( ) ; } } ) ; METHOD_17 ( ) ; org . mockito . IDENT_22 < io . netty . handler . codec . http . IDENT_23 > IDENT_24 = org . mockito . IDENT_22 . METHOD_18 ( io . netty . handler . codec . http . IDENT_23 . class ) ; verify ( IDENT_25 ) . METHOD_19 ( IDENT_24 . METHOD_20 ( ) ) ; IDENT_26 = IDENT_24 . METHOD_21 ( ) ; "<AssertPlaceHolder>" ; } finally { request . METHOD_22 ( ) ; } } get ( java . lang . IDENT_27 ) { return METHOD_23 ( name ) ; }
org . junit . Assert . assertEquals ( request , IDENT_26 . get ( 0 ) ) 