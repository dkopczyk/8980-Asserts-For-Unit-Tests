METHOD_0 ( ) { final byte [ ] IDENT_0 = IDENT_1 . IDENT_2 . getBytes ( STRING_0 ) ; java . io . ByteArrayOutputStream IDENT_3 = new java . io . ByteArrayOutputStream ( ) ; final java . io . IDENT_4 IDENT_5 = name . IDENT_6 . IDENT_7 . crypto . IDENT_8 . IDENT_9 . IDENT_10 . METHOD_1 ( ) . METHOD_2 ( name . IDENT_6 . IDENT_7 . crypto . IDENT_8 . IDENT_9 . IDENT_11 . IDENT_12 . METHOD_3 ( ) ) . METHOD_4 ( IDENT_13 ) . METHOD_5 ( STRING_1 ) . METHOD_6 ( STRING_2 ) . METHOD_7 ( ) . METHOD_8 ( IDENT_3 ) ; IDENT_5 . write ( IDENT_0 ) ; IDENT_5 . close ( ) ; IDENT_3 . close ( ) ; java . io . ByteArrayInputStream IDENT_14 = new java . io . ByteArrayInputStream ( IDENT_3 . toByteArray ( ) ) ; final java . io . InputStream IDENT_15 = name . IDENT_6 . IDENT_7 . crypto . IDENT_8 . IDENT_9 . IDENT_10 . METHOD_9 ( ) . METHOD_2 ( name . IDENT_6 . IDENT_7 . crypto . IDENT_8 . IDENT_9 . IDENT_11 . IDENT_12 . METHOD_10 ( ) ) . METHOD_11 ( STRING_2 ) . METHOD_12 ( IDENT_14 ) ; final byte [ ] IDENT_16 = org . IDENT_8 . util . io . IDENT_17 . METHOD_13 ( IDENT_15 ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( ) { return name . IDENT_6 . IDENT_7 . crypto . IDENT_8 . IDENT_9 . IDENT_11 . IDENT_12 . METHOD_10 ( name . IDENT_6 . IDENT_7 . crypto . IDENT_8 . IDENT_9 . keys . IDENT_18 . IDENT_19 . METHOD_14 ( IDENT_1 . IDENT_20 ) ) ; }
org . junit . Assert . assertArrayEquals ( IDENT_0 , IDENT_16 ) 