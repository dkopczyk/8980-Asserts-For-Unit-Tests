METHOD_0 ( ) { org . IDENT_0 . core . data . IDENT_1 IDENT_2 = METHOD_1 ( ) ; double [ ] IDENT_3 = org . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_2 ( IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . IDENT_0 . core . data . IDENT_1 ) { int IDENT_7 = IDENT_2 . METHOD_3 ( ) ; double [ ] IDENT_8 = new double [ IDENT_7 ] ; for ( int i = 0 ; i < IDENT_7 ; i ++ ) { IDENT_8 [ i ] = Double . IDENT_9 ; } for ( org . IDENT_0 . core . data . IDENT_10 IDENT_11 : IDENT_2 . METHOD_4 ( ) ) { double [ ] input = IDENT_11 . METHOD_5 ( ) ; for ( int i = 0 ; i < IDENT_7 ; i ++ ) { IDENT_8 [ i ] = java . lang . Math . max ( IDENT_8 [ i ] , input [ i ] ) ; } } return IDENT_8 ; }
org . junit . Assert . assertEquals ( 0 , IDENT_3 . length ) 