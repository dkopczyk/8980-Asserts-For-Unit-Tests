METHOD_0 ( ) { org . IDENT_0 . geometry . IDENT_1 [ ] IDENT_2 = new org . IDENT_0 . geometry . IDENT_1 [ ] { org . IDENT_0 . geometry . IDENT_3 . METHOD_1 ( ( - FLOAT_0 ) , ( - FLOAT_1 ) ) , org . IDENT_0 . geometry . IDENT_3 . METHOD_1 ( 0.0 , ( - FLOAT_1 ) ) } ; org . IDENT_0 . geometry . IDENT_4 line = org . IDENT_0 . geometry . IDENT_3 . METHOD_2 ( IDENT_2 ) ; { org . IDENT_0 . utils . IDENT_5 . IDENT_6 IDENT_7 = new org . IDENT_0 . utils . IDENT_5 . METHOD_3 ( 0.0 , ( - FLOAT_2 ) , FLOAT_3 , 0.0 ) ; org . IDENT_0 . geometry . IDENT_8 g = line . METHOD_4 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; } } METHOD_4 ( org . IDENT_0 . geometry . IDENT_9 ) { org . IDENT_0 . geometry . IDENT_8 IDENT_10 = super . METHOD_4 ( geom ) ; if ( IDENT_10 instanceof org . IDENT_0 . geometry . IDENT_11 ) { org . IDENT_0 . geometry . IDENT_12 collection = ( ( org . IDENT_0 . geometry . IDENT_12 ) ( IDENT_10 ) ) ; org . IDENT_0 . geometry . Iterator < ? extends org . IDENT_0 . geometry . IDENT_8 > IDENT_13 = collection . iterator ( ) ; while ( IDENT_13 . hasNext ( ) ) { org . IDENT_0 . geometry . IDENT_8 g = IDENT_13 . next ( ) ; if ( g . isEmpty ( ) ) { IDENT_13 . remove ( ) ; } } if ( ( collection . METHOD_5 ( ) ) == 0 ) { return null ; } else if ( ( collection . METHOD_5 ( ) ) == 1 ) { org . IDENT_0 . geometry . IDENT_14 g = ( ( org . IDENT_0 . geometry . IDENT_14 ) ( collection . METHOD_6 ( 0 ) ) ) ; g . METHOD_7 ( collection . METHOD_8 ( ) ) ; return g ; } return collection ; } return null ; }
org . junit . Assert . assertNull ( g ) 