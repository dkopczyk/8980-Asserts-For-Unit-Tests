METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . parse . IDENT_2 IDENT_3 = com . IDENT_0 . IDENT_1 . parse . IDENT_4 . IDENT_5 . METHOD_1 ( STRING_0 , IDENT_6 . IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , com . IDENT_0 . IDENT_1 . parse . IDENT_4 . IDENT_6 ) { byte [ ] IDENT_8 = org . apache . hadoop . hbase . util . IDENT_9 . METHOD_2 ( com . IDENT_0 . IDENT_1 . parse . IDENT_4 . IDENT_5 . METHOD_3 ( IDENT_10 ) ) ; java . lang . String IDENT_11 = com . IDENT_0 . IDENT_1 . parse . IDENT_4 . IDENT_5 . METHOD_4 ( IDENT_10 ) ; boolean IDENT_12 = com . IDENT_0 . IDENT_1 . parse . IDENT_4 . IDENT_5 . METHOD_5 ( IDENT_11 ) ; if ( IDENT_12 ) { IDENT_11 = IDENT_11 . substring ( 0 , ( ( IDENT_11 . length ( ) ) - 1 ) ) ; } byte [ ] IDENT_13 = org . apache . hadoop . hbase . util . IDENT_9 . METHOD_2 ( IDENT_11 ) ; if ( IDENT_14 == ( IDENT_6 . IDENT_7 ) ) { if ( IDENT_12 ) { return new com . IDENT_0 . IDENT_1 . parse . IDENT_4 . METHOD_6 ( IDENT_8 , IDENT_13 ) ; } else { return new com . IDENT_0 . IDENT_1 . parse . IDENT_4 . METHOD_7 ( IDENT_8 , IDENT_13 ) ; } } else { if ( IDENT_12 ) { return new com . IDENT_0 . IDENT_1 . parse . IDENT_4 . METHOD_8 ( IDENT_8 , IDENT_13 ) ; } else { throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } } }
org . junit . Assert . assertTrue ( ( IDENT_3 instanceof com . IDENT_0 . IDENT_1 . parse . IDENT_4 . METHOD_7 ) ) 