METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 2 ; com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( org . apache . hadoop . hbase . util . IDENT_5 . METHOD_2 ( ( IDENT_0 + STRING_1 ) ) ) ; com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( org . apache . hadoop . hbase . util . IDENT_5 . METHOD_2 ( ( IDENT_0 + STRING_2 ) ) ) ; org . apache . hadoop . hbase . client . IDENT_6 IDENT_7 = com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_8 . METHOD_3 ( ) . METHOD_4 ( org . apache . hadoop . hbase . IDENT_9 . valueOf ( ( IDENT_0 + STRING_1 ) ) ) ; org . apache . hadoop . hbase . client . IDENT_6 IDENT_10 = com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_8 . METHOD_3 ( ) . METHOD_4 ( org . apache . hadoop . hbase . IDENT_9 . valueOf ( ( IDENT_0 + STRING_2 ) ) ) ; java . lang . String IDENT_11 = IDENT_0 + STRING_0 4 ; try { com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_5 ( STRING_0 , com . google . common . collect . ImmutableMap . of ( STRING_3 , STRING_0 5 , STRING_4 , STRING_5 ) , IDENT_7 ) ; com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_5 ( STRING_0 6 , com . google . common . collect . ImmutableMap . of ( STRING_3 , STRING_0 5 , STRING_4 , STRING_5 ) , IDENT_10 ) ; com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_12 . METHOD_6 ( STRING_6 , new java . io . File ( com . google . common . io . IDENT_13 . getResource ( getClass ( ) , STRING_0 0 ) . METHOD_7 ( ) ) . toString ( ) , STRING_7 , STRING_8 , STRING_9 , STRING_0 1 , STRING_0 3 , com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_14 ) ; "<AssertPlaceHolder>" ; } finally { com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_8 . METHOD_8 ( IDENT_11 ) ; com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_8 . METHOD_9 ( IDENT_11 ) ; IDENT_7 . close ( ) ; IDENT_10 . close ( ) ; } } METHOD_10 ( java . lang . String ) { return METHOD_10 ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_15 , IDENT_16 ) ; }
org . junit . Assert . assertEquals ( 2 , METHOD_10 ( STRING_0 7 ) . size ( ) ) 