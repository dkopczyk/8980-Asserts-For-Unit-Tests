METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . impl . IDENT_2 . IDENT_3 IDENT_4 = new com . IDENT_0 . IDENT_1 . impl . IDENT_2 . METHOD_1 ( ) ; com . IDENT_0 . IDENT_1 . impl . IDENT_5 executor = new com . IDENT_0 . IDENT_1 . impl . METHOD_2 ( IDENT_4 , METHOD_3 ( 2 ) , 1 , IDENT_6 ) ; final int IDENT_7 = 10 ; for ( int i = 0 ; i < IDENT_7 ; i ++ ) { executor . METHOD_4 ( METHOD_5 ( i ) ) ; } for ( int IDENT_8 = 0 ; IDENT_8 < 50 ; IDENT_8 ++ ) { if ( ( IDENT_4 . IDENT_9 . size ( ) ) >= IDENT_7 ) { break ; } java . lang . Thread . sleep ( INT_0 ) ; } "<AssertPlaceHolder>" ; } METHOD_5 ( int ) { com . IDENT_0 . IDENT_1 . IDENT_10 IDENT_11 = mock ( com . IDENT_0 . IDENT_1 . IDENT_10 . class ) ; when ( IDENT_11 . METHOD_6 ( ) ) . thenReturn ( org . apache . hadoop . hbase . util . IDENT_12 . METHOD_7 ( java . lang . String . valueOf ( row ) ) ) ; return IDENT_11 ; }
org . junit . Assert . assertEquals ( IDENT_7 , IDENT_4 . IDENT_9 . size ( ) ) 