METHOD_0 ( ) { java . lang . String input = STRING_0 ; byte [ ] bytes = input . getBytes ( ) ; com . IDENT_0 . json . IDENT_1 < java . lang . Object > json = new com . IDENT_0 . json . IDENT_1 < java . lang . Object > ( ) ; com . IDENT_0 . json . IDENT_2 < java . lang . Object > reader = json . METHOD_1 ( ) . process ( bytes , bytes . length ) ; int IDENT_3 = reader . next ( int . class ) ; "<AssertPlaceHolder>" ; } process ( com . IDENT_0 . json . processor . Set , com . IDENT_0 . json . processor . IDENT_4 ) { if ( ( IDENT_5 . METHOD_2 ( ) ) || ( IDENT_6 . isEmpty ( ) ) ) { return false ; } final com . IDENT_0 . json . IDENT_1 . IDENT_7 < java . lang . Object > IDENT_8 = new com . IDENT_0 . json . IDENT_1 . IDENT_7 < > ( ) . METHOD_3 ( IDENT_7 . IDENT_9 ) . METHOD_4 ( IDENT_7 . IDENT_10 ) . METHOD_3 ( IDENT_11 . IDENT_12 ) . METHOD_4 ( IDENT_11 . IDENT_13 ) . METHOD_3 ( IDENT_14 . IDENT_12 ) . METHOD_4 ( IDENT_14 . IDENT_13 ) . METHOD_3 ( IDENT_15 . IDENT_12 ) . METHOD_4 ( IDENT_15 . IDENT_13 ) . METHOD_5 ( getClass ( ) . METHOD_6 ( ) ) ; final com . IDENT_0 . json . IDENT_1 < java . lang . Object > IDENT_16 = new com . IDENT_0 . json . METHOD_7 ( IDENT_8 ) ; com . IDENT_0 . json . processor . Set < java . lang . reflect . Type > IDENT_17 = IDENT_16 . METHOD_8 ( ) ; com . IDENT_0 . json . processor . Set < java . lang . reflect . Type > IDENT_18 = IDENT_16 . METHOD_9 ( ) ; com . IDENT_0 . json . processor . Set < java . lang . String > IDENT_19 = new com . IDENT_0 . json . processor . HashSet ( ) ; for ( java . lang . reflect . Type t : IDENT_18 ) { if ( ( IDENT_17 . contains ( t ) ) || ( com . IDENT_0 . json . processor . IDENT_20 . METHOD_10 ( IDENT_17 , t ) ) ) { IDENT_19 . add ( t . METHOD_11 ( ) ) ; } } com . IDENT_0 . json . processor . IDENT_21 IDENT_22 = new com . IDENT_0 . json . processor . METHOD_12 ( ( type ) -> { if ( IDENT_19 . contains ( type ) ) { return true ; } else if ( STRING_1 . equals ( type ) ) { return false ; } try { Class < ? > IDENT_23 = java . lang . Class . METHOD_13 ( type ) ; return ( IDENT_16 . METHOD_14 ( IDENT_23 ) ) && ( IDENT_16 . METHOD_15 ( IDENT_23 ) ) ; } catch ( java . lang . IDENT_24 | java . lang . Exception IDENT_25 ) { return false ; } } ) ; final com . IDENT_0 . json . processor . IDENT_26 analysis = new com . IDENT_0 . json . processor . METHOD_16 ( IDENT_27 , IDENT_28 , IDENT_29 , IDENT_22 , com . IDENT_0 . json . processor . IDENT_20 . IDENT_30 , IDENT_31 , com . IDENT_0 . json . processor . IDENT_20 . IDENT_32 , IDENT_33 , com . IDENT_0 . json . processor . IDENT_20 . IDENT_34 , com . IDENT_0 . json . processor . IDENT_20 . IDENT_35 , IDENT_36 , false , true , true , true ) ; com . IDENT_0 . json . processor . Set < ? extends javax . lang . model . element . Element > IDENT_37 = IDENT_5 . METHOD_17 ( analysis . IDENT_38 ) ; com . IDENT_0 . json . processor . Set < ? extends javax . lang . model . element . Element > IDENT_39 = ( ( IDENT_40 ) && ( ( IDENT_41 ) != null ) ) ? IDENT_5 . METHOD_17 ( IDENT_41 ) : new com . IDENT_0 . json . processor . HashSet ( ) ; com . IDENT_0 . json . processor . Set < ? extends javax . lang . model . element . Element > IDENT_42 = ( ( IDENT_43 ) && ( ( IDENT_44 ) != null ) ) ? IDENT_5 . METHOD_17 ( IDENT_44 ) : new com . IDENT_0 . json . processor . HashSet ( ) ; if ( ( ( ! ( IDENT_37 . isEmpty ( ) ) ) || ( ! ( IDENT_39 . isEmpty ( ) ) ) ) || ( ! ( IDENT_42 . isEmpty ( ) ) ) ) { com . IDENT_0 . json . processor . Set < ? extends javax . lang . model . element . Element > IDENT_45 = IDENT_5 . METHOD_17 ( analysis . IDENT_46 ) ; com . IDENT_0 . json . processor . Map < java . lang . String , javax . lang . model . element . Element > IDENT_47 = analysis . METHOD_18 ( IDENT_45 ) ; if ( ( ! ( IDENT_47 . isEmpty ( ) ) ) && ( "" . equals ( IDENT_48 ) ) ) { for ( Map . Entry < java . lang . String , javax . lang . model . element . Element > IDENT_49 : IDENT_47 . entrySet ( ) ) { if ( IDENT_29 . METHOD_19 ( IDENT_50 . IDENT_51 ) ) { IDENT_27 . METHOD_20 ( ) . METHOD_21 ( IDENT_52 . IDENT_53 . IDENT_54 , ( ( ( ( ( ( STRING_2 + ( com . IDENT_0 . json . IDENT_55 . class . getName ( ) ) ) + STRING_3 ) + ( com . IDENT_0 . json . Configuration . class . getName ( ) ) ) + STRING_4 ) + ( IDENT_49 . getKey ( ) ) ) + STRING_5 ) , IDENT_49 . getValue ( ) ) ; } } return false ; } analysis . METHOD_22 ( analysis . IDENT_56 , IDENT_37 ) ; if ( ( ! ( IDENT_39 . isEmpty ( ) ) ) && ( ( IDENT_57 ) != null ) ) { analysis . METHOD_22 ( IDENT_57 , IDENT_39 ) ; } if ( ( ! ( IDENT_42 . isEmpty ( ) ) ) && ( ( IDENT_58 ) != null ) ) { analysis . METHOD_22 ( IDENT_58 , IDENT_42 ) ; } com . IDENT_0 . json . processor . Map < java . lang . String , com . IDENT_0 . json . processor . IDENT_59 > IDENT_60 = analysis . METHOD_23 ( ) ; if ( analysis . METHOD_24 ( ) ) { return false ; } final com . IDENT_0 . json . processor . Map < java . lang . String , com . IDENT_0 . json . processor . IDENT_59 > IDENT_61 = new com . IDENT_0 . json . processor . HashMap ( ) ; final com . IDENT_0 . json . processor . List < javax . lang . model . element . Element > IDENT_62 = new com . IDENT_0 . json . processor . ArrayList ( ) ; for ( Map . Entry < java . lang . String , com . IDENT_0 . json . processor . IDENT_59 > entry : IDENT_60 . entrySet ( ) ) { com . IDENT_0 . json . processor . IDENT_59 IDENT_63 = entry . getValue ( ) ; if ( ( ( ( IDENT_63 . type ) == ( IDENT_64 . IDENT_65 ) ) && ( IDENT_63 . attributes . isEmpty ( ) ) ) && ( ! ( IDENT_63 . METHOD_25 ( ) ) ) ) { continue ; } java . lang . String IDENT_66 = com . IDENT_0 . json . processor . IDENT_20 . METHOD_26 ( IDENT_63 ) ; try { javax . tools . IDENT_67 IDENT_68 = IDENT_27 . METHOD_27 ( ) . METHOD_28 ( IDENT_66 , IDENT_63 . element ) ; try ( com . IDENT_0 . json . processor . IDENT_69 writer = IDENT_68 . METHOD_29 ( ) ) { com . IDENT_0 . json . processor . IDENT_20 . METHOD_30 ( writer , IDENT_27 , entry . getKey ( ) , IDENT_63 , IDENT_60 , IDENT_22 , ( ( IDENT_36 ) != ( IDENT_70 . IDENT_71 ) ) ) ; IDENT_61 . put ( IDENT_66 , IDENT_63 ) ; IDENT_62 . add ( IDENT_63 . element ) ; } catch ( com . IDENT_0 . json . processor . IOException e ) { IDENT_27 . METHOD_20 ( ) . METHOD_21 ( IDENT_52 . IDENT_53 . IDENT_71 , ( STRING_6 + IDENT_66 ) ) ; } } catch ( com . IDENT_0 . json . processor . IOException e ) { IDENT_27 . METHOD_20 ( ) . METHOD_21 ( IDENT_52 . IDENT_53 . IDENT_71 , ( STRING_7 + IDENT_66 ) ) ; } } final com . IDENT_0 . json . processor . List < java . lang . String > IDENT_72 = new com . IDENT_0 . json . processor . ArrayList ( IDENT_47 . METHOD_31 ( ) ) ; if ( ( IDENT_48 ) != null ) { try { javax . tools . IDENT_73 IDENT_74 = IDENT_27 . METHOD_27 ( ) . METHOD_28 ( IDENT_48 , IDENT_62 . toArray ( new javax . lang . model . element . Element [ 0 ] ) ) ; try ( com . IDENT_0 . json . processor . IDENT_69 writer = IDENT_74 . METHOD_29 ( ) ) { if ( ! ( com . IDENT_0 . json . processor . IDENT_20 . METHOD_32 ( writer , IDENT_48 , IDENT_61 , IDENT_27 ) ) ) return false ; IDENT_72 . add ( IDENT_48 ) ; } catch ( java . lang . Exception e ) { IDENT_27 . METHOD_20 ( ) . METHOD_21 ( IDENT_52 . IDENT_53 . IDENT_71 , ( STRING_8 + ( IDENT_48 ) ) ) ; } } catch ( com . IDENT_0 . json . processor . IOException e ) { IDENT_27 . METHOD_20 ( ) . METHOD_21 ( IDENT_52 . IDENT_53 . IDENT_71 , ( STRING_9 + ( IDENT_48 ) ) ) ; } } if ( ! ( IDENT_72 . isEmpty ( ) ) ) { IDENT_62 . addAll ( IDENT_47 . values ( ) ) ; METHOD_33 ( IDENT_72 , IDENT_62 ) ; } } return false ; }
org . junit . Assert . assertEquals ( 0 , IDENT_3 ) 