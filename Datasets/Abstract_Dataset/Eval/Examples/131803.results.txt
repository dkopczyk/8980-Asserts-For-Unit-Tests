METHOD_0 ( ) { java . math . BigDecimal IDENT_0 = new java . math . BigDecimal ( STRING_0 ) ; java . lang . String IDENT_1 = ( STRING_1 + IDENT_0 ) + STRING_1 ; byte [ ] bytes = IDENT_1 . getBytes ( ) ; java . io . ByteArrayInputStream is = new java . io . ByteArrayInputStream ( bytes ) ; com . IDENT_2 . json . IDENT_3 < java . lang . Object > json = new com . IDENT_2 . json . IDENT_3 < java . lang . Object > ( ) ; com . IDENT_2 . json . IDENT_4 < java . lang . Object > input = json . METHOD_1 ( is , new byte [ INT_0 ] ) ; com . IDENT_2 . json . IDENT_4 . IDENT_5 < java . math . BigDecimal > converter = json . METHOD_2 ( java . math . BigDecimal . class ) ; for ( int i = 0 ; i < 10 ; i ++ ) { java . math . BigDecimal value = json . METHOD_3 ( converter , input ) ; "<AssertPlaceHolder>" ; is . METHOD_4 ( ) ; input . process ( is ) ; } } METHOD_3 ( com . IDENT_2 . json . IDENT_6 , java . io . InputStream ) { return ( ( T ) ( json . METHOD_3 ( IDENT_7 . type , is ) ) ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , value ) 