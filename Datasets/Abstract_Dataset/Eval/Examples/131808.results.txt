METHOD_0 ( ) { byte [ ] bytes = STRING_0 . getBytes ( STRING_1 ) ; com . IDENT_0 . json . IDENT_1 . IDENT_2 IDENT_3 = IDENT_4 . METHOD_1 ( com . IDENT_0 . json . IDENT_1 . IDENT_2 . class , bytes , bytes . length ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . Class , byte [ ] , int ) { IDENT_5 IDENT_6 = super . METHOD_1 ( IDENT_7 , body , size ) ; IDENT_5 IDENT_8 = super . METHOD_1 ( IDENT_7 , new java . io . ByteArrayInputStream ( body , 0 , size ) , buffer ) ; if ( IDENT_7 . METHOD_2 ( ) ) { if ( ( IDENT_7 . METHOD_3 ( ) ) == ( double . class ) ) { com . IDENT_0 . json . IDENT_9 . types . IDENT_10 . METHOD_4 ( ( ( double [ ] ) ( IDENT_6 ) ) , ( ( double [ ] ) ( IDENT_8 ) ) ) ; } else if ( ( IDENT_7 . METHOD_3 ( ) ) == ( float . class ) ) { com . IDENT_0 . json . IDENT_9 . types . IDENT_11 . METHOD_4 ( ( ( float [ ] ) ( IDENT_6 ) ) , ( ( float [ ] ) ( IDENT_8 ) ) ) ; } else if ( ( IDENT_7 . METHOD_3 ( ) ) == ( int . class ) ) { com . IDENT_0 . json . IDENT_9 . types . IDENT_12 . METHOD_4 ( ( ( int [ ] ) ( IDENT_6 ) ) , ( ( int [ ] ) ( IDENT_8 ) ) ) ; } else if ( ( IDENT_7 . METHOD_3 ( ) ) == ( long . class ) ) { com . IDENT_0 . json . IDENT_9 . types . IDENT_13 . METHOD_4 ( ( ( long [ ] ) ( IDENT_6 ) ) , ( ( long [ ] ) ( IDENT_8 ) ) ) ; } else if ( ( IDENT_7 . METHOD_3 ( ) ) == ( boolean . class ) ) { com . IDENT_0 . json . IDENT_9 . types . IDENT_14 . METHOD_4 ( ( ( boolean [ ] ) ( IDENT_6 ) ) , ( ( boolean [ ] ) ( IDENT_8 ) ) ) ; } else if ( ( IDENT_7 . METHOD_3 ( ) ) == ( byte . class ) ) { com . IDENT_0 . json . IDENT_9 . types . IDENT_15 . METHOD_5 ( ( ( byte [ ] ) ( IDENT_6 ) ) , ( ( byte [ ] ) ( IDENT_8 ) ) ) ; } else if ( ( IDENT_7 . METHOD_3 ( ) ) == ( java . awt . image . IDENT_16 . class ) ) { com . IDENT_0 . json . IDENT_9 . types . IDENT_17 . METHOD_6 ( ( ( java . awt . image . IDENT_16 [ ] ) ( IDENT_6 ) ) , ( ( java . awt . image . IDENT_16 [ ] ) ( IDENT_8 ) ) ) ; } else if ( ( IDENT_7 . METHOD_3 ( ) ) == ( org . w3c . dom . Element . class ) ) { com . IDENT_0 . json . IDENT_9 . types . IDENT_18 . METHOD_6 ( ( ( org . w3c . dom . Element [ ] ) ( IDENT_6 ) ) , ( ( org . w3c . dom . Element [ ] ) ( IDENT_8 ) ) ) ; } else { org . junit . Assert . assertArrayEquals ( ( ( java . lang . Object [ ] ) ( IDENT_6 ) ) , ( ( java . lang . Object [ ] ) ( IDENT_8 ) ) ) ; } } else if ( IDENT_7 == ( java . awt . image . IDENT_16 . class ) ) { com . IDENT_0 . json . IDENT_9 . types . IDENT_17 . METHOD_5 ( ( ( java . awt . image . IDENT_16 ) ( IDENT_6 ) ) , ( ( java . awt . image . IDENT_16 ) ( IDENT_8 ) ) ) ; } else if ( IDENT_7 == ( org . w3c . dom . Element . class ) ) { com . IDENT_0 . json . IDENT_9 . types . IDENT_18 . METHOD_5 ( ( ( org . w3c . dom . Element ) ( IDENT_6 ) ) , ( ( org . w3c . dom . Element ) ( IDENT_8 ) ) ) ; } else { org . junit . Assert . assertEquals ( IDENT_6 , IDENT_8 ) ; } return IDENT_6 ; }
org . junit . Assert . assertNotNull ( IDENT_3 ) 