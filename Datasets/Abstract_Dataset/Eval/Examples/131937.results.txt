METHOD_0 ( ) { final net . IDENT_0 . platform . datamodel . IDENT_1 IDENT_2 = new net . IDENT_0 . platform . datamodel . mock . METHOD_1 ( 0 , METHOD_2 ( ) , METHOD_3 ( ) ) ; final net . IDENT_0 . platform . datamodel . IDENT_3 IDENT_4 = new net . IDENT_0 . platform . datamodel . mock . METHOD_4 ( 0 , IDENT_2 , net . IDENT_0 . platform . datamodel . IDENT_5 . IDENT_6 . IDENT_7 ) ; final net . IDENT_0 . platform . datamodel . IDENT_8 IDENT_9 = new net . IDENT_0 . platform . datamodel . mock . METHOD_5 ( 0 , IDENT_4 , STRING_0 , STRING_1 ) ; final java . util . Map < java . lang . String , net . IDENT_0 . platform . IDENT_10 . IDENT_11 > IDENT_12 = java . util . Collections . METHOD_6 ( STRING_0 , net . IDENT_0 . platform . IDENT_10 . IDENT_11 . METHOD_7 ( IDENT_9 ) ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( java . util . Map ) { boolean IDENT_13 = false ; for ( final net . IDENT_0 . platform . IDENT_14 . IDENT_15 . IDENT_16 IDENT_17 : IDENT_15 . IDENT_16 . METHOD_9 ( ) ) { if ( IDENT_18 . containsKey ( IDENT_17 . getValue ( ) ) ) { IDENT_13 = true ; break ; } } if ( ! IDENT_13 ) { return true ; } final net . IDENT_0 . platform . IDENT_10 . IDENT_19 IDENT_20 = IDENT_18 . values ( ) . iterator ( ) . next ( ) . METHOD_10 ( ) . METHOD_11 ( ) ; final net . IDENT_0 . platform . util . IDENT_21 now = new net . IDENT_0 . platform . util . METHOD_12 ( IDENT_20 . METHOD_13 ( ) ) ; final net . IDENT_0 . platform . IDENT_10 . IDENT_11 IDENT_22 = IDENT_18 . get ( IDENT_15 . IDENT_16 . METHOD_14 ( now . get ( Calendar . IDENT_23 ) ) . getValue ( ) ) ; if ( IDENT_22 == null ) { return false ; } final java . util . regex . IDENT_24 IDENT_25 = net . IDENT_0 . platform . events . IDENT_26 . IDENT_27 . IDENT_28 . matcher ( IDENT_22 . getValue ( ) ) ; if ( IDENT_25 . matches ( ) ) { final net . IDENT_0 . platform . util . METHOD_12 from = ( ( net . IDENT_0 . platform . util . METHOD_12 ) ( now . METHOD_15 ( ) ) ) ; final net . IDENT_0 . platform . util . METHOD_12 to = ( ( net . IDENT_0 . platform . util . METHOD_12 ) ( now . METHOD_15 ( ) ) ) ; from . METHOD_16 ( java . lang . Integer . valueOf ( IDENT_25 . group ( 1 ) ) ) ; from . METHOD_17 ( java . lang . Integer . valueOf ( IDENT_25 . group ( 2 ) ) ) ; to . METHOD_16 ( java . lang . Integer . valueOf ( IDENT_25 . group ( 3 ) ) ) ; to . METHOD_17 ( java . lang . Integer . valueOf ( IDENT_25 . group ( 4 ) ) ) ; return ( from . METHOD_18 ( now ) ) && ( to . METHOD_19 ( now ) ) ; } return false ; }
org . junit . Assert . assertTrue ( net . IDENT_0 . platform . events . IDENT_26 . IDENT_27 . METHOD_8 ( IDENT_12 ) ) 