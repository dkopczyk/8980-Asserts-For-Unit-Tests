METHOD_0 ( ) { org . apache . IDENT_0 . IDENT_1 . IDENT_2 event = new org . apache . IDENT_0 . IDENT_1 . METHOD_1 ( METHOD_2 ( ) ) ; java . lang . Thread IDENT_3 = new org . apache . IDENT_0 . IDENT_1 . IDENT_4 . METHOD_3 ( event ) ; IDENT_3 . start ( ) ; event . METHOD_4 ( ( 5 * INT_0 ) ) ; try { IDENT_3 . join ( ) ; } catch ( java . lang . IDENT_5 e ) { } "<AssertPlaceHolder>" ; } METHOD_5 ( int ) { if ( IDENT_6 < 0 ) { throw new java . lang . RuntimeException ( STRING_0 ) ; } long IDENT_7 = ( time . METHOD_6 ( ) ) + IDENT_6 ; int IDENT_8 = 0 ; IDENT_9 . METHOD_7 ( ) ; try { while ( ! ( IDENT_10 ) ) { IDENT_8 = java . lang . Math . min ( IDENT_6 , IDENT_11 ) ; if ( org . apache . IDENT_0 . IDENT_1 . METHOD_1 . LOG . METHOD_8 ( ) ) { org . apache . IDENT_0 . IDENT_1 . METHOD_1 . LOG . debug ( ( STRING_1 + IDENT_8 ) ) ; } try { boolean IDENT_12 = IDENT_13 . METHOD_9 ( IDENT_8 , TimeUnit . IDENT_14 ) ; if ( org . apache . IDENT_0 . IDENT_1 . METHOD_1 . LOG . METHOD_8 ( ) ) { org . apache . IDENT_0 . IDENT_1 . METHOD_1 . LOG . debug ( ( STRING_2 + IDENT_12 ) ) ; } } catch ( java . lang . IDENT_5 e ) { throw new java . lang . IllegalStateException ( ( ( STRING_3 + STRING_4 ) + IDENT_8 ) , e ) ; } if ( ( time . METHOD_6 ( ) ) > IDENT_7 ) { return false ; } IDENT_6 = java . lang . Math . max ( 0 , ( IDENT_6 - IDENT_8 ) ) ; IDENT_15 . METHOD_10 ( ) ; } } finally { METHOD_7 . METHOD_11 ( ) ; } return true ; }
org . junit . Assert . assertTrue ( event . METHOD_5 ( 0 ) ) 