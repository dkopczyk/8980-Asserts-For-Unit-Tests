METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . Object > map = new java . util . HashMap ( ) ; boolean result = org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( map ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . util . Map ) { if ( ( map . size ( ) ) == 0 ) { return true ; } java . util . Set < java . lang . String > IDENT_3 = new java . util . HashSet ( ) ; for ( Map . Entry < java . lang . String , java . lang . Object > entry : map . entrySet ( ) ) { java . lang . Object value = entry . getValue ( ) ; if ( java . util . Map . class . METHOD_2 ( value . getClass ( ) ) ) { if ( org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ( ( java . util . Map < java . lang . String , java . lang . Object > ) ( value ) ) ) ) { IDENT_3 . add ( entry . getKey ( ) ) ; } } } if ( ( IDENT_3 . size ( ) ) != 0 ) { if ( ( map . size ( ) ) == ( IDENT_3 . size ( ) ) ) { map . METHOD_3 ( ) ; return true ; } for ( java . lang . String key : IDENT_3 ) { map . remove ( key ) ; return false ; } } return false ; }
org . junit . Assert . assertTrue ( result ) 