METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . sql . IDENT_2 IDENT_3 = new com . IDENT_0 . IDENT_1 . sql . METHOD_1 ( ) ; com . IDENT_0 . IDENT_1 . sql . IDENT_4 sql = IDENT_3 . METHOD_2 ( STRING_0 ) ; java . lang . String expected = STRING_1 ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; java . util . Collection < java . lang . String > IDENT_5 = new java . util . ArrayList ( ) ; int IDENT_6 = 0 ; for ( int i = sql . indexOf ( STRING_2 ) ; i >= 0 ; i = sql . indexOf ( STRING_2 , ( i + 1 ) ) ) { int end = i + 1 ; while ( ( ( ( end < ( sql . length ( ) ) ) && ( ( sql . charAt ( end ) ) != STRING_3 ) ) && ( ( sql . charAt ( end ) ) != STRING_4 ) ) && ( ( sql . charAt ( end ) ) != STRING_5 ) ) { end ++ ; } java . lang . String IDENT_7 = sql . substring ( ( i + 1 ) , end ) ; IDENT_5 . add ( IDENT_7 ) ; sb . append ( sql . substring ( IDENT_6 , i ) ) ; sb . append ( STRING_6 ) ; IDENT_6 = end ; } if ( IDENT_6 < ( sql . length ( ) ) ) { sb . append ( sql . substring ( IDENT_6 , sql . length ( ) ) ) ; } return new com . IDENT_0 . IDENT_1 . sql . METHOD_3 ( sb . toString ( ) , IDENT_5 ) ; }
org . junit . Assert . assertEquals ( expected , sql . sql ) 