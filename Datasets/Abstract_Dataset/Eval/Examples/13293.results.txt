METHOD_0 ( ) { final int IDENT_0 = 10 ; final int IDENT_1 = 1000 ; java . util . concurrent . IDENT_2 executor = new java . util . concurrent . METHOD_1 ( ( 2 * IDENT_0 ) , new com . google . common . util . concurrent . METHOD_2 ( ) . METHOD_3 ( true ) . METHOD_4 ( STRING_0 ) . build ( ) ) ; final java . util . concurrent . IDENT_3 IDENT_4 = new java . util . concurrent . METHOD_5 ( 1 ) ; final java . util . concurrent . atomic . IDENT_5 IDENT_6 = new java . util . concurrent . atomic . METHOD_6 ( 1 ) ; java . util . List < java . util . concurrent . IDENT_7 < java . lang . IDENT_8 > > IDENT_9 = new java . util . IDENT_10 < java . util . concurrent . IDENT_7 < java . lang . IDENT_8 > > ( ) ; for ( int i = 0 ; i < IDENT_0 ; i ++ ) { IDENT_9 . add ( executor . METHOD_7 ( new java . util . concurrent . IDENT_11 < java . lang . IDENT_8 > ( ) { @ org . apache . hadoop . conf . Override public org . apache . hadoop . conf . IDENT_8 call ( ) throws org . apache . hadoop . conf . Exception { IDENT_4 . METHOD_8 ( ) ; int IDENT_12 = IDENT_6 . METHOD_9 ( 1 ) ; for ( int i = 0 ; i < IDENT_1 ; i ++ ) { java . lang . String IDENT_13 = org . apache . hadoop . conf . IDENT_14 . METHOD_10 ( IDENT_12 , i ) ; java . lang . String IDENT_15 = IDENT_13 + STRING_1 ; org . apache . hadoop . conf . Configuration . METHOD_11 ( new org . apache . hadoop . conf . Configuration . IDENT_16 [ ] { new org . apache . hadoop . conf . Configuration . METHOD_12 ( IDENT_13 , IDENT_15 ) } ) ; } return null ; } } , 0 , TimeUnit . IDENT_17 ) ) ; } final java . util . concurrent . atomic . METHOD_6 IDENT_18 = new java . util . concurrent . atomic . METHOD_6 ( 1 ) ; for ( int i = 0 ; i < IDENT_0 ; i ++ ) { IDENT_9 . add ( executor . METHOD_7 ( new java . util . concurrent . IDENT_11 < java . lang . IDENT_8 > ( ) { @ org . apache . hadoop . conf . Override public org . apache . hadoop . conf . IDENT_8 call ( ) throws org . apache . hadoop . conf . Exception { org . apache . hadoop . conf . Configuration conf = new org . apache . hadoop . conf . Configuration ( ) ; IDENT_4 . METHOD_8 ( ) ; int IDENT_12 = IDENT_18 . METHOD_9 ( 1 ) ; for ( int i = 0 ; i < IDENT_1 ; i ++ ) { java . lang . String IDENT_15 = ( org . apache . hadoop . conf . IDENT_14 . METHOD_10 ( IDENT_12 , i ) ) + STRING_1 ; java . lang . String value = ( ( STRING_2 + IDENT_12 ) + STRING_3 ) + i ; conf . set ( IDENT_15 , value ) ; "<AssertPlaceHolder>" ; } return null ; } } , 0 , TimeUnit . IDENT_17 ) ) ; } IDENT_4 . METHOD_13 ( ) ; for ( java . util . concurrent . IDENT_7 < java . lang . IDENT_8 > future : IDENT_9 ) { com . google . common . util . concurrent . IDENT_19 . METHOD_14 ( future ) ; } } get ( java . lang . String ) { java . lang . String [ ] IDENT_20 = METHOD_15 ( org . apache . hadoop . conf . Configuration . IDENT_21 . get ( ) , name ) ; java . lang . String result = null ; for ( java . lang . String n : IDENT_20 ) { result = METHOD_16 ( METHOD_17 ( ) . getProperty ( n ) ) ; } return result ; }
org . junit . Assert . assertEquals ( value , conf . get ( IDENT_15 ) ) 