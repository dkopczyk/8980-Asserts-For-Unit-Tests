METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 p = org . IDENT_0 . IDENT_1 . network . IDENT_3 . METHOD_1 ( ) ; p = p . METHOD_2 ( org . IDENT_0 . IDENT_1 . network . IDENT_3 . METHOD_3 ( ) ) ; p . set ( IDENT_4 . IDENT_5 , new org . IDENT_0 . IDENT_1 . util . METHOD_4 ( INT_0 ) ) ; p . set ( IDENT_4 . IDENT_6 , new int [ ] { INT_1 , INT_1 } ) ; org . IDENT_0 . IDENT_1 . network . IDENT_7 . create ( STRING_0 , p ) . add ( org . IDENT_0 . IDENT_1 . network . IDENT_7 . METHOD_5 ( STRING_1 ) . add ( org . IDENT_0 . IDENT_1 . network . IDENT_7 . METHOD_6 ( STRING_2 , p ) . add ( org . IDENT_0 . IDENT_1 . IDENT_8 . IDENT_9 . builder ( ) . name ( "" ) . build ( ) ) ) . close ( ) ) ; "<AssertPlaceHolder>" ; } get ( int ) { return index == 0 ? IDENT_10 : IDENT_11 ; }
org . junit . Assert . assertTrue ( java . util . Arrays . equals ( new int [ ] { 8 } , ( ( int [ ] ) ( p . get ( IDENT_4 . IDENT_6 ) ) ) ) ) 