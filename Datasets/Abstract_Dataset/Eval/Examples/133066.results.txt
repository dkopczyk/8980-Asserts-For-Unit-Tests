METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 v = IDENT_0 . IDENT_1 . IDENT_3 . METHOD_1 ( 8 ) ; for ( int i = 0 ; i < INT_0 ; i ++ ) { char c = ( ( char ) ( i ) ) ; IDENT_4 . IDENT_5 . IDENT_6 . cc . encode ( c , v , 0 ) ; char IDENT_7 = IDENT_4 . IDENT_5 . IDENT_6 . cc . decode ( v , 0 ) ; "<AssertPlaceHolder>" ; } } decode ( IDENT_0 . IDENT_1 . IDENT_2 , int ) { java . util . ArrayList < T > IDENT_8 = new java . util . ArrayList < T > ( ) ; for ( int i = 0 ; i < ( IDENT_9 ) ; i ++ ) { IDENT_8 . add ( IDENT_10 . decode ( v , ( offset + ( i * ( IDENT_11 ) ) ) ) ) ; } return IDENT_8 ; }
org . junit . Assert . assertEquals ( c , IDENT_7 ) 