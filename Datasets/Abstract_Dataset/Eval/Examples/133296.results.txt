METHOD_0 ( ) { org . nuxeo . ecm . platform . IDENT_0 . io . test . IDENT_1 . METHOD_1 ( STRING_0 , graph ) ; org . nuxeo . ecm . platform . io . api . IDENT_2 adapter = IDENT_3 . METHOD_2 ( STRING_1 ) ; "<AssertPlaceHolder>" ; java . util . List < org . nuxeo . ecm . core . api . IDENT_4 > IDENT_5 = java . util . Arrays . asList ( new org . nuxeo . ecm . core . api . IDENT_4 [ ] { new org . nuxeo . ecm . core . api . METHOD_3 ( org . nuxeo . ecm . platform . IDENT_0 . io . test . IDENT_1 . IDENT_6 ) } ) ; org . nuxeo . ecm . platform . IDENT_0 . io . IDENT_7 IDENT_8 = ( ( org . nuxeo . ecm . platform . IDENT_0 . io . IDENT_7 ) ( adapter . METHOD_4 ( org . nuxeo . ecm . platform . IDENT_0 . io . test . IDENT_1 . IDENT_9 , IDENT_5 ) ) ) ; java . io . ByteArrayOutputStream out = new java . io . ByteArrayOutputStream ( ) ; adapter . METHOD_5 ( out , IDENT_8 ) ; java . io . InputStream actual = new java . io . ByteArrayInputStream ( out . toByteArray ( ) ) ; org . nuxeo . ecm . platform . IDENT_0 . api . IDENT_10 IDENT_11 = org . nuxeo . ecm . platform . IDENT_0 . io . test . IDENT_1 . METHOD_6 ( ) ; IDENT_11 . read ( actual , null , null ) ; org . nuxeo . ecm . platform . IDENT_0 . io . test . IDENT_1 . METHOD_7 ( STRING_2 , IDENT_11 ) ; } METHOD_2 ( java . lang . Class ) { if ( adapter . METHOD_8 ( ) . equals ( org . nuxeo . ecm . platform . IDENT_12 . api . IDENT_13 . class . METHOD_8 ( ) ) ) { return adapter . METHOD_9 ( new org . nuxeo . ecm . platform . IDENT_12 . api . document . METHOD_10 ( ) ) ; } else { if ( ( backend ) != null ) { return adapter . METHOD_9 ( backend ) ; } else { org . nuxeo . ecm . platform . IDENT_12 . service . IDENT_14 . log . error ( ( ( STRING_3 + ( adapter . METHOD_8 ( ) ) ) + STRING_4 ) ) ; return null ; } } }
org . junit . Assert . assertNotNull ( adapter ) 