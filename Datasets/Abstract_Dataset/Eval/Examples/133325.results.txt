METHOD_0 ( ) { METHOD_1 ( ) ; java . lang . String key = METHOD_2 ( ) . stream ( ) . METHOD_3 ( ) . METHOD_4 ( Exception :: new ) ; java . net . URI IDENT_0 = METHOD_5 ( ) . METHOD_6 ( key , null , null ) ; "<AssertPlaceHolder>" ; System . out . println ( java . lang . String . format ( STRING_0 , IDENT_0 ) ) ; } METHOD_6 ( java . lang . String , org . nuxeo . ecm . core . IDENT_1 . IDENT_2 , javax . servlet . http . IDENT_3 ) { java . lang . String key = ( IDENT_4 ) + IDENT_5 ; java . util . Date IDENT_6 = new java . util . Date ( ) ; IDENT_6 . METHOD_7 ( ( ( IDENT_6 . getTime ( ) ) + ( ( IDENT_7 ) * 1000 ) ) ) ; com . amazonaws . services . IDENT_8 . model . IDENT_9 request = new com . amazonaws . services . IDENT_8 . model . METHOD_8 ( IDENT_10 , key , com . amazonaws . IDENT_11 . IDENT_12 ) ; request . METHOD_9 ( STRING_1 , METHOD_10 ( IDENT_1 ) ) ; request . METHOD_9 ( STRING_2 , METHOD_11 ( IDENT_1 , null ) ) ; request . METHOD_12 ( IDENT_6 ) ; java . net . URL url = IDENT_13 . METHOD_13 ( request ) ; try { return url . METHOD_14 ( ) ; } catch ( java . net . IDENT_14 e ) { throw new java . io . IOException ( e ) ; } }
org . junit . Assert . assertNotNull ( IDENT_0 ) 