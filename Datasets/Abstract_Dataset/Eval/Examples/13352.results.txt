METHOD_0 ( ) { org . apache . hadoop . fs . IDENT_0 IDENT_1 = mock ( org . apache . hadoop . fs . IDENT_0 . class ) ; org . apache . hadoop . fs . Path path ; try ( org . apache . hadoop . fs . IDENT_0 fs = new org . apache . hadoop . fs . METHOD_1 ( IDENT_1 ) ) { path = new org . apache . hadoop . fs . Path ( STRING_0 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_1 ) . METHOD_2 ( eq ( path ) ) ; METHOD_3 ( IDENT_1 ) ; fs . close ( ) ; } verify ( IDENT_1 , METHOD_4 ( ) ) . METHOD_2 ( eq ( path ) ) ; verify ( IDENT_1 , METHOD_4 ( ) ) . delete ( any ( org . apache . hadoop . fs . Path . class ) , METHOD_5 ( ) ) ; } METHOD_6 ( org . apache . hadoop . fs . Path ) { if ( ! ( this . util ( ) . exists ( f ) ) ) { return false ; } MOD_0 ( org . apache . hadoop . fs . IDENT_2 . IDENT_3 ) { if ( org . apache . hadoop . fs . IDENT_2 . IDENT_3 . isEmpty ( ) ) { org . apache . hadoop . util . IDENT_4 . get ( ) . METHOD_7 ( org . apache . hadoop . fs . IDENT_2 . IDENT_5 , org . apache . hadoop . fs . IDENT_2 . IDENT_6 ) ; } java . util . Set < org . apache . hadoop . fs . Path > set = org . apache . hadoop . fs . IDENT_2 . IDENT_3 . get ( this ) ; if ( set == null ) { set = new java . util . IDENT_7 < org . apache . hadoop . fs . Path > ( ) ; org . apache . hadoop . fs . IDENT_2 . IDENT_3 . put ( this , set ) ; } set . add ( f ) ; } return true ; }
org . junit . Assert . assertFalse ( fs . METHOD_6 ( path ) ) 