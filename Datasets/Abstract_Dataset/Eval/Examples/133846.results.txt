METHOD_0 ( ) { java . lang . String expected = STRING_0 + STRING_1 ; java . lang . String IDENT_0 = STRING_2 + ( ( ( ( ( STRING_3 + STRING_4 ) + STRING_5 ) + STRING_4 ) + STRING_6 ) + STRING_1 ) ; java . lang . String actual = gov . IDENT_1 . IDENT_2 . util . IDENT_3 . METHOD_1 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { java . util . regex . IDENT_4 IDENT_5 = gov . IDENT_1 . IDENT_2 . util . IDENT_3 . IDENT_6 . matcher ( text ) ; if ( IDENT_5 . find ( ) ) { gov . IDENT_1 . IDENT_2 . model . entity . IDENT_7 IDENT_8 = gov . IDENT_1 . IDENT_2 . model . entity . IDENT_7 . getValue ( IDENT_5 . group ( STRING_7 ) ) ; java . lang . String IDENT_9 = "\n" ; java . lang . String IDENT_10 = IDENT_5 . group ( STRING_8 ) ; if ( IDENT_10 != null ) { IDENT_9 += java . lang . String . format ( STRING_9 , ( IDENT_10 . equalsIgnoreCase ( STRING_10 ) ? IDENT_8 : STRING_11 ) , IDENT_10 . toLowerCase ( ) ) ; } text = IDENT_5 . METHOD_2 ( IDENT_9 ) ; } return text ; }
org . junit . Assert . assertEquals ( expected , actual ) 