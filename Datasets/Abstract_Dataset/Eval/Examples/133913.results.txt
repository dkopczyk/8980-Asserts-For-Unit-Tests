METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; java . util . ArrayList < java . lang . String > IDENT_2 = new java . util . ArrayList < java . lang . String > ( ) { { add ( STRING_1 ) ; add ( STRING_2 ) ; } } ; org . IDENT_3 . IDENT_4 . core . component . IDENT_5 IDENT_6 = org . IDENT_7 . api . mockito . IDENT_8 . METHOD_1 ( new org . IDENT_3 . IDENT_4 . core . component . METHOD_2 ( ) ) ; org . IDENT_7 . api . mockito . IDENT_8 . doReturn ( IDENT_2 ) . when ( IDENT_6 , STRING_3 , IDENT_0 , IDENT_1 ) ; org . IDENT_7 . api . mockito . IDENT_8 . doReturn ( IDENT_6 ) . when ( target , STRING_4 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , java . lang . String ) { if ( ( IDENT_9 == null ) || ( IDENT_1 == null ) ) { return null ; } java . util . ArrayList < java . lang . String > IDENT_10 = IDENT_6 . METHOD_4 ( IDENT_9 , IDENT_1 ) ; if ( ( IDENT_10 . size ( ) ) == 0 ) { return null ; } java . lang . String [ ] IDENT_11 = IDENT_10 . get ( 0 ) . split ( IDENT_12 . IDENT_13 ) ; return IDENT_11 [ 1 ] ; }
org . junit . Assert . assertThat ( target . METHOD_3 ( IDENT_0 , IDENT_1 ) , org . hamcrest . CoreMatchers . is ( STRING_1 ) ) 