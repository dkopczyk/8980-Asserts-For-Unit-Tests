METHOD_0 ( ) { params = new java . util . HashMap < java . lang . String , java . lang . String > ( ) { { put ( STRING_0 , STRING_1 ) ; put ( STRING_2 , STRING_3 ) ; put ( IDENT_0 . IDENT_1 , STRING_4 ) ; put ( IDENT_0 . IDENT_2 , STRING_5 ) ; } } ; target = new org . IDENT_3 . IDENT_4 . core . component . network . flow . query . METHOD_1 ( params ) ; target . parse ( ) ; org . IDENT_3 . IDENT_4 . core . component . network . flow . IDENT_5 . IDENT_0 match = new org . IDENT_3 . IDENT_4 . core . component . network . flow . IDENT_5 . METHOD_2 ( ) ; match . METHOD_3 ( 0 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . IDENT_3 . IDENT_4 . core . component . network . flow . IDENT_6 . IDENT_7 ) { if ( ( target == null ) || ( ! ( target . getType ( ) . equals ( org . IDENT_3 . IDENT_4 . core . component . network . flow . IDENT_5 . IDENT_8 . class . METHOD_5 ( ) ) ) ) ) { return false ; } return true ; }
org . junit . Assert . assertThat ( target . METHOD_4 ( match ) , org . hamcrest . CoreMatchers . is ( false ) ) 