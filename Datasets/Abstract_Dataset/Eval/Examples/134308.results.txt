METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . String > attributes = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; attributes . put ( STRING_0 , STRING_1 ) ; org . IDENT_0 . IDENT_1 msg = new org . IDENT_0 . METHOD_1 ( ) ; java . io . ByteArrayOutputStream out = new java . io . ByteArrayOutputStream ( ) ; org . IDENT_0 . IDENT_2 . IDENT_3 IDENT_4 = msg . METHOD_2 ( out ) ; byte [ ] bytes ; java . io . ByteArrayInputStream in ; org . IDENT_0 . IDENT_5 . IDENT_6 IDENT_7 = null ; try { IDENT_4 . METHOD_3 ( 0 ) ; IDENT_4 . write ( STRING_2 3 ) ; IDENT_4 . write ( STRING_2 5 ) ; IDENT_4 . write ( STRING_3 ) ; IDENT_4 . write ( STRING_2 2 ) ; IDENT_4 . write ( STRING_4 ) ; IDENT_4 . write ( STRING_2 1 ) ; IDENT_4 . write ( STRING_5 ) ; IDENT_4 . write ( STRING_6 ) ; IDENT_4 . write ( STRING_2 6 ) ; IDENT_4 . write ( STRING_7 ) ; IDENT_4 . write ( STRING_2 ) ; IDENT_4 . write ( STRING_8 ) ; IDENT_4 . write ( STRING_9 ) ; IDENT_4 . write ( attributes ) ; IDENT_4 . METHOD_4 ( ) ; bytes = out . toByteArray ( ) ; in = new java . io . ByteArrayInputStream ( bytes ) ; IDENT_7 = msg . METHOD_5 ( in ) ; } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( STRING_2 4 ) ; } try { target . METHOD_6 ( IDENT_7 ) ; } catch ( java . lang . Exception e ) { "<AssertPlaceHolder>" ; return ; } org . junit . Assert . fail ( STRING_2 0 ) ; } METHOD_6 ( org . IDENT_0 . IDENT_5 . IDENT_6 ) { int size = IDENT_7 . METHOD_7 ( ) ; if ( size != ( org . IDENT_8 . IDENT_9 . IDENT_10 . event . IDENT_11 . IDENT_12 ) ) { throw new java . io . IOException ( ) ; } while ( ( size OP_0 ) > 0 ) { java . lang . String field = IDENT_7 . METHOD_8 ( ) ; switch ( field ) { case STRING_10 : action = IDENT_7 . METHOD_8 ( ) ; break ; case STRING_11 : if ( ! ( IDENT_7 . METHOD_9 ( ) ) ) { IDENT_13 = IDENT_7 . read ( this . IDENT_14 ) ; } break ; case STRING_12 : if ( ! ( IDENT_7 . METHOD_9 ( ) ) ) { IDENT_15 = IDENT_7 . read ( this . IDENT_14 ) ; } break ; default : throw new java . io . IOException ( ) ; } } IDENT_7 . METHOD_10 ( ) ; }
org . junit . Assert . assertTrue ( ( e instanceof java . io . IOException ) ) 