METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; java . lang . String IDENT_2 = STRING_2 ; java . lang . String IDENT_3 = STRING_3 ; org . IDENT_4 . IDENT_5 . IDENT_6 . event . IDENT_7 IDENT_8 = new org . IDENT_4 . IDENT_5 . IDENT_6 . event . METHOD_1 ( IDENT_0 ) ; IDENT_8 . METHOD_2 ( IDENT_1 , IDENT_2 ) ; IDENT_8 . METHOD_2 ( IDENT_1 , IDENT_3 ) ; IDENT_9 . METHOD_3 ( IDENT_0 , IDENT_8 ) ; IDENT_0 = STRING_4 ; IDENT_1 = STRING_1 ; IDENT_2 = STRING_2 ; IDENT_3 = STRING_5 ; IDENT_8 = new org . IDENT_4 . IDENT_5 . IDENT_6 . event . METHOD_1 ( IDENT_0 ) ; IDENT_8 . METHOD_2 ( IDENT_1 , IDENT_2 ) ; IDENT_8 . METHOD_2 ( IDENT_1 , IDENT_3 ) ; IDENT_9 . METHOD_3 ( IDENT_0 , IDENT_8 ) ; java . util . List < org . IDENT_4 . IDENT_5 . IDENT_6 . event . METHOD_1 > ret = IDENT_9 . METHOD_4 ( STRING_1 , STRING_2 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String , java . lang . String ) { java . util . Map < java . lang . String , java . util . List < org . IDENT_4 . IDENT_5 . IDENT_6 . event . METHOD_1 > > IDENT_10 = IDENT_11 . get ( IDENT_12 ) ; if ( IDENT_10 == null ) { return null ; } java . util . List < org . IDENT_4 . IDENT_5 . IDENT_6 . event . METHOD_1 > IDENT_13 = IDENT_10 . get ( IDENT_14 ) ; if ( IDENT_13 == null ) { return new java . util . ArrayList < org . IDENT_4 . IDENT_5 . IDENT_6 . event . METHOD_1 > ( ) ; } else { java . util . List < org . IDENT_4 . IDENT_5 . IDENT_6 . event . METHOD_1 > IDENT_15 = new java . util . ArrayList < org . IDENT_4 . IDENT_5 . IDENT_6 . event . METHOD_1 > ( IDENT_13 ) ; return IDENT_15 ; } }
org . junit . Assert . assertThat ( ret . size ( ) , org . hamcrest . CoreMatchers . is ( 2 ) ) 