METHOD_0 ( ) { target = new org . IDENT_0 . IDENT_1 . IDENT_2 . message . IDENT_3 . METHOD_1 ( ) ; final java . lang . String string = STRING_0 ; target . body = string ; "<AssertPlaceHolder>" ; verify ( IDENT_4 , METHOD_2 ( ) ) . METHOD_3 ( target . IDENT_5 ) ; } METHOD_4 ( java . lang . Class ) { if ( ( ( body ) == null ) && ( ( IDENT_5 ) != null ) ) { org . IDENT_6 . IDENT_7 IDENT_6 = null ; try { IDENT_6 = org . IDENT_0 . IDENT_1 . IDENT_2 . message . IDENT_8 . pool . METHOD_5 ( ) ; if ( IDENT_6 == null ) { IDENT_6 = new org . IDENT_6 . METHOD_6 ( ) ; } body = IDENT_6 . convert ( IDENT_5 , clazz ) ; IDENT_5 = null ; } catch ( java . io . IOException e ) { org . IDENT_0 . IDENT_1 . IDENT_2 . message . IDENT_8 . log . error ( STRING_1 , e ) ; } finally { if ( IDENT_6 != null ) { org . IDENT_0 . IDENT_1 . IDENT_2 . message . IDENT_8 . pool . add ( IDENT_6 ) ; } } } return ( ( T ) ( body ) ) ; }
org . junit . Assert . assertThat ( target . METHOD_4 ( java . lang . String . class ) , org . hamcrest . CoreMatchers . is ( string ) ) 