METHOD_0 ( ) { final org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = IDENT_5 . IDENT_6 . METHOD_1 ( ) . METHOD_2 ( ) ; final java . util . Map < java . lang . String , java . lang . String > options = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . METHOD_3 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) { final java . util . Map < java . lang . String , java . lang . String > res = new java . util . IDENT_8 < java . lang . String , java . lang . String > ( ) ; final org . eclipse . IDENT_9 . IDENT_10 . resource . IDENT_11 IDENT_12 = IDENT_4 . METHOD_4 ( ) ; if ( ( METHOD_4 != null ) && ( ( METHOD_4 . METHOD_5 ( ) ) != null ) ) { res . put ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_13 , METHOD_4 . METHOD_5 ( ) . toString ( ) ) ; } if ( ( IDENT_4 . METHOD_6 ( ) ) != null ) { res . put ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_14 , org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . METHOD_7 ( IDENT_4 , org . eclipse . IDENT_9 . common . util . URI . METHOD_8 ( IDENT_4 . METHOD_6 ( ) , false ) ) . toString ( ) ) ; } if ( ( IDENT_4 . METHOD_9 ( ) ) != null ) { res . put ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_15 , org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . METHOD_7 ( IDENT_4 , org . eclipse . IDENT_9 . common . util . URI . METHOD_8 ( IDENT_4 . METHOD_9 ( ) , false ) ) . toString ( ) ) ; } if ( ( IDENT_4 . METHOD_10 ( ) ) != null ) { res . put ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_16 , org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . METHOD_7 ( IDENT_4 , org . eclipse . IDENT_9 . common . util . URI . METHOD_8 ( IDENT_4 . METHOD_10 ( ) , false ) ) . toString ( ) ) ; } for ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_17 IDENT_18 : IDENT_4 . METHOD_3 ( ) ) { res . put ( IDENT_18 . getName ( ) , IDENT_18 . getValue ( ) ) ; } return res ; }
org . junit . Assert . assertEquals ( 0 , options . size ( ) ) 