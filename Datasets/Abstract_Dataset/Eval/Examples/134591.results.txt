METHOD_0 ( ) { javax . servlet . IDENT_0 IDENT_1 = org . easymock . IDENT_2 . EasyMock . METHOD_1 ( javax . servlet . IDENT_0 . class ) ; java . lang . IDENT_3 IDENT_4 = org . easymock . IDENT_2 . EasyMock . METHOD_1 ( com . ocpsoft . IDENT_5 . IDENT_6 . el . resolver . IDENT_3 . class ) ; org . easymock . IDENT_2 . EasyMock . expect ( IDENT_4 . METHOD_2 ( ( ( java . lang . String ) ( org . easymock . IDENT_2 . EasyMock . METHOD_3 ( ) ) ) ) ) . METHOD_4 ( new java . lang . METHOD_5 ( ) ) . METHOD_6 ( ) ; org . easymock . IDENT_2 . EasyMock . replay ( IDENT_4 ) ; com . ocpsoft . IDENT_5 . IDENT_6 . el . resolver . IDENT_7 resolver = new com . ocpsoft . IDENT_5 . IDENT_6 . el . resolver . METHOD_7 ( ) ; boolean IDENT_8 = resolver . init ( IDENT_1 , IDENT_4 ) ; "<AssertPlaceHolder>" ; } init ( javax . servlet . IDENT_0 , java . lang . IDENT_3 ) { IDENT_9 = IDENT_1 . METHOD_8 ( STRING_0 ) ; if ( ( IDENT_9 ) == null ) { if ( com . ocpsoft . IDENT_5 . IDENT_6 . el . resolver . IDENT_10 . log . METHOD_9 ( ) ) { com . ocpsoft . IDENT_5 . IDENT_6 . el . resolver . IDENT_10 . log . debug ( STRING_1 ) ; } return false ; } try { java . lang . Class < ? > IDENT_11 = IDENT_4 . METHOD_2 ( com . ocpsoft . IDENT_5 . IDENT_6 . el . resolver . IDENT_10 . IDENT_12 ) ; IDENT_13 = IDENT_11 . METHOD_10 ( com . ocpsoft . IDENT_5 . IDENT_6 . el . resolver . IDENT_10 . IDENT_14 , java . lang . Class . class ) ; if ( com . ocpsoft . IDENT_5 . IDENT_6 . el . resolver . IDENT_10 . log . METHOD_9 ( ) ) { com . ocpsoft . IDENT_5 . IDENT_6 . el . resolver . IDENT_10 . log . debug ( STRING_2 ) ; } IDENT_15 = com . ocpsoft . IDENT_5 . IDENT_6 . el . resolver . IDENT_10 . METHOD_11 ( IDENT_4 ) ; return true ; } catch ( java . lang . METHOD_5 e ) { if ( com . ocpsoft . IDENT_5 . IDENT_6 . el . resolver . IDENT_10 . log . METHOD_9 ( ) ) { com . ocpsoft . IDENT_5 . IDENT_6 . el . resolver . IDENT_10 . log . debug ( STRING_3 ) ; } } catch ( java . lang . IDENT_16 e ) { com . ocpsoft . IDENT_5 . IDENT_6 . el . resolver . IDENT_10 . log . warn ( STRING_4 , e ) ; } catch ( java . lang . IDENT_17 e ) { com . ocpsoft . IDENT_5 . IDENT_6 . el . resolver . IDENT_10 . log . warn ( STRING_5 , e ) ; } return false ; }
org . junit . Assert . assertFalse ( IDENT_8 ) 