METHOD_0 ( ) { final org . IDENT_0 . plugins . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new org . IDENT_0 . plugins . IDENT_1 . IDENT_2 . METHOD_1 ( null , null ) ; final java . util . Collection < org . IDENT_0 . api . rules . IDENT_5 > IDENT_2 = IDENT_4 . METHOD_2 ( new org . apache . tools . IDENT_6 . filters . METHOD_3 ( "" ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . io . InputStream ) { final java . util . Collection < org . IDENT_0 . api . rules . IDENT_5 > IDENT_2 = new java . util . ArrayList < org . IDENT_0 . api . rules . IDENT_5 > ( ) ; try { final org . IDENT_0 . api . utils . IDENT_7 parser = new org . IDENT_0 . api . utils . METHOD_4 ( new org . IDENT_0 . plugins . IDENT_1 . IDENT_2 . METHOD_5 ( IDENT_2 , project , context ) ) ; parser . parse ( IDENT_8 ) ; org . IDENT_9 . IDENT_10 . METHOD_6 ( getClass ( ) ) . error ( STRING_0 , IDENT_2 . size ( ) ) ; } catch ( final javax . xml . stream . IDENT_11 e ) { org . IDENT_9 . IDENT_10 . METHOD_6 ( getClass ( ) ) . error ( STRING_1 , e ) ; } return IDENT_2 ; }
org . junit . Assert . assertTrue ( IDENT_2 . isEmpty ( ) ) 