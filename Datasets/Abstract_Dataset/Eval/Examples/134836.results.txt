METHOD_0 ( ) { final java . lang . String input = STRING_0 ; "<AssertPlaceHolder>" ; } parse ( java . lang . Class , java . lang . String ) { if ( IDENT_0 . METHOD_1 ( ) ) { final java . util . Map < java . lang . Class < ? > , java . util . Map < java . lang . String , java . lang . String > > IDENT_1 = microsoft . IDENT_2 . IDENT_3 . data . core . IDENT_4 . IDENT_5 . METHOD_2 ( ) ; java . lang . String val = value ; final java . util . Map < java . lang . String , java . lang . String > IDENT_6 = IDENT_1 . get ( IDENT_0 ) ; if ( IDENT_6 != null ) { final java . lang . String IDENT_7 = IDENT_6 . get ( value ) ; if ( IDENT_7 != null ) { val = IDENT_7 ; } } for ( T o : IDENT_0 . METHOD_3 ( ) ) { if ( o . toString ( ) . equals ( val ) ) { return o ; } } return null ; } else if ( microsoft . IDENT_2 . IDENT_3 . data . core . IDENT_8 . class . METHOD_4 ( IDENT_0 ) ) { if ( microsoft . IDENT_2 . IDENT_3 . data . core . Double . class . METHOD_4 ( IDENT_0 ) ) { return ( ( T ) ( ( java . lang . Double ) ( java . lang . Double . METHOD_5 ( value ) ) ) ) ; } else if ( microsoft . IDENT_2 . IDENT_3 . data . core . Integer . class . METHOD_4 ( IDENT_0 ) ) { return ( ( T ) ( ( java . lang . Integer ) ( java . lang . Integer . METHOD_6 ( value ) ) ) ) ; } else if ( microsoft . IDENT_2 . IDENT_3 . data . core . Long . class . METHOD_4 ( IDENT_0 ) ) { return ( ( T ) ( ( java . lang . Long ) ( java . lang . Long . METHOD_7 ( value ) ) ) ) ; } else if ( microsoft . IDENT_2 . IDENT_3 . data . core . IDENT_9 . class . METHOD_4 ( IDENT_0 ) ) { return ( ( T ) ( ( java . lang . IDENT_9 ) ( java . lang . IDENT_9 . METHOD_8 ( value ) ) ) ) ; } else if ( microsoft . IDENT_2 . IDENT_3 . data . core . IDENT_10 . class . METHOD_4 ( IDENT_0 ) ) { return ( ( T ) ( ( java . lang . IDENT_10 ) ( java . lang . IDENT_10 . METHOD_9 ( value ) ) ) ) ; } else if ( microsoft . IDENT_2 . IDENT_3 . data . core . IDENT_11 . class . METHOD_4 ( IDENT_0 ) ) { return ( ( T ) ( ( java . lang . IDENT_11 ) ( java . lang . IDENT_11 . METHOD_10 ( value ) ) ) ) ; } else if ( java . math . BigInteger . class . METHOD_4 ( IDENT_0 ) ) { return ( ( T ) ( new java . math . BigInteger ( value ) ) ) ; } else if ( java . math . BigDecimal . class . METHOD_4 ( IDENT_0 ) ) { return ( ( T ) ( new java . math . BigDecimal ( value ) ) ) ; } } else if ( java . util . Date . class . METHOD_4 ( IDENT_0 ) ) { java . text . IDENT_12 IDENT_13 = microsoft . IDENT_2 . IDENT_3 . data . core . IDENT_4 . METHOD_11 ( microsoft . IDENT_2 . IDENT_3 . data . core . IDENT_4 . IDENT_14 ) ; return ( ( T ) ( IDENT_13 . parse ( value ) ) ) ; } else if ( microsoft . IDENT_2 . IDENT_3 . data . core . Boolean . class . METHOD_4 ( IDENT_0 ) ) { return ( ( T ) ( ( java . lang . Boolean ) ( java . lang . Boolean . METHOD_12 ( value ) ) ) ) ; } else if ( java . lang . String . class . METHOD_4 ( IDENT_0 ) ) { return ( ( T ) ( value ) ) ; } return null ; }
org . junit . Assert . assertEquals ( input , microsoft . IDENT_2 . IDENT_3 . data . core . IDENT_4 . parse ( input . getClass ( ) , input ) ) 