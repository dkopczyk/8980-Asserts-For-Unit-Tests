METHOD_0 ( ) { net . IDENT_0 . IDENT_1 . map . IDENT_2 IDENT_3 = create ( 20 , 1.0 ) ; net . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 key = new net . IDENT_0 . IDENT_1 . IDENT_4 . METHOD_1 ( 10 ) ; for ( int i = 1 ; i <= 20 ; i ++ ) { key . METHOD_2 ( ( ( net . IDENT_0 . IDENT_1 . map . IDENT_6 . IDENT_7 ) + i ) . METHOD_3 ( ) ) ; IDENT_3 . METHOD_4 ( key , net . IDENT_0 . IDENT_1 . map . IDENT_6 . IDENT_8 ) ; "<AssertPlaceHolder>" ; key . METHOD_5 ( ) ; } } size ( ) { return IDENT_9 ; }
org . junit . Assert . assertEquals ( i , IDENT_3 . size ( ) ) 