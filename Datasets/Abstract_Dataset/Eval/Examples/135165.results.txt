METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . model . IDENT_2 simple = METHOD_1 ( STRING_0 ) ; java . util . Map < org . IDENT_0 . IDENT_1 . model . IDENT_3 , java . lang . String > expected = new java . util . HashMap ( ) ; expected . put ( org . IDENT_0 . IDENT_1 . model . IDENT_3 . create ( ( ( base ) + STRING_1 ) ) , STRING_2 ) ; java . util . Map < org . IDENT_0 . IDENT_1 . model . IDENT_3 , java . lang . String > actual = org . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_2 ( simple ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . IDENT_4 . IDENT_5 . IDENT_2 ) { org . IDENT_4 . IDENT_5 . IDENT_6 . logger . info ( ( STRING_3 + ( IDENT_7 . METHOD_3 ( ) ) ) ) ; org . IDENT_4 . IDENT_5 . Map < org . IDENT_4 . IDENT_5 . IDENT_3 , java . lang . String > results = new org . IDENT_4 . IDENT_5 . HashMap ( ) ; org . IDENT_4 . IDENT_5 . IDENT_8 manager = IDENT_7 . METHOD_4 ( ) ; org . IDENT_4 . IDENT_5 . IDENT_9 IDENT_10 = manager . METHOD_5 ( ) . METHOD_6 ( ) ; org . IDENT_4 . IDENT_5 . Set < org . IDENT_4 . IDENT_5 . IDENT_2 > IDENT_11 = new org . IDENT_4 . IDENT_5 . HashSet ( ) ; IDENT_11 . add ( IDENT_7 ) ; org . IDENT_0 . IDENT_1 . util . IDENT_12 IDENT_13 = new org . IDENT_0 . IDENT_1 . util . METHOD_7 ( IDENT_11 ) ; org . IDENT_4 . IDENT_5 . IDENT_6 . logger . info ( STRING_4 ) ; for ( org . IDENT_4 . IDENT_5 . IDENT_14 entity : IDENT_13 . METHOD_8 ( ) ) { java . lang . String value = org . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_9 ( IDENT_7 , IDENT_10 , entity . METHOD_10 ( ) ) ; if ( value != null ) { results . put ( entity . METHOD_10 ( ) , value ) ; } } org . IDENT_4 . IDENT_5 . IDENT_6 . logger . info ( ( STRING_5 + ( results . size ( ) ) ) ) ; return results ; }
org . junit . Assert . assertEquals ( expected , actual ) 