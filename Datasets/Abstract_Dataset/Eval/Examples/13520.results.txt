METHOD_0 ( ) { java . lang . String IDENT_0 = ( java . lang . System . getProperty ( STRING_0 ) ) + STRING_1 ; org . apache . hadoop . security . IDENT_1 IDENT_2 = org . apache . hadoop . security . IDENT_1 . METHOD_1 ( STRING_2 , IDENT_0 ) ; java . util . Set < javax . security . auth . IDENT_3 . IDENT_4 > IDENT_5 = IDENT_2 . METHOD_2 ( ) . METHOD_3 ( javax . security . auth . IDENT_3 . IDENT_4 . class ) ; if ( IDENT_5 . isEmpty ( ) ) { org . junit . Assert . fail ( STRING_3 ) ; } else { org . apache . hadoop . security . IDENT_1 IDENT_6 = org . apache . hadoop . security . IDENT_1 . METHOD_4 ( IDENT_2 . METHOD_2 ( ) ) ; if ( IDENT_6 != null ) { IDENT_6 . METHOD_5 ( new java . security . IDENT_7 < java . lang . Object > ( ) { @ org . apache . hadoop . security . Override public java . lang . Object run ( ) { try { org . apache . hadoop . security . IDENT_1 IDENT_8 = org . apache . hadoop . security . IDENT_1 . METHOD_6 ( ) ; java . lang . String IDENT_9 = IDENT_8 . METHOD_7 ( ) ; "<AssertPlaceHolder>" ; System . out . println ( ( STRING_4 + IDENT_9 ) ) ; } catch ( java . io . IOException e ) { e . printStackTrace ( ) ; } return null ; } } ) ; } } } METHOD_7 ( ) { return java . lang . System . getProperty ( STRING_5 ) ; }
org . junit . Assert . assertEquals ( IDENT_9 , STRING_2 ) 