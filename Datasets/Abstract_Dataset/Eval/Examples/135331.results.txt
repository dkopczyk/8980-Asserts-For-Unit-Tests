METHOD_0 ( ) { long value = INT_0 ; short IDENT_0 = 5 ; java . math . BigDecimal expected = java . math . BigDecimal . valueOf ( value , IDENT_0 ) ; org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 id = new org . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( org . IDENT_1 . IDENT_2 . common . IDENT_5 . IDENT_6 , IDENT_7 . IDENT_8 . getValue ( ) ) ; org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_9 IDENT_10 = new org . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_2 ( id , METHOD_3 ( value , IDENT_0 ) ) ; org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_11 IDENT_12 = new org . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_4 ( IDENT_10 ) ; byte [ ] IDENT_13 = METHOD_5 ( IDENT_12 ) ; org . IDENT_1 . IDENT_2 . IDENT_14 . IDENT_15 . IDENT_16 IDENT_17 = new org . IDENT_1 . IDENT_2 . IDENT_14 . IDENT_15 . METHOD_6 ( IDENT_13 ) ; IDENT_17 . METHOD_7 ( org . IDENT_1 . IDENT_2 . IDENT_14 . IDENT_18 . METHOD_8 ( ) ) ; org . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_4 v = IDENT_17 . get ( null , org . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_4 . class ) ; java . math . BigDecimal actual = ( ( java . math . BigDecimal ) ( v . getValue ( ) ) ) ; "<AssertPlaceHolder>" ; } getValue ( ) { return METHOD_9 ( ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 