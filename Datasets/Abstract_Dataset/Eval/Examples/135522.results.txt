METHOD_0 ( ) { final java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { "" , STRING_0 1 , STRING_0 4 , STRING_1 , STRING_0 6 , STRING_0 2 , STRING_2 , STRING_0 , STRING_0 5 , STRING_3 , STRING_4 , STRING_0 0 , STRING_0 3 } ; for ( java . lang . String IDENT_1 : IDENT_0 ) { try { org . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( IDENT_1 ) ; } catch ( java . lang . IllegalArgumentException IDENT_5 ) { } } final java . lang . String [ ] IDENT_6 = new java . lang . String [ ] { STRING_5 , STRING_6 , STRING_0 8 } ; final org . IDENT_2 . IDENT_3 . IDENT_4 [ ] IDENT_7 = new org . IDENT_2 . IDENT_3 . IDENT_4 [ ] { new org . IDENT_2 . IDENT_3 . METHOD_2 ( "" , STRING_5 ) , new org . IDENT_2 . IDENT_3 . METHOD_2 ( "" , STRING_7 ) , new org . IDENT_2 . IDENT_3 . METHOD_2 ( STRING_8 , STRING_0 7 ) } ; for ( int i = 0 ; i < ( IDENT_6 . length ) ; i ++ ) { "<AssertPlaceHolder>" ; } } METHOD_1 ( java . lang . String ) { return org . IDENT_2 . IDENT_3 . METHOD_2 . METHOD_1 ( IDENT_8 , null ) ; }
org . junit . Assert . assertEquals ( IDENT_7 [ i ] , org . IDENT_2 . IDENT_3 . METHOD_2 . METHOD_1 ( IDENT_6 [ i ] ) ) 