METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; IDENT_4 . METHOD_2 ( IDENT_5 ) ; IDENT_4 . METHOD_3 ( org . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_7 ) ; "<AssertPlaceHolder>" ; } select ( org . IDENT_0 . IDENT_1 . IDENT_8 , boolean ) { java . util . Set < org . IDENT_0 . IDENT_1 . IDENT_9 > result = new java . util . HashSet < org . IDENT_0 . IDENT_1 . IDENT_9 > ( ) ; boolean IDENT_10 = false ; for ( org . IDENT_0 . IDENT_1 . IDENT_9 t : IDENT_11 . METHOD_4 ( ) ) { if ( ( ( t . METHOD_5 ( ) ) && ( ! IDENT_10 ) ) && ( ( ( IDENT_12 ) == null ) || ( IDENT_12 . equals ( t . METHOD_6 ( ) ) ) ) ) { result . add ( t ) ; IDENT_10 = true ; } } return result ; }
org . junit . Assert . assertEquals ( 2 , IDENT_4 . select ( IDENT_11 , false ) . size ( ) ) 