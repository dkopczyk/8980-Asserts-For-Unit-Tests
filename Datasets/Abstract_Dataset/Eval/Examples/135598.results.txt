METHOD_0 ( ) { org . IDENT_0 . index . service . resources . list . query . IDENT_1 query = METHOD_1 ( new org . IDENT_0 . index . service . resources . list . query . METHOD_2 ( STRING_0 , STRING_1 ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . IDENT_0 . index . service . resources . list . api . IDENT_2 ) { if ( query == null ) { return true ; } java . util . List < org . IDENT_0 . index . service . resources . list . api . IDENT_3 < ? > > filters = query . METHOD_4 ( ) ; for ( org . IDENT_0 . index . service . resources . list . api . IDENT_3 < ? > IDENT_4 : filters ) { java . lang . String IDENT_5 = IDENT_4 . getName ( ) ; java . lang . Object value = IDENT_4 . getValue ( ) . get ( ) ; if ( ! ( value instanceof java . lang . String ) ) { return false ; } java . lang . String IDENT_6 = ( ( java . lang . String ) ( value ) ) ; if ( IDENT_5 . equals ( IDENT_3 . IDENT_7 ) ) { return ( METHOD_5 ( org . IDENT_0 . index . service . resources . list . api . IDENT_8 . IDENT_9 , IDENT_6 ) ) || ( METHOD_5 ( org . IDENT_0 . index . service . resources . list . api . IDENT_8 . IDENT_10 , IDENT_6 ) ) ; } if ( ! ( METHOD_5 ( IDENT_5 , IDENT_6 ) ) ) { return false ; } } return true ; }
org . junit . Assert . assertTrue ( service . METHOD_3 ( query ) ) 