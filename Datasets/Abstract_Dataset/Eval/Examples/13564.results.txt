METHOD_0 ( ) { java . io . File f = METHOD_1 ( IDENT_0 . METHOD_2 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { if ( IDENT_1 == null ) { throw new java . io . METHOD_3 ( org . apache . hadoop . util . IDENT_2 . IDENT_3 ) ; } while ( IDENT_1 . startsWith ( STRING_0 ) ) { IDENT_1 = IDENT_1 . substring ( 1 ) ; } while ( IDENT_1 . METHOD_4 ( STRING_0 ) ) { IDENT_1 = IDENT_1 . substring ( 0 , ( ( IDENT_1 . length ( ) ) - 1 ) ) ; } if ( IDENT_1 . isEmpty ( ) ) { throw new java . io . METHOD_3 ( org . apache . hadoop . util . IDENT_2 . IDENT_4 ) ; } java . io . File IDENT_5 = new java . io . File ( IDENT_1 ) ; if ( ! ( IDENT_5 . METHOD_5 ( ) ) ) { throw new java . io . METHOD_3 ( ( ( ( STRING_1 + IDENT_5 ) + " " ) + ( org . apache . hadoop . util . IDENT_2 . IDENT_6 ) ) ) ; } if ( ! ( IDENT_5 . exists ( ) ) ) { throw new java . io . METHOD_3 ( ( ( ( STRING_1 + IDENT_5 ) + " " ) + ( org . apache . hadoop . util . IDENT_2 . IDENT_7 ) ) ) ; } if ( ! ( IDENT_5 . METHOD_6 ( ) ) ) { throw new java . io . METHOD_3 ( ( ( ( STRING_1 + IDENT_5 ) + " " ) + ( org . apache . hadoop . util . IDENT_2 . IDENT_8 ) ) ) ; } return IDENT_5 ; }
org . junit . Assert . assertEquals ( IDENT_0 , f ) 