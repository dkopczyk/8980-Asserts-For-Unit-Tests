METHOD_0 ( ) { int size = 1000 ; final java . util . List < org . IDENT_0 . IDENT_1 . models . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 > IDENT_6 = new java . util . ArrayList ( ) ; org . IDENT_0 . commons . io . IDENT_7 < org . IDENT_0 . IDENT_1 . models . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 > IDENT_8 = new org . IDENT_0 . commons . io . IDENT_7 < org . IDENT_0 . IDENT_1 . models . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 > ( ) { @ org . IDENT_0 . IDENT_9 . storage . hadoop . IDENT_2 . IDENT_10 . Override public boolean write ( java . util . List < org . IDENT_0 . IDENT_1 . models . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 > batch ) { return IDENT_6 . addAll ( batch ) ; } @ org . IDENT_0 . IDENT_9 . storage . hadoop . IDENT_2 . IDENT_10 . Override public boolean write ( org . IDENT_0 . IDENT_1 . models . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 IDENT_11 ) { return IDENT_6 . add ( IDENT_11 ) ; } } ; long IDENT_12 = java . lang . System . currentTimeMillis ( ) ; for ( int i = 0 ; i < 10 ; i ++ ) { org . IDENT_0 . commons . run . IDENT_13 < org . IDENT_0 . IDENT_1 . models . IDENT_2 . IDENT_14 , org . IDENT_0 . IDENT_1 . models . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 > IDENT_15 = METHOD_1 ( size , IDENT_8 ) ; IDENT_15 . run ( ) ; } "<AssertPlaceHolder>" ; System . out . println ( ( ( java . lang . System . currentTimeMillis ( ) ) - IDENT_12 ) ) ; } valueOf ( java . lang . String ) { return org . IDENT_0 . IDENT_9 . storage . core . IDENT_2 . IDENT_16 . IDENT_17 . IDENT_18 . get ( param ) ; }
org . junit . Assert . assertEquals ( java . lang . Integer . valueOf ( ( 2 * 10 ) ) , java . lang . Integer . valueOf ( IDENT_6 . size ( ) ) ) 