METHOD_0 ( ) { IDENT_0 . METHOD_1 ( ) . put ( IDENT_1 . IDENT_2 . IDENT_3 . key ( ) , STRING_0 3 ) ; IDENT_0 . METHOD_1 ( ) . put ( IDENT_1 . IDENT_2 . IDENT_4 . key ( ) , IDENT_1 . IDENT_5 . IDENT_6 ) ; IDENT_7 . METHOD_2 ( IDENT_0 , null ) ; java . util . List < org . apache . commons . lang3 . tuple . IDENT_8 < java . lang . Integer , java . util . List < java . lang . String > > > IDENT_9 = new java . util . ArrayList ( ) ; java . util . List < org . apache . commons . lang3 . tuple . IDENT_8 < java . lang . String , org . apache . phoenix . schema . types . IDENT_10 > > IDENT_11 = new java . util . ArrayList ( ) ; IDENT_9 . add ( org . apache . commons . lang3 . tuple . IDENT_8 . of ( 1 , METHOD_3 ( STRING_1 , STRING_2 , STRING_3 8 ) ) ) ; IDENT_9 . add ( org . apache . commons . lang3 . tuple . IDENT_8 . of ( 2 , METHOD_3 ( STRING_4 , STRING_3 1 , STRING_3 3 ) ) ) ; IDENT_9 . add ( org . apache . commons . lang3 . tuple . IDENT_8 . of ( 3 , METHOD_3 ( STRING_0 5 , STRING_0 7 , STRING_0 0 ) ) ) ; IDENT_9 . add ( org . apache . commons . lang3 . tuple . IDENT_8 . of ( 5 , METHOD_3 ( STRING_0 5 , STRING_5 , STRING_5 ) ) ) ; IDENT_9 . add ( org . apache . commons . lang3 . tuple . IDENT_8 . of ( 6 , METHOD_3 ( STRING_5 , STRING_5 , STRING_5 ) ) ) ; org . IDENT_12 . IDENT_13 . models . IDENT_14 . IDENT_15 s = converter . convert ( IDENT_9 , IDENT_11 , new org . IDENT_12 . IDENT_13 . models . IDENT_14 . METHOD_4 ( STRING_6 ) , 1 ) ; org . IDENT_12 . IDENT_13 . models . IDENT_14 . IDENT_15 expected = new org . IDENT_12 . IDENT_13 . models . IDENT_14 . METHOD_5 ( STRING_3 6 , java . util . Collections . emptyList ( ) , METHOD_3 ( STRING_3 2 , STRING_0 6 , STRING_0 1 ) ) . METHOD_6 ( STRING_0 2 , METHOD_3 ( STRING_1 , STRING_2 , STRING_3 8 ) ) . METHOD_6 ( STRING_3 4 , METHOD_3 ( STRING_4 , STRING_3 1 , STRING_3 3 ) ) . METHOD_6 ( STRING_3 , METHOD_3 ( STRING_0 5 , STRING_0 7 , STRING_0 0 ) ) . METHOD_6 ( STRING_3 9 , METHOD_3 ( STRING_1 , STRING_5 , STRING_5 ) ) . METHOD_6 ( STRING_7 , METHOD_3 ( STRING_0 5 , STRING_5 , STRING_5 ) ) . METHOD_6 ( STRING_3 5 , METHOD_3 ( STRING_5 , STRING_5 , STRING_5 ) ) ; "<AssertPlaceHolder>" ; } toString ( ) { final java . lang . StringBuilder sb = new java . lang . StringBuilder ( STRING_8 ) ; sb . append ( STRING_9 ) . append ( IDENT_16 ) ; sb . append ( STRING_10 ) . append ( database ) . append ( STRING_11 ) ; sb . append ( STRING_12 ) . append ( user ) . append ( STRING_11 ) ; sb . append ( STRING_13 ) . append ( options ) ; sb . append ( STRING_14 ) ; return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( s . toString ( ) , expected , s ) 