METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = org . mockito . Mockito . mock ( com . IDENT_0 . IDENT_1 . IDENT_2 . class ) ; org . mockito . Mockito . METHOD_1 ( new java . lang . RuntimeException ( STRING_0 ) ) . METHOD_1 ( new com . IDENT_0 . IDENT_1 . METHOD_2 ( STRING_1 ) ) . METHOD_3 ( ) . when ( IDENT_3 ) . METHOD_4 ( ) ; com . IDENT_0 . IDENT_1 . IDENT_4 IDENT_5 = new com . IDENT_0 . IDENT_1 . METHOD_5 ( IDENT_3 ) ; try { IDENT_5 . METHOD_4 ( ) ; } catch ( com . IDENT_0 . IDENT_1 . METHOD_2 ex ) { "<AssertPlaceHolder>" ; org . mockito . Mockito . verify ( IDENT_3 , org . mockito . Mockito . times ( 2 ) ) . METHOD_4 ( ) ; } } equals ( java . lang . Object ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ( getClass ( ) ) != ( obj . getClass ( ) ) ) { return false ; } com . IDENT_0 . IDENT_1 . IDENT_6 other = ( ( com . IDENT_0 . IDENT_1 . IDENT_6 ) ( obj ) ) ; if ( ( this . IDENT_7 ) == null ) { if ( ( other . IDENT_7 ) != null ) return false ; } else { if ( ( this . IDENT_7 . contains ( STRING_2 ) ) && ( other . IDENT_7 . contains ( STRING_2 ) ) ) { return new com . IDENT_0 . IDENT_1 . METHOD_6 ( "" , this . IDENT_7 . substring ( 0 , IDENT_7 . indexOf ( STRING_2 ) ) ) . equals ( new com . IDENT_0 . IDENT_1 . METHOD_6 ( "" , other . IDENT_7 . substring ( 0 , other . IDENT_7 . indexOf ( STRING_2 ) ) ) ) ; } else if ( this . IDENT_7 . contains ( STRING_2 ) ) { return new com . IDENT_0 . IDENT_1 . METHOD_6 ( "" , this . IDENT_7 . substring ( 0 , IDENT_7 . indexOf ( STRING_2 ) ) ) . equals ( new com . IDENT_0 . IDENT_1 . METHOD_6 ( "" , other . IDENT_7 ) ) ; } else if ( other . IDENT_7 . contains ( STRING_2 ) ) { return new com . IDENT_0 . IDENT_1 . METHOD_6 ( "" , this . IDENT_7 ) . equals ( new com . IDENT_0 . IDENT_1 . METHOD_6 ( "" , other . IDENT_7 . substring ( 0 , other . IDENT_7 . indexOf ( STRING_2 ) ) ) ) ; } if ( ( this . IDENT_7 . METHOD_7 ( "/" ) ) && ( other . IDENT_7 . METHOD_7 ( "/" ) ) ) { return this . IDENT_7 . substring ( 0 , ( ( this . IDENT_7 . length ( ) ) - 1 ) ) . equals ( other . IDENT_7 . substring ( 0 , ( ( other . IDENT_7 . length ( ) ) - 1 ) ) ) ; } else if ( this . IDENT_7 . METHOD_7 ( "/" ) ) { return this . IDENT_7 . substring ( 0 , ( ( IDENT_7 . length ( ) ) - 1 ) ) . equals ( other . IDENT_7 ) ; } else if ( other . IDENT_7 . METHOD_7 ( "/" ) ) { return this . IDENT_7 . equals ( other . IDENT_7 . substring ( 0 , ( ( other . IDENT_7 . length ( ) ) - 1 ) ) ) ; } } return this . IDENT_7 . equals ( other . IDENT_7 ) ; }
org . junit . Assert . assertTrue ( ex . getMessage ( ) . equals ( STRING_1 ) ) 