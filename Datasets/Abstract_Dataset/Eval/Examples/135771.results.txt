METHOD_0 ( ) { test . policy . IDENT_0 host = METHOD_1 ( ) ; com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 factory = new com . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_2 ( ) ; com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_5 IDENT_3 = factory . METHOD_3 ( host ) ; test . policy . IDENT_6 IDENT_7 = IDENT_3 . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; for ( int i = 0 ; i < INT_0 ; i ++ ) { test . policy . IDENT_8 IDENT_9 = IDENT_7 . METHOD_5 ( i ) ; log . debug ( STRING_0 , i , IDENT_9 . getValue ( ) . toString ( ) ) ; } } METHOD_4 ( ) { try { if ( vmware . METHOD_6 ( IDENT_10 ) ) { com . vmware . IDENT_11 . IDENT_12 report = vmware . METHOD_7 ( IDENT_13 ) ; log . debug ( STRING_1 , report ) ; if ( vmware . METHOD_8 ( IDENT_14 ) ) { IDENT_7 = com . IDENT_1 . IDENT_2 . IDENT_3 . vmware . IDENT_15 . METHOD_9 ( report ) ; } else { } } else if ( IDENT_10 . contains ( STRING_2 ) ) { com . vmware . IDENT_11 . IDENT_16 IDENT_17 = ( ( com . vmware . IDENT_11 . IDENT_16 ) ( vmware . METHOD_10 ( IDENT_13 . type , IDENT_18 , STRING_3 ) ) ) ; if ( IDENT_17 == null ) { throw new java . lang . IllegalArgumentException ( STRING_3 3 ) ; } java . util . List < com . vmware . IDENT_11 . IDENT_19 > IDENT_20 = java . util . Arrays . asList ( IDENT_17 . METHOD_11 ( ) ) ; log . debug ( STRING_4 ) ; IDENT_7 = com . IDENT_1 . IDENT_2 . IDENT_3 . vmware . IDENT_21 . METHOD_9 ( IDENT_20 ) ; } else { throw new java . lang . METHOD_12 ( STRING_5 ) ; } } catch ( java . lang . Exception e ) { log . warn ( ( STRING_3 1 + ( e . toString ( ) ) ) , e ) ; boolean IDENT_22 = false ; try { if ( METHOD_13 ( ) ) { METHOD_13 = true ; } } catch ( java . lang . Exception IDENT_23 ) { throw new java . io . IOException ( ( ( STRING_3 0 + ( IDENT_18 ) ) + STRING_6 ) , IDENT_23 ) ; } throw new java . io . IOException ( ( ( ( ( ( STRING_3 0 + ( IDENT_18 ) ) + STRING_3 2 ) + ( METHOD_13 ? STRING_7 : STRING_8 ) ) + STRING_3 2 ) + ( e . toString ( ) ) ) , e ) ; } return IDENT_7 ; }
org . junit . Assert . assertNotNull ( IDENT_7 ) 