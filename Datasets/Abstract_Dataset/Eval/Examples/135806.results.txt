METHOD_0 ( ) { System . out . println ( STRING_0 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . business . IDENT_3 instance = new com . IDENT_0 . IDENT_1 . IDENT_2 . business . METHOD_1 ( ) ; java . lang . String expResult = STRING_1 ; java . lang . String result = instance . METHOD_2 ( METHOD_3 ( ) , null ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( com . IDENT_0 . IDENT_1 . IDENT_2 . business . IDENT_4 , java . lang . String ) { java . lang . String IDENT_5 = null ; try { com . IDENT_0 . IDENT_1 . IDENT_2 . business . METHOD_1 . log . debug ( STRING_2 , IDENT_6 . METHOD_4 ( ) ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . business . METHOD_1 . log . debug ( STRING_3 6 , IDENT_6 . getName ( ) ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . business . METHOD_1 . log . debug ( STRING_3 5 , IDENT_6 . METHOD_5 ( ) ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . business . METHOD_1 . log . debug ( STRING_4 , IDENT_6 . METHOD_6 ( ) ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . business . METHOD_1 . log . debug ( STRING_5 , IDENT_6 . METHOD_7 ( ) ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . business . METHOD_1 . log . debug ( STRING_6 , IDENT_6 . METHOD_8 ( ) ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . business . METHOD_1 . log . debug ( STRING_7 , IDENT_6 . METHOD_9 ( ) ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . business . METHOD_1 . log . debug ( STRING_8 , IDENT_6 . METHOD_10 ( ) ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . business . METHOD_1 . log . debug ( STRING_3 , IDENT_6 . METHOD_11 ( ) ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . business . IDENT_7 IDENT_8 = METHOD_12 ( IDENT_6 . getName ( ) , IDENT_6 . METHOD_5 ( ) , IDENT_6 . METHOD_6 ( ) , IDENT_6 . METHOD_7 ( ) , IDENT_6 . METHOD_8 ( ) ) ; if ( IDENT_8 != null ) { throw new com . IDENT_0 . IDENT_9 . as . common . METHOD_13 ( com . IDENT_0 . IDENT_1 . IDENT_10 . IDENT_11 . IDENT_12 , IDENT_6 . getName ( ) ) ; } if ( IDENT_6 . METHOD_4 ( ) . equals ( STRING_9 ) ) { com . IDENT_0 . IDENT_1 . IDENT_2 . business . IDENT_13 IDENT_14 = com . IDENT_0 . IDENT_1 . IDENT_15 . jpa ( ) . METHOD_14 ( ) . METHOD_15 ( IDENT_6 . METHOD_6 ( ) , IDENT_6 . METHOD_7 ( ) ) ; IDENT_5 = IDENT_14 . METHOD_16 ( ) ; } else if ( IDENT_6 . METHOD_4 ( ) . equals ( STRING_3 4 ) ) { com . IDENT_0 . IDENT_1 . IDENT_2 . business . IDENT_16 IDENT_17 = com . IDENT_0 . IDENT_1 . IDENT_15 . jpa ( ) . METHOD_17 ( ) . METHOD_18 ( IDENT_6 . METHOD_8 ( ) ) ; IDENT_5 = IDENT_17 . METHOD_16 ( ) ; } IDENT_8 = METHOD_19 ( IDENT_6 , IDENT_18 , IDENT_5 ) ; if ( ( IDENT_6 . METHOD_20 ( ) ) != null ) { for ( com . IDENT_0 . IDENT_1 . IDENT_2 . business . IDENT_19 IDENT_20 : IDENT_6 . METHOD_20 ( ) ) { METHOD_21 ( IDENT_20 . METHOD_22 ( ) , IDENT_20 . getName ( ) , IDENT_20 . getValue ( ) ) ; } } IDENT_21 . create ( IDENT_8 ) ; METHOD_23 ( IDENT_8 , IDENT_6 . METHOD_20 ( ) , null , null ) ; } catch ( com . IDENT_0 . IDENT_9 . as . common . METHOD_13 IDENT_22 ) { throw IDENT_22 ; } catch ( java . lang . Exception e ) { com . IDENT_0 . IDENT_1 . IDENT_2 . business . METHOD_1 . log . error ( STRING_3 7 , e ) ; throw new com . IDENT_0 . IDENT_9 . as . common . METHOD_13 ( com . IDENT_0 . IDENT_1 . IDENT_10 . IDENT_11 . IDENT_23 , e . getClass ( ) . METHOD_24 ( ) ) ; } return STRING_1 ; }
org . junit . Assert . assertEquals ( expResult , result ) 