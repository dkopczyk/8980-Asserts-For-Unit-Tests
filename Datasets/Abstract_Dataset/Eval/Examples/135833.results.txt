METHOD_0 ( ) { IDENT_0 . METHOD_1 ( new org . springframework . core . io . METHOD_2 ( STRING_0 ) ) ; java . util . List < nl . IDENT_1 . IDENT_2 . api . client . domain . Person > IDENT_3 = this . client . METHOD_3 ( nl . IDENT_1 . IDENT_2 . api . client . IDENT_4 . IDENT_5 , nl . IDENT_1 . IDENT_2 . api . client . IDENT_4 . IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , java . lang . String ) { if ( ! ( org . springframework . util . StringUtils . METHOD_4 ( IDENT_7 ) ) ) { throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } nl . IDENT_1 . IDENT_2 . api . client . IDENT_8 request = new nl . IDENT_1 . IDENT_2 . api . client . METHOD_5 ( IDENT_9 . IDENT_10 , ( ( ( ( ( IDENT_11 . METHOD_6 ( ) ) + STRING_2 ) + IDENT_7 ) + "/" ) + IDENT_12 ) ) ; java . io . InputStream in = execute ( IDENT_7 , request ) ; return parser . METHOD_7 ( in ) . METHOD_8 ( ) ; }
org . junit . Assert . assertEquals ( 12 , IDENT_3 . size ( ) ) 