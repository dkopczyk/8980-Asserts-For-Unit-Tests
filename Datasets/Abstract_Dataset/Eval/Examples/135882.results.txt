METHOD_0 ( ) { statement . METHOD_1 ( ) ; statement . start ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 event = new org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 ( ) ; template . METHOD_3 ( event ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 result = statement . METHOD_4 ( this . IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . IDENT_0 . IDENT_1 . IDENT_5 ) { org . IDENT_0 . IDENT_1 . IDENT_6 . LOG . info ( STRING_0 ) ; if ( ( IDENT_7 . METHOD_5 ( ) ) || ( IDENT_7 . METHOD_6 ( ) ) ) { org . IDENT_0 . IDENT_1 . IDENT_6 . LOG . error ( STRING_1 ) ; throw new org . IDENT_0 . IDENT_1 . METHOD_7 ( ( STRING_2 + ( IDENT_7 . METHOD_8 ( ) ) ) ) ; } org . IDENT_0 . IDENT_1 . Iterator < com . IDENT_8 . IDENT_1 . client . IDENT_9 > IDENT_10 = this . IDENT_7 . iterator ( ) ; T result = null ; while ( IDENT_10 . hasNext ( ) ) { com . IDENT_8 . IDENT_1 . client . IDENT_9 event = IDENT_10 . next ( ) ; if ( ! ( IDENT_10 . hasNext ( ) ) ) { result = IDENT_11 . METHOD_9 ( event ) ; } } org . IDENT_0 . IDENT_1 . IDENT_6 . LOG . info ( STRING_3 ) ; return result ; }
org . junit . Assert . assertEquals ( result , event ) 