METHOD_0 ( eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) { java . util . List < eu . IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_4 > IDENT_5 = client . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; for ( eu . IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_4 IDENT_6 : IDENT_5 ) { eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 < eu . IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_8 > r = client . METHOD_2 ( eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 . filter ( ) . METHOD_3 ( IDENT_6 . getId ( ) ) , 10 , 0 ) ; if ( ( r . METHOD_4 ( ) . size ( ) ) > 0 ) { return ; } } org . junit . Assert . fail ( ( STRING_0 + ( IDENT_10 . METHOD_5 ( IDENT_5 ) ) ) ) ; } METHOD_1 ( ) { return METHOD_6 ( eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_11 . class , STRING_1 ) . result ; }
org . junit . Assert . assertTrue ( ( ( IDENT_5 . size ( ) ) > 0 ) ) 