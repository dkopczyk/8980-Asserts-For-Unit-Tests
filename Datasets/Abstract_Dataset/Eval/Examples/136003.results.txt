METHOD_0 ( ) { "<AssertPlaceHolder>" ; } METHOD_1 ( org . opendaylight . protocol . IDENT_0 . IDENT_1 . spi . state . IDENT_2 , org . opendaylight . protocol . IDENT_0 . IDENT_1 . spi . state . IDENT_3 ) { if ( ( IDENT_4 == null ) && ( IDENT_5 == null ) ) { return null ; } final org . opendaylight . yang . gen . v1 . http . IDENT_6 . net . yang . IDENT_0 . IDENT_7 . IDENT_0 . IDENT_8 . group . IDENT_9 builder = new org . opendaylight . yang . gen . v1 . http . IDENT_6 . net . yang . IDENT_0 . IDENT_7 . IDENT_0 . IDENT_8 . group . METHOD_2 ( ) ; if ( IDENT_4 != null ) { builder . METHOD_3 ( org . opendaylight . yang . gen . v1 . IDENT_10 . opendaylight . params . xml . IDENT_11 . yang . IDENT_0 . IDENT_6 . IDENT_12 . IDENT_13 . IDENT_14 . class , org . opendaylight . protocol . IDENT_0 . state . IDENT_15 . METHOD_4 ( IDENT_4 ) ) ; } if ( IDENT_5 != null ) { builder . METHOD_3 ( org . opendaylight . yang . gen . v1 . IDENT_10 . opendaylight . params . xml . IDENT_11 . yang . IDENT_0 . IDENT_6 . IDENT_12 . IDENT_13 . IDENT_16 . class , org . opendaylight . protocol . IDENT_0 . state . IDENT_15 . METHOD_5 ( IDENT_5 ) ) ; } return builder . build ( ) ; }
org . junit . Assert . assertNull ( org . opendaylight . protocol . IDENT_0 . state . IDENT_15 . METHOD_1 ( null , null ) ) 