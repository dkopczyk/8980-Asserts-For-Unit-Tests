METHOD_0 ( ) { final org . apache . hadoop . IDENT_0 . IDENT_1 . container . IDENT_2 container = org . apache . hadoop . IDENT_0 . IDENT_1 . TestUtils . METHOD_1 ( IDENT_3 . IDENT_4 ) ; final org . apache . hadoop . IDENT_0 . IDENT_1 . container . IDENT_5 id = container . METHOD_2 ( ) ; final java . util . Set < org . apache . hadoop . IDENT_0 . IDENT_1 . container . IDENT_6 > IDENT_7 = org . apache . hadoop . IDENT_0 . IDENT_1 . TestUtils . METHOD_3 ( id , IDENT_8 . IDENT_4 , org . apache . hadoop . IDENT_0 . IDENT_1 . TestUtils . METHOD_4 ( ) , org . apache . hadoop . IDENT_0 . IDENT_1 . TestUtils . METHOD_4 ( ) , org . apache . hadoop . IDENT_0 . IDENT_1 . TestUtils . METHOD_4 ( ) ) ; IDENT_9 . METHOD_5 ( container ) ; for ( org . apache . hadoop . IDENT_0 . IDENT_1 . container . IDENT_6 IDENT_10 : IDENT_7 ) { IDENT_9 . METHOD_6 ( id , IDENT_10 ) ; } final int IDENT_11 = IDENT_12 . METHOD_7 ( IDENT_13 . Type . IDENT_14 ) ; IDENT_15 . METHOD_8 ( ) ; java . lang . Thread . sleep ( INT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( org . apache . hadoop . IDENT_0 . protocol . IDENT_16 . IDENT_17 . IDENT_18 ) { return IDENT_19 . containsKey ( type ) ? IDENT_19 . get ( type ) . get ( ) : 0 ; }
org . junit . Assert . assertEquals ( ( IDENT_11 + 3 ) , IDENT_12 . METHOD_7 ( IDENT_13 . Type . IDENT_14 ) ) 