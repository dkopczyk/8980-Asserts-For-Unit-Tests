METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = mock ( org . opendaylight . controller . cluster . common . IDENT_4 . IDENT_2 . class ) ; IDENT_0 . IDENT_1 . IDENT_5 IDENT_6 = mock ( IDENT_0 . IDENT_1 . IDENT_5 . class ) ; doReturn ( false ) . when ( IDENT_3 ) . METHOD_1 ( anyString ( ) ) ; doReturn ( IDENT_6 ) . when ( IDENT_3 ) . METHOD_2 ( ) ; org . opendaylight . controller . cluster . common . IDENT_4 . IDENT_2 IDENT_7 = new org . opendaylight . controller . cluster . common . IDENT_4 . METHOD_3 ( IDENT_3 ) ; for ( org . opendaylight . controller . cluster . common . IDENT_4 . METHOD_3 . IDENT_8 type : METHOD_3 . IDENT_8 . values ( ) ) { "<AssertPlaceHolder>" ; } } METHOD_4 ( org . opendaylight . controller . cluster . common . IDENT_4 . IDENT_9 ) { return IDENT_10 . METHOD_5 ( this . IDENT_7 ) ; }
org . junit . Assert . assertEquals ( IDENT_6 , IDENT_7 . METHOD_4 ( type ) ) 