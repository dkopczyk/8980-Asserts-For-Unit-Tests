METHOD_0 ( ) { final org . opendaylight . IDENT_0 . binding . dom . adapter . IDENT_1 IDENT_2 = org . opendaylight . IDENT_0 . binding . dom . adapter . IDENT_1 . from ( org . opendaylight . yang . gen . v1 . IDENT_3 . opendaylight . params . xml . IDENT_4 . yang . controller . IDENT_5 . IDENT_6 . test . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_11 . class ) ; final org . opendaylight . yang . gen . v1 . IDENT_3 . opendaylight . params . xml . IDENT_4 . yang . controller . IDENT_5 . IDENT_6 . test . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_11 input = new org . opendaylight . yang . gen . v1 . IDENT_3 . opendaylight . params . xml . IDENT_4 . yang . controller . IDENT_5 . IDENT_6 . test . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 . METHOD_1 ( ) . build ( ) ; final org . opendaylight . yangtools . yang . binding . IDENT_12 < ? > IDENT_13 = IDENT_2 . METHOD_2 ( input ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . opendaylight . yangtools . yang . binding . IDENT_14 ) { try { return ( ( org . opendaylight . yangtools . yang . binding . IDENT_12 < ? > ) ( IDENT_15 . METHOD_3 ( obj ) ) ) ; } catch ( final java . lang . Throwable e ) { com . google . common . base . IDENT_16 . METHOD_4 ( e ) ; throw new java . lang . IllegalStateException ( e ) ; } }
org . junit . Assert . assertNull ( IDENT_13 ) 