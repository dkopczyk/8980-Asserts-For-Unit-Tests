METHOD_0 ( ) { IDENT_0 . close ( ) ; final org . opendaylight . IDENT_1 . dom . store . IDENT_2 . IDENT_3 IDENT_4 = org . opendaylight . IDENT_1 . dom . store . IDENT_2 . IDENT_3 . create ( org . opendaylight . IDENT_1 . dom . IDENT_5 . IDENT_6 . IDENT_7 , executor , 1 ) ; IDENT_4 . METHOD_1 ( org . opendaylight . IDENT_1 . dom . IDENT_5 . IDENT_6 . IDENT_8 ) ; final org . opendaylight . IDENT_1 . dom . api . IDENT_9 IDENT_10 = IDENT_11 . METHOD_2 ( java . util . Collections . singletonList ( org . opendaylight . IDENT_1 . dom . IDENT_5 . IDENT_6 . IDENT_7 ) ) ; final org . opendaylight . yangtools . IDENT_12 . IDENT_13 < org . opendaylight . IDENT_1 . dom . store . IDENT_2 . IDENT_3 > IDENT_14 = IDENT_11 . METHOD_3 ( org . opendaylight . IDENT_1 . dom . IDENT_5 . IDENT_6 . IDENT_7 , IDENT_4 , IDENT_10 ) ; IDENT_10 . close ( ) ; final org . opendaylight . IDENT_1 . dom . store . IDENT_2 . IDENT_3 IDENT_15 = org . opendaylight . IDENT_1 . dom . store . IDENT_2 . IDENT_3 . create ( org . opendaylight . IDENT_1 . dom . IDENT_5 . IDENT_6 . IDENT_16 , executor , 1 ) ; IDENT_15 . METHOD_1 ( org . opendaylight . IDENT_1 . dom . IDENT_5 . IDENT_6 . IDENT_8 ) ; final org . opendaylight . IDENT_1 . dom . api . IDENT_9 IDENT_17 = IDENT_11 . METHOD_2 ( java . util . Collections . singletonList ( org . opendaylight . IDENT_1 . dom . IDENT_5 . IDENT_6 . IDENT_16 ) ) ; org . opendaylight . yangtools . IDENT_12 . IDENT_13 < org . opendaylight . IDENT_1 . dom . store . IDENT_2 . IDENT_3 > IDENT_18 = IDENT_11 . METHOD_3 ( org . opendaylight . IDENT_1 . dom . IDENT_5 . IDENT_6 . IDENT_16 , IDENT_15 , IDENT_17 ) ; IDENT_18 . close ( ) ; IDENT_18 = IDENT_11 . METHOD_3 ( org . opendaylight . IDENT_1 . dom . IDENT_5 . IDENT_6 . IDENT_16 , IDENT_15 , IDENT_17 ) ; final org . opendaylight . IDENT_1 . dom . api . IDENT_19 tx = IDENT_17 . METHOD_4 ( false ) ; final org . opendaylight . IDENT_1 . dom . api . IDENT_20 IDENT_21 = tx . METHOD_5 ( org . opendaylight . IDENT_1 . dom . IDENT_5 . IDENT_6 . IDENT_16 ) ; "<AssertPlaceHolder>" ; IDENT_21 . close ( ) ; tx . METHOD_6 ( ) ; IDENT_17 . close ( ) ; IDENT_18 . close ( ) ; IDENT_14 . close ( ) ; } METHOD_5 ( org . opendaylight . IDENT_1 . dom . api . IDENT_22 ) { com . google . common . base . IDENT_23 . METHOD_7 ( ( ! ( IDENT_24 ) ) , STRING_0 ) ; com . google . common . base . IDENT_23 . METHOD_7 ( ( ( IDENT_25 ) == null ) , STRING_1 ) ; com . google . common . base . IDENT_23 . METHOD_8 ( ( ! ( IDENT_26 . METHOD_9 ( IDENT_27 ) ) ) , STRING_2 , IDENT_27 ) ; final org . opendaylight . IDENT_1 . dom . spi . IDENT_28 . IDENT_29 IDENT_30 = METHOD_10 ( IDENT_27 ) ; com . google . common . base . IDENT_23 . METHOD_8 ( ( METHOD_10 != null ) , STRING_3 , IDENT_27 , this ) ; IDENT_25 = new org . opendaylight . IDENT_1 . dom . IDENT_5 . IDENT_31 . METHOD_11 ( METHOD_10 . METHOD_5 ( IDENT_27 ) , IDENT_27 ) ; return IDENT_25 ; }
org . junit . Assert . assertNotNull ( IDENT_21 ) 