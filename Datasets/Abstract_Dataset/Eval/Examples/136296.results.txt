METHOD_0 ( ) { final org . opendaylight . IDENT_0 . dom . store . IDENT_1 . IDENT_2 IDENT_3 = mock ( org . opendaylight . IDENT_0 . dom . store . IDENT_1 . IDENT_2 . class ) ; final org . opendaylight . IDENT_0 . dom . store . IDENT_1 . IDENT_4 IDENT_5 = mock ( org . opendaylight . IDENT_0 . dom . store . IDENT_1 . IDENT_4 . class ) ; final org . opendaylight . yangtools . yang . data . api . schema . tree . IDENT_6 IDENT_7 = mock ( org . opendaylight . yangtools . yang . data . api . schema . tree . IDENT_6 . class ) ; doReturn ( IDENT_7 ) . when ( IDENT_3 ) . METHOD_1 ( ) ; doReturn ( IDENT_5 ) . when ( IDENT_3 ) . METHOD_2 ( any ( java . lang . String . class ) , any ( org . opendaylight . IDENT_0 . dom . store . IDENT_1 . IDENT_8 . class ) , any ( org . opendaylight . yangtools . yang . data . api . schema . tree . IDENT_6 . class ) ) ; final org . opendaylight . IDENT_0 . dom . store . IDENT_1 . IDENT_8 IDENT_9 = new org . opendaylight . IDENT_0 . dom . store . IDENT_1 . METHOD_3 ( IDENT_3 , com . google . common . collect . IDENT_10 . of ( org . opendaylight . IDENT_0 . dom . store . IDENT_1 . TestUtils . IDENT_11 ) , new org . opendaylight . IDENT_0 . dom . store . IDENT_1 . METHOD_4 ( org . opendaylight . IDENT_0 . dom . store . IDENT_1 . TestUtils . IDENT_11 , com . google . common . collect . ImmutableMap . of ( ) , com . google . common . collect . ImmutableMap . of ( ) ) ) ; "<AssertPlaceHolder>" ; verify ( IDENT_3 ) . METHOD_2 ( any ( java . lang . String . class ) , any ( org . opendaylight . IDENT_0 . dom . store . IDENT_1 . METHOD_3 . class ) , any ( org . opendaylight . yangtools . yang . data . api . schema . tree . IDENT_6 . class ) ) ; org . opendaylight . IDENT_0 . dom . store . IDENT_1 . TestUtils . METHOD_5 ( ) ; } of ( org . opendaylight . yangtools . yang . data . api . schema . tree . IDENT_12 ) { return new org . opendaylight . IDENT_0 . dom . store . IDENT_1 . METHOD_6 ( IDENT_13 ) ; }
org . junit . Assert . assertNotNull ( IDENT_9 . METHOD_2 ( ) ) 