METHOD_0 ( ) { org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . params . xml . IDENT_2 . yang . IDENT_3 . IDENT_4 . IDENT_5 . service . function . types . IDENT_6 IDENT_7 = new org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . params . xml . IDENT_2 . yang . IDENT_3 . IDENT_4 . IDENT_5 . service . function . types . METHOD_1 ( ) . METHOD_2 ( new org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . params . xml . IDENT_2 . yang . IDENT_3 . common . IDENT_8 . METHOD_3 ( "" ) ) . build ( ) ; boolean result = org . opendaylight . IDENT_3 . IDENT_9 . api . IDENT_10 . IDENT_11 . METHOD_4 ( IDENT_7 ) ; org . opendaylight . IDENT_3 . IDENT_9 . api . IDENT_10 . LOG . debug ( ( STRING_0 + ( ! result ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . params . xml . IDENT_2 . yang . IDENT_3 . IDENT_4 . IDENT_5 . service . function . types . IDENT_6 ) { org . opendaylight . IDENT_3 . IDENT_9 . dto . IDENT_12 IDENT_13 = METHOD_5 ( ) ; if ( IDENT_13 == null ) { org . opendaylight . IDENT_3 . IDENT_9 . api . IDENT_14 . LOG . error ( STRING_1 ) ; return false ; } javax . ws . rs . client . IDENT_15 IDENT_16 = client . target ( ( ( ( IDENT_17 ) + STRING_2 ) + ( IDENT_18 ) ) ) . path ( STRING_3 ) ; org . opendaylight . IDENT_3 . IDENT_9 . dto . IDENT_19 IDENT_20 = org . opendaylight . IDENT_3 . IDENT_9 . dto . IDENT_19 . builder ( ) . METHOD_6 ( org . opendaylight . IDENT_3 . IDENT_9 . dto . IDENT_21 . builder ( ) . setName ( IDENT_7 . getType ( ) . getValue ( ) ) . METHOD_7 ( org . opendaylight . IDENT_3 . IDENT_9 . dto . IDENT_22 . builder ( ) . METHOD_8 ( IDENT_7 . getType ( ) . getValue ( ) ) . build ( ) ) . build ( ) ) . build ( ) ; javax . ws . rs . core . Response response = IDENT_16 . request ( IDENT_23 . IDENT_24 ) . header ( STRING_4 , IDENT_13 . getId ( ) ) . header ( STRING_5 , IDENT_13 . METHOD_9 ( ) . getName ( ) ) . METHOD_10 ( javax . ws . rs . client . Entity . entity ( org . opendaylight . IDENT_3 . IDENT_9 . api . IDENT_14 . IDENT_25 . METHOD_11 ( IDENT_20 ) , IDENT_23 . IDENT_24 ) ) ; if ( response != null ) { switch ( response . getStatus ( ) ) { case INT_0 : java . lang . String json = response . METHOD_12 ( java . lang . String . class ) ; org . opendaylight . IDENT_3 . IDENT_9 . dto . IDENT_26 IDENT_27 = org . opendaylight . IDENT_3 . IDENT_9 . api . IDENT_14 . IDENT_25 . METHOD_13 ( json , org . opendaylight . IDENT_3 . IDENT_9 . dto . IDENT_26 . class ) ; org . opendaylight . IDENT_3 . IDENT_9 . api . IDENT_14 . LOG . info ( STRING_6 ) ; org . opendaylight . IDENT_3 . IDENT_9 . api . IDENT_14 . LOG . debug ( STRING_7 , org . opendaylight . IDENT_3 . IDENT_9 . api . IDENT_14 . IDENT_25 . METHOD_11 ( IDENT_27 ) ) ; return true ; case INT_1 : org . opendaylight . IDENT_3 . IDENT_9 . api . IDENT_14 . LOG . debug ( STRING_8 ) ; break ; default : org . opendaylight . IDENT_3 . IDENT_9 . dto . IDENT_28 error = org . opendaylight . IDENT_3 . IDENT_9 . api . IDENT_14 . IDENT_25 . METHOD_13 ( response . METHOD_12 ( java . lang . String . class ) , org . opendaylight . IDENT_3 . IDENT_9 . dto . IDENT_28 . class ) ; org . opendaylight . IDENT_3 . IDENT_9 . api . IDENT_14 . LOG . debug ( STRING_9 , error . toString ( ) ) ; break ; } } return false ; }
org . junit . Assert . assertFalse ( result ) 