METHOD_0 ( ) { final java . util . Collection < org . opendaylight . yangtools . yang . model . api . IDENT_0 > IDENT_1 = IDENT_2 . METHOD_1 ( ) ; final java . lang . String [ ] IDENT_3 = new java . lang . String [ ] { STRING_0 2 , STRING_1 4 , STRING_0 0 , STRING_1 3 , STRING_1 2 , STRING_2 , STRING_3 , STRING_4 , STRING_0 5 , STRING_1 , STRING_5 , STRING_1 5 , STRING_0 8 , STRING_6 , STRING_1 0 , STRING_7 , STRING_0 6 , STRING_8 , STRING_0 9 , STRING_0 , STRING_0 3 , STRING_9 , STRING_0 1 , STRING_0 7 , STRING_1 1 , STRING_0 4 } ; final java . lang . String [ ] IDENT_4 = new java . lang . String [ IDENT_1 . size ( ) ] ; int offset = 0 ; for ( final org . opendaylight . yangtools . yang . model . api . IDENT_0 child : IDENT_1 ) { IDENT_4 [ offset ] = child . METHOD_2 ( ) . METHOD_3 ( ) ; offset ++ ; } "<AssertPlaceHolder>" ; } METHOD_3 ( ) { return IDENT_5 ; }
org . junit . Assert . assertArrayEquals ( IDENT_3 , IDENT_4 ) 