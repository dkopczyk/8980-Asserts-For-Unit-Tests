METHOD_0 ( ) { org . joda . time . IDENT_0 IDENT_1 = null ; org . joda . time . IDENT_0 IDENT_2 = new org . joda . time . METHOD_1 ( STRING_0 ) ; java . util . Collection < IDENT_3 . IDENT_4 . IDENT_5 . model . instance . IDENT_6 > IDENT_7 = METHOD_2 ( ) ; java . util . Set < IDENT_3 . IDENT_4 . IDENT_5 . model . instance . IDENT_6 > IDENT_8 = IDENT_9 . METHOD_3 ( IDENT_1 , IDENT_2 , IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . joda . time . METHOD_1 , org . joda . time . METHOD_1 , IDENT_3 . IDENT_4 . IDENT_5 . util . Collection ) { IDENT_3 . IDENT_4 . IDENT_5 . util . Set < IDENT_3 . IDENT_4 . IDENT_5 . model . instance . IDENT_6 > IDENT_10 = new IDENT_3 . IDENT_4 . IDENT_5 . util . HashSet ( ) ; for ( IDENT_3 . IDENT_4 . IDENT_5 . model . instance . IDENT_6 IDENT_11 : IDENT_7 ) { boolean IDENT_12 = true ; org . joda . time . METHOD_1 IDENT_13 = IDENT_14 . METHOD_4 ( IDENT_11 ) ; if ( ( ( IDENT_13 == null ) || ( ( IDENT_2 != null ) && ( IDENT_13 . METHOD_5 ( IDENT_2 ) ) ) ) || ( ( IDENT_1 != null ) && ( IDENT_13 . METHOD_6 ( IDENT_1 ) ) ) ) { IDENT_12 = false ; if ( IDENT_13 == null ) { org . IDENT_15 . IDENT_16 . METHOD_7 ( IDENT_3 . IDENT_4 . IDENT_5 . util . IDENT_17 . class ) . warn ( ( ( STRING_1 + ( IDENT_11 . METHOD_8 ( ) ) ) + STRING_2 ) ) ; } } if ( IDENT_12 ) { IDENT_10 . add ( IDENT_11 ) ; } } return IDENT_10 ; }
org . junit . Assert . assertEquals ( 2 , IDENT_8 . size ( ) ) 