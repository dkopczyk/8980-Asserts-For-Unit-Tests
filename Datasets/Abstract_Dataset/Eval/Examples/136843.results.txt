METHOD_0 ( ) { this . configuration = new org . IDENT_0 . Configuration ( Configuration . IDENT_1 . IDENT_2 ) ; org . IDENT_0 . impl . IDENT_3 . IDENT_4 . IDENT_5 IDENT_6 = new org . IDENT_0 . impl . IDENT_3 . IDENT_4 . METHOD_1 ( this . configuration ) ; org . IDENT_0 . IDENT_7 IDENT_8 = IDENT_6 . METHOD_2 ( ) ; this . configuration . METHOD_3 ( IDENT_8 ) ; eu . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 document = new eu . IDENT_9 . IDENT_10 . IDENT_11 . METHOD_4 ( STRING_0 ) ; eu . IDENT_9 . IDENT_10 . IDENT_11 . validation . IDENT_13 validator = eu . IDENT_9 . IDENT_10 . IDENT_11 . validation . IDENT_13 . METHOD_5 ( document ) ; org . IDENT_0 . impl . IDENT_3 . IDENT_14 IDENT_15 = new org . IDENT_0 . impl . IDENT_3 . METHOD_6 ( ) ; eu . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_16 . IDENT_17 . IDENT_18 IDENT_19 = org . IDENT_0 . IDENT_20 . METHOD_7 ( ) . METHOD_8 ( this . configuration ) . build ( ) ; IDENT_15 . METHOD_9 ( IDENT_19 ) ; IDENT_15 . METHOD_10 ( this . configuration . METHOD_11 ( ) ) ; IDENT_15 . METHOD_12 ( new eu . IDENT_9 . IDENT_10 . IDENT_11 . client . http . commons . METHOD_13 ( ) ) ; validator . METHOD_14 ( IDENT_15 ) ; eu . IDENT_9 . IDENT_10 . IDENT_11 . validation . IDENT_21 . IDENT_22 IDENT_21 = validator . METHOD_15 ( ) ; boolean isValid = true ; for ( java . lang . String IDENT_23 : IDENT_21 . METHOD_16 ( ) . METHOD_17 ( ) ) { isValid = isValid && ( IDENT_21 . METHOD_16 ( ) . METHOD_18 ( IDENT_23 ) ) ; } "<AssertPlaceHolder>" ; } METHOD_18 ( org . IDENT_24 . IDENT_25 . IDENT_26 ) { try { org . IDENT_24 . IDENT_27 . IDENT_28 IDENT_29 = ( ( org . IDENT_24 . IDENT_27 . IDENT_28 ) ( token . METHOD_19 ( ) . METHOD_20 ( token . METHOD_21 ( ) ) . iterator ( ) . next ( ) ) ) ; return token . METHOD_18 ( new org . IDENT_24 . IDENT_30 . IDENT_31 . METHOD_22 ( ) . METHOD_23 ( IDENT_32 . IDENT_33 ) . build ( eu . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_34 . METHOD_24 ( IDENT_29 . METHOD_25 ( ) ) . METHOD_26 ( ) . METHOD_27 ( ) ) ) ; } catch ( java . lang . Exception e ) { throw new org . IDENT_0 . exceptions . METHOD_28 ( e ) ; } }
org . junit . Assert . assertTrue ( isValid ) 