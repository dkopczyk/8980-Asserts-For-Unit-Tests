METHOD_0 ( ) { final byte [ ] buf = new byte [ INT_0 ] ; final org . apache . hadoop . hdfs . IDENT_0 cluster = new org . apache . hadoop . hdfs . IDENT_0 . Builder ( new org . apache . hadoop . hdfs . METHOD_1 ( ) ) . METHOD_2 ( 1 ) . build ( ) ; cluster . METHOD_3 ( ) ; try ( org . apache . hadoop . hdfs . IDENT_1 fs = cluster . METHOD_4 ( ) ) { final int IDENT_2 = 200 ; final int IDENT_3 = INT_1 ; final org . apache . hadoop . fs . Path p = new org . apache . hadoop . fs . Path ( STRING_0 ) ; org . apache . hadoop . fs . IDENT_4 out = fs . create ( p ) ; out . write ( buf , 0 , IDENT_2 ) ; out . close ( ) ; out = fs . append ( p ) ; out . write ( buf , 0 , IDENT_3 ) ; out . METHOD_5 ( ) ; org . apache . hadoop . fs . IDENT_5 in = fs . METHOD_6 ( p ) ; final int length = in . read ( 0 , buf , 0 , ( IDENT_2 + IDENT_3 ) ) ; "<AssertPlaceHolder>" ; in . close ( ) ; out . close ( ) ; } finally { cluster . METHOD_7 ( ) ; } } read ( long , byte [ ] , int , int ) { return - 1 ; }
org . junit . Assert . assertTrue ( ( length > 0 ) ) 