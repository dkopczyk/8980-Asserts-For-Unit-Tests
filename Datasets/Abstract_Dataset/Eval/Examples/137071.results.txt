METHOD_0 ( ) { org . IDENT_0 . core . IDENT_1 . api . model . IDENT_2 t = new org . IDENT_0 . core . IDENT_1 . api . model . METHOD_1 ( ) ; t . METHOD_2 ( STRING_0 ) ; org . apache . IDENT_3 . IDENT_4 . html . IDENT_5 . IDENT_6 p = service . METHOD_3 ( t , STRING_1 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . IDENT_0 . core . IDENT_1 . api . model . METHOD_1 , java . lang . String ) { java . util . List < org . IDENT_0 . ui . common . IDENT_7 . IDENT_8 > IDENT_9 = persistence . query ( new org . IDENT_0 . ui . common . IDENT_7 . METHOD_4 ( task . METHOD_5 ( ) ) ) ; java . lang . Class < ? extends org . apache . IDENT_3 . IDENT_4 . html . IDENT_5 . IDENT_6 > IDENT_10 ; if ( ( IDENT_9 . size ( ) ) > 0 ) { IDENT_10 = IDENT_9 . get ( 0 ) . METHOD_6 ( ) ; } else { IDENT_10 = org . IDENT_0 . ui . common . IDENT_7 . web . IDENT_11 . class ; } try { java . lang . reflect . IDENT_12 < ? extends org . apache . IDENT_3 . IDENT_4 . html . IDENT_5 . IDENT_6 > IDENT_13 = IDENT_10 . METHOD_7 ( java . lang . String . class , org . IDENT_0 . core . IDENT_1 . api . model . METHOD_1 . class ) ; return IDENT_13 . newInstance ( IDENT_14 , task ) ; } catch ( java . lang . Exception e ) { throw new org . IDENT_0 . core . IDENT_1 . api . METHOD_8 ( e ) ; } }
org . junit . Assert . assertEquals ( p . getClass ( ) , org . IDENT_0 . ui . common . IDENT_7 . web . IDENT_11 . class ) 