METHOD_0 ( ) { byte [ ] buffer = METHOD_1 ( ) ; subject . put ( org . IDENT_0 . binding . IDENT_1 . internal . utils . IDENT_2 . IDENT_3 , buffer ) ; "<AssertPlaceHolder>" ; } get ( java . lang . String ) { for ( org . IDENT_0 . binding . IDENT_4 . internal . IDENT_5 . IDENT_6 c : org . IDENT_0 . binding . IDENT_4 . internal . IDENT_5 . IDENT_6 . values ( ) ) { if ( c . text . equals ( IDENT_7 ) ) { return c ; } } throw new java . lang . IllegalArgumentException ( STRING_0 ) ; }
org . junit . Assert . assertThat ( subject . get ( org . IDENT_0 . binding . IDENT_1 . internal . utils . IDENT_2 . IDENT_3 ) , org . hamcrest . CoreMatchers . is ( org . hamcrest . CoreMatchers . equalTo ( buffer ) ) ) 