test ( ) { "<AssertPlaceHolder>" ; } version ( ) { if ( ( net . IDENT_0 . IDENT_1 . hash . impl . util . IDENT_2 . version ) != null ) { return net . IDENT_0 . IDENT_1 . hash . impl . util . IDENT_2 . version ; } try { net . IDENT_0 . IDENT_1 . hash . impl . util . InputStream resource = net . IDENT_0 . IDENT_1 . hash . impl . util . IDENT_2 . class . METHOD_0 ( ) . getResourceAsStream ( ( STRING_0 + STRING_1 ) ) ; net . IDENT_0 . IDENT_1 . hash . impl . util . IDENT_3 in = new net . IDENT_0 . IDENT_1 . hash . impl . util . METHOD_1 ( new net . IDENT_0 . IDENT_1 . hash . impl . util . METHOD_2 ( resource , java . nio . IDENT_4 . IDENT_5 . UTF_8 ) ) ; net . IDENT_0 . IDENT_1 . hash . impl . util . IDENT_2 . version = in . METHOD_3 ( ) . trim ( ) ; if ( ! ( STRING_2 . equals ( net . IDENT_0 . IDENT_1 . hash . impl . util . IDENT_2 . version ( ) ) ) ) return net . IDENT_0 . IDENT_1 . hash . impl . util . IDENT_2 . version ; return net . IDENT_0 . IDENT_1 . hash . impl . util . IDENT_2 . version ; } catch ( java . lang . Exception e ) { } final java . lang . String IDENT_6 = net . IDENT_0 . IDENT_1 . hash . impl . util . IDENT_2 . METHOD_4 ( ) ; if ( IDENT_6 != null ) { net . IDENT_0 . IDENT_1 . hash . impl . util . IDENT_2 . version = IDENT_6 ; return net . IDENT_0 . IDENT_1 . hash . impl . util . IDENT_2 . version ; } net . IDENT_0 . IDENT_1 . hash . impl . util . IDENT_2 . version = net . IDENT_0 . IDENT_1 . hash . impl . util . IDENT_2 . METHOD_5 ( ) ; return net . IDENT_0 . IDENT_1 . hash . impl . util . IDENT_2 . version ; }
org . junit . Assert . assertNotNull ( net . IDENT_0 . IDENT_1 . hash . impl . util . IDENT_2 . version ( ) ) 