METHOD_0 ( ) { net . IDENT_0 . IDENT_1 . map . IDENT_2 < net . IDENT_0 . IDENT_1 . map . IDENT_3 , java . lang . StringBuilder > builder = net . IDENT_0 . IDENT_1 . map . IDENT_2 . of ( net . IDENT_0 . IDENT_1 . map . IDENT_3 . class , net . IDENT_0 . IDENT_1 . map . StringBuilder . class ) . METHOD_1 ( 1 ) ; try ( net . IDENT_0 . IDENT_1 . map . IDENT_4 < net . IDENT_0 . IDENT_1 . map . IDENT_3 , java . lang . StringBuilder > map = newInstance ( builder ) ) { net . IDENT_0 . IDENT_1 . map . IDENT_3 key = net . IDENT_0 . IDENT_1 . values . IDENT_5 . METHOD_2 ( net . IDENT_0 . IDENT_1 . map . IDENT_3 . class ) ; key . setValue ( 1 ) ; java . lang . StringBuilder IDENT_6 = new java . lang . StringBuilder ( ) ; try ( net . IDENT_0 . IDENT_1 . core . io . IDENT_7 c = map . METHOD_3 ( key , IDENT_6 ) ) { IDENT_6 . append ( STRING_0 ) ; } "<AssertPlaceHolder>" ; METHOD_4 ( ) ; } } get ( java . lang . Object ) { return METHOD_5 ( new net . IDENT_0 . IDENT_1 . map . IDENT_8 . IDENT_9 < IDENT_10 , IDENT_11 > ( ) { @ net . IDENT_0 . IDENT_1 . map . Override public java . lang . Object method ( java . util . concurrent . IDENT_12 < IDENT_10 , IDENT_11 > map ) { return map . get ( key ) ; } } ) ; }
org . junit . Assert . assertEquals ( STRING_0 , map . get ( key ) . toString ( ) ) 