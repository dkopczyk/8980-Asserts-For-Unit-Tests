test ( ) { try ( final net . IDENT_0 . IDENT_1 . map . IDENT_2 < net . IDENT_0 . IDENT_1 . core . values . IDENT_3 , java . lang . IDENT_4 > map = net . IDENT_0 . IDENT_1 . map . IDENT_5 . of ( net . IDENT_0 . IDENT_1 . core . values . IDENT_3 . class , net . IDENT_0 . IDENT_1 . map . IDENT_4 . class ) . METHOD_0 ( "test" ) . METHOD_1 ( INT_0 ) . create ( ) ) { net . IDENT_0 . IDENT_1 . core . values . IDENT_3 value = net . IDENT_0 . IDENT_1 . values . IDENT_6 . METHOD_2 ( net . IDENT_0 . IDENT_1 . core . values . IDENT_3 . class ) ; ( ( net . IDENT_0 . IDENT_1 . bytes . IDENT_7 ) ( value ) ) . METHOD_3 ( net . IDENT_0 . IDENT_1 . bytes . IDENT_8 . METHOD_4 ( 4 ) , 0 , 4 ) ; value . setValue ( 1 ) ; final java . lang . String expected = "test" ; map . put ( value , expected ) ; final java . lang . IDENT_4 actual = map . get ( value ) ; "<AssertPlaceHolder>" ; map . toString ( ) ; } } toString ( ) { return ( ( STRING_0 + STRING_1 ) + ( IDENT_9 ) ) + STRING_2 ; }
org . junit . Assert . assertEquals ( expected , actual . toString ( ) ) 