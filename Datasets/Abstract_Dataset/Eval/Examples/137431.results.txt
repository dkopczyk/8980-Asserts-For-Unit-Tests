METHOD_0 ( ) { java . io . File path = net . IDENT_0 . IDENT_1 . queue . impl . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_0 ) ; net . IDENT_0 . IDENT_1 . core . time . IDENT_4 IDENT_5 = new net . IDENT_0 . IDENT_1 . core . time . METHOD_2 ( ) ; net . IDENT_0 . IDENT_1 . queue . impl . IDENT_2 . IDENT_6 . IDENT_7 IDENT_8 = new net . IDENT_0 . IDENT_1 . queue . impl . IDENT_2 . IDENT_6 . METHOD_3 ( IDENT_5 , path . METHOD_4 ( ) ) ; try ( net . IDENT_0 . IDENT_1 . queue . impl . IDENT_2 . IDENT_9 queue = net . IDENT_0 . IDENT_1 . queue . impl . IDENT_2 . IDENT_10 . METHOD_5 ( path ) . METHOD_6 ( ) . METHOD_7 ( IDENT_11 . IDENT_12 ) . METHOD_8 ( METHOD_8 ) . build ( ) ) { net . IDENT_0 . IDENT_1 . queue . impl . IDENT_2 . IDENT_13 IDENT_14 = queue . METHOD_9 ( ) ; java . lang . Thread IDENT_15 = new java . lang . Thread ( IDENT_8 ) ; IDENT_15 . start ( ) ; IDENT_8 . METHOD_10 ( ) ; METHOD_8 . METHOD_11 ( TimeUnit . IDENT_16 . METHOD_12 ( 2 ) ) ; IDENT_14 . METHOD_13 ( STRING_1 ) ; for ( int i = 0 ; ( i < INT_0 ) && ( ( IDENT_8 . IDENT_17 ) != 1 ) ; i ++ ) { METHOD_8 . METHOD_14 ( 100 ) ; java . lang . Thread . sleep ( 1 ) ; } IDENT_15 . METHOD_15 ( ) ; } "<AssertPlaceHolder>" ; IDENT_8 . queue . close ( ) ; } METHOD_10 ( ) { IDENT_18 . METHOD_10 ( ) ; }
org . junit . Assert . assertEquals ( 1 , IDENT_8 . IDENT_17 ) 