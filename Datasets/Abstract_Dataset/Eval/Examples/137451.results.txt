METHOD_0 ( ) { java . io . File IDENT_0 = METHOD_1 ( ) ; try ( net . IDENT_1 . IDENT_2 . queue . IDENT_3 queue = net . IDENT_1 . IDENT_2 . queue . IDENT_3 . METHOD_2 ( IDENT_0 ) . METHOD_3 ( ) . build ( ) ) { METHOD_4 ( IDENT_0 ) ; net . IDENT_1 . IDENT_2 . queue . IDENT_4 IDENT_5 = queue . METHOD_5 ( ) ; METHOD_4 ( IDENT_0 ) ; IDENT_5 . METHOD_6 ( ) ; METHOD_4 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; METHOD_4 ( IDENT_0 ) ; } } METHOD_7 ( java . util . function . IDENT_6 ) { METHOD_8 ( IDENT_7 . hasNext , IDENT_8 . IDENT_9 , ( ( net . IDENT_1 . IDENT_2 . engine . client . internal . IDENT_10 ) ( ( IDENT_11 ) -> { net . IDENT_1 . IDENT_2 . engine . client . internal . IDENT_12 IDENT_13 = ( IDENT_14 ) -> IDENT_14 . write ( IDENT_7 . index ) . METHOD_9 ( ( ( index ) + 1 ) ) ; IDENT_11 . METHOD_10 ( IDENT_13 ) ; } ) ) , ( ( java . util . function . IDENT_15 < net . IDENT_1 . IDENT_2 . engine . client . internal . IDENT_16 , java . lang . IDENT_17 > ) ( ( IDENT_14 ) -> { IDENT_14 . read ( IDENT_7 . index ) . METHOD_9 ( ( x ) -> index = x ) . read ( IDENT_8 . IDENT_9 ) . bytes ( reader ) ; return null ; } ) ) ) ; return true ; }
org . junit . Assert . assertFalse ( IDENT_5 . METHOD_7 ( ( d ) -> { } ) ) 