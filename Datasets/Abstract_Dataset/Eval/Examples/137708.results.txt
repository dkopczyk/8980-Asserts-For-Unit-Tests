METHOD_0 ( ) { final javax . management . IDENT_0 IDENT_1 = IDENT_2 . mock ( javax . management . IDENT_0 . class ) ; final com . ibm . IDENT_3 . kernel . server . IDENT_4 IDENT_5 = IDENT_2 . mock ( com . ibm . IDENT_3 . kernel . server . IDENT_4 . class ) ; final int port = INT_0 ; final java . lang . String host = STRING_0 ; final java . lang . String IDENT_6 = null ; IDENT_2 . METHOD_1 ( new org . IDENT_7 . METHOD_2 ( ) { { METHOD_3 ( IDENT_1 ) . METHOD_4 ( STRING_1 ) ; METHOD_5 ( METHOD_6 ( host ) ) ; METHOD_3 ( IDENT_1 ) . METHOD_4 ( STRING_2 ) ; METHOD_5 ( METHOD_6 ( port ) ) ; METHOD_3 ( IDENT_5 ) . METHOD_7 ( ) ; METHOD_5 ( METHOD_6 ( IDENT_6 ) ) ; } } ) ; com . ibm . IDENT_8 . container . ws . impl . IDENT_9 IDENT_10 = new com . ibm . IDENT_8 . container . ws . impl . METHOD_8 ( ) ; IDENT_10 . METHOD_9 ( IDENT_5 ) ; IDENT_10 . METHOD_10 ( IDENT_1 ) ; java . lang . String expected = ( ( ( STRING_3 + ( IDENT_10 . METHOD_11 ( ) ) ) + STRING_4 ) + port ) + STRING_5 ; "<AssertPlaceHolder>" ; } METHOD_12 ( ) { if ( ( IDENT_11 ) == null ) { return com . ibm . IDENT_8 . container . ws . impl . METHOD_8 . IDENT_12 ; } try { java . lang . String host = METHOD_13 ( ( ( java . lang . String ) ( IDENT_11 . METHOD_4 ( STRING_1 ) ) ) ) ; int port = ( ( java . lang . Integer ) ( IDENT_11 . METHOD_4 ( STRING_2 ) ) ) ; return ( ( ( STRING_3 + host ) + STRING_4 ) + port ) + STRING_5 ; } catch ( javax . management . IDENT_13 IDENT_14 ) { throw new javax . batch . operations . METHOD_14 ( IDENT_14 ) ; } catch ( javax . management . IDENT_15 IDENT_16 ) { throw new javax . batch . operations . METHOD_14 ( IDENT_16 ) ; } catch ( javax . management . IDENT_17 IDENT_18 ) { throw new javax . batch . operations . METHOD_14 ( IDENT_18 ) ; } }
org . junit . Assert . assertEquals ( expected , IDENT_10 . METHOD_12 ( ) ) 