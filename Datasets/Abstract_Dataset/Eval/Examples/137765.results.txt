METHOD_0 ( ) { com . ibm . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new com . ibm . ws . IDENT_1 . METHOD_1 ( ) . METHOD_2 ( ) ; final int [ ] IDENT_4 = new int [ 1 ] ; IDENT_3 . add ( new com . ibm . IDENT_0 . IDENT_1 . METHOD_3 ( ) { @ com . ibm . ws . IDENT_1 . Override public com . ibm . IDENT_0 . IDENT_1 . IDENT_5 METHOD_4 ( ) throws com . ibm . IDENT_0 . IDENT_1 . IDENT_6 { ( IDENT_4 [ 0 ] ) ++ ; throw new com . ibm . IDENT_0 . IDENT_1 . METHOD_5 ( ) ; } } ) ; for ( int i = 0 ; i < 2 ; i ++ ) { try { IDENT_3 . process ( ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( com . ibm . IDENT_0 . IDENT_1 . METHOD_5 ex ) { } "<AssertPlaceHolder>" ; } } fail ( java . lang . String ) { IDENT_7 . client . IDENT_8 . IDENT_9 . IDENT_10 = false ; System . out . println ( ( ( IDENT_7 . client . IDENT_8 . IDENT_9 . IDENT_11 ) + message ) ) ; throw new java . lang . RuntimeException ( STRING_1 ) ; }
org . junit . Assert . assertEquals ( 1 , IDENT_4 [ 0 ] ) 