METHOD_0 ( javax . servlet . http . IDENT_0 , javax . servlet . http . IDENT_1 ) { final java . lang . String m = STRING_0 ; long IDENT_2 = INT_0 ; long IDENT_3 = IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 ; javax . ws . rs . client . IDENT_8 client = javax . ws . rs . client . IDENT_9 . METHOD_1 ( ) . property ( STRING_1 , IDENT_2 ) . build ( ) ; long IDENT_10 = java . lang . System . currentTimeMillis ( ) ; javax . ws . rs . core . Response r = null ; try { r = client . target ( ( ( STRING_2 + ( req . METHOD_2 ( ) ) ) + STRING_3 ) ) . request ( ) . get ( ) ; IDENT_4 . IDENT_5 . IDENT_6 . IDENT_11 . info ( ( ( ( ( m + STRING_4 ) + ( r . getStatus ( ) ) ) + " " ) + ( r . METHOD_3 ( java . lang . String . class ) ) ) ) ; org . junit . Assert . fail ( STRING_5 ) ; } catch ( javax . ws . rs . IDENT_12 expected ) { } "<AssertPlaceHolder>" ; long IDENT_13 = ( java . lang . System . currentTimeMillis ( ) ) - IDENT_10 ; IDENT_4 . IDENT_5 . IDENT_6 . IDENT_11 . info ( ( ( ( m + STRING_6 ) + IDENT_13 ) + STRING_7 ) ) ; if ( IDENT_13 > ( IDENT_2 + IDENT_3 ) ) { org . junit . Assert . fail ( ( ( STRING_8 + IDENT_13 ) + STRING_7 ) ) ; } } fail ( java . lang . String ) { IDENT_14 . client . IDENT_15 . IDENT_16 . IDENT_17 = false ; System . out . println ( ( ( IDENT_14 . client . IDENT_15 . IDENT_16 . IDENT_18 ) + message ) ) ; throw new java . lang . RuntimeException ( STRING_9 ) ; }
org . junit . Assert . assertNull ( r ) 