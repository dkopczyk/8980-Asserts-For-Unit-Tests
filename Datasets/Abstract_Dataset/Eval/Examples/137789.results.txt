METHOD_0 ( ) { java . io . ByteArrayOutputStream out = new java . io . ByteArrayOutputStream ( ) ; java . io . IDENT_0 IDENT_1 ; java . lang . StringBuilder str = new java . lang . StringBuilder ( ) ; javax . management . IDENT_2 IDENT_3 = null ; try { IDENT_3 = new javax . management . METHOD_1 ( ) ; java . lang . Object o = com . ibm . ws . IDENT_4 . IDENT_5 . converter . IDENT_6 . METHOD_2 ( ) ; java . lang . Object IDENT_7 = com . ibm . ws . IDENT_4 . IDENT_5 . converter . IDENT_6 . METHOD_2 ( ) ; java . lang . reflect . IDENT_8 . set ( IDENT_7 , 0 , new java . lang . Boolean [ 3 ] ) ; javax . management . IDENT_9 IDENT_10 = new javax . management . METHOD_3 ( com . ibm . ws . IDENT_4 . IDENT_5 . converter . IDENT_6 . IDENT_11 , o ) ; javax . management . METHOD_3 IDENT_12 = new javax . management . METHOD_3 ( ( ( com . ibm . ws . IDENT_4 . IDENT_5 . converter . IDENT_6 . IDENT_11 ) + "2" ) , IDENT_7 ) ; IDENT_3 . add ( IDENT_10 ) ; IDENT_3 . add ( IDENT_12 ) ; str . append ( com . ibm . ws . IDENT_4 . IDENT_5 . converter . IDENT_6 . IDENT_13 ) ; for ( javax . management . METHOD_3 item : IDENT_3 . asList ( ) ) { str . append ( com . ibm . ws . IDENT_4 . IDENT_5 . converter . IDENT_6 . IDENT_14 ) ; str . append ( com . ibm . ws . IDENT_4 . IDENT_5 . converter . IDENT_6 . METHOD_4 ( com . ibm . ws . IDENT_4 . IDENT_5 . converter . IDENT_6 . IDENT_15 , item . getName ( ) ) ) ; str . append ( com . ibm . ws . IDENT_4 . IDENT_5 . converter . IDENT_6 . IDENT_16 ) ; str . append ( com . ibm . ws . IDENT_4 . IDENT_5 . converter . IDENT_6 . METHOD_5 ( com . ibm . ws . IDENT_4 . IDENT_5 . converter . IDENT_6 . IDENT_17 ) ) ; str . append ( com . ibm . ws . IDENT_4 . IDENT_5 . converter . IDENT_6 . IDENT_18 ) ; IDENT_1 = new java . io . ByteArrayOutputStream ( ) ; converter . METHOD_6 ( IDENT_1 , item . getValue ( ) ) ; str . append ( IDENT_1 . toString ( ) ) ; str . append ( com . ibm . ws . IDENT_4 . IDENT_5 . converter . IDENT_6 . IDENT_19 ) ; str . append ( com . ibm . ws . IDENT_4 . IDENT_5 . converter . IDENT_6 . IDENT_16 ) ; } str . METHOD_7 ( ( ( str . length ( ) ) - 1 ) ) ; str . append ( com . ibm . ws . IDENT_4 . IDENT_5 . converter . IDENT_6 . IDENT_20 ) ; } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( ( STRING_0 + e ) ) ; } try { converter . METHOD_8 ( out , IDENT_3 ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( ( STRING_1 + e ) ) ; } } toString ( ) { java . lang . StringBuilder sb = new java . lang . StringBuilder ( INT_0 ) ; sb . append ( getClass ( ) . METHOD_9 ( ) ) ; sb . append ( STRING_2 ) . append ( java . lang . Integer . METHOD_10 ( hashCode ( ) ) ) ; sb . append ( STRING_3 ) . append ( this . IDENT_21 ) ; sb . append ( STRING_4 ) . append ( this . IDENT_22 ) ; sb . append ( STRING_5 ) . append ( this . IDENT_23 ) ; sb . append ( STRING_6 ) . append ( this . IDENT_24 ) ; sb . append ( STRING_7 ) . append ( this . error ) ; if ( null != ( this . output ) ) { sb . append ( STRING_8 ) . append ( this . IDENT_25 ) ; for ( int i = 0 ; i < ( this . output . length ) ; i ++ ) { sb . append ( STRING_9 ) . append ( this . output [ i ] ) ; } } return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( out . toString ( ) , str . toString ( ) ) 