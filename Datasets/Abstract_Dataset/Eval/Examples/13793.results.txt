METHOD_0 ( ) { METHOD_1 ( ) . METHOD_2 ( org . apache . hadoop . hdfs . server . IDENT_0 . IDENT_1 . impl . IDENT_2 ) . build ( ) ; final java . lang . String IDENT_3 = org . apache . hadoop . test . IDENT_4 . METHOD_3 ( ) ; org . apache . hadoop . fs . Path IDENT_5 = new org . apache . hadoop . fs . Path ( ( ( "/" + IDENT_3 ) + STRING_0 ) ) ; org . apache . hadoop . fs . Path IDENT_6 = new org . apache . hadoop . fs . Path ( ( ( "/" + IDENT_3 ) + STRING_1 ) ) ; final int IDENT_7 = INT_0 ; org . apache . hadoop . hdfs . server . IDENT_0 . IDENT_1 . impl . IDENT_8 . METHOD_4 ( cluster . METHOD_5 ( ) . get ( 0 ) ) ; METHOD_6 ( IDENT_5 , org . apache . hadoop . hdfs . server . IDENT_0 . IDENT_1 . impl . IDENT_2 , true , IDENT_7 ) ; METHOD_7 ( IDENT_5 , org . apache . hadoop . hdfs . server . IDENT_0 . IDENT_1 . impl . IDENT_9 ) ; METHOD_8 ( IDENT_6 , org . apache . hadoop . hdfs . server . IDENT_0 . IDENT_1 . impl . IDENT_2 , true ) ; METHOD_9 ( STRING_2 , 0 ) ; METHOD_7 ( IDENT_5 , org . apache . hadoop . hdfs . server . IDENT_0 . IDENT_1 . impl . IDENT_9 ) ; METHOD_7 ( IDENT_6 , org . apache . hadoop . hdfs . server . IDENT_0 . IDENT_1 . impl . IDENT_10 ) ; assert fs . exists ( IDENT_5 ) ; assert fs . exists ( IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( org . apache . hadoop . fs . Path , int , int ) { byte [ ] IDENT_11 = org . apache . hadoop . hdfs . IDENT_12 . METHOD_11 ( fs , path ) ; byte [ ] expected = org . apache . hadoop . hdfs . IDENT_12 . METHOD_12 ( IDENT_13 , IDENT_14 ) ; return java . util . Arrays . equals ( IDENT_11 , expected ) ; }
org . junit . Assert . assertTrue ( METHOD_10 ( IDENT_5 , org . apache . hadoop . hdfs . server . IDENT_0 . IDENT_1 . impl . IDENT_2 , IDENT_7 ) ) 