METHOD_0 ( ) { for ( int i = 0 ; i < 20 ; ++ i ) { for ( int j = 0 ; j < INT_0 ; ++ j ) { long expected = ( OP_0 0L ) OP_1 ( 1L << j ) ; long [ ] state = METHOD_1 ( ) ; com . github . IDENT_0 . IDENT_1 . core . IDENT_2 . METHOD_2 ( IDENT_3 . IDENT_4 , state , ( ( INT_0 * i ) + j ) , false ) ; "<AssertPlaceHolder>" ; } } } METHOD_2 ( com . github . IDENT_0 . IDENT_1 . core . IDENT_5 , long [ ] , int , boolean ) { int IDENT_6 = pos > > 6 ; int IDENT_7 = pos & INT_1 ; return ( ( ( com . github . IDENT_0 . IDENT_1 . core . IDENT_2 . METHOD_3 ( IDENT_8 , state , IDENT_6 , ( ( val ? 1L : 0L ) << IDENT_7 ) , IDENT_7 , 1 ) ) > > > IDENT_7 ) & 1L ) == 1L ; }
org . junit . Assert . assertTrue ( ( ( state [ i ] ) == expected ) ) 