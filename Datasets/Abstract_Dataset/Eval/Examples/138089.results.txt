METHOD_0 ( ) { java . util . Map < java . lang . String , ? > IDENT_0 = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; java . util . Map < java . lang . String , java . lang . Object > options = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; options . put ( IDENT_1 . IDENT_2 , true ) ; mock . METHOD_1 ( new org . IDENT_3 . METHOD_2 ( ) { { METHOD_3 ( IDENT_4 ) . METHOD_4 ( ) ; METHOD_5 ( IDENT_5 ) . METHOD_6 ( IDENT_6 , IDENT_7 ) ; METHOD_7 ( METHOD_8 ( IDENT_7 ) ) ; } } ) ; IDENT_8 . METHOD_9 ( IDENT_7 , IDENT_6 , IDENT_0 , options ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( ) { if ( ( com . ibm . IDENT_9 . IDENT_10 . IDENT_11 . METHOD_11 ( ) ) && ( com . ibm . ws . IDENT_12 . security . authentication . IDENT_13 . IDENT_14 . tc . METHOD_12 ( ) ) ) { com . ibm . ws . IDENT_15 . utils . IDENT_10 . IDENT_16 . entry ( com . ibm . ws . IDENT_12 . security . authentication . IDENT_13 . IDENT_14 . tc , ( ( com . ibm . ws . IDENT_12 . security . authentication . IDENT_13 . IDENT_14 . IDENT_17 ) + STRING_0 ) ) ; } javax . security . auth . IDENT_18 subject = null ; try { if ( ( com . ibm . ws . IDENT_12 . security . authentication . IDENT_13 . IDENT_14 . IDENT_19 ) != null ) { subject = com . ibm . ws . IDENT_12 . security . authentication . IDENT_13 . IDENT_14 . IDENT_19 . METHOD_6 ( com . ibm . ws . IDENT_12 . security . authentication . IDENT_13 . IDENT_20 , IDENT_21 , IDENT_22 ) ; } } catch ( com . ibm . ws . security . authentication . IDENT_23 IDENT_24 ) { if ( ( com . ibm . IDENT_9 . IDENT_10 . IDENT_11 . METHOD_11 ( ) ) && ( com . ibm . ws . IDENT_12 . security . authentication . IDENT_13 . IDENT_14 . tc . METHOD_13 ( ) ) ) { com . ibm . ws . IDENT_15 . utils . IDENT_10 . IDENT_16 . debug ( com . ibm . ws . IDENT_12 . security . authentication . IDENT_13 . IDENT_14 . tc , STRING_1 ) ; com . ibm . ws . IDENT_15 . utils . IDENT_10 . IDENT_16 . exception ( com . ibm . ws . IDENT_12 . security . authentication . IDENT_13 . IDENT_14 . tc , IDENT_24 ) ; } } finally { if ( ( com . ibm . IDENT_9 . IDENT_10 . IDENT_11 . METHOD_11 ( ) ) && ( com . ibm . ws . IDENT_12 . security . authentication . IDENT_13 . IDENT_14 . tc . METHOD_12 ( ) ) ) { com . ibm . ws . IDENT_15 . utils . IDENT_10 . IDENT_16 . METHOD_14 ( com . ibm . ws . IDENT_12 . security . authentication . IDENT_13 . IDENT_14 . tc , ( ( com . ibm . ws . IDENT_12 . security . authentication . IDENT_13 . IDENT_14 . IDENT_17 ) + STRING_0 ) ) ; } } return subject ; }
org . junit . Assert . assertTrue ( IDENT_8 . METHOD_10 ( ) ) 