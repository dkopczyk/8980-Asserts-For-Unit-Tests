METHOD_0 ( ) { java . lang . Exception IDENT_0 = new java . lang . METHOD_1 ( ) ; java . util . concurrent . IDENT_1 < java . lang . Boolean > b = monitor . METHOD_2 ( com . ibm . ws . IDENT_2 . internal . Boolean . class , IDENT_0 ) ; monitor . METHOD_3 ( b , new java . lang . IllegalStateException ( ) ) ; try { b . get ( ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . util . concurrent . IDENT_3 e ) { "<AssertPlaceHolder>" ; } } METHOD_4 ( ) { if ( ( ( exceptions ) != null ) && ( ( exceptions . size ( ) ) > 0 ) ) return ( ( java . lang . Throwable ) ( exceptions . get ( 0 ) ) ) ; else return null ; }
org . junit . Assert . assertEquals ( STRING_0 , IDENT_0 , e . METHOD_4 ( ) ) 