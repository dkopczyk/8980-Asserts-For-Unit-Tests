METHOD_0 ( ) { org . springframework . web . IDENT_0 . IDENT_1 IDENT_2 = mock ( org . springframework . web . IDENT_0 . IDENT_1 . class ) ; when ( IDENT_2 . METHOD_1 ( ) ) . thenReturn ( org . IDENT_3 . IDENT_4 . IDENT_5 . controller . IDENT_6 . IDENT_7 ) ; when ( IDENT_2 . METHOD_2 ( ) ) . thenReturn ( STRING_0 ) ; METHOD_3 ( new java . io . IOException ( ) ) . when ( IDENT_2 ) . METHOD_4 ( any ( ) ) ; org . springframework . http . IDENT_8 < ? > result = IDENT_9 . METHOD_5 ( IDENT_2 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_10 , METHOD_6 ( ) ) . METHOD_7 ( any ( ) ) ; } METHOD_5 ( org . springframework . web . IDENT_0 . IDENT_1 ) { return org . IDENT_3 . IDENT_4 . IDENT_5 . controller . IDENT_11 . METHOD_8 ( ( ) -> { java . lang . String IDENT_12 = file . METHOD_1 ( ) ; java . nio . file . Path IDENT_13 = java . nio . file . IDENT_14 . get ( IDENT_15 . METHOD_9 ( ) . getAbsolutePath ( ) , IDENT_12 ) ; if ( java . nio . file . IDENT_16 . exists ( IDENT_13 ) ) { java . lang . String IDENT_17 = STRING_1 ; return METHOD_10 ( IDENT_12 , IDENT_17 , IDENT_18 . IDENT_19 ) ; } java . lang . String IDENT_20 = file . METHOD_2 ( ) ; if ( IDENT_20 == null ) { java . lang . String IDENT_17 = STRING_2 ; return METHOD_10 ( IDENT_12 , IDENT_17 , IDENT_18 . IDENT_21 ) ; } if ( ! ( org . IDENT_3 . IDENT_4 . IDENT_5 . controller . IDENT_11 . IDENT_22 . contains ( IDENT_20 . toLowerCase ( ) ) ) ) { java . lang . String IDENT_17 = STRING_3 ; return METHOD_10 ( IDENT_12 , IDENT_17 , IDENT_18 . IDENT_21 ) ; } if ( ! ( IDENT_12 . toLowerCase ( ) . METHOD_11 ( STRING_4 ) ) ) { java . lang . String IDENT_17 = STRING_5 ; return METHOD_10 ( IDENT_12 , IDENT_17 , IDENT_18 . IDENT_21 ) ; } try { file . METHOD_4 ( IDENT_13 . METHOD_12 ( ) ) ; IDENT_23 . METHOD_7 ( IDENT_13 ) ; return org . springframework . http . IDENT_8 . METHOD_13 ( java . util . Collections . METHOD_14 ( STRING_6 , ( IDENT_12 + STRING_7 ) ) ) ; } catch ( ex ) { java . lang . String IDENT_17 = STRING_8 ; return METHOD_10 ( IDENT_12 , IDENT_17 , IDENT_18 . IDENT_24 , org . IDENT_3 . IDENT_4 . IDENT_5 . controller . ex ) ; } } ) ; }
org . junit . Assert . assertEquals ( IDENT_18 . IDENT_24 , result . getStatusCode ( ) ) 