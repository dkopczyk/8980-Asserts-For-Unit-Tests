METHOD_0 ( ) { org . openmrs . IDENT_0 IDENT_1 = METHOD_1 ( 1 , Locale . IDENT_2 ) ; org . openmrs . IDENT_3 IDENT_4 = METHOD_2 ( 3 , STRING_0 , Locale . IDENT_2 , null , false ) ; IDENT_1 . METHOD_3 ( IDENT_4 ) ; java . lang . String IDENT_5 = IDENT_1 . METHOD_4 ( Locale . IDENT_2 ) . getName ( ) ; org . openmrs . IDENT_3 IDENT_6 = METHOD_2 ( 4 , STRING_1 , new java . util . Locale ( STRING_2 ) , null , false ) ; IDENT_1 . METHOD_3 ( IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . util . Locale ) { if ( org . openmrs . IDENT_0 . log . METHOD_6 ( ) ) { org . openmrs . IDENT_0 . log . debug ( ( STRING_3 + IDENT_7 ) ) ; } if ( METHOD_7 ( IDENT_7 ) . isEmpty ( ) ) { if ( org . openmrs . IDENT_0 . log . METHOD_6 ( ) ) { org . openmrs . IDENT_0 . log . debug ( ( ( ( STRING_4 + ( IDENT_8 ) ) + STRING_5 ) + IDENT_7 ) ) ; } return null ; } else if ( IDENT_7 == null ) { org . openmrs . IDENT_0 . log . warn ( STRING_6 ) ; return null ; } for ( org . openmrs . IDENT_3 IDENT_9 : METHOD_7 ( IDENT_7 ) ) { if ( org . springframework . util . IDENT_10 . METHOD_8 ( IDENT_9 . METHOD_9 ( ) , true ) ) { return IDENT_9 ; } } org . openmrs . IDENT_3 IDENT_11 = null ; for ( org . openmrs . IDENT_3 IDENT_9 : METHOD_10 ( IDENT_7 ) ) { if ( org . springframework . util . IDENT_10 . METHOD_8 ( IDENT_9 . METHOD_9 ( ) , true ) ) { java . util . Locale IDENT_12 = IDENT_9 . METHOD_11 ( ) ; if ( IDENT_7 . METHOD_12 ( ) . equals ( IDENT_12 . METHOD_12 ( ) ) ) { return IDENT_9 ; } else { IDENT_11 = IDENT_9 ; } } } if ( IDENT_11 != null ) { return IDENT_11 ; } return METHOD_4 ( IDENT_7 ) ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_1 . METHOD_5 ( Locale . IDENT_2 ) . getName ( ) ) 