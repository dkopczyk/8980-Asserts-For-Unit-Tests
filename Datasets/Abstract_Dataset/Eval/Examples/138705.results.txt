METHOD_0 ( ) { org . openmrs . IDENT_0 IDENT_1 = new org . openmrs . METHOD_1 ( 1 ) ; IDENT_1 . METHOD_2 ( new org . openmrs . METHOD_3 ( STRING_0 , org . openmrs . api . context . Context . METHOD_4 ( ) ) ) ; IDENT_1 . METHOD_5 ( new org . openmrs . METHOD_6 ( STRING_1 , org . openmrs . api . context . Context . METHOD_4 ( ) ) ) ; IDENT_1 . METHOD_7 ( new org . openmrs . METHOD_8 ( 1 ) ) ; IDENT_1 . METHOD_9 ( new org . openmrs . METHOD_10 ( 1 ) ) ; java . util . List < org . openmrs . METHOD_1 > IDENT_2 = new java . util . ArrayList ( ) ; IDENT_1 = org . openmrs . api . context . Context . METHOD_11 ( ) . METHOD_12 ( IDENT_1 ) ; IDENT_2 . add ( IDENT_1 ) ; org . openmrs . METHOD_1 IDENT_3 = new org . openmrs . METHOD_1 ( 2 ) ; IDENT_3 . METHOD_2 ( new org . openmrs . METHOD_3 ( STRING_2 , org . openmrs . api . context . Context . METHOD_4 ( ) ) ) ; IDENT_3 . METHOD_5 ( new org . openmrs . METHOD_6 ( STRING_3 , org . openmrs . api . context . Context . METHOD_4 ( ) ) ) ; IDENT_3 . METHOD_7 ( new org . openmrs . METHOD_8 ( 1 ) ) ; IDENT_3 . METHOD_9 ( new org . openmrs . METHOD_10 ( 1 ) ) ; IDENT_3 = org . openmrs . api . context . Context . METHOD_11 ( ) . METHOD_12 ( IDENT_3 ) ; org . openmrs . api . context . Context . METHOD_13 ( org . openmrs . METHOD_3 . class ) ; java . util . List < org . openmrs . METHOD_1 > IDENT_4 = IDENT_3 . METHOD_14 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_14 ( java . lang . String ) { java . util . List < org . openmrs . METHOD_1 > IDENT_5 = new java . util . ArrayList ( ) ; try { for ( org . openmrs . IDENT_6 IDENT_7 : org . openmrs . api . context . Context . METHOD_11 ( ) . METHOD_15 ( IDENT_8 , java . util . Collections . singletonList ( org . openmrs . api . context . Context . METHOD_4 ( ) ) , false , null , null , null , null , null , null , null ) ) { IDENT_5 . add ( IDENT_7 . METHOD_16 ( ) ) ; } } catch ( java . lang . Exception e ) { } return IDENT_5 ; }
org . junit . Assert . assertEquals ( IDENT_2 , IDENT_4 ) 