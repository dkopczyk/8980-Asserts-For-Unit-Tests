METHOD_0 ( ) { org . openmrs . IDENT_0 IDENT_1 = new org . openmrs . METHOD_1 ( 2 ) ; IDENT_1 . METHOD_2 ( new org . openmrs . METHOD_3 ( 1 ) ) ; IDENT_1 . setValue ( "1" ) ; IDENT_1 . METHOD_4 ( false ) ; org . openmrs . METHOD_1 other = new org . openmrs . METHOD_1 ( 1 ) ; IDENT_1 . METHOD_2 ( new org . openmrs . METHOD_3 ( 1 ) ) ; IDENT_1 . setValue ( "1" ) ; IDENT_1 . METHOD_4 ( false ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( org . openmrs . METHOD_1 ) { boolean IDENT_2 = true ; java . lang . String [ ] methods = new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 } ; java . lang . Class IDENT_3 = this . getClass ( ) ; for ( java . lang . String IDENT_4 : methods ) { try { java . lang . reflect . Method method = IDENT_3 . METHOD_6 ( IDENT_4 ) ; java . lang . Object IDENT_5 = method . invoke ( this ) ; java . lang . Object IDENT_6 = method . invoke ( IDENT_7 ) ; if ( IDENT_6 != null ) { IDENT_2 OP_0 IDENT_6 . equals ( IDENT_5 ) ; } } catch ( java . lang . IDENT_8 e ) { org . openmrs . METHOD_1 . log . warn ( ( STRING_3 + IDENT_4 ) , e ) ; } catch ( java . lang . IDENT_9 | java . lang . reflect . IDENT_10 e ) { org . openmrs . METHOD_1 . log . error ( STRING_4 , e ) ; } } return IDENT_2 ; }
org . junit . Assert . assertTrue ( IDENT_1 . METHOD_5 ( other ) ) 