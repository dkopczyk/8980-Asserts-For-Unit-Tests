METHOD_0 ( ) { org . openmrs . api . context . Context . METHOD_1 ( ) . METHOD_2 ( new org . openmrs . METHOD_3 ( IDENT_0 . IDENT_1 , STRING_0 ) ) ; org . openmrs . api . context . Context . METHOD_1 ( ) . METHOD_2 ( new org . openmrs . METHOD_3 ( IDENT_0 . IDENT_2 , STRING_1 ) ) ; "<AssertPlaceHolder>" ; org . openmrs . api . context . Context . METHOD_1 ( ) . METHOD_2 ( new org . openmrs . METHOD_3 ( IDENT_0 . IDENT_2 , "" ) ) ; } METHOD_4 ( ) { if ( ( org . openmrs . util . IDENT_3 . IDENT_4 ) == null ) { if ( org . openmrs . api . context . Context . METHOD_5 ( ) ) { try { java . lang . String IDENT_5 = org . openmrs . api . context . Context . METHOD_1 ( ) . METHOD_6 ( IDENT_0 . IDENT_2 ) ; if ( org . springframework . util . StringUtils . METHOD_7 ( IDENT_5 ) ) { try { org . openmrs . util . IDENT_3 . IDENT_4 = org . openmrs . util . IDENT_3 . METHOD_8 ( IDENT_5 ) ; } catch ( java . lang . Exception t ) { org . openmrs . util . IDENT_3 . log . warn ( ( STRING_2 + IDENT_5 ) , t ) ; } } } catch ( java . lang . Exception e ) { org . openmrs . util . IDENT_3 . log . warn ( ( STRING_3 + ( e . getMessage ( ) ) ) ) ; org . openmrs . util . IDENT_3 . log . trace ( STRING_4 , e ) ; } if ( ( org . openmrs . util . IDENT_3 . IDENT_4 ) == null ) { org . openmrs . util . IDENT_3 . IDENT_4 = org . openmrs . util . IDENT_3 . METHOD_8 ( IDENT_0 . IDENT_6 ) ; } } else { return org . openmrs . util . IDENT_3 . METHOD_8 ( IDENT_0 . IDENT_6 ) ; } } return org . openmrs . util . IDENT_3 . IDENT_4 ; }
org . junit . Assert . assertNotNull ( org . openmrs . util . IDENT_3 . METHOD_4 ( ) ) 