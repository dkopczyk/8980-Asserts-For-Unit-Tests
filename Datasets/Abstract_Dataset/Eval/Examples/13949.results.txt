METHOD_0 ( ) { org . apache . hadoop . mapreduce . IDENT_0 IDENT_1 = mock ( org . apache . hadoop . mapreduce . IDENT_0 . class ) ; org . apache . hadoop . mapreduce . tools . IDENT_2 cli = METHOD_1 ( new org . apache . hadoop . mapreduce . tools . METHOD_2 ( new org . apache . hadoop . conf . Configuration ( ) ) ) ; doReturn ( IDENT_1 ) . when ( cli ) . METHOD_3 ( ) ; java . lang . String IDENT_3 = STRING_0 ; java . lang . String IDENT_4 = STRING_1 ; org . apache . hadoop . mapreduce . IDENT_5 IDENT_6 = METHOD_4 ( IDENT_1 , IDENT_3 , IDENT_7 . IDENT_8 ) ; int IDENT_9 = cli . run ( new java . lang . String [ ] { STRING_2 , IDENT_4 } ) ; "<AssertPlaceHolder>" ; } run ( java . lang . String [ ] , org . apache . hadoop . conf . Configuration ) { org . apache . hadoop . hdfs . server . IDENT_10 . IDENT_11 . IDENT_12 IDENT_13 = new org . apache . hadoop . hdfs . server . IDENT_10 . IDENT_11 . METHOD_5 ( ) ; IDENT_13 . METHOD_6 ( conf ) ; try { return org . apache . hadoop . util . IDENT_14 . run ( IDENT_13 , IDENT_15 ) ; } catch ( java . lang . Exception e ) { if ( e instanceof java . io . IOException ) { throw ( ( java . io . IOException ) ( e ) ) ; } else { throw new java . io . IOException ( e ) ; } } }
org . junit . Assert . assertEquals ( ( - 1 ) , IDENT_9 ) 