METHOD_0 ( ) { final org . apache . hadoop . mapreduce . IDENT_0 job = org . apache . hadoop . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; final org . apache . hadoop . conf . Configuration conf = job . METHOD_2 ( ) ; conf . METHOD_3 ( IDENT_3 . IDENT_4 , 2 ) ; METHOD_4 ( org . apache . hadoop . IDENT_1 . IDENT_2 . IDENT_5 [ 3 ] , conf ) ; METHOD_4 ( org . apache . hadoop . IDENT_1 . IDENT_2 . IDENT_5 [ 4 ] , conf ) ; long IDENT_6 = 0 ; IDENT_6 += org . apache . hadoop . IDENT_1 . IDENT_2 . METHOD_5 ( org . apache . hadoop . IDENT_1 . IDENT_2 . IDENT_5 [ 0 ] ) ; IDENT_6 += org . apache . hadoop . IDENT_1 . IDENT_2 . METHOD_5 ( org . apache . hadoop . IDENT_1 . IDENT_2 . IDENT_5 [ 1 ] ) ; IDENT_6 += org . apache . hadoop . IDENT_1 . IDENT_2 . METHOD_5 ( org . apache . hadoop . IDENT_1 . IDENT_2 . IDENT_5 [ 2 ] ) ; org . apache . hadoop . mapreduce . lib . input . IDENT_7 . METHOD_6 ( job , org . apache . hadoop . IDENT_1 . IDENT_2 . IDENT_8 ) ; org . apache . hadoop . mapreduce . lib . output . IDENT_9 . METHOD_7 ( job , new org . apache . hadoop . fs . Path ( org . apache . hadoop . IDENT_1 . IDENT_2 . IDENT_10 , STRING_0 ) ) ; "<AssertPlaceHolder>" ; final org . apache . hadoop . IDENT_1 . IDENT_11 IDENT_12 = org . apache . hadoop . IDENT_1 . IDENT_11 . METHOD_8 ( job . METHOD_9 ( ) ) ; METHOD_10 ( IDENT_12 , INT_0 , INT_1 , INT_2 ) ; METHOD_11 ( IDENT_12 , IDENT_6 , 0 , 0 , 0 ) ; } METHOD_12 ( boolean ) { if ( ( state ) == ( org . apache . hadoop . mapreduce . IDENT_0 . IDENT_13 . IDENT_14 ) ) { METHOD_13 ( ) ; } if ( IDENT_15 ) { METHOD_14 ( ) ; } else { int IDENT_16 = org . apache . hadoop . mapreduce . IDENT_0 . METHOD_15 ( cluster . METHOD_16 ( ) ) ; while ( ! ( METHOD_17 ( ) ) ) { try { java . lang . Thread . sleep ( IDENT_16 ) ; } catch ( java . lang . IDENT_17 IDENT_18 ) { } } } return METHOD_18 ( ) ; }
org . junit . Assert . assertTrue ( job . METHOD_12 ( true ) ) 