METHOD_0 ( ) { java . util . Date date = new java . text . METHOD_1 ( STRING_0 ) . parse ( STRING_1 ) ; java . util . Calendar IDENT_0 = java . util . Calendar . getInstance ( ) ; IDENT_0 . METHOD_2 ( date ) ; IDENT_0 . METHOD_3 ( java . util . IDENT_1 . METHOD_4 ( ) ) ; java . util . Date expected = IDENT_0 . getTime ( ) ; java . lang . String [ ] IDENT_2 = new java . lang . String [ ] { STRING_2 , STRING_3 , STRING_1 , STRING_1 } ; for ( int i = 0 ; i < ( IDENT_2 . length ) ; i ++ ) { java . util . Date result = ( ( java . util . Date ) ( org . openmrs . module . IDENT_3 . rest . web . IDENT_4 . convert ( IDENT_2 [ i ] , java . util . Date . class ) ) ) ; "<AssertPlaceHolder>" ; } } convert ( java . lang . Object , java . lang . reflect . Type ) { if ( object == null ) return object ; java . lang . Class < ? > IDENT_5 = ( IDENT_6 instanceof java . lang . Class ) ? ( ( java . lang . Class < ? > ) ( IDENT_6 ) ) : ( ( java . lang . Class < ? > ) ( ( ( java . lang . reflect . IDENT_7 ) ( IDENT_6 ) ) . METHOD_5 ( ) ) ) ; if ( ( java . util . Collection . class . METHOD_6 ( IDENT_5 ) ) || ( IDENT_5 . METHOD_7 ( ) ) ) { if ( ! ( object instanceof java . util . Collection ) ) throw new org . openmrs . module . IDENT_3 . rest . web . response . METHOD_8 ( ( ( ( STRING_4 + ( object . getClass ( ) ) ) + STRING_5 1 ) + IDENT_6 ) , null ) ; if ( IDENT_5 . METHOD_7 ( ) ) { java . lang . Class < ? > IDENT_8 = IDENT_5 . METHOD_9 ( ) ; java . util . Collection input = ( ( java . util . Collection ) ( object ) ) ; java . lang . Object ret = java . lang . reflect . IDENT_9 . newInstance ( IDENT_8 , input . size ( ) ) ; int i = 0 ; for ( java . lang . Object element : ( ( java . util . Collection ) ( object ) ) ) { java . lang . reflect . IDENT_9 . set ( ret , i , org . openmrs . module . IDENT_3 . rest . web . IDENT_4 . convert ( element , IDENT_8 ) ) ; ++ i ; } return ret ; } java . util . Collection ret = null ; if ( java . util . IDENT_10 . class . METHOD_6 ( IDENT_5 ) ) { ret = new java . util . METHOD_10 ( ) ; } else if ( java . util . Set . class . METHOD_6 ( IDENT_5 ) ) { ret = new java . util . HashSet ( ) ; } else if ( java . util . List . class . METHOD_6 ( IDENT_5 ) ) { ret = new java . util . ArrayList ( ) ; } else { throw new org . openmrs . module . IDENT_3 . rest . web . response . METHOD_8 ( ( STRING_6 + IDENT_5 ) , null ) ; } if ( IDENT_6 instanceof java . lang . reflect . IDENT_7 ) { java . lang . reflect . IDENT_7 IDENT_11 = ( ( java . lang . reflect . IDENT_7 ) ( IDENT_6 ) ) ; java . lang . reflect . Type IDENT_8 = IDENT_11 . METHOD_11 ( ) [ 0 ] ; for ( java . lang . Object element : ( ( java . util . Collection ) ( object ) ) ) ret . add ( org . openmrs . module . IDENT_3 . rest . web . IDENT_4 . convert ( element , IDENT_8 ) ) ; } else { ret . addAll ( ( ( java . util . Collection ) ( object ) ) ) ; } return ret ; } if ( IDENT_5 . METHOD_6 ( object . getClass ( ) ) ) return object ; if ( ( IDENT_5 . METHOD_6 ( org . openmrs . module . IDENT_3 . rest . web . IDENT_12 . class ) ) && ( object instanceof java . lang . Double ) ) { return new java . lang . METHOD_12 ( ( ( java . lang . Double ) ( object ) ) ) ; } if ( object instanceof java . lang . String ) { java . lang . String string = ( ( java . lang . String ) ( object ) ) ; org . openmrs . module . IDENT_3 . rest . web . resource . api . IDENT_13 < ? > converter = org . openmrs . module . IDENT_3 . rest . web . IDENT_4 . METHOD_13 ( IDENT_5 ) ; if ( converter != null ) return converter . METHOD_14 ( string ) ; if ( IDENT_5 . METHOD_6 ( java . util . Date . class ) ) { java . lang . IllegalArgumentException IDENT_14 = null ; java . lang . String [ ] IDENT_15 = new java . lang . String [ ] { org . openmrs . module . IDENT_3 . rest . web . IDENT_4 . IDENT_16 , STRING_0 , STRING_7 , STRING_5 0 , STRING_5 2 , STRING_8 , STRING_9 } ; for ( int i = 0 ; i < ( IDENT_15 . length ) ; i ++ ) { try { java . util . Date date = org . joda . time . IDENT_17 . parse ( string , org . joda . time . format . IDENT_18 . METHOD_15 ( IDENT_15 [ i ] ) ) . METHOD_16 ( ) ; return date ; } catch ( java . lang . IllegalArgumentException ex ) { IDENT_14 = ex ; } } throw new org . openmrs . module . IDENT_3 . rest . web . response . METHOD_8 ( STRING_10 , IDENT_14 ) ; } else if ( IDENT_5 . METHOD_6 ( java . util . Locale . class ) ) { return org . openmrs . util . IDENT_19 . METHOD_17 ( object . toString ( ) ) ; } else if ( IDENT_5 . METHOD_18 ( ) ) { return java . lang . IDENT_20 . valueOf ( ( ( java . lang . Class < ? extends java . lang . IDENT_20 > ) ( IDENT_5 ) ) , object . toString ( ) . METHOD_19 ( ) ) ; } else if ( IDENT_5 . METHOD_6 ( java . lang . Class . class ) ) { try { return org . openmrs . api . context . Context . METHOD_20 ( ( ( java . lang . String ) ( object ) ) ) ; } catch ( java . lang . IDENT_21 e ) { throw new org . openmrs . module . IDENT_3 . rest . web . response . METHOD_8 ( ( ( ( STRING_5 + ( object . getClass ( ) ) ) + STRING_5 1 ) + IDENT_6 ) , e ) ; } } try { java . lang . reflect . Method method = IDENT_5 . METHOD_21 ( STRING_11 , java . lang . String . class ) ; if ( ( java . lang . reflect . IDENT_22 . METHOD_22 ( method . METHOD_23 ( ) ) ) && ( IDENT_5 . METHOD_6 ( method . METHOD_24 ( ) ) ) ) { return method . invoke ( null , string ) ; } } catch ( java . lang . Exception ex ) { } } else if ( object instanceof java . util . Map ) { return org . openmrs . module . IDENT_3 . rest . web . IDENT_4 . METHOD_25 ( ( ( java . util . Map < java . lang . String , ? > ) ( object ) ) , IDENT_5 ) ; } if ( ( IDENT_5 . METHOD_6 ( org . openmrs . module . IDENT_3 . rest . web . Double . class ) ) && ( object instanceof java . lang . IDENT_23 ) ) { return ( ( java . lang . IDENT_23 ) ( object ) ) . METHOD_26 ( ) ; } else if ( ( IDENT_5 . METHOD_6 ( org . openmrs . module . IDENT_3 . rest . web . Integer . class ) ) && ( object instanceof java . lang . IDENT_23 ) ) { return ( ( java . lang . IDENT_23 ) ( object ) ) . METHOD_27 ( ) ; } if ( ( IDENT_5 . METHOD_6 ( java . lang . String . class ) ) && ( object instanceof java . lang . Boolean ) ) { return java . lang . String . valueOf ( object ) ; } throw new org . openmrs . module . IDENT_3 . rest . web . response . METHOD_8 ( ( ( ( STRING_12 + ( object . getClass ( ) ) ) + STRING_5 1 ) + IDENT_6 ) , null ) ; }
org . junit . Assert . assertEquals ( result , expected ) 