METHOD_0 ( ) { expect ( IDENT_0 . METHOD_1 ( METHOD_2 ( ) ) ) . andReturn ( IDENT_1 ) . METHOD_3 ( ) ; replay ( IDENT_0 ) ; final javax . ws . rs . client . IDENT_2 IDENT_3 = target ( ) ; java . io . InputStream IDENT_4 = org . onosproject . IDENT_5 . web . IDENT_6 . class . getResourceAsStream ( STRING_0 ) ; javax . ws . rs . core . Response response = IDENT_3 . path ( org . onosproject . IDENT_5 . web . IDENT_6 . IDENT_7 ) . request ( IDENT_8 . IDENT_9 ) . put ( javax . ws . rs . client . Entity . json ( IDENT_4 ) ) ; final int status = response . getStatus ( ) ; "<AssertPlaceHolder>" ; verify ( IDENT_0 ) ; } is ( java . lang . Class ) { return true ; }
org . junit . Assert . assertThat ( status , org . hamcrest . Matchers . is ( 200 ) ) 