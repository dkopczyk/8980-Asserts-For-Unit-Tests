METHOD_0 ( ) { IDENT_0 . IDENT_1 = new org . onosproject . net . IDENT_2 . impl . IDENT_0 . IDENT_3 . METHOD_1 ( ) ; java . util . List < org . onosproject . net . IDENT_2 . IDENT_4 > IDENT_5 = com . google . common . collect . Lists . newArrayList ( ) ; java . util . List < org . onosproject . net . IDENT_2 . IDENT_4 > IDENT_6 = METHOD_2 ( ) ; org . onosproject . net . IDENT_2 . IDENT_7 IDENT_8 = null ; org . onosproject . net . IDENT_2 . IDENT_7 IDENT_9 = new org . onosproject . net . IDENT_2 . METHOD_3 ( METHOD_4 ( ) , org . onosproject . net . IDENT_2 . IDENT_10 . IDENT_11 , new org . onosproject . store . service . METHOD_5 ( ) ) ; IDENT_9 = org . onosproject . net . IDENT_2 . METHOD_3 . METHOD_6 ( IDENT_9 , IDENT_6 ) ; org . onosproject . net . IDENT_2 . IDENT_12 < org . onosproject . net . IDENT_2 . IDENT_13 > IDENT_14 ; org . onosproject . net . IDENT_2 . IDENT_15 context = new org . onosproject . net . IDENT_2 . METHOD_7 ( IDENT_8 , IDENT_9 ) ; IDENT_14 = new org . onosproject . net . IDENT_2 . METHOD_8 ( IDENT_5 , IDENT_6 , context ) ; IDENT_0 . apply ( IDENT_14 ) ; org . onosproject . net . IDENT_2 . METHOD_8 IDENT_16 = IDENT_17 . IDENT_16 ; "<AssertPlaceHolder>" ; } apply ( org . onosproject . net . IDENT_2 . METHOD_8 ) { java . util . Optional < org . onosproject . net . IDENT_2 . METHOD_3 > IDENT_8 = context . METHOD_9 ( ) ; java . util . Optional < org . onosproject . net . IDENT_2 . METHOD_3 > IDENT_9 = context . METHOD_10 ( ) ; if ( ( METHOD_10 . METHOD_11 ( ) ) && ( METHOD_9 . METHOD_11 ( ) ) ) { org . onosproject . net . IDENT_2 . IDENT_4 IDENT_18 = METHOD_10 . get ( ) . METHOD_12 ( ) ; if ( ( METHOD_13 ( IDENT_18 ) ) && ( org . onosproject . net . METHOD_12 . IDENT_10 . IDENT_19 . equals ( METHOD_9 . get ( ) . state ( ) ) ) ) { METHOD_14 ( context ) ; return ; } } if ( ( ! ( METHOD_10 . METHOD_11 ( ) ) ) && ( ! ( METHOD_9 . METHOD_11 ( ) ) ) ) { IDENT_17 . METHOD_15 ( context ) ; return ; } java . util . List < org . onosproject . net . METHOD_12 . IDENT_13 > IDENT_20 = context . METHOD_16 ( ) ; java . util . List < org . onosproject . net . METHOD_12 . IDENT_13 > IDENT_21 = context . METHOD_17 ( ) ; java . util . List < org . onosproject . net . flow . IDENT_22 > IDENT_23 ; java . util . List < org . onosproject . net . flow . IDENT_22 > IDENT_24 ; if ( METHOD_9 . METHOD_11 ( ) ) { METHOD_18 ( METHOD_9 . get ( ) , IDENT_20 , org . onosproject . net . METHOD_12 . impl . IDENT_0 . IDENT_25 ) ; IDENT_23 = IDENT_20 . stream ( ) . map ( IDENT_13 :: IDENT_26 ) . METHOD_19 ( Collection :: stream ) . collect ( java . util . stream . IDENT_27 . toList ( ) ) ; } else { IDENT_23 = java . util . Collections . emptyList ( ) ; } if ( METHOD_10 . METHOD_11 ( ) ) { METHOD_18 ( METHOD_10 . get ( ) , IDENT_21 , org . onosproject . net . METHOD_12 . impl . IDENT_0 . IDENT_28 ) ; IDENT_24 = IDENT_21 . stream ( ) . map ( IDENT_13 :: IDENT_26 ) . METHOD_19 ( Collection :: stream ) . collect ( java . util . stream . IDENT_27 . toList ( ) ) ; } else { IDENT_24 = java . util . Collections . emptyList ( ) ; } java . util . List < org . onosproject . net . flow . IDENT_22 > IDENT_29 ; java . util . List < org . onosproject . net . flow . IDENT_22 > IDENT_30 ; IDENT_29 = IDENT_24 . stream ( ) . filter ( ( IDENT_31 ) -> IDENT_23 . stream ( ) . METHOD_20 ( IDENT_31 :: equals ) ) . collect ( java . util . stream . IDENT_27 . toList ( ) ) ; IDENT_30 = IDENT_24 . stream ( ) . filter ( ( IDENT_31 ) -> IDENT_23 . stream ( ) . METHOD_20 ( IDENT_31 :: IDENT_32 ) ) . collect ( java . util . stream . IDENT_27 . toList ( ) ) ; IDENT_23 . METHOD_21 ( IDENT_29 ) ; IDENT_23 . METHOD_21 ( IDENT_30 ) ; IDENT_24 . METHOD_21 ( IDENT_29 ) ; IDENT_24 . METHOD_21 ( IDENT_30 ) ; IDENT_29 . METHOD_21 ( IDENT_30 ) ; if ( ( ( IDENT_24 . isEmpty ( ) ) && ( IDENT_23 . isEmpty ( ) ) ) && ( IDENT_29 . isEmpty ( ) ) ) { IDENT_17 . METHOD_15 ( context ) ; return ; } org . onosproject . net . flow . IDENT_33 . Builder builder = org . onosproject . net . flow . IDENT_33 . builder ( ) ; IDENT_24 . METHOD_22 ( builder :: add ) ; IDENT_29 . METHOD_22 ( builder :: IDENT_34 ) ; IDENT_23 . METHOD_22 ( builder :: remove ) ; org . onosproject . net . flow . IDENT_35 IDENT_36 = new org . onosproject . net . flow . METHOD_23 ( ) { @ org . onosproject . net . METHOD_12 . impl . IDENT_0 . Override public void METHOD_24 ( org . onosproject . net . flow . IDENT_33 IDENT_37 ) { IDENT_17 . METHOD_15 ( context ) ; } @ org . onosproject . net . METHOD_12 . impl . IDENT_0 . Override public void METHOD_25 ( org . onosproject . net . flow . IDENT_33 IDENT_37 ) { IDENT_17 . METHOD_26 ( context ) ; } } ; org . onosproject . net . flow . IDENT_33 operations = builder . build ( IDENT_36 ) ; log . debug ( STRING_0 , METHOD_9 . map ( ( x ) -> x . key ( ) . toString ( ) ) . METHOD_27 ( STRING_1 ) , METHOD_10 . map ( ( x ) -> x . key ( ) . toString ( ) ) . METHOD_27 ( STRING_1 ) , operations . METHOD_28 ( ) . stream ( ) . METHOD_29 ( Set :: size ) . METHOD_30 ( ) , operations . METHOD_28 ( ) ) ; IDENT_1 . apply ( operations ) ; }
org . junit . Assert . assertEquals ( IDENT_16 , IDENT_14 ) 