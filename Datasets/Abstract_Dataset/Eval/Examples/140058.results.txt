METHOD_0 ( ) { org . onosproject . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_0 . IDENT_2 . IDENT_3 IDENT_4 = new org . onosproject . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_0 . IDENT_2 . METHOD_1 ( ) ; org . onosproject . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_0 . IDENT_2 . IDENT_5 . IDENT_6 . IDENT_7 IDENT_8 = new org . onosproject . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_0 . IDENT_2 . IDENT_5 . IDENT_6 . METHOD_2 ( ) ; IDENT_8 . METHOD_3 ( org . onosproject . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_0 . IDENT_2 . IDENT_5 . IDENT_6 . IDENT_9 . IDENT_10 . METHOD_4 ( STRING_0 ) ) ; IDENT_4 . METHOD_5 ( IDENT_8 ) ; IDENT_4 . id ( ( ( short ) ( 10 ) ) ) ; org . onosproject . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_0 . IDENT_11 IDENT_12 = new org . onosproject . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_0 . METHOD_6 ( ) ; IDENT_12 . METHOD_7 ( IDENT_4 ) ; org . onosproject . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_13 IDENT_14 = new org . onosproject . yang . gen . v1 . IDENT_0 . IDENT_1 . METHOD_8 ( ) ; IDENT_14 . METHOD_9 ( METHOD_9 ) ; try { boolean IDENT_15 = IDENT_16 . METHOD_10 ( IDENT_14 , session , IDENT_17 . IDENT_18 ) ; "<AssertPlaceHolder>" ; } catch ( org . onosproject . IDENT_19 . IDENT_20 e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( ) ; } catch ( org . onosproject . IDENT_21 . net . IDENT_22 . IDENT_23 . service . IDENT_24 e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( ) ; } } METHOD_10 ( org . onosproject . yang . gen . v1 . IDENT_0 . IDENT_1 . METHOD_8 , org . onosproject . IDENT_19 . IDENT_25 , org . onosproject . IDENT_19 . IDENT_17 ) { if ( ( IDENT_14 . METHOD_9 ( ) ) == null ) { throw new org . onosproject . IDENT_21 . net . IDENT_22 . IDENT_23 . service . METHOD_11 ( STRING_1 ) ; } org . onosproject . yang . model . IDENT_26 IDENT_27 = org . onosproject . yang . model . IDENT_28 . builder ( ) . METHOD_12 ( ( ( org . onosproject . yang . model . IDENT_29 ) ( IDENT_14 . METHOD_9 ( ) ) ) ) . build ( ) ; java . util . ArrayList < org . onosproject . yang . runtime . IDENT_30 > IDENT_31 = new java . util . ArrayList ( ) ; for ( org . onosproject . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_0 . IDENT_2 . IDENT_3 IDENT_4 : IDENT_14 . METHOD_9 ( ) . METHOD_13 ( ) ) { if ( ( IDENT_4 . id ( ) ) == 0 ) { throw new org . onosproject . IDENT_21 . net . IDENT_22 . IDENT_23 . service . METHOD_11 ( STRING_2 ) ; } org . onosproject . yang . model . IDENT_32 . Builder IDENT_33 = org . onosproject . yang . model . IDENT_32 . builder ( ) . METHOD_14 ( "/" , null ) . METHOD_14 ( org . onosproject . IDENT_34 . IDENT_35 . yang . impl . IDENT_36 . IDENT_37 , org . onosproject . IDENT_34 . IDENT_35 . yang . impl . IDENT_36 . IDENT_38 ) . METHOD_14 ( org . onosproject . IDENT_34 . IDENT_35 . yang . impl . IDENT_36 . IDENT_39 , org . onosproject . IDENT_34 . IDENT_35 . yang . impl . IDENT_36 . IDENT_38 ) . METHOD_15 ( org . onosproject . IDENT_34 . IDENT_35 . yang . impl . IDENT_36 . IDENT_40 , org . onosproject . IDENT_34 . IDENT_35 . yang . impl . IDENT_36 . IDENT_38 , IDENT_4 . id ( ) ) ; org . onosproject . yang . runtime . IDENT_30 IDENT_41 = org . onosproject . yang . runtime . IDENT_42 . builder ( ) . METHOD_16 ( IDENT_33 . build ( ) ) . METHOD_17 ( new org . onosproject . yang . runtime . METHOD_18 ( IDENT_43 , IDENT_44 ) ) . build ( ) ; IDENT_31 . add ( IDENT_41 ) ; } return METHOD_19 ( IDENT_27 , session , IDENT_45 , IDENT_31 ) ; }
org . junit . Assert . assertTrue ( IDENT_15 ) 