METHOD_0 ( ) { try ( final org . opennms . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = org . opennms . IDENT_0 . IDENT_1 . IDENT_2 . create ( IDENT_2 . IDENT_4 , IDENT_2 . IDENT_5 , INT_0 ) ) { final java . util . concurrent . IDENT_6 < org . opennms . IDENT_0 . IDENT_1 . IDENT_7 > task = new java . util . concurrent . IDENT_6 < org . opennms . IDENT_0 . IDENT_1 . IDENT_7 > ( new java . util . concurrent . IDENT_8 < org . opennms . IDENT_0 . IDENT_1 . IDENT_7 > ( ) { @ org . opennms . IDENT_0 . IDENT_1 . Override public org . opennms . IDENT_0 . IDENT_1 . IDENT_7 call ( ) throws org . opennms . IDENT_0 . IDENT_1 . Exception { final java . nio . ByteBuffer buf = IDENT_9 . UTF_8 . encode ( STRING_0 ) ; final org . opennms . IDENT_0 . IDENT_1 . IDENT_7 p = new org . opennms . IDENT_0 . IDENT_1 . METHOD_1 ( buf , java . net . IDENT_10 . METHOD_2 ( ) , IDENT_11 ) ; IDENT_3 . METHOD_3 ( p ) ; final org . opennms . IDENT_0 . IDENT_1 . METHOD_1 r = new org . opennms . IDENT_0 . IDENT_1 . METHOD_1 ( INT_1 ) ; METHOD_4 ( STRING_1 ) ; IDENT_3 . METHOD_5 ( r ) ; METHOD_4 ( STRING_2 ) ; return r ; } } ) ; org . opennms . IDENT_0 . IDENT_1 . IDENT_12 . IDENT_13 . execute ( task ) ; final org . opennms . IDENT_0 . IDENT_1 . METHOD_1 r = task . get ( 10 , TimeUnit . IDENT_14 ) ; "<AssertPlaceHolder>" ; final java . lang . String response = IDENT_9 . UTF_8 . decode ( r . METHOD_6 ( ) ) . toString ( ) ; METHOD_4 ( STRING_3 , response , r . METHOD_7 ( ) . METHOD_8 ( ) , r . METHOD_9 ( ) ) ; } } get ( java . lang . Class , int ) { return METHOD_10 ( ) . get ( IDENT_15 , IDENT_16 ) ; }
org . junit . Assert . assertNotNull ( r ) 