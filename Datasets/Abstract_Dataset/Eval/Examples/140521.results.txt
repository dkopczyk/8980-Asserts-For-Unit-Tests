METHOD_0 ( ) { java . lang . String filter = "" ; java . util . List < org . opennms . IDENT_0 . model . IDENT_1 > IDENT_2 = org . opennms . IDENT_3 . IDENT_4 . plugins . IDENT_5 . IDENT_6 . filter . IDENT_7 . METHOD_1 ( ) ; java . lang . String expected = org . opennms . IDENT_3 . IDENT_4 . plugins . IDENT_5 . IDENT_6 . filter . IDENT_7 . METHOD_2 ( IDENT_2 ) ; org . opennms . IDENT_3 . IDENT_4 . plugins . IDENT_5 . IDENT_6 . filter . IDENT_7 . LOG . debug ( ( ( ( STRING_0 + filter ) + STRING_1 ) + expected ) ) ; java . lang . String IDENT_8 = METHOD_3 ( filter ) ; "<AssertPlaceHolder>" ; org . opennms . IDENT_3 . IDENT_4 . plugins . IDENT_5 . IDENT_6 . filter . IDENT_7 . LOG . debug ( STRING_2 ) ; } METHOD_3 ( java . lang . String ) { java . util . List < org . opennms . IDENT_0 . model . IDENT_1 > IDENT_2 = org . opennms . IDENT_3 . IDENT_4 . plugins . IDENT_5 . IDENT_6 . filter . IDENT_7 . METHOD_1 ( ) ; java . lang . String IDENT_9 = org . opennms . IDENT_3 . IDENT_4 . plugins . IDENT_5 . IDENT_6 . filter . IDENT_7 . METHOD_2 ( IDENT_2 ) ; org . opennms . IDENT_3 . IDENT_4 . plugins . IDENT_5 . IDENT_6 . filter . IDENT_7 . LOG . debug ( ( STRING_3 + IDENT_9 ) ) ; final org . opennms . IDENT_3 . IDENT_4 . plugins . IDENT_5 . IDENT_6 . IDENT_10 config = new org . opennms . IDENT_3 . IDENT_4 . plugins . IDENT_5 . IDENT_6 . METHOD_4 ( ) . METHOD_5 ( filter ) . build ( ) ; final java . util . Map < java . lang . String , org . opennms . IDENT_3 . IDENT_4 . plugins . IDENT_5 . IDENT_6 . filter . IDENT_11 > IDENT_12 = new org . opennms . IDENT_3 . IDENT_4 . plugins . IDENT_5 . IDENT_6 . filter . METHOD_6 ( ) . parse ( config . METHOD_7 ( ) ) ; java . util . List < org . opennms . IDENT_0 . model . IDENT_1 > IDENT_13 = METHOD_8 ( IDENT_2 , IDENT_12 ) ; java . lang . String IDENT_8 = org . opennms . IDENT_3 . IDENT_4 . plugins . IDENT_5 . IDENT_6 . filter . IDENT_7 . METHOD_2 ( IDENT_13 ) ; org . opennms . IDENT_3 . IDENT_4 . plugins . IDENT_5 . IDENT_6 . filter . IDENT_7 . LOG . debug ( ( STRING_4 + IDENT_8 ) ) ; return IDENT_8 ; }
org . junit . Assert . assertEquals ( expected , IDENT_8 ) 