METHOD_0 ( ) { org . apache . hadoop . IDENT_0 . IDENT_1 . util . IDENT_2 IDENT_3 = new org . apache . hadoop . IDENT_0 . IDENT_1 . util . METHOD_1 ( STRING_0 , STRING_1 ) ; org . apache . hadoop . IDENT_0 . IDENT_1 . util . METHOD_1 IDENT_4 = org . apache . hadoop . IDENT_0 . IDENT_1 . util . METHOD_1 . METHOD_2 ( IDENT_3 . METHOD_3 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { if ( ( this . IDENT_5 ) != null ) { java . nio . ByteBuffer buffer = java . nio . ByteBuffer . METHOD_4 ( ( ( 4 + ( IDENT_5 . length ( ) ) ) + ( ( IDENT_6 ) == null ? 0 : IDENT_6 . length ( ) ) ) ) ; buffer . METHOD_5 ( IDENT_5 . length ( ) ) ; buffer . put ( IDENT_5 . getBytes ( IDENT_7 . UTF_8 ) ) ; if ( ( IDENT_6 ) != null ) { buffer . put ( IDENT_6 . getBytes ( IDENT_7 . UTF_8 ) ) ; } java . lang . String IDENT_8 = org . apache . commons . codec . IDENT_9 . IDENT_10 . METHOD_6 ( buffer . array ( ) ) ; java . lang . String IDENT_11 = org . apache . commons . codec . IDENT_11 . IDENT_12 . METHOD_7 ( IDENT_8 ) ; return ( IDENT_8 + ( org . apache . hadoop . IDENT_0 . IDENT_1 . util . METHOD_1 . IDENT_13 ) ) + IDENT_11 ; } else { return null ; } }
org . junit . Assert . assertEquals ( IDENT_3 , IDENT_4 ) 