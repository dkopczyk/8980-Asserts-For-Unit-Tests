METHOD_0 ( ) { org . opennms . IDENT_0 . IDENT_1 IDENT_2 = new org . opennms . IDENT_0 . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( STRING_0 ) ; org . opennms . IDENT_0 . IDENT_3 IDENT_4 = new org . opennms . IDENT_0 . METHOD_3 ( ) ; IDENT_4 . METHOD_4 ( IDENT_2 . METHOD_5 ( ) ) ; IDENT_4 . METHOD_6 ( IDENT_2 . METHOD_7 ( ) ) ; IDENT_4 . METHOD_8 ( IDENT_2 . METHOD_9 ( ) ) ; java . lang . String IDENT_5 = IDENT_2 . METHOD_10 ( ) ; java . lang . String IDENT_6 = STRING_1 ; java . lang . String IDENT_7 = STRING_1 ; "<AssertPlaceHolder>" ; } METHOD_11 ( java . lang . String , java . lang . String , java . lang . String ) { try { org . opennms . client . schema . Node IDENT_8 = new org . opennms . client . schema . Node ( ) ; IDENT_8 . METHOD_12 ( IDENT_6 ) ; IDENT_8 . METHOD_13 ( IDENT_7 ) ; java . io . IDENT_9 IDENT_10 = new java . io . StringWriter ( ) ; IDENT_8 . METHOD_14 ( IDENT_10 ) ; log . debug ( ( STRING_2 + ( IDENT_10 . toString ( ) . replace ( STRING_3 , STRING_4 ) ) ) ) ; java . io . IDENT_11 data = new java . io . METHOD_15 ( IDENT_10 . toString ( ) ) ; java . io . IDENT_9 output = new java . io . StringWriter ( ) ; java . net . URL url = new java . net . URL ( ( ( ( ( ( IDENT_12 ) + ( org . opennms . IDENT_0 . METHOD_3 . IDENT_13 ) ) + "/" ) + IDENT_5 ) + STRING_5 ) ) ; org . opennms . IDENT_0 . IDENT_14 IDENT_15 = new org . opennms . IDENT_0 . METHOD_16 ( ) ; IDENT_15 . METHOD_17 ( log ) ; IDENT_15 . METHOD_18 ( data , url , output , IDENT_16 , IDENT_17 ) ; log . debug ( ( STRING_6 + ( output . toString ( ) ) ) ) ; } catch ( java . lang . Throwable ex ) { log . debug ( STRING_7 , ex ) ; return false ; } return true ; }
org . junit . Assert . assertTrue ( IDENT_4 . METHOD_11 ( IDENT_5 , IDENT_6 , IDENT_7 ) ) 