METHOD_0 ( ) { final org . springframework . mock . web . IDENT_0 request = new org . springframework . mock . web . METHOD_1 ( ) ; request . METHOD_2 ( STRING_0 , STRING_1 ) ; request . METHOD_2 ( STRING_0 , STRING_2 ) ; request . METHOD_2 ( STRING_0 , STRING_3 ) ; final java . lang . String host = org . opennms . web . api . IDENT_1 . METHOD_3 ( request ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( javax . servlet . http . IDENT_2 ) { for ( int i = 0 ; i < ( org . opennms . web . api . IDENT_1 . IDENT_3 . length ) ; ++ i ) { final java . lang . String header = request . METHOD_4 ( org . opennms . web . api . IDENT_1 . IDENT_3 [ i ] ) ; if ( header != null ) { final java . lang . String [ ] values = header . split ( STRING_4 ) ; if ( ( values . length ) >= 1 ) { return values [ 0 ] ; } } } return ( ( request . METHOD_5 ( ) ) + STRING_5 ) + ( java . lang . Integer . toString ( request . METHOD_6 ( ) ) ) ; }
org . junit . Assert . assertEquals ( STRING_1 , host ) 