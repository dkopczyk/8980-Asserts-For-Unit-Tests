METHOD_0 ( ) { java . lang . String rule = STRING_0 ; org . opennms . IDENT_0 . filter . api . IDENT_1 IDENT_2 = mock ( org . opennms . IDENT_0 . filter . api . IDENT_1 . class ) ; when ( IDENT_2 . METHOD_1 ( rule ) ) . thenReturn ( com . google . common . collect . IDENT_3 . of ( 1 , STRING_1 ) ) ; org . opennms . IDENT_0 . model . IDENT_4 node = mock ( org . opennms . IDENT_0 . model . IDENT_4 . class ) ; org . opennms . IDENT_0 . dao . api . IDENT_5 IDENT_6 = mock ( org . opennms . IDENT_0 . dao . api . IDENT_5 . class ) ; when ( IDENT_6 . load ( 1 ) ) . thenReturn ( node ) ; org . opennms . IDENT_0 . model . IDENT_7 resource = mock ( org . opennms . IDENT_0 . model . IDENT_7 . class ) ; org . opennms . IDENT_0 . dao . api . IDENT_8 IDENT_9 = mock ( org . opennms . IDENT_0 . dao . api . IDENT_8 . class ) ; when ( IDENT_9 . METHOD_2 ( node ) ) . thenReturn ( resource ) ; IDENT_10 . METHOD_3 ( IDENT_2 ) ; IDENT_10 . METHOD_4 ( IDENT_6 ) ; IDENT_10 . METHOD_5 ( IDENT_9 ) ; org . opennms . web . IDENT_11 . model . IDENT_12 IDENT_13 = new org . opennms . web . IDENT_11 . model . METHOD_6 ( ) ; IDENT_13 . METHOD_7 ( STRING_0 ) ; IDENT_13 . METHOD_8 ( INT_0 ) ; IDENT_13 . METHOD_9 ( INT_1 ) ; IDENT_13 . METHOD_10 ( STRING_2 ) ; javax . servlet . http . IDENT_14 response = new org . springframework . mock . web . METHOD_11 ( ) ; org . springframework . web . servlet . IDENT_15 IDENT_16 = IDENT_17 . METHOD_12 ( response , IDENT_13 ) ; org . opennms . IDENT_0 . config . IDENT_18 . IDENT_19 IDENT_20 = ( ( org . opennms . IDENT_0 . config . IDENT_18 . IDENT_19 ) ( IDENT_16 . METHOD_13 ( ) . get ( STRING_3 ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_14 ( ) { return IDENT_21 ; }
org . junit . Assert . assertEquals ( 0 , IDENT_20 . METHOD_14 ( ) . size ( ) ) 