METHOD_0 ( ) { long start = java . lang . System . currentTimeMillis ( ) ; IDENT_0 = METHOD_1 ( ( STRING_0 + start ) ) ; java . util . List < com . ibm . IDENT_1 . services . client . IDENT_2 . IDENT_3 . IDENT_4 > nodes = METHOD_2 ( IDENT_0 ) ; com . ibm . IDENT_1 . services . client . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = nodes . get ( 3 ) ; com . ibm . IDENT_1 . services . client . IDENT_2 . IDENT_3 . IDENT_4 IDENT_6 = nodes . get ( 1 ) ; java . util . Map < java . lang . String , java . lang . String > params = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; params . put ( STRING_1 , ( "" + ( IDENT_5 . METHOD_3 ( ) . getTime ( ) ) ) ) ; params . put ( STRING_2 , ( "" + ( IDENT_6 . METHOD_3 ( ) . getTime ( ) ) ) ) ; params . put ( STRING_3 , STRING_4 ) ; com . ibm . IDENT_1 . services . client . base . IDENT_7 . IDENT_8 < com . ibm . IDENT_1 . services . client . IDENT_2 . IDENT_3 . IDENT_4 > IDENT_9 = IDENT_10 . METHOD_4 ( IDENT_0 . METHOD_5 ( ) , params ) ; System . out . println ( ( ( ( ( ( STRING_5 + ( IDENT_9 . size ( ) ) ) + STRING_6 ) + ( com . ibm . IDENT_1 . services . client . IDENT_2 . IDENT_3 . IDENT_11 . IDENT_12 . format ( IDENT_5 . METHOD_3 ( ) ) ) ) + STRING_7 ) + ( com . ibm . IDENT_1 . services . client . IDENT_2 . IDENT_3 . IDENT_11 . IDENT_12 . format ( IDENT_6 . METHOD_3 ( ) ) ) ) ) ; METHOD_6 ( IDENT_9 ) ; "<AssertPlaceHolder>" ; } size ( ) { return count ; }
org . junit . Assert . assertEquals ( 2 , IDENT_9 . size ( ) ) 