METHOD_0 ( ) { final org . apache . hadoop . fs . azure . metrics . IDENT_0 IDENT_1 = new org . apache . hadoop . fs . azure . metrics . METHOD_1 ( new org . apache . hadoop . conf . Configuration ( ) ) ; final org . apache . hadoop . fs . azure . metrics . IDENT_2 IDENT_3 = new org . apache . hadoop . fs . azure . metrics . METHOD_2 ( IDENT_1 , 1000 , true ) ; java . lang . Thread [ ] IDENT_4 = new java . lang . Thread [ 10 ] ; for ( int i = 0 ; i < ( IDENT_4 . length ) ; i ++ ) { IDENT_4 [ i ] = new java . lang . Thread ( new java . lang . METHOD_3 ( ) { @ org . apache . hadoop . fs . azure . metrics . Override public void run ( ) { IDENT_3 . METHOD_4 ( new java . util . Date ( ) , new java . util . Date ( ) , 10 ) ; IDENT_3 . METHOD_4 ( new java . util . Date ( 0 ) , new java . util . Date ( 0 ) , 10 ) ; } } ) ; } for ( java . lang . Thread t : IDENT_4 ) { t . start ( ) ; } for ( java . lang . Thread t : IDENT_4 ) { t . join ( ) ; } IDENT_3 . METHOD_5 ( false ) ; "<AssertPlaceHolder>" ; IDENT_3 . close ( ) ; } METHOD_6 ( org . apache . hadoop . fs . azure . metrics . METHOD_1 ) { return org . apache . hadoop . fs . azure . metrics . IDENT_5 . METHOD_7 ( IDENT_1 , org . apache . hadoop . fs . azure . metrics . METHOD_1 . IDENT_6 ) ; }
org . junit . Assert . assertEquals ( ( 10 * ( IDENT_4 . length ) ) , org . apache . hadoop . fs . azure . metrics . IDENT_5 . METHOD_6 ( IDENT_1 ) ) 