test ( ) { org . IDENT_0 . model . IDENT_1 library = org . IDENT_0 . core . manager . IDENT_2 . METHOD_0 ( ) ; "<AssertPlaceHolder>" ; } METHOD_0 ( ) { if ( ( org . IDENT_0 . core . manager . IDENT_2 . IDENT_3 ) == null ) { IDENT_4 . IDENT_5 . METHOD_1 ( ) ; org . eclipse . IDENT_6 . IDENT_7 . resource . IDENT_8 . IDENT_9 . IDENT_10 IDENT_11 = IDENT_8 . IDENT_9 . IDENT_10 . INSTANCE ; java . util . Map < java . lang . String , java . lang . Object > m = IDENT_11 . METHOD_2 ( ) ; m . put ( STRING_0 , new org . eclipse . IDENT_6 . IDENT_7 . IDENT_12 . impl . METHOD_3 ( ) ) ; IDENT_4 . IDENT_10 . INSTANCE . put ( IDENT_4 . IDENT_13 , IDENT_4 . IDENT_5 ) ; java . lang . String [ ] IDENT_14 = new java . lang . String [ ] { STRING_1 , STRING_2 } ; for ( java . lang . String version : IDENT_14 ) { IDENT_4 . IDENT_10 . INSTANCE . put ( IDENT_4 . IDENT_15 . replace ( STRING_3 , version ) , IDENT_4 . IDENT_5 ) ; } org . eclipse . IDENT_6 . IDENT_7 . resource . IDENT_16 IDENT_17 = new org . eclipse . IDENT_6 . IDENT_7 . resource . impl . METHOD_4 ( ) ; org . eclipse . IDENT_6 . IDENT_7 . resource . IDENT_8 resource = IDENT_17 . METHOD_5 ( org . eclipse . IDENT_6 . common . util . URI . METHOD_6 ( STRING_4 ) ) ; try { resource . load ( org . IDENT_0 . core . manager . IDENT_2 . class . getResourceAsStream ( STRING_4 ) , null ) ; } catch ( java . io . IOException e ) { throw new org . IDENT_0 . core . common . METHOD_7 ( e ) ; } org . IDENT_0 . core . manager . IDENT_2 . IDENT_3 = ( ( org . IDENT_0 . model . IDENT_1 ) ( resource . METHOD_8 ( ) . get ( 0 ) ) ) ; org . IDENT_0 . core . manager . IDENT_2 . METHOD_9 ( ) . METHOD_10 ( ) . add ( org . IDENT_0 . core . manager . IDENT_2 . IDENT_3 ) ; } return org . IDENT_0 . core . manager . IDENT_2 . IDENT_3 ; }
org . junit . Assert . assertNotNull ( library ) 