METHOD_0 ( ) { System . out . println ( STRING_0 ) ; final boolean [ ] IDENT_0 = new boolean [ ] { false } ; final java . util . concurrent . IDENT_1 IDENT_2 = new java . util . concurrent . METHOD_1 ( 1 ) ; org . IDENT_3 . IDENT_4 . lib . ui . IDENT_5 instance = new org . IDENT_3 . IDENT_4 . lib . ui . IDENT_6 . METHOD_2 ( 0 , true , null , new java . lang . METHOD_3 ( ) { @ org . IDENT_3 . IDENT_4 . lib . ui . Override public void run ( ) { IDENT_0 [ 0 ] = true ; } } , new java . lang . METHOD_3 ( ) { @ org . IDENT_3 . IDENT_4 . lib . ui . Override public void run ( ) { IDENT_2 . METHOD_4 ( ) ; } } , null , null ) ; instance . execute ( ) ; IDENT_2 . METHOD_5 ( 1 , TimeUnit . IDENT_7 ) ; "<AssertPlaceHolder>" ; } execute ( ) { java . io . IDENT_8 IDENT_9 = null ; try { if ( ( IDENT_10 ) == null ) { throw new org . apache . tools . IDENT_11 . METHOD_6 ( STRING_1 5 ) ; } if ( ( ! ( IDENT_10 . exists ( ) ) ) || ( ! ( IDENT_10 . METHOD_7 ( ) ) ) ) { throw new org . apache . tools . IDENT_11 . METHOD_6 ( STRING_1 9 ) ; } if ( ( IDENT_12 ) == null ) { throw new org . apache . tools . IDENT_11 . METHOD_6 ( STRING_2 ) ; } if ( ( ! ( IDENT_12 . exists ( ) ) ) || ( ! ( IDENT_12 . METHOD_8 ( ) ) ) ) { throw new org . apache . tools . IDENT_11 . METHOD_6 ( STRING_1 2 ) ; } if ( ( IDENT_13 ) == null ) { throw new org . apache . tools . IDENT_11 . METHOD_6 ( STRING_1 4 ) ; } IDENT_9 = new java . io . METHOD_9 ( new java . io . METHOD_10 ( IDENT_12 ) ) ; java . lang . String line = null ; java . util . Map < java . lang . String , java . util . Set < java . lang . String > > IDENT_14 = new java . util . HashMap < java . lang . String , java . util . Set < java . lang . String > > ( ) ; java . util . Map < java . lang . String , java . util . Set < java . lang . String > > IDENT_15 = new java . util . HashMap < java . lang . String , java . util . Set < java . lang . String > > ( ) ; java . util . Set < java . lang . String > IDENT_16 = new java . util . HashSet < java . lang . String > ( ) ; while ( ( line = IDENT_9 . METHOD_11 ( ) ) != null ) { if ( ( line . trim ( ) . length ( ) ) == 0 ) { continue ; } if ( line . startsWith ( STRING_3 7 ) ) continue ; if ( ! ( line . startsWith ( STRING_4 ) ) ) { java . lang . String [ ] p = line . split ( STRING_3 0 ) ; if ( ( p . length ) != 2 ) { if ( line . METHOD_12 ( STRING_3 0 ) ) { IDENT_14 . put ( line . substring ( 0 , ( ( line . length ( ) ) - 1 ) ) , null ) ; continue ; } else { throw new org . apache . tools . IDENT_11 . METHOD_6 ( ( ( ( STRING_3 6 + line ) + STRING_1 6 ) + ( IDENT_12 . getAbsolutePath ( ) ) ) ) ; } } java . util . Set < java . lang . String > IDENT_17 = IDENT_14 . get ( p [ 0 ] ) ; if ( IDENT_17 == null ) { IDENT_17 = new java . util . HashSet < java . lang . String > ( ) ; IDENT_14 . put ( p [ 0 ] , IDENT_17 ) ; } IDENT_17 . add ( p [ 1 ] ) ; } else { line = line . substring ( STRING_4 . length ( ) ) ; java . lang . String [ ] p = line . split ( STRING_3 0 ) ; if ( ( p . length ) != 2 ) { if ( line . METHOD_12 ( STRING_3 0 ) ) { IDENT_15 . put ( line . substring ( 0 , ( ( line . length ( ) ) - 1 ) ) , null ) ; IDENT_16 . add ( line . substring ( 0 , ( ( line . length ( ) ) - 1 ) ) ) ; continue ; } else { throw new org . apache . tools . IDENT_11 . METHOD_6 ( ( ( ( STRING_3 6 + line ) + STRING_1 6 ) + ( IDENT_12 . getAbsolutePath ( ) ) ) ) ; } } java . util . Set < java . lang . String > IDENT_17 = IDENT_15 . get ( p [ 0 ] ) ; if ( IDENT_17 == null ) { IDENT_17 = new java . util . HashSet < java . lang . String > ( ) ; IDENT_15 . put ( p [ 0 ] , IDENT_17 ) ; } IDENT_17 . add ( p [ 1 ] ) ; } } IDENT_9 . close ( ) ; org . apache . tools . IDENT_11 . IDENT_18 IDENT_19 = new org . apache . tools . IDENT_11 . METHOD_13 ( ) ; IDENT_19 . METHOD_14 ( IDENT_10 ) ; IDENT_19 . METHOD_15 ( new java . lang . String [ ] { STRING_1 7 } ) ; IDENT_19 . METHOD_16 ( ) ; java . lang . String [ ] IDENT_20 = IDENT_19 . METHOD_17 ( ) ; org . apache . tools . IDENT_11 . IDENT_21 . IDENT_22 IDENT_23 = ( ( org . apache . tools . IDENT_11 . IDENT_21 . IDENT_22 ) ( METHOD_18 ( ) . METHOD_19 ( STRING_5 0 ) ) ) ; for ( java . lang . String IDENT_24 : IDENT_20 ) { java . io . File IDENT_25 = new java . io . File ( IDENT_10 , IDENT_24 ) ; java . io . File IDENT_26 = new java . io . File ( IDENT_27 , IDENT_24 ) ; IDENT_26 . METHOD_20 ( ) ; IDENT_23 . METHOD_21 ( IDENT_25 ) ; IDENT_23 . METHOD_22 ( IDENT_26 ) ; IDENT_23 . execute ( ) ; org . apache . tools . IDENT_11 . METHOD_13 IDENT_28 = new org . apache . tools . IDENT_11 . METHOD_13 ( ) ; final java . lang . String IDENT_29 = STRING_3 ; IDENT_28 . METHOD_14 ( IDENT_26 ) ; IDENT_28 . METHOD_15 ( new java . lang . String [ ] { STRING_3 8 + IDENT_29 } ) ; IDENT_28 . METHOD_16 ( ) ; for ( java . lang . String IDENT_30 : IDENT_28 . METHOD_17 ( ) ) { java . io . File IDENT_31 = new java . io . File ( IDENT_26 , IDENT_30 ) ; java . io . File IDENT_32 = new java . io . File ( IDENT_26 , ( ( IDENT_30 . substring ( 0 , ( ( IDENT_30 . length ( ) ) - ( IDENT_29 . length ( ) ) ) ) ) + STRING_5 ) ) ; log ( ( ( ( STRING_6 + IDENT_30 ) + STRING_1 ) + IDENT_32 ) , IDENT_33 . IDENT_34 ) ; org . IDENT_35 . IDENT_36 . IDENT_37 . METHOD_23 ( IDENT_31 , IDENT_32 ) ; IDENT_31 . delete ( ) ; } } IDENT_19 . METHOD_14 ( IDENT_27 ) ; java . lang . String [ ] IDENT_38 = IDENT_14 . METHOD_24 ( ) . toArray ( new java . lang . String [ ] { "" } ) ; java . lang . String [ ] IDENT_39 = IDENT_15 . METHOD_24 ( ) . toArray ( new java . lang . String [ ] { "" } ) ; if ( ( IDENT_38 [ 0 ] ) != null ) { IDENT_19 . METHOD_15 ( IDENT_38 ) ; } if ( ( IDENT_16 . size ( ) ) > 0 ) { IDENT_19 . METHOD_25 ( IDENT_16 . toArray ( new java . lang . String [ ] { "" } ) ) ; } IDENT_19 . METHOD_16 ( ) ; if ( IDENT_13 . exists ( ) ) { IDENT_13 . delete ( ) ; } org . apache . tools . IDENT_11 . IDENT_21 . IDENT_40 IDENT_41 = ( ( org . apache . tools . IDENT_11 . IDENT_21 . IDENT_40 ) ( METHOD_18 ( ) . METHOD_19 ( STRING_7 ) ) ) ; IDENT_41 . METHOD_26 ( IDENT_13 ) ; for ( java . lang . String IDENT_42 : IDENT_19 . METHOD_17 ( ) ) { java . lang . String file = IDENT_42 . replace ( STRING_8 , STRING_3 2 ) ; org . apache . tools . IDENT_11 . types . IDENT_43 IDENT_44 = new org . apache . tools . IDENT_11 . types . METHOD_27 ( ) ; boolean IDENT_45 = false ; for ( java . lang . String IDENT_46 : IDENT_38 ) { if ( org . apache . tools . IDENT_11 . types . IDENT_47 . IDENT_48 . METHOD_28 ( IDENT_46 , file ) ) { java . util . Set < java . lang . String > IDENT_49 = IDENT_14 . get ( IDENT_46 ) ; if ( IDENT_49 != null ) { IDENT_45 = true ; IDENT_44 . METHOD_29 ( IDENT_49 . toArray ( new java . lang . String [ ] { "" } ) ) ; } else { org . apache . tools . IDENT_11 . types . IDENT_50 IDENT_51 = new org . apache . tools . IDENT_11 . types . METHOD_30 ( ) ; IDENT_51 . METHOD_31 ( IDENT_27 ) ; IDENT_51 . METHOD_15 ( file ) ; IDENT_41 . METHOD_32 ( IDENT_51 ) ; } } } if ( IDENT_45 ) { for ( java . lang . String IDENT_52 : IDENT_39 ) { if ( org . apache . tools . IDENT_11 . types . IDENT_47 . IDENT_48 . METHOD_28 ( IDENT_52 , file ) ) { java . util . Set < java . lang . String > IDENT_53 = IDENT_15 . get ( IDENT_52 ) ; if ( IDENT_53 != null ) { IDENT_44 . METHOD_33 ( IDENT_53 . toArray ( new java . lang . String [ ] { "" } ) ) ; } } } java . io . File IDENT_54 = new java . io . File ( IDENT_27 , file ) ; IDENT_44 . METHOD_21 ( IDENT_54 ) ; file = file . replaceAll ( STRING_9 , STRING_3 9 ) ; file = file . replaceAll ( STRING_3 5 , STRING_3 3 ) ; file = file . replaceAll ( STRING_3 1 , STRING_5 1 ) ; file = file . replaceAll ( STRING_1 0 , "" ) ; file = file . replaceAll ( STRING_1 8 , STRING_3 2 ) ; file = file . replaceAll ( STRING_3 4 , STRING_3 2 ) ; file = file . replaceAll ( STRING_1 1 , "" ) ; IDENT_44 . METHOD_34 ( file ) ; IDENT_41 . METHOD_35 ( IDENT_44 ) ; } } IDENT_41 . execute ( ) ; org . apache . tools . IDENT_11 . IDENT_21 . IDENT_55 delete = ( ( org . apache . tools . IDENT_11 . IDENT_21 . IDENT_55 ) ( METHOD_18 ( ) . METHOD_19 ( STRING_1 3 ) ) ) ; delete . METHOD_31 ( IDENT_27 ) ; delete . execute ( ) ; } catch ( java . io . IDENT_56 ex ) { java . util . logging . IDENT_57 . METHOD_36 ( org . IDENT_35 . IDENT_36 . IDENT_58 . class . getName ( ) ) . log ( IDENT_59 . IDENT_60 , null , ex ) ; } catch ( java . io . IOException ex ) { java . util . logging . IDENT_57 . METHOD_36 ( org . IDENT_35 . IDENT_36 . IDENT_58 . class . getName ( ) ) . log ( IDENT_59 . IDENT_60 , null , ex ) ; } finally { try { if ( IDENT_9 != null ) { IDENT_9 . close ( ) ; } } catch ( java . io . IOException ex ) { java . util . logging . IDENT_57 . METHOD_36 ( org . IDENT_35 . IDENT_36 . IDENT_58 . class . getName ( ) ) . log ( IDENT_59 . IDENT_60 , null , ex ) ; } } }
org . junit . Assert . assertTrue ( IDENT_0 [ 0 ] ) 