METHOD_0 ( ) { com . IDENT_0 . cloud . IDENT_1 . filter . core . service . mapper . IDENT_2 mapper = new com . IDENT_0 . cloud . IDENT_1 . filter . core . service . mapper . METHOD_1 ( STRING_0 ) ; org . springframework . cloud . IDENT_1 . model . IDENT_3 input = org . springframework . cloud . IDENT_1 . model . fixture . IDENT_4 . METHOD_2 ( ) ; final org . springframework . cloud . IDENT_1 . model . IDENT_3 IDENT_5 = mapper . METHOD_3 ( input ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { java . util . ArrayList IDENT_6 = new java . util . ArrayList ( ) ; java . util . HashMap metadata = new java . util . HashMap ( ) ; metadata . put ( STRING_1 , STRING_2 1 ) ; metadata . put ( STRING_3 , STRING_4 ) ; IDENT_6 . add ( new org . springframework . cloud . IDENT_1 . model . METHOD_5 ( STRING_5 , STRING_6 , STRING_7 ) ) ; IDENT_6 . add ( new org . springframework . cloud . IDENT_1 . model . METHOD_5 ( STRING_8 , STRING_9 , STRING_10 , metadata ) ) ; java . util . List services = java . util . Collections . singletonList ( new org . springframework . cloud . IDENT_1 . model . METHOD_6 ( STRING_2 0 , STRING_2 , STRING_2 2 , true , IDENT_6 ) ) ; return new org . springframework . cloud . IDENT_1 . model . METHOD_7 ( services ) ; }
org . junit . Assert . assertEquals ( METHOD_4 ( ) , IDENT_5 ) 