METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . model . IDENT_2 IDENT_3 = com . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_1 ( ) ; com . IDENT_0 . IDENT_4 . IDENT_5 . model . IDENT_7 IDENT_8 = new com . IDENT_0 . IDENT_4 . IDENT_5 . model . METHOD_2 ( STRING_0 , java . time . IDENT_9 . now ( ) . METHOD_3 ( 1 , IDENT_10 . IDENT_11 ) , IDENT_3 ) ; IDENT_12 . METHOD_4 ( IDENT_8 ) ; com . IDENT_0 . IDENT_1 . model . IDENT_2 IDENT_13 = com . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_1 ( ) ; com . IDENT_0 . IDENT_4 . IDENT_5 . model . METHOD_2 IDENT_14 = new com . IDENT_0 . IDENT_4 . IDENT_5 . model . METHOD_2 ( STRING_1 , java . time . IDENT_9 . now ( ) . METHOD_3 ( 1 , IDENT_10 . IDENT_11 ) , IDENT_13 ) ; IDENT_12 . METHOD_4 ( IDENT_14 ) ; com . IDENT_0 . IDENT_1 . model . IDENT_2 IDENT_15 = com . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_1 ( ) ; com . IDENT_0 . IDENT_4 . IDENT_5 . model . METHOD_2 IDENT_16 = new com . IDENT_0 . IDENT_4 . IDENT_5 . model . METHOD_2 ( STRING_2 , java . time . IDENT_9 . now ( ) . METHOD_3 ( 1 , IDENT_10 . IDENT_11 ) , IDENT_15 ) ; IDENT_12 . METHOD_4 ( IDENT_16 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { java . util . Map < java . lang . String , com . IDENT_0 . IDENT_4 . IDENT_5 . model . METHOD_2 > IDENT_17 = new java . util . concurrent . METHOD_6 ( ) ; try { java . util . List < com . IDENT_0 . IDENT_4 . IDENT_5 . model . METHOD_2 > IDENT_18 = IDENT_19 . query ( STRING_3 , ( java . sql . ResultSet rs , int IDENT_20 ) -> { com . IDENT_0 . IDENT_4 . IDENT_5 . model . METHOD_2 IDENT_8 = new com . IDENT_0 . IDENT_4 . IDENT_5 . model . METHOD_2 ( ) ; try { IDENT_8 . METHOD_7 ( rs . getString ( STRING_4 ) ) ; IDENT_8 . METHOD_8 ( java . time . IDENT_9 . parse ( rs . getString ( STRING_5 ) ) ) ; IDENT_8 . METHOD_9 ( mapper . METHOD_10 ( rs . getString ( STRING_6 ) , . class ) ) ; } catch ( e ) { throw new < com . IDENT_0 . IDENT_4 . IDENT_5 . persistence . e > java . sql . METHOD_11 ( ) ; } return IDENT_8 ; } ) ; IDENT_18 . METHOD_12 ( ( IDENT_8 ) -> IDENT_17 . put ( IDENT_8 . METHOD_13 ( ) , IDENT_8 ) ) ; } catch ( org . springframework . dao . IDENT_21 e ) { throw new com . IDENT_0 . IDENT_4 . IDENT_5 . exception . METHOD_14 ( e ) ; } return IDENT_17 ; }
org . junit . Assert . assertEquals ( 3 , IDENT_12 . METHOD_5 ( ) . size ( ) ) 