METHOD_0 ( ) { org . apache . hadoop . yarn . service . provider . IDENT_0 . IDENT_1 IDENT_2 = new org . apache . hadoop . yarn . service . provider . IDENT_0 . METHOD_1 ( ) ; org . apache . hadoop . fs . IDENT_3 IDENT_4 = mock ( org . apache . hadoop . fs . IDENT_3 . class ) ; when ( IDENT_4 . exists ( any ( ) ) ) . thenReturn ( true ) ; java . lang . String IDENT_5 = STRING_0 ; org . apache . hadoop . yarn . service . api . records . IDENT_6 IDENT_7 = new org . apache . hadoop . yarn . service . api . records . METHOD_2 ( ) ; IDENT_7 . METHOD_3 ( STRING_1 ) ; try { IDENT_2 . METHOD_4 ( IDENT_7 , IDENT_5 , IDENT_4 ) ; org . junit . Assert . fail ( ( ( org . apache . hadoop . yarn . service . IDENT_8 . IDENT_9 . IDENT_10 ) + STRING_2 ) ) ; } catch ( java . lang . IllegalArgumentException e ) { java . lang . String IDENT_11 = java . lang . String . format ( IDENT_12 . IDENT_13 , IDENT_5 , STRING_3 , IDENT_7 . METHOD_5 ( ) ) ; "<AssertPlaceHolder>" ; } IDENT_7 . METHOD_3 ( STRING_4 ) ; try { IDENT_2 . METHOD_4 ( IDENT_7 , IDENT_5 , IDENT_4 ) ; } catch ( java . lang . IllegalArgumentException e ) { org . junit . Assert . fail ( ( ( org . apache . hadoop . yarn . service . IDENT_8 . IDENT_9 . IDENT_14 ) + ( e . METHOD_6 ( ) ) ) ) ; } } METHOD_5 ( ) { return IDENT_15 ; }
org . junit . Assert . assertEquals ( IDENT_11 , e . METHOD_6 ( ) ) 