test ( ) { com . orientechnologies . orient . core . db . IDENT_0 session = IDENT_1 . METHOD_0 ( com . orientechnologies . orient . core . sql . IDENT_2 . class . METHOD_1 ( ) , STRING_0 , STRING_0 ) ; session . command ( STRING_1 ) ; session . command ( STRING_2 ) ; session . command ( STRING_3 ) ; session . command ( STRING_4 ) ; try ( com . orientechnologies . orient . core . sql . executor . IDENT_3 res = session . query ( STRING_5 ) ) { "<AssertPlaceHolder>" ; } } stream ( ) { com . orientechnologies . orient . object . db . IDENT_4 . IDENT_5 IDENT_6 = METHOD_2 ( ) ; IDENT_6 = IDENT_7 . save ( IDENT_6 ) ; com . orientechnologies . orient . object . db . IDENT_4 . IDENT_8 IDENT_9 = new com . orientechnologies . orient . object . db . IDENT_4 . METHOD_3 ( ) ; IDENT_9 . METHOD_4 ( STRING_6 ) ; com . orientechnologies . orient . object . db . IDENT_4 . METHOD_3 IDENT_10 = new com . orientechnologies . orient . object . db . IDENT_4 . METHOD_3 ( ) ; IDENT_10 . METHOD_4 ( STRING_7 ) ; IDENT_6 . METHOD_5 ( ) . add ( 0 , IDENT_9 ) ; IDENT_6 . METHOD_5 ( ) . add ( IDENT_6 . METHOD_5 ( ) . size ( ) , IDENT_10 ) ; IDENT_6 = IDENT_7 . save ( IDENT_6 ) ; count = 0 ; IDENT_6 . METHOD_5 ( ) . stream ( ) . METHOD_6 ( ( IDENT_11 ) -> { assertNotNull ( IDENT_11 ) ; ( count ) ++ ; } ) ; org . junit . Assert . assertEquals ( IDENT_6 . METHOD_5 ( ) . size ( ) , count ) ; }
org . junit . Assert . assertEquals ( res . stream ( ) . count ( ) , 1 ) 