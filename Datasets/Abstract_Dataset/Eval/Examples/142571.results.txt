METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; com . orientechnologies . orient . core . metadata . schema . IDENT_1 clazz = com . orientechnologies . orient . core . sql . executor . IDENT_2 . db . METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( IDENT_0 ) ; clazz . METHOD_4 ( "name" , IDENT_3 . IDENT_4 ) ; clazz . METHOD_4 ( STRING_1 , IDENT_3 . IDENT_4 ) ; clazz . METHOD_5 ( ( IDENT_0 + STRING_2 ) , IDENT_1 . IDENT_5 . IDENT_6 , "name" ) ; clazz . METHOD_5 ( ( IDENT_0 + STRING_3 ) , IDENT_1 . IDENT_5 . IDENT_6 , STRING_1 ) ; for ( int i = 0 ; i < 10 ; i ++ ) { com . orientechnologies . orient . core . record . impl . IDENT_7 doc = com . orientechnologies . orient . core . sql . executor . IDENT_2 . db . newInstance ( IDENT_0 ) ; doc . setProperty ( "name" , ( "name" + i ) ) ; doc . setProperty ( STRING_1 , ( STRING_1 + i ) ) ; doc . save ( ) ; } com . orientechnologies . orient . core . sql . executor . IDENT_8 result = com . orientechnologies . orient . core . sql . executor . IDENT_2 . db . query ( ( ( STRING_4 + IDENT_0 ) + STRING_5 ) ) ; com . orientechnologies . orient . core . sql . executor . IDENT_9 . METHOD_6 ( result ) ; "<AssertPlaceHolder>" ; result . close ( ) ; } hasNext ( ) { return this . IDENT_10 . hasNext ( ) ; }
org . junit . Assert . assertFalse ( result . hasNext ( ) ) 