METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . IDENT_1 < com . tinkerpop . IDENT_2 . IDENT_3 . orient . IDENT_4 > result = com . orientechnologies . orient . graph . sql . IDENT_5 . graph . command ( new com . orientechnologies . orient . core . sql . query . IDENT_6 < com . tinkerpop . IDENT_2 . IDENT_3 . orient . IDENT_4 > ( IDENT_0 ) ) . execute ( ) ; "<AssertPlaceHolder>" ; for ( com . tinkerpop . IDENT_2 . IDENT_3 . orient . IDENT_4 d : result ) { com . tinkerpop . IDENT_2 . IDENT_3 . orient . IDENT_4 IDENT_7 = d . getProperty ( STRING_1 ) ; java . lang . Object name = IDENT_7 . getProperty ( "name" ) ; java . lang . IDENT_1 < com . tinkerpop . IDENT_2 . IDENT_3 . orient . IDENT_4 > IDENT_8 = ( ( java . lang . IDENT_1 < com . tinkerpop . IDENT_2 . IDENT_3 . orient . IDENT_4 > ) ( d . getProperty ( STRING_2 ) ) ) ; java . lang . Object IDENT_9 = IDENT_8 . iterator ( ) . next ( ) . getProperty ( "name" ) ; System . out . println ( ( ( ( ( ( STRING_3 + name ) + STRING_4 ) + IDENT_9 ) + STRING_5 ) + ( d . getProperty ( STRING_6 ) ) ) ) ; } } iterator ( ) { return new com . tinkerpop . IDENT_2 . IDENT_3 . orient . METHOD_1 ( super . graph , super . iterator ( ) , IDENT_10 ) ; }
org . junit . Assert . assertTrue ( result . iterator ( ) . hasNext ( ) ) 