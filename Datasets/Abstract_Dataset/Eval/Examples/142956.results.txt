METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 user = IDENT_4 . METHOD_1 ( STRING_0 0 , STRING_1 , STRING_2 ) ; IDENT_5 = IDENT_6 . METHOD_2 ( ) ; java . lang . String IDENT_7 = STRING_3 ; org . IDENT_0 . common . interfaces . control . IDENT_8 IDENT_9 = IDENT_10 . METHOD_3 ( ) ; org . IDENT_0 . common . interfaces . control . IDENT_11 IDENT_12 = org . easymock . IDENT_13 . EasyMock . METHOD_4 ( org . IDENT_0 . common . interfaces . control . IDENT_11 . class ) ; br . edu . IDENT_14 . IDENT_15 . IDENT_16 . IDENT_17 . IDENT_18 IDENT_19 = new br . edu . IDENT_14 . IDENT_15 . IDENT_16 . IDENT_17 . METHOD_5 ( new br . edu . IDENT_14 . IDENT_15 . IDENT_16 . IDENT_17 . METHOD_6 ( STRING_4 , STRING_0 , STRING_5 ) , STRING_5 ) ; br . edu . IDENT_14 . IDENT_15 . IDENT_16 . IDENT_20 . IDENT_21 . METHOD_7 ( IDENT_5 , IDENT_19 , IDENT_12 , org . IDENT_0 . common . interfaces . control . IDENT_11 . class ) ; try { IDENT_9 . METHOD_8 ( IDENT_12 , ( ( ( user . METHOD_9 ( ) ) + STRING_6 ) + ( user . METHOD_10 ( ) ) ) ) ; } catch ( br . edu . IDENT_14 . IDENT_15 . IDENT_16 . IDENT_22 e ) { } org . IDENT_0 . common . IDENT_23 . IDENT_24 . IDENT_25 IDENT_26 = IDENT_27 . METHOD_11 ( STRING_0 1 , STRING_0 2 ) ; java . lang . String IDENT_28 = STRING_7 ; br . edu . IDENT_14 . IDENT_15 . IDENT_16 . IDENT_17 . METHOD_5 IDENT_29 = IDENT_30 . METHOD_12 ( IDENT_5 , IDENT_26 , IDENT_28 ) ; IDENT_6 . METHOD_13 ( IDENT_5 , IDENT_26 , IDENT_29 ) ; IDENT_31 . METHOD_14 ( IDENT_5 , IDENT_29 ) ; br . edu . IDENT_14 . IDENT_15 . IDENT_16 . IDENT_17 . METHOD_5 IDENT_32 = IDENT_33 . METHOD_15 ( IDENT_5 , user , IDENT_7 ) ; org . IDENT_0 . common . interfaces . IDENT_34 IDENT_35 = ( ( org . IDENT_0 . common . interfaces . IDENT_34 ) ( br . edu . IDENT_14 . IDENT_15 . IDENT_16 . IDENT_20 . IDENT_21 . METHOD_16 ( IDENT_32 ) ) ) ; org . IDENT_0 . IDENT_36 . util . IDENT_37 IDENT_38 = new org . IDENT_0 . IDENT_36 . util . METHOD_17 ( IDENT_29 ) ; org . IDENT_0 . common . interfaces . to . IDENT_39 spec = new org . IDENT_0 . common . interfaces . to . METHOD_18 ( 0 , new org . IDENT_0 . common . IDENT_23 . job . METHOD_19 ( STRING_8 ) , 1 , "" , 1 , 0 , 0 ) ; IDENT_40 . METHOD_20 ( IDENT_5 , new br . edu . IDENT_14 . IDENT_15 . IDENT_16 . IDENT_20 . util . METHOD_21 ( IDENT_32 , IDENT_35 ) , spec , IDENT_38 ) ; "<AssertPlaceHolder>" ; org . IDENT_0 . common . interfaces . to . IDENT_41 IDENT_42 = new org . IDENT_0 . common . interfaces . to . METHOD_22 ( user . METHOD_9 ( ) , user . METHOD_10 ( ) , IDENT_7 , org . IDENT_0 . common . interfaces . to . IDENT_43 . IDENT_44 ) ; java . util . List < org . IDENT_0 . common . interfaces . to . METHOD_22 > IDENT_45 = br . edu . IDENT_14 . IDENT_15 . IDENT_16 . IDENT_20 . IDENT_21 . METHOD_23 ( IDENT_42 ) ; IDENT_46 . METHOD_24 ( IDENT_45 ) ; org . IDENT_0 . common . interfaces . to . IDENT_47 IDENT_48 = new org . IDENT_0 . common . interfaces . to . METHOD_25 ( IDENT_26 , org . IDENT_0 . common . interfaces . to . IDENT_49 . IDENT_50 , IDENT_32 . METHOD_26 ( ) . toString ( ) ) ; java . util . List < org . IDENT_0 . common . interfaces . to . METHOD_25 > IDENT_51 = br . edu . IDENT_14 . IDENT_15 . IDENT_16 . IDENT_20 . IDENT_21 . METHOD_23 ( IDENT_48 ) ; IDENT_52 . METHOD_27 ( IDENT_51 ) ; } METHOD_28 ( br . edu . IDENT_14 . IDENT_15 . IDENT_16 . IDENT_17 . IDENT_53 ) { br . edu . IDENT_14 . IDENT_15 . IDENT_16 . container . IDENT_54 IDENT_55 = METHOD_29 ( application , org . IDENT_0 . IDENT_36 . util . IDENT_56 ) ; return br . edu . IDENT_14 . IDENT_15 . IDENT_16 . IDENT_20 . IDENT_21 . METHOD_30 ( application , IDENT_57 , IDENT_55 . METHOD_31 ( ) ) ; }
org . junit . Assert . assertTrue ( IDENT_10 . METHOD_28 ( IDENT_32 . METHOD_26 ( ) ) ) 