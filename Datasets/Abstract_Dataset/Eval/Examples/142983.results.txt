METHOD_0 ( ) { final com . IDENT_0 . IDENT_1 . concurrent . IDENT_2 < java . lang . String > res = com . IDENT_0 . IDENT_1 . concurrent . IDENT_3 . METHOD_1 ( ( ) -> STRING_0 , 100 , com . IDENT_0 . IDENT_1 . concurrent . IDENT_4 ) . METHOD_2 ( ( result ) -> METHOD_3 ( new java . lang . RuntimeException ( STRING_1 ) ) ) . map ( ( result ) -> STRING_2 ) . METHOD_4 ( ( error ) -> STRING_3 ) . METHOD_4 ( ( error ) -> STRING_4 ) . map ( ( result ) -> { throw new com . IDENT_0 . IDENT_1 . concurrent . METHOD_5 ( new java . lang . RuntimeException ( STRING_5 ) ) ; } ) ; try { res . get ( ) ; org . junit . Assert . fail ( STRING_6 ) ; } catch ( java . lang . IDENT_5 | java . util . concurrent . IDENT_6 e ) { final java . lang . String IDENT_7 = e . METHOD_6 ( ) . getClass ( ) . getName ( ) ; "<AssertPlaceHolder>" ; } } getName ( ) { return name ; }
org . junit . Assert . assertEquals ( IDENT_7 , com . IDENT_0 . IDENT_1 . concurrent . RuntimeException . class . getName ( ) ) 