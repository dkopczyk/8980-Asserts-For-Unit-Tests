METHOD_0 ( ) { is = new org . IDENT_0 . proxy . io . METHOD_1 ( new java . io . ByteArrayInputStream ( IDENT_1 . getBytes ( ) ) ) ; try { java . lang . StringBuilder IDENT_2 = new java . lang . StringBuilder ( ) ; byte [ ] b = new byte [ 12 ] ; int IDENT_3 ; while ( ( IDENT_3 = is . read ( b , 2 , 7 ) ) > ( - 1 ) ) IDENT_2 . append ( new java . lang . String ( b , 2 , IDENT_3 ) ) ; "<AssertPlaceHolder>" ; } catch ( java . io . IOException IDENT_4 ) { org . junit . Assert . fail ( ( STRING_0 + IDENT_4 ) ) ; IDENT_4 . printStackTrace ( ) ; } } toString ( ) { java . lang . String s = ( ( ( ( ( ( ( ( ( ( ( ( ( ( STRING_1 + ( "\n" + STRING_2 ) ) + ( version ) ) + "\n" ) + STRING_3 ) + ( command ) ) + "\n" ) + STRING_4 ) + ( IDENT_5 ) ) + "\n" ) + STRING_5 ) + ( host ) ) + "\n" ) + STRING_6 ) + ( port ) ) + "\n" ; return s ; }
org . junit . Assert . assertEquals ( result , IDENT_2 . toString ( ) ) 