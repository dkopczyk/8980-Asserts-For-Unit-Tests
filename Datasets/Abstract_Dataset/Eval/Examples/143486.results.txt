METHOD_0 ( ) { com . github . IDENT_0 . IDENT_1 . IDENT_2 < com . github . IDENT_0 . IDENT_1 . IDENT_3 , com . github . IDENT_0 . IDENT_1 . IDENT_4 > IDENT_5 = METHOD_1 ( IDENT_3 . IDENT_6 ) ; com . github . IDENT_0 . IDENT_1 . IDENT_2 < com . github . IDENT_0 . IDENT_1 . IDENT_3 , com . github . IDENT_0 . IDENT_1 . IDENT_4 > IDENT_7 = METHOD_1 ( IDENT_3 . IDENT_8 ) ; IDENT_5 . METHOD_2 ( IDENT_7 ) ; IDENT_7 . METHOD_3 ( IDENT_5 ) ; IDENT_9 = false ; IDENT_5 . METHOD_4 ( new com . github . IDENT_0 . IDENT_1 . IDENT_10 . IDENT_11 < com . github . IDENT_0 . IDENT_1 . IDENT_12 . IDENT_13 < com . github . IDENT_0 . IDENT_1 . IDENT_3 , com . github . IDENT_0 . IDENT_1 . IDENT_4 > > ( ) { @ com . github . IDENT_0 . IDENT_1 . Override public void METHOD_5 ( com . github . IDENT_0 . IDENT_1 . IDENT_12 . IDENT_13 < com . github . IDENT_0 . IDENT_1 . IDENT_3 , com . github . IDENT_0 . IDENT_1 . IDENT_4 > IDENT_14 ) { IDENT_9 = true ; } } ) ; com . github . IDENT_0 . IDENT_1 . IDENT_12 . IDENT_13 < com . github . IDENT_0 . IDENT_1 . IDENT_3 , com . github . IDENT_0 . IDENT_1 . IDENT_4 > IDENT_15 = new com . github . IDENT_0 . IDENT_1 . IDENT_12 . METHOD_6 ( IDENT_7 . METHOD_7 ( ) , IDENT_3 . IDENT_16 , IDENT_4 . IDENT_17 ) ; IDENT_7 . METHOD_8 ( IDENT_15 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( com . github . IDENT_0 . IDENT_1 . IDENT_12 . METHOD_6 ) { assert IDENT_15 != null : com . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_18 ; if ( IDENT_15 . METHOD_9 ( ) ) { METHOD_10 ( IDENT_15 ) ; } else if ( ! ( METHOD_11 ( IDENT_15 . METHOD_12 ( ) ) ) ) { METHOD_10 ( IDENT_15 ) ; if ( ( IDENT_19 ) != null ) { IDENT_19 . METHOD_8 ( IDENT_15 ) ; } } }
org . junit . Assert . assertTrue ( IDENT_9 ) 