METHOD_0 ( ) { com . github . IDENT_0 . IDENT_1 . IDENT_2 < com . github . IDENT_0 . IDENT_1 . IDENT_3 , com . github . IDENT_0 . IDENT_1 . IDENT_4 > IDENT_5 = METHOD_1 ( IDENT_3 . IDENT_6 ) ; com . github . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 < com . github . IDENT_0 . IDENT_1 . IDENT_3 , com . github . IDENT_0 . IDENT_1 . IDENT_4 > IDENT_9 = new com . github . IDENT_0 . IDENT_1 . IDENT_7 . METHOD_2 ( IDENT_3 . IDENT_10 , IDENT_3 . IDENT_6 , IDENT_4 . IDENT_11 ) ; IDENT_12 = null ; IDENT_5 . METHOD_3 ( new com . github . IDENT_0 . IDENT_1 . IDENT_13 . IDENT_14 < com . github . IDENT_0 . IDENT_1 . IDENT_7 . METHOD_2 < com . github . IDENT_0 . IDENT_1 . IDENT_3 , com . github . IDENT_0 . IDENT_1 . IDENT_4 > , java . lang . Object [ ] > ( ) { @ com . github . IDENT_0 . IDENT_1 . Override public void METHOD_4 ( com . github . IDENT_0 . IDENT_1 . IDENT_7 . METHOD_2 < com . github . IDENT_0 . IDENT_1 . IDENT_3 , com . github . IDENT_0 . IDENT_1 . IDENT_4 > t , java . lang . Object [ ] a ) { IDENT_12 = t ; } } ) ; IDENT_5 . METHOD_5 ( IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( T , T , T ) { IDENT_15 . add ( IDENT_16 ) ; IDENT_15 . add ( IDENT_17 ) ; IDENT_15 . add ( IDENT_18 ) ; }
org . junit . Assert . assertEquals ( IDENT_9 , IDENT_12 ) 