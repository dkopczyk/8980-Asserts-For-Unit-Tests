METHOD_0 ( ) { eu . IDENT_0 . xml . IDENT_1 IDENT_2 = ( ( eu . IDENT_0 . xml . IDENT_1 ) ( eu . IDENT_0 . xml . util . IDENT_3 . METHOD_1 ( getClass ( ) . getResourceAsStream ( STRING_0 ) , true ) ) ) ; eu . IDENT_0 . xml . IDENT_4 IDENT_5 = IDENT_2 . METHOD_2 ( ) ; eu . IDENT_0 . xml . IDENT_6 IDENT_7 = ( ( eu . IDENT_0 . xml . IDENT_6 ) ( eu . IDENT_0 . xml . util . IDENT_3 . METHOD_1 ( getClass ( ) . getResourceAsStream ( STRING_1 ) , true ) ) ) ; eu . IDENT_0 . util . IDENT_8 IDENT_9 = new eu . IDENT_0 . util . METHOD_3 ( IDENT_7 . METHOD_4 ( ) . get ( 0 ) ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( eu . IDENT_0 . xml . IDENT_4 , eu . IDENT_0 . IDENT_10 . internal . IDENT_11 , eu . IDENT_0 . IDENT_12 . IDENT_13 ) { if ( ! ( IDENT_5 . METHOD_6 ( ) . equals ( policy . METHOD_6 ( ) ) ) ) { eu . IDENT_0 . util . METHOD_3 . logger . METHOD_7 ( STRING_2 ) ; return false ; } if ( ! ( METHOD_8 ( IDENT_5 . getMessage ( ) , policy . getMessage ( ) ) ) ) { eu . IDENT_0 . util . METHOD_3 . logger . METHOD_7 ( STRING_3 ) ; return false ; } if ( ! ( METHOD_9 ( IDENT_5 . METHOD_10 ( ) , policy . METHOD_10 ( ) ) ) ) { eu . IDENT_0 . util . METHOD_3 . logger . METHOD_7 ( STRING_4 ) ; return false ; } if ( ! ( METHOD_11 ( IDENT_5 . METHOD_12 ( ) , policy . METHOD_12 ( ) , IDENT_14 ) ) ) { eu . IDENT_0 . util . METHOD_3 . logger . METHOD_7 ( STRING_5 ) ; return false ; } if ( ! ( METHOD_13 ( IDENT_5 . METHOD_14 ( ) , policy . METHOD_14 ( ) ) ) ) { eu . IDENT_0 . util . METHOD_3 . logger . METHOD_7 ( STRING_6 ) ; return false ; } if ( ! ( METHOD_15 ( IDENT_5 . METHOD_16 ( ) , policy . METHOD_16 ( ) ) ) ) { eu . IDENT_0 . util . METHOD_3 . logger . METHOD_7 ( STRING_7 ) ; return false ; } if ( ( ( policy . METHOD_17 ( ) ) == false ) && ( IDENT_5 . METHOD_18 ( ) ) ) { eu . IDENT_0 . util . METHOD_3 . logger . METHOD_7 ( STRING_8 ) ; return false ; } if ( ( IDENT_5 . METHOD_18 ( ) ) && ( ! ( METHOD_19 ( ) ) ) ) { eu . IDENT_0 . util . METHOD_3 . logger . METHOD_7 ( STRING_9 ) ; } if ( IDENT_15 != null ) { return METHOD_20 ( IDENT_5 , IDENT_15 ) ; } else { return true ; } }
org . junit . Assert . assertTrue ( IDENT_9 . METHOD_5 ( IDENT_5 , null , null ) ) 