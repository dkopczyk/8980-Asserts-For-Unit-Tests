METHOD_0 ( ) { eu . IDENT_0 . IDENT_1 . IDENT_2 IDENT_1 = new eu . IDENT_0 . IDENT_1 . METHOD_1 ( new eu . IDENT_0 . IDENT_1 . METHOD_2 ( new eu . IDENT_0 . IDENT_1 . METHOD_3 ( ) ) , null ) ; eu . IDENT_0 . IDENT_3 . user . IDENT_4 engine = null ; eu . IDENT_0 . IDENT_5 . internal . user . IDENT_6 . IDENT_7 IDENT_8 = new eu . IDENT_0 . IDENT_5 . internal . user . IDENT_6 . METHOD_4 ( eu . IDENT_0 . util . IDENT_9 . METHOD_5 ( ) , eu . IDENT_0 . util . IDENT_9 . METHOD_5 ( ) ) ; eu . IDENT_0 . IDENT_5 . internal . user . IDENT_6 . IDENT_10 IDENT_11 = new eu . IDENT_0 . IDENT_5 . internal . user . IDENT_6 . METHOD_6 ( eu . IDENT_0 . util . IDENT_9 . METHOD_5 ( ) ) ; java . util . IDENT_12 random = new java . util . METHOD_7 ( INT_0 ) ; eu . IDENT_0 . IDENT_5 . internal . user . IDENT_6 . IDENT_13 IDENT_14 = new eu . IDENT_0 . IDENT_5 . internal . user . IDENT_6 . METHOD_8 ( eu . IDENT_0 . util . IDENT_9 . METHOD_9 ( ) , random , eu . IDENT_0 . IDENT_5 . IDENT_15 . IDENT_16 . IDENT_17 ) ; eu . IDENT_0 . IDENT_5 . internal . user . IDENT_6 . IDENT_18 IDENT_19 = new eu . IDENT_0 . IDENT_5 . internal . user . IDENT_6 . METHOD_10 ( IDENT_14 ) ; eu . IDENT_0 . IDENT_5 . internal . user . IDENT_6 . IDENT_20 IDENT_21 = new eu . IDENT_0 . IDENT_5 . internal . user . IDENT_6 . METHOD_11 ( IDENT_8 , IDENT_11 , IDENT_1 , IDENT_19 , engine , random , eu . IDENT_0 . IDENT_5 . IDENT_22 . user . IDENT_23 . IDENT_24 . IDENT_25 , new eu . IDENT_0 . IDENT_3 . user . METHOD_12 ( ) ) ; java . net . URI IDENT_26 = java . net . URI . create ( STRING_0 ) ; eu . IDENT_0 . xml . IDENT_27 IDENT_28 = new eu . IDENT_0 . xml . METHOD_13 ( ) ; eu . IDENT_0 . xml . IDENT_29 IDENT_30 = new eu . IDENT_0 . xml . METHOD_14 ( ) ; IDENT_30 . METHOD_15 ( IDENT_26 ) ; IDENT_28 . METHOD_16 ( IDENT_30 ) ; IDENT_21 . METHOD_17 ( eu . IDENT_0 . IDENT_5 . IDENT_22 . user . IDENT_23 . IDENT_24 . IDENT_31 , IDENT_28 ) ; eu . IDENT_0 . xml . METHOD_13 res = IDENT_21 . METHOD_18 ( eu . IDENT_0 . IDENT_5 . IDENT_22 . user . IDENT_23 . IDENT_24 . IDENT_31 , IDENT_26 ) ; "<AssertPlaceHolder>" ; IDENT_21 . METHOD_0 ( eu . IDENT_0 . IDENT_5 . IDENT_22 . user . IDENT_23 . IDENT_24 . IDENT_31 , IDENT_26 ) ; res = IDENT_21 . METHOD_18 ( eu . IDENT_0 . IDENT_5 . IDENT_22 . user . IDENT_23 . IDENT_24 . IDENT_31 , IDENT_26 ) ; } METHOD_18 ( java . net . URI , java . lang . String ) { if ( ! ( IDENT_32 . containsKey ( IDENT_33 ) ) ) { return null ; } else { byte [ ] item = IDENT_32 . get ( IDENT_33 ) . get ( key ) ; if ( item != null ) { item = java . util . Arrays . METHOD_19 ( item , item . length ) ; } return item ; } }
org . junit . Assert . assertNotNull ( res ) 