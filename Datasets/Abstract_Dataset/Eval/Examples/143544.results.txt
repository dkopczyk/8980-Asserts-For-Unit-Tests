METHOD_0 ( ) { try { eu . IDENT_0 . xml . IDENT_1 IDENT_2 = ( ( eu . IDENT_0 . xml . IDENT_1 ) ( eu . IDENT_0 . xml . util . IDENT_3 . METHOD_1 ( this . getClass ( ) . getResourceAsStream ( eu . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 ) , true ) ) ) ; eu . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . logger . info ( STRING_0 ) ; IDENT_2 . METHOD_2 ( true ) ; IDENT_9 . getInstance ( eu . IDENT_0 . IDENT_10 . IDENT_11 . class ) . METHOD_3 ( IDENT_2 . METHOD_4 ( ) , IDENT_2 ) ; IDENT_12 . getInstance ( eu . IDENT_0 . IDENT_10 . IDENT_11 . class ) . METHOD_3 ( IDENT_2 . METHOD_4 ( ) , IDENT_2 ) ; eu . IDENT_0 . xml . IDENT_13 IDENT_14 = null ; try { IDENT_14 = IDENT_15 . METHOD_5 ( IDENT_2 , IDENT_16 , IDENT_17 , hash , IDENT_18 , IDENT_19 , null ) ; } catch ( java . lang . Exception e ) { eu . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . logger . info ( STRING_1 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( IDENT_14 ) ; METHOD_7 ( ) ; eu . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . logger . info ( STRING_2 ) ; } catch ( java . lang . Exception e ) { eu . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . logger . info ( e . getMessage ( ) ) ; org . junit . Assert . fail ( e . getMessage ( ) ) ; } } METHOD_5 ( eu . IDENT_0 . xml . IDENT_1 , eu . IDENT_0 . xml . IDENT_20 , java . net . URI , java . net . URI , java . net . URI , java . net . URI , java . util . List ) { return METHOD_5 ( IDENT_16 , IDENT_21 . METHOD_8 ( ) . METHOD_9 ( ) . size ( ) , IDENT_18 , IDENT_17 , IDENT_19 , IDENT_22 ) ; }
org . junit . Assert . assertTrue ( false ) 