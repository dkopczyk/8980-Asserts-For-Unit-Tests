METHOD_0 ( ) { try { eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . logger . info ( STRING_0 ) ; eu . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_6 . IDENT_7 IDENT_8 = IDENT_9 . getInstance ( eu . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_6 . IDENT_7 . class ) ; eu . IDENT_0 . xml . IDENT_10 IDENT_11 = new eu . IDENT_0 . xml . METHOD_1 ( ) ; IDENT_11 . METHOD_2 ( java . net . URI . create ( STRING_1 ) ) ; IDENT_11 . METHOD_3 ( ) . add ( java . net . URI . create ( STRING_2 ) ) ; eu . IDENT_0 . xml . METHOD_1 IDENT_12 = new eu . IDENT_0 . xml . METHOD_1 ( ) ; IDENT_12 . METHOD_2 ( java . net . URI . create ( STRING_1 ) ) ; IDENT_12 . METHOD_3 ( ) . add ( java . net . URI . create ( STRING_2 ) ) ; eu . IDENT_0 . xml . METHOD_1 IDENT_13 = new eu . IDENT_0 . xml . METHOD_1 ( ) ; IDENT_13 . METHOD_2 ( java . net . URI . create ( STRING_1 ) ) ; IDENT_13 . METHOD_3 ( ) . add ( java . net . URI . create ( STRING_2 ) ) ; eu . IDENT_0 . xml . IDENT_14 IDENT_15 = IDENT_8 . METHOD_4 ( INT_0 , null , IDENT_16 , IDENT_11 , IDENT_12 , IDENT_13 ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . logger . info ( STRING_3 ) ; IDENT_17 . getInstance ( eu . IDENT_0 . IDENT_18 . IDENT_19 . class ) . METHOD_5 ( IDENT_16 , IDENT_15 ) ; IDENT_20 . getInstance ( eu . IDENT_0 . IDENT_18 . IDENT_19 . class ) . METHOD_5 ( IDENT_16 , IDENT_15 ) ; IDENT_21 . getInstance ( eu . IDENT_0 . IDENT_18 . IDENT_19 . class ) . METHOD_5 ( IDENT_16 , IDENT_15 ) ; eu . IDENT_0 . xml . IDENT_22 IDENT_23 = null ; try { IDENT_23 = IDENT_24 . METHOD_6 ( IDENT_25 , IDENT_26 , IDENT_27 , hash , IDENT_28 , IDENT_16 , null ) ; } catch ( java . lang . Exception e ) { eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . logger . info ( STRING_4 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( IDENT_23 ) ; METHOD_8 ( ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . logger . info ( STRING_5 ) ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . logger . info ( e . getMessage ( ) ) ; org . junit . Assert . fail ( e . getMessage ( ) ) ; } } METHOD_6 ( eu . IDENT_0 . xml . IDENT_29 , eu . IDENT_0 . xml . IDENT_30 , java . net . URI , java . net . URI , java . net . URI , java . net . URI , java . util . List ) { return METHOD_6 ( IDENT_26 , IDENT_31 . METHOD_9 ( ) . METHOD_10 ( ) . size ( ) , IDENT_28 , IDENT_27 , IDENT_16 , IDENT_32 ) ; }
org . junit . Assert . assertTrue ( false ) 