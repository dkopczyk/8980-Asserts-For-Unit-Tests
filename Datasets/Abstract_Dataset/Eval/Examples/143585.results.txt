METHOD_0 ( ) { java . util . List < java . lang . String > IDENT_0 = new java . util . ArrayList < java . lang . String > ( ) ; IDENT_0 . add ( "" ) ; java . util . Map < java . lang . String , java . util . List < com . IDENT_1 . IDENT_2 . model . IDENT_3 > > IDENT_4 = new com . IDENT_1 . IDENT_2 . METHOD_1 ( ) . parse ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } parse ( java . util . List ) { com . google . gson . IDENT_5 builder = new com . google . gson . METHOD_2 ( ) ; com . google . gson . IDENT_6 gson = builder . create ( ) ; java . util . List < com . IDENT_1 . IDENT_2 . model . IDENT_3 > IDENT_7 = new java . util . ArrayList ( ) ; for ( java . lang . String batch : IDENT_0 ) { com . IDENT_1 . IDENT_2 . model . IDENT_3 [ ] IDENT_8 = gson . METHOD_3 ( METHOD_4 ( batch ) , com . IDENT_1 . IDENT_2 . model . IDENT_3 [ ] . class ) ; if ( IDENT_8 == null ) { continue ; } for ( com . IDENT_1 . IDENT_2 . model . IDENT_3 IDENT_9 : IDENT_8 ) { IDENT_7 . add ( IDENT_9 ) ; } } java . util . Map < java . lang . String , java . util . List < com . IDENT_1 . IDENT_2 . model . IDENT_3 > > IDENT_10 = new java . util . HashMap ( ) ; for ( com . IDENT_1 . IDENT_2 . model . IDENT_3 IDENT_11 : IDENT_7 ) { java . util . List < com . IDENT_1 . IDENT_2 . model . IDENT_3 > IDENT_12 = IDENT_10 . get ( IDENT_11 . getName ( ) ) ; if ( IDENT_12 == null ) { IDENT_12 = new java . util . ArrayList ( ) ; IDENT_10 . put ( IDENT_11 . getName ( ) , IDENT_12 ) ; } IDENT_12 . add ( IDENT_11 ) ; } return IDENT_10 ; }
org . junit . Assert . assertEquals ( 0 , IDENT_4 . size ( ) ) 