METHOD_0 ( ) { org . apache . hadoop . yarn . server . IDENT_0 . IDENT_1 IDENT_2 = new org . apache . hadoop . yarn . server . IDENT_0 . METHOD_1 ( conf ) ; IDENT_2 . start ( ) ; IDENT_2 . METHOD_2 ( STRING_0 , ( 10 * ( IDENT_3 ) ) ) ; IDENT_2 . METHOD_2 ( STRING_1 , ( 10 * ( IDENT_3 ) ) ) ; IDENT_2 . METHOD_2 ( STRING_2 , ( 10 * ( IDENT_3 ) ) ) ; IDENT_2 . METHOD_2 ( STRING_3 , ( 10 * ( IDENT_3 ) ) ) ; org . apache . hadoop . yarn . server . IDENT_0 . IDENT_4 . IDENT_5 IDENT_4 = IDENT_2 . METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( IDENT_4 , 4 , 5 ) ; org . apache . hadoop . yarn . server . IDENT_0 . IDENT_4 . IDENT_6 . IDENT_7 < org . apache . hadoop . yarn . server . IDENT_0 . IDENT_4 . IDENT_8 > IDENT_9 = IDENT_2 . METHOD_3 ( ) . METHOD_6 ( ) ; org . apache . hadoop . yarn . server . IDENT_0 . IDENT_4 . IDENT_6 . IDENT_10 < org . apache . hadoop . yarn . server . IDENT_0 . IDENT_4 . IDENT_8 > IDENT_11 = IDENT_9 . METHOD_7 ( org . apache . hadoop . yarn . server . IDENT_0 . IDENT_4 . IDENT_12 . IDENT_13 . IDENT_14 ) ; IDENT_11 . METHOD_8 ( ) ; java . util . Set < org . apache . hadoop . yarn . server . IDENT_0 . IDENT_4 . IDENT_8 > nodes = IDENT_11 . METHOD_9 ( ) . METHOD_10 ( "" ) ; "<AssertPlaceHolder>" ; IDENT_2 . METHOD_11 ( ) ; } size ( ) { return IDENT_15 . size ( ) ; }
org . junit . Assert . assertEquals ( 4 , nodes . size ( ) ) 