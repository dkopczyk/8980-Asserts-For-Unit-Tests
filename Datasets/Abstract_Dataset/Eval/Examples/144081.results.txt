METHOD_0 ( ) { final org . IDENT_0 . core . authorization . IDENT_1 . List < org . IDENT_0 . core . authorization . IDENT_2 . IDENT_3 > IDENT_4 = new org . IDENT_0 . core . authorization . IDENT_1 . ArrayList ( ) ; IDENT_4 . add ( new org . IDENT_0 . core . authorization . IDENT_1 . IDENT_5 . METHOD_1 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . IDENT_0 . core . context . IDENT_6 , org . IDENT_0 . core . authorization . IDENT_1 . List , org . IDENT_0 . core . authorization . IDENT_1 . List ) { assertTrue ( METHOD_3 ( IDENT_7 ) , STRING_0 ) ; if ( METHOD_3 ( IDENT_4 ) ) { for ( org . IDENT_0 . core . authorization . IDENT_1 . IDENT_3 IDENT_2 : IDENT_4 ) { final boolean METHOD_2 = IDENT_2 . METHOD_2 ( context , IDENT_7 ) ; org . IDENT_0 . core . authorization . IDENT_1 . IDENT_8 . LOGGER . debug ( STRING_1 , IDENT_2 , METHOD_2 ) ; if ( ! METHOD_2 ) { return false ; } } } return true ; }
org . junit . Assert . assertFalse ( IDENT_1 . METHOD_2 ( null , IDENT_7 , IDENT_4 ) ) 