METHOD_0 ( ) { final org . IDENT_0 . core . context . IDENT_1 context = org . IDENT_0 . core . context . IDENT_1 . create ( ) ; context . METHOD_1 ( STRING_0 ) ; final java . lang . String result = resolver . compute ( STRING_1 , context ) ; "<AssertPlaceHolder>" ; } compute ( java . lang . String , org . IDENT_0 . core . context . IDENT_2 ) { if ( this . IDENT_3 ) { final boolean IDENT_4 = ( ( url != null ) && ( ! ( url . startsWith ( IDENT_5 . IDENT_6 ) ) ) ) && ( ! ( url . startsWith ( IDENT_5 . IDENT_7 ) ) ) ; if ( ( context != null ) && IDENT_4 ) { final java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; sb . append ( context . METHOD_2 ( ) ) . append ( STRING_2 ) . append ( context . METHOD_3 ( ) ) ; final boolean IDENT_8 = ( org . IDENT_0 . core . context . IDENT_9 . METHOD_4 ( context ) ) && ( ( context . METHOD_5 ( ) ) != ( org . IDENT_0 . core . context . IDENT_5 . IDENT_10 ) ) ; final boolean IDENT_11 = ( org . IDENT_0 . core . context . IDENT_9 . METHOD_6 ( context ) ) && ( ( context . METHOD_5 ( ) ) != ( org . IDENT_0 . core . context . IDENT_5 . IDENT_12 ) ) ; if ( IDENT_8 || IDENT_11 ) { sb . append ( STRING_3 ) . append ( context . METHOD_5 ( ) ) ; } sb . append ( ( url . startsWith ( "/" ) ? url : "/" + url ) ) ; return sb . toString ( ) ; } } return url ; }
org . junit . Assert . assertEquals ( STRING_1 , result ) 