METHOD_0 ( ) { final org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 < org . IDENT_0 . IDENT_5 . IDENT_2 . IDENT_6 > ( ) ; final java . time . IDENT_7 IDENT_8 = java . time . IDENT_9 . from ( java . time . IDENT_9 . now ( ) ) . METHOD_1 ( 1 ) . METHOD_2 ( java . time . IDENT_10 . METHOD_3 ( ) ) ; IDENT_4 . METHOD_4 ( java . util . Date . from ( IDENT_8 . METHOD_5 ( ) ) ) ; final org . IDENT_0 . IDENT_5 . IDENT_2 . IDENT_6 IDENT_2 = new org . IDENT_0 . IDENT_5 . IDENT_2 . METHOD_6 ( ) ; final java . lang . String IDENT_11 = IDENT_4 . METHOD_7 ( IDENT_2 ) ; IDENT_2 . METHOD_8 ( IDENT_11 ) ; IDENT_2 . METHOD_9 ( INT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( ) { if ( ( METHOD_11 ( ) ) < 0 ) return false ; else { try { com . IDENT_12 . IDENT_1 . IDENT_13 IDENT_1 = this . METHOD_12 ( ) ; com . IDENT_12 . IDENT_1 . IDENT_14 IDENT_15 = IDENT_1 . METHOD_13 ( ) ; org . IDENT_0 . IDENT_5 . IDENT_2 . Date IDENT_16 = IDENT_15 . METHOD_14 ( ) ; org . IDENT_0 . IDENT_5 . IDENT_2 . Calendar now = org . IDENT_0 . IDENT_5 . IDENT_2 . Calendar . getInstance ( ) ; now . add ( Calendar . IDENT_17 , METHOD_11 ( ) ) ; return IDENT_16 . METHOD_15 ( now . getTime ( ) ) ; } catch ( java . text . IDENT_18 e ) { throw new org . IDENT_0 . core . exception . METHOD_16 ( e ) ; } } }
org . junit . Assert . assertTrue ( IDENT_2 . METHOD_10 ( ) ) 