METHOD_0 ( ) { @ IDENT_0 . IDENT_1 . IDENT_2 . example . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_1 ( STRING_0 ) java . util . ArrayList IDENT_6 = new java . util . ArrayList ( java . util . Arrays . asList ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ) ; java . util . Collections . METHOD_2 ( IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( IDENT_0 . IDENT_1 . IDENT_2 . example . IDENT_3 . IDENT_7 ) { int n = collection . size ( ) ; while ( n > 1 ) { for ( int j = 0 ; j < ( n - 1 ) ; j ++ ) { if ( ( IDENT_8 . compare ( collection . get ( j ) , collection . get ( ( j + 1 ) ) ) ) > 0 ) { IDENT_9 . METHOD_3 ( j , ( j + 1 ) ) ; } } n OP_0 ; } }
org . junit . Assert . assertEquals ( new java . util . ArrayList ( java . util . Arrays . asList ( STRING_4 , STRING_5 , STRING_1 , STRING_3 , STRING_2 ) ) , IDENT_6 ) 