METHOD_0 ( ) { br . com . IDENT_0 . IDENT_1 . api . IDENT_2 IDENT_3 = br . com . IDENT_0 . IDENT_1 . api . IDENT_2 . IDENT_4 ; when ( IDENT_5 . METHOD_1 ( ) ) . METHOD_2 ( new java . lang . IllegalArgumentException ( ) ) ; when ( IDENT_6 . METHOD_1 ( ) ) . thenReturn ( IDENT_3 ) ; br . com . IDENT_0 . IDENT_1 . api . IDENT_2 IDENT_7 = IDENT_8 . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; org . mockito . IDENT_9 IDENT_10 = METHOD_3 ( IDENT_5 , IDENT_6 , IDENT_11 ) ; METHOD_3 . verify ( IDENT_5 , times ( 1 ) ) . METHOD_1 ( ) ; METHOD_3 . verify ( IDENT_6 , times ( 1 ) ) . METHOD_1 ( ) ; METHOD_3 . verify ( IDENT_11 , times ( 0 ) ) . METHOD_1 ( ) ; METHOD_3 . METHOD_4 ( ) ; } METHOD_1 ( ) { br . com . IDENT_0 . IDENT_1 . api . IDENT_12 . IDENT_13 . LOGGER . info ( STRING_0 ) ; final br . com . IDENT_0 . IDENT_1 . api . IDENT_2 IDENT_12 ; if ( ( java . lang . System . getProperty ( STRING_1 ) ) != null ) { IDENT_12 = br . com . IDENT_0 . IDENT_1 . api . IDENT_2 . METHOD_5 ( java . lang . System . getProperty ( STRING_1 ) ) ; } else { throw new java . lang . IllegalArgumentException ( STRING_2 ) ; } br . com . IDENT_0 . IDENT_1 . api . IDENT_12 . IDENT_13 . LOGGER . info ( STRING_3 ) ; return IDENT_12 ; }
org . junit . Assert . assertEquals ( IDENT_3 , IDENT_7 ) 