METHOD_0 ( ) { when ( connection . METHOD_1 ( ) ) . thenReturn ( STRING_0 ) ; when ( connection . METHOD_2 ( ) ) . thenReturn ( IDENT_0 ) ; when ( connection . METHOD_3 ( ) ) . thenReturn ( null ) ; when ( connection . METHOD_4 ( ) ) . thenReturn ( INT_0 ) ; br . com . IDENT_1 . IDENT_2 . api . http . IDENT_3 IDENT_4 = new br . com . IDENT_1 . IDENT_2 . api . http . METHOD_5 ( INT_0 , new java . lang . String ( "" . getBytes ( ) , java . nio . IDENT_5 . IDENT_6 . METHOD_6 ( STRING_1 ) ) ) ; br . com . IDENT_1 . IDENT_2 . api . http . METHOD_5 response = IDENT_7 . execute ( IDENT_8 , IDENT_9 , headers , IDENT_10 ) ; "<AssertPlaceHolder>" ; org . mockito . IDENT_11 IDENT_12 = METHOD_7 ( connection ) ; METHOD_7 . verify ( connection , times ( headers . size ( ) ) ) . METHOD_8 ( anyString ( ) , anyString ( ) ) ; METHOD_7 . verify ( connection ) . METHOD_9 ( ) ; METHOD_7 . verify ( connection ) . METHOD_1 ( ) ; METHOD_7 . verify ( connection ) . METHOD_2 ( ) ; METHOD_7 . verify ( connection ) . METHOD_10 ( ) ; } execute ( br . com . IDENT_1 . IDENT_2 . api . http . IDENT_13 , java . lang . String , java . util . Map , br . com . IDENT_1 . IDENT_2 . api . http . IDENT_14 ) { try { return IDENT_7 . execute ( method , METHOD_11 ( IDENT_15 ) , headers , body ) ; } catch ( java . net . IDENT_16 e ) { throw new br . com . IDENT_1 . IDENT_2 . api . exception . METHOD_12 ( e ) ; } }
org . junit . Assert . assertEquals ( IDENT_4 , response ) 