METHOD_0 ( ) { org . apache . hadoop . yarn . server . IDENT_0 . IDENT_1 IDENT_2 = new org . apache . hadoop . yarn . server . IDENT_0 . METHOD_1 ( ) ; IDENT_2 . init ( ) ; javax . net . IDENT_3 . IDENT_4 IDENT_5 = IDENT_2 . METHOD_2 ( ) ; javax . net . IDENT_3 . IDENT_6 IDENT_7 = org . mockito . Mockito . mock ( javax . net . IDENT_3 . IDENT_6 . class ) ; org . apache . hadoop . yarn . server . IDENT_0 . METHOD_1 IDENT_8 = new org . apache . hadoop . yarn . server . IDENT_0 . METHOD_1 ( ) ; IDENT_8 . init ( ) ; org . mockito . Mockito . when ( IDENT_7 . METHOD_3 ( ) ) . thenReturn ( org . apache . hadoop . security . IDENT_3 . IDENT_9 . METHOD_4 ( IDENT_8 . METHOD_5 ( org . apache . hadoop . yarn . api . records . IDENT_10 . newInstance ( java . lang . System . currentTimeMillis ( ) , 1 ) , STRING_0 ) , STRING_0 ) . METHOD_6 ( STRING_1 ) ) ; "<AssertPlaceHolder>" ; } verify ( java . lang . String , java . lang . String ) { boolean found = false ; if ( message != null ) { java . lang . String [ ] tokens = message . split ( STRING_2 ) ; for ( java . lang . String token : tokens ) { if ( ( token != null ) && ( token . equals ( IDENT_11 ) ) ) { found = true ; break ; } } } org . junit . Assert . assertTrue ( found ) ; }
org . junit . Assert . assertFalse ( IDENT_5 . verify ( "foo" , IDENT_7 ) ) 