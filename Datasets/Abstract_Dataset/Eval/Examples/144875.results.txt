METHOD_0 ( ) { org . apache . hadoop . conf . Configuration c = new org . apache . hadoop . conf . Configuration ( ) ; c . set ( ( ( IDENT_0 ) + STRING_0 ) , STRING_1 ) ; c . set ( ( ( IDENT_0 ) + STRING_2 ) , STRING_3 ) ; c . set ( ( ( IDENT_0 ) + STRING_4 ) , STRING_5 ) ; java . util . Map < java . lang . String , org . apache . hadoop . io . IDENT_1 > output = METHOD_1 ( c ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { return new java . util . HashMap < java . lang . String , org . apache . hadoop . io . IDENT_1 > ( ) { { put ( STRING_6 , new org . apache . hadoop . io . METHOD_3 ( 1 ) ) ; put ( STRING_7 , new org . apache . hadoop . io . METHOD_3 ( 1 ) ) ; put ( STRING_8 , new org . apache . hadoop . io . METHOD_3 ( 1 ) ) ; put ( STRING_9 , new org . apache . hadoop . io . METHOD_3 ( 1 ) ) ; put ( STRING_10 , new org . apache . hadoop . io . METHOD_3 ( 2 ) ) ; put ( STRING_11 , new org . apache . hadoop . io . METHOD_3 ( 2 ) ) ; put ( STRING_12 , new org . apache . hadoop . io . METHOD_3 ( 2 ) ) ; put ( STRING_5 , new org . apache . hadoop . io . METHOD_3 ( 3 ) ) ; } } ; }
org . junit . Assert . assertEquals ( METHOD_2 ( ) , output ) 