METHOD_0 ( ) { final org . apache . hadoop . hdfs . protocol . IDENT_0 IDENT_1 = org . mockito . Mockito . mock ( org . apache . hadoop . hdfs . protocol . IDENT_0 . class ) ; org . mockito . Mockito . when ( IDENT_1 . METHOD_1 ( ) ) . METHOD_2 ( new org . mockito . IDENT_2 . IDENT_3 < long [ ] > ( ) { @ org . apache . hadoop . hdfs . server . IDENT_4 . IDENT_5 . Override public long [ ] METHOD_3 ( org . mockito . IDENT_6 . IDENT_7 IDENT_6 ) throws java . lang . Throwable { java . lang . Thread . sleep ( 1000 ) ; return new long [ ] { 1 } ; } } ) ; final org . apache . hadoop . hdfs . protocol . IDENT_0 IDENT_8 = org . mockito . Mockito . mock ( org . apache . hadoop . hdfs . protocol . IDENT_0 . class ) ; org . mockito . Mockito . when ( IDENT_8 . METHOD_1 ( ) ) . METHOD_4 ( new java . io . IOException ( STRING_0 ) ) ; org . apache . hadoop . hdfs . server . IDENT_4 . IDENT_5 . IDENT_9 < org . apache . hadoop . hdfs . protocol . IDENT_0 > provider = new org . apache . hadoop . hdfs . server . IDENT_4 . IDENT_5 . METHOD_5 ( conf , IDENT_10 , org . apache . hadoop . hdfs . protocol . IDENT_0 . class , METHOD_6 ( IDENT_8 , IDENT_1 ) ) ; long [ ] IDENT_11 = provider . METHOD_7 ( ) . proxy . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; org . mockito . Mockito . verify ( IDENT_8 ) . METHOD_1 ( ) ; org . mockito . Mockito . verify ( IDENT_1 ) . METHOD_1 ( ) ; } METHOD_1 ( ) { IDENT_12 . METHOD_8 ( IDENT_13 . IDENT_14 . IDENT_15 ) ; org . apache . hadoop . hdfs . server . IDENT_16 . IDENT_17 . IDENT_18 method = new org . apache . hadoop . hdfs . server . IDENT_16 . IDENT_17 . METHOD_9 ( STRING_1 ) ; java . util . Set < org . apache . hadoop . hdfs . server . IDENT_16 . resolver . IDENT_19 > IDENT_20 = IDENT_21 . METHOD_10 ( ) ; java . util . Map < org . apache . hadoop . hdfs . server . IDENT_16 . resolver . IDENT_19 , long [ ] > results = IDENT_22 . METHOD_11 ( IDENT_20 , method , true , false , long [ ] . class ) ; long [ ] IDENT_23 = new long [ IDENT_24 ] ; for ( long [ ] data : results . values ( ) ) { for ( int i = 0 ; ( i < ( IDENT_23 . length ) ) && ( i < ( data . length ) ) ; i ++ ) { if ( ( data [ i ] ) >= 0 ) { IDENT_23 [ i ] += data [ i ] ; } } } return IDENT_23 ; }
org . junit . Assert . assertTrue ( ( ( IDENT_11 . length ) == 1 ) ) 