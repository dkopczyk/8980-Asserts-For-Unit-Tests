METHOD_0 ( ) { byte [ ] r = org . apache . hadoop . hbase . util . IDENT_0 . METHOD_1 ( STRING_0 ) ; byte [ ] f = org . apache . hadoop . hbase . util . IDENT_0 . METHOD_1 ( STRING_1 ) ; byte [ ] IDENT_1 = org . apache . hadoop . hbase . util . IDENT_0 . METHOD_1 ( STRING_2 ) ; byte [ ] IDENT_2 = org . apache . hadoop . hbase . util . IDENT_0 . METHOD_1 ( STRING_3 ) ; byte [ ] v = org . apache . hadoop . hbase . util . IDENT_0 . METHOD_1 ( STRING_4 ) ; byte [ ] IDENT_3 = org . apache . hadoop . hbase . util . IDENT_0 . METHOD_1 ( STRING_5 ) ; org . apache . hadoop . hbase . IDENT_4 IDENT_5 = new org . apache . hadoop . hbase . METHOD_2 ( r , f , IDENT_1 , 0 , IDENT_1 . length , INT_0 , METHOD_2 . Type . IDENT_6 , v , 0 , v . length , IDENT_3 ) ; org . apache . hadoop . hbase . IDENT_7 . IDENT_8 IDENT_9 = new org . apache . hadoop . hbase . IDENT_7 . METHOD_3 ( IDENT_5 ) ; java . io . ByteArrayOutputStream IDENT_10 = new java . io . ByteArrayOutputStream ( ) ; int IDENT_11 = org . apache . hadoop . hbase . IDENT_12 . METHOD_4 ( IDENT_9 , IDENT_10 , true ) ; byte [ ] IDENT_13 = IDENT_10 . toByteArray ( ) ; org . apache . hadoop . hbase . METHOD_2 res = new org . apache . hadoop . hbase . METHOD_2 ( IDENT_13 ) ; "<AssertPlaceHolder>" ; } equals ( org . apache . hadoop . hbase . IDENT_14 , org . apache . hadoop . hbase . IDENT_14 ) { return ( ( ( ( org . apache . hadoop . hbase . IDENT_15 . METHOD_5 ( a , b ) ) && ( org . apache . hadoop . hbase . IDENT_15 . METHOD_6 ( a , b ) ) ) && ( org . apache . hadoop . hbase . IDENT_15 . METHOD_7 ( a , b ) ) ) && ( org . apache . hadoop . hbase . IDENT_15 . METHOD_8 ( a , b ) ) ) && ( org . apache . hadoop . hbase . IDENT_12 . METHOD_9 ( a , b ) ) ; }
org . junit . Assert . assertTrue ( org . apache . hadoop . hbase . IDENT_15 . equals ( IDENT_5 , res ) ) 