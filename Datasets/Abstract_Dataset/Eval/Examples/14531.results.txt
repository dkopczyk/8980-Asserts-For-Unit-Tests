METHOD_0 ( ) { org . apache . hadoop . hbase . IDENT_0 c = org . mockito . Mockito . mock ( org . apache . hadoop . hbase . IDENT_0 . class ) ; org . mockito . Mockito . when ( c . getType ( ) ) . METHOD_1 ( ) ; for ( org . apache . hadoop . hbase . IDENT_0 . Type type : IDENT_0 . Type . values ( ) ) { org . mockito . Mockito . when ( c . METHOD_2 ( ) ) . thenReturn ( type . getCode ( ) ) ; "<AssertPlaceHolder>" ; } try { org . mockito . Mockito . when ( c . METHOD_2 ( ) ) . thenReturn ( IDENT_1 . Type . IDENT_2 . getCode ( ) ) ; c . getType ( ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . lang . IDENT_3 e ) { } try { org . mockito . Mockito . when ( c . METHOD_2 ( ) ) . thenReturn ( IDENT_1 . Type . IDENT_4 . getCode ( ) ) ; c . getType ( ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . lang . IDENT_3 e ) { } } getType ( ) { return null ; }
org . junit . Assert . assertEquals ( type , c . getType ( ) ) 