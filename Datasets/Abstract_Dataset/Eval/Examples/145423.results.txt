METHOD_0 ( ) { org . pentaho . di . core . IDENT_0 . init ( ) ; org . pentaho . IDENT_1 . data . IDENT_2 . plugins . hdfs . IDENT_3 . IDENT_4 meta = new org . pentaho . IDENT_1 . data . IDENT_2 . plugins . hdfs . IDENT_3 . METHOD_1 ( ) ; java . lang . String url = STRING_0 ; java . lang . String IDENT_5 = meta . METHOD_2 ( url , METHOD_1 . IDENT_6 . IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String , org . pentaho . IDENT_1 . data . IDENT_2 . plugins . hdfs . IDENT_3 . IDENT_8 ) { org . apache . commons . lang . IDENT_9 . METHOD_3 ( IDENT_10 , STRING_1 ) ; try { java . net . URI uri = new java . net . URI ( source ) ; java . lang . String IDENT_11 = uri . METHOD_4 ( ) ; if ( IDENT_11 != null ) { java . lang . String [ ] IDENT_12 = IDENT_11 . split ( STRING_2 , 2 ) ; if ( ( IDENT_12 . length ) < 2 ) { return source ; } java . lang . String IDENT_13 = IDENT_12 [ 1 ] ; java . lang . String IDENT_14 = IDENT_13 ; switch ( IDENT_10 ) { case IDENT_7 : IDENT_14 = org . pentaho . di . core . IDENT_15 . IDENT_16 . METHOD_5 ( IDENT_13 ) ; break ; case IDENT_17 : IDENT_14 = org . pentaho . di . core . IDENT_15 . IDENT_16 . METHOD_6 ( IDENT_13 ) ; break ; default : throw new java . security . METHOD_7 ( STRING_3 ) ; } java . net . URI IDENT_18 = new java . net . URI ( uri . METHOD_8 ( ) , ( ( ( IDENT_12 [ 0 ] ) + STRING_2 ) + IDENT_14 ) , uri . METHOD_9 ( ) , uri . METHOD_10 ( ) , uri . getPath ( ) , uri . METHOD_11 ( ) , uri . METHOD_12 ( ) ) ; return IDENT_18 . toString ( ) ; } } catch ( java . net . IDENT_19 e ) { return source ; } return source ; }
org . junit . Assert . assertEquals ( url , meta . METHOD_2 ( IDENT_5 , METHOD_1 . IDENT_6 . IDENT_17 ) ) 