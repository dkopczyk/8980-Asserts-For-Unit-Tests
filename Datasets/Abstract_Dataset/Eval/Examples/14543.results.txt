METHOD_0 ( ) { java . lang . String [ ] args = new java . lang . String [ 0 ] ; int IDENT_0 = IDENT_1 . run ( args ) ; "<AssertPlaceHolder>" ; } run ( java . lang . String [ ] ) { if ( ( args . length ) == 0 ) { METHOD_1 ( ) ; return org . apache . hadoop . hbase . util . IDENT_2 . IDENT_3 ; } org . apache . hadoop . util . IDENT_4 IDENT_1 ; switch ( args [ 0 ] ) { case org . apache . hadoop . hbase . IDENT_1 . IDENT_5 . IDENT_6 : IDENT_1 = new org . apache . hadoop . hbase . IDENT_1 . IDENT_7 . METHOD_2 ( ) ; break ; case org . apache . hadoop . hbase . IDENT_1 . IDENT_5 . IDENT_8 : IDENT_1 = new org . apache . hadoop . hbase . IDENT_1 . METHOD_3 ( ) ; break ; case org . apache . hadoop . hbase . IDENT_1 . IDENT_5 . IDENT_9 : IDENT_1 = new org . apache . hadoop . hbase . IDENT_1 . METHOD_4 ( ) ; break ; case STRING_0 : METHOD_1 ( ) ; return org . apache . hadoop . hbase . util . IDENT_2 . IDENT_3 ; default : System . err . println ( ( STRING_1 + ( args [ 0 ] ) ) ) ; METHOD_1 ( ) ; return org . apache . hadoop . hbase . util . IDENT_2 . IDENT_3 ; } IDENT_1 . METHOD_5 ( METHOD_6 ( ) ) ; return IDENT_1 . run ( java . util . Arrays . METHOD_7 ( args , 1 , args . length ) ) ; }
org . junit . Assert . assertEquals ( org . apache . hadoop . hbase . util . IDENT_2 . IDENT_3 , IDENT_0 ) 