METHOD_0 ( ) { java . nio . ByteBuffer buffer = java . nio . ByteBuffer . METHOD_1 ( array ) ; java . io . ByteArrayOutputStream IDENT_0 = new java . io . ByteArrayOutputStream ( ) ; org . apache . hadoop . hbase . util . IDENT_1 . METHOD_2 ( IDENT_0 , buffer , ( ( array . length ) / 2 ) , ( ( array . length ) / 2 ) ) ; byte [ ] IDENT_2 = IDENT_0 . toByteArray ( ) ; for ( int i = 0 ; i < ( ( array . length ) / 2 ) ; ++ i ) { int pos = ( ( array . length ) / 2 ) + i ; "<AssertPlaceHolder>" ; } } toByteArray ( ) { org . apache . hadoop . hbase . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . Builder builder = IDENT_6 . IDENT_7 . METHOD_3 ( ) ; builder . METHOD_4 ( org . apache . hadoop . hbase . IDENT_3 . IDENT_4 . IDENT_8 . METHOD_5 ( this . filter ) ) ; return builder . build ( ) . toByteArray ( ) ; }
org . junit . Assert . assertEquals ( IDENT_2 [ i ] , array [ pos ] ) 