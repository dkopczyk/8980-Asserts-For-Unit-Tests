METHOD_0 ( ) { javax . ws . rs . core . Response IDENT_0 = mock ( javax . ws . rs . core . Response . class ) ; java . util . Map < java . lang . String , java . io . InputStream > IDENT_1 = mock ( java . util . Map . class ) ; doReturn ( true ) . when ( org . pentaho . platform . IDENT_2 . IDENT_3 . api . resources . IDENT_4 . IDENT_5 ) . METHOD_1 ( ) ; doReturn ( true ) . when ( org . pentaho . platform . IDENT_2 . IDENT_3 . api . resources . IDENT_4 . IDENT_5 ) . METHOD_2 ( org . pentaho . platform . IDENT_2 . IDENT_3 . api . resources . IDENT_4 . IDENT_5 . IDENT_6 ) ; doReturn ( IDENT_1 ) . when ( org . pentaho . platform . IDENT_2 . IDENT_3 . api . resources . IDENT_4 . IDENT_5 ) . METHOD_3 ( STRING_0 ) ; doReturn ( IDENT_0 ) . when ( org . pentaho . platform . IDENT_2 . IDENT_3 . api . resources . IDENT_4 . IDENT_5 ) . METHOD_4 ( IDENT_1 , STRING_0 ) ; javax . ws . rs . core . Response response = org . pentaho . platform . IDENT_2 . IDENT_3 . api . resources . IDENT_4 . IDENT_5 . METHOD_5 ( STRING_0 ) ; verify ( org . pentaho . platform . IDENT_2 . IDENT_3 . api . resources . IDENT_4 . IDENT_5 , times ( 1 ) ) . METHOD_5 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . String ) { if ( ! ( METHOD_1 ( ) ) ) { throw new javax . ws . rs . METHOD_6 ( Response . Status . IDENT_7 ) ; } if ( ! ( METHOD_2 ( IDENT_6 ) ) ) { throw new javax . ws . rs . METHOD_6 ( Response . Status . IDENT_8 ) ; } java . util . Map < java . lang . String , java . io . InputStream > IDENT_9 = METHOD_3 ( IDENT_10 ) ; return METHOD_4 ( IDENT_9 , IDENT_10 ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , response ) 