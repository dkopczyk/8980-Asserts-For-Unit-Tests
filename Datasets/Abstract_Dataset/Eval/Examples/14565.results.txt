METHOD_0 ( ) { final org . apache . hadoop . hbase . IDENT_0 IDENT_1 = org . apache . hadoop . hbase . IDENT_0 . valueOf ( name . METHOD_1 ( ) ) ; byte [ ] [ ] IDENT_2 = new byte [ ] [ ] { org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_4 , org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_5 } ; org . apache . hadoop . hbase . client . IDENT_6 t = org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_7 . METHOD_2 ( IDENT_1 , IDENT_2 ) ; try { org . apache . hadoop . hbase . client . IDENT_8 p = new org . apache . hadoop . hbase . client . METHOD_3 ( org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_9 ) ; p . METHOD_4 ( org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_4 , org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_10 , org . apache . hadoop . hbase . mapreduce . IDENT_3 . now , org . apache . hadoop . hbase . util . IDENT_11 . METHOD_5 ( STRING_0 ) ) ; p . METHOD_4 ( org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_5 , org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_10 , ( ( org . apache . hadoop . hbase . mapreduce . IDENT_3 . now ) + 1 ) , org . apache . hadoop . hbase . util . IDENT_11 . METHOD_5 ( STRING_1 ) ) ; p . METHOD_4 ( org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_4 , org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_10 , ( ( org . apache . hadoop . hbase . mapreduce . IDENT_3 . now ) + 2 ) , org . apache . hadoop . hbase . util . IDENT_11 . METHOD_5 ( STRING_2 ) ) ; t . put ( p ) ; p = new org . apache . hadoop . hbase . client . METHOD_3 ( org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_12 ) ; p . METHOD_4 ( org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_5 , org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_10 , org . apache . hadoop . hbase . mapreduce . IDENT_3 . now , org . apache . hadoop . hbase . util . IDENT_11 . METHOD_5 ( STRING_3 ) ) ; p . METHOD_4 ( org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_4 , org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_10 , ( ( org . apache . hadoop . hbase . mapreduce . IDENT_3 . now ) + 1 ) , org . apache . hadoop . hbase . util . IDENT_11 . METHOD_5 ( STRING_4 ) ) ; p . METHOD_4 ( org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_5 , org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_10 , ( ( org . apache . hadoop . hbase . mapreduce . IDENT_3 . now ) + 2 ) , org . apache . hadoop . hbase . util . IDENT_11 . METHOD_5 ( STRING_5 ) ) ; t . put ( p ) ; java . lang . String [ ] args = new java . lang . String [ ] { IDENT_1 . METHOD_6 ( ) , org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_13 . toString ( ) , STRING_6 , ( STRING_7 + ( org . apache . hadoop . hbase . mapreduce . IDENT_3 . now ) ) + 1 , ( STRING_8 + ( org . apache . hadoop . hbase . mapreduce . IDENT_3 . now ) ) + 2 } ; METHOD_7 ( args ) ; org . apache . hadoop . hbase . mapreduce . IDENT_14 IDENT_15 = new org . apache . hadoop . hbase . mapreduce . METHOD_8 ( ( ( ( org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_16 ) + ( File . IDENT_17 ) ) + STRING_9 ) ) ; java . lang . String data = org . apache . commons . io . IDENT_18 . toString ( IDENT_15 ) ; IDENT_15 . close ( ) ; "<AssertPlaceHolder>" ; } finally { t . close ( ) ; org . apache . hadoop . fs . IDENT_19 . METHOD_9 ( new org . apache . hadoop . hbase . mapreduce . File ( org . apache . hadoop . hbase . mapreduce . IDENT_3 . IDENT_16 ) ) ; } } isEmpty ( ) { return nodes . isEmpty ( ) ; }
org . junit . Assert . assertTrue ( data . isEmpty ( ) ) 