METHOD_0 ( ) { org . mockito . Mockito . METHOD_1 ( org . pentaho . hadoop . mapreduce . IDENT_0 . class ) ; org . pentaho . hadoop . IDENT_1 . common . IDENT_2 IDENT_3 = org . mockito . Mockito . mock ( org . pentaho . hadoop . IDENT_1 . common . IDENT_2 . class ) ; org . apache . hadoop . IDENT_4 . IDENT_5 IDENT_6 = org . mockito . Mockito . mock ( org . apache . hadoop . IDENT_4 . IDENT_5 . class ) ; org . apache . hadoop . IDENT_4 . IDENT_7 IDENT_8 = org . mockito . Mockito . mock ( org . apache . hadoop . IDENT_4 . IDENT_7 . class ) ; org . mockito . Mockito . when ( IDENT_3 . METHOD_2 ( ) ) . thenReturn ( IDENT_6 ) ; org . mockito . Mockito . when ( IDENT_3 . METHOD_3 ( ) ) . METHOD_4 ( ) ; org . mockito . Mockito . when ( IDENT_6 . METHOD_5 ( ) ) . thenReturn ( new org . apache . hadoop . IDENT_4 . IDENT_9 [ ] { new org . apache . hadoop . IDENT_4 . METHOD_6 ( org . apache . commons . lang . StringUtils . IDENT_10 , new java . lang . String [ ] { STRING_0 } ) , new org . apache . hadoop . IDENT_4 . METHOD_6 ( org . apache . commons . lang . StringUtils . IDENT_10 , new java . lang . String [ ] { } ) } ) ; org . mockito . Mockito . when ( IDENT_6 . METHOD_7 ( org . mockito . Mockito . any ( org . apache . hadoop . IDENT_4 . IDENT_11 . class ) ) ) . thenReturn ( IDENT_8 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { if ( org . pentaho . hadoop . mapreduce . IDENT_0 . verify ( METHOD_8 ( METHOD_9 ( ) . METHOD_10 ( ) ) . METHOD_5 ( ) ) ) { METHOD_9 ( ) . METHOD_3 ( ) ; return new org . pentaho . hadoop . IDENT_1 . common . METHOD_11 ( METHOD_9 ( ) ) ; } else { throw new org . pentaho . hadoop . mapreduce . METHOD_12 ( org . pentaho . di . IDENT_12 . IDENT_13 . getString ( org . pentaho . hadoop . IDENT_1 . common . IDENT_2 . class , STRING_1 , org . apache . hadoop . security . IDENT_14 . METHOD_13 ( ) . METHOD_14 ( ) ) ) ; } }
org . junit . Assert . assertNotNull ( IDENT_3 . METHOD_3 ( ) ) 