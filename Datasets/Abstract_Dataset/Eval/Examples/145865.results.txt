METHOD_0 ( ) { org . pentaho . di . core . IDENT_0 . IDENT_1 IDENT_2 = org . pentaho . di . core . IDENT_0 . IDENT_3 . METHOD_1 ( ) ; for ( int i = 0 ; i < 3 ; i ++ ) { IDENT_2 . METHOD_2 ( org . pentaho . di . core . IDENT_0 . IDENT_3 . METHOD_1 ( java . lang . Integer . toString ( i ) , 1 ) ) ; } org . pentaho . di . job . entry . IDENT_4 IDENT_5 = org . pentaho . di . core . IDENT_0 . IDENT_3 . METHOD_3 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . pentaho . di . job . entry . IDENT_4 ) { if ( ( IDENT_6 . getName ( ) ) == null ) { return null ; } IDENT_7 . METHOD_5 ( ) . METHOD_6 ( ) ; try { java . util . IDENT_8 < org . pentaho . di . core . IDENT_0 . IDENT_1 > it = IDENT_9 . METHOD_7 ( IDENT_9 . size ( ) ) ; while ( it . METHOD_8 ( ) ) { org . pentaho . di . core . IDENT_0 . IDENT_1 IDENT_10 = it . METHOD_9 ( ) ; org . pentaho . di . job . IDENT_11 result = IDENT_10 . METHOD_10 ( ) ; if ( result != null ) { if ( ( IDENT_6 . getName ( ) . equals ( result . METHOD_11 ( ) ) ) && ( ( IDENT_6 . METHOD_12 ( ) ) == ( result . METHOD_13 ( ) ) ) ) { return IDENT_10 ; } } } } finally { METHOD_6 . METHOD_5 ( ) . METHOD_14 ( ) ; } return null ; }
org . junit . Assert . assertNull ( IDENT_2 . METHOD_4 ( IDENT_5 ) ) 