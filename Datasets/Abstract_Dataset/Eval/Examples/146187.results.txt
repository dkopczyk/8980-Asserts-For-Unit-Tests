METHOD_0 ( ) { org . IDENT_0 . api . mockito . IDENT_1 . METHOD_1 ( org . pentaho . di . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . class ) ; org . pentaho . di . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 IDENT_6 = METHOD_2 ( org . pentaho . di . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . class ) ; org . eclipse . IDENT_7 . client . IDENT_8 . IDENT_9 IDENT_10 = mock ( org . eclipse . IDENT_7 . client . IDENT_8 . IDENT_9 . class ) ; doReturn ( IDENT_10 ) . when ( IDENT_6 ) . METHOD_3 ( ) ; org . IDENT_0 . api . mockito . IDENT_1 . when ( org . pentaho . di . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . builder ( ) ) . thenReturn ( IDENT_6 ) ; IDENT_2 . METHOD_4 ( ) ; IDENT_2 . METHOD_5 ( ) ; org . pentaho . di . IDENT_2 . IDENT_3 . IDENT_11 IDENT_12 = IDENT_2 . METHOD_6 ( ) . get ( 1 ) ; org . pentaho . di . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_13 IDENT_3 = ( ( org . pentaho . di . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_13 ) ( IDENT_12 . IDENT_3 ) ) ; "<AssertPlaceHolder>" ; } get ( ) { if ( org . pentaho . di . core . util . Utils . isEmpty ( IDENT_14 . METHOD_7 ( STRING_0 ) ) ) { log . METHOD_8 ( STRING_1 ) ; return IDENT_15 . get ( ) ; } org . pentaho . di . core . IDENT_16 . IDENT_17 IDENT_16 = new org . pentaho . di . core . IDENT_16 . METHOD_9 ( ) ; IDENT_16 . METHOD_10 ( null ) ; java . lang . String protocol = IDENT_14 . METHOD_7 ( STRING_2 ) ; java . lang . String host = IDENT_14 . METHOD_7 ( STRING_3 ) ; java . lang . String port = IDENT_14 . METHOD_7 ( STRING_4 ) ; boolean IDENT_18 = ( STRING_5 . equalsIgnoreCase ( protocol ) ) || ( STRING_6 . equalsIgnoreCase ( protocol ) ) ; return new org . pentaho . di . IDENT_2 . IDENT_19 . IDENT_20 . METHOD_11 ( IDENT_14 , host , port , IDENT_18 ) ; }
org . junit . Assert . assertEquals ( IDENT_3 . client . get ( ) , IDENT_3 . client . get ( ) ) 