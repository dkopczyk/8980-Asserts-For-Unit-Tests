METHOD_0 ( ) { java . util . List < java . lang . String > IDENT_0 = new java . util . ArrayList < java . lang . String > ( ) ; IDENT_0 . add ( STRING_0 ) ; IDENT_0 . add ( STRING_1 ) ; IDENT_0 . add ( STRING_2 ) ; IDENT_0 . add ( STRING_3 ) ; org . pentaho . metadata . query . model . util . IDENT_1 type = new org . pentaho . metadata . query . model . util . METHOD_1 ( IDENT_0 ) ; org . pentaho . metadata . model . IDENT_2 . types . IDENT_3 IDENT_4 = type . METHOD_2 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . util . List ) { org . pentaho . metadata . query . model . util . METHOD_1 . IDENT_5 < org . pentaho . metadata . model . IDENT_2 . types . IDENT_3 > IDENT_6 = new org . pentaho . metadata . query . model . util . METHOD_1 . IDENT_5 < org . pentaho . metadata . model . IDENT_2 . types . IDENT_3 > ( ) ; for ( java . lang . String value : IDENT_0 ) { org . pentaho . metadata . model . IDENT_2 . types . IDENT_3 type = org . pentaho . metadata . query . model . util . IDENT_7 . METHOD_3 ( value ) ; if ( type == ( org . pentaho . metadata . model . IDENT_2 . types . IDENT_3 . IDENT_8 ) ) { return org . pentaho . metadata . model . IDENT_2 . types . IDENT_3 . IDENT_8 ; } IDENT_6 . add ( type ) ; } return IDENT_6 . METHOD_4 ( ) ; }
org . junit . Assert . assertEquals ( IDENT_3 . IDENT_8 , IDENT_4 ) 