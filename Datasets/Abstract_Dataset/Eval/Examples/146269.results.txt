METHOD_0 ( ) { java . util . List < org . pentaho . di . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 > IDENT_5 = asList ( org . pentaho . di . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_1 ( STRING_0 , true , STRING_1 ) , org . pentaho . di . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_1 ( STRING_2 , true , STRING_1 ) ) ; org . pentaho . di . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 IDENT_9 = org . pentaho . di . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . METHOD_2 ( IDENT_5 , new org . pentaho . di . core . IDENT_10 . METHOD_3 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . util . List , org . pentaho . di . core . IDENT_10 . IDENT_11 ) { if ( ( IDENT_12 == null ) || ( ( IDENT_12 . size ( ) ) == 0 ) ) { throw new org . pentaho . di . core . exception . METHOD_4 ( org . pentaho . di . IDENT_13 . IDENT_14 . getString ( org . pentaho . di . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_15 , STRING_3 ) ) ; } int IDENT_16 = 0 ; int IDENT_17 = 0 ; for ( org . pentaho . di . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 field : IDENT_12 ) { java . lang . String IDENT_18 = IDENT_19 . METHOD_5 ( field . IDENT_20 ) ; if ( org . pentaho . di . core . IDENT_21 . isEmpty ( IDENT_18 ) ) { IDENT_16 ++ ; } else if ( IDENT_18 . startsWith ( STRING_4 ) ) { IDENT_17 ++ ; } else { IDENT_16 ++ ; } } if ( ( IDENT_16 < ( IDENT_12 . size ( ) ) ) && ( IDENT_17 < ( IDENT_12 . size ( ) ) ) ) { return org . pentaho . di . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_22 ; } if ( IDENT_16 > 0 ) { return org . pentaho . di . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_23 ; } return org . pentaho . di . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_24 ; }
org . junit . Assert . assertTrue ( ( IDENT_9 == ( org . pentaho . di . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_24 ) ) ) 