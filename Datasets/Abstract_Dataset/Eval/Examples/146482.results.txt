METHOD_0 ( ) { org . pentaho . platform . plugin . services . IDENT_0 . sql . IDENT_1 IDENT_2 = new org . pentaho . platform . plugin . services . IDENT_0 . sql . METHOD_1 ( null , IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( int , int ) { if ( ( IDENT_4 ) != null ) { try { int IDENT_5 = IDENT_4 . METHOD_3 ( ) ; if ( IDENT_5 != ( row + 1 ) ) { if ( IDENT_5 == row ) { IDENT_4 . next ( ) ; } else { IDENT_4 . METHOD_4 ( ( row + 1 ) ) ; } } return IDENT_4 . METHOD_5 ( ( column + 1 ) ) ; } catch ( java . sql . IDENT_6 ex ) { org . pentaho . platform . plugin . services . IDENT_0 . sql . METHOD_1 . log . error ( org . pentaho . platform . plugin . services . messages . IDENT_7 . getInstance ( ) . METHOD_6 ( STRING_0 ) , ex ) ; throw new java . lang . IllegalStateException ( org . pentaho . platform . plugin . services . messages . IDENT_7 . getInstance ( ) . METHOD_6 ( STRING_1 ) , ex ) ; } } return null ; }
org . junit . Assert . assertNull ( IDENT_2 . METHOD_2 ( 0 , 0 ) ) 