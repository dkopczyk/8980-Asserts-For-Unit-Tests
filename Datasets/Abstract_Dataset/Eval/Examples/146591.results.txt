METHOD_0 ( ) { java . lang . String params = STRING_0 ; METHOD_1 ( ) . when ( IDENT_0 . IDENT_1 ) . METHOD_2 ( eq ( params ) ) ; javax . ws . rs . core . Response IDENT_2 = mock ( javax . ws . rs . core . Response . class ) ; doReturn ( IDENT_2 ) . when ( IDENT_0 ) . METHOD_3 ( ) ; javax . ws . rs . core . Response IDENT_3 = IDENT_0 . METHOD_4 ( params , null ) ; verify ( IDENT_0 , times ( 1 ) ) . METHOD_3 ( ) ; verify ( IDENT_0 . IDENT_1 , times ( 1 ) ) . METHOD_2 ( params ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { java . lang . String [ ] IDENT_4 = org . pentaho . platform . web . http . api . resources . utils . IDENT_5 . METHOD_5 ( params ) ; try { for ( int i = 0 ; i < ( IDENT_4 . length ) ; i ++ ) { METHOD_6 ( ) . METHOD_7 ( IDENT_4 [ i ] , null ) ; } } catch ( java . lang . Exception e ) { if ( e instanceof org . pentaho . platform . api . IDENT_6 . IDENT_7 . IDENT_8 ) { throw ( ( org . pentaho . platform . api . IDENT_6 . IDENT_7 . IDENT_8 ) ( e ) ) ; } org . pentaho . platform . web . http . api . resources . services . IDENT_9 . logger . error ( org . pentaho . platform . web . http . messages . IDENT_10 . getInstance ( ) . getString ( STRING_1 ) , e ) ; throw new java . lang . METHOD_8 ( ) ; } }
org . junit . Assert . assertEquals ( IDENT_3 , IDENT_2 ) 