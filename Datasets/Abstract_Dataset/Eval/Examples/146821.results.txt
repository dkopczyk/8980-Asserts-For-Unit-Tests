METHOD_0 ( ) { org . pentaho . IDENT_0 . engine . IDENT_1 . core . dom . IDENT_2 context = mock ( org . pentaho . IDENT_0 . engine . IDENT_1 . core . dom . IDENT_2 . class ) ; org . pentaho . IDENT_0 . engine . IDENT_1 . core . IDENT_3 node = mock ( org . pentaho . IDENT_0 . engine . IDENT_1 . core . IDENT_3 . class ) ; org . pentaho . IDENT_0 . engine . IDENT_1 . core . dom . IDENT_4 matcher = new org . pentaho . IDENT_0 . engine . IDENT_1 . core . dom . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; } matches ( org . pentaho . IDENT_0 . engine . IDENT_1 . core . dom . IDENT_2 , org . pentaho . IDENT_0 . engine . IDENT_1 . core . IDENT_3 ) { org . pentaho . IDENT_0 . engine . IDENT_1 . core . IDENT_3 n = node ; while ( n != null ) { final org . pentaho . IDENT_0 . engine . IDENT_1 . core . IDENT_5 parent = context . METHOD_2 ( n ) ; if ( parent == null ) { break ; } if ( IDENT_6 . matches ( context , parent ) ) { return true ; } n = parent ; } return false ; }
org . junit . Assert . assertThat ( matcher . matches ( context , node ) , org . hamcrest . CoreMatchers . is ( org . hamcrest . CoreMatchers . equalTo ( true ) ) ) 