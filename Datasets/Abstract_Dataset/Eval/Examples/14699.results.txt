METHOD_0 ( ) { tableName = org . apache . hadoop . hbase . IDENT_0 . valueOf ( name . METHOD_1 ( ) ) ; org . apache . hadoop . hbase . client . IDENT_1 IDENT_2 = org . apache . hadoop . hbase . filter . IDENT_3 . IDENT_4 . METHOD_2 ( tableName , IDENT_5 , Integer . MAX_VALUE ) ; METHOD_3 ( IDENT_6 , IDENT_2 , IDENT_5 , IDENT_7 , value ) ; org . apache . hadoop . hbase . client . IDENT_8 IDENT_9 = new org . apache . hadoop . hbase . client . METHOD_4 ( ) ; IDENT_9 . METHOD_5 ( ) ; java . util . List < org . apache . hadoop . hbase . filter . IDENT_10 . IDENT_11 > IDENT_12 = new java . util . ArrayList ( ) ; IDENT_12 . add ( new org . apache . hadoop . hbase . filter . IDENT_10 . METHOD_6 ( org . apache . hadoop . hbase . util . IDENT_13 . METHOD_7 ( 10 ) , true , org . apache . hadoop . hbase . util . IDENT_13 . METHOD_7 ( "" ) , false ) ) ; IDENT_12 . add ( new org . apache . hadoop . hbase . filter . IDENT_10 . METHOD_6 ( org . apache . hadoop . hbase . util . IDENT_13 . METHOD_7 ( INT_0 ) , true , org . apache . hadoop . hbase . util . IDENT_13 . METHOD_7 ( INT_1 ) , false ) ) ; org . apache . hadoop . hbase . filter . IDENT_10 filter = new org . apache . hadoop . hbase . filter . METHOD_8 ( IDENT_12 ) ; IDENT_9 . METHOD_9 ( filter ) ; int IDENT_14 = METHOD_10 ( IDENT_2 , IDENT_9 ) ; java . util . List < org . apache . hadoop . hbase . IDENT_15 > IDENT_16 = METHOD_11 ( org . apache . hadoop . hbase . util . IDENT_13 . METHOD_7 ( 10 ) , org . apache . hadoop . hbase . util . IDENT_13 . METHOD_7 ( "" ) , IDENT_2 ) ; "<AssertPlaceHolder>" ; IDENT_2 . close ( ) ; } size ( ) { return 0 ; }
org . junit . Assert . assertEquals ( IDENT_16 . size ( ) , IDENT_14 ) 