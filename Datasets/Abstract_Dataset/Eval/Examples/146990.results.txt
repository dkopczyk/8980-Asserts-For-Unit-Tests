METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . util . IDENT_2 set = new com . IDENT_0 . IDENT_1 . util . METHOD_1 ( STRING_0 ) ; set . remove ( STRING_1 ) ; "<AssertPlaceHolder>" ; } contains ( java . lang . Object ) { if ( ! ( item instanceof java . lang . String ) ) { return false ; } java . lang . String IDENT_3 = ( ( java . lang . String ) ( item ) ) ; java . lang . String IDENT_4 = ( " " + ( METHOD_2 ( ) ) ) + " " ; java . lang . StringBuilder IDENT_5 = new java . lang . StringBuilder ( ( ( IDENT_3 . length ( ) ) + 3 ) ) ; IDENT_5 . append ( " " ) . append ( IDENT_3 ) . append ( STRING_2 ) ; for ( int IDENT_6 ; ; ) { IDENT_5 . METHOD_3 ( 1 , STRING_3 ) ; if ( IDENT_4 . contains ( IDENT_5 ) ) { return false ; } else { IDENT_5 . METHOD_3 ( 1 , STRING_4 ) ; if ( IDENT_4 . contains ( IDENT_5 ) ) { return true ; } } IDENT_6 = IDENT_5 . METHOD_4 ( "/" , ( ( IDENT_5 . length ( ) ) - 3 ) ) ; if ( IDENT_6 < 0 ) { break ; } else { IDENT_5 . METHOD_5 ( ( IDENT_6 + 2 ) ) ; IDENT_5 . METHOD_3 ( ( IDENT_6 + 1 ) , STRING_2 ) ; } } return IDENT_4 . contains ( STRING_5 ) ; }
org . junit . Assert . assertEquals ( false , set . contains ( STRING_1 ) ) 