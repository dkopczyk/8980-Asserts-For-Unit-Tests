METHOD_0 ( ) { java . nio . file . Path IDENT_0 = IDENT_1 . METHOD_1 ( STRING_0 ) . METHOD_2 ( ) ; java . nio . file . Path IDENT_2 = IDENT_1 . METHOD_1 ( STRING_1 ) . METHOD_2 ( ) ; java . nio . file . Path IDENT_3 = java . nio . file . IDENT_4 . METHOD_3 ( IDENT_0 . resolve ( STRING_2 ) ) ; java . nio . file . IDENT_4 . METHOD_3 ( IDENT_2 . resolve ( STRING_2 ) ) ; com . github . IDENT_5 . IDENT_6 . test . IDENT_7 . METHOD_4 ( 0 , IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . nio . file . Path , java . nio . file . Path ) { java . util . IDENT_8 < java . nio . file . Path , java . nio . file . Path > IDENT_9 = com . github . IDENT_5 . IDENT_6 . test . IDENT_7 . METHOD_6 ( IDENT_10 ) ; java . util . IDENT_8 < java . nio . file . Path , java . nio . file . Path > IDENT_11 = com . github . IDENT_5 . IDENT_6 . test . IDENT_7 . METHOD_6 ( IDENT_12 ) ; if ( ! ( IDENT_9 . METHOD_7 ( ) . equals ( IDENT_11 . METHOD_7 ( ) ) ) ) { return false ; } for ( Map . Entry < java . nio . file . Path , java . nio . file . Path > entrySet : IDENT_9 . entrySet ( ) ) { java . nio . file . Path name = entrySet . getKey ( ) ; java . nio . file . Path IDENT_13 = entrySet . getValue ( ) ; java . nio . file . Path IDENT_14 = IDENT_11 . get ( name ) ; com . github . IDENT_5 . IDENT_6 . IDENT_15 . IDENT_16 IDENT_17 = com . github . IDENT_5 . IDENT_6 . test . IDENT_7 . IDENT_18 . METHOD_8 ( IDENT_13 ) ; com . github . IDENT_5 . IDENT_6 . IDENT_15 . IDENT_16 IDENT_19 = com . github . IDENT_5 . IDENT_6 . test . IDENT_7 . IDENT_18 . METHOD_8 ( IDENT_14 ) ; if ( ! ( com . github . IDENT_5 . IDENT_6 . test . IDENT_7 . METHOD_9 ( IDENT_17 , IDENT_19 ) ) ) { return false ; } else if ( IDENT_17 . METHOD_10 ( ) ) { boolean IDENT_20 = com . github . IDENT_5 . IDENT_6 . test . IDENT_7 . METHOD_11 ( IDENT_13 , IDENT_14 ) ; if ( ! IDENT_20 ) { return false ; } } else if ( IDENT_17 . METHOD_12 ( ) ) { boolean IDENT_20 = com . github . IDENT_5 . IDENT_6 . test . IDENT_7 . METHOD_5 ( IDENT_13 , IDENT_14 ) ; if ( ! IDENT_20 ) { return false ; } } } return true ; }
org . junit . Assert . assertFalse ( com . github . IDENT_5 . IDENT_6 . test . IDENT_7 . METHOD_5 ( IDENT_0 , IDENT_2 ) ) 