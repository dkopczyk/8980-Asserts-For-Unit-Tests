METHOD_0 ( ) { byte [ ] exp = new byte [ ] { ( ( byte ) ( 0 ) ) } ; byte [ ] IDENT_0 = de . IDENT_1 . IDENT_2 . utils . Utils . METHOD_1 ( BigInteger . IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . math . BigInteger ) { if ( IDENT_4 == null ) { throw new java . lang . METHOD_2 ( ) ; } byte [ ] IDENT_5 ; byte [ ] IDENT_6 ; java . math . BigInteger IDENT_7 ; if ( ( ( IDENT_5 [ 0 ] ) == ( ( byte ) ( 0 ) ) ) && ( ( IDENT_5 . length ) > 1 ) ) { IDENT_6 = new byte [ ( IDENT_5 . length ) - 1 ] ; java . lang . System . METHOD_3 ( IDENT_5 , 1 , IDENT_6 , 0 , IDENT_6 . length ) ; } else { IDENT_6 = IDENT_5 ; } return IDENT_6 ; }
org . junit . Assert . assertArrayEquals ( exp , IDENT_0 ) 