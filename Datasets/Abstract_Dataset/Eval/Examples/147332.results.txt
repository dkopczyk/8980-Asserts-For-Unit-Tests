METHOD_0 ( ) { final java . util . concurrent . IDENT_0 < java . lang . Integer > q = new net . IDENT_1 . IDENT_2 . IDENT_3 . queue . IDENT_4 < java . lang . Integer > ( 3 , net . IDENT_1 . IDENT_2 . IDENT_3 . queue . shared . Integer . class ) ; q . add ( IDENT_5 ) ; q . add ( IDENT_6 ) ; q . add ( IDENT_7 ) ; for ( net . IDENT_1 . IDENT_2 . IDENT_3 . queue . shared . Iterator it = q . iterator ( ) ; it . hasNext ( ) ; ) { q . remove ( ) ; it . next ( ) ; } "<AssertPlaceHolder>" ; } size ( ) { int read = IDENT_8 . METHOD_1 ( ) ; int write = IDENT_8 . METHOD_2 ( ) ; if ( write < read ) write += IDENT_9 . METHOD_3 ( ) ; return write - read ; }
org . junit . Assert . assertEquals ( 0 , q . size ( ) ) 