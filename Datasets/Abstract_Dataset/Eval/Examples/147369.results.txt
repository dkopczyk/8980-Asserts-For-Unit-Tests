METHOD_0 ( ) { net . IDENT_0 . collections . IDENT_1 map = net . IDENT_0 . collections . IDENT_2 . map . IDENT_3 . METHOD_1 ( ) ; java . lang . String s = map . toString ( ) ; for ( int i = 1 ; i <= 5 ; ++ i ) { "<AssertPlaceHolder>" ; } } contains ( java . lang . Object ) { if ( o == null ) throw new java . lang . METHOD_2 ( STRING_0 ) ; int read = this . IDENT_4 . METHOD_3 ( ) ; int write = this . IDENT_4 . METHOD_4 ( ) ; if ( read == write ) return false ; if ( read < write ) { for ( int location = read ; location < write ; location ++ ) { if ( o . equals ( IDENT_5 . METHOD_5 ( location ) ) ) return true ; } return false ; } for ( int location = read ; location < ( IDENT_5 . METHOD_6 ( ) ) ; location ++ ) { if ( o . equals ( IDENT_5 . METHOD_5 ( location ) ) ) return true ; } for ( int location = 0 ; location < write ; location ++ ) { if ( o . equals ( IDENT_5 . METHOD_5 ( location ) ) ) return true ; } return false ; }
org . junit . Assert . assertTrue ( s . contains ( java . lang . String . valueOf ( i ) ) ) 