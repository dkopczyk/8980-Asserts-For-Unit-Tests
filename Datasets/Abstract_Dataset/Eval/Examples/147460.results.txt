METHOD_0 ( ) { java . sql . IDENT_0 xml = IDENT_1 . METHOD_1 ( ) ; xml . METHOD_2 ( "" ) ; try { xml . METHOD_2 ( "" ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . sql . IDENT_2 IDENT_3 ) { } java . sql . ResultSet rs = METHOD_3 ( ) ; "<AssertPlaceHolder>" ; xml = rs . METHOD_4 ( 1 ) ; try { xml . METHOD_2 ( "" ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . sql . IDENT_2 IDENT_3 ) { } } next ( ) { METHOD_5 ( ) ; if ( IDENT_4 ) { throw new org . IDENT_5 . util . METHOD_6 ( org . IDENT_5 . util . IDENT_6 . METHOD_7 ( STRING_1 ) , org . IDENT_5 . util . IDENT_7 . IDENT_8 ) ; } if ( ( ( IDENT_9 ) + 1 ) >= ( IDENT_10 . size ( ) ) ) { if ( ( ( IDENT_11 ) == null ) || ( ( ( IDENT_12 ) > 0 ) && ( ( ( IDENT_13 ) + ( IDENT_10 . size ( ) ) ) >= ( IDENT_12 ) ) ) ) { IDENT_9 = IDENT_10 . size ( ) ; IDENT_14 = null ; IDENT_15 = null ; return false ; } IDENT_13 += IDENT_10 . size ( ) ; int IDENT_16 = IDENT_17 ; if ( ( IDENT_12 ) != 0 ) { if ( ( IDENT_16 == 0 ) || ( ( ( IDENT_13 ) + IDENT_16 ) > ( IDENT_12 ) ) ) { IDENT_16 = ( IDENT_12 ) - ( IDENT_13 ) ; } } connection . METHOD_8 ( ) . METHOD_9 ( IDENT_11 , new org . IDENT_5 . jdbc . IDENT_18 . METHOD_10 ( ) , IDENT_16 ) ; IDENT_9 = 0 ; if ( IDENT_10 . isEmpty ( ) ) { IDENT_14 = null ; IDENT_15 = null ; return false ; } } else { ( IDENT_9 ) ++ ; } METHOD_11 ( ) ; return true ; }
org . junit . Assert . assertTrue ( rs . next ( ) ) 