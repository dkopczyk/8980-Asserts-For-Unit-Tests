test ( ) { org . apache . hadoop . hbase . client . IDENT_0 IDENT_1 = org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_0 ( ) . METHOD_1 ( org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_6 ) . get ( 0 ) . METHOD_2 ( ) ; org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_7 IDENT_8 = org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_0 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_9 IDENT_10 = IDENT_8 . METHOD_5 ( ) . METHOD_6 ( IDENT_1 ) ; org . apache . hadoop . hbase . IDENT_11 IDENT_12 = IDENT_10 . METHOD_7 ( ) ; org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_13 = new java . util . concurrent . METHOD_8 ( 1 ) ; org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_14 = new java . util . concurrent . METHOD_8 ( 1 ) ; org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_15 = new java . util . concurrent . METHOD_8 ( 1 ) ; IDENT_8 . METHOD_9 ( new org . apache . hadoop . hbase . IDENT_2 . METHOD_10 ( IDENT_1 , IDENT_12 , IDENT_12 ) ) ; org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_14 . METHOD_11 ( ) ; org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_16 = new java . util . concurrent . METHOD_8 ( 1 ) ; org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_17 = new java . util . concurrent . METHOD_8 ( 1 ) ; org . apache . hadoop . hbase . IDENT_11 IDENT_18 = org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_19 ; org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_0 ( ) . METHOD_12 ( IDENT_18 ) ; org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_13 . METHOD_13 ( ) ; org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_17 . METHOD_11 ( ) ; org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_15 . METHOD_13 ( ) ; for ( int i = 0 ; i < 15 ; i ++ ) { if ( ( IDENT_10 . METHOD_14 ( ) ) == ( IDENT_20 . IDENT_21 . IDENT_22 ) ) { break ; } java . lang . Thread . sleep ( 1000 ) ; } org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_16 . METHOD_13 ( ) ; java . lang . Thread . sleep ( INT_0 ) ; int count = 0 ; for ( org . apache . hadoop . hbase . util . IDENT_23 . IDENT_24 t : org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_0 ( ) . METHOD_15 ( ) ) { if ( ! ( t . METHOD_16 ( ) . METHOD_1 ( org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_6 ) . isEmpty ( ) ) ) { org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . IDENT_4 . LOG . info ( STRING_0 , IDENT_1 , t . METHOD_16 ( ) . METHOD_17 ( ) ) ; count ++ ; } } "<AssertPlaceHolder>" ; } METHOD_17 ( ) { return metrics . METHOD_17 ( ) ; }
org . junit . Assert . assertEquals ( 1 , count ) 