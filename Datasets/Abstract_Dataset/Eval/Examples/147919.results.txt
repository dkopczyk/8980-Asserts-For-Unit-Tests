METHOD_0 ( ) { final java . lang . IDENT_0 exception = new java . lang . METHOD_1 ( ) ; when ( this . IDENT_1 . METHOD_2 ( ) ) . METHOD_3 ( exception ) ; final org . IDENT_2 . data . IDENT_3 < org . apache . commons . lang3 . tuple . IDENT_4 < java . lang . String , java . lang . String > > result = this . component . load ( this . IDENT_1 ) ; "<AssertPlaceHolder>" ; verify ( this . IDENT_5 . METHOD_4 ( ) ) . error ( ( STRING_0 + STRING_1 ) , exception . getMessage ( ) ) ; } load ( org . xwiki . IDENT_6 . IDENT_7 ) { try { return METHOD_5 ( ) . newInstance ( document ) ; } catch ( java . lang . IllegalArgumentException | java . lang . reflect . IDENT_8 ex ) { this . logger . info ( STRING_2 , METHOD_6 ( ) , ( document == null ? null : document . METHOD_7 ( ) ) ) ; } catch ( java . lang . IDENT_9 | java . lang . IDENT_10 ex ) { this . logger . error ( STRING_3 , METHOD_6 ( ) , ( document == null ? null : document . METHOD_7 ( ) ) , ex . getMessage ( ) ) ; } return null ; }
org . junit . Assert . assertNull ( result ) 