METHOD_0 ( ) { org . xwiki . component . manager . IDENT_0 IDENT_1 = this . IDENT_2 . getInstance ( org . xwiki . component . manager . IDENT_0 . class , STRING_0 ) ; java . util . Map < java . lang . String , org . IDENT_3 . IDENT_4 . IDENT_5 > IDENT_6 = new java . util . HashMap ( ) ; IDENT_6 . put ( STRING_1 , org . mockito . Mockito . mock ( org . IDENT_3 . IDENT_4 . IDENT_5 . class ) ) ; when ( IDENT_1 . < org . IDENT_3 . IDENT_4 . IDENT_5 > METHOD_1 ( org . IDENT_3 . IDENT_4 . IDENT_5 . class ) ) . thenReturn ( IDENT_6 ) ; java . util . Set < java . lang . String > response = this . IDENT_2 . METHOD_2 ( ) . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { try { java . util . Map < java . lang . String , org . IDENT_3 . IDENT_4 . IDENT_5 > IDENT_7 = this . IDENT_8 . get ( ) . METHOD_1 ( org . IDENT_3 . IDENT_4 . IDENT_5 . class ) ; if ( IDENT_7 != null ) { java . util . Set < java . lang . String > result = new java . util . METHOD_4 ( org . IDENT_3 . IDENT_4 . script . IDENT_9 . IDENT_10 . instance ) ; result . addAll ( IDENT_7 . METHOD_5 ( ) ) ; return result ; } } catch ( org . xwiki . component . manager . IDENT_11 ex ) { this . logger . warn ( STRING_2 , ex ) ; } return java . util . Collections . METHOD_6 ( ) ; }
org . junit . Assert . assertEquals ( IDENT_6 . METHOD_5 ( ) , response ) 