METHOD_0 ( ) { org . springframework . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( null ) ; org . springframework . core . IDENT_3 parameter = METHOD_2 ( java . util . Map . class ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . springframework . core . IDENT_3 ) { try { for ( org . springframework . IDENT_0 . IDENT_1 . method . support . IDENT_4 . IDENT_5 < ? > IDENT_6 : this . IDENT_7 ) { if ( ( parameter . METHOD_4 ( ) . METHOD_5 ( IDENT_6 . getType ( ) ) ) && ( Boolean . IDENT_8 . equals ( IDENT_6 . METHOD_6 ( ) . call ( ) ) ) ) { return true ; } } } catch ( java . lang . Exception e ) { org . springframework . util . IDENT_9 . METHOD_7 ( e ) ; } return false ; }
org . junit . Assert . assertThat ( this . resolver . METHOD_3 ( parameter ) , org . hamcrest . Matchers . is ( false ) ) 