METHOD_0 ( ) { com . IDENT_0 . junit . IDENT_1 . internal . IDENT_2 < java . lang . Integer > IDENT_3 = new com . IDENT_0 . junit . IDENT_1 . internal . METHOD_1 ( asList ( asList ( 0 , 1 , 2 ) . iterator ( ) , asList ( 0 , 1 , 2 ) . iterator ( ) , asList ( 0 , 1 , 2 ) . iterator ( ) ) ) ; java . util . List < java . util . List < java . lang . Integer > > result = newArrayList ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } iterator ( ) { java . util . List < com . IDENT_0 . junit . IDENT_1 . generator . IDENT_4 < ? > > IDENT_5 = java . util . Arrays . < com . IDENT_0 . junit . IDENT_1 . generator . IDENT_4 < ? > > asList ( new com . IDENT_0 . junit . IDENT_1 . test . generator . METHOD_2 ( ) , new com . IDENT_0 . junit . IDENT_1 . test . generator . METHOD_3 ( ) , new com . IDENT_0 . junit . IDENT_1 . test . generator . METHOD_4 ( ) , new com . IDENT_0 . junit . IDENT_1 . test . generator . METHOD_5 ( ) , new com . IDENT_0 . junit . IDENT_1 . test . generator . METHOD_6 ( ) , new com . IDENT_0 . junit . IDENT_1 . test . generator . METHOD_7 ( ) , new com . IDENT_0 . junit . IDENT_1 . test . generator . METHOD_8 ( ) , new com . IDENT_0 . junit . IDENT_1 . test . generator . METHOD_9 ( ) , new com . IDENT_0 . junit . IDENT_1 . test . generator . METHOD_10 ( ) , new com . IDENT_0 . junit . IDENT_1 . test . generator . METHOD_11 ( ) , new com . IDENT_0 . junit . IDENT_1 . test . generator . METHOD_12 ( ) , new com . IDENT_0 . junit . IDENT_1 . test . generator . METHOD_13 ( ) , new com . IDENT_0 . junit . IDENT_1 . test . generator . METHOD_14 ( ) , new com . IDENT_0 . junit . IDENT_1 . test . generator . METHOD_15 ( ) , new com . IDENT_0 . junit . IDENT_1 . test . generator . METHOD_16 ( ) , new com . IDENT_0 . junit . IDENT_1 . internal . generator . METHOD_17 ( ) ) ; return IDENT_5 . iterator ( ) ; }
org . junit . Assert . assertEquals ( asList ( asList ( 0 , 0 , 0 ) , asList ( 1 , 0 , 0 ) , asList ( 2 , 0 , 0 ) , asList ( 0 , 1 , 0 ) , asList ( 1 , 1 , 0 ) , asList ( 2 , 1 , 0 ) , asList ( 0 , 2 , 0 ) , asList ( 1 , 2 , 0 ) , asList ( 2 , 2 , 0 ) , asList ( 0 , 0 , 1 ) , asList ( 1 , 0 , 1 ) , asList ( 2 , 0 , 1 ) , asList ( 0 , 1 , 1 ) , asList ( 1 , 1 , 1 ) , asList ( 2 , 1 , 1 ) , asList ( 0 , 2 , 1 ) , asList ( 1 , 2 , 1 ) , asList ( 2 , 2 , 1 ) , asList ( 0 , 0 , 2 ) , asList ( 1 , 0 , 2 ) , asList ( 2 , 0 , 2 ) , asList ( 0 , 1 , 2 ) , asList ( 1 , 1 , 2 ) , asList ( 2 , 1 , 2 ) , asList ( 0 , 2 , 2 ) , asList ( 1 , 2 , 2 ) , asList ( 2 , 2 , 2 ) ) , result ) 