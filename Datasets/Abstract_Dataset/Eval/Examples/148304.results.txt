METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String [ ] IDENT_1 = new java . lang . String [ ] { STRING_1 , STRING_2 , STRING_3 } ; java . lang . String [ ] IDENT_2 = new java . lang . String [ ] { STRING_1 } ; long [ ] IDENT_3 = new long [ ] { INT_0 , INT_1 } ; java . lang . IDENT_4 IDENT_5 = new java . lang . METHOD_1 ( ) ; java . lang . METHOD_1 IDENT_6 = new java . lang . METHOD_1 ( ) ; java . lang . METHOD_1 actual = com . IDENT_7 . junit . IDENT_8 . runner . IDENT_9 . METHOD_2 ( IDENT_0 , IDENT_1 , IDENT_2 , IDENT_3 , IDENT_5 , IDENT_6 ) ; java . lang . String expected = org . junit . Assert . format ( ( STRING_4 + ( ( STRING_5 + STRING_6 ) + STRING_7 ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . IDENT_10 , java . lang . Object [ ] , java . lang . Object [ ] , long [ ] , java . lang . METHOD_1 , java . lang . METHOD_1 ) { java . lang . String . String IDENT_11 = ( ( IDENT_6 . getMessage ( ) ) == null ) ? "" : format ( STRING_8 , IDENT_6 . getMessage ( ) ) ; java . lang . String . String IDENT_12 = ( ( IDENT_5 . getMessage ( ) ) == null ) ? STRING_9 : format ( STRING_10 , IDENT_5 . getMessage ( ) ) ; java . lang . String . String template = STRING_11 + ( ( ( STRING_12 + STRING_13 ) + STRING_14 ) + STRING_15 ) ; java . lang . METHOD_1 e = new java . lang . METHOD_1 ( format ( template , IDENT_0 , IDENT_12 , java . util . Arrays . METHOD_3 ( args ) , IDENT_11 , java . util . Arrays . METHOD_3 ( IDENT_13 ) , java . util . Arrays . toString ( IDENT_3 ) ) , IDENT_6 ) ; e . METHOD_4 ( IDENT_5 . METHOD_5 ( ) ) ; return e ; }
org . junit . Assert . assertThat ( actual . getMessage ( ) , org . hamcrest . CoreMatchers . equalTo ( expected ) ) 