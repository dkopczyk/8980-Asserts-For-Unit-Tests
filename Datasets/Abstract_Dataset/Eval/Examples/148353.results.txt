METHOD_0 ( ) { when ( IDENT_0 . resolve ( ) ) . thenReturn ( new org . IDENT_1 . authentication . IDENT_2 . internal . METHOD_1 ( ) ) ; when ( IDENT_3 . METHOD_2 ( ) ) . thenReturn ( true ) ; org . IDENT_1 . authentication . IDENT_2 . IDENT_4 IDENT_5 = mock ( org . IDENT_1 . authentication . IDENT_2 . IDENT_4 . class ) ; when ( IDENT_5 . resolve ( ) ) . thenReturn ( new org . IDENT_1 . authentication . IDENT_2 . internal . METHOD_3 ( 2 ) ) ; org . IDENT_1 . authentication . IDENT_2 . IDENT_4 IDENT_6 = mock ( org . IDENT_1 . authentication . IDENT_2 . IDENT_4 . class ) ; when ( IDENT_6 . resolve ( ) ) . thenReturn ( new org . IDENT_1 . authentication . IDENT_2 . internal . METHOD_3 ( 3 ) ) ; org . IDENT_1 . authentication . IDENT_2 . IDENT_4 IDENT_7 = mock ( org . IDENT_1 . authentication . IDENT_2 . IDENT_4 . class ) ; when ( IDENT_7 . resolve ( ) ) . thenReturn ( new org . IDENT_1 . authentication . IDENT_2 . internal . METHOD_3 ( 1 ) ) ; when ( iterator . hasNext ( ) ) . thenReturn ( true , true , true , false , true , true , true , false ) ; when ( iterator . next ( ) ) . thenReturn ( IDENT_5 , IDENT_6 , IDENT_7 , IDENT_5 , IDENT_6 , IDENT_7 ) ; when ( IDENT_8 . iterator ( ) ) . thenReturn ( iterator ) ; IDENT_9 . init ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { org . IDENT_1 . authentication . IDENT_2 . IDENT_10 IDENT_11 = IDENT_12 ; for ( org . IDENT_1 . authentication . IDENT_2 . IDENT_4 resolver : IDENT_8 ) { org . IDENT_1 . authentication . IDENT_2 . IDENT_10 IDENT_13 = resolver . resolve ( ) ; if ( ( IDENT_11 . compareTo ( IDENT_13 ) ) < 0 ) { IDENT_11 = IDENT_13 ; } } return IDENT_11 ; }
org . junit . Assert . assertTrue ( ( ( IDENT_9 . METHOD_4 ( ) . compareTo ( new org . IDENT_1 . authentication . IDENT_2 . internal . METHOD_3 ( 3 ) ) ) == 0 ) ) 