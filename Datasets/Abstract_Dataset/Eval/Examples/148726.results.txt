METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = this . IDENT_6 . METHOD_1 ( ) . METHOD_2 ( STRING_0 ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_7 = this . IDENT_6 . METHOD_1 ( ) . METHOD_2 ( STRING_1 ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_8 = this . IDENT_6 . METHOD_1 ( ) . METHOD_2 ( STRING_2 ) ; IDENT_5 . METHOD_3 ( STRING_3 , IDENT_7 ) ; IDENT_5 . METHOD_3 ( STRING_4 , IDENT_8 ) ; IDENT_8 . METHOD_3 ( STRING_4 , IDENT_5 ) ; final org . apache . tinkerpop . IDENT_9 . IDENT_2 . IDENT_10 IDENT_11 = this . IDENT_6 . METHOD_4 ( T . IDENT_12 , STRING_0 ) ; final org . apache . tinkerpop . IDENT_9 . IDENT_2 . IDENT_10 IDENT_13 = this . IDENT_6 . METHOD_4 ( T . IDENT_12 , STRING_1 ) ; final org . apache . tinkerpop . IDENT_9 . IDENT_2 . IDENT_10 IDENT_14 = this . IDENT_6 . METHOD_4 ( T . IDENT_12 , STRING_2 ) ; IDENT_11 . METHOD_5 ( STRING_3 , IDENT_13 ) ; IDENT_11 . METHOD_5 ( STRING_4 , IDENT_14 ) ; this . IDENT_6 . tx ( ) . commit ( ) ; java . util . concurrent . atomic . IDENT_15 count = new java . util . concurrent . atomic . METHOD_6 ( 0 ) ; this . IDENT_6 . METHOD_7 ( ) . METHOD_8 ( IDENT_11 ) . METHOD_9 ( IDENT_16 . METHOD_10 ( ) , IDENT_16 . METHOD_11 ( ) ) . METHOD_12 ( ( IDENT_17 ) -> { IDENT_11 . METHOD_5 ( STRING_3 , IDENT_13 ) ; IDENT_14 . METHOD_5 ( STRING_4 , IDENT_11 ) ; count . METHOD_13 ( ) ; } ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ) { return this . METHOD_7 ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_18 . class ) ; }
org . junit . Assert . assertEquals ( 4 , count . get ( ) ) 