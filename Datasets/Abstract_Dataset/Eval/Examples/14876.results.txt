METHOD_0 ( ) { org . apache . hadoop . hbase . IDENT_0 server = new org . apache . hadoop . hbase . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_0 ) ; org . apache . hadoop . hbase . IDENT_1 . IDENT_4 IDENT_5 = org . apache . hadoop . hbase . IDENT_1 . IDENT_6 . METHOD_2 ( server . METHOD_3 ( ) , server . METHOD_4 ( ) ) ; java . lang . String group = STRING_1 ; IDENT_5 . METHOD_5 ( server . METHOD_6 ( ) , "2" , ( group + STRING_2 ) ) ; IDENT_5 . METHOD_5 ( server . METHOD_6 ( ) , "2" , ( group + STRING_3 ) ) ; org . apache . hadoop . hbase . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 IDENT_9 = org . apache . hadoop . hbase . IDENT_1 . IDENT_2 . IDENT_3 . manager . new org . apache . hadoop . hbase . IDENT_1 . IDENT_2 . IDENT_7 . METHOD_7 ( server . METHOD_6 ( ) ) ; IDENT_9 . run ( ) ; for ( java . lang . String IDENT_10 : org . apache . hadoop . hbase . IDENT_1 . IDENT_2 . IDENT_3 . manager . METHOD_8 ( ) ) { "<AssertPlaceHolder>" ; } } run ( ) { try { mapper . run ( IDENT_11 ) ; } catch ( java . lang . Throwable IDENT_12 ) { org . apache . hadoop . hbase . mapreduce . IDENT_13 . LOG . error ( STRING_4 , IDENT_12 ) ; } }
org . junit . Assert . assertTrue ( IDENT_10 . startsWith ( "1" ) ) 