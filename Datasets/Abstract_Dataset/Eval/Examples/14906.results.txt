METHOD_0 ( ) { final java . util . concurrent . atomic . IDENT_0 IDENT_1 = new java . util . concurrent . atomic . METHOD_1 ( ) ; java . lang . Thread consumer = new java . lang . Thread ( ) { @ org . apache . hadoop . hbase . util . Override public void run ( ) { try { java . lang . Integer n = IDENT_2 . METHOD_2 ( ) ; IDENT_1 . set ( n ) ; } catch ( java . lang . IDENT_3 e ) { e . printStackTrace ( ) ; } } } ; consumer . start ( ) ; IDENT_2 . METHOD_3 ( 3 ) ; consumer . join ( 1000 ) ; "<AssertPlaceHolder>" ; consumer . METHOD_4 ( ) ; } get ( ) { return org . apache . hadoop . hbase . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 ; }
org . junit . Assert . assertEquals ( 3 , IDENT_1 . get ( ) ) 