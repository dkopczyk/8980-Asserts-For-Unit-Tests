METHOD_0 ( ) { java . lang . String IDENT_0 = net . sourceforge . IDENT_1 . lang . java . ast . IDENT_2 . METHOD_1 ( null , 0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , int ) { if ( ( text == null ) || ( position > ( text . length ( ) ) ) ) { return null ; } int IDENT_3 = text . indexOf ( STRING_0 , position ) ; if ( IDENT_3 < 0 ) { IDENT_3 = text . length ( ) ; } if ( org . apache . commons . lang3 . StringUtils . METHOD_2 ( text . substring ( position , IDENT_3 ) ) ) { return text . substring ( position , IDENT_3 ) . trim ( ) ; } if ( ( text . indexOf ( STRING_1 , IDENT_3 ) ) >= 0 ) { return null ; } int IDENT_4 = text . indexOf ( STRING_0 , ( IDENT_3 + 1 ) ) ; if ( org . apache . commons . lang3 . StringUtils . METHOD_2 ( text . substring ( IDENT_3 , IDENT_4 ) ) ) { return text . substring ( IDENT_3 , IDENT_4 ) . trim ( ) ; } return null ; }
org . junit . Assert . assertNull ( METHOD_1 ) 