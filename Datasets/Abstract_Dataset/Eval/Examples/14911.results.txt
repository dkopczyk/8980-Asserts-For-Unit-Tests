METHOD_0 ( ) { final int IDENT_0 = org . apache . hadoop . hbase . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( org . apache . hadoop . hbase . IDENT_1 . IDENT_4 . IDENT_5 , org . apache . hadoop . hbase . IDENT_1 . IDENT_4 . IDENT_6 ) ; try { org . apache . hadoop . hbase . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_2 ( org . apache . hadoop . hbase . IDENT_1 . IDENT_4 . IDENT_5 , ( IDENT_0 * 4 ) ) ; final java . lang . String IDENT_7 = java . lang . Integer . toString ( ( ( IDENT_0 * 4 ) * 2 ) ) ; int IDENT_8 = org . apache . hadoop . hbase . IDENT_1 . IDENT_9 . METHOD_3 ( new org . apache . hadoop . conf . Configuration ( org . apache . hadoop . hbase . IDENT_1 . IDENT_2 . IDENT_3 ) , new java . lang . String [ ] { STRING_0 , IDENT_7 , STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , IDENT_7 } ) ; "<AssertPlaceHolder>" ; } finally { org . apache . hadoop . hbase . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_2 ( org . apache . hadoop . hbase . IDENT_1 . IDENT_4 . IDENT_5 , IDENT_0 ) ; } } toString ( org . apache . hadoop . hbase . util . IDENT_10 ) { return ( ( ( org . apache . hadoop . hbase . util . IDENT_11 . METHOD_4 ( IDENT_12 ) ) + ( org . apache . hadoop . hbase . util . IDENT_11 . IDENT_13 ) ) + STRING_6 ) + ( java . lang . String . format ( STRING_7 , IDENT_12 . METHOD_5 ( ) ) ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_8 ) 