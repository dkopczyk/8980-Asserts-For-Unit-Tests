METHOD_0 ( ) { java . lang . String key = STRING_0 ; java . util . Map < java . lang . String , com . github . IDENT_0 . IDENT_1 . IDENT_2 . testing . IDENT_3 > IDENT_4 = this . state . METHOD_1 ( key ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( IDENT_5 ) { java . util . Map < IDENT_6 , IDENT_7 > results = new java . util . HashMap < IDENT_6 , IDENT_7 > ( ) ; redis . IDENT_8 . IDENT_9 . IDENT_10 IDENT_9 = this . pool . getResource ( ) ; try { java . lang . String IDENT_11 = this . METHOD_2 ( key ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_12 = IDENT_9 . METHOD_3 ( IDENT_11 ) ; IDENT_6 IDENT_13 ; IDENT_7 value ; for ( java . lang . String IDENT_14 : IDENT_12 . METHOD_4 ( ) ) { IDENT_13 = ( ( IDENT_6 ) ( this . serializer . METHOD_5 ( IDENT_14 . getBytes ( ) ) ) ) ; value = ( ( IDENT_7 ) ( this . serializer . METHOD_5 ( IDENT_12 . get ( IDENT_14 ) . getBytes ( ) ) ) ) ; results . put ( IDENT_13 , value ) ; } } finally { this . pool . METHOD_6 ( IDENT_9 ) ; } return results ; }
org . junit . Assert . assertTrue ( IDENT_4 . isEmpty ( ) ) 