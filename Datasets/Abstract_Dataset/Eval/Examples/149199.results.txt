METHOD_0 ( ) { java . lang . String key = "test" ; com . github . IDENT_0 . IDENT_1 . IDENT_2 . testing . IDENT_3 IDENT_4 = com . github . IDENT_0 . IDENT_1 . IDENT_2 . testing . IDENT_3 . random ( ) ; com . github . IDENT_0 . IDENT_1 . IDENT_2 . testing . IDENT_3 IDENT_5 = com . github . IDENT_0 . IDENT_1 . IDENT_2 . testing . IDENT_3 . random ( ) ; com . github . IDENT_0 . IDENT_1 . IDENT_2 . testing . IDENT_3 IDENT_6 = com . github . IDENT_0 . IDENT_1 . IDENT_2 . testing . IDENT_3 . random ( ) ; this . state . put ( key , new com . github . IDENT_0 . IDENT_1 . IDENT_2 . state . IDENT_7 . IDENT_8 < com . github . IDENT_0 . IDENT_1 . IDENT_2 . testing . IDENT_3 > ( FLOAT_0 , IDENT_4 ) ) ; this . state . put ( key , new com . github . IDENT_0 . IDENT_1 . IDENT_2 . state . IDENT_7 . IDENT_8 < com . github . IDENT_0 . IDENT_1 . IDENT_2 . testing . IDENT_3 > ( FLOAT_1 , IDENT_5 ) ) ; this . state . put ( key , new com . github . IDENT_0 . IDENT_1 . IDENT_2 . state . IDENT_7 . IDENT_8 < com . github . IDENT_0 . IDENT_1 . IDENT_2 . testing . IDENT_3 > ( FLOAT_2 , IDENT_6 ) ) ; long IDENT_9 = this . state . METHOD_1 ( key ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( IDENT_10 ) { redis . IDENT_11 . IDENT_12 . IDENT_13 IDENT_12 = this . pool . getResource ( ) ; long result ; try { java . lang . String IDENT_14 = this . METHOD_2 ( key ) ; result = IDENT_12 . METHOD_3 ( IDENT_14 ) ; } finally { this . pool . METHOD_4 ( IDENT_12 ) ; } return result ; }
org . junit . Assert . assertEquals ( 3 , IDENT_9 ) 