METHOD_0 ( ) { java . lang . RuntimeException IDENT_0 = new java . lang . RuntimeException ( "test" ) ; METHOD_1 ( IDENT_0 ) . when ( IDENT_1 ) . METHOD_2 ( STRING_0 ) ; eu . IDENT_2 . IDENT_3 . IDENT_4 subject = new eu . IDENT_2 . IDENT_3 . METHOD_3 ( eu . IDENT_2 . IDENT_3 . IDENT_5 . class , STRING_1 ) ; try { run ( subject ) ; org . junit . Assert . fail ( STRING_2 ) ; } catch ( java . lang . RuntimeException e ) { "<AssertPlaceHolder>" ; } METHOD_4 ( IDENT_6 ) ; } fail ( java . lang . Object ) { if ( ! ( o instanceof eu . IDENT_2 . IDENT_3 . IDENT_7 ) ) { eu . IDENT_2 . IDENT_3 . IDENT_8 . logger . warn ( STRING_3 , o ) ; return ; } eu . IDENT_2 . IDENT_3 . IDENT_7 context = ( ( eu . IDENT_2 . IDENT_3 . IDENT_7 ) ( o ) ) ; java . lang . Object [ ] values = context . METHOD_5 ( ) ; eu . IDENT_2 . IDENT_3 . IDENT_8 . logger . trace ( STRING_4 , values ) ; try { invoke ( IDENT_9 , values ) ; } catch ( java . lang . Exception e ) { eu . IDENT_2 . IDENT_3 . IDENT_8 . logger . error ( STRING_5 , e ) ; } }
org . junit . Assert . assertSame ( IDENT_0 , e ) 