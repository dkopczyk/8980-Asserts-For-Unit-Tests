METHOD_0 ( ) { final long [ ] IDENT_0 = new long [ ] { 1 , 3 , 10 , INT_0 , 100 , INT_1 , 1000 , INT_2 , INT_3 , INT_4 , INT_5 , INT_6 , INT_7 , INT_8 } ; final java . lang . String IDENT_1 = STRING_0 ; final java . lang . String IDENT_2 = STRING_1 ; boolean IDENT_3 = false ; org . apache . hadoop . hbase . client . IDENT_4 p = new org . apache . hadoop . hbase . client . METHOD_1 ( org . apache . hadoop . hbase . IDENT_5 . IDENT_6 . row ) ; p . METHOD_2 ( org . apache . hadoop . hbase . IDENT_5 . IDENT_6 . IDENT_7 , org . apache . hadoop . hbase . IDENT_5 . IDENT_6 . IDENT_8 , org . apache . hadoop . hbase . IDENT_5 . IDENT_6 . val ) ; table . put ( p ) ; for ( int i = 0 ; i < 10 ; i ++ ) { table . put ( p ) ; } org . apache . hadoop . hbase . client . IDENT_9 g = new org . apache . hadoop . hbase . client . METHOD_3 ( org . apache . hadoop . hbase . IDENT_5 . IDENT_6 . row ) ; for ( int i = 0 ; i < 10 ; i ++ ) { table . get ( g ) ; } org . apache . hadoop . hbase . IDENT_5 . IDENT_6 . IDENT_10 . METHOD_4 ( ) . METHOD_5 ( ) ; long IDENT_11 = 0 ; java . lang . String IDENT_12 ; for ( int i = 0 ; i < ( IDENT_0 . length ) ; i ++ ) { IDENT_12 = ( ( ( ( ( IDENT_2 + STRING_2 ) + IDENT_1 ) + STRING_2 ) + IDENT_11 ) + STRING_3 ) + ( IDENT_0 [ i ] ) ; if ( org . apache . hadoop . hbase . IDENT_5 . IDENT_6 . IDENT_13 . METHOD_6 ( IDENT_12 , org . apache . hadoop . hbase . IDENT_5 . IDENT_6 . IDENT_14 ) ) { long count = org . apache . hadoop . hbase . IDENT_5 . IDENT_6 . IDENT_13 . METHOD_7 ( IDENT_12 , org . apache . hadoop . hbase . IDENT_5 . IDENT_6 . IDENT_14 ) ; if ( count > 0 ) { IDENT_3 = true ; break ; } } IDENT_11 = IDENT_0 [ i ] ; } IDENT_12 = ( ( ( ( IDENT_2 + STRING_2 ) + IDENT_1 ) + STRING_2 ) + ( IDENT_0 [ ( ( IDENT_0 . length ) - 1 ) ] ) ) + STRING_4 ; if ( org . apache . hadoop . hbase . IDENT_5 . IDENT_6 . IDENT_13 . METHOD_6 ( IDENT_12 , org . apache . hadoop . hbase . IDENT_5 . IDENT_6 . IDENT_14 ) ) { long count = org . apache . hadoop . hbase . IDENT_5 . IDENT_6 . IDENT_13 . METHOD_8 ( IDENT_12 , org . apache . hadoop . hbase . IDENT_5 . IDENT_6 . IDENT_14 ) ; if ( count > 0 ) { IDENT_3 = true ; } } "<AssertPlaceHolder>" ; } METHOD_8 ( java . lang . String , java . lang . String ) { return IDENT_15 . METHOD_8 ( group , name ) ; }
org . junit . Assert . assertEquals ( true , IDENT_3 ) 