METHOD_0 ( ) { java . util . Set < org . IDENT_0 . IDENT_1 . domain . IDENT_2 . IDENT_3 > IDENT_4 = new java . util . HashSet < org . IDENT_0 . IDENT_1 . domain . IDENT_2 . IDENT_3 > ( ) ; final java . util . Set < org . IDENT_0 . IDENT_1 . domain . IDENT_2 . IDENT_3 > IDENT_5 = new java . util . HashSet < org . IDENT_0 . IDENT_1 . domain . IDENT_2 . IDENT_3 > ( ) ; final org . IDENT_0 . IDENT_1 . domain . IDENT_2 . IDENT_3 IDENT_6 = org . IDENT_0 . IDENT_1 . domain . IDENT_2 . IDENT_7 . METHOD_1 ( org . IDENT_0 . IDENT_1 . domain . IDENT_2 . IDENT_3 . class , STRING_0 , IDENT_8 . IDENT_9 ) ; IDENT_6 . METHOD_2 ( ) . METHOD_3 ( asList ( STRING_1 ) ) ; IDENT_4 . add ( IDENT_6 ) ; final org . IDENT_0 . IDENT_1 . domain . IDENT_2 . IDENT_3 IDENT_10 = org . IDENT_0 . IDENT_1 . domain . IDENT_2 . IDENT_7 . METHOD_1 ( org . IDENT_0 . IDENT_1 . domain . IDENT_2 . IDENT_3 . class , STRING_0 , IDENT_8 . IDENT_11 ) ; IDENT_10 . METHOD_2 ( ) . METHOD_3 ( asList ( STRING_1 ) ) ; IDENT_5 . add ( IDENT_10 ) ; IDENT_4 = org . IDENT_0 . IDENT_1 . IDENT_12 . IDENT_13 . METHOD_4 ( IDENT_4 , IDENT_5 ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_14 . size ( ) ; }
org . junit . Assert . assertThat ( IDENT_4 . size ( ) , org . hamcrest . core . Is . is ( 0 ) ) 