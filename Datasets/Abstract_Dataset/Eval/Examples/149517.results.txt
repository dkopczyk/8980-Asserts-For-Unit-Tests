METHOD_0 ( ) { cc . redberry . rings . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ) . METHOD_2 ( INT_0 ) ; cc . redberry . rings . IDENT_0 . IDENT_1 . IDENT_3 < cc . redberry . rings . IDENT_4 . BigInteger > a = cc . redberry . rings . IDENT_0 . IDENT_1 . IDENT_3 . parse ( STRING_0 ) ; cc . redberry . rings . IDENT_0 . IDENT_1 . IDENT_3 < cc . redberry . rings . IDENT_4 . BigInteger > b = cc . redberry . rings . IDENT_0 . IDENT_1 . IDENT_3 . parse ( STRING_1 ) ; cc . redberry . rings . IDENT_0 . IDENT_1 . IDENT_3 < cc . redberry . rings . IDENT_4 . BigInteger > IDENT_5 = cc . redberry . rings . IDENT_0 . IDENT_1 . IDENT_3 . parse ( STRING_2 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( cc . redberry . rings . IDENT_0 . IDENT_1 . IDENT_3 , cc . redberry . rings . IDENT_0 . IDENT_1 . IDENT_3 ) { cc . redberry . rings . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_4 ( a , b ) ; if ( a == b ) return a . METHOD_5 ( ) ; if ( a . METHOD_6 ( ) ) return b . METHOD_5 ( ) ; if ( b . METHOD_6 ( ) ) return a . METHOD_5 ( ) ; if ( ( a . METHOD_7 ( ) ) < ( b . METHOD_7 ( ) ) ) return cc . redberry . rings . IDENT_0 . IDENT_1 . IDENT_7 . METHOD_3 ( b , a ) ; cc . redberry . rings . IDENT_4 . BigInteger IDENT_8 = a . content ( ) ; cc . redberry . rings . IDENT_4 . BigInteger IDENT_9 = b . content ( ) ; cc . redberry . rings . IDENT_4 . BigInteger IDENT_10 = cc . redberry . rings . IDENT_4 . IDENT_11 . METHOD_8 ( IDENT_8 , IDENT_9 ) ; if ( ( a . METHOD_9 ( ) ) || ( b . METHOD_9 ( ) ) ) return a . METHOD_10 ( IDENT_10 ) ; a = a . METHOD_5 ( ) . METHOD_11 ( IDENT_8 ) ; b = b . METHOD_5 ( ) . METHOD_11 ( IDENT_9 ) ; return cc . redberry . rings . IDENT_0 . IDENT_1 . IDENT_7 . METHOD_12 ( a , b ) . METHOD_13 ( IDENT_10 ) ; }
org . junit . Assert . assertEquals ( METHOD_8 , METHOD_3 ( a . METHOD_5 ( ) . METHOD_13 ( METHOD_8 ) , b . METHOD_5 ( ) . METHOD_13 ( METHOD_8 ) ) ) 