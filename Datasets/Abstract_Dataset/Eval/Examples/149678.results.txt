METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . model . item . IDENT_4 param = new IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . model . item . METHOD_1 ( ) ; param . METHOD_2 ( java . util . Arrays . asList ( STRING_0 ) ) ; param . METHOD_3 ( STRING_1 ) ; java . util . List < IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . model . item . IDENT_5 > IDENT_6 = client . item ( ) . get ( param ) ; for ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . model . item . IDENT_5 item : IDENT_6 ) { log . trace ( org . apache . commons . lang . builder . IDENT_7 . toString ( item , IDENT_8 . IDENT_9 ) ) ; } "<AssertPlaceHolder>" ; } get ( java . lang . String ) { if ( ( IDENT_0 . IDENT_1 . IDENT_2 . ui . util . IDENT_10 . IDENT_11 ) != null ) { try { return IDENT_0 . IDENT_1 . IDENT_2 . ui . util . IDENT_10 . IDENT_11 . getString ( key ) ; } catch ( java . util . IDENT_12 IDENT_13 ) { } } try { return IDENT_0 . IDENT_1 . IDENT_2 . ui . util . IDENT_10 . IDENT_14 . getString ( key ) ; } catch ( java . util . IDENT_12 IDENT_13 ) { } return "" ; }
org . junit . Assert . assertTrue ( ( ( IDENT_6 . size ( ) ) > 0 ) ) 