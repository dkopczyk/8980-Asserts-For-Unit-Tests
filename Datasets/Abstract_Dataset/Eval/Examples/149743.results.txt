METHOD_0 ( ) { final fr . gouv . vitam . common . database . parser . request . IDENT_0 . IDENT_1 request = new fr . gouv . vitam . common . database . parser . request . IDENT_0 . METHOD_1 ( ) ; final com . fasterxml . jackson . databind . IDENT_2 root = null ; request . METHOD_2 ( root ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( com . fasterxml . jackson . databind . IDENT_2 ) { if ( IDENT_3 == null ) { return ; } try { if ( IDENT_3 . METHOD_3 ( ) ) { int i = 0 ; for ( final com . fasterxml . jackson . databind . IDENT_2 IDENT_4 : IDENT_3 ) { METHOD_4 ( IDENT_4 ) ; if ( ( i == 1 ) && ( ( request . METHOD_5 ( ) . get ( i ) . METHOD_6 ( ) ) == ( fr . gouv . vitam . common . database . builder . request . configuration . IDENT_5 . IDENT_6 . IDENT_7 ) ) ) { throw new fr . gouv . vitam . common . exception . METHOD_7 ( ( STRING_0 + ( i + 1 ) ) ) ; } i ++ ; } } else { METHOD_4 ( IDENT_3 ) ; } } catch ( final java . lang . Exception e ) { throw new fr . gouv . vitam . common . exception . METHOD_7 ( ( STRING_1 + IDENT_3 ) , e ) ; } }
org . junit . Assert . assertNotNull ( request ) 