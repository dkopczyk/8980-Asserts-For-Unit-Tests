METHOD_0 ( ) { fr . gouv . vitam . common . IDENT_0 . client . IDENT_1 . IDENT_2 = true ; try ( final fr . gouv . vitam . common . IDENT_0 . client . IDENT_3 client = fr . gouv . vitam . common . IDENT_0 . client . IDENT_1 . factory . METHOD_1 ( ) ; fr . gouv . vitam . common . IDENT_0 . client . IDENT_4 iterator = new fr . gouv . vitam . common . IDENT_0 . client . METHOD_2 ( client , javax . ws . rs . IDENT_5 . IDENT_6 , STRING_0 , com . fasterxml . jackson . databind . node . IDENT_7 . class , null , null ) ) { final fr . gouv . vitam . common . model . IDENT_8 response = new fr . gouv . vitam . common . model . METHOD_3 ( ) ; final javax . ws . rs . core . Response . IDENT_9 builder = javax . ws . rs . core . Response . status ( Status . IDENT_10 ) ; when ( fr . gouv . vitam . common . IDENT_0 . client . IDENT_1 . mock . get ( ) ) . thenReturn ( fr . gouv . vitam . common . IDENT_0 . client . METHOD_2 . METHOD_4 ( builder , true , null ) . entity ( response ) . build ( ) ) ; "<AssertPlaceHolder>" ; } } hasNext ( ) { if ( ( IDENT_11 ) != null ) { return true ; } return IDENT_12 . METHOD_5 ( ( t ) -> IDENT_11 = t ) ; }
org . junit . Assert . assertFalse ( iterator . hasNext ( ) ) 