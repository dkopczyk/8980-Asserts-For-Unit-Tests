METHOD_0 ( ) { storage . METHOD_1 ( fr . gouv . vitam . common . storage . IDENT_0 . container . api . IDENT_1 . IDENT_2 ) ; storage . METHOD_2 ( fr . gouv . vitam . common . storage . IDENT_0 . container . api . IDENT_1 . IDENT_2 , fr . gouv . vitam . common . storage . IDENT_0 . container . api . IDENT_1 . IDENT_3 , METHOD_3 ( STRING_0 ) , IDENT_4 . IDENT_5 , null ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String , java . lang . String ) { fr . gouv . vitam . common . storage . IDENT_6 . IDENT_7 . LOGGER . debug ( java . lang . String . format ( STRING_1 , IDENT_8 , IDENT_9 ) ) ; java . lang . String IDENT_10 = METHOD_5 ( IDENT_9 ) ; try { return client . METHOD_6 ( IDENT_10 , IDENT_8 ) ; } catch ( com . amazonaws . IDENT_11 e ) { fr . gouv . vitam . common . storage . IDENT_6 . IDENT_7 . LOGGER . debug ( java . lang . String . format ( STRING_2 , IDENT_8 , IDENT_9 , e . getMessage ( ) ) , e ) ; throw new fr . gouv . vitam . IDENT_12 . api . exception . METHOD_7 ( STRING_3 , e ) ; } }
org . junit . Assert . assertTrue ( storage . METHOD_4 ( fr . gouv . vitam . common . storage . IDENT_0 . container . api . IDENT_1 . IDENT_2 , fr . gouv . vitam . common . storage . IDENT_0 . container . api . IDENT_1 . IDENT_3 ) ) 