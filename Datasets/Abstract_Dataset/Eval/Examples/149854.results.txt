METHOD_0 ( ) { fr . gouv . vitam . common . IDENT_0 . IDENT_1 . METHOD_1 ( ) . METHOD_2 ( fr . gouv . vitam . IDENT_2 . IDENT_3 . client . IDENT_4 . IDENT_5 ) ; when ( fr . gouv . vitam . IDENT_2 . IDENT_3 . client . IDENT_4 . mock . METHOD_3 ( ) ) . thenReturn ( javax . ws . rs . core . Response . status ( Status . IDENT_6 ) . entity ( fr . gouv . vitam . common . json . IDENT_7 . METHOD_4 ( new fr . gouv . vitam . common . model . METHOD_5 ( ) ) ) . build ( ) ) ; try ( fr . gouv . vitam . IDENT_2 . IDENT_3 . client . IDENT_8 client = ( ( fr . gouv . vitam . IDENT_2 . IDENT_3 . client . IDENT_8 ) ( fr . gouv . vitam . IDENT_2 . IDENT_3 . client . IDENT_4 . IDENT_9 . METHOD_6 ( ) ) ) ) { fr . gouv . vitam . common . model . IDENT_10 < fr . gouv . vitam . common . database . index . model . IDENT_11 > IDENT_12 = client . METHOD_7 ( fr . gouv . vitam . common . json . IDENT_7 . METHOD_8 ( ) ) ; "<AssertPlaceHolder>" ; } } getStatus ( ) { return status ; }
org . junit . Assert . assertEquals ( IDENT_12 . getStatus ( ) , Status . IDENT_6 . getStatusCode ( ) ) 