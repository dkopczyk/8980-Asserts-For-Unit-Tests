METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; java . util . Map < java . lang . String , java . lang . Object > IDENT_1 = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; java . util . concurrent . atomic . IDENT_2 count = new java . util . concurrent . atomic . METHOD_1 ( ) ; IDENT_1 . put ( STRING_1 , count ) ; IDENT_3 = new ws . IDENT_3 . IDENT_4 . METHOD_2 ( test . ws . IDENT_3 . IDENT_5 . IDENT_6 . IDENT_7 , test . ws . IDENT_3 . IDENT_5 . IDENT_6 . IDENT_8 , IDENT_0 , ws . IDENT_3 . IDENT_4 . METHOD_2 . IDENT_9 , IDENT_1 ) ; try { MOD_0 ( this ) { METHOD_3 ( INT_0 ) ; "<AssertPlaceHolder>" ; } } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( ( STRING_2 + ( e . METHOD_4 ( ) ) ) ) ; } } get ( ) { return count ; }
org . junit . Assert . assertEquals ( 3 , count . get ( ) ) 