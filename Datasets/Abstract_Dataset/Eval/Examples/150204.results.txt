METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 4 ; final long IDENT_1 = INT_0 ; test . ws . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 count = new test . ws . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( IDENT_1 ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_6 = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; IDENT_6 . put ( STRING_1 , count ) ; java . util . concurrent . IDENT_7 IDENT_8 = new java . util . concurrent . METHOD_2 ( 1 ) ; IDENT_6 . put ( STRING_2 , IDENT_8 ) ; IDENT_2 = new ws . IDENT_2 . IDENT_9 . METHOD_3 ( test . ws . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_10 , test . ws . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_11 , IDENT_0 , ws . IDENT_2 . IDENT_9 . METHOD_3 . IDENT_12 , IDENT_6 ) ; long IDENT_13 = java . lang . System . currentTimeMillis ( ) ; try { for ( int i = 0 ; i < IDENT_1 ; i ++ ) { int IDENT_14 = i OP_0 INT_1 ; ws . IDENT_2 . IDENT_15 . IDENT_16 IDENT_17 = ws . IDENT_2 . IDENT_18 . IDENT_19 . create ( new ws . IDENT_2 . IDENT_15 . IDENT_20 [ ] { ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( ( STRING_0 0 + IDENT_14 ) ) , ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( STRING_3 ) , ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( 0 ) , ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( STRING_4 ) , ws . IDENT_2 . IDENT_18 . IDENT_19 . create ( new ws . IDENT_2 . IDENT_15 . IDENT_20 [ ] { ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( STRING_5 ) , ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( ( STRING_6 + IDENT_14 ) ) , ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( STRING_0 1 ) } ) } ) ; IDENT_2 . METHOD_4 ( IDENT_17 ) ; ws . IDENT_2 . IDENT_15 . IDENT_16 IDENT_22 = ws . IDENT_2 . IDENT_18 . IDENT_19 . create ( new ws . IDENT_2 . IDENT_15 . IDENT_20 [ ] { ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( ( STRING_0 0 + IDENT_14 ) ) , ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( STRING_3 ) , ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( 0 ) , ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( STRING_4 ) , ws . IDENT_2 . IDENT_18 . IDENT_19 . create ( new ws . IDENT_2 . IDENT_15 . IDENT_20 [ ] { ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( STRING_5 ) , ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( ( STRING_6 + IDENT_14 ) ) , ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( STRING_0 2 ) } ) } ) ; IDENT_2 . METHOD_4 ( IDENT_22 ) ; ws . IDENT_2 . IDENT_15 . IDENT_16 IDENT_23 = ws . IDENT_2 . IDENT_18 . IDENT_19 . create ( new ws . IDENT_2 . IDENT_15 . IDENT_20 [ ] { ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( ( STRING_0 0 + IDENT_14 ) ) , ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( STRING_3 ) , ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( 0 ) , ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( STRING_4 ) , ws . IDENT_2 . IDENT_18 . IDENT_19 . create ( new ws . IDENT_2 . IDENT_15 . IDENT_20 [ ] { ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( STRING_7 ) , ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( ( STRING_6 + IDENT_14 ) ) , ws . IDENT_2 . IDENT_18 . IDENT_21 . create ( STRING_0 1 ) } ) } ) ; IDENT_2 . METHOD_4 ( IDENT_23 ) ; java . lang . Thread . sleep ( 0 , INT_0 ) ; } long IDENT_24 = ( java . lang . System . currentTimeMillis ( ) ) - IDENT_13 ; System . out . println ( ( ( STRING_8 + IDENT_24 ) + STRING_0 ) ) ; IDENT_8 . METHOD_5 ( 5 , TimeUnit . IDENT_25 ) ; long IDENT_26 = ( java . lang . System . currentTimeMillis ( ) ) - IDENT_13 ; System . out . println ( ( ( ( ( count . get ( ) ) + STRING_0 3 ) + IDENT_26 ) + STRING_0 ) ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( ( STRING_9 + ( e . METHOD_6 ( ) ) ) ) ; } } get ( ) { return count ; }
org . junit . Assert . assertEquals ( IDENT_1 , count . get ( ) ) 