METHOD_0 ( ) { IDENT_0 . METHOD_1 ( STRING_0 ) ; IDENT_0 . METHOD_1 ( STRING_1 ) ; IDENT_0 . METHOD_2 ( STRING_0 , STRING_2 , org . mockito . Mockito . mock ( edu . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . class ) ) ; IDENT_0 . METHOD_2 ( STRING_0 , STRING_3 , org . mockito . Mockito . mock ( edu . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . class ) ) ; IDENT_0 . METHOD_2 ( STRING_1 , STRING_4 , org . mockito . Mockito . mock ( edu . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . class ) ) ; IDENT_0 . METHOD_2 ( STRING_1 , STRING_5 , org . mockito . Mockito . mock ( edu . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . class ) ) ; java . util . List < java . lang . String > IDENT_6 = new java . util . ArrayList ( ) ; IDENT_6 . add ( STRING_2 ) ; IDENT_6 . add ( STRING_3 ) ; IDENT_6 . add ( STRING_4 ) ; IDENT_6 . add ( STRING_5 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { java . util . List < java . lang . String > IDENT_7 = new java . util . ArrayList < java . lang . String > ( ) ; for ( java . lang . String IDENT_8 : IDENT_9 . METHOD_4 ( ) ) { for ( java . lang . String IDENT_10 : IDENT_9 . get ( IDENT_8 ) . METHOD_4 ( ) ) { IDENT_7 . add ( IDENT_10 ) ; } } return IDENT_7 ; }
org . junit . Assert . assertEquals ( IDENT_6 , IDENT_0 . METHOD_3 ( ) ) 