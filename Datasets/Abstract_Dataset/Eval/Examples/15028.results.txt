METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; new org . apache . hadoop . hive . IDENT_1 . client . builder . METHOD_1 ( ) . setName ( IDENT_0 ) . create ( client , org . apache . hadoop . hive . IDENT_1 . tools . IDENT_2 . IDENT_3 . conf ) ; try { java . lang . String IDENT_4 = java . lang . String . format ( STRING_1 , IDENT_0 , org . apache . hadoop . hive . IDENT_1 . IDENT_5 . IDENT_6 ) ; org . apache . hadoop . hive . IDENT_1 . tools . IDENT_2 . IDENT_3 . execute ( new org . apache . hadoop . hive . IDENT_1 . tools . IDENT_2 . METHOD_2 ( ) , IDENT_4 ) ; org . junit . Assert . fail ( STRING_2 ) ; } catch ( org . apache . hadoop . hive . IDENT_1 . IDENT_7 e ) { } java . util . Set < java . lang . String > IDENT_8 = new java . util . HashSet ( client . METHOD_3 ( org . apache . hadoop . hive . IDENT_1 . IDENT_5 . IDENT_6 ) ) ; "<AssertPlaceHolder>" ; } contains ( org . apache . hadoop . hive . IDENT_9 . plan . IDENT_10 ) { return IDENT_11 . containsKey ( IDENT_12 ) ; }
org . junit . Assert . assertTrue ( IDENT_8 . contains ( IDENT_0 . toLowerCase ( ) ) ) 