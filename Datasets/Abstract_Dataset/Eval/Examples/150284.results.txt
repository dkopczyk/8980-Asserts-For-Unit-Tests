METHOD_0 ( ) { java . lang . String IDENT_0 = "foo" ; nl . IDENT_1 . IDENT_2 . domain . IDENT_3 resources = mock ( nl . IDENT_1 . IDENT_2 . domain . IDENT_3 . class ) ; nl . IDENT_1 . IDENT_2 . domain . IDENT_4 resource = mock ( nl . IDENT_1 . IDENT_2 . domain . IDENT_4 . class ) ; when ( resources . METHOD_1 ( org . mockito . Mockito . anyString ( ) ) ) . thenReturn ( null ) ; when ( resources . METHOD_2 ( IDENT_5 . IDENT_6 ) ) . thenReturn ( null ) ; nl . IDENT_1 . IDENT_2 . domain . IDENT_4 IDENT_7 = nl . IDENT_1 . IDENT_2 . IDENT_8 . IDENT_9 . METHOD_3 ( "foo" , resources ) ; "<AssertPlaceHolder>" ; org . mockito . Mockito . verify ( resources ) . METHOD_1 ( IDENT_0 ) ; org . mockito . Mockito . verify ( resources ) . METHOD_1 ( STRING_0 ) ; org . mockito . Mockito . verify ( resources ) . METHOD_1 ( STRING_1 ) ; org . mockito . Mockito . verify ( resources ) . METHOD_1 ( STRING_2 ) ; org . mockito . Mockito . verify ( resources ) . METHOD_1 ( STRING_3 ) ; org . mockito . Mockito . verify ( resources ) . METHOD_1 ( STRING_4 ) ; org . mockito . Mockito . verify ( resources ) . METHOD_1 ( STRING_5 ) ; org . mockito . Mockito . verify ( resources ) . METHOD_2 ( IDENT_5 . IDENT_6 ) ; org . mockito . Mockito . METHOD_4 ( resources ) ; } METHOD_3 ( java . lang . String , nl . IDENT_1 . IDENT_2 . domain . IDENT_3 ) { nl . IDENT_1 . IDENT_2 . domain . IDENT_4 IDENT_10 = null ; if ( nl . IDENT_1 . IDENT_2 . util . IDENT_11 . METHOD_5 ( IDENT_0 ) ) { IDENT_10 = resources . METHOD_1 ( IDENT_0 ) ; } if ( IDENT_10 != null ) { return IDENT_10 ; } IDENT_10 = resources . METHOD_2 ( IDENT_5 . IDENT_6 ) ; if ( IDENT_10 == null ) { for ( int i = 0 ; i < ( nl . IDENT_1 . IDENT_2 . IDENT_8 . IDENT_9 . IDENT_12 . length ) ; i ++ ) { IDENT_10 = resources . METHOD_1 ( nl . IDENT_1 . IDENT_2 . IDENT_8 . IDENT_9 . IDENT_12 [ i ] ) ; if ( IDENT_10 != null ) { break ; } IDENT_10 = resources . METHOD_1 ( nl . IDENT_1 . IDENT_2 . IDENT_8 . IDENT_9 . IDENT_12 [ i ] . METHOD_6 ( ) ) ; if ( IDENT_10 != null ) { break ; } } } if ( IDENT_10 == null ) { nl . IDENT_1 . IDENT_2 . IDENT_8 . IDENT_9 . log . error ( ( ( ( ( ( ( STRING_6 + IDENT_0 ) + STRING_7 ) + ( nl . IDENT_1 . IDENT_2 . Constants . IDENT_13 ) ) + STRING_8 ) + ( Constants . IDENT_13 . METHOD_6 ( ) ) ) + STRING_9 ) ) ; } return IDENT_10 ; }
org . junit . Assert . assertNull ( IDENT_7 ) 