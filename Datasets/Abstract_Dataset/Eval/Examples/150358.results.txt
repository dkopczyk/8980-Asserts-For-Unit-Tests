METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 . transport . IDENT_3 . IDENT_4 IDENT_5 = METHOD_1 ( ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . transport . IDENT_3 . IDENT_4 IDENT_6 = METHOD_1 ( ) ; java . util . List < com . IDENT_0 . IDENT_1 . IDENT_2 . transport . IDENT_3 . IDENT_7 > nodes = IDENT_6 . METHOD_2 ( ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . transport . IDENT_3 . IDENT_7 IDENT_8 = new com . IDENT_0 . IDENT_1 . IDENT_2 . transport . IDENT_3 . METHOD_3 ( ) ; IDENT_8 . METHOD_4 ( STRING_0 ) ; IDENT_8 . METHOD_5 ( INT_0 ) ; nodes . add ( IDENT_8 ) ; java . util . List < com . IDENT_0 . IDENT_1 . IDENT_2 . transport . IDENT_3 . METHOD_3 > IDENT_9 = IDENT_6 . METHOD_2 ( ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . transport . IDENT_3 . METHOD_3 IDENT_10 = new com . IDENT_0 . IDENT_1 . IDENT_2 . transport . IDENT_3 . METHOD_3 ( ) ; IDENT_10 . METHOD_4 ( STRING_1 ) ; IDENT_10 . METHOD_5 ( INT_0 ) ; IDENT_9 . add ( IDENT_8 ) ; "<AssertPlaceHolder>" ; } equals ( java . lang . Object ) { return ( obj instanceof com . IDENT_0 . IDENT_1 . event . support . IDENT_11 ) && ( ( ( com . IDENT_0 . IDENT_1 . event . support . IDENT_11 ) ( obj ) ) . IDENT_12 . equals ( IDENT_12 ) ) ; }
org . junit . Assert . assertFalse ( IDENT_5 . equals ( IDENT_6 ) ) 