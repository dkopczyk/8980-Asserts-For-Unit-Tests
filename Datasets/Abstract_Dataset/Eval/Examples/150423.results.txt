METHOD_0 ( ) { "<AssertPlaceHolder>" ; com . IDENT_0 . IDENT_1 . core . graph . schema . IDENT_2 < java . lang . String > IDENT_3 = new com . IDENT_0 . IDENT_1 . core . graph . schema . METHOD_1 ( com . IDENT_0 . IDENT_1 . core . graph . IDENT_4 . IDENT_5 , STRING_0 , java . lang . String . class , IDENT_6 . IDENT_7 ) ; com . IDENT_0 . IDENT_1 . core . graph . schema . IDENT_8 . IDENT_9 . METHOD_2 ( IDENT_3 ) ; java . util . Set < java . lang . String > IDENT_10 = new java . util . HashSet ( ) ; IDENT_10 . add ( STRING_1 ) ; java . util . Set < java . lang . String > IDENT_11 = new java . util . HashSet ( ) ; IDENT_11 . add ( STRING_1 ) ; IDENT_11 . add ( STRING_2 ) ; java . util . Map < java . lang . String , java . lang . Object > properties = new java . util . HashMap ( ) ; properties . put ( STRING_0 , "value" ) ; try { com . IDENT_0 . IDENT_1 . core . graph . schema . IDENT_8 . graph . METHOD_3 ( IDENT_10 , properties ) ; com . IDENT_0 . IDENT_1 . core . graph . schema . IDENT_8 . graph . METHOD_3 ( IDENT_11 , new java . util . HashMap ( ) ) . setProperty ( STRING_0 , "value" ) ; } finally { com . IDENT_0 . IDENT_1 . core . graph . schema . IDENT_8 . graph . METHOD_4 ( ) ; } } METHOD_5 ( com . IDENT_0 . IDENT_1 . core . graph . IDENT_4 , java . lang . String ) { try { com . IDENT_0 . IDENT_1 . IDENT_12 . IDENT_13 table = IDENT_14 . METHOD_6 ( IDENT_15 . IDENT_16 . getName ( ) ) ; com . IDENT_0 . IDENT_1 . IDENT_12 . IDENT_17 get = new com . IDENT_0 . IDENT_1 . IDENT_12 . METHOD_7 ( com . IDENT_0 . IDENT_1 . IDENT_18 . IDENT_19 . of ( IDENT_20 ) ) ; com . IDENT_0 . IDENT_1 . IDENT_18 . IDENT_19 IDENT_21 = null ; switch ( IDENT_22 ) { case IDENT_5 : IDENT_21 = IDENT_23 . IDENT_24 . getKey ( ) ; break ; case IDENT_25 : IDENT_21 = IDENT_23 . IDENT_26 . getKey ( ) ; break ; default : throw new com . IDENT_0 . IDENT_1 . core . graph . manager . METHOD_8 ( ( ( STRING_3 + IDENT_22 ) + STRING_4 ) ) ; } get . METHOD_9 ( IDENT_21 ) ; com . IDENT_0 . IDENT_1 . IDENT_12 . Result result = table . get ( get ) ; if ( result == null ) { return null ; } java . util . IDENT_27 < com . IDENT_0 . IDENT_1 . IDENT_18 . IDENT_19 , com . IDENT_0 . IDENT_1 . IDENT_28 . IDENT_29 > IDENT_30 = result . METHOD_10 ( IDENT_21 ) ; if ( IDENT_30 == null ) { return null ; } @ com . IDENT_0 . IDENT_1 . core . graph . schema . METHOD_11 ( STRING_5 ) java . lang . Class < T > type = ( ( java . lang . Class < T > ) ( java . lang . Class . METHOD_12 ( IDENT_30 . get ( IDENT_31 . IDENT_32 ) . toString ( ) ) ) ) ; com . IDENT_0 . IDENT_1 . core . graph . schema . IDENT_6 IDENT_33 = com . IDENT_0 . IDENT_1 . core . graph . schema . IDENT_6 . valueOf ( IDENT_30 . get ( IDENT_31 . IDENT_34 ) . toString ( ) ) ; com . IDENT_0 . IDENT_1 . core . graph . schema . METHOD_1 < T > IDENT_3 = new com . IDENT_0 . IDENT_1 . core . graph . schema . METHOD_1 ( IDENT_22 , IDENT_20 , type , IDENT_33 ) ; return IDENT_3 ; } catch ( java . lang . IDENT_35 e ) { throw new com . IDENT_0 . IDENT_1 . core . graph . manager . METHOD_8 ( STRING_6 , e ) ; } catch ( com . IDENT_0 . IDENT_1 . storage . api . IDENT_36 e ) { throw new com . IDENT_0 . IDENT_1 . core . graph . manager . METHOD_13 ( STRING_7 , e ) ; } }
org . junit . Assert . assertNull ( com . IDENT_0 . IDENT_1 . core . graph . schema . IDENT_8 . IDENT_9 . METHOD_5 ( IDENT_4 . IDENT_5 , STRING_0 ) ) 