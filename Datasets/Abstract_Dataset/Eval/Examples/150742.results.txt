METHOD_0 ( ) { METHOD_1 ( order . METHOD_2 ( IDENT_0 . IDENT_1 ) ) . METHOD_3 ( IDENT_2 ) ; METHOD_1 ( order . METHOD_4 ( STRING_0 ) . size ( ) ) . METHOD_3 ( 1 ) ; METHOD_1 ( order . METHOD_4 ( STRING_0 ) . iterator ( ) ) . METHOD_3 ( iterator ) ; METHOD_1 ( iterator . hasNext ( ) ) . METHOD_3 ( true , false ) ; METHOD_1 ( iterator . next ( ) ) . METHOD_3 ( IDENT_3 ) ; METHOD_1 ( IDENT_2 . METHOD_5 ( STRING_1 ) ) . METHOD_3 ( false ) ; METHOD_1 ( IDENT_2 . METHOD_5 ( STRING_2 ) ) . METHOD_3 ( false ) ; METHOD_1 ( IDENT_2 . METHOD_5 ( STRING_3 ) ) . METHOD_3 ( false ) ; METHOD_1 ( IDENT_2 . METHOD_5 ( STRING_4 ) ) . METHOD_3 ( true ) ; METHOD_1 ( IDENT_3 . METHOD_4 ( STRING_5 ) . size ( ) ) . METHOD_3 ( 1 ) ; METHOD_1 ( IDENT_3 . METHOD_4 ( STRING_6 ) . iterator ( ) ) . METHOD_3 ( IDENT_4 ) ; METHOD_1 ( IDENT_4 . hasNext ( ) ) . METHOD_3 ( true , false ) ; METHOD_1 ( IDENT_4 . next ( ) ) . METHOD_3 ( IDENT_5 ) ; METHOD_1 ( IDENT_5 . METHOD_2 ( STRING_7 ) . METHOD_5 ( STRING_1 ) ) . METHOD_3 ( false ) ; boolean result = IDENT_6 . METHOD_6 ( order ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( com . IDENT_7 . model . api . Entity ) { com . IDENT_7 . model . api . Entity IDENT_2 = order . METHOD_2 ( IDENT_0 . IDENT_1 ) ; if ( IDENT_2 != null ) { if ( order . METHOD_4 ( STRING_0 ) . isEmpty ( ) ) { if ( IDENT_2 . METHOD_5 ( STRING_1 ) ) { return false ; } if ( IDENT_2 . METHOD_5 ( STRING_2 ) ) { return false ; } if ( IDENT_2 . METHOD_5 ( STRING_3 ) ) { return false ; } if ( IDENT_2 . METHOD_5 ( STRING_4 ) ) { return false ; } for ( com . IDENT_7 . model . api . Entity IDENT_8 : IDENT_2 . METHOD_7 ( IDENT_9 . IDENT_10 ) ) { for ( com . IDENT_7 . model . api . Entity IDENT_11 : IDENT_8 . METHOD_4 ( IDENT_12 . IDENT_13 ) ) { if ( IDENT_11 . METHOD_5 ( STRING_1 ) ) { return false ; } } } } for ( com . IDENT_7 . model . api . Entity IDENT_3 : order . METHOD_4 ( STRING_0 ) ) { if ( ( IDENT_2 . METHOD_5 ( STRING_1 ) ) && ( ( IDENT_3 . METHOD_8 ( STRING_8 ) ) == null ) ) { return false ; } if ( IDENT_2 . METHOD_5 ( STRING_2 ) ) { com . IDENT_7 . IDENT_14 . IDENT_15 . List < com . IDENT_7 . model . api . Entity > IDENT_16 = IDENT_3 . METHOD_4 ( STRING_9 ) ; if ( IDENT_16 . isEmpty ( ) ) { return false ; } } if ( IDENT_2 . METHOD_5 ( STRING_3 ) ) { com . IDENT_7 . IDENT_14 . IDENT_15 . List < com . IDENT_7 . model . api . Entity > IDENT_16 = IDENT_3 . METHOD_4 ( STRING_10 ) ; if ( IDENT_16 . isEmpty ( ) ) { return false ; } } if ( IDENT_2 . METHOD_5 ( STRING_4 ) ) { com . IDENT_7 . IDENT_14 . IDENT_15 . List < com . IDENT_7 . model . api . Entity > IDENT_16 = IDENT_3 . METHOD_4 ( STRING_5 ) ; if ( IDENT_16 . isEmpty ( ) ) { return false ; } } for ( com . IDENT_7 . model . api . Entity IDENT_17 : IDENT_3 . METHOD_4 ( STRING_6 ) ) { if ( IDENT_17 . METHOD_2 ( STRING_9 0 ) . METHOD_5 ( STRING_1 ) ) { com . IDENT_7 . IDENT_14 . IDENT_15 . List < com . IDENT_7 . model . api . Entity > IDENT_16 = IDENT_17 . METHOD_4 ( STRING_8 ) ; if ( IDENT_16 . isEmpty ( ) ) { return false ; } } } } } return true ; }
org . junit . Assert . assertTrue ( result ) 