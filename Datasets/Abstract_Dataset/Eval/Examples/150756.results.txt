METHOD_0 ( ) { com . IDENT_0 . model . api . Entity parameter = mock ( com . IDENT_0 . model . api . Entity . class ) ; METHOD_1 ( IDENT_1 . METHOD_2 ( ) ) . METHOD_3 ( parameter ) ; com . IDENT_0 . model . api . Entity order = mock ( com . IDENT_0 . model . api . Entity . class ) ; java . util . Date IDENT_2 = mock ( java . util . Date . class ) ; java . util . Date IDENT_3 = null ; java . util . Date IDENT_4 = mock ( java . util . Date . class ) ; long IDENT_5 = INT_0 ; long IDENT_6 = INT_1 ; java . lang . Integer IDENT_7 = 2 ; java . lang . Integer IDENT_8 = 2 ; METHOD_1 ( order . METHOD_4 ( com . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_11 ) ) . METHOD_3 ( IDENT_2 ) ; METHOD_1 ( order . METHOD_4 ( com . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_12 ) ) . METHOD_3 ( IDENT_3 ) ; METHOD_1 ( order . METHOD_4 ( com . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_13 ) ) . METHOD_3 ( IDENT_4 ) ; METHOD_1 ( IDENT_2 . getTime ( ) ) . METHOD_3 ( IDENT_5 ) ; METHOD_1 ( IDENT_4 . getTime ( ) ) . METHOD_3 ( IDENT_6 ) ; METHOD_1 ( parameter . METHOD_5 ( com . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_14 ) ) . METHOD_3 ( false ) ; METHOD_1 ( parameter . METHOD_5 ( com . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_15 ) ) . METHOD_3 ( false ) ; METHOD_1 ( parameter . METHOD_4 ( com . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_16 ) ) . METHOD_3 ( IDENT_7 ) ; METHOD_1 ( parameter . METHOD_4 ( com . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_17 ) ) . METHOD_3 ( IDENT_8 ) ; long result = IDENT_18 . METHOD_6 ( parameter , order ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( com . IDENT_0 . model . api . Entity , com . IDENT_0 . model . api . Entity ) { if ( ! ( METHOD_7 ( parameter ) ) ) { return 0L ; } final long IDENT_19 = METHOD_8 ( order , com . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_11 , com . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_12 ) ; if ( IDENT_19 == 0L ) { return 0L ; } final org . joda . time . IDENT_20 IDENT_2 = new org . joda . time . METHOD_9 ( IDENT_19 ) ; if ( ( METHOD_10 ( order , com . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_13 ) ) == null ) { return 0L ; } final org . joda . time . METHOD_9 IDENT_4 = new org . joda . time . METHOD_9 ( METHOD_10 ( order , com . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_13 ) ) ; final org . joda . time . METHOD_9 IDENT_21 = new org . joda . time . METHOD_9 ( ( IDENT_19 + ( METHOD_11 ( com . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_16 ) ) ) ) ; final org . joda . time . METHOD_9 IDENT_22 = new org . joda . time . METHOD_9 ( ( IDENT_19 - ( METHOD_11 ( com . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_17 ) ) ) ) ; long IDENT_23 = 0L ; if ( ( ( IDENT_4 . METHOD_12 ( IDENT_21 ) ) && ( METHOD_13 ( parameter ) ) ) || ( ( IDENT_4 . METHOD_14 ( IDENT_22 ) ) && ( METHOD_15 ( parameter ) ) ) ) { IDENT_23 = org . joda . time . IDENT_24 . METHOD_16 ( IDENT_2 , IDENT_4 ) . METHOD_17 ( ) ; } return IDENT_23 ; }
org . junit . Assert . assertTrue ( ( result == 0L ) ) 