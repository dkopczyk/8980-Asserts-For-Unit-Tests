METHOD_0 ( ) { com . IDENT_0 . model . api . types . IDENT_1 IDENT_2 = mock ( com . IDENT_0 . model . api . types . IDENT_1 . class ) ; com . IDENT_0 . model . internal . api . IDENT_3 IDENT_4 = mock ( com . IDENT_0 . model . internal . api . IDENT_3 . class , com . IDENT_0 . model . internal . IDENT_5 ) ; METHOD_1 ( IDENT_2 . METHOD_2 ( ) ) . METHOD_3 ( IDENT_4 ) ; com . IDENT_0 . model . api . IDENT_6 IDENT_7 = mock ( com . IDENT_0 . model . api . IDENT_6 . class ) ; METHOD_1 ( IDENT_7 . getType ( ) ) . METHOD_3 ( IDENT_2 ) ; METHOD_1 ( IDENT_7 . getName ( ) ) . METHOD_3 ( STRING_0 ) ; METHOD_1 ( IDENT_4 . METHOD_4 ( STRING_1 ) ) . METHOD_3 ( IDENT_7 ) ; com . IDENT_0 . model . api . search . IDENT_8 IDENT_9 = mock ( com . IDENT_0 . model . api . search . IDENT_8 . class ) ; METHOD_1 ( IDENT_4 . find ( ) . METHOD_5 ( IDENT_7 . getName ( ) , IDENT_7 . getName ( ) ) . add ( com . IDENT_0 . model . api . search . IDENT_10 . eq ( ( ( IDENT_7 . getName ( ) ) + STRING_2 ) , 1L ) ) ) . METHOD_3 ( IDENT_9 ) ; com . IDENT_0 . model . api . IDENT_11 list = new com . IDENT_0 . model . internal . METHOD_6 ( IDENT_4 , STRING_1 , 1L ) ; "<AssertPlaceHolder>" ; } find ( ) { return IDENT_12 . get ( ) ; }
org . junit . Assert . assertEquals ( IDENT_9 , list . find ( ) ) 