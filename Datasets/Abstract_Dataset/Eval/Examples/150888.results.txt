METHOD_0 ( ) { IDENT_0 . METHOD_1 ( STRING_0 ) ; boolean result = IDENT_0 . METHOD_2 ( STRING_1 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String [ ] ) { if ( ! ( METHOD_3 ( IDENT_1 ) ) ) { return false ; } for ( java . lang . String IDENT_2 : IDENT_3 ) { if ( ! ( METHOD_4 ( IDENT_2 , IDENT_4 ) ) ) { return false ; } } for ( java . lang . String IDENT_2 : IDENT_3 ) { try { org . apache . commons . io . IDENT_5 . METHOD_5 ( new java . io . File ( ( ( ( IDENT_4 ) + ( java . lang . System . getProperty ( com . IDENT_6 . plugin . internal . IDENT_7 . IDENT_8 . IDENT_9 ) ) ) + IDENT_2 ) ) , new java . io . File ( IDENT_1 ) , false ) ; } catch ( java . io . IOException e ) { com . IDENT_6 . plugin . internal . IDENT_7 . IDENT_8 . LOG . error ( ( STRING_2 + ( e . getMessage ( ) ) ) ) ; throw new com . IDENT_6 . plugin . internal . METHOD_6 ( e . getMessage ( ) , e ) ; } } return true ; }
org . junit . Assert . assertFalse ( result ) 