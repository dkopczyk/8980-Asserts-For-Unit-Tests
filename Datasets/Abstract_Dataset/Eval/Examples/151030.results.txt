METHOD_0 ( ) { java . util . Map < java . lang . Long , java . lang . Long > IDENT_0 = new java . util . HashMap < java . lang . Long , java . lang . Long > ( ) ; IDENT_0 . put ( IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . remote . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . METHOD_1 ( ) , IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . remote . IDENT_6 . IDENT_7 . IDENT_8 . user . METHOD_2 ( ) ) ; IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . remote . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_10 . METHOD_3 ( ) . METHOD_4 ( ) ; int result = IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . remote . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_11 . METHOD_5 ( IDENT_0 ) ; IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . remote . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_10 . METHOD_3 ( ) . commit ( ) ; "<AssertPlaceHolder>" ; IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . remote . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_12 = null ; } METHOD_5 ( java . util . Map ) { if ( IDENT_0 != null ) { try { int IDENT_13 = 0 ; java . util . Iterator IDENT_14 = IDENT_0 . entrySet ( ) . iterator ( ) ; while ( IDENT_14 . hasNext ( ) ) { java . util . Map . Entry entry = ( ( java . util . Map . Entry ) ( IDENT_14 . next ( ) ) ) ; java . lang . Long key = ( ( java . lang . Long ) ( entry . getKey ( ) ) ) ; java . lang . Long value = ( ( java . lang . Long ) ( entry . getValue ( ) ) ) ; IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . entities . task . IDENT_15 IDENT_12 = ( ( IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . entities . task . IDENT_15 ) ( METHOD_6 ( key , value ) ) ) ; delete ( IDENT_12 ) ; em . METHOD_7 ( ) ; ++ IDENT_13 ; } return IDENT_13 ; } catch ( java . lang . Exception e ) { logger . error ( STRING_0 ) ; } } return 0 ; }
org . junit . Assert . assertEquals ( 1 , result ) 