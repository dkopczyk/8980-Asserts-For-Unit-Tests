METHOD_0 ( ) { try ( IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = METHOD_1 ( ) ; IDENT_0 . IDENT_4 f = new IDENT_0 . IDENT_1 . METHOD_2 ( IDENT_3 , METHOD_3 ( ) ) ; IDENT_0 . IDENT_4 IDENT_5 = new IDENT_0 . IDENT_1 . METHOD_2 ( IDENT_3 , METHOD_3 ( ) ) ) { f . METHOD_4 ( ) ; IDENT_5 . METHOD_4 ( ) ; boolean IDENT_6 = false ; try { f . METHOD_5 ( IDENT_5 , true ) ; try { "<AssertPlaceHolder>" ; IDENT_6 = true ; } finally { IDENT_5 . delete ( ) ; } } catch ( IDENT_0 . IDENT_1 . IDENT_7 e ) { try ( IDENT_0 . IDENT_8 IDENT_9 = IDENT_3 . METHOD_6 ( ) ) { org . junit . IDENT_10 . METHOD_7 ( STRING_0 , IDENT_9 . METHOD_8 ( ) ) ; } throw e ; } finally { if ( ( ! IDENT_6 ) && ( f . exists ( ) ) ) { f . delete ( ) ; } } } } exists ( ) { if ( ( this . IDENT_11 ) > ( java . lang . System . currentTimeMillis ( ) ) ) { IDENT_0 . IDENT_1 . METHOD_2 . log . trace ( STRING_1 ) ; return this . IDENT_12 ; } this . attributes = ( IDENT_13 ) | ( IDENT_14 ) ; this . IDENT_15 = 0L ; this . IDENT_16 = 0L ; this . IDENT_17 = 0L ; this . IDENT_12 = false ; try { if ( ( this . url . METHOD_9 ( ) . length ( ) ) == 0 ) { } else if ( ( this . IDENT_18 . METHOD_10 ( ) ) == null ) { if ( ( this . IDENT_18 . getType ( ) ) == ( IDENT_19 ) ) { METHOD_11 ( ) . METHOD_12 ( ) . METHOD_13 ( this . url . METHOD_9 ( ) , true ) ; } else { METHOD_11 ( ) . METHOD_12 ( ) . METHOD_13 ( this . url . METHOD_9 ( ) ) . METHOD_14 ( ) ; } } else { try ( IDENT_0 . IDENT_1 . IDENT_20 IDENT_9 = METHOD_15 ( ) ) { if ( ( this . IDENT_18 . getType ( ) ) == ( IDENT_21 ) ) { try ( IDENT_0 . IDENT_1 . IDENT_20 IDENT_22 = METHOD_15 ( ) ) { } } else { METHOD_16 ( IDENT_9 , this . IDENT_18 . METHOD_17 ( ) , IDENT_23 . IDENT_24 ) ; } } } this . IDENT_12 = true ; } catch ( java . net . IDENT_25 IDENT_26 ) { IDENT_0 . IDENT_1 . METHOD_2 . log . debug ( STRING_2 , IDENT_26 ) ; } catch ( IDENT_0 . IDENT_1 . IDENT_27 IDENT_28 ) { IDENT_0 . IDENT_1 . METHOD_2 . log . trace ( STRING_3 , IDENT_28 ) ; switch ( IDENT_28 . METHOD_18 ( ) ) { case IDENT_29 . IDENT_30 : case IDENT_29 . IDENT_31 : case IDENT_29 . IDENT_32 : case IDENT_29 . IDENT_33 : break ; default : throw IDENT_28 ; } } catch ( IDENT_0 . IDENT_34 e ) { throw IDENT_0 . IDENT_1 . IDENT_27 . METHOD_19 ( e ) ; } this . IDENT_11 = ( java . lang . System . currentTimeMillis ( ) ) + ( METHOD_11 ( ) . METHOD_20 ( ) . METHOD_21 ( ) ) ; return this . IDENT_12 ; }
org . junit . Assert . assertTrue ( IDENT_5 . exists ( ) ) 