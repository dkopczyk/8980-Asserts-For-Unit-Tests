METHOD_0 ( ) { java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { STRING_0 4 , STRING_1 , STRING_0 5 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_0 3 , STRING_6 , STRING_7 , STRING_0 , STRING_0 1 , STRING_0 2 } ; java . io . File [ ] IDENT_1 = new java . io . File [ IDENT_0 . length ] ; for ( int i = 0 ; i < ( IDENT_0 . length ) ; i ++ ) { IDENT_1 [ i ] = new java . io . File ( IDENT_0 [ i ] ) ; } ch . IDENT_2 . IDENT_3 . core . IDENT_4 . helper . IDENT_5 IDENT_6 = new ch . IDENT_2 . IDENT_3 . core . IDENT_4 . helper . METHOD_1 ( STRING_8 , context ) ; java . text . IDENT_7 IDENT_8 = new java . text . METHOD_2 ( STRING_0 0 ) ; java . lang . String IDENT_9 = null ; IDENT_9 = IDENT_6 . METHOD_3 ( IDENT_8 . parse ( STRING_9 ) ) ; java . lang . String IDENT_10 = ch . IDENT_2 . IDENT_3 . core . IDENT_4 . helper . IDENT_11 . METHOD_4 ( IDENT_9 ) ; int result = ch . IDENT_2 . IDENT_3 . core . IDENT_4 . helper . IDENT_11 . METHOD_5 ( IDENT_1 , IDENT_10 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . io . File [ ] , java . lang . String ) { int max = Integer . IDENT_12 ; for ( java . io . File IDENT_13 : IDENT_1 ) { int IDENT_14 = ch . IDENT_2 . IDENT_3 . core . IDENT_4 . helper . IDENT_11 . METHOD_6 ( IDENT_13 , IDENT_10 ) ; if ( max < IDENT_14 ) max = IDENT_14 ; } return max ; }
org . junit . Assert . assertEquals ( 12 , result ) 