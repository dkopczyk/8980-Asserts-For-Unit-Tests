METHOD_0 ( ) { org . IDENT_0 . core . model . IDENT_1 IDENT_2 = IDENT_3 . METHOD_1 ( 1 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . Integer ) { org . IDENT_0 . core . domain . IDENT_4 IDENT_5 = IDENT_6 . METHOD_2 ( id ) ; if ( IDENT_5 == null ) { return null ; } org . IDENT_0 . core . model . IDENT_1 IDENT_2 = new org . IDENT_0 . core . model . METHOD_3 ( ) ; IDENT_7 . METHOD_4 ( IDENT_5 , IDENT_2 ) ; org . IDENT_0 . core . domain . IDENT_8 example = new org . IDENT_0 . core . domain . METHOD_5 ( ) ; example . METHOD_6 ( ) . METHOD_7 ( id ) ; java . util . List < org . IDENT_0 . core . domain . IDENT_9 > IDENT_10 = IDENT_11 . METHOD_8 ( example ) ; java . util . List < org . IDENT_0 . core . model . IDENT_12 > IDENT_13 = new java . util . ArrayList ( ) ; if ( org . apache . commons . collections . IDENT_14 . METHOD_9 ( IDENT_10 ) ) { for ( org . IDENT_0 . core . domain . IDENT_9 IDENT_15 : IDENT_10 ) { org . IDENT_0 . core . model . IDENT_12 IDENT_16 = new org . IDENT_0 . core . model . METHOD_10 ( ) ; IDENT_16 . setId ( IDENT_15 . METHOD_11 ( ) ) ; IDENT_16 . METHOD_12 ( IDENT_15 . METHOD_13 ( ) ) ; IDENT_13 . add ( IDENT_16 ) ; } IDENT_2 . METHOD_14 ( IDENT_13 ) ; } org . IDENT_0 . core . domain . IDENT_17 IDENT_18 = IDENT_19 . METHOD_2 ( IDENT_5 . METHOD_15 ( ) ) ; if ( null != IDENT_18 ) { org . IDENT_0 . core . model . User user = new org . IDENT_0 . core . model . User ( ) ; IDENT_7 . METHOD_4 ( IDENT_18 , user ) ; IDENT_2 . METHOD_16 ( user ) ; } return IDENT_2 ; }
org . junit . Assert . assertNotNull ( IDENT_2 ) 