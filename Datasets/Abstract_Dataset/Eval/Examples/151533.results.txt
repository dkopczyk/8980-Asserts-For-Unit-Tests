METHOD_0 ( ) { com . querydsl . core . group . Map < java . lang . Integer , com . querydsl . core . group . Map < com . querydsl . core . group . Map < java . lang . Integer , java . lang . String > , java . lang . String > > actual = com . querydsl . core . group . IDENT_0 . transform ( METHOD_1 ( IDENT_1 ) . as ( map ( map ( IDENT_1 , IDENT_2 ) , IDENT_3 ) ) ) ; com . querydsl . core . group . Map < java . lang . Integer , com . querydsl . core . group . Map < com . querydsl . core . group . Map < java . lang . Integer , java . lang . String > , java . lang . String > > expected = new com . querydsl . core . group . IDENT_4 < java . lang . Integer , com . querydsl . core . group . Map < com . querydsl . core . group . Map < java . lang . Integer , java . lang . String > , java . lang . String > > ( ) ; for ( com . querydsl . core . group . Iterator < com . querydsl . core . IDENT_5 > iterator = com . querydsl . core . group . IDENT_0 . METHOD_2 ( ) ; iterator . hasNext ( ) ; ) { com . querydsl . core . IDENT_5 tuple = iterator . next ( ) ; java . lang . Object [ ] array = tuple . toArray ( ) ; com . querydsl . core . group . Map < com . querydsl . core . group . Map < java . lang . Integer , java . lang . String > , java . lang . String > IDENT_6 = expected . get ( array [ 0 ] ) ; if ( IDENT_6 == null ) { IDENT_6 = new com . querydsl . core . group . IDENT_4 < com . querydsl . core . group . Map < java . lang . Integer , java . lang . String > , java . lang . String > ( ) ; expected . put ( ( ( java . lang . Integer ) ( array [ 0 ] ) ) , IDENT_6 ) ; } @ com . querydsl . core . group . METHOD_3 ( STRING_0 ) com . IDENT_7 . commons . lang . IDENT_8 < com . IDENT_7 . commons . lang . IDENT_8 < java . lang . Integer , java . lang . String > , java . lang . String > IDENT_9 = ( ( com . IDENT_7 . commons . lang . IDENT_8 < com . IDENT_7 . commons . lang . IDENT_8 < java . lang . Integer , java . lang . String > , java . lang . String > ) ( array [ 1 ] ) ) ; com . IDENT_7 . commons . lang . IDENT_8 < java . lang . Integer , java . lang . String > first = IDENT_9 . METHOD_4 ( ) ; com . querydsl . core . group . Map < java . lang . Integer , java . lang . String > IDENT_10 = com . querydsl . core . group . Collections . METHOD_5 ( first . METHOD_4 ( ) , first . METHOD_6 ( ) ) ; IDENT_6 . put ( IDENT_10 , IDENT_9 . METHOD_6 ( ) ) ; } "<AssertPlaceHolder>" ; } toString ( ) { java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) . append ( STRING_1 ) . append ( METHOD_7 ( METHOD_8 ( ) ) ) . append ( STRING_2 ) . append ( ( ( connection ) == null ? STRING_3 : STRING_4 ) ) . append ( STRING_5 ) . append ( entity ) . append ( STRING_6 ) . append ( exception ) ; for ( Map . Entry < java . lang . String , java . lang . Object > entry : IDENT_11 . entrySet ( ) ) { sb . append ( STRING_7 ) . append ( entry . getKey ( ) ) . append ( STRING_8 ) . append ( entry . getValue ( ) ) . append ( "]" ) ; } return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( expected . toString ( ) , actual . toString ( ) ) 