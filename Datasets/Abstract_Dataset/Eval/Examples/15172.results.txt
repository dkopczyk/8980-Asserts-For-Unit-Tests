METHOD_0 ( ) { org . apache . hadoop . hive . IDENT_0 . plan . IDENT_1 . IDENT_2 IDENT_3 = new org . apache . hadoop . hive . IDENT_0 . plan . IDENT_1 . METHOD_1 ( 0 , 1 ) ; org . apache . hadoop . hive . IDENT_0 . plan . IDENT_1 . METHOD_1 IDENT_4 = new org . apache . hadoop . hive . IDENT_0 . plan . IDENT_1 . METHOD_1 ( 1 , INT_0 ) ; org . apache . hadoop . hive . IDENT_0 . plan . IDENT_1 . METHOD_1 IDENT_5 = org . apache . hadoop . hive . IDENT_0 . IDENT_6 . IDENT_7 . METHOD_2 ( IDENT_3 , IDENT_4 ) ; "<AssertPlaceHolder>" ; METHOD_3 ( IDENT_5 , 0 ) ; METHOD_3 ( IDENT_5 , 1 ) ; METHOD_3 ( IDENT_5 , INT_0 ) ; } METHOD_2 ( org . apache . hadoop . hive . IDENT_0 . plan . IDENT_1 . METHOD_1 , org . apache . hadoop . hive . IDENT_0 . plan . IDENT_1 . METHOD_1 ) { if ( ( ( ( ( IDENT_8 . IDENT_9 ) != null ) && ( ( IDENT_8 . IDENT_10 ) != null ) ) && ( ( IDENT_11 . IDENT_9 ) != null ) ) && ( ( IDENT_11 . IDENT_10 ) != null ) ) { long IDENT_12 = IDENT_8 . IDENT_9 . METHOD_4 ( ) ; long IDENT_13 = IDENT_8 . IDENT_10 . METHOD_4 ( ) ; long IDENT_14 = IDENT_11 . IDENT_9 . METHOD_4 ( ) ; long IDENT_15 = IDENT_11 . IDENT_10 . METHOD_4 ( ) ; if ( ( IDENT_13 < IDENT_14 ) || ( IDENT_15 < IDENT_12 ) ) { return null ; } else { return new org . apache . hadoop . hive . IDENT_0 . plan . IDENT_1 . METHOD_1 ( java . lang . Math . min ( IDENT_12 , IDENT_14 ) , java . lang . Math . max ( IDENT_13 , IDENT_15 ) ) ; } } return null ; }
org . junit . Assert . assertNotNull ( IDENT_5 ) 