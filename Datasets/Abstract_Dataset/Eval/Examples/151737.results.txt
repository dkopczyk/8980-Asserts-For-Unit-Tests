METHOD_0 ( ) { IDENT_0 . IDENT_1 adapter = new IDENT_0 . METHOD_1 ( ) ; java . util . function . IDENT_2 < IDENT_0 . IDENT_3 > IDENT_4 = mock ( java . util . function . IDENT_2 . class ) ; java . util . function . IDENT_2 < IDENT_0 . IDENT_3 > IDENT_5 = mock ( java . util . function . IDENT_2 . class ) ; adapter . METHOD_2 ( IDENT_4 ) ; adapter . METHOD_2 ( IDENT_5 ) ; IDENT_0 . IDENT_3 IDENT_6 = mock ( IDENT_0 . IDENT_3 . class ) ; when ( IDENT_4 . test ( IDENT_6 ) ) . thenReturn ( true ) ; when ( IDENT_5 . test ( IDENT_6 ) ) . thenReturn ( false ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( IDENT_0 . IDENT_3 ) { return IDENT_7 . stream ( ) . METHOD_4 ( ( p ) -> p . test ( IDENT_6 ) ) ; }
org . junit . Assert . assertFalse ( adapter . METHOD_3 ( IDENT_6 ) ) 