METHOD_0 ( ) { java . util . List < java . lang . String > IDENT_0 = METHOD_1 ( org . apache . hadoop . hive . IDENT_1 . IDENT_2 . IDENT_3 . get ( 0 ) , 1 , 9 ) ; org . apache . hive . common . util . IDENT_4 IDENT_5 = METHOD_2 ( IDENT_0 ) ; java . lang . String IDENT_6 = org . apache . hadoop . hive . IDENT_1 . IDENT_2 . IDENT_3 . get ( 0 ) ; java . lang . String IDENT_7 = org . apache . hadoop . hive . IDENT_1 . IDENT_2 . IDENT_8 . get ( 0 ) ; int IDENT_9 = 100 ; int IDENT_10 = 10 ; int IDENT_11 = 50 ; int IDENT_12 = 5 ; org . apache . hadoop . hive . IDENT_1 . api . IDENT_13 IDENT_14 = METHOD_3 ( IDENT_7 , IDENT_9 , IDENT_10 , IDENT_11 , IDENT_12 ) ; org . apache . hadoop . hive . IDENT_1 . IDENT_2 . cache . add ( org . apache . hadoop . hive . IDENT_1 . IDENT_15 . IDENT_16 , org . apache . hadoop . hive . IDENT_1 . IDENT_2 . IDENT_17 , IDENT_6 , IDENT_7 , 10 , IDENT_14 , IDENT_5 ) ; java . lang . Thread . sleep ( INT_0 ) ; org . apache . hadoop . hive . IDENT_1 . IDENT_18 . IDENT_19 IDENT_20 = org . apache . hadoop . hive . IDENT_1 . IDENT_2 . cache . get ( org . apache . hadoop . hive . IDENT_1 . IDENT_15 . IDENT_16 , org . apache . hadoop . hive . IDENT_1 . IDENT_2 . IDENT_17 , IDENT_6 , IDENT_7 , IDENT_0 ) ; "<AssertPlaceHolder>" ; } get ( java . lang . String , java . lang . String , java . lang . String , java . lang . String , java . util . List ) { org . apache . hadoop . hive . IDENT_1 . IDENT_18 . IDENT_21 key = new org . apache . hadoop . hive . IDENT_1 . IDENT_18 . METHOD_4 ( IDENT_22 , IDENT_23 , IDENT_6 , IDENT_7 ) ; org . apache . hadoop . hive . IDENT_1 . IDENT_18 . IDENT_24 IDENT_25 = IDENT_26 . get ( key ) ; if ( ( IDENT_25 == null ) || ( ( IDENT_25 . nodes . size ( ) ) == 0 ) ) { org . apache . hadoop . hive . IDENT_1 . IDENT_18 . LOG . debug ( ( STRING_0 + ( key . toString ( ) ) ) ) ; return null ; } org . apache . hadoop . hive . IDENT_1 . IDENT_18 . IDENT_19 match = null ; boolean IDENT_27 = false ; try { IDENT_27 = IDENT_25 . IDENT_28 . METHOD_5 ( IDENT_29 , TimeUnit . IDENT_30 ) ; if ( IDENT_27 ) { match = METHOD_6 ( IDENT_0 , IDENT_25 . nodes ) ; } if ( match != null ) { IDENT_25 . METHOD_7 ( ) ; IDENT_31 . METHOD_8 ( ) ; org . apache . hadoop . hive . IDENT_1 . IDENT_18 . LOG . info ( ( ( ( ( ( STRING_1 + ( IDENT_31 . METHOD_9 ( ) ) ) + STRING_2 ) + ( IDENT_32 . METHOD_9 ( ) ) ) + STRING_3 ) + ( METHOD_10 ( ) ) ) ) ; } else { IDENT_32 . METHOD_8 ( ) ; } } catch ( java . lang . IDENT_33 e ) { org . apache . hadoop . hive . IDENT_1 . IDENT_18 . LOG . debug ( STRING_4 , e ) ; } finally { if ( IDENT_27 ) { IDENT_25 . IDENT_28 . METHOD_11 ( ) ; } } return match ; }
org . junit . Assert . assertNull ( IDENT_20 ) 