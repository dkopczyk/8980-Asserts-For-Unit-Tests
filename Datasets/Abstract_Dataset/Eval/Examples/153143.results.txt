METHOD_0 ( ) { final com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = new com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( ) ; final com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 IDENT_6 = new com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( ) ; IDENT_5 . METHOD_2 ( new java . awt . METHOD_3 ( ( ( IDENT_6 . METHOD_4 ( ) . METHOD_5 ( ) ) OP_0 - 1 ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ) { for ( final java . lang . reflect . Field f : com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 . class . METHOD_7 ( ) ) { if ( ( ( f . METHOD_8 ( ) ) & ( ( ( java . lang . reflect . IDENT_7 . IDENT_8 ) | ( java . lang . reflect . IDENT_7 . IDENT_9 ) ) | ( java . lang . reflect . IDENT_7 . IDENT_10 ) ) ) != 0 ) { continue ; } try { final java . lang . Object IDENT_11 = f . get ( this ) ; final java . lang . Object IDENT_12 = f . get ( IDENT_13 ) ; if ( ( IDENT_11 == null ) && ( IDENT_12 == null ) ) { continue ; } if ( ( ( IDENT_11 == null ) || ( IDENT_12 == null ) ) || ( ! ( IDENT_11 . equals ( IDENT_12 ) ) ) ) { return true ; } } catch ( java . lang . IDENT_14 ex ) { throw new java . lang . METHOD_9 ( ( ( STRING_0 + ( f . getName ( ) ) ) + STRING_1 ) , ex ) ; } catch ( java . lang . IllegalArgumentException ex ) { throw new java . lang . METHOD_9 ( ( ( STRING_2 + ( f . getName ( ) ) ) + STRING_1 ) , ex ) ; } } final java . util . Map < java . lang . String , com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . utils . IDENT_15 > IDENT_16 = this . IDENT_17 ; final java . util . Map < java . lang . String , com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . utils . IDENT_15 > IDENT_18 = IDENT_13 . IDENT_17 ; if ( ( IDENT_18 . size ( ) ) != ( IDENT_18 . size ( ) ) ) { return true ; } for ( final Map . Entry < java . lang . String , com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . utils . IDENT_15 > e : IDENT_16 . entrySet ( ) ) { if ( ! ( IDENT_18 . containsKey ( e . getKey ( ) ) ) ) { return true ; } if ( ! ( IDENT_18 . get ( e . getKey ( ) ) . equals ( IDENT_16 . get ( e . getKey ( ) ) ) ) ) { return true ; } } return false ; }
org . junit . Assert . assertTrue ( IDENT_5 . METHOD_6 ( IDENT_6 ) ) 