METHOD_0 ( ) { java . lang . String value = STRING_0 + ( ( ( ( ( ( ( ( ( ( STRING_1 + STRING_2 ) + STRING_2 3 ) + STRING_3 ) + STRING_2 4 ) + STRING_2 6 ) + STRING_4 ) + STRING_2 5 ) + STRING_5 ) + STRING_2 0 ) + STRING_6 ) ; try { for ( int i = 0 ; i < 10 ; i ++ ) { System . out . println ( ( STRING_7 + i ) ) ; org . IDENT_0 . api . IDENT_1 < java . lang . String > q = IDENT_0 . METHOD_1 ( java . lang . String . valueOf ( i ) ) ; q . METHOD_2 ( 10 ) ; q . add ( value ) ; System . out . println ( ( ( STRING_8 + i ) + "]" ) ) ; q . METHOD_3 ( 1 , TimeUnit . IDENT_2 ) ; System . out . println ( ( ( STRING_2 2 + i ) + "]" ) ) ; java . lang . String IDENT_3 = q . METHOD_4 ( 1 , TimeUnit . IDENT_4 ) ; System . out . println ( ( ( ( STRING_2 1 + i ) + "]" ) + METHOD_4 ) ) ; "<AssertPlaceHolder>" ; } } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( e . METHOD_5 ( ) ) ; } } METHOD_4 ( long , java . util . concurrent . TimeUnit ) { return IDENT_5 . METHOD_4 ( IDENT_6 , unit ) ; }
org . junit . Assert . assertEquals ( value , METHOD_4 ) 