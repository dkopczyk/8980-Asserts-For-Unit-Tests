METHOD_0 ( ) { java . lang . String json = STRING_0 ; org . apache . hadoop . hive . IDENT_0 . IDENT_1 . json . IDENT_2 . IDENT_3 actual = IDENT_4 . mapper . METHOD_1 ( json , org . apache . hadoop . hive . IDENT_0 . IDENT_1 . json . IDENT_2 . IDENT_3 . class ) ; org . apache . hadoop . hive . IDENT_0 . IDENT_1 . json . IDENT_2 . IDENT_3 expected = new org . apache . hadoop . hive . IDENT_0 . IDENT_1 . json . IDENT_2 . METHOD_2 ( INT_0 , new java . util . HashMap < java . lang . String , java . lang . String > ( ) { { put ( "a" , "a" ) ; put ( "b" , STRING_1 ) ; } } , INT_1 ) ; "<AssertPlaceHolder>" ; } put ( int , java . lang . Object ) { switch ( IDENT_5 ) { case 0 : IDENT_6 = ( ( java . lang . Boolean ) ( IDENT_7 ) ) ; break ; case 1 : channel = ( ( java . lang . String ) ( IDENT_7 . toString ( ) ) ) ; break ; case 2 : IDENT_8 = ( ( java . lang . String ) ( IDENT_7 . toString ( ) ) ) ; break ; case 3 : IDENT_9 = ( ( java . lang . String ) ( IDENT_7 . toString ( ) ) ) ; break ; case 4 : IDENT_10 = ( ( java . lang . Boolean ) ( IDENT_7 ) ) ; break ; case 5 : page = ( ( java . lang . String ) ( IDENT_7 . toString ( ) ) ) ; break ; case 6 : IDENT_11 = ( ( java . lang . String ) ( IDENT_7 . toString ( ) ) ) ; break ; case 7 : IDENT_12 = ( ( java . lang . Long ) ( IDENT_7 ) ) ; break ; case 8 : IDENT_13 = ( ( java . lang . String ) ( IDENT_7 . toString ( ) ) ) ; break ; case 9 : IDENT_14 = ( ( java . lang . Long ) ( IDENT_7 ) ) ; break ; case 10 : IDENT_15 = ( ( java . lang . Boolean ) ( IDENT_7 ) ) ; break ; case INT_2 : IDENT_16 = ( ( java . lang . Boolean ) ( IDENT_7 ) ) ; break ; case 12 : IDENT_17 = ( ( java . lang . Long ) ( IDENT_7 ) ) ; break ; case INT_3 : IDENT_18 = ( ( java . lang . Boolean ) ( IDENT_7 ) ) ; break ; case INT_4 : user = ( ( java . lang . String ) ( IDENT_7 . toString ( ) ) ) ; break ; case 15 : IDENT_19 = ( ( java . lang . Double ) ( IDENT_7 ) ) ; break ; case 16 : IDENT_20 = ( ( java . lang . Long ) ( IDENT_7 ) ) ; break ; case INT_5 : IDENT_21 = ( ( java . lang . String ) ( IDENT_7 . toString ( ) ) ) ; break ; default : throw new org . apache . avro . METHOD_3 ( STRING_2 ) ; } }
org . junit . Assert . assertEquals ( expected , actual ) 