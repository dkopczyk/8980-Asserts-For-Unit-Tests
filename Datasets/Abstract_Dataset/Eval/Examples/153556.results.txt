METHOD_0 ( ) { io . IDENT_0 . IDENT_1 . serialization . IDENT_2 context = org . mockito . Mockito . mock ( io . IDENT_0 . IDENT_1 . serialization . IDENT_2 . class ) ; org . mockito . Mockito . when ( context . getInstance ( java . util . List . class ) ) . thenReturn ( new java . util . ArrayList ( ) ) ; java . lang . String input = STRING_0 ; java . util . Collection < java . lang . String > expected = java . util . Arrays . asList ( STRING_1 , STRING_2 ) ; @ io . IDENT_0 . IDENT_1 . serialization . METHOD_1 ( STRING_3 ) java . util . Collection < java . lang . String > output = IDENT_3 . METHOD_2 ( java . util . List . class , input , context ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . Class , java . lang . String , io . IDENT_0 . IDENT_1 . serialization . IDENT_2 ) { IDENT_4 collection = ctx . getInstance ( IDENT_5 ) ; int IDENT_6 = response . indexOf ( STRING_4 ) ; while ( IDENT_6 != ( - 1 ) ) { int IDENT_7 = response . indexOf ( STRING_5 , IDENT_6 ) ; collection . add ( METHOD_2 ( response . substring ( ( IDENT_6 + 4 ) , IDENT_7 ) , ctx ) ) ; IDENT_6 = response . indexOf ( STRING_4 , IDENT_7 ) ; } return collection ; }
org . junit . Assert . assertEquals ( expected , output ) 