METHOD_0 ( ) { java . util . List < org . IDENT_0 . maven . ext . common . model . IDENT_1 > p = METHOD_1 ( ) ; org . IDENT_0 . maven . ext . core . IDENT_2 m = new org . IDENT_0 . maven . ext . core . METHOD_2 ( null , java . util . Collections . METHOD_3 ( ) , java . util . Collections . METHOD_3 ( ) , null ) ; org . IDENT_0 . maven . ext . core . IDENT_3 IDENT_4 = org . IDENT_0 . maven . ext . core . fixture . TestUtils . METHOD_4 ( null ) ; m . init ( IDENT_4 ) ; java . util . Set < java . lang . String > IDENT_5 = ( ( java . util . Set < java . lang . String > ) ( org . IDENT_0 . maven . ext . core . fixture . TestUtils . METHOD_5 ( m , STRING_0 , new java . lang . Class [ ] { org . IDENT_0 . maven . ext . core . IDENT_3 . class , java . util . List . class } , new java . lang . Object [ ] { IDENT_4 , p } ) ) ) ; logger . info ( STRING_1 , IDENT_5 ) ; "<AssertPlaceHolder>" ; } size ( ) { return ( ( ( list . size ( ) ) + ( size ) ) - 1 ) / ( size ) ; }
org . junit . Assert . assertEquals ( 2 , IDENT_5 . size ( ) ) 