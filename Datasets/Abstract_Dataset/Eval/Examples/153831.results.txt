METHOD_0 ( ) { java . lang . String s = STRING_0 ; byte [ ] data = s . getBytes ( ) ; org . IDENT_0 . media . core . spi . utils . IDENT_1 t = new org . IDENT_0 . media . core . spi . utils . METHOD_1 ( ) ; t . METHOD_2 ( data , 0 , data . length ) ; org . IDENT_0 . media . core . spi . utils . METHOD_1 IDENT_2 = new org . IDENT_0 . media . core . spi . utils . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( data , 4 , 3 ) ; java . lang . IDENT_3 IDENT_4 = t . METHOD_3 ( 4 , 7 ) ; for ( int i = 0 ; i < ( IDENT_4 . length ( ) ) ; i ++ ) { "<AssertPlaceHolder>" ; } } charAt ( int ) { return ( ( char ) ( IDENT_5 [ ( ( pos ) + index ) ] ) ) ; }
org . junit . Assert . assertEquals ( IDENT_2 . charAt ( i ) , IDENT_4 . charAt ( i ) ) 