METHOD_0 ( ) { edu . IDENT_0 . IDENT_1 . parser . IDENT_2 IDENT_3 = new edu . IDENT_0 . IDENT_1 . parser . METHOD_1 ( ) ; java . lang . String s = STRING_0 2 + ( ( ( ( ( STRING_1 + STRING_2 ) + STRING_3 ) + STRING_0 3 ) + STRING_4 ) + STRING_5 ) ; IDENT_3 . read ( new java . io . METHOD_2 ( new java . io . METHOD_3 ( s ) ) ) ; edu . IDENT_0 . IDENT_1 . parser . Document doc = new edu . IDENT_0 . IDENT_1 . parser . Document ( STRING_0 0 ) ; java . util . IDENT_4 < edu . IDENT_0 . IDENT_1 . parser . IDENT_5 > IDENT_6 = new java . util . IDENT_4 < edu . IDENT_0 . IDENT_1 . parser . IDENT_5 > ( ) ; edu . IDENT_0 . IDENT_1 . parser . IDENT_5 IDENT_7 = new edu . IDENT_0 . IDENT_1 . parser . METHOD_4 ( STRING_6 , new edu . IDENT_0 . IDENT_1 . parser . METHOD_5 ( 3 , 9 ) , new edu . IDENT_0 . IDENT_1 . parser . METHOD_6 ( STRING_7 , STRING_0 ) ) ; doc . METHOD_7 ( IDENT_7 ) ; edu . IDENT_0 . IDENT_1 . parser . METHOD_4 IDENT_8 = new edu . IDENT_0 . IDENT_1 . parser . METHOD_4 ( STRING_6 , new edu . IDENT_0 . IDENT_1 . parser . METHOD_5 ( 0 , 9 ) , new edu . IDENT_0 . IDENT_1 . parser . METHOD_6 ( STRING_7 , STRING_8 , STRING_9 , IDENT_7 ) ) ; doc . METHOD_7 ( IDENT_8 ) ; IDENT_6 . add ( IDENT_8 ) ; edu . IDENT_0 . IDENT_1 . parser . METHOD_4 IDENT_9 = new edu . IDENT_0 . IDENT_1 . parser . METHOD_4 ( STRING_6 , new edu . IDENT_0 . IDENT_1 . parser . METHOD_5 ( INT_0 , INT_1 ) , new edu . IDENT_0 . IDENT_1 . parser . METHOD_6 ( STRING_7 , STRING_8 ) ) ; doc . METHOD_7 ( IDENT_9 ) ; IDENT_6 . add ( IDENT_9 ) ; edu . IDENT_0 . IDENT_1 . parser . IDENT_10 . METHOD_8 ( doc , IDENT_3 , IDENT_6 ) ; "<AssertPlaceHolder>" ; } get ( int ) { throw new java . lang . METHOD_9 ( STRING_10 ) ; }
org . junit . Assert . assertEquals ( IDENT_8 . get ( STRING_0 1 ) , IDENT_9 ) 