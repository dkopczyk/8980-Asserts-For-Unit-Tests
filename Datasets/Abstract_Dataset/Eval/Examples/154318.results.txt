METHOD_0 ( ) { System . out . println ( STRING_0 ) ; java . util . List < ? > values = java . util . Arrays . asList ( 1 , 2 , 3 , 4 , 5 , 6 , 7 ) ; com . IDENT_0 . IDENT_1 . jdbc . IDENT_2 IDENT_3 = new com . IDENT_0 . IDENT_1 . jdbc . METHOD_1 ( new com . IDENT_0 . IDENT_1 . jdbc . METHOD_2 ( com . IDENT_0 . IDENT_1 . jdbc . IDENT_4 . IDENT_5 , com . IDENT_0 . IDENT_1 . jdbc . IDENT_4 . IDENT_6 , com . IDENT_0 . IDENT_1 . jdbc . IDENT_4 . IDENT_7 , com . IDENT_0 . IDENT_1 . jdbc . IDENT_4 . IDENT_8 ) , "test" ) ; com . IDENT_0 . IDENT_1 . jdbc . IDENT_9 builder = new com . IDENT_0 . IDENT_1 . jdbc . METHOD_3 ( IDENT_3 , com . IDENT_0 . IDENT_1 . jdbc . IDENT_4 . IDENT_10 , false ) ; builder . METHOD_4 ( com . IDENT_0 . IDENT_1 . jdbc . IDENT_11 . METHOD_5 ( STRING_1 , values , IDENT_12 . IDENT_13 , 10 ) ) ; com . IDENT_0 . IDENT_1 . jdbc . query . IDENT_14 < java . lang . String > processor = new com . IDENT_0 . IDENT_1 . jdbc . query . IDENT_14 < java . lang . String > ( ) { @ com . IDENT_0 . IDENT_1 . jdbc . Override public void METHOD_6 ( java . sql . ResultSet IDENT_15 , java . util . Collection < java . lang . String > results ) throws com . IDENT_0 . IDENT_1 . jdbc . Exception { while ( IDENT_15 . next ( ) ) { results . add ( IDENT_15 . getString ( 1 ) ) ; } } } ; java . util . List < java . lang . String > results = new java . util . ArrayList ( ) ; builder . execute ( processor , results ) ; System . out . println ( ( ( STRING_2 + ( results . size ( ) ) ) + STRING_3 ) ) ; System . out . println ( com . google . common . base . IDENT_16 . METHOD_7 ( STRING_4 ) . join ( results ) ) ; "<AssertPlaceHolder>" ; } size ( ) { try { return count . get ( ) ; } catch ( java . lang . IDENT_17 | java . util . concurrent . IDENT_18 ex ) { return 0 ; } }
org . junit . Assert . assertTrue ( ( ( results . size ( ) ) == ( values . size ( ) ) ) ) 