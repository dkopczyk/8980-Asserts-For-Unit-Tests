METHOD_0 ( ) { System . out . println ( STRING_0 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( ) . METHOD_2 ( STRING_1 ) . build ( ) ; java . util . List < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 > session = client . METHOD_3 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; for ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 s : session ) { System . out . println ( s ) ; } } METHOD_3 ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) { com . IDENT_0 . IDENT_6 . services . auth . IDENT_7 IDENT_8 = IDENT_9 . get ( IDENT_10 . getKey ( ) ) ; if ( IDENT_8 != null ) { return java . util . Collections . singletonList ( IDENT_8 . METHOD_4 ( ) ) ; } else { java . util . List < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 > found = new java . util . ArrayList ( ) ; for ( java . lang . Object key : IDENT_9 . METHOD_5 ( ) . METHOD_6 ( ) ) { if ( key . toString ( ) . startsWith ( IDENT_10 . getKey ( ) ) ) { IDENT_8 = IDENT_9 . get ( key . toString ( ) ) ; if ( IDENT_8 != null ) { found . add ( IDENT_8 . METHOD_4 ( ) ) ; } } } if ( ( found . isEmpty ( ) ) && ( ! ( METHOD_7 ( ) ) ) ) { return METHOD_8 ( ) . METHOD_3 ( IDENT_10 ) ; } return found ; } }
org . junit . Assert . assertNotNull ( session ) 