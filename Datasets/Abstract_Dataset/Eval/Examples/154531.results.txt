METHOD_0 ( ) { java . math . BigInteger index = new java . math . BigInteger ( STRING_0 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . builder ( ) . index ( index ) . METHOD_1 ( STRING_1 ) . build ( ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_6 = com . IDENT_0 . IDENT_1 . cache . IDENT_7 . METHOD_2 ( index , 10 , IDENT_3 . IDENT_8 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . math . BigInteger , int , com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) { METHOD_3 ( ( ( ! ( IDENT_9 . METHOD_4 ( ) . METHOD_5 ( ) ) ) && ( ! ( IDENT_9 . METHOD_6 ( ) . METHOD_5 ( ) ) ) ) , STRING_2 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . Builder builder = com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . builder ( ) . from ( com . IDENT_0 . IDENT_1 . cache . IDENT_7 . METHOD_7 ( index , IDENT_10 ) ) . token ( IDENT_9 . METHOD_8 ( ) ) . METHOD_9 ( IDENT_9 . METHOD_10 ( ) ) . METHOD_11 ( IDENT_9 . METHOD_12 ( ) ) . METHOD_13 ( IDENT_9 . METHOD_14 ( ) ) ; for ( java . lang . String IDENT_11 : IDENT_9 . METHOD_15 ( ) ) { builder . METHOD_16 ( IDENT_11 ) ; } return builder . build ( ) ; }
org . junit . Assert . assertEquals ( IDENT_4 , IDENT_6 ) 