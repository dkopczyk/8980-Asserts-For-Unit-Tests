METHOD_0 ( ) { final org . apache . hc . core5 . http . IDENT_0 IDENT_1 = new org . apache . hc . core5 . http . message . METHOD_1 ( STRING_0 , STRING_1 ) ; final org . apache . hc . core5 . http . IDENT_2 [ ] headers = new org . apache . hc . core5 . http . IDENT_2 [ ] { new org . apache . hc . core5 . http . message . METHOD_2 ( STRING_2 , org . apache . hc . IDENT_3 . http . utils . IDENT_4 . METHOD_3 ( IDENT_5 ) ) , new org . apache . hc . core5 . http . message . METHOD_2 ( STRING_3 , STRING_4 ) , new org . apache . hc . core5 . http . message . METHOD_2 ( STRING_5 , STRING_6 ) } ; entry = METHOD_4 ( headers ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( org . apache . hc . core5 . http . IDENT_6 , org . apache . hc . core5 . http . IDENT_0 , org . apache . hc . IDENT_3 . http . cache . IDENT_7 , java . util . Date ) { if ( ! ( METHOD_6 ( entry , request , now ) ) ) { log . debug ( STRING_7 ) ; return false ; } if ( ( METHOD_7 ( request ) ) && ( ! ( IDENT_8 . METHOD_8 ( entry ) ) ) ) { log . debug ( STRING_8 1 ) ; return false ; } if ( METHOD_9 ( request ) ) { log . debug ( STRING_9 ) ; return false ; } if ( ( ! ( METHOD_10 ( request ) ) ) && ( ( entry . getStatus ( ) ) == ( org . apache . hc . core5 . http . IDENT_9 . IDENT_10 ) ) ) { log . debug ( STRING_8 2 ) ; return false ; } if ( ( METHOD_10 ( request ) ) && ( ! ( METHOD_11 ( request , entry , now ) ) ) ) { log . debug ( STRING_8 ) ; return false ; } if ( METHOD_12 ( request , entry ) ) { log . debug ( ( STRING_10 + STRING_11 ) ) ; return false ; } final java . util . Iterator < org . apache . hc . core5 . http . IDENT_11 > it = org . apache . hc . core5 . http . message . IDENT_12 . METHOD_13 ( request , IDENT_13 . IDENT_14 ) ; while ( it . hasNext ( ) ) { final org . apache . hc . core5 . http . IDENT_11 IDENT_15 = it . next ( ) ; if ( IDENT_13 . IDENT_16 . equals ( IDENT_15 . getName ( ) ) ) { log . debug ( STRING_12 ) ; return false ; } if ( IDENT_13 . IDENT_17 . equals ( IDENT_15 . getName ( ) ) ) { log . debug ( STRING_13 ) ; return false ; } if ( IDENT_13 . IDENT_18 . equals ( IDENT_15 . getName ( ) ) ) { try { final int IDENT_19 = java . lang . Integer . METHOD_14 ( IDENT_15 . getValue ( ) ) ; if ( ( IDENT_8 . METHOD_15 ( entry , now ) ) > IDENT_19 ) { log . debug ( STRING_14 ) ; return false ; } } catch ( final java . lang . IDENT_20 ex ) { log . debug ( ( STRING_8 4 + ( ex . getMessage ( ) ) ) ) ; return false ; } } if ( IDENT_13 . IDENT_21 . equals ( IDENT_15 . getName ( ) ) ) { try { final int IDENT_22 = java . lang . Integer . METHOD_14 ( IDENT_15 . getValue ( ) ) ; if ( ( IDENT_8 . METHOD_16 ( entry ) ) > IDENT_22 ) { log . debug ( STRING_15 ) ; return false ; } } catch ( final java . lang . IDENT_20 ex ) { log . debug ( ( STRING_8 3 + ( ex . getMessage ( ) ) ) ) ; return false ; } } if ( IDENT_13 . IDENT_23 . equals ( IDENT_15 . getName ( ) ) ) { try { final long IDENT_24 = java . lang . Long . METHOD_17 ( IDENT_15 . getValue ( ) ) ; if ( IDENT_24 < 0L ) { return false ; } final long IDENT_25 = IDENT_8 . METHOD_15 ( entry , now ) ; final long IDENT_26 = IDENT_8 . METHOD_16 ( entry ) ; if ( ( IDENT_26 - IDENT_25 ) < IDENT_24 ) { log . debug ( ( STRING_8 0 + STRING_8 5 ) ) ; return false ; } } catch ( final java . lang . IDENT_20 ex ) { log . debug ( ( STRING_8 3 + ( ex . getMessage ( ) ) ) ) ; return false ; } } } log . debug ( STRING_16 ) ; return true ; }
org . junit . Assert . assertTrue ( impl . METHOD_5 ( host , IDENT_1 , entry , now ) ) 