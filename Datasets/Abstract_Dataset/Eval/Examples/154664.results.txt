METHOD_0 ( ) { net . ripe . IDENT_0 . commons . validation . IDENT_1 . IDENT_2 validator = new net . ripe . IDENT_0 . commons . validation . IDENT_1 . METHOD_1 ( options , result , root , IDENT_3 , root . METHOD_2 ( ) ) ; validate ( validator , child ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { for ( java . util . Map < net . ripe . IDENT_0 . commons . validation . IDENT_4 , java . util . List < net . ripe . IDENT_0 . commons . validation . IDENT_5 > > IDENT_6 : this . results . values ( ) ) { java . util . List < net . ripe . IDENT_0 . commons . validation . IDENT_5 > errors = IDENT_6 . get ( IDENT_4 . IDENT_7 ) ; if ( ( errors != null ) && ( ! ( errors . isEmpty ( ) ) ) ) { return true ; } } return false ; }
org . junit . Assert . assertFalse ( result . METHOD_3 ( ) ) 