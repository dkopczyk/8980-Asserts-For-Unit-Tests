METHOD_0 ( ) { net . ripe . db . whois . common . IDENT_0 . IDENT_1 IDENT_2 = net . ripe . db . whois . common . IDENT_0 . IDENT_1 . parse ( STRING_0 ) ; final int IDENT_3 = METHOD_1 ( IDENT_2 ) ; net . ripe . db . whois . common . dao . IDENT_4 IDENT_5 = new net . ripe . db . whois . common . dao . METHOD_2 ( IDENT_3 , net . ripe . db . whois . common . IDENT_0 . IDENT_6 . IDENT_7 , IDENT_2 . getKey ( ) ) ; METHOD_3 ( IDENT_3 , "" ) ; final int IDENT_8 = subject . METHOD_4 ( IDENT_9 , IDENT_5 , IDENT_2 , STRING_1 ) ; "<AssertPlaceHolder>" ; METHOD_3 ( IDENT_3 , STRING_1 ) ; } METHOD_4 ( org . springframework . jdbc . core . IDENT_10 , net . ripe . db . whois . common . dao . METHOD_2 , net . ripe . db . whois . common . IDENT_0 . IDENT_1 , java . lang . String ) { final net . ripe . db . whois . common . dao . jdbc . index . IDENT_11 IDENT_12 = net . ripe . db . whois . common . dao . jdbc . index . IDENT_13 . get ( METHOD_5 ( object . getType ( ) ) ) ; final net . ripe . db . whois . common . dao . METHOD_2 reference = METHOD_6 ( IDENT_12 . METHOD_7 ( IDENT_14 , value ) ) ; if ( reference == null ) { throw new java . lang . IllegalArgumentException ( ( STRING_2 + value ) ) ; } return METHOD_4 ( IDENT_14 , IDENT_15 , reference ) ; }
org . junit . Assert . assertThat ( IDENT_8 , org . hamcrest . core . Is . is ( 1 ) ) 