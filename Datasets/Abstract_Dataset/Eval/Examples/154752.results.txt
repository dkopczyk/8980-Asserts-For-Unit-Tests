METHOD_0 ( ) { final net . ripe . db . whois . common . domain . IDENT_0 IDENT_1 = net . ripe . db . whois . common . domain . IDENT_2 . METHOD_1 ( STRING_0 , 3 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { int IDENT_3 = 0 ; for ( final net . ripe . db . whois . common . domain . IDENT_4 IDENT_5 : IDENT_1 ) { switch ( IDENT_5 . getType ( ) ) { case IDENT_6 : IDENT_3 ++ ; break ; case IDENT_7 : case IDENT_8 : return IDENT_3 ; default : throw new java . lang . IllegalStateException ( ( STRING_1 + ( IDENT_5 . getType ( ) ) ) ) ; } } return IDENT_3 ; }
org . junit . Assert . assertThat ( IDENT_1 . METHOD_2 ( ) , org . hamcrest . Matchers . is ( 3 ) ) 