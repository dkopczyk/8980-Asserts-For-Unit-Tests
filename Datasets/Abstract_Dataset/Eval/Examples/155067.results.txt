test ( ) { uk . me . IDENT_0 . IDENT_1 . runtime . IDENT_2 IDENT_3 = new uk . me . IDENT_0 . IDENT_1 . runtime . METHOD_0 ( 50 ) ; uk . me . IDENT_0 . IDENT_1 . compiler . IDENT_4 IDENT_5 = uk . me . IDENT_0 . IDENT_1 . compiler . IDENT_4 . METHOD_1 ( STRING_0 ) ; uk . me . IDENT_0 . IDENT_1 . compiler . IDENT_4 IDENT_6 = uk . me . IDENT_0 . IDENT_1 . compiler . IDENT_4 . METHOD_1 ( STRING_1 ) ; uk . me . IDENT_0 . IDENT_1 . runtime . network . IDENT_7 IDENT_8 = new uk . me . IDENT_0 . IDENT_1 . runtime . network . METHOD_2 ( null , 0 , 0 ) ; java . net . IDENT_9 IDENT_10 = new java . net . METHOD_3 ( STRING_2 , INT_0 ) ; IDENT_8 . METHOD_4 ( IDENT_10 ) ; uk . me . IDENT_0 . IDENT_1 . runtime . network . IDENT_7 IDENT_11 = new uk . me . IDENT_0 . IDENT_1 . runtime . network . METHOD_2 ( STRING_2 , INT_0 , 1 ) ; uk . me . IDENT_0 . IDENT_1 . runtime . IDENT_12 IDENT_13 = uk . me . IDENT_0 . IDENT_1 . runtime . IDENT_12 . getInstance ( IDENT_5 , IDENT_8 , 0 , IDENT_3 . METHOD_5 ( ) ) ; IDENT_8 . start ( ) ; IDENT_11 . start ( ) ; uk . me . IDENT_0 . IDENT_1 . runtime . IDENT_14 call = new uk . me . IDENT_0 . IDENT_1 . runtime . METHOD_6 ( 8 , STRING_3 , STRING_4 , IDENT_6 . METHOD_7 ( ) , IDENT_11 , IDENT_3 . METHOD_5 ( ) ) ; call . METHOD_8 ( ) ; IDENT_3 . METHOD_5 ( ) . METHOD_9 ( call , 10 , TimeUnit . IDENT_15 ) ; java . lang . Thread . sleep ( 1000 ) ; "<AssertPlaceHolder>" ; IDENT_13 . METHOD_10 ( ) ; uk . me . IDENT_0 . IDENT_1 . runtime . IDENT_12 . METHOD_11 ( ) ; IDENT_3 . METHOD_10 ( ) ; } METHOD_12 ( ) { return ( this . IDENT_16 ) >= ( this . METHOD_7 . size ( ) ) ; }
org . junit . Assert . assertTrue ( call . METHOD_12 ( ) ) 