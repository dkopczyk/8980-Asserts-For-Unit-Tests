METHOD_0 ( ) { java . net . IDENT_0 IDENT_1 = java . net . IDENT_0 . METHOD_1 ( STRING_0 ) ; if ( IDENT_1 != null ) "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { java . lang . String IDENT_2 = null ; java . util . logging . IDENT_3 logger = java . util . logging . IDENT_3 . METHOD_3 ( net . IDENT_4 . IDENT_5 . internal . IDENT_6 . IDENT_7 . class . getName ( ) ) ; try { java . net . IDENT_0 IDENT_1 ; if ( ( ( IDENT_8 != null ) && ( ! ( IDENT_9 . IDENT_10 . equalsIgnoreCase ( IDENT_8 ) ) ) ) && ( ( IDENT_1 = java . net . IDENT_0 . METHOD_1 ( IDENT_8 ) ) != null ) ) { java . util . IDENT_11 < java . net . IDENT_12 > IDENT_13 = IDENT_1 . METHOD_4 ( ) ; while ( ( IDENT_13 . METHOD_5 ( ) ) && ( ( IDENT_2 == null ) || ( IDENT_2 . startsWith ( STRING_1 ) ) ) ) { java . lang . Object obj = IDENT_13 . METHOD_6 ( ) ; if ( ! ( obj instanceof java . net . IDENT_14 ) ) continue ; IDENT_2 = obj . toString ( ) ; if ( IDENT_2 . startsWith ( "/" ) ) IDENT_2 = IDENT_2 . substring ( 1 ) ; } } else if ( ! ( IDENT_9 . IDENT_10 . equalsIgnoreCase ( IDENT_8 ) ) ) { logger . METHOD_7 ( ( ( STRING_2 + IDENT_8 ) + STRING_3 ) ) ; } if ( IDENT_2 == null ) { logger . METHOD_8 ( STRING_4 ) ; IDENT_2 = java . net . IDENT_12 . METHOD_9 ( ) . METHOD_10 ( ) ; } } catch ( java . lang . Exception e ) { IDENT_2 = STRING_5 ; logger . METHOD_11 ( ( STRING_6 + ( e . getMessage ( ) ) ) ) ; net . IDENT_4 . core . utils . Utils . METHOD_12 ( logger , e ) ; } logger . info ( ( STRING_7 + IDENT_2 ) ) ; return IDENT_2 ; }
org . junit . Assert . assertNotNull ( net . IDENT_4 . IDENT_5 . internal . IDENT_6 . IDENT_7 . METHOD_2 ( STRING_0 ) ) 