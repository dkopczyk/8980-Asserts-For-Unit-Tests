METHOD_0 ( ) { net . IDENT_0 . core . internal . IDENT_1 . IDENT_2 . IDENT_3 parser = new net . IDENT_0 . core . internal . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; parser . parse ( STRING_0 , this . IDENT_4 . METHOD_2 ( ) , 1 ) ; org . junit . Assert . assertEquals ( 1 , parser . errors . size ( ) ) ; org . junit . Assert . assertEquals ( 4 , parser . IDENT_5 . size ( ) ) ; org . junit . Assert . assertEquals ( IDENT_6 . IDENT_7 , parser . errors . get ( 0 ) . METHOD_3 ( ) ) ; org . junit . Assert . assertEquals ( 3 , parser . errors . get ( 0 ) . METHOD_4 ( ) . length ) ; org . junit . Assert . assertEquals ( IDENT_8 . IDENT_9 , parser . errors . get ( 0 ) . METHOD_4 ( ) [ 0 ] . METHOD_5 ( ) ) ; org . junit . Assert . assertEquals ( STRING_1 , parser . errors . get ( 0 ) . METHOD_4 ( ) [ 0 ] . METHOD_6 ( ) ) ; org . junit . Assert . assertEquals ( IDENT_8 . IDENT_10 , parser . errors . get ( 0 ) . METHOD_4 ( ) [ 1 ] . METHOD_5 ( ) ) ; org . junit . Assert . assertEquals ( IDENT_8 . IDENT_11 , parser . errors . get ( 0 ) . METHOD_4 ( ) [ 2 ] . METHOD_5 ( ) ) ; org . junit . Assert . assertTrue ( parser . IDENT_5 . containsKey ( STRING_2 ) ) ; org . junit . Assert . assertNull ( parser . IDENT_5 . get ( STRING_2 ) ) ; org . junit . Assert . assertEquals ( STRING_3 , parser . IDENT_5 . get ( STRING_4 ) ) ; org . junit . Assert . assertTrue ( parser . IDENT_5 . containsKey ( STRING_5 ) ) ; org . junit . Assert . assertNull ( parser . IDENT_5 . get ( STRING_5 ) ) ; org . junit . Assert . assertTrue ( parser . IDENT_5 . containsKey ( STRING_6 ) ) ; "<AssertPlaceHolder>" ; } get ( java . lang . String ) { java . lang . String result ; try { result = this . IDENT_12 . getString ( key ) ; } catch ( java . util . IDENT_13 e ) { result = ( ( net . IDENT_0 . doc . generator . internal . IDENT_14 . IDENT_15 . IDENT_16 ) + key ) + STRING_7 ; } return result ; }
org . junit . Assert . assertNull ( parser . IDENT_5 . get ( STRING_6 ) ) 