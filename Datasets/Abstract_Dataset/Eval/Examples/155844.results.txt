METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . String > IDENT_0 = new java . util . METHOD_1 ( ) ; IDENT_0 . put ( STRING_0 , STRING_1 ) ; IDENT_0 . put ( STRING_2 , STRING_1 ) ; IDENT_0 . put ( STRING_3 , "" ) ; IDENT_0 . put ( STRING_4 , null ) ; java . lang . String expected = STRING_5 ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . util . Map ) { java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; boolean first = true ; for ( java . util . Map . Entry < java . lang . String , java . lang . String > entry : IDENT_1 . entrySet ( ) ) { if ( first ) first = false ; else sb . append ( STRING_6 ) ; java . lang . String IDENT_2 = net . IDENT_3 . core . model . helpers . IDENT_4 . METHOD_3 ( entry . getKey ( ) ) . getValue ( ) ; sb . append ( IDENT_2 . toLowerCase ( ) ) ; sb . append ( STRING_7 ) ; if ( net . IDENT_3 . core . utils . Utils . METHOD_4 ( entry . getValue ( ) ) ) sb . append ( STRING_8 ) ; else sb . append ( ( ( STRING_9 + ( entry . getValue ( ) ) ) + STRING_9 ) ) ; } return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( expected , this . plugin . METHOD_2 ( IDENT_0 ) ) 