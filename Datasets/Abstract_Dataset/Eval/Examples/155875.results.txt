METHOD_0 ( ) { net . IDENT_0 . maven . IDENT_1 IDENT_2 = METHOD_1 ( STRING_0 ) ; org . apache . maven . project . IDENT_3 project = ( ( org . apache . maven . project . IDENT_3 ) ( this . rule . METHOD_2 ( IDENT_2 , STRING_1 ) ) ) ; this . rule . METHOD_3 ( IDENT_2 , STRING_2 , true ) ; IDENT_2 . execute ( ) ; java . io . File IDENT_4 = new java . io . File ( project . METHOD_4 ( ) , IDENT_5 . IDENT_6 ) ; "<AssertPlaceHolder>" ; } execute ( ) { java . io . File IDENT_7 = new java . io . File ( this . project . METHOD_5 ( ) . METHOD_6 ( ) ) ; java . io . File IDENT_8 = new java . io . File ( this . project . METHOD_5 ( ) . METHOD_7 ( ) ) ; java . lang . String IDENT_9 = ( this . project . METHOD_5 ( ) . METHOD_8 ( ) ) + STRING_3 ; java . io . File IDENT_10 = new java . io . File ( IDENT_8 , IDENT_9 ) ; try { this . IDENT_11 . METHOD_9 ( IDENT_7 ) ; this . IDENT_11 . METHOD_10 ( true ) ; this . IDENT_11 . METHOD_11 ( IDENT_10 ) ; this . IDENT_11 . METHOD_12 ( ) ; this . project . METHOD_13 ( ) . METHOD_14 ( IDENT_10 ) ; } catch ( java . lang . Exception e ) { throw new org . apache . maven . plugin . METHOD_15 ( STRING_4 , e ) ; } }
org . junit . Assert . assertTrue ( IDENT_4 . exists ( ) ) 