METHOD_0 ( ) { METHOD_1 ( java . util . Collections . class , METHOD_2 ( IDENT_0 . IDENT_1 ) , METHOD_3 ( ) ) ; java . lang . Class target = java . util . Collections . class ; java . lang . Object IDENT_2 = java . util . Arrays . asList ( 1 , 2 , 3 ) ; java . util . Set < java . lang . reflect . Method > IDENT_3 = com . google . common . collect . IDENT_4 . METHOD_4 ( ) ; for ( java . lang . Class < ? > type : METHOD_5 ( IDENT_2 . getClass ( ) ) ) { IDENT_3 . addAll ( METHOD_1 ( target , METHOD_2 ( IDENT_0 . IDENT_1 ) , METHOD_6 ( type ) ) ) ; } java . util . Set < java . lang . reflect . Method > IDENT_5 = METHOD_1 ( target , METHOD_2 ( IDENT_0 . IDENT_1 ) , METHOD_3 ( java . lang . IDENT_6 . class ) , METHOD_7 ( IDENT_2 . getClass ( ) ) ) ; "<AssertPlaceHolder>" ; for ( java . lang . reflect . Method method : IDENT_3 ) { java . lang . Object invoke = method . invoke ( null , IDENT_2 ) ; } } METHOD_7 ( java . lang . Class [ ] ) { return new com . google . common . base . IDENT_7 < org . IDENT_8 . IDENT_9 > ( ) { public boolean apply ( @ javax . annotation . IDENT_10 org . IDENT_8 . IDENT_9 input ) { return org . IDENT_8 . IDENT_11 . METHOD_8 ( types , org . IDENT_8 . IDENT_11 . METHOD_9 ( input ) ) ; } } ; }
org . junit . Assert . assertEquals ( IDENT_3 , IDENT_5 ) 