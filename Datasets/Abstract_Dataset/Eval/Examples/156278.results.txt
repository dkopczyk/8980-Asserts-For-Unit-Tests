METHOD_0 ( ) { try { com . IDENT_0 . mock . web . IDENT_1 factory = new com . IDENT_0 . mock . web . METHOD_1 ( ) ; final java . util . List < java . lang . String > IDENT_2 = new java . util . ArrayList < java . lang . String > ( ) ; IDENT_2 . add ( STRING_0 ) ; com . IDENT_0 . mock . web . IDENT_3 context = factory . METHOD_2 ( ) ; context . METHOD_3 ( STRING_0 , com . googlecode . IDENT_4 . test . util . IDENT_5 . IDENT_6 ) ; for ( int i = 0 ; i < 20 ; i ++ ) { final java . lang . String result = com . googlecode . IDENT_4 . util . Utils . METHOD_4 ( IDENT_2 , context ) ; "<AssertPlaceHolder>" ; } } catch ( java . lang . Exception e ) { if ( e instanceof java . util . IDENT_7 ) { org . junit . Assert . fail ( STRING_1 ) ; } e . printStackTrace ( ) ; org . junit . Assert . fail ( STRING_2 ) ; } finally { com . googlecode . IDENT_4 . test . util . IDENT_5 . start = false ; } } METHOD_4 ( com . googlecode . IDENT_4 . util . List , javax . servlet . IDENT_8 ) { java . lang . String IDENT_9 = "" ; for ( java . lang . String IDENT_10 : IDENT_11 ) { java . lang . String hash = com . googlecode . IDENT_4 . util . Utils . METHOD_5 ( IDENT_10 , context ) ; IDENT_9 = IDENT_9 + ( hash != null ? hash : "" ) ; } return ( IDENT_9 . length ( ) ) > 0 ? ( IDENT_11 . size ( ) ) > 2 ? com . googlecode . IDENT_4 . util . Utils . METHOD_6 ( IDENT_9 . getBytes ( ) ) : IDENT_9 : null ; }
org . junit . Assert . assertNotNull ( result ) 