METHOD_0 ( ) { METHOD_1 ( ) ; com . IDENT_0 . plan . data . time . IDENT_1 IDENT_2 = com . IDENT_0 . plan . db . IDENT_3 . db . query ( com . IDENT_0 . plan . db . IDENT_4 . METHOD_2 ( IDENT_5 ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { com . IDENT_0 . plan . db . Map < java . lang . String , com . IDENT_0 . plan . data . time . IDENT_6 > times = new com . IDENT_0 . plan . db . HashMap ( ) ; com . IDENT_0 . plan . db . Map < java . lang . String , java . lang . Long > IDENT_7 = new com . IDENT_0 . plan . db . HashMap ( ) ; java . lang . String [ ] IDENT_8 = com . IDENT_0 . plan . data . time . IDENT_6 . METHOD_4 ( ) ; IDENT_7 . put ( IDENT_8 [ 0 ] , INT_0 ) ; IDENT_7 . put ( IDENT_8 [ 1 ] , INT_1 ) ; IDENT_7 . put ( IDENT_8 [ 2 ] , INT_2 ) ; IDENT_7 . put ( IDENT_8 [ 3 ] , INT_3 ) ; java . lang . String IDENT_9 = IDENT_10 [ 0 ] ; times . put ( IDENT_9 , new com . IDENT_0 . plan . data . time . METHOD_5 ( IDENT_7 ) ) ; com . IDENT_0 . plan . db . IDENT_3 . db . METHOD_6 ( new com . IDENT_0 . plan . db . METHOD_7 ( com . IDENT_0 . plan . db . IDENT_3 . IDENT_11 , IDENT_9 ) ) ; return new com . IDENT_0 . plan . data . time . METHOD_8 ( times ) ; }
org . junit . Assert . assertEquals ( METHOD_3 ( ) , IDENT_2 ) 