METHOD_0 ( ) { java . time . IDENT_0 IDENT_1 = java . time . IDENT_0 . of ( INT_0 , 6 , 15 , 0 , 0 , 0 , 0 , java . time . IDENT_2 . METHOD_1 ( ) ) ; java . time . IDENT_3 offset = IDENT_1 . METHOD_2 ( ) ; java . time . IDENT_0 IDENT_4 = java . time . IDENT_0 . of ( INT_0 , 6 , 15 , 20 , INT_1 , 0 , 0 , java . time . IDENT_2 . of ( STRING_0 ) ) ; System . out . println ( ( STRING_1 + ( ( offset . METHOD_3 ( ) ) / INT_2 ) ) ) ; int IDENT_5 = ( strategy . IDENT_6 . METHOD_4 ( ) ) + ( ( - ( offset . METHOD_3 ( ) ) ) / INT_2 ) ; System . out . println ( ( STRING_2 + IDENT_5 ) ) ; IDENT_4 = IDENT_4 . METHOD_5 ( IDENT_5 ) ; com . IDENT_7 . IDENT_8 . IDENT_9 IDENT_10 = mock ( com . IDENT_7 . IDENT_8 . IDENT_9 . class ) ; com . IDENT_7 . data . IDENT_11 IDENT_12 = new com . IDENT_7 . data . METHOD_6 ( STRING_3 ) ; when ( IDENT_10 . METHOD_7 ( IDENT_13 . IDENT_14 ) ) . thenReturn ( true ) ; when ( IDENT_10 . METHOD_8 ( ) ) . thenReturn ( IDENT_12 ) ; when ( IDENT_10 . getValue ( IDENT_13 . IDENT_14 ) ) . thenReturn ( BigDecimal . IDENT_15 ) ; when ( IDENT_10 . METHOD_9 ( ) ) . thenReturn ( IDENT_4 ) ; doReturn ( true ) . when ( strategy ) . METHOD_10 ( ) ; strategy . IDENT_16 = false ; strategy . METHOD_11 ( IDENT_10 ) ; "<AssertPlaceHolder>" ; verify ( strategy ) . METHOD_10 ( ) ; verify ( strategy , METHOD_12 ( ) ) . METHOD_13 ( any ( com . IDENT_7 . data . IDENT_11 . class ) , any ( com . IDENT_7 . data . IDENT_11 . class ) , any ( java . time . IDENT_0 . class ) ) ; } METHOD_11 ( com . IDENT_7 . IDENT_8 . IDENT_9 ) { if ( IDENT_17 . METHOD_7 ( IDENT_13 . IDENT_14 ) ) { IDENT_18 . put ( IDENT_17 . METHOD_8 ( ) , IDENT_17 . getValue ( IDENT_13 . IDENT_14 ) . METHOD_14 ( ) ) ; if ( ! ( IDENT_19 ) ) { IDENT_19 = METHOD_10 ( ) ; } } else { return ; } java . time . IDENT_20 IDENT_21 = IDENT_17 . METHOD_9 ( ) . METHOD_15 ( java . time . IDENT_2 . METHOD_1 ( ) ) . METHOD_16 ( ) ; if ( IDENT_21 . METHOD_17 ( IDENT_22 ) ) { return ; } if ( ( ( IDENT_21 . METHOD_18 ( IDENT_22 ) ) && ( IDENT_21 . METHOD_17 ( IDENT_6 ) ) ) && ( ! ( IDENT_16 ) ) ) { if ( IDENT_19 ) { IDENT_16 = true ; IDENT_23 . METHOD_19 ( ) . stream ( ) . METHOD_20 ( ( IDENT_24 ) -> { METHOD_13 ( IDENT_24 , IDENT_23 . get ( IDENT_24 ) , IDENT_17 . METHOD_9 ( ) ) ; } ) ; } } else if ( ! ( IDENT_21 . METHOD_17 ( IDENT_6 ) ) ) { IDENT_16 = false ; } }
org . junit . Assert . assertFalse ( strategy . IDENT_16 ) 