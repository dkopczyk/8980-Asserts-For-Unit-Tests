METHOD_0 ( ) { final org . apache . hc . IDENT_0 . http . IDENT_1 . IDENT_2 IDENT_3 = org . mockito . Mockito . mock ( org . apache . hc . IDENT_0 . http . IDENT_1 . IDENT_2 . class ) ; org . mockito . Mockito . when ( IDENT_3 . METHOD_1 ( ) ) . thenReturn ( STRING_0 ) ; final org . apache . hc . IDENT_0 . http . IDENT_1 . IDENT_2 IDENT_4 = org . mockito . Mockito . mock ( org . apache . hc . IDENT_0 . http . IDENT_1 . IDENT_2 . class ) ; org . mockito . Mockito . when ( IDENT_4 . METHOD_1 ( ) ) . thenReturn ( STRING_1 ) ; final org . apache . hc . IDENT_0 . http . impl . IDENT_1 . IDENT_5 IDENT_6 = new org . apache . hc . IDENT_0 . http . impl . IDENT_1 . METHOD_2 ( IDENT_3 , IDENT_4 ) ; final org . apache . hc . IDENT_0 . http . IDENT_1 . IDENT_7 IDENT_8 = new org . apache . hc . IDENT_0 . http . IDENT_1 . METHOD_3 ( STRING_2 , INT_0 , STRING_3 , true ) ; final org . apache . hc . IDENT_0 . http . impl . IDENT_1 . IDENT_9 IDENT_1 = new org . apache . hc . IDENT_0 . http . impl . IDENT_1 . METHOD_4 ( "name" , "value" ) ; org . mockito . Mockito . when ( IDENT_3 . match ( IDENT_1 , IDENT_8 ) ) . thenReturn ( true ) ; org . mockito . Mockito . when ( IDENT_4 . match ( IDENT_1 , IDENT_8 ) ) . thenReturn ( true ) ; "<AssertPlaceHolder>" ; org . mockito . Mockito . verify ( IDENT_3 ) . match ( IDENT_1 , IDENT_8 ) ; org . mockito . Mockito . verify ( IDENT_4 ) . match ( IDENT_1 , IDENT_8 ) ; } match ( org . apache . hc . IDENT_0 . http . IDENT_1 . IDENT_10 , org . apache . hc . IDENT_0 . http . IDENT_1 . METHOD_3 ) { return false ; }
org . junit . Assert . assertTrue ( IDENT_6 . match ( IDENT_1 , IDENT_8 ) ) 