METHOD_0 ( ) { try { java . util . ArrayList < IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 > nodes = IDENT_0 . IDENT_1 . testing . IDENT_4 . METHOD_1 ( ( ( IDENT_5 . IDENT_6 ) + 1 ) ) ; IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_7 = nodes . get ( 0 ) ; byte [ ] IDENT_8 = new java . lang . String ( STRING_0 ) . getBytes ( IDENT_9 . UTF_8 ) ; byte [ ] hash = IDENT_0 . IDENT_1 . tools . IDENT_10 . METHOD_2 ( IDENT_8 ) ; IDENT_7 . METHOD_3 ( IDENT_8 ) ; IDENT_7 . METHOD_3 ( IDENT_8 ) ; byte [ ] IDENT_11 = IDENT_7 . METHOD_4 ( hash ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( e . toString ( ) ) ; } } METHOD_4 ( byte [ ] ) { if ( ! ( IDENT_12 . containsKey ( hash ) ) ) { byte [ ] data = super . METHOD_4 ( hash ) ; IDENT_12 . put ( hash , data ) ; } return IDENT_12 . get ( hash ) ; }
org . junit . Assert . assertArrayEquals ( IDENT_8 , IDENT_11 ) 