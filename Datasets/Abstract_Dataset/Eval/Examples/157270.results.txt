METHOD_0 ( ) { java . lang . String string = STRING_0 ; java . util . Map < java . lang . String , java . lang . Object > row = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; row . put ( STRING_1 , string ) ; long IDENT_0 = org . sagebionetworks . repo . model . query . IDENT_1 . IDENT_2 . METHOD_1 ( row ) ; long expected = ( string . length ( ) ) * 2 ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . util . Map ) { long IDENT_0 = 0 ; java . util . Iterator it = IDENT_3 . values ( ) . iterator ( ) ; while ( it . hasNext ( ) ) { java . lang . Object value = it . next ( ) ; if ( value == null ) continue ; if ( value instanceof java . lang . String ) { java . lang . String IDENT_4 = ( ( java . lang . String ) ( value ) ) ; IDENT_0 += ( IDENT_4 . length ( ) ) * ( org . sagebionetworks . repo . model . query . IDENT_1 . IDENT_2 . IDENT_5 ) ; } else if ( value instanceof java . lang . Long ) { IDENT_0 += org . sagebionetworks . repo . model . query . IDENT_1 . IDENT_2 . IDENT_6 ; } else if ( value instanceof java . lang . Integer ) { IDENT_0 += org . sagebionetworks . repo . model . query . IDENT_1 . IDENT_2 . IDENT_7 ; } else if ( value instanceof java . lang . Double ) { IDENT_0 += org . sagebionetworks . repo . model . query . IDENT_1 . IDENT_2 . IDENT_8 ; } else if ( value instanceof byte [ ] ) { byte [ ] bytes = ( ( byte [ ] ) ( value ) ) ; IDENT_0 += bytes . length ; } else { throw new java . lang . IllegalArgumentException ( ( STRING_2 + ( value . getClass ( ) . getName ( ) ) ) ) ; } } return IDENT_0 ; }
org . junit . Assert . assertEquals ( expected , IDENT_0 ) 