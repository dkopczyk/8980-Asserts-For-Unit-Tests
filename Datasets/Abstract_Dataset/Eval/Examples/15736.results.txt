METHOD_0 ( ) { final java . lang . String s = STRING_0 ; final org . apache . hc . core5 . util . IDENT_0 line = new org . apache . hc . core5 . util . METHOD_1 ( INT_0 ) ; final org . apache . hc . core5 . http . nio . IDENT_1 IDENT_2 = new org . apache . hc . core5 . http . impl . nio . METHOD_2 ( INT_1 , INT_1 ) ; final java . nio . IDENT_3 . IDENT_4 IDENT_5 = org . apache . hc . core5 . http . impl . nio . IDENT_6 . METHOD_3 ( s ) ; IDENT_2 . METHOD_4 ( IDENT_5 ) ; "<AssertPlaceHolder>" ; line . METHOD_5 ( ) ; final org . apache . hc . core5 . http . nio . IDENT_1 IDENT_7 = new org . apache . hc . core5 . http . impl . nio . METHOD_2 ( INT_1 , INT_1 , 10 ) ; final java . nio . IDENT_3 . IDENT_4 IDENT_8 = org . apache . hc . core5 . http . impl . nio . IDENT_6 . METHOD_3 ( s ) ; IDENT_7 . METHOD_4 ( IDENT_8 ) ; try { IDENT_7 . METHOD_6 ( line , false ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( final org . apache . hc . core5 . http . IDENT_9 ex ) { } } METHOD_6 ( org . apache . hc . core5 . util . METHOD_1 , boolean ) { METHOD_7 ( ) ; int pos = - 1 ; for ( int i = buffer ( ) . position ( ) ; i < ( buffer ( ) . METHOD_8 ( ) ) ; i ++ ) { final int b = buffer ( ) . get ( i ) ; if ( b == ( org . apache . hc . core5 . http . IDENT_10 . IDENT_11 ) ) { pos = i + 1 ; break ; } } if ( ( this . IDENT_12 ) > 0 ) { final int IDENT_13 = ( pos > 0 ? pos : buffer ( ) . METHOD_8 ( ) ) - ( buffer ( ) . position ( ) ) ; if ( IDENT_13 >= ( this . IDENT_12 ) ) { throw new org . apache . hc . core5 . http . METHOD_9 ( STRING_2 ) ; } } if ( pos == ( - 1 ) ) { if ( IDENT_14 && ( buffer ( ) . METHOD_10 ( ) ) ) { pos = buffer ( ) . METHOD_8 ( ) ; } else { return false ; } } final int IDENT_15 = buffer ( ) . METHOD_8 ( ) ; buffer ( ) . METHOD_8 ( pos ) ; final int IDENT_16 = ( buffer ( ) . METHOD_8 ( ) ) - ( buffer ( ) . position ( ) ) ; IDENT_17 . METHOD_11 ( IDENT_16 ) ; if ( ( this . IDENT_18 ) == null ) { if ( buffer ( ) . METHOD_12 ( ) ) { final byte [ ] b = buffer ( ) . array ( ) ; final int IDENT_19 = buffer ( ) . position ( ) ; final int len = buffer ( ) . METHOD_13 ( ) ; IDENT_17 . append ( b , IDENT_19 , len ) ; buffer ( ) . position ( ( IDENT_19 + len ) ) ; } else { while ( buffer ( ) . METHOD_10 ( ) ) { IDENT_17 . append ( ( ( char ) ( ( buffer ( ) . get ( ) ) & 255 ) ) ) ; } } } else { if ( ( this . IDENT_20 ) == null ) { this . IDENT_20 = java . nio . IDENT_21 . METHOD_14 ( this . IDENT_22 ) ; } this . IDENT_18 . METHOD_15 ( ) ; for ( ; ; ) { final java . nio . IDENT_23 . IDENT_24 result = this . IDENT_18 . decode ( buffer ( ) , this . IDENT_20 , true ) ; if ( result . METHOD_16 ( ) ) { result . METHOD_17 ( ) ; } if ( result . METHOD_18 ( ) ) { this . IDENT_20 . METHOD_19 ( ) ; IDENT_17 . append ( this . IDENT_20 . array ( ) , this . IDENT_20 . position ( ) , this . IDENT_20 . METHOD_13 ( ) ) ; this . IDENT_20 . METHOD_5 ( ) ; } if ( result . METHOD_20 ( ) ) { break ; } } this . IDENT_18 . METHOD_21 ( this . IDENT_20 ) ; this . IDENT_20 . METHOD_19 ( ) ; if ( this . IDENT_20 . METHOD_10 ( ) ) { IDENT_17 . append ( this . IDENT_20 . array ( ) , this . IDENT_20 . position ( ) , this . IDENT_20 . METHOD_13 ( ) ) ; } } buffer ( ) . METHOD_8 ( IDENT_15 ) ; int l = IDENT_17 . length ( ) ; if ( l > 0 ) { if ( ( IDENT_17 . charAt ( ( l - 1 ) ) ) == ( org . apache . hc . core5 . http . IDENT_10 . IDENT_11 ) ) { l OP_0 ; IDENT_17 . METHOD_22 ( l ) ; } if ( ( l > 0 ) && ( ( IDENT_17 . charAt ( ( l - 1 ) ) ) == ( org . apache . hc . core5 . http . IDENT_10 . IDENT_25 ) ) ) { l OP_0 ; IDENT_17 . METHOD_22 ( l ) ; } } return true ; }
org . junit . Assert . assertTrue ( IDENT_2 . METHOD_6 ( line , false ) ) 