METHOD_0 ( ) { java . lang . String result = org . sagebionetworks . table . query . util . IDENT_0 . METHOD_1 ( IDENT_1 , IDENT_2 , schema ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . util . List , java . util . List ) { org . sagebionetworks . util . IDENT_3 . METHOD_2 ( IDENT_1 , STRING_0 ) ; org . sagebionetworks . util . IDENT_3 . METHOD_2 ( IDENT_2 , STRING_1 ) ; org . sagebionetworks . util . IDENT_3 . METHOD_2 ( schema , STRING_2 ) ; org . sagebionetworks . util . IDENT_3 . METHOD_3 ( ( ( schema . size ( ) ) >= ( IDENT_2 . size ( ) ) ) , STRING_3 ) ; org . sagebionetworks . table . query . model . IDENT_4 model = org . sagebionetworks . table . query . IDENT_5 . METHOD_4 ( IDENT_1 ) ; java . util . Map < java . lang . String , org . sagebionetworks . repo . model . table . IDENT_6 > IDENT_7 = new java . util . HashMap ( ) ; for ( org . sagebionetworks . repo . model . table . IDENT_6 IDENT_8 : schema ) { IDENT_7 . put ( IDENT_8 . getName ( ) , IDENT_8 ) ; } java . util . List < org . sagebionetworks . table . query . util . IDENT_9 > IDENT_10 = new java . util . ArrayList ( ) ; for ( org . sagebionetworks . repo . model . table . IDENT_11 IDENT_12 : IDENT_2 ) { org . sagebionetworks . repo . model . table . IDENT_6 IDENT_13 = IDENT_7 . get ( IDENT_12 . METHOD_5 ( ) ) ; if ( IDENT_13 == null ) { throw new java . lang . IllegalArgumentException ( ( STRING_4 + ( IDENT_12 . METHOD_5 ( ) ) ) ) ; } IDENT_10 . add ( new org . sagebionetworks . table . query . util . METHOD_6 ( IDENT_13 , IDENT_12 ) ) ; } return org . sagebionetworks . table . query . util . IDENT_14 . METHOD_7 ( model , IDENT_10 ) . METHOD_8 ( ) ; }
org . junit . Assert . assertEquals ( IDENT_1 , result ) 