METHOD_0 ( ) { java . util . Calendar IDENT_0 = org . sagebionetworks . logging . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; IDENT_0 . set ( INT_0 , 0 , 15 , INT_1 , INT_2 , 12 ) ; java . lang . String key = org . sagebionetworks . logging . IDENT_1 . IDENT_2 . METHOD_2 ( INT_3 , STRING_0 , IDENT_0 . METHOD_3 ( ) ) ; java . lang . String IDENT_3 = org . sagebionetworks . logging . IDENT_1 . IDENT_2 . METHOD_4 ( key ) ; System . out . println ( IDENT_3 ) ; IDENT_0 = org . sagebionetworks . logging . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; IDENT_0 . set ( Calendar . IDENT_4 , INT_0 ) ; IDENT_0 . set ( Calendar . IDENT_5 , 0 ) ; IDENT_0 . set ( Calendar . IDENT_6 , 15 ) ; IDENT_0 . set ( Calendar . IDENT_7 , INT_1 ) ; IDENT_0 . set ( Calendar . IDENT_8 , 0 ) ; IDENT_0 . set ( Calendar . IDENT_9 , 0 ) ; IDENT_0 . set ( Calendar . IDENT_10 , 0 ) ; long IDENT_11 = org . sagebionetworks . logging . IDENT_1 . IDENT_2 . METHOD_5 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . String ) { java . lang . String [ ] split = IDENT_3 . split ( "/" ) ; java . lang . String [ ] IDENT_12 = split [ 1 ] . split ( STRING_1 ) ; java . util . Calendar IDENT_0 = org . sagebionetworks . logging . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; IDENT_0 . set ( Calendar . IDENT_4 , java . lang . Integer . METHOD_6 ( IDENT_12 [ 0 ] ) ) ; IDENT_0 . set ( Calendar . IDENT_5 , ( ( java . lang . Integer . METHOD_6 ( IDENT_12 [ 1 ] ) ) - 1 ) ) ; IDENT_0 . set ( Calendar . IDENT_6 , java . lang . Integer . METHOD_6 ( IDENT_12 [ 2 ] ) ) ; IDENT_0 . set ( Calendar . IDENT_7 , java . lang . Integer . METHOD_6 ( split [ 2 ] ) ) ; IDENT_0 . set ( Calendar . IDENT_8 , 0 ) ; IDENT_0 . set ( Calendar . IDENT_9 , 0 ) ; IDENT_0 . set ( Calendar . IDENT_10 , 0 ) ; return IDENT_0 . METHOD_3 ( ) ; }
org . junit . Assert . assertEquals ( IDENT_0 . METHOD_3 ( ) , IDENT_11 ) 