METHOD_0 ( ) { org . sagebionetworks . table . cluster . IDENT_0 query = new org . sagebionetworks . table . cluster . METHOD_1 ( ( ( STRING_0 + ( IDENT_1 ) ) + STRING_1 ) , models ) . build ( ) ; org . mockito . IDENT_2 < java . lang . String > IDENT_3 = org . mockito . IDENT_2 . METHOD_2 ( java . lang . String . class ) ; when ( IDENT_4 . METHOD_3 ( IDENT_3 . METHOD_4 ( ) , METHOD_5 ( java . lang . String . class , java . lang . Object . class ) ) ) . thenReturn ( INT_0 ) ; long count = manager . METHOD_6 ( query , IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( org . sagebionetworks . table . cluster . IDENT_0 , org . sagebionetworks . table . cluster . IDENT_5 ) { try { java . lang . String IDENT_6 = org . sagebionetworks . table . query . util . IDENT_7 . METHOD_7 ( query . METHOD_8 ( ) ) ; java . lang . Long count = IDENT_8 . METHOD_3 ( IDENT_6 , query . METHOD_9 ( ) ) ; org . sagebionetworks . table . query . model . IDENT_9 pagination = query . METHOD_10 ( ) . METHOD_11 ( ) . METHOD_12 ( ) ; if ( pagination != null ) { if ( ( pagination . METHOD_13 ( ) ) != null ) { long IDENT_10 = pagination . METHOD_13 ( ) ; count = java . lang . Math . max ( 0 , ( count - IDENT_10 ) ) ; } if ( ( pagination . METHOD_14 ( ) ) != null ) { long IDENT_11 = pagination . METHOD_14 ( ) ; count = java . lang . Math . min ( IDENT_11 , count ) ; } } return count ; } catch ( org . sagebionetworks . table . query . util . IDENT_12 e ) { return 1L ; } }
org . junit . Assert . assertEquals ( INT_0 , count ) 