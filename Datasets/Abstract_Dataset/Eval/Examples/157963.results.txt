METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . METHOD_1 ( ) . METHOD_2 ( false ) ; final java . lang . String IDENT_2 = STRING_0 ; final java . lang . String repo = STRING_1 ; final long IDENT_3 = INT_0 ; java . util . concurrent . IDENT_4 < com . IDENT_5 . IDENT_6 . model . IDENT_7 > future = IDENT_8 . METHOD_3 ( new java . util . concurrent . IDENT_9 < com . IDENT_5 . IDENT_6 . model . IDENT_7 > ( ) { public com . IDENT_5 . IDENT_6 . model . IDENT_7 call ( ) throws com . IDENT_5 . IDENT_6 . test . Exception { return IDENT_10 . METHOD_4 ( IDENT_2 , repo , IDENT_3 ) ; } } ) ; com . IDENT_5 . IDENT_6 . model . IDENT_7 IDENT_11 = future . get ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String , java . lang . String , long ) { try { return IDENT_12 . METHOD_4 ( IDENT_2 , repository , java . lang . String . valueOf ( IDENT_3 ) ) ; } catch ( java . lang . Exception e ) { throw new com . IDENT_5 . IDENT_6 . service . METHOD_5 ( IDENT_2 , repository , IDENT_3 , e ) ; } }
org . junit . Assert . assertNotNull ( IDENT_11 ) 