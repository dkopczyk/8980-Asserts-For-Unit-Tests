METHOD_0 ( ) { java . lang . String IDENT_0 = java . nio . file . IDENT_1 . METHOD_1 ( STRING_0 ) . toString ( ) ; java . net . URL resource = getClass ( ) . getResource ( STRING_1 ) ; java . lang . String IDENT_2 = java . nio . file . IDENT_3 . get ( resource . METHOD_2 ( ) ) . METHOD_3 ( ) . getAbsolutePath ( ) ; java . lang . String IDENT_4 = IDENT_5 . METHOD_4 ( IDENT_2 , IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String , java . lang . String ) { log . debug ( ( STRING_2 + IDENT_6 ) ) ; java . util . IDENT_2 . IDENT_7 IDENT_8 = new java . util . IDENT_2 . METHOD_5 ( IDENT_6 ) ; java . lang . String IDENT_9 = null ; java . util . IDENT_10 < ? extends java . util . IDENT_2 . IDENT_11 > IDENT_12 = IDENT_8 . METHOD_6 ( ) ; while ( METHOD_6 . METHOD_7 ( ) ) { java . util . IDENT_2 . IDENT_11 entry = METHOD_6 . METHOD_8 ( ) ; java . io . File IDENT_13 = new java . io . File ( IDENT_14 , entry . getName ( ) ) ; log . debug ( ( STRING_3 + ( IDENT_13 . getAbsolutePath ( ) ) ) ) ; if ( entry . METHOD_9 ( ) ) { if ( ! ( IDENT_13 . METHOD_10 ( ) ) ) { throw new java . io . IOException ( ( STRING_4 + IDENT_13 ) ) ; } if ( IDENT_9 == null ) { IDENT_9 = entry . getName ( ) ; } } else if ( ( IDENT_9 != null ) && ( entry . getName ( ) . startsWith ( IDENT_9 ) ) ) { try ( java . io . InputStream in = IDENT_8 . METHOD_11 ( entry ) ; java . io . IDENT_15 out = new java . io . METHOD_12 ( IDENT_13 ) ) { org . apache . commons . io . IDENT_16 . METHOD_13 ( in , out ) ; } } else { log . info ( STRING_5 , entry . getName ( ) ) ; } } log . debug ( ( STRING_6 + IDENT_9 ) ) ; return IDENT_9 ; }
org . junit . Assert . assertEquals ( null , IDENT_4 ) 