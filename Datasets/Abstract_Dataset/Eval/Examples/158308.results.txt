METHOD_0 ( ) { for ( int i = 0 ; i < INT_0 ; i ++ ) { java . lang . String IDENT_0 = service . METHOD_1 ( STRING_0 , 10 ) ; java . lang . String IDENT_1 = service . METHOD_2 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } } METHOD_2 ( java . lang . String ) { org . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_3 ( ) ; if ( ( org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 ) == null ) return null ; try { javax . crypto . IDENT_6 IDENT_7 = javax . crypto . IDENT_6 . getInstance ( STRING_1 ) ; IDENT_7 . init ( IDENT_6 . IDENT_8 , org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 ) ; byte [ ] IDENT_9 = org . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_4 ( IDENT_10 ) ; byte [ ] IDENT_11 = IDENT_7 . METHOD_5 ( IDENT_9 ) ; return new java . lang . String ( IDENT_11 , STRING_2 ) ; } catch ( java . lang . Exception IDENT_12 ) { log . warn ( STRING_3 ) ; } return null ; }
org . junit . Assert . assertEquals ( STRING_0 , IDENT_1 ) 