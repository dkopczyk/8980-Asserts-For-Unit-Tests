METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 . service . IDENT_3 IDENT_4 = IDENT_5 . METHOD_1 ( ) . METHOD_2 ( ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . entity . IDENT_6 IDENT_7 = new com . IDENT_0 . IDENT_1 . IDENT_2 . entity . METHOD_3 ( IDENT_4 . METHOD_4 ( ) , IDENT_4 . METHOD_4 ( ) , STRING_0 , com . IDENT_0 . IDENT_1 . IDENT_2 . service . IDENT_8 . IDENT_9 , STRING_1 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . entity . IDENT_10 IDENT_11 = new com . IDENT_0 . IDENT_1 . IDENT_2 . entity . METHOD_5 ( STRING_2 , STRING_3 ) ; double IDENT_12 = 1 ; long IDENT_13 = ( 5 * INT_0 ) * 1000 ; com . IDENT_0 . IDENT_1 . IDENT_2 . entity . IDENT_14 IDENT_15 = new com . IDENT_0 . IDENT_1 . IDENT_2 . entity . METHOD_6 ( IDENT_7 , com . IDENT_0 . IDENT_1 . IDENT_2 . entity . METHOD_6 . IDENT_16 . IDENT_17 , STRING_4 , IDENT_12 , IDENT_13 ) ; java . util . Map < java . lang . Long , java . lang . Double > IDENT_18 = new java . util . HashMap ( ) ; IDENT_18 . put ( 0L , 1.0 ) ; IDENT_18 . put ( ( ( 2 * INT_0 ) * INT_1 ) , 0.0 ) ; IDENT_18 . put ( IDENT_13 , 1.0 ) ; IDENT_11 . METHOD_7 ( IDENT_18 ) ; java . lang . Long IDENT_19 = IDENT_20 . METHOD_8 ( IDENT_15 , IDENT_11 , IDENT_7 . METHOD_9 ( ) , 1L ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( ) { return expression ; }
org . junit . Assert . assertNull ( IDENT_19 ) 