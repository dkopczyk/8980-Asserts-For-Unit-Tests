METHOD_0 ( ) { try ( com . IDENT_0 . IDENT_1 . IDENT_2 . sdk . IDENT_3 IDENT_4 = new com . IDENT_0 . IDENT_1 . IDENT_2 . sdk . METHOD_1 ( METHOD_2 ( STRING_0 ) ) ) { com . IDENT_0 . IDENT_1 . IDENT_2 . sdk . IDENT_5 IDENT_6 = IDENT_4 . METHOD_3 ( ) ; java . util . List < com . IDENT_0 . IDENT_1 . IDENT_2 . sdk . entity . IDENT_7 > metrics = java . util . Arrays . asList ( new com . IDENT_0 . IDENT_1 . IDENT_2 . sdk . entity . IDENT_7 [ ] { METHOD_4 ( ) } ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . sdk . METHOD_1 . IDENT_8 result = IDENT_6 . METHOD_5 ( metrics ) ; "<AssertPlaceHolder>" ; } } METHOD_6 ( java . util . List , int ) { java . lang . String IDENT_9 = java . lang . Integer . toString ( IDENT_10 ) ; java . lang . String IDENT_11 = java . lang . Integer . toString ( ( ( metrics . size ( ) ) - IDENT_10 ) ) ; java . util . List < java . lang . String > IDENT_12 = new java . util . METHOD_7 ( ) ; if ( IDENT_10 > 0 ) { IDENT_12 . add ( IDENT_9 ) ; } return new com . IDENT_0 . IDENT_1 . IDENT_2 . sdk . METHOD_1 . METHOD_8 ( IDENT_11 , IDENT_9 , IDENT_12 ) ; }
org . junit . Assert . assertEquals ( METHOD_6 ( metrics , 0 ) , result ) 