METHOD_0 ( ) { final byte [ ] data = new byte [ ] { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 } ; final java . nio . IDENT_0 . IDENT_1 c = METHOD_1 ( new java . io . ByteArrayInputStream ( data ) ) ; final com . IDENT_2 . IDENT_3 . internal . util . IDENT_4 b = new com . IDENT_2 . IDENT_3 . internal . util . METHOD_2 ( c , 2 , 4 ) ; final byte [ ] IDENT_5 = new byte [ 2 ] ; b . write ( new com . IDENT_2 . IDENT_3 . internal . util . IDENT_6 . METHOD_3 ( ) { int i = 0 ; @ com . IDENT_2 . IDENT_3 . internal . util . Override public int write ( java . nio . ByteBuffer IDENT_7 ) throws java . io . IOException { IDENT_5 [ ( ( this . i ) ++ ) ] = IDENT_7 . get ( ) ; return 1 ; } } ) ; "<AssertPlaceHolder>" ; } write ( java . nio . IDENT_0 . IDENT_8 ) { write ( channel , 0 , this . length ) ; }
org . junit . Assert . assertArrayEquals ( new byte [ ] { 0 , 1 } , IDENT_5 ) 