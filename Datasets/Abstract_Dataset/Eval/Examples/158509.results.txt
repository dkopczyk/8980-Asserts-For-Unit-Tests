METHOD_0 ( java . net . URL ) { com . IDENT_0 . javax . rs . validation . Person person = new com . IDENT_0 . javax . rs . validation . Person ( ) ; person . setId ( 20 ) ; person . setName ( STRING_0 ) ; javax . ws . rs . core . IDENT_1 IDENT_2 = new javax . ws . rs . core . METHOD_1 ( ) ; IDENT_2 . param ( STRING_1 , java . lang . String . valueOf ( person . getId ( ) ) ) ; IDENT_2 . param ( "name" , person . getName ( ) ) ; javax . ws . rs . client . IDENT_3 client = javax . ws . rs . client . IDENT_4 . METHOD_2 ( ) . METHOD_3 ( org . glassfish . jersey . IDENT_5 . IDENT_6 . class ) . property ( IDENT_7 . IDENT_8 , true ) . build ( ) ; javax . ws . rs . core . Response response = client . target ( ( IDENT_9 + STRING_2 ) ) . request ( IDENT_10 . IDENT_11 ) . METHOD_4 ( javax . ws . rs . client . Entity . entity ( IDENT_2 , IDENT_10 . IDENT_12 ) ) ; response . METHOD_5 ( ) ; METHOD_6 ( STRING_3 , response , javax . json . IDENT_13 . class ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( java . lang . String , javax . ws . rs . core . Response , java . lang . Class ) { java . lang . StringBuilder builder = new java . lang . StringBuilder ( method ) . append ( "\n" ) ; builder . append ( STRING_4 ) . append ( response ) . append ( "\n" ) ; builder . append ( STRING_5 ) ; if ( IDENT_10 . IDENT_14 . equals ( response . METHOD_7 ( ) ) ) { builder . append ( response . METHOD_8 ( type ) ) ; } builder . append ( "\n" ) ; com . IDENT_0 . javax . rs . validation . IDENT_15 . LOGGER . info ( builder . toString ( ) ) ; }
org . junit . Assert . assertEquals ( person , response . METHOD_8 ( com . IDENT_0 . javax . rs . validation . Person . class ) ) 