METHOD_0 ( ) { int IDENT_0 = 10 ; com . IDENT_1 . IDENT_2 . IDENT_3 . logging . common . converter . IDENT_4 IDENT_5 = new com . IDENT_1 . IDENT_2 . IDENT_3 . logging . common . converter . METHOD_1 ( IDENT_6 ) ; java . util . List < java . lang . String > IDENT_7 = IDENT_5 . METHOD_2 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( int ) { int size = 0 ; int i = ( IDENT_6 . size ( ) ) - 1 ; while ( ( size < IDENT_8 ) && ( i >= 0 ) ) { size += IDENT_6 . get ( i ) . length ( ) ; i OP_0 ; } return IDENT_6 . METHOD_3 ( ( i + 2 ) , IDENT_6 . size ( ) ) ; }
org . junit . Assert . assertThat ( IDENT_7 . size ( ) , org . hamcrest . Matchers . equalTo ( 0 ) ) 