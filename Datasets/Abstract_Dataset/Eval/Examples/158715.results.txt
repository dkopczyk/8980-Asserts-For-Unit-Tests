METHOD_0 ( ) { com . IDENT_0 . core . IDENT_1 . processor . core . jpa . IDENT_2 . data . IDENT_3 IDENT_4 = new com . IDENT_0 . core . IDENT_1 . processor . core . jpa . IDENT_2 . data . METHOD_1 ( ) ; com . IDENT_0 . core . IDENT_1 . api . IDENT_5 . IDENT_6 IDENT_7 = org . easymock . EasyMock . METHOD_2 ( com . IDENT_0 . core . IDENT_1 . api . IDENT_5 . IDENT_6 . class ) ; java . lang . Object map ; try { map = IDENT_4 . METHOD_3 ( null , IDENT_7 ) ; "<AssertPlaceHolder>" ; } catch ( com . IDENT_0 . core . IDENT_1 . processor . api . jpa . exception . IDENT_8 e ) { org . junit . Assert . fail ( ( ( ( com . IDENT_0 . core . IDENT_1 . processor . core . jpa . common . IDENT_9 . IDENT_10 ) + ( e . getMessage ( ) ) ) + ( com . IDENT_0 . core . IDENT_1 . processor . core . jpa . common . IDENT_9 . IDENT_11 ) ) ) ; } } METHOD_3 ( java . lang . Object , com . IDENT_0 . core . IDENT_1 . api . IDENT_5 . IDENT_6 ) { if ( ( IDENT_12 == null ) || ( IDENT_7 == null ) ) { return null ; } java . lang . String IDENT_13 = IDENT_12 . getClass ( ) . getName ( ) ; if ( ! ( IDENT_14 . containsKey ( IDENT_13 ) ) ) { IDENT_14 . put ( IDENT_13 , METHOD_4 ( IDENT_12 , IDENT_7 , com . IDENT_0 . core . IDENT_1 . processor . core . jpa . IDENT_2 . data . METHOD_1 . IDENT_15 ) ) ; } java . util . HashMap < java . lang . String , java . lang . Object > IDENT_16 = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; java . util . HashMap < java . lang . String , java . lang . reflect . Method > IDENT_17 = IDENT_14 . get ( IDENT_13 ) ; java . util . HashMap < java . lang . String , java . lang . String > IDENT_18 = IDENT_19 . get ( IDENT_13 ) ; try { for ( java . lang . String key : IDENT_17 . METHOD_5 ( ) ) { com . IDENT_0 . core . IDENT_1 . api . IDENT_5 . IDENT_20 property = ( ( com . IDENT_0 . core . IDENT_1 . api . IDENT_5 . IDENT_20 ) ( IDENT_7 . getProperty ( key ) ) ) ; java . lang . reflect . Method method = IDENT_17 . get ( key ) ; java . lang . Object IDENT_21 = null ; if ( method != null ) { IDENT_17 . get ( key ) . METHOD_6 ( true ) ; IDENT_21 = IDENT_17 . get ( key ) . invoke ( IDENT_12 ) ; } if ( property . getType ( ) . METHOD_7 ( ) . equals ( IDENT_22 . IDENT_23 ) ) { IDENT_21 = METHOD_3 ( IDENT_21 , ( ( com . IDENT_0 . core . IDENT_1 . api . IDENT_5 . IDENT_6 ) ( property . getType ( ) ) ) ) ; } IDENT_16 . put ( key , IDENT_21 ) ; } if ( IDENT_18 != null ) { for ( java . lang . String key : IDENT_18 . METHOD_5 ( ) ) { java . lang . String name = IDENT_18 . get ( key ) ; java . lang . String [ ] IDENT_24 = name . split ( STRING_0 ) ; java . lang . Object IDENT_21 = IDENT_12 ; java . lang . reflect . Method method = null ; for ( java . lang . String IDENT_25 : IDENT_24 ) { method = IDENT_21 . getClass ( ) . METHOD_8 ( IDENT_25 , ( ( com . IDENT_0 . core . IDENT_1 . processor . core . jpa . IDENT_2 . data . Class < ? > [ ] ) ( null ) ) ) ; method . METHOD_6 ( true ) ; IDENT_21 = method . invoke ( IDENT_21 ) ; } IDENT_16 . put ( key , IDENT_21 ) ; } } } catch ( com . IDENT_0 . core . IDENT_1 . api . IDENT_5 . IDENT_26 e ) { throw com . IDENT_0 . core . IDENT_1 . processor . api . jpa . exception . IDENT_8 . METHOD_9 ( IDENT_8 . IDENT_27 . METHOD_10 ( e . getMessage ( ) ) , e ) ; } catch ( java . lang . IDENT_28 e ) { throw com . IDENT_0 . core . IDENT_1 . processor . api . jpa . exception . IDENT_8 . METHOD_9 ( IDENT_8 . IDENT_27 . METHOD_10 ( e . getMessage ( ) ) , e ) ; } catch ( java . lang . IDENT_29 e ) { throw com . IDENT_0 . core . IDENT_1 . processor . api . jpa . exception . IDENT_8 . METHOD_9 ( IDENT_8 . IDENT_27 . METHOD_10 ( e . getMessage ( ) ) , e ) ; } catch ( java . lang . IllegalArgumentException e ) { throw com . IDENT_0 . core . IDENT_1 . processor . api . jpa . exception . IDENT_8 . METHOD_9 ( IDENT_8 . IDENT_27 . METHOD_10 ( e . getMessage ( ) ) , e ) ; } catch ( java . lang . IDENT_30 e ) { throw com . IDENT_0 . core . IDENT_1 . processor . api . jpa . exception . IDENT_8 . METHOD_9 ( IDENT_8 . IDENT_27 . METHOD_10 ( e . getMessage ( ) ) , e ) ; } catch ( java . lang . reflect . IDENT_31 e ) { throw com . IDENT_0 . core . IDENT_1 . processor . api . jpa . exception . IDENT_8 . METHOD_9 ( IDENT_8 . IDENT_27 . METHOD_10 ( e . getMessage ( ) ) , e ) ; } return IDENT_16 ; }
org . junit . Assert . assertNull ( map ) 