METHOD_0 ( ) { com . IDENT_0 . core . IDENT_1 . processor . core . jpa . model . IDENT_2 IDENT_3 = new com . IDENT_0 . core . IDENT_1 . processor . core . jpa . model . METHOD_1 ( ) ; com . IDENT_0 . core . IDENT_1 . processor . core . jpa . model . METHOD_1 . IDENT_4 = new com . IDENT_0 . core . IDENT_1 . processor . core . jpa . model . METHOD_1 ( ) ; com . IDENT_0 . core . IDENT_1 . processor . core . jpa . model . METHOD_1 . IDENT_5 = new com . IDENT_0 . core . IDENT_1 . processor . core . jpa . model . METHOD_2 ( IDENT_3 , IDENT_3 , 1 ) ; try { com . IDENT_0 . core . IDENT_1 . processor . core . jpa . model . METHOD_1 . IDENT_5 . METHOD_3 ( ) . build ( ) ; } catch ( com . IDENT_0 . core . IDENT_1 . processor . api . jpa . exception . IDENT_6 e ) { org . junit . Assert . fail ( ( ( ( com . IDENT_0 . core . IDENT_1 . processor . core . jpa . common . IDENT_7 . IDENT_8 ) + ( e . getMessage ( ) ) ) + ( com . IDENT_0 . core . IDENT_1 . processor . core . jpa . common . IDENT_7 . IDENT_9 ) ) ) ; } catch ( com . IDENT_0 . core . IDENT_1 . processor . api . jpa . exception . IDENT_10 e ) { org . junit . Assert . fail ( ( ( ( com . IDENT_0 . core . IDENT_1 . processor . core . jpa . common . IDENT_7 . IDENT_8 ) + ( e . getMessage ( ) ) ) + ( com . IDENT_0 . core . IDENT_1 . processor . core . jpa . common . IDENT_7 . IDENT_9 ) ) ) ; } com . IDENT_0 . core . IDENT_1 . processor . core . jpa . model . METHOD_1 . IDENT_5 . METHOD_4 ( com . IDENT_0 . core . IDENT_1 . processor . core . jpa . model . METHOD_1 . IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { return IDENT_11 ; }
org . junit . Assert . assertTrue ( ( ( com . IDENT_0 . core . IDENT_1 . processor . core . jpa . model . METHOD_1 . IDENT_5 . METHOD_5 ( ) . size ( ) ) > 1 ) ) 