METHOD_0 ( ) { int IDENT_0 = 10 ; for ( int i = 0 ; i < IDENT_0 ; i ++ ) { IDENT_1 . write ( new java . lang . String ( ( STRING_0 + i ) ) . getBytes ( STRING_1 ) , IDENT_2 . IDENT_3 . IDENT_4 ) ; } for ( IDENT_1 . io . api . IDENT_5 location : IDENT_1 . METHOD_1 ( ) ) { IDENT_1 . delete ( location ) ; } int found = 0 ; for ( IDENT_1 . io . api . IDENT_5 IDENT_6 : IDENT_1 . METHOD_1 ( ) ) { found ++ ; } "<AssertPlaceHolder>" ; } METHOD_1 ( ) { java . util . Map . Entry < java . lang . Integer , IDENT_1 . io . api . IDENT_7 > IDENT_8 = IDENT_9 . METHOD_2 ( ) ; if ( METHOD_2 == null ) { return new IDENT_1 . io . api . IDENT_2 . METHOD_3 ( null ) ; } return new IDENT_1 . io . api . IDENT_2 . METHOD_3 ( METHOD_4 ( METHOD_2 . getValue ( ) , IDENT_5 . IDENT_10 , true ) ) ; }
org . junit . Assert . assertEquals ( 0 , found ) 