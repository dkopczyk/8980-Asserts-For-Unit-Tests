METHOD_0 ( ) { org . oscarehr . common . dao . IDENT_0 IDENT_1 = ( ( org . oscarehr . common . dao . IDENT_0 ) ( org . oscarehr . util . IDENT_2 . METHOD_1 ( org . oscarehr . common . dao . IDENT_0 . class ) ) ) ; org . oscarehr . common . model . IDENT_3 IDENT_4 = new org . oscarehr . common . model . METHOD_2 ( ) ; IDENT_4 . METHOD_3 ( 1 ) ; IDENT_4 . METHOD_4 ( new java . util . Date ( ) ) ; org . oscarehr . common . model . IDENT_5 IDENT_6 = new org . oscarehr . common . model . METHOD_5 ( ) ; IDENT_6 . METHOD_3 ( 1 ) ; IDENT_6 . METHOD_6 ( STRING_0 ) ; IDENT_6 . setValue ( STRING_1 ) ; IDENT_6 . METHOD_7 ( 1 ) ; IDENT_1 . METHOD_8 ( IDENT_4 ) ; dao . METHOD_8 ( IDENT_6 ) ; java . math . BigDecimal IDENT_7 = dao . METHOD_9 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( org . oscarehr . common . model . METHOD_2 ) { java . lang . String sql = STRING_2 ; javax . persistence . Query query = IDENT_8 . METHOD_10 ( sql ) ; query . METHOD_11 ( 1 , IDENT_4 . METHOD_12 ( ) ) ; query . METHOD_11 ( 2 , STRING_0 ) ; java . util . List < org . oscarehr . common . model . METHOD_5 > results = query . METHOD_13 ( ) ; java . math . BigDecimal IDENT_9 = null ; if ( ( results . size ( ) ) > 1 ) { org . oscarehr . util . IDENT_10 . METHOD_14 ( ) . warn ( ( STRING_3 + ( IDENT_4 . getId ( ) ) ) ) ; } if ( results . isEmpty ( ) ) { IDENT_9 = new java . math . BigDecimal ( STRING_4 ) ; } else { org . oscarehr . common . model . METHOD_5 IDENT_7 = results . get ( 0 ) ; try { IDENT_9 = new java . math . BigDecimal ( IDENT_7 . getValue ( ) ) ; } catch ( java . lang . IDENT_11 e ) { org . oscarehr . util . IDENT_10 . METHOD_14 ( ) . warn ( ( ( ( STRING_5 + ( IDENT_7 . getValue ( ) ) ) + STRING_6 ) + ( IDENT_4 . getId ( ) ) ) ) ; IDENT_9 = new java . math . BigDecimal ( STRING_4 ) ; } } return IDENT_9 ; }
org . junit . Assert . assertEquals ( new java . math . BigDecimal ( STRING_4 ) , IDENT_7 ) 