METHOD_0 ( ) { java . lang . String tableName = STRING_0 ; METHOD_1 ( tableName ) ; java . lang . String IDENT_0 = java . util . UUID . METHOD_2 ( ) . toString ( ) ; org . apache . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 client = METHOD_3 ( ) ; client . METHOD_4 ( IDENT_0 ) ; int IDENT_6 = INT_0 ; int IDENT_7 = INT_1 ; int IDENT_8 = 100 ; java . util . List < org . apache . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_9 > IDENT_10 = new java . util . ArrayList < org . apache . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_9 > ( ) ; java . util . IDENT_11 random = new java . util . METHOD_5 ( 1 ) ; for ( int i = 0 ; i < IDENT_7 ; i ++ ) { java . lang . String IDENT_12 = java . util . UUID . METHOD_2 ( ) . toString ( ) ; org . apache . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_13 IDENT_14 = org . apache . IDENT_1 . IDENT_2 . util . IDENT_15 . METHOD_6 ( "test" , IDENT_12 , org . apache . IDENT_1 . IDENT_2 . util . IDENT_15 . METHOD_7 ( "test" , "value" ) , org . apache . IDENT_1 . IDENT_2 . util . IDENT_15 . METHOD_7 ( STRING_1 , java . lang . Integer . toString ( random . METHOD_8 ( IDENT_8 ) ) ) , org . apache . IDENT_1 . IDENT_2 . util . IDENT_15 . METHOD_7 ( STRING_2 , "test" ) ) ; org . apache . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_9 IDENT_16 = org . apache . IDENT_1 . IDENT_2 . util . IDENT_15 . METHOD_9 ( tableName , IDENT_12 , IDENT_14 ) ; IDENT_10 . add ( IDENT_16 ) ; if ( ( IDENT_10 . size ( ) ) >= IDENT_6 ) { client . METHOD_10 ( IDENT_0 , IDENT_10 ) ; IDENT_10 . METHOD_11 ( ) ; } } if ( ( IDENT_10 . size ( ) ) > 0 ) { client . METHOD_10 ( IDENT_0 , IDENT_10 ) ; IDENT_10 . METHOD_11 ( ) ; } client . METHOD_12 ( IDENT_0 , true , true ) ; org . apache . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_17 IDENT_18 = client . METHOD_13 ( tableName ) ; "<AssertPlaceHolder>" ; } METHOD_14 ( ) { org . apache . IDENT_1 . lucene . search . IDENT_19 IDENT_20 = METHOD_15 ( false ) ; try { return IDENT_20 . METHOD_16 ( ) . METHOD_17 ( ) ; } finally { if ( IDENT_20 != null ) { IDENT_20 . close ( ) ; } } }
org . junit . Assert . assertEquals ( IDENT_7 , METHOD_13 . METHOD_14 ( ) ) 