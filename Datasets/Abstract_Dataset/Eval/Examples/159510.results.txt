METHOD_0 ( ) { java . lang . Integer IDENT_0 = 10 ; java . lang . String IDENT_1 = STRING_0 ; java . lang . String code = STRING_1 ; boolean IDENT_2 = true ; org . oscarehr . common . model . IDENT_3 IDENT_4 = new org . oscarehr . common . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_5 . METHOD_2 ( IDENT_4 ) ; IDENT_4 . METHOD_3 ( IDENT_0 ) ; IDENT_4 . METHOD_4 ( IDENT_1 ) ; IDENT_4 . METHOD_5 ( code ) ; IDENT_4 . METHOD_6 ( IDENT_2 ) ; org . oscarehr . common . model . METHOD_1 IDENT_6 = new org . oscarehr . common . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_5 . METHOD_2 ( IDENT_6 ) ; IDENT_6 . METHOD_3 ( IDENT_0 ) ; IDENT_6 . METHOD_4 ( IDENT_1 ) ; IDENT_6 . METHOD_5 ( code ) ; IDENT_6 . METHOD_6 ( false ) ; dao . METHOD_7 ( IDENT_4 ) ; dao . METHOD_7 ( IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( java . lang . Integer , java . lang . String , java . lang . String , boolean ) { boolean METHOD_8 = false ; java . lang . String IDENT_7 = STRING_2 ; javax . persistence . Query query = IDENT_8 . METHOD_9 ( IDENT_7 ) ; query . METHOD_10 ( 1 , IDENT_0 ) ; query . METHOD_10 ( 2 , IDENT_1 ) ; query . METHOD_10 ( 3 , code ) ; query . METHOD_10 ( 4 , ( ! IDENT_9 ) ) ; @ org . oscarehr . common . dao . METHOD_11 ( STRING_3 ) java . util . List < org . oscarehr . common . model . METHOD_1 > results = query . METHOD_12 ( ) ; if ( ( results != null ) && ( ( results . size ( ) ) > 0 ) ) { METHOD_8 = true ; } return METHOD_8 ; }
org . junit . Assert . assertTrue ( dao . METHOD_8 ( IDENT_0 , IDENT_1 , code , IDENT_2 ) ) 