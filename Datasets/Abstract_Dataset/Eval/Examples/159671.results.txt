METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; java . lang . String IDENT_2 = STRING_2 ; org . oscarehr . common . model . IDENT_3 IDENT_4 = new org . oscarehr . common . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_5 . METHOD_2 ( IDENT_4 ) ; IDENT_4 . METHOD_3 ( IDENT_1 ) ; IDENT_4 . METHOD_4 ( IDENT_0 ) ; IDENT_4 . METHOD_5 ( STRING_3 ) ; IDENT_4 . METHOD_6 ( new java . util . Date ( ) ) ; IDENT_4 . METHOD_7 ( false ) ; dao . METHOD_8 ( IDENT_4 ) ; org . oscarehr . common . model . METHOD_1 IDENT_6 = new org . oscarehr . common . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_5 . METHOD_2 ( IDENT_6 ) ; IDENT_6 . METHOD_3 ( IDENT_2 ) ; IDENT_6 . METHOD_4 ( IDENT_0 ) ; IDENT_6 . METHOD_5 ( STRING_3 ) ; IDENT_6 . METHOD_6 ( new java . util . Date ( ) ) ; IDENT_6 . METHOD_7 ( false ) ; dao . METHOD_8 ( IDENT_6 ) ; java . util . List < org . oscarehr . common . model . METHOD_1 > IDENT_7 = new java . util . ArrayList < org . oscarehr . common . model . METHOD_1 > ( java . util . Arrays . asList ( IDENT_4 , IDENT_6 ) ) ; java . util . List < org . oscarehr . common . model . METHOD_1 > result = dao . METHOD_9 ( false ) ; org . apache . log4j . IDENT_8 logger = org . oscarehr . util . IDENT_9 . METHOD_10 ( ) ; if ( ( result . size ( ) ) != ( IDENT_7 . size ( ) ) ) { logger . warn ( STRING_4 ) ; org . junit . Assert . fail ( STRING_4 ) ; } for ( int i = 0 ; i < ( IDENT_7 . size ( ) ) ; i ++ ) { if ( ! ( IDENT_7 . get ( i ) . equals ( result . get ( i ) ) ) ) { logger . warn ( STRING_5 ) ; org . junit . Assert . fail ( STRING_5 ) ; } } java . util . List < org . oscarehr . common . model . METHOD_1 > IDENT_10 = dao . METHOD_9 ( true ) ; if ( ( IDENT_10 . size ( ) ) != 0 ) { logger . warn ( STRING_6 ) ; org . junit . Assert . fail ( STRING_6 ) ; } "<AssertPlaceHolder>" ; } size ( ) { return IDENT_11 . size ( ) ; }
org . junit . Assert . assertTrue ( true ) 