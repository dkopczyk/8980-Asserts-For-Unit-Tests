METHOD_0 ( ) { org . apache . IDENT_0 . IDENT_1 . IDENT_2 t = METHOD_1 ( STRING_0 ) ; METHOD_2 ( METHOD_3 ( ) ) ; java . util . List < java . lang . String > expected = METHOD_4 ( ( p ) -> true , METHOD_3 ( ) . METHOD_5 ( 1 , METHOD_3 ( ) . size ( ) ) ) ; int IDENT_3 = ( METHOD_3 ( ) . size ( ) ) - ( expected . size ( ) ) ; java . util . concurrent . atomic . IDENT_4 IDENT_5 = new java . util . concurrent . atomic . METHOD_6 ( ) ; org . apache . IDENT_0 . IDENT_6 . jdbc . IDENT_7 db = new org . apache . IDENT_0 . IDENT_6 . jdbc . METHOD_7 ( t , ( ) -> METHOD_8 ( org . apache . IDENT_0 . test . IDENT_6 . jdbc . IDENT_8 . IDENT_9 ) , ( IDENT_10 ) -> { if ( ( IDENT_5 . METHOD_9 ( ) ) == 1 ) throw new java . sql . METHOD_10 ( STRING_1 ) ; else return connect ( IDENT_10 ) ; } ) ; java . util . concurrent . atomic . METHOD_6 IDENT_11 = new java . util . concurrent . atomic . METHOD_6 ( ) ; org . apache . IDENT_0 . IDENT_1 . IDENT_12 < org . apache . IDENT_0 . test . IDENT_6 . jdbc . IDENT_8 . IDENT_13 > IDENT_14 = t . collection ( METHOD_11 ( ) ) ; org . apache . IDENT_0 . IDENT_1 . IDENT_12 < org . apache . IDENT_0 . test . IDENT_6 . jdbc . IDENT_8 . Person > IDENT_15 = db . METHOD_12 ( IDENT_14 , ( ) -> STRING_2 + STRING_3 , ( tuple , stmt ) -> stmt . METHOD_13 ( 1 , tuple . id ) , ( tuple , IDENT_16 , IDENT_17 , stream ) -> { System . out . println ( ( ( ( ( ( t . getName ( ) ) + STRING_4 2 ) + tuple ) + STRING_5 ) + IDENT_17 ) ) ; if ( IDENT_17 != null ) { IDENT_11 . METHOD_9 ( ) ; return ; } IDENT_16 . next ( ) ; int id = IDENT_16 . METHOD_14 ( STRING_4 0 ) ; java . lang . String IDENT_18 = IDENT_16 . getString ( STRING_6 ) ; java . lang . String IDENT_19 = IDENT_16 . getString ( STRING_7 ) ; java . lang . String IDENT_20 = IDENT_16 . getString ( STRING_4 3 ) ; int IDENT_21 = IDENT_16 . METHOD_14 ( STRING_8 ) ; stream . accept ( new org . apache . IDENT_0 . test . IDENT_6 . jdbc . Person ( id , IDENT_18 , IDENT_19 , IDENT_20 , IDENT_21 ) ) ; } ) ; org . apache . IDENT_0 . IDENT_1 . IDENT_12 < java . lang . String > IDENT_22 = IDENT_15 . map ( ( person ) -> person . toString ( ) ) ; IDENT_22 . METHOD_15 ( ( tuple ) -> System . out . println ( java . lang . String . format ( STRING_9 , t . getName ( ) , tuple ) ) ) ; METHOD_16 ( STRING_4 1 , t , IDENT_22 , org . apache . IDENT_0 . test . IDENT_6 . jdbc . IDENT_8 . IDENT_23 , expected . toArray ( new java . lang . String [ 0 ] ) ) ; "<AssertPlaceHolder>" ; } get ( ) { return new org . apache . IDENT_0 . IDENT_24 . math3 . IDENT_25 . METHOD_17 ( this ) ; }
org . junit . Assert . assertEquals ( STRING_4 , IDENT_3 , IDENT_11 . get ( ) ) 