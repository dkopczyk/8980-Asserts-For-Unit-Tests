METHOD_0 ( ) { final java . lang . String expected = STRING_0 + ( STRING_1 + STRING_2 ) ; final java . lang . String IDENT_0 = IDENT_1 . METHOD_1 ( request ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( com . github . IDENT_2 . core . model . Response ) { if ( ( response . getCode ( ) ) != 200 ) { throw new com . github . IDENT_2 . core . exceptions . METHOD_2 ( ( ( STRING_3 + ( response . getCode ( ) ) ) + STRING_4 ) ) ; } final java . lang . String body = response . METHOD_3 ( ) ; com . github . IDENT_2 . core . utils . IDENT_3 . METHOD_4 ( body , STRING_5 ) ; final java . lang . String IDENT_4 = com . github . IDENT_2 . core . IDENT_5 . IDENT_6 . METHOD_5 ( body , com . github . IDENT_2 . core . IDENT_5 . IDENT_6 . IDENT_7 , true ) ; final java . lang . String IDENT_8 = com . github . IDENT_2 . core . IDENT_5 . IDENT_6 . METHOD_5 ( body , com . github . IDENT_2 . core . IDENT_5 . IDENT_6 . IDENT_9 , false ) ; final java . lang . String IDENT_10 = com . github . IDENT_2 . core . IDENT_5 . IDENT_6 . METHOD_5 ( body , com . github . IDENT_2 . core . IDENT_5 . IDENT_6 . IDENT_11 , false ) ; java . lang . Integer IDENT_12 ; try { IDENT_12 = ( IDENT_10 == null ) ? null : java . lang . Integer . valueOf ( IDENT_10 ) ; } catch ( java . lang . IDENT_13 IDENT_14 ) { IDENT_12 = null ; } final java . lang . String IDENT_15 = com . github . IDENT_2 . core . IDENT_5 . IDENT_6 . METHOD_5 ( body , com . github . IDENT_2 . core . IDENT_5 . IDENT_6 . IDENT_16 , false ) ; final java . lang . String IDENT_17 = com . github . IDENT_2 . core . IDENT_5 . IDENT_6 . METHOD_5 ( body , com . github . IDENT_2 . core . IDENT_5 . IDENT_6 . IDENT_18 , false ) ; return new com . github . IDENT_2 . core . model . METHOD_6 ( IDENT_4 , IDENT_8 , IDENT_12 , IDENT_15 , IDENT_17 , body ) ; }
org . junit . Assert . assertEquals ( expected , IDENT_0 ) 