METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . common . IDENT_2 . IDENT_3 IDENT_4 = new org . IDENT_0 . IDENT_1 . common . IDENT_2 . METHOD_1 ( 3 ) ; METHOD_2 ( IDENT_4 , STRING_0 ) ; METHOD_2 ( IDENT_4 , STRING_1 ) ; METHOD_2 ( IDENT_4 , STRING_2 ) ; long IDENT_5 = IDENT_4 . METHOD_3 ( 0 ) . get ( 2 ) . index ( ) ; java . util . List < org . IDENT_0 . IDENT_1 . common . METHOD_2 . IDENT_6 > IDENT_7 = IDENT_4 . METHOD_3 ( ( IDENT_5 + 10 ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( long ) { if ( IDENT_8 <= 0 ) { return messages ; } int index = METHOD_4 ( messages , new org . IDENT_0 . IDENT_1 . common . METHOD_2 . METHOD_5 ( org . IDENT_9 . util . IDENT_10 . now ( ) , IDENT_8 , org . IDENT_0 . IDENT_1 . common . METHOD_2 . IDENT_11 . IDENT_12 , null ) ) ; int position = java . lang . Math . METHOD_6 ( ( index + 1 ) ) ; if ( position >= ( messages . size ( ) ) ) { return org . IDENT_0 . IDENT_1 . common . METHOD_2 . Collections . emptyList ( ) ; } return messages . METHOD_7 ( position , messages . size ( ) ) ; }
org . junit . Assert . assertThat ( IDENT_7 . size ( ) , org . hamcrest . CoreMatchers . is ( 0 ) ) 