METHOD_0 ( ) { long IDENT_0 = org . IDENT_1 . util . IDENT_2 . now ( ) . METHOD_1 ( ) ; org . IDENT_3 . IDENT_4 . IDENT_5 . domain . IDENT_6 IDENT_7 = new org . IDENT_3 . IDENT_4 . IDENT_5 . domain . METHOD_2 ( STRING_0 , STRING_1 , STRING_2 , STRING_3 , IDENT_0 , "1" , null , 0L ) ; org . IDENT_3 . IDENT_4 . IDENT_5 . domain . METHOD_2 IDENT_8 = new org . IDENT_3 . IDENT_4 . IDENT_5 . domain . METHOD_2 ( STRING_4 , STRING_5 , STRING_2 , STRING_6 , ( IDENT_0 + 1 ) , "1" , null , 1L ) ; when ( IDENT_9 . METHOD_3 ( 0 , 2 ) ) . thenReturn ( asList ( IDENT_7 , IDENT_8 ) ) ; java . util . List < org . IDENT_3 . IDENT_4 . IDENT_5 . domain . METHOD_2 > IDENT_10 = IDENT_11 . METHOD_4 ( 0L , 2 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . Long , java . lang . Integer ) { return METHOD_3 . METHOD_3 ( version , IDENT_12 ) ; }
org . junit . Assert . assertEquals ( asList ( IDENT_7 , IDENT_8 ) , IDENT_10 ) 