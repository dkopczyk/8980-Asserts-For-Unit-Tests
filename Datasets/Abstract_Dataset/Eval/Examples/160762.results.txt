METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . service . IDENT_2 . IDENT_3 IDENT_4 = new org . IDENT_0 . IDENT_1 . service . IDENT_2 . METHOD_1 ( asList ( new org . IDENT_0 . IDENT_1 . service . IDENT_2 . METHOD_2 ( STRING_0 , asList ( new org . IDENT_0 . IDENT_1 . service . IDENT_2 . METHOD_3 ( STRING_1 ) ) ) , new org . IDENT_0 . IDENT_1 . service . IDENT_2 . METHOD_2 ( STRING_2 , asList ( new org . IDENT_0 . IDENT_1 . service . IDENT_2 . METHOD_3 ( STRING_3 ) ) ) ) ) ; java . util . List < org . IDENT_0 . IDENT_1 . service . IDENT_2 . METHOD_3 > IDENT_5 = IDENT_4 . METHOD_4 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String ) { try { org . IDENT_0 . IDENT_1 . service . IDENT_2 . IDENT_6 IDENT_7 = METHOD_5 ( IDENT_8 , METHOD_6 ( METHOD_7 ( org . IDENT_0 . IDENT_1 . service . IDENT_2 . IDENT_6 . class ) . METHOD_8 ( ) , org . hamcrest . Matchers . equalTo ( IDENT_9 ) ) ) ; return IDENT_7 == null ? new java . util . ArrayList < org . IDENT_0 . IDENT_1 . service . IDENT_2 . IDENT_10 > ( ) : IDENT_7 . METHOD_9 ( ) ; } catch ( ch . IDENT_11 . util . IDENT_12 e ) { org . IDENT_0 . IDENT_1 . service . IDENT_2 . IDENT_13 . logger . error ( ( STRING_4 + IDENT_9 ) ) ; throw e ; } }
org . junit . Assert . assertEquals ( asList ( new org . IDENT_0 . IDENT_1 . service . IDENT_2 . METHOD_3 ( STRING_1 ) ) , METHOD_9 ) 