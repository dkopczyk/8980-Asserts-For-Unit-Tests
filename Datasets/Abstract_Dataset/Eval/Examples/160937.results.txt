METHOD_0 ( ) { try { IDENT_0 . METHOD_1 ( new org . IDENT_1 . selenium . IDENT_2 . internal . METHOD_2 ( ) { public org . IDENT_1 . selenium . IDENT_2 . IDENT_3 execute ( ) { throw new java . lang . METHOD_3 ( STRING_0 ) ; } } , null , org . IDENT_1 . selenium . IDENT_2 . internal . Context . METHOD_4 ( null , STRING_1 ) , true ) ; org . junit . Assert . fail ( STRING_2 ) ; } catch ( java . lang . METHOD_3 e ) { "<AssertPlaceHolder>" ; } } getMessage ( ) { java . lang . String message = "" ; if ( ( IDENT_4 ) > 0 ) { message = ( ( message + STRING_3 ) + ( IDENT_4 ) ) + STRING_4 ; } return ( super . getMessage ( ) ) + message ; }
org . junit . Assert . assertThat ( e . getMessage ( ) , org . hamcrest . CoreMatchers . equalTo ( STRING_0 ) ) 