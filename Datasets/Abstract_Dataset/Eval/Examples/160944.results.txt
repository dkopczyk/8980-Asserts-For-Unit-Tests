METHOD_0 ( ) { long start = java . lang . System . currentTimeMillis ( ) ; final int [ ] time = new int [ 1 ] ; com . IDENT_0 . selenium . condition . IDENT_1 IDENT_2 = new com . IDENT_0 . selenium . condition . METHOD_1 ( null , 0 , 100 , INT_0 ) ; try { IDENT_2 . METHOD_2 ( new com . IDENT_0 . selenium . condition . METHOD_3 ( ) { @ com . IDENT_0 . selenium . condition . Override public boolean METHOD_4 ( com . IDENT_0 . selenium . condition . IDENT_3 . Context runner ) { return ( ( time [ 0 ] ) ++ ) == INT_1 ; } } ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . lang . IDENT_4 expected ) { long l = ( java . lang . System . currentTimeMillis ( ) ) - start ; "<AssertPlaceHolder>" ; } } fail ( java . lang . String ) { throw new java . lang . METHOD_5 ( message ) ; }
org . junit . Assert . assertTrue ( ( l >= INT_0 ) ) 