METHOD_0 ( ) { com . IDENT_0 . IDENT_1 IDENT_2 = new com . IDENT_0 . METHOD_1 ( STRING_0 , true ) ; IDENT_2 . METHOD_2 ( STRING_1 ) ; IDENT_2 . METHOD_3 ( STRING_2 2 , STRING_3 ) ; com . IDENT_0 . IDENT_3 request = new com . IDENT_0 . METHOD_4 ( ) ; request . METHOD_5 ( Method . IDENT_4 ) ; request . METHOD_6 ( STRING_4 ) ; request . METHOD_7 ( STRING_5 , STRING_6 ) ; request . METHOD_7 ( STRING_7 , STRING_2 1 ) ; request . METHOD_7 ( STRING_8 , STRING_6 ) ; request . METHOD_7 ( STRING_2 3 , STRING_2 1 ) ; request . METHOD_7 ( STRING_9 , STRING_6 ) ; request . METHOD_7 ( STRING_2 , STRING_2 0 ) ; com . IDENT_0 . Response response = IDENT_2 . api ( request ) ; "<AssertPlaceHolder>" ; } api ( com . IDENT_0 . METHOD_4 ) { com . IDENT_0 . METHOD_4 req = new com . IDENT_0 . METHOD_4 ( ) ; req . METHOD_5 ( request . METHOD_8 ( ) ) ; req . METHOD_9 ( this . host ) ; req . METHOD_6 ( ( ( ( "/" + ( version ) ) + "/" ) + ( request . METHOD_10 ( ) ) ) ) ; req . METHOD_11 ( request . METHOD_12 ( ) ) ; for ( Map . Entry < java . lang . String , java . lang . String > header : this . IDENT_5 . entrySet ( ) ) { req . METHOD_13 ( header . getKey ( ) , header . getValue ( ) ) ; } for ( Map . Entry < java . lang . String , java . lang . String > IDENT_6 : request . METHOD_14 ( ) . entrySet ( ) ) { req . METHOD_7 ( IDENT_6 . getKey ( ) , IDENT_6 . getValue ( ) ) ; } return METHOD_15 ( req ) ; }
org . junit . Assert . assertEquals ( 200 , response . getStatusCode ( ) ) 