METHOD_0 ( ) { request . METHOD_1 ( STRING_0 ) ; service . METHOD_2 ( new au . com . IDENT_0 . IDENT_1 . model . METHOD_3 ( request ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( au . com . IDENT_0 . IDENT_1 . model . METHOD_3 ) { au . com . IDENT_0 . IDENT_1 . service . model . IDENT_2 pattern = new au . com . IDENT_0 . IDENT_1 . service . model . METHOD_5 ( filter ) ; java . util . List < au . com . IDENT_0 . IDENT_1 . model . METHOD_3 > result = new java . util . ArrayList < au . com . IDENT_0 . IDENT_1 . model . METHOD_3 > ( ) ; for ( au . com . IDENT_0 . IDENT_1 . model . METHOD_3 request : IDENT_3 ) { if ( pattern . match ( request ) . matches ( ) ) { result . add ( request ) ; } } return result ; }
org . junit . Assert . assertEquals ( 1 , service . METHOD_4 ( new au . com . IDENT_0 . IDENT_1 . model . METHOD_3 ( ) ) . size ( ) ) 