METHOD_0 ( ) { final long count = INT_0 ; final java . util . List < org . IDENT_0 . web . catalog . domain . IDENT_1 > resources = METHOD_1 ( IDENT_2 , count ) ; final java . lang . String IDENT_3 = STRING_0 ; when ( IDENT_4 . METHOD_2 ( eq ( org . IDENT_0 . web . catalog . domain . IDENT_1 . class ) ) ) . thenReturn ( IDENT_3 ) ; when ( IDENT_4 . count ( any ( org . springframework . data . mongodb . core . query . Query . class ) , eq ( org . IDENT_0 . web . catalog . domain . IDENT_1 . class ) ) ) . thenReturn ( count ) ; when ( IDENT_4 . find ( any ( org . springframework . data . mongodb . core . query . Query . class ) , eq ( org . IDENT_0 . web . catalog . domain . IDENT_1 . class ) , eq ( IDENT_3 ) ) ) . thenReturn ( resources . METHOD_3 ( 0 , 100 ) ) . thenReturn ( resources . METHOD_3 ( 100 , INT_1 ) ) ; service . METHOD_4 ( ) ; final boolean IDENT_5 = ( ( java . lang . Boolean ) ( org . springframework . test . util . IDENT_6 . METHOD_5 ( service , STRING_1 ) ) ) ; "<AssertPlaceHolder>" ; verify ( IDENT_4 ) . count ( any ( org . springframework . data . mongodb . core . query . Query . class ) , eq ( org . IDENT_0 . web . catalog . domain . IDENT_1 . class ) ) ; verify ( IDENT_7 , times ( 2 ) ) . METHOD_6 ( any ( org . IDENT_0 . web . catalog . domain . IDENT_8 . class ) ) ; verify ( IDENT_4 , times ( 2 ) ) . METHOD_7 ( any ( org . springframework . data . mongodb . core . query . Query . class ) , any ( org . springframework . data . mongodb . core . query . IDENT_9 . class ) , eq ( IDENT_2 . getClass ( ) ) ) ; } METHOD_4 ( ) { if ( IDENT_5 ) { org . IDENT_0 . web . catalog . admin . service . impl . IDENT_10 . LOGGER . warn ( STRING_2 ) ; return ; } try { final long IDENT_11 = java . lang . System . currentTimeMillis ( ) ; IDENT_5 = true ; final int IDENT_12 = METHOD_8 ( org . IDENT_0 . web . catalog . domain . IDENT_1 . class , STRING_3 , STRING_4 , STRING_5 ) ; if ( IDENT_12 > 0 ) { org . IDENT_0 . web . catalog . admin . service . impl . IDENT_10 . LOGGER . info ( STRING_6 , IDENT_12 , ( ( java . lang . System . currentTimeMillis ( ) ) - IDENT_11 ) ) ; } } catch ( final java . lang . Exception e ) { org . IDENT_0 . web . catalog . admin . service . impl . IDENT_10 . LOGGER . error ( STRING_7 , e . getMessage ( ) , e ) ; } finally { IDENT_5 = false ; } }
org . junit . Assert . assertFalse ( IDENT_5 ) 