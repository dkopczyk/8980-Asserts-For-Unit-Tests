METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . api . IDENT_3 IDENT_4 = org . IDENT_0 . IDENT_1 . IDENT_2 . api . IDENT_5 . METHOD_1 ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . api . IDENT_6 IDENT_7 = org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . IDENT_8 . METHOD_2 ( IDENT_4 ) ; java . lang . String IDENT_9 ; if ( ( IDENT_7 . METHOD_3 ( ) ) == ( IDENT_6 . IDENT_10 . IDENT_11 ) ) { IDENT_9 = STRING_0 ; } else { IDENT_9 = STRING_1 ; } org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . IDENT_12 IDENT_13 = org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . IDENT_14 . METHOD_4 ( IDENT_4 , IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . IDENT_0 . IDENT_1 . IDENT_2 . api . IDENT_3 , java . lang . String ) { MOD_0 ( org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . IDENT_14 . hash ) { org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . IDENT_12 . IDENT_15 key = new org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . IDENT_12 . METHOD_5 ( IDENT_4 , id ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . IDENT_16 IDENT_17 = org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . IDENT_14 . hash . get ( key ) ; if ( IDENT_17 != null ) { return new org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . METHOD_6 ( IDENT_17 ) ; } java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . IDENT_16 > IDENT_18 = org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . IDENT_14 . IDENT_19 . get ( id ) ; if ( IDENT_18 == null ) { throw new java . lang . IllegalArgumentException ( STRING_2 ) ; } org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_20 IDENT_21 = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_20 . METHOD_7 ( ) ; for ( org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . IDENT_16 p : IDENT_18 ) { org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . METHOD_6 t = new org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . METHOD_6 ( p ) ; java . util . List < java . lang . String > IDENT_22 = p . METHOD_8 ( ) ; if ( ( IDENT_22 == null ) || ( IDENT_22 . isEmpty ( ) ) ) { return t ; } for ( java . lang . String command : IDENT_22 ) { try { if ( command . contains ( STRING_3 ) ) { java . lang . String IDENT_23 = IDENT_21 . METHOD_9 ( t , IDENT_4 ) ; if ( IDENT_23 == null ) { return null ; } command = command . replaceAll ( STRING_4 , IDENT_23 ) ; } org . IDENT_0 . IDENT_1 . IDENT_2 . api . IDENT_24 IDENT_25 = org . IDENT_0 . IDENT_1 . IDENT_2 . api . IDENT_24 . METHOD_10 ( IDENT_4 ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . api . IDENT_6 IDENT_26 = org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . IDENT_8 . METHOD_2 ( IDENT_4 ) ; IDENT_25 . METHOD_11 ( IDENT_26 . METHOD_12 ( ) ) . METHOD_13 ( STRING_5 , command ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . IDENT_27 . IDENT_28 res = org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . IDENT_27 . execute ( IDENT_25 ) ; if ( res . METHOD_14 ( ) ) { org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . IDENT_14 . hash . put ( key , p ) ; return t ; } } catch ( java . io . IOException ex ) { } catch ( org . IDENT_0 . IDENT_1 . IDENT_2 . api . util . IDENT_29 . IDENT_30 ex ) { return null ; } } } return null ; } }
org . junit . Assert . assertNotNull ( IDENT_13 ) 