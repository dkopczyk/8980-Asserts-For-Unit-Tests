METHOD_0 ( ) { java . lang . String str = "" ; int IDENT_0 = 0 ; int count = 0 ; int actual = org . IDENT_1 . core . filter . impl . IDENT_2 . METHOD_1 ( str , IDENT_0 , count ) ; int expected = 0 ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , int , int ) { org . IDENT_1 . core . util . IDENT_3 . METHOD_2 ( STRING_0 ) . METHOD_3 ( IDENT_0 , 0 ) ; org . IDENT_1 . core . util . IDENT_3 . METHOD_2 ( STRING_1 ) . METHOD_3 ( count , 0 ) ; java . lang . IDENT_4 IDENT_5 = null ; if ( IDENT_0 > 0 ) { int IDENT_6 = IDENT_0 - 1 ; IDENT_5 = str . charAt ( IDENT_6 ) ; if ( IDENT_5 == STRING_2 ) { return org . IDENT_1 . core . filter . impl . IDENT_2 . METHOD_1 ( str , IDENT_6 , ( count + 1 ) ) ; } else { return count ; } } return count ; }
org . junit . Assert . assertThat ( actual , is ( equalTo ( expected ) ) ) 