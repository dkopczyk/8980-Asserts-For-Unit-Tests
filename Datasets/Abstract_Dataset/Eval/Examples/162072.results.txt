METHOD_0 ( ) { java . lang . String IDENT_0 = org . IDENT_1 . core . util . IDENT_2 . METHOD_1 ( org . IDENT_1 . core . util . IDENT_3 . getResourceAsStream ( STRING_0 ) ) ; java . lang . String IDENT_4 = org . IDENT_1 . core . util . IDENT_3 . METHOD_2 ( org . IDENT_1 . core . util . IDENT_3 . getResourceAsStream ( STRING_0 ) , IDENT_0 ) ; org . IDENT_1 . core . meta . IDENT_5 IDENT_6 = IDENT_7 . METHOD_3 ( IDENT_4 ) ; target . METHOD_4 ( IDENT_6 ) ; java . lang . String actual = target . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { java . lang . StringBuilder buf = new java . lang . StringBuilder ( ) ; if ( ( ( IDENT_6 . IDENT_8 ) != null ) && ( ( IDENT_6 . IDENT_8 . trim ( ) . length ( ) ) > 0 ) ) { buf . append ( STRING_1 ) ; buf . append ( IDENT_6 . IDENT_8 ) ; buf . append ( STRING_2 ) ; IDENT_9 . METHOD_6 ( buf ) ; IDENT_9 . METHOD_6 ( buf ) ; } for ( java . lang . String IDENT_10 : IDENT_6 . IDENT_11 ) { if ( ( IDENT_10 != null ) && ( ( IDENT_10 . trim ( ) . length ( ) ) > 0 ) ) { buf . append ( STRING_1 0 ) ; buf . append ( IDENT_10 ) ; buf . append ( STRING_2 ) ; IDENT_9 . METHOD_6 ( buf ) ; } } if ( ( ( config . IDENT_12 ) != null ) && ( ( config . IDENT_12 . trim ( ) . length ( ) ) > 0 ) ) { if ( ( ( config . IDENT_13 ) == ( org . IDENT_1 . core . config . IDENT_14 . IDENT_15 ) ) || ( ! ( config . IDENT_12 . equals ( STRING_3 ) ) ) ) { buf . append ( STRING_1 0 ) ; buf . append ( config . IDENT_12 ) ; buf . append ( STRING_2 ) ; IDENT_9 . METHOD_6 ( buf ) ; IDENT_9 . METHOD_6 ( buf ) ; } } else { IDENT_9 . METHOD_6 ( buf ) ; } buf . append ( STRING_4 ) ; buf . append ( IDENT_6 . name ) ; buf . append ( STRING_5 ) ; if ( ( ( config . IDENT_12 ) != null ) && ( ( config . IDENT_12 . trim ( ) . length ( ) ) > 0 ) ) { if ( ( ( config . IDENT_13 ) == ( org . IDENT_1 . core . config . IDENT_14 . IDENT_15 ) ) || ( ! ( config . IDENT_12 . equals ( STRING_3 ) ) ) ) { buf . append ( STRING_6 ) ; java . lang . String [ ] IDENT_16 = config . IDENT_12 . split ( STRING_7 ) ; buf . append ( IDENT_16 [ ( ( IDENT_16 . length ) - 1 ) ] ) ; buf . append ( " " ) ; } } buf . append ( STRING_8 ) ; IDENT_9 . METHOD_6 ( buf ) ; IDENT_9 . METHOD_6 ( buf ) ; buf . append ( STRING_9 ) ; IDENT_9 . METHOD_6 ( buf ) ; return METHOD_7 ( buf . toString ( ) ) ; }
org . junit . Assert . assertNotNull ( actual ) 