METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; org . IDENT_1 . core . meta . IDENT_2 IDENT_3 = IDENT_4 . METHOD_1 ( IDENT_0 ) ; target . METHOD_2 ( IDENT_3 ) ; java . lang . String IDENT_5 = STRING_1 ; java . lang . String actual = target . METHOD_3 ( IDENT_5 ) ; java . lang . String expected = STRING_2 ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String ) { java . lang . String IDENT_6 = IDENT_5 ; java . lang . StringBuilder buf = new java . lang . StringBuilder ( ) ; java . util . List < org . IDENT_1 . core . meta . IDENT_7 > IDENT_8 = METHOD_4 ( IDENT_5 ) ; if ( ( IDENT_8 . size ( ) ) == 0 ) { return IDENT_6 ; } for ( org . IDENT_1 . core . meta . IDENT_7 IDENT_9 : IDENT_8 ) { buf . append ( IDENT_10 . METHOD_5 ( IDENT_9 ) ) ; buf . append ( IDENT_11 . IDENT_12 ) ; buf . append ( IDENT_11 . IDENT_13 ) ; if ( ( IDENT_9 . IDENT_14 ) != null ) { for ( java . lang . String IDENT_15 : IDENT_9 . IDENT_14 . IDENT_16 . IDENT_17 ) { IDENT_3 . IDENT_18 . add ( IDENT_15 ) ; } } if ( ( IDENT_9 . IDENT_19 ) != null ) { for ( java . lang . String IDENT_15 : IDENT_9 . IDENT_19 . IDENT_17 ) { IDENT_3 . IDENT_18 . add ( IDENT_15 ) ; } } } IDENT_6 = IDENT_6 . METHOD_6 ( STRING_3 , "" ) ; java . lang . String IDENT_20 = buf . toString ( ) ; IDENT_6 += IDENT_20 + STRING_4 ; IDENT_6 = METHOD_7 ( IDENT_6 , IDENT_3 , config ) ; return IDENT_6 ; }
org . junit . Assert . assertEquals ( expected , actual ) 