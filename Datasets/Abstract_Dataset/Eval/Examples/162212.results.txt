METHOD_0 ( ) { java . util . List < com . IDENT_0 . domain . model . IDENT_1 > ret = IDENT_2 . METHOD_1 ( IDENT_3 , IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( com . IDENT_0 . domain . model . IDENT_5 , java . util . List ) { if ( ( IDENT_6 == null ) || ( IDENT_6 . isEmpty ( ) ) ) { return IDENT_6 ; } com . IDENT_0 . domain . model . IDENT_7 IDENT_8 = new com . IDENT_0 . domain . model . METHOD_2 ( ) ; IDENT_8 . METHOD_3 ( IDENT_3 . getId ( ) ) ; java . util . List < com . IDENT_0 . domain . model . METHOD_2 > IDENT_9 = IDENT_10 . METHOD_4 ( new com . IDENT_0 . domain . mapper . model . METHOD_5 ( IDENT_8 ) ) ; java . util . List < com . IDENT_0 . domain . model . IDENT_1 > ret = com . google . common . collect . Lists . newArrayList ( com . google . common . collect . IDENT_11 . filter ( IDENT_6 , new com . IDENT_0 . service . IDENT_12 . function . METHOD_6 ( IDENT_9 ) ) ) ; for ( com . IDENT_0 . domain . model . IDENT_1 project : ret ) { METHOD_7 ( IDENT_3 . getId ( ) , project . getId ( ) ) ; } return ret ; }
org . junit . Assert . assertSame ( ret , IDENT_4 ) 