METHOD_0 ( ) { java . util . List < com . IDENT_0 . domain . model . IDENT_1 > list = IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_4 , IDENT_3 . start , IDENT_3 . IDENT_5 ) ; verify ( IDENT_6 ) . METHOD_2 ( com . IDENT_0 . service . IDENT_7 . impl . test . Mockito . METHOD_3 ( new com . IDENT_0 . test . IDENT_8 . IDENT_9 < com . IDENT_0 . domain . mapper . model . IDENT_10 > ( ) { @ com . IDENT_0 . service . IDENT_7 . impl . test . Override public boolean matches ( com . IDENT_0 . domain . mapper . model . common . IDENT_11 example ) { return ( ( ( ( ( com . IDENT_0 . test . IDENT_8 . IDENT_12 . METHOD_4 ( example , STRING_0 , IDENT_3 . IDENT_4 ) ) && ( com . IDENT_0 . test . IDENT_8 . IDENT_12 . METHOD_4 ( example , STRING_1 , false ) ) ) && ( com . IDENT_0 . test . IDENT_8 . IDENT_12 . METHOD_5 ( example , IDENT_3 . start ) ) ) && ( com . IDENT_0 . test . IDENT_8 . IDENT_12 . METHOD_6 ( example , IDENT_3 . IDENT_5 ) ) ) && ( com . IDENT_0 . test . IDENT_8 . IDENT_12 . METHOD_7 ( example , STRING_2 , 0 ) ) ) && ( com . IDENT_0 . test . IDENT_8 . IDENT_12 . METHOD_8 ( example , STRING_3 ) ) ; } } ) ) ; "<AssertPlaceHolder>" ; METHOD_9 ( list . get ( 0 ) ) ; } METHOD_8 ( com . IDENT_0 . domain . mapper . model . common . IDENT_11 , java . lang . String ) { return IDENT_13 . equals ( IDENT_14 . METHOD_10 ( ) ) ; }
org . junit . Assert . assertEquals ( 2 , list . size ( ) ) 