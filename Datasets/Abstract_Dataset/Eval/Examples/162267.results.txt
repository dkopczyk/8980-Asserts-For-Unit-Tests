METHOD_0 ( ) { int count = 5 ; when ( IDENT_0 . METHOD_0 ( any ( com . IDENT_1 . domain . mapper . model . IDENT_2 . class ) ) ) . thenReturn ( count ) ; com . IDENT_1 . domain . model . IDENT_3 d = new com . IDENT_1 . domain . model . METHOD_1 ( ) ; d . METHOD_2 ( com . IDENT_1 . service . IDENT_4 . impl . test . IDENT_5 . IDENT_6 ) ; int result = IDENT_7 . METHOD_3 ( d ) ; verify ( IDENT_0 ) . METHOD_0 ( METHOD_4 ( new com . IDENT_1 . test . IDENT_8 . IDENT_9 < com . IDENT_1 . domain . mapper . model . IDENT_2 > ( ) { @ com . IDENT_1 . service . IDENT_4 . impl . test . Override public boolean matches ( com . IDENT_1 . domain . mapper . model . common . IDENT_10 example ) { return com . IDENT_1 . test . IDENT_8 . IDENT_11 . METHOD_5 ( example , STRING_0 , com . IDENT_1 . service . IDENT_4 . impl . test . IDENT_5 . IDENT_6 ) ; } } ) ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( com . IDENT_1 . domain . mapper . model . common . IDENT_10 , java . lang . String , java . lang . Object ) { com . IDENT_1 . domain . mapper . model . common . IDENT_12 IDENT_13 = com . IDENT_1 . test . IDENT_8 . IDENT_11 . METHOD_6 ( IDENT_14 , ( field + ( com . IDENT_1 . test . IDENT_8 . IDENT_11 . IDENT_15 . IDENT_16 ) ) ) ; return com . IDENT_1 . test . IDENT_8 . IDENT_11 . METHOD_7 ( IDENT_13 , value ) ; }
org . junit . Assert . assertEquals ( count , result ) 