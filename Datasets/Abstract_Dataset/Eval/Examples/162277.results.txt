METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( com . IDENT_1 . service . IDENT_2 . impl . test . Mockito . any ( com . IDENT_1 . domain . mapper . model . IDENT_3 . class ) ) ) . thenReturn ( new java . util . ArrayList < com . IDENT_1 . domain . model . IDENT_4 > ( ) ) ; com . IDENT_1 . domain . model . IDENT_4 result = IDENT_5 . METHOD_2 ( IDENT_6 . IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( int ) { com . IDENT_1 . domain . model . IDENT_4 IDENT_8 = new com . IDENT_1 . domain . model . METHOD_3 ( ) ; IDENT_8 . METHOD_4 ( IDENT_7 ) ; com . IDENT_1 . domain . mapper . model . IDENT_3 IDENT_9 = new com . IDENT_1 . domain . mapper . model . METHOD_5 ( IDENT_8 ) ; java . util . List < java . lang . String > status = com . google . common . collect . Lists . newArrayList ( IDENT_10 . IDENT_11 . getValue ( ) , IDENT_10 . IDENT_12 . getValue ( ) ) ; IDENT_9 . METHOD_6 ( ) . get ( 0 ) . METHOD_7 ( status ) ; java . util . List < com . IDENT_1 . domain . model . METHOD_3 > IDENT_13 = IDENT_0 . METHOD_1 ( IDENT_9 ) ; if ( IDENT_13 . isEmpty ( ) ) { return null ; } IDENT_13 . get ( 0 ) . METHOD_8 ( METHOD_9 ( IDENT_13 . get ( 0 ) . getId ( ) ) ) ; return IDENT_13 . get ( 0 ) ; }
org . junit . Assert . assertNull ( result ) 