METHOD_0 ( ) { java . util . List < com . IDENT_0 . domain . model . IDENT_1 > IDENT_2 = METHOD_1 ( 4 ) ; IDENT_2 . get ( 0 ) . METHOD_2 ( 0 ) ; IDENT_2 . get ( 1 ) . METHOD_2 ( 0 ) ; IDENT_2 . get ( 2 ) . METHOD_2 ( 1 ) ; IDENT_2 . get ( 3 ) . METHOD_2 ( 1 ) ; final java . util . List < java . lang . Integer > IDENT_3 = new java . util . ArrayList < java . lang . Integer > ( ) ; IDENT_3 . add ( 0 ) ; IDENT_3 . add ( 1 ) ; java . util . Map < java . lang . Integer , java . util . List < com . IDENT_0 . domain . model . IDENT_1 > > IDENT_4 = new java . util . IDENT_5 < java . lang . Integer , java . util . List < com . IDENT_0 . domain . model . IDENT_1 > > ( ) ; java . util . List < com . IDENT_0 . domain . model . IDENT_1 > IDENT_6 = new java . util . ArrayList < com . IDENT_0 . domain . model . IDENT_1 > ( ) ; java . util . List < com . IDENT_0 . domain . model . IDENT_1 > IDENT_7 = new java . util . ArrayList < com . IDENT_0 . domain . model . IDENT_1 > ( ) ; IDENT_6 . add ( IDENT_2 . get ( 0 ) ) ; IDENT_6 . add ( IDENT_2 . get ( 1 ) ) ; IDENT_7 . add ( IDENT_2 . get ( 2 ) ) ; IDENT_7 . add ( IDENT_2 . get ( 3 ) ) ; IDENT_4 . put ( 0 , IDENT_6 ) ; IDENT_4 . put ( 1 , IDENT_7 ) ; com . IDENT_0 . service . IDENT_8 . impl . test . Mockito . doReturn ( IDENT_2 ) . when ( IDENT_9 ) . METHOD_3 ( com . IDENT_0 . service . IDENT_8 . impl . test . Mockito . any ( com . IDENT_0 . domain . mapper . model . IDENT_10 . class ) ) ; java . util . Map < java . lang . Integer , java . util . List < com . IDENT_0 . domain . model . IDENT_1 > > map = IDENT_11 . METHOD_4 ( IDENT_12 . IDENT_13 , IDENT_3 ) ; com . IDENT_0 . service . IDENT_8 . impl . test . Mockito . verify ( IDENT_9 ) . METHOD_3 ( com . IDENT_0 . service . IDENT_8 . impl . test . Mockito . METHOD_5 ( new com . IDENT_0 . test . IDENT_14 . IDENT_15 < com . IDENT_0 . domain . mapper . model . IDENT_10 > ( ) { @ com . IDENT_0 . service . IDENT_8 . impl . test . Override public boolean matches ( com . IDENT_0 . domain . mapper . model . common . IDENT_16 example ) { return ( ( ( ( com . IDENT_0 . test . IDENT_14 . IDENT_17 . METHOD_6 ( example , STRING_0 , IDENT_12 . IDENT_13 ) ) && ( com . IDENT_0 . test . IDENT_14 . IDENT_17 . METHOD_6 ( example , STRING_1 , false ) ) ) && ( com . IDENT_0 . test . IDENT_14 . IDENT_17 . METHOD_7 ( example , STRING_2 , IDENT_18 . IDENT_19 . getValue ( ) ) ) ) && ( com . IDENT_0 . test . IDENT_14 . IDENT_17 . METHOD_8 ( example , STRING_3 , IDENT_3 ) ) ) && ( ( example . METHOD_9 ( ) ) == STRING_4 ) ; } } ) ) ; com . IDENT_0 . service . IDENT_8 . impl . test . Mockito . METHOD_10 ( IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( ) { return null ; }
org . junit . Assert . assertEquals ( map , IDENT_4 ) 