METHOD_0 ( ) { boolean ret = IDENT_0 . METHOD_1 ( IDENT_1 ) ; verify ( IDENT_2 ) . METHOD_2 ( METHOD_3 ( new com . IDENT_3 . test . IDENT_4 . IDENT_5 < com . IDENT_3 . domain . mapper . model . IDENT_6 > ( ) { @ com . IDENT_3 . service . IDENT_7 . impl . test . Override public boolean matches ( com . IDENT_3 . domain . mapper . model . common . IDENT_8 example ) { return ( ( com . IDENT_3 . test . IDENT_4 . IDENT_9 . METHOD_4 ( example , STRING_0 , com . IDENT_3 . service . IDENT_7 . impl . test . IDENT_10 . id ) ) && ( com . IDENT_3 . test . IDENT_4 . IDENT_9 . METHOD_4 ( example , STRING_1 , com . IDENT_3 . service . IDENT_7 . impl . test . IDENT_10 . IDENT_11 ) ) ) && ( com . IDENT_3 . test . IDENT_4 . IDENT_9 . METHOD_4 ( example , STRING_2 , com . IDENT_3 . service . IDENT_7 . impl . test . IDENT_10 . id ) ) ; } } ) ) ; verify ( IDENT_2 ) . METHOD_5 ( METHOD_3 ( new com . IDENT_3 . test . IDENT_4 . IDENT_5 < com . IDENT_3 . domain . mapper . model . IDENT_6 > ( ) { @ com . IDENT_3 . service . IDENT_7 . impl . test . Override public boolean matches ( com . IDENT_3 . domain . mapper . model . common . IDENT_8 example ) { return com . IDENT_3 . test . IDENT_4 . IDENT_9 . METHOD_4 ( example , STRING_2 , com . IDENT_3 . service . IDENT_7 . impl . test . IDENT_10 . id ) ; } } ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( com . IDENT_3 . domain . mapper . model . common . IDENT_8 , java . lang . String , java . lang . Object ) { com . IDENT_3 . domain . mapper . model . common . IDENT_12 IDENT_13 = com . IDENT_3 . test . IDENT_4 . IDENT_9 . METHOD_6 ( IDENT_14 , ( field + ( com . IDENT_3 . test . IDENT_4 . IDENT_9 . IDENT_15 . IDENT_16 ) ) ) ; return com . IDENT_3 . test . IDENT_4 . IDENT_9 . METHOD_7 ( IDENT_13 , value ) ; }
org . junit . Assert . assertFalse ( ret ) 