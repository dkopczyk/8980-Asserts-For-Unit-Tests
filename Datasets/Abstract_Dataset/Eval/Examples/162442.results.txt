METHOD_0 ( ) { java . util . Properties properties = new java . util . Properties ( ) ; try ( java . io . IDENT_0 IDENT_1 = new java . io . METHOD_1 ( this . getClass ( ) . METHOD_2 ( ) . getResource ( STRING_0 ) . getPath ( ) ) ) { properties . load ( IDENT_1 ) ; } catch ( java . io . IDENT_2 e ) { } catch ( java . io . IOException e ) { } IDENT_3 . IDENT_4 . IDENT_5 . controller . IDENT_6 parser = new IDENT_3 . IDENT_4 . IDENT_5 . controller . METHOD_3 ( new IDENT_3 . IDENT_4 . IDENT_5 . controller . METHOD_4 ( properties ) ) ; boolean result = parser . METHOD_5 ( STRING_1 ) ; boolean IDENT_7 = parser . METHOD_5 ( STRING_2 ) ; boolean IDENT_8 = parser . METHOD_5 ( STRING_3 ) ; boolean IDENT_9 = parser . METHOD_5 ( STRING_4 ) ; boolean IDENT_10 = parser . METHOD_5 ( STRING_5 ) ; boolean IDENT_11 = parser . METHOD_5 ( STRING_6 ) ; boolean IDENT_12 = ! ( parser . METHOD_5 ( STRING_7 ) ) ; boolean control = ( ( ( ( result && IDENT_7 ) && IDENT_8 ) && ( IDENT_9 & IDENT_10 ) ) && IDENT_11 ) && IDENT_12 ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . String ) { this . pattern = java . util . regex . IDENT_13 . METHOD_6 ( this . IDENT_14 ) ; java . util . regex . IDENT_15 m = this . pattern . matcher ( IDENT_16 ) ; return m . find ( ) ; }
org . junit . Assert . assertThat ( control , org . hamcrest . core . Is . is ( true ) ) 