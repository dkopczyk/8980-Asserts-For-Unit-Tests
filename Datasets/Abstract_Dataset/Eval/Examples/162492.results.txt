METHOD_0 ( ) { final java . util . List < java . lang . String > IDENT_0 = dao . METHOD_1 ( null , true , Integer . MAX_VALUE ) ; final java . util . Map < java . lang . String , org . IDENT_1 . android . IDENT_2 . IDENT_3 . IDENT_4 > IDENT_3 = METHOD_2 ( ) ; METHOD_3 ( IDENT_3 , IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . util . Map , java . util . List ) { org . IDENT_1 . android . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = null ; for ( java . lang . String IDENT_6 : IDENT_0 ) { final org . IDENT_1 . android . IDENT_2 . IDENT_3 . IDENT_4 IDENT_7 = IDENT_3 . get ( IDENT_6 ) ; if ( IDENT_5 != null ) { final org . IDENT_1 . android . IDENT_2 . messages . Message IDENT_8 = IDENT_5 . METHOD_4 ( ) . get ( ( ( IDENT_5 . METHOD_4 ( ) . size ( ) ) - 1 ) ) ; final org . IDENT_1 . android . IDENT_2 . messages . Message IDENT_9 = IDENT_7 . METHOD_4 ( ) . get ( ( ( IDENT_7 . METHOD_4 ( ) . size ( ) ) - 1 ) ) ; org . junit . Assert . assertTrue ( ( ! ( IDENT_8 . METHOD_5 ( ) . METHOD_6 ( IDENT_9 . METHOD_5 ( ) ) ) ) ) ; } IDENT_5 = IDENT_7 ; } }
org . junit . Assert . assertEquals ( IDENT_3 . size ( ) , IDENT_0 . size ( ) ) 