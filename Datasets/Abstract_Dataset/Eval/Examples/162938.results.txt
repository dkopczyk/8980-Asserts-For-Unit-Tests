METHOD_0 ( ) { paramHandler . METHOD_1 ( STRING_0 ) ; paramHandler . METHOD_2 ( STRING_1 ) ; org . oscm . app . IDENT_0 . client . IDENT_1 IDENT_2 = mock ( org . oscm . app . IDENT_0 . client . IDENT_1 . class ) ; org . oscm . app . IDENT_0 . data . IDENT_3 IDENT_4 = mock ( org . oscm . app . IDENT_0 . data . IDENT_3 . class ) ; doReturn ( IDENT_2 ) . when ( IDENT_5 ) . METHOD_3 ( paramHandler ) ; doReturn ( IDENT_4 ) . when ( IDENT_2 ) . METHOD_4 ( ) ; doReturn ( "2" ) . when ( IDENT_4 ) . METHOD_5 ( ) ; doReturn ( IDENT_6 . IDENT_7 ) . when ( IDENT_2 ) . getStatus ( ) ; org . oscm . app . IDENT_8 . data . FlowState IDENT_9 = IDENT_5 . METHOD_6 ( paramHandler ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( org . oscm . app . IDENT_8 . IDENT_10 ) { org . oscm . app . IDENT_0 . client . IDENT_1 IDENT_11 = METHOD_3 ( paramHandler ) ; org . oscm . app . IDENT_0 . data . IDENT_3 configuration = IDENT_11 . METHOD_4 ( ) ; if ( configuration == null ) { throw new org . oscm . app . IDENT_12 . exceptions . METHOD_7 ( STRING_2 ) ; } boolean IDENT_13 = ( ( paramHandler . METHOD_8 ( ) ) != null ) && ( ! ( paramHandler . METHOD_8 ( ) . equals ( configuration . METHOD_5 ( ) ) ) ) ; if ( IDENT_13 ) { java . lang . String status = IDENT_11 . getStatus ( ) ; if ( IDENT_6 . IDENT_14 . equals ( status ) ) { org . oscm . app . IDENT_0 . IDENT_15 . logger . debug ( STRING_3 , paramHandler . METHOD_9 ( ) ) ; paramHandler . METHOD_10 ( paramHandler . METHOD_9 ( ) ) ; IDENT_11 . METHOD_11 ( ) ; return org . oscm . app . IDENT_8 . data . FlowState . IDENT_16 ; } else if ( IDENT_6 . IDENT_17 . equals ( status ) ) { return org . oscm . app . IDENT_8 . data . FlowState . IDENT_16 ; } org . oscm . app . IDENT_0 . IDENT_15 . logger . debug ( STRING_4 , new java . lang . Object [ ] { paramHandler . METHOD_9 ( ) , paramHandler . METHOD_8 ( ) , status } ) ; IDENT_11 . METHOD_12 ( paramHandler . METHOD_8 ( ) , null ) ; paramHandler . METHOD_13 ( ) . METHOD_14 ( ) ; return org . oscm . app . IDENT_8 . data . FlowState . IDENT_18 ; } org . oscm . app . IDENT_0 . IDENT_15 . logger . debug ( STRING_5 , paramHandler . METHOD_9 ( ) ) ; return org . oscm . app . IDENT_8 . data . FlowState . IDENT_19 ; }
org . junit . Assert . assertEquals ( FlowState . IDENT_18 , IDENT_9 ) 