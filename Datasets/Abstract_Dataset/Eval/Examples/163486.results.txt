METHOD_0 ( ) { java . lang . reflect . Method method = org . oscm . IDENT_0 . bean . IDENT_1 . class . METHOD_1 ( STRING_0 , org . oscm . IDENT_2 . IDENT_3 . class ) ; java . util . List < java . lang . annotation . IDENT_4 > IDENT_5 = METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . util . List ) { return new org . hamcrest . IDENT_6 < java . lang . Object > ( ) { MOD_0 java . lang . Class < ? > IDENT_7 ; MOD_0 java . lang . reflect . Method method ; MOD_0 java . lang . annotation . IDENT_4 annotation ; @ org . oscm . test . matchers . Override public boolean matches ( java . lang . Object object ) { boolean result = false ; if ( object instanceof java . lang . Class < ? > ) { IDENT_7 = ( ( java . lang . Class < ? > ) ( object ) ) ; for ( java . lang . annotation . IDENT_4 IDENT_8 : IDENT_9 ) { annotation = IDENT_8 ; org . junit . Assert . assertNotNull ( IDENT_7 . METHOD_4 ( IDENT_8 . METHOD_5 ( ) ) ) ; } result = true ; } else if ( object instanceof java . lang . reflect . Method ) { method = ( ( java . lang . reflect . Method ) ( object ) ) ; for ( java . lang . annotation . IDENT_4 IDENT_8 : IDENT_9 ) { annotation = IDENT_8 ; org . junit . Assert . assertNotNull ( method . METHOD_4 ( IDENT_8 . METHOD_5 ( ) ) ) ; } result = true ; } return result ; } @ org . oscm . test . matchers . Override public void METHOD_6 ( org . hamcrest . IDENT_10 description ) { if ( ( IDENT_7 ) != null ) { description . METHOD_7 ( ( ( ( STRING_1 + ( IDENT_7 . getName ( ) ) ) + STRING_2 ) + ( annotation . METHOD_5 ( ) . getName ( ) ) ) ) ; } else if ( ( method ) != null ) { description . METHOD_7 ( ( ( ( STRING_3 + ( method . getName ( ) ) ) + STRING_2 ) + ( annotation . METHOD_5 ( ) . getName ( ) ) ) ) ; } } } ; }
org . junit . Assert . assertThat ( method , METHOD_3 ( IDENT_5 ) ) 