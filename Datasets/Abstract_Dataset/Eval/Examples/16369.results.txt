METHOD_0 ( ) { final org . apache . rya . mongodb . document . IDENT_0 . IDENT_1 IDENT_2 = new org . apache . rya . mongodb . document . IDENT_0 . METHOD_1 ( STRING_0 ) ; final com . mongodb . IDENT_3 IDENT_4 = org . apache . rya . mongodb . document . IDENT_0 . IDENT_5 . METHOD_2 ( IDENT_2 ) ; final com . mongodb . IDENT_3 expected = ( ( com . mongodb . IDENT_3 ) ( com . mongodb . util . IDENT_6 . parse ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) ) ) ) ; "<AssertPlaceHolder>" ; } parse ( java . lang . String ) { METHOD_3 ( IDENT_7 ) ; int IDENT_8 = 0 ; final java . util . Set < org . apache . rya . indexing . IDENT_9 . storage . accumulo . IDENT_10 > IDENT_11 = new java . util . HashSet ( ) ; final java . util . regex . IDENT_12 matcher = org . apache . rya . indexing . IDENT_9 . IDENT_13 . client . util . IDENT_14 . IDENT_15 . matcher ( IDENT_7 ) ; while ( matcher . find ( ) ) { final java . lang . String IDENT_16 = matcher . group ( 1 ) ; IDENT_11 . add ( new org . apache . rya . indexing . IDENT_9 . storage . accumulo . METHOD_4 ( IDENT_16 . split ( STRING_4 ) ) ) ; IDENT_8 = matcher . end ( ) ; } final java . lang . String IDENT_17 = IDENT_7 . substring ( IDENT_8 ) . trim ( ) ; return new org . apache . rya . indexing . IDENT_9 . IDENT_13 . client . util . METHOD_5 ( IDENT_17 , IDENT_11 ) ; }
org . junit . Assert . assertEquals ( expected , IDENT_4 ) 