METHOD_0 ( ) { org . oscm . internal . vo . IDENT_0 IDENT_1 = new org . oscm . internal . vo . METHOD_1 ( ) ; IDENT_1 . METHOD_2 ( STRING_0 ) ; IDENT_1 . METHOD_3 ( STRING_1 ) ; IDENT_1 . METHOD_4 ( STRING_2 ) ; IDENT_1 . METHOD_5 ( STRING_3 ) ; org . oscm . internal . vo . METHOD_1 IDENT_2 = new org . oscm . internal . vo . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( STRING_4 ) ; IDENT_2 . METHOD_3 ( STRING_5 ) ; IDENT_2 . METHOD_4 ( STRING_6 ) ; IDENT_2 . METHOD_5 ( STRING_7 ) ; java . util . List < org . oscm . internal . vo . METHOD_1 > IDENT_3 = new java . util . ArrayList ( ) ; IDENT_3 . add ( IDENT_1 ) ; IDENT_3 . add ( IDENT_2 ) ; when ( IDENT_4 . METHOD_6 ( ) ) . thenReturn ( IDENT_3 ) ; final java . util . List < org . oscm . internal . IDENT_5 . IDENT_6 > IDENT_7 = bean . METHOD_0 ( ) ; boolean IDENT_8 = false ; boolean IDENT_9 = false ; for ( org . oscm . internal . IDENT_5 . IDENT_6 obj : IDENT_7 ) { if ( ( ( ( obj . METHOD_7 ( ) . equals ( STRING_0 ) ) && ( obj . METHOD_8 ( ) . equals ( STRING_1 ) ) ) && ( obj . METHOD_9 ( ) . equals ( STRING_3 ) ) ) && ( obj . METHOD_10 ( ) . equals ( STRING_2 ) ) ) { IDENT_8 = true ; } if ( ( ( ( obj . METHOD_7 ( ) . equals ( STRING_4 ) ) && ( obj . METHOD_8 ( ) . equals ( STRING_5 ) ) ) && ( obj . METHOD_9 ( ) . equals ( STRING_7 ) ) ) && ( obj . METHOD_10 ( ) . equals ( STRING_6 ) ) ) { IDENT_9 = true ; } } "<AssertPlaceHolder>" ; } equals ( java . lang . Object ) { if ( ( this ) == that ) return true ; if ( ! ( that instanceof org . oscm . IDENT_10 . IDENT_11 . IDENT_12 ) ) { return false ; } org . oscm . IDENT_10 . IDENT_11 . IDENT_12 compareTo = ( ( org . oscm . IDENT_10 . IDENT_11 . IDENT_12 ) ( that ) ) ; return ( getKey ( ) ) == ( compareTo . getKey ( ) ) ; }
org . junit . Assert . assertTrue ( ( IDENT_8 && IDENT_9 ) ) 