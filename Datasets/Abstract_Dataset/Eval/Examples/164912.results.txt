METHOD_0 ( ) { org . oscm . internal . vo . IDENT_0 IDENT_1 = METHOD_1 ( IDENT_2 ) ; "<AssertPlaceHolder>" ; java . util . List < org . oscm . internal . vo . IDENT_3 > IDENT_4 = IDENT_1 . METHOD_2 ( ) ; for ( org . oscm . internal . vo . IDENT_3 op : IDENT_4 ) { op . METHOD_3 ( org . oscm . IDENT_5 . bean . IDENT_6 ) ; } IDENT_2 . METHOD_4 ( IDENT_1 ) ; } METHOD_1 ( org . oscm . IDENT_7 . IDENT_8 ) { org . oscm . IDENT_7 . IDENT_9 IDENT_10 = METHOD_5 ( new java . util . concurrent . IDENT_11 < org . oscm . IDENT_7 . IDENT_9 > ( ) { @ org . oscm . IDENT_7 . Override public org . oscm . IDENT_7 . IDENT_9 call ( ) throws org . oscm . IDENT_7 . Exception { org . oscm . IDENT_7 . IDENT_8 provider = null ; if ( org != null ) { provider = ( ( org . oscm . IDENT_7 . IDENT_8 ) ( IDENT_12 . find ( org ) ) ) ; } if ( provider == null ) { provider = METHOD_6 ( ) ; } org . oscm . IDENT_7 . IDENT_9 IDENT_10 = new org . oscm . IDENT_7 . METHOD_7 ( ) ; IDENT_10 . METHOD_8 ( IDENT_13 . IDENT_14 . toString ( ) ) ; IDENT_10 . METHOD_9 ( ( STRING_0 + ( java . lang . System . currentTimeMillis ( ) ) ) ) ; IDENT_10 . METHOD_10 ( provider ) ; IDENT_10 . METHOD_11 ( STRING_1 ) ; org . oscm . IDENT_7 . METHOD_7 IDENT_15 = ( ( org . oscm . IDENT_7 . METHOD_7 ) ( IDENT_12 . find ( IDENT_10 ) ) ) ; if ( IDENT_15 == null ) { IDENT_12 . METHOD_12 ( IDENT_10 ) ; } else { IDENT_10 = IDENT_15 ; } return IDENT_10 ; } } ) ; return IDENT_10 ; }
org . junit . Assert . assertNotNull ( IDENT_1 ) 