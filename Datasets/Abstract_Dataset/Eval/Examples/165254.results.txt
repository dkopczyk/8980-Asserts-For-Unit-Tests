METHOD_0 ( ) { METHOD_1 ( new java . util . concurrent . IDENT_0 < java . lang . IDENT_1 > ( ) { @ org . oscm . IDENT_2 . bean . Override public org . oscm . IDENT_2 . bean . IDENT_1 call ( ) throws org . oscm . internal . types . exception . IDENT_3 { IDENT_4 . METHOD_2 ( IDENT_5 ) ; IDENT_4 . METHOD_2 ( IDENT_6 ) ; IDENT_4 . METHOD_2 ( IDENT_7 ) ; IDENT_4 . METHOD_2 ( IDENT_8 ) ; return null ; } } ) ; METHOD_1 ( new java . util . concurrent . IDENT_0 < java . lang . IDENT_1 > ( ) { @ org . oscm . IDENT_2 . bean . Override public org . oscm . IDENT_2 . bean . IDENT_1 call ( ) throws org . oscm . internal . types . exception . IDENT_3 , org . oscm . internal . types . exception . IDENT_9 , org . oscm . internal . types . exception . IDENT_10 { final org . oscm . internal . vo . IDENT_11 IDENT_12 = IDENT_4 . METHOD_3 ( IDENT_5 . METHOD_4 ( ) ) ; final org . oscm . internal . vo . IDENT_11 IDENT_13 = IDENT_4 . METHOD_3 ( IDENT_7 . METHOD_4 ( ) ) ; IDENT_4 . METHOD_0 ( IDENT_12 ) ; IDENT_4 . METHOD_0 ( IDENT_13 ) ; return null ; } } ) ; java . util . List < org . oscm . internal . vo . IDENT_11 > IDENT_14 = METHOD_1 ( new java . util . concurrent . IDENT_0 < java . util . List < org . oscm . internal . vo . IDENT_11 > > ( ) { @ org . oscm . IDENT_2 . bean . Override public java . util . List < org . oscm . internal . vo . IDENT_11 > call ( ) throws org . oscm . internal . types . exception . IDENT_3 { final java . util . List < org . oscm . internal . vo . IDENT_11 > IDENT_14 = IDENT_4 . METHOD_5 ( ) ; return IDENT_14 ; } } ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_15 . size ( ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_14 . size ( ) ) == 2 ) ) 