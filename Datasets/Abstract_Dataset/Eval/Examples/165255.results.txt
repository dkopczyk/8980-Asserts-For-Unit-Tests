METHOD_0 ( ) { final org . oscm . internal . vo . IDENT_0 IDENT_1 = METHOD_1 ( INT_0 ) ; METHOD_2 ( new java . util . concurrent . IDENT_2 < java . lang . IDENT_3 > ( ) { @ org . oscm . IDENT_1 . bean . Override public org . oscm . IDENT_1 . bean . IDENT_3 call ( ) throws org . oscm . IDENT_1 . bean . Exception { IDENT_4 . METHOD_3 ( IDENT_1 ) ; return null ; } } ) ; final org . oscm . internal . vo . IDENT_0 IDENT_5 = METHOD_2 ( new java . util . concurrent . IDENT_2 < org . oscm . internal . vo . IDENT_0 > ( ) { @ org . oscm . IDENT_1 . bean . Override public org . oscm . internal . vo . IDENT_0 call ( ) throws org . oscm . internal . types . exception . IDENT_6 , org . oscm . internal . types . exception . IDENT_7 , org . oscm . internal . types . exception . IDENT_8 { org . oscm . internal . vo . IDENT_0 IDENT_1 = IDENT_4 . METHOD_4 ( STRING_0 ) ; java . util . List < org . oscm . internal . vo . IDENT_9 > IDENT_10 = new java . util . ArrayList ( ) ; IDENT_10 . add ( METHOD_5 ( IDENT_11 . IDENT_12 , INT_0 , IDENT_1 ) ) ; IDENT_4 . METHOD_0 ( IDENT_10 , IDENT_1 ) ; return IDENT_1 ; } } ) ; final java . util . List < org . oscm . internal . vo . IDENT_9 > IDENT_13 = METHOD_2 ( new java . util . concurrent . IDENT_2 < java . util . List < org . oscm . internal . vo . IDENT_9 > > ( ) { @ org . oscm . IDENT_1 . bean . Override public java . util . List < org . oscm . internal . vo . IDENT_9 > call ( ) throws org . oscm . internal . types . exception . IDENT_8 { final java . util . List < org . oscm . internal . vo . IDENT_9 > IDENT_14 = IDENT_4 . METHOD_6 ( IDENT_5 . getKey ( ) ) ; return IDENT_14 ; } } ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_15 . size ( ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_13 . size ( ) ) == 1 ) ) 