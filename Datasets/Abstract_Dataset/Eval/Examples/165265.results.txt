METHOD_0 ( ) { METHOD_1 ( new java . util . concurrent . IDENT_0 < java . lang . IDENT_1 > ( ) { @ org . oscm . IDENT_2 . dao . Override public org . oscm . IDENT_2 . dao . IDENT_1 call ( ) throws org . oscm . IDENT_2 . dao . Exception { bean . METHOD_2 ( org . oscm . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_3 ( IDENT_5 ) ) ; return null ; } } ) ; final org . oscm . IDENT_6 . IDENT_7 IDENT_8 = METHOD_1 ( new java . util . concurrent . IDENT_0 < org . oscm . IDENT_6 . IDENT_7 > ( ) { @ org . oscm . IDENT_2 . dao . Override public org . oscm . IDENT_6 . IDENT_7 call ( ) throws org . oscm . IDENT_2 . dao . Exception { return IDENT_9 . METHOD_4 ( STRING_0 ) ; } } ) ; METHOD_1 ( new java . util . concurrent . IDENT_0 < java . lang . IDENT_1 > ( ) { @ org . oscm . IDENT_2 . dao . Override public org . oscm . IDENT_2 . dao . IDENT_1 call ( ) throws org . oscm . IDENT_2 . dao . Exception { org . oscm . IDENT_6 . IDENT_10 org = new org . oscm . IDENT_6 . METHOD_5 ( ) ; org . METHOD_6 ( STRING_1 ) ; org . METHOD_7 ( IDENT_8 ) ; org . METHOD_8 ( 1 ) ; IDENT_11 . METHOD_9 ( org ) ; return null ; } } ) ; final java . lang . Long count = METHOD_1 ( new java . util . concurrent . IDENT_0 < java . lang . Long > ( ) { @ org . oscm . IDENT_2 . dao . Override public org . oscm . IDENT_2 . dao . Long call ( ) throws org . oscm . IDENT_2 . dao . Exception { return IDENT_9 . METHOD_0 ( IDENT_8 ) ; } } ) ; "<AssertPlaceHolder>" ; } METHOD_0 ( org . oscm . IDENT_6 . IDENT_7 ) { javax . persistence . Query query = IDENT_12 . METHOD_10 ( STRING_2 ) ; query . METHOD_11 ( STRING_3 , IDENT_2 ) ; return ( ( long ) ( query . METHOD_12 ( ) ) ) ; }
org . junit . Assert . assertTrue ( ( count == 1L ) ) 