METHOD_0 ( ) { METHOD_1 ( new java . util . concurrent . IDENT_0 < java . lang . IDENT_1 > ( ) { @ org . oscm . IDENT_2 . dao . Override public org . oscm . IDENT_2 . dao . IDENT_1 call ( ) throws org . oscm . IDENT_2 . dao . Exception { final org . oscm . IDENT_3 . IDENT_4 IDENT_2 = new org . oscm . IDENT_3 . METHOD_2 ( ) ; IDENT_2 . METHOD_3 ( STRING_0 ) ; IDENT_2 . METHOD_4 ( ) . setName ( STRING_1 ) ; IDENT_5 . METHOD_5 ( IDENT_2 ) ; final org . oscm . IDENT_3 . METHOD_2 IDENT_6 = new org . oscm . IDENT_3 . METHOD_2 ( ) ; IDENT_6 . METHOD_3 ( STRING_2 ) ; IDENT_6 . METHOD_4 ( ) . setName ( STRING_1 ) ; IDENT_5 . METHOD_5 ( IDENT_6 ) ; org . oscm . IDENT_3 . IDENT_7 org = new org . oscm . IDENT_3 . METHOD_6 ( ) ; org . METHOD_7 ( STRING_3 ) ; org . METHOD_8 ( IDENT_2 ) ; org . METHOD_9 ( 1 ) ; IDENT_5 . METHOD_5 ( org ) ; org . oscm . test . data . IDENT_8 . METHOD_10 ( IDENT_5 , STRING_4 , org ) ; org . oscm . test . data . IDENT_8 . METHOD_10 ( IDENT_5 , STRING_5 , org ) ; org . oscm . test . data . IDENT_8 . METHOD_10 ( IDENT_5 , STRING_6 , org ) ; org . oscm . test . data . IDENT_8 . METHOD_10 ( IDENT_5 , STRING_7 , org ) ; org . oscm . test . data . IDENT_8 . METHOD_10 ( IDENT_5 , STRING_8 , org ) ; return null ; } } ) ; final org . oscm . IDENT_3 . METHOD_2 IDENT_6 = METHOD_1 ( new java . util . concurrent . IDENT_0 < org . oscm . IDENT_3 . METHOD_2 > ( ) { @ org . oscm . IDENT_2 . dao . Override public org . oscm . IDENT_3 . METHOD_2 call ( ) throws org . oscm . IDENT_2 . dao . Exception { return IDENT_9 . METHOD_11 ( STRING_2 ) ; } } ) ; final java . util . List < java . lang . String > IDENT_10 = METHOD_1 ( new java . util . concurrent . IDENT_0 < java . util . List < java . lang . String > > ( ) { @ org . oscm . IDENT_2 . dao . Override public java . util . List < java . lang . String > call ( ) throws org . oscm . IDENT_2 . dao . Exception { return IDENT_9 . METHOD_12 ( STRING_3 , IDENT_6 . getKey ( ) ) ; } } ) ; "<AssertPlaceHolder>" ; } isEmpty ( ) { return false ; }
org . junit . Assert . assertTrue ( IDENT_10 . isEmpty ( ) ) 