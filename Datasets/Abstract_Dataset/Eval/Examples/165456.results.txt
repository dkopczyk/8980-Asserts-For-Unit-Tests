METHOD_0 ( ) { "<AssertPlaceHolder>" ; } METHOD_1 ( float ) { if ( java . lang . IDENT_0 . METHOD_2 ( k ) ) { return com . IDENT_1 . IDENT_2 . math . IDENT_3 . METHOD_3 ( ) ; } if ( k == ( IDENT_0 . IDENT_4 ) ) { return com . IDENT_1 . IDENT_2 . math . IDENT_3 . IDENT_4 ; } if ( k == ( IDENT_0 . IDENT_5 ) ) { return com . IDENT_1 . IDENT_2 . math . IDENT_3 . IDENT_5 ; } if ( ( java . lang . IDENT_0 . METHOD_4 ( k ) ) == ( IDENT_6 . IDENT_7 ) ) { return com . IDENT_1 . IDENT_2 . math . IDENT_3 . IDENT_8 ; } if ( k == 0.0 ) { return com . IDENT_1 . IDENT_2 . math . IDENT_3 . IDENT_9 ; } final long de = com . IDENT_1 . IDENT_2 . math . IDENT_6 . METHOD_5 ( k ) ; final long IDENT_10 = com . IDENT_1 . IDENT_2 . math . IDENT_6 . METHOD_6 ( k ) ; final long IDENT_11 = com . IDENT_1 . IDENT_2 . math . IDENT_6 . METHOD_7 ( k ) ; final char IDENT_12 = com . IDENT_1 . IDENT_2 . math . IDENT_3 . METHOD_8 ( ( ( int ) ( IDENT_10 ) ) ) ; return ( ( char ) ( ( IDENT_12 | IDENT_13 ) | IDENT_14 ) ) ; }
org . junit . Assert . assertTrue ( ( ( com . IDENT_1 . IDENT_2 . math . IDENT_3 . IDENT_5 ) == ( com . IDENT_1 . IDENT_2 . math . IDENT_3 . METHOD_1 ( IDENT_0 . IDENT_5 ) ) ) ) 