METHOD_0 ( ) { org . apache . shardingsphere . core . strategy . IDENT_0 . IDENT_1 IDENT_2 = new org . apache . shardingsphere . core . strategy . IDENT_0 . METHOD_1 ( ) ; org . apache . shardingsphere . core . strategy . IDENT_0 . IDENT_3 IDENT_4 = new org . apache . shardingsphere . core . strategy . IDENT_0 . fixture . METHOD_2 ( 1 ) ; org . apache . shardingsphere . core . strategy . IDENT_0 . METHOD_1 . METHOD_3 ( IDENT_4 ) ; IDENT_2 . METHOD_4 ( new java . util . Properties ( ) ) ; METHOD_5 ( IDENT_2 , ( ( IDENT_4 . METHOD_6 ( ) ) + 2 ) ) ; java . util . List < java . lang . IDENT_5 < ? > > expected = java . util . Arrays . < java . lang . IDENT_5 < ? > > asList ( INT_0 , INT_1 , INT_2 , INT_3 , INT_4 , INT_5 , INT_6 , INT_7 , INT_8 , INT_9 ) ; java . util . List < java . lang . IDENT_5 < ? > > actual = new java . util . ArrayList ( ) ; for ( int i = 0 ; i < ( org . apache . shardingsphere . core . strategy . IDENT_0 . IDENT_6 . IDENT_7 ) ; i ++ ) { actual . add ( IDENT_2 . METHOD_7 ( ) ) ; } "<AssertPlaceHolder>" ; } METHOD_7 ( ) { return 1 ; }
org . junit . Assert . assertThat ( actual , org . hamcrest . CoreMatchers . is ( expected ) ) 