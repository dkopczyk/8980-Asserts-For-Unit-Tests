METHOD_0 ( ) { org . apache . shardingsphere . core . IDENT_0 . IDENT_1 . common . IDENT_2 IDENT_3 = new org . apache . shardingsphere . core . IDENT_0 . IDENT_1 . common . METHOD_1 ( METHOD_2 ( "1" , "2" ) ) ; org . apache . shardingsphere . core . IDENT_0 . IDENT_1 . common . METHOD_1 IDENT_4 = new org . apache . shardingsphere . core . IDENT_0 . IDENT_1 . common . METHOD_1 ( METHOD_2 ( STRING_0 , STRING_1 ) ) ; org . apache . shardingsphere . core . parse . antlr . sql . statement . IDENT_5 . IDENT_6 IDENT_7 = new org . apache . shardingsphere . core . parse . antlr . sql . statement . IDENT_5 . METHOD_3 ( ) ; IDENT_7 . METHOD_4 ( ) . addAll ( java . util . Arrays . asList ( new org . apache . shardingsphere . core . parse . IDENT_8 . parser . context . IDENT_9 . METHOD_5 ( 1 , org . apache . shardingsphere . core . IDENT_10 . IDENT_11 . IDENT_12 , org . apache . shardingsphere . core . IDENT_10 . IDENT_11 . IDENT_12 ) , new org . apache . shardingsphere . core . parse . IDENT_8 . parser . context . IDENT_9 . METHOD_5 ( 2 , org . apache . shardingsphere . core . IDENT_10 . IDENT_11 . IDENT_12 , org . apache . shardingsphere . core . IDENT_10 . IDENT_11 . IDENT_12 ) ) ) ; IDENT_7 . METHOD_6 ( ) . addAll ( java . util . Arrays . asList ( new org . apache . shardingsphere . core . parse . IDENT_8 . parser . context . IDENT_9 . METHOD_5 ( 1 , org . apache . shardingsphere . core . IDENT_10 . IDENT_11 . IDENT_13 , org . apache . shardingsphere . core . IDENT_10 . IDENT_11 . IDENT_12 ) , new org . apache . shardingsphere . core . parse . IDENT_8 . parser . context . IDENT_9 . METHOD_5 ( 2 , org . apache . shardingsphere . core . IDENT_10 . IDENT_11 . IDENT_13 , org . apache . shardingsphere . core . IDENT_10 . IDENT_11 . IDENT_12 ) ) ) ; org . apache . shardingsphere . core . IDENT_0 . IDENT_1 . IDENT_14 . IDENT_15 IDENT_16 = new org . apache . shardingsphere . core . IDENT_0 . IDENT_1 . IDENT_14 . METHOD_7 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; } compare ( org . apache . shardingsphere . IDENT_17 . IDENT_18 . dataset . row . IDENT_19 , org . apache . shardingsphere . IDENT_17 . IDENT_18 . dataset . row . IDENT_19 ) { return ( java . lang . Integer . METHOD_8 ( IDENT_3 . METHOD_9 ( ) . get ( 0 ) ) ) - ( java . lang . Integer . METHOD_8 ( IDENT_4 . METHOD_9 ( ) . get ( 0 ) ) ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_16 . compare ( IDENT_3 , IDENT_4 ) ) < 0 ) ) 