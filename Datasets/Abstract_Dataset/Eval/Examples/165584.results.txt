METHOD_0 ( ) { java . lang . String sql = STRING_0 ; for ( int i = 0 ; i < ( sql . length ( ) ) ; i ++ ) { org . apache . shardingsphere . core . parse . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new org . apache . shardingsphere . core . parse . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( sql , IDENT_5 , i ) ; int expected = i ; if ( org . apache . shardingsphere . core . parse . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_2 ( sql . charAt ( i ) ) ) { expected += 1 ; } "<AssertPlaceHolder>" ; } } METHOD_3 ( ) { int length = 0 ; while ( org . apache . shardingsphere . core . parse . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_2 ( charAt ( ( ( offset ) + length ) ) ) ) { length ++ ; } return ( offset ) + length ; }
org . junit . Assert . assertThat ( IDENT_4 . METHOD_3 ( ) , org . hamcrest . CoreMatchers . is ( expected ) ) 