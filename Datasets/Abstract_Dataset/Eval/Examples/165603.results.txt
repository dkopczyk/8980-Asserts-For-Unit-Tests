METHOD_0 ( ) { if ( ( ! ( METHOD_1 ( ) . METHOD_2 ( ) ) ) || ( STRING_0 . equals ( METHOD_3 ( ) ) ) ) { return ; } try ( java . sql . IDENT_0 connection = METHOD_4 ( ) . METHOD_5 ( ) ) { try ( java . sql . IDENT_1 IDENT_2 = connection . METHOD_6 ( METHOD_7 ( ) ) ) { for ( org . apache . shardingsphere . IDENT_3 . IDENT_4 . IDENT_5 . root . IDENT_6 IDENT_7 : IDENT_8 . METHOD_8 ( ) ) { METHOD_9 ( IDENT_2 , IDENT_7 ) ; } IDENT_2 . METHOD_10 ( ) ; "<AssertPlaceHolder>" ; } } } METHOD_11 ( ) { final boolean IDENT_9 = org . apache . shardingsphere . core . execute . sql . execute . IDENT_10 . IDENT_11 . METHOD_12 ( ) ; org . apache . shardingsphere . core . execute . sql . execute . IDENT_12 < int [ ] > IDENT_13 = new org . apache . shardingsphere . core . execute . sql . execute . IDENT_12 < int [ ] > ( METHOD_13 ( ) , METHOD_12 ) { @ org . apache . shardingsphere . IDENT_14 . executor . Override MOD_0 int [ ] METHOD_14 ( final org . apache . shardingsphere . core . route . IDENT_15 IDENT_16 , final java . sql . IDENT_17 statement , final org . apache . shardingsphere . core . IDENT_18 . IDENT_19 IDENT_20 ) throws java . sql . IDENT_21 { return statement . METHOD_11 ( ) ; } } ; java . util . List < int [ ] > results = METHOD_15 ( IDENT_13 ) ; if ( METHOD_16 ( ) ) { return METHOD_17 ( results ) ; } else { return results . get ( 0 ) ; } }
org . junit . Assert . assertThat ( IDENT_2 . METHOD_11 ( ) . length , org . hamcrest . CoreMatchers . is ( 0 ) ) 