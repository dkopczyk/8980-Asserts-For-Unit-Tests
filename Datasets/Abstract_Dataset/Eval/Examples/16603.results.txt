METHOD_0 ( ) { final org . apache . accumulo . core . client . IDENT_0 IDENT_1 = METHOD_1 ( ) . METHOD_2 ( ) ; final java . lang . String IDENT_2 = IDENT_3 . METHOD_3 ( ) ; try ( final org . apache . rya . indexing . IDENT_4 . storage . IDENT_5 IDENT_6 = new org . apache . rya . indexing . IDENT_4 . storage . accumulo . METHOD_4 ( IDENT_1 , IDENT_2 ) ) { final java . lang . String IDENT_7 = IDENT_6 . METHOD_5 ( STRING_0 ) ; final org . apache . rya . api . instance . IDENT_8 IDENT_9 = new org . apache . rya . accumulo . instance . METHOD_6 ( IDENT_1 , IDENT_2 ) ; final com . google . common . collect . ImmutableMap < java . lang . String , org . apache . rya . api . instance . IDENT_10 . IDENT_11 . IDENT_12 > IDENT_13 = IDENT_9 . METHOD_7 ( ) . METHOD_8 ( ) . METHOD_9 ( ) ; final org . apache . rya . api . instance . IDENT_10 . IDENT_11 . IDENT_12 IDENT_14 = org . apache . rya . api . instance . IDENT_10 . IDENT_11 . IDENT_12 . builder ( ) . setId ( IDENT_7 ) . build ( ) ; "<AssertPlaceHolder>" ; } } get ( org . apache . rya . api . domain . IDENT_15 ) { java . util . IDENT_16 . METHOD_10 ( subject ) ; try { final org . bson . Document document = IDENT_17 . METHOD_11 ( IDENT_2 ) . METHOD_12 ( org . apache . rya . indexing . entity . storage . IDENT_17 . IDENT_18 . IDENT_19 ) . find ( com . mongodb . client . model . IDENT_20 . eq ( IDENT_21 . IDENT_22 , subject . METHOD_13 ( ) ) ) . first ( ) ; return document == null ? java . util . Optional . empty ( ) : java . util . Optional . of ( org . apache . rya . indexing . entity . storage . IDENT_17 . IDENT_18 . IDENT_23 . METHOD_14 ( document ) ) ; } catch ( com . mongodb . IDENT_24 | org . apache . rya . indexing . entity . storage . IDENT_17 . IDENT_25 . IDENT_26 e ) { throw new org . apache . rya . indexing . entity . storage . IDENT_17 . METHOD_15 ( ( ( STRING_1 + ( subject . METHOD_13 ( ) ) ) + STRING_2 ) , e ) ; } }
org . junit . Assert . assertEquals ( IDENT_14 , IDENT_13 . get ( IDENT_7 ) ) 