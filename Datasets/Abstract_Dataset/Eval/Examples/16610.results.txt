METHOD_0 ( ) { try ( final org . apache . rya . indexing . IDENT_0 . storage . IDENT_1 IDENT_2 = new org . apache . rya . indexing . IDENT_0 . storage . IDENT_3 . METHOD_1 ( METHOD_2 ( ) , conf . METHOD_3 ( ) ) ) { final org . apache . rya . mongodb . instance . IDENT_4 IDENT_5 = new org . apache . rya . mongodb . instance . METHOD_4 ( METHOD_2 ( ) , conf . METHOD_3 ( ) ) ; IDENT_5 . METHOD_5 ( org . apache . rya . api . instance . IDENT_6 . builder ( ) . METHOD_6 ( conf . METHOD_3 ( ) ) . METHOD_7 ( "test" ) . METHOD_8 ( new org . apache . rya . api . instance . IDENT_6 . METHOD_9 ( false ) ) . METHOD_10 ( new org . apache . rya . api . instance . IDENT_6 . METHOD_11 ( false ) ) . METHOD_12 ( new org . apache . rya . api . instance . IDENT_6 . METHOD_13 ( false ) ) . METHOD_14 ( new org . apache . rya . api . instance . IDENT_6 . METHOD_15 ( com . google . common . base . Optional . METHOD_16 ( ) ) ) . METHOD_17 ( new org . apache . rya . api . instance . IDENT_6 . METHOD_18 ( com . google . common . base . Optional . METHOD_16 ( ) ) ) . METHOD_19 ( org . apache . rya . api . instance . IDENT_6 . IDENT_7 . builder ( ) . METHOD_20 ( true ) ) . build ( ) ) ; final java . lang . String IDENT_8 = IDENT_2 . METHOD_21 ( STRING_0 ) ; final com . google . common . collect . ImmutableMap < java . lang . String , org . apache . rya . api . instance . IDENT_6 . IDENT_7 . IDENT_9 > IDENT_10 = IDENT_5 . METHOD_22 ( ) . METHOD_23 ( ) . METHOD_24 ( ) ; final org . apache . rya . api . instance . IDENT_6 . IDENT_7 . IDENT_9 IDENT_11 = org . apache . rya . api . instance . IDENT_6 . IDENT_7 . IDENT_9 . builder ( ) . setId ( IDENT_8 ) . build ( ) ; "<AssertPlaceHolder>" ; } } get ( org . apache . rya . api . domain . IDENT_12 ) { java . util . IDENT_13 . METHOD_25 ( subject ) ; try { final org . bson . Document document = IDENT_3 . METHOD_26 ( IDENT_14 ) . METHOD_27 ( org . apache . rya . indexing . entity . storage . IDENT_3 . IDENT_15 . IDENT_16 ) . find ( com . mongodb . client . model . IDENT_17 . eq ( IDENT_18 . IDENT_19 , subject . METHOD_28 ( ) ) ) . first ( ) ; return document == null ? java . util . Optional . empty ( ) : java . util . Optional . of ( org . apache . rya . indexing . entity . storage . IDENT_3 . IDENT_15 . IDENT_20 . METHOD_29 ( document ) ) ; } catch ( com . mongodb . IDENT_21 | org . apache . rya . indexing . entity . storage . IDENT_3 . IDENT_22 . IDENT_23 e ) { throw new org . apache . rya . indexing . entity . storage . IDENT_3 . METHOD_30 ( ( ( STRING_1 + ( subject . METHOD_28 ( ) ) ) + STRING_2 ) , e ) ; } }
org . junit . Assert . assertEquals ( IDENT_11 , IDENT_10 . get ( IDENT_8 ) ) 