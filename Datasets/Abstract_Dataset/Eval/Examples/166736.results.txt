METHOD_0 ( ) { "<AssertPlaceHolder>" ; } convert ( java . lang . Object , java . lang . Class ) { if ( IDENT_0 . METHOD_1 ( ) ) { return ( ( T ) ( org . IDENT_1 . util . IDENT_2 . METHOD_2 ( value , IDENT_0 ) ) ) ; } else if ( value == null ) { return null ; } else if ( IDENT_0 . METHOD_3 ( value ) ) { return ( ( T ) ( value ) ) ; } else if ( org . IDENT_1 . util . IDENT_3 . class . METHOD_4 ( IDENT_0 ) ) { return ( ( T ) ( org . IDENT_1 . util . IDENT_2 . METHOD_5 ( value , IDENT_0 ) ) ) ; } else if ( java . util . Date . class . METHOD_4 ( IDENT_0 ) ) { return ( ( T ) ( org . IDENT_1 . util . IDENT_2 . METHOD_6 ( value , IDENT_0 ) ) ) ; } else if ( IDENT_0 == ( org . IDENT_1 . util . Boolean . class ) ) { return ( ( T ) ( org . IDENT_1 . util . IDENT_4 . METHOD_7 ( value ) ) ) ; } else if ( IDENT_0 . METHOD_8 ( ) ) { return ( ( T ) ( org . IDENT_1 . util . IDENT_2 . METHOD_9 ( value , IDENT_0 ) ) ) ; } else if ( IDENT_0 == ( java . lang . String . class ) ) { return ( ( T ) ( value . toString ( ) ) ) ; } else if ( IDENT_0 == ( com . google . IDENT_5 . api . datastore . IDENT_6 . class ) ) { return ( ( T ) ( org . IDENT_1 . util . IDENT_2 . METHOD_10 ( value ) ) ) ; } else { throw new java . lang . IllegalArgumentException ( ( ( ( ( STRING_0 + ( value . getClass ( ) . getName ( ) ) ) + STRING_1 ) + ( IDENT_0 . getName ( ) ) ) + STRING_2 ) ) ; } }
org . junit . Assert . assertThat ( org . IDENT_1 . util . IDENT_2 . convert ( "1" , org . IDENT_1 . util . Boolean . class ) , org . hamcrest . CoreMatchers . is ( true ) ) 