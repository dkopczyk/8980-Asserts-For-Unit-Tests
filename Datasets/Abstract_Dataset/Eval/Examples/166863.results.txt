METHOD_0 ( ) { java . awt . IDENT_0 IDENT_1 = new java . awt . METHOD_1 ( INT_0 , INT_1 , INT_2 , INT_3 ) ; IDENT_2 . METHOD_2 ( IDENT_1 ) ; com . IDENT_3 . IDENT_4 . support . IDENT_2 . IDENT_5 IDENT_6 = new com . IDENT_3 . IDENT_4 . support . IDENT_2 . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { if ( METHOD_5 ( com . IDENT_3 . IDENT_4 . support . IDENT_2 . METHOD_3 . IDENT_7 , com . IDENT_3 . IDENT_4 . support . IDENT_2 . METHOD_3 . IDENT_8 , com . IDENT_3 . IDENT_4 . support . IDENT_2 . METHOD_3 . IDENT_9 , com . IDENT_3 . IDENT_4 . support . IDENT_2 . METHOD_3 . IDENT_10 ) ) { return new java . awt . METHOD_1 ( IDENT_2 . METHOD_6 ( com . IDENT_3 . IDENT_4 . support . IDENT_2 . METHOD_3 . IDENT_7 , 0 ) , IDENT_2 . METHOD_6 ( com . IDENT_3 . IDENT_4 . support . IDENT_2 . METHOD_3 . IDENT_8 , 0 ) , IDENT_2 . METHOD_6 ( com . IDENT_3 . IDENT_4 . support . IDENT_2 . METHOD_3 . IDENT_9 , INT_4 ) , IDENT_2 . METHOD_6 ( com . IDENT_3 . IDENT_4 . support . IDENT_2 . METHOD_3 . IDENT_10 , INT_5 ) ) ; } else { return null ; } }
org . junit . Assert . assertThat ( IDENT_6 . METHOD_4 ( ) , org . hamcrest . CoreMatchers . is ( IDENT_1 ) ) 