METHOD_0 ( ) { final org . apache . rya . streams . api . entity . IDENT_0 IDENT_1 = IDENT_2 . add ( STRING_0 , true , false ) ; final java . lang . String [ ] args = new java . lang . String [ ] { STRING_1 , "" + ( IDENT_3 ) , STRING_2 3 , kafka . METHOD_1 ( ) , STRING_3 , kafka . METHOD_2 ( ) , STRING_2 0 , IDENT_1 . METHOD_3 ( ) . toString ( ) , STRING_4 , kafka . METHOD_4 ( ) } ; final java . lang . Thread IDENT_4 = new java . lang . Thread ( ) { @ org . apache . rya . streams . client . command . Override public void run ( ) { final org . apache . rya . streams . client . command . IDENT_5 command = new org . apache . rya . streams . client . command . METHOD_5 ( ) ; try { command . execute ( args ) ; } catch ( org . apache . rya . streams . client . IDENT_6 . IDENT_7 | org . apache . rya . streams . client . IDENT_6 . IDENT_8 e ) { } } } ; final org . eclipse . IDENT_9 . model . IDENT_10 IDENT_11 = org . eclipse . IDENT_9 . model . impl . IDENT_12 . getInstance ( ) ; final java . util . List < org . apache . rya . api . model . IDENT_13 > IDENT_14 = new java . util . ArrayList ( ) ; IDENT_14 . add ( new org . apache . rya . api . model . METHOD_6 ( IDENT_11 . METHOD_7 ( IDENT_11 . METHOD_8 ( STRING_2 1 ) , IDENT_11 . METHOD_8 ( STRING_5 ) , IDENT_11 . METHOD_8 ( STRING_2 4 ) ) , "a" ) ) ; IDENT_14 . add ( new org . apache . rya . api . model . METHOD_6 ( IDENT_11 . METHOD_7 ( IDENT_11 . METHOD_8 ( STRING_2 2 ) , IDENT_11 . METHOD_8 ( STRING_5 ) , IDENT_11 . METHOD_8 ( STRING_6 ) ) , "a" ) ) ; IDENT_14 . add ( new org . apache . rya . api . model . METHOD_6 ( IDENT_11 . METHOD_7 ( IDENT_11 . METHOD_8 ( STRING_7 ) , IDENT_11 . METHOD_8 ( STRING_5 ) , IDENT_11 . METHOD_8 ( STRING_6 ) ) , "a" ) ) ; final java . util . List < org . apache . rya . api . model . IDENT_15 > expected = new java . util . ArrayList ( ) ; org . eclipse . IDENT_9 . query . impl . IDENT_16 IDENT_17 = new org . eclipse . IDENT_9 . query . impl . METHOD_9 ( ) ; IDENT_17 . METHOD_10 ( STRING_2 5 , IDENT_11 . METHOD_8 ( STRING_2 1 ) ) ; IDENT_17 . METHOD_10 ( STRING_2 , IDENT_11 . METHOD_8 ( STRING_2 4 ) ) ; expected . add ( new org . apache . rya . api . model . METHOD_11 ( IDENT_17 , "a" ) ) ; IDENT_17 = new org . eclipse . IDENT_9 . query . impl . METHOD_9 ( ) ; IDENT_17 . METHOD_10 ( STRING_2 5 , IDENT_11 . METHOD_8 ( STRING_2 2 ) ) ; IDENT_17 . METHOD_10 ( STRING_2 , IDENT_11 . METHOD_8 ( STRING_6 ) ) ; expected . add ( new org . apache . rya . api . model . METHOD_11 ( IDENT_17 , "a" ) ) ; IDENT_17 = new org . eclipse . IDENT_9 . query . impl . METHOD_9 ( ) ; IDENT_17 . METHOD_10 ( STRING_2 5 , IDENT_11 . METHOD_8 ( STRING_7 ) ) ; IDENT_17 . METHOD_10 ( STRING_2 , IDENT_11 . METHOD_8 ( STRING_6 ) ) ; expected . add ( new org . apache . rya . api . model . METHOD_11 ( IDENT_17 , "a" ) ) ; final java . util . List < org . apache . rya . api . model . METHOD_11 > results ; try { IDENT_4 . start ( ) ; java . lang . Thread . sleep ( INT_0 ) ; final java . lang . String IDENT_18 = org . apache . rya . streams . kafka . IDENT_19 . METHOD_12 ( IDENT_3 ) ; final org . apache . rya . streams . api . IDENT_20 . IDENT_21 IDENT_22 = new org . apache . rya . streams . kafka . IDENT_20 . METHOD_13 ( METHOD_12 , IDENT_23 ) ; IDENT_22 . METHOD_14 ( IDENT_14 ) ; final java . lang . String IDENT_24 = org . apache . rya . streams . kafka . IDENT_19 . METHOD_15 ( IDENT_3 , IDENT_1 . METHOD_3 ( ) ) ; IDENT_25 . METHOD_16 ( com . google . common . collect . Lists . newArrayList ( IDENT_24 ) ) ; results = org . apache . rya . test . kafka . IDENT_26 . METHOD_17 ( INT_1 , 6 , 3 , IDENT_25 ) ; } finally { IDENT_4 . METHOD_18 ( ) ; IDENT_4 . join ( INT_2 ) ; } "<AssertPlaceHolder>" ; } METHOD_17 ( int , int , int , org . apache . kafka . IDENT_27 . consumer . IDENT_28 ) { METHOD_19 ( consumer ) ; final java . util . List < IDENT_29 > values = new java . util . ArrayList ( ) ; int i = 0 ; while ( ( ( values . size ( ) ) < IDENT_30 ) && ( i < IDENT_31 ) ) { for ( final org . apache . kafka . IDENT_27 . consumer . IDENT_32 < IDENT_33 , IDENT_29 > record : consumer . METHOD_20 ( IDENT_34 ) ) { values . add ( record . value ( ) ) ; } i ++ ; } return values ; }
org . junit . Assert . assertEquals ( expected , results ) 