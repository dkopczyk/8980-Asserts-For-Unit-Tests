METHOD_0 ( ) { org . IDENT_0 . core . IDENT_1 rs = org . IDENT_0 . test . junit . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_4 ) ; org . IDENT_5 . IDENT_6 . model . IDENT_7 d = org . IDENT_0 . parser . IDENT_8 . METHOD_2 ( STRING_0 ) ; d = org . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_11 . METHOD_3 ( d ) ; org . IDENT_0 . IDENT_12 . el . IDENT_13 tree = new org . IDENT_0 . IDENT_12 . el . METHOD_4 ( rs , d ) ; boolean IDENT_14 = false ; org . IDENT_0 . IDENT_12 . el . METHOD_4 IDENT_15 = null ; if ( IDENT_14 ) { int IDENT_16 = INT_0 ; long IDENT_17 = java . lang . System . METHOD_5 ( ) ; for ( int i = 0 ; i < IDENT_16 ; i ++ ) { IDENT_15 = tree . METHOD_6 ( ) ; } long IDENT_18 = ( java . lang . System . METHOD_5 ( ) ) - IDENT_17 ; System . out . println ( ( ( org . IDENT_0 . IDENT_9 . IDENT_19 . METHOD_7 ( ( IDENT_18 / IDENT_16 ) , true , true ) ) + STRING_1 ) ) ; } else { IDENT_15 = tree . METHOD_6 ( ) ; } org . IDENT_0 . IDENT_12 . el . IDENT_20 IDENT_21 = new org . IDENT_0 . IDENT_12 . el . METHOD_8 ( ) ; "<AssertPlaceHolder>" ; } compare ( java . lang . Class , java . lang . Class ) { return IDENT_22 . getName ( ) . compareTo ( IDENT_23 . getName ( ) ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_21 . compare ( tree , IDENT_15 ) ) == 0 ) ) 