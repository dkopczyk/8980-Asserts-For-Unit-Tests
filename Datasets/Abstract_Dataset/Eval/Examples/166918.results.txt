METHOD_0 ( ) { eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . logger . info ( STRING_0 ) ; eu . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 IDENT_4 = new eu . IDENT_0 . IDENT_1 . IDENT_4 . METHOD_1 ( ) ; IDENT_4 . METHOD_2 ( IDENT_6 . IDENT_7 ) ; java . lang . Thread . sleep ( INT_0 ) ; verify ( METHOD_3 ( METHOD_4 ( STRING_1 ) ) . METHOD_5 ( STRING_2 , equalTo ( STRING_3 ) ) . METHOD_5 ( STRING_4 , equalTo ( STRING_5 ) ) ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . logger . info ( STRING_6 ) ; "<AssertPlaceHolder>" ; eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . logger . info ( STRING_7 ) ; } METHOD_2 ( eu . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_6 ) { eu . IDENT_0 . IDENT_1 . IDENT_4 . METHOD_1 . logger . info ( STRING_8 ) ; switch ( IDENT_8 ) { case IDENT_9 : IDENT_10 . METHOD_2 ( ) ; break ; case IDENT_7 : IDENT_11 . METHOD_2 ( ) ; break ; case IDENT_12 : IDENT_10 . METHOD_2 ( ) ; IDENT_11 . METHOD_2 ( ) ; } eu . IDENT_0 . IDENT_1 . IDENT_4 . METHOD_1 . logger . info ( STRING_9 ) ; }
org . junit . Assert . assertTrue ( true ) 