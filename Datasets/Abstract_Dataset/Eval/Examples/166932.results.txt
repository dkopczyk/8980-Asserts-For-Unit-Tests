METHOD_0 ( ) { java . util . IDENT_0 < net . IDENT_1 . core . internal . IDENT_2 > IDENT_3 = new java . util . IDENT_0 < net . IDENT_1 . core . internal . IDENT_2 > ( ) ; net . IDENT_1 . core . internal . IDENT_2 IDENT_4 = org . easymock . EasyMock . METHOD_1 ( net . IDENT_1 . core . internal . IDENT_2 . class ) ; expect ( IDENT_4 . METHOD_2 ( IDENT_5 . IDENT_6 ) ) . andReturn ( true ) ; expect ( IDENT_4 . METHOD_3 ( IDENT_7 . IDENT_8 , INT_0 ) ) . METHOD_4 ( new java . io . IOException ( ) ) . METHOD_5 ( ) ; org . jboss . netty . channel . IDENT_9 IDENT_10 = METHOD_1 ( org . jboss . netty . channel . IDENT_9 . class ) ; expect ( IDENT_4 . METHOD_6 ( ) ) . andReturn ( IDENT_10 ) ; expect ( IDENT_10 . close ( ) ) . andReturn ( null ) ; IDENT_3 . add ( IDENT_4 ) ; replay ( IDENT_4 ) ; IDENT_11 . METHOD_7 ( IDENT_3 , IDENT_7 . IDENT_8 , INT_0 ) ; verify ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } verify ( boolean ) { assert ( IDENT_12 . next ) == ( this ) ; assert ( next . IDENT_12 ) == ( this ) ; assert ( METHOD_8 ( ) ) == IDENT_13 ; }
org . junit . Assert . assertTrue ( IDENT_3 . isEmpty ( ) ) 