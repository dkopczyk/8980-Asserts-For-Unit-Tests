METHOD_0 ( ) { try { f . METHOD_1 ( null ) ; } catch ( java . lang . IllegalArgumentException e ) { "<AssertPlaceHolder>" ; } } METHOD_1 ( IDENT_0 . rest . IDENT_1 . fixture . IDENT_2 . IDENT_3 ) { if ( runner == null ) { throw new java . lang . IllegalArgumentException ( STRING_0 ) ; } if ( IDENT_3 . IDENT_4 . equals ( runner ) ) { return new IDENT_0 . rest . IDENT_1 . fixture . METHOD_2 ( ) ; } if ( IDENT_3 . IDENT_5 . equals ( runner ) ) { return new IDENT_0 . rest . IDENT_1 . fixture . METHOD_3 ( ) ; } throw new java . lang . IllegalStateException ( ( ( STRING_1 + ( runner . name ( ) ) ) + STRING_2 ) ) ; }
org . junit . Assert . assertThat ( e . getMessage ( ) , org . hamcrest . CoreMatchers . is ( org . hamcrest . CoreMatchers . equalTo ( STRING_0 ) ) ) 