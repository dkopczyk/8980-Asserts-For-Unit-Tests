METHOD_0 ( ) { info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 query = mock ( info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 . class ) ; info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 IDENT_4 = mock ( info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 . class ) ; info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 IDENT_5 = mock ( info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 . class ) ; info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 IDENT_6 = mock ( info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 . class ) ; info . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_9 IDENT_10 = mock ( info . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_9 . class ) ; when ( info . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_11 . IDENT_12 . METHOD_1 ( STRING_0 ) ) . thenReturn ( IDENT_10 ) ; when ( info . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_7 . IDENT_13 . resolve ( IDENT_10 ) ) . thenReturn ( IDENT_4 ) . thenReturn ( IDENT_5 ) . thenReturn ( IDENT_6 ) ; java . lang . String token = STRING_1 ; when ( IDENT_14 . in ( query ) ) . thenReturn ( token ) ; METHOD_2 ( new info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . exception . METHOD_3 ( ) ) . when ( IDENT_15 ) . out ( IDENT_6 , token ) ; try { IDENT_16 . METHOD_4 ( query ) ; } catch ( info . IDENT_0 . IDENT_1 . database . interfaces . IDENT_17 . exception . IDENT_18 e ) { METHOD_5 ( times ( 3 ) ) ; info . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_11 . IDENT_12 . METHOD_1 ( STRING_0 ) ; METHOD_5 ( times ( 3 ) ) ; info . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_7 . IDENT_13 . resolve ( IDENT_10 ) ; verify ( IDENT_14 ) . in ( query ) ; verify ( IDENT_15 ) . out ( IDENT_6 , token ) ; return ; } "<AssertPlaceHolder>" ; } out ( info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 , T ) { if ( null == obj ) { throw new info . IDENT_0 . IDENT_1 . base . exception . IDENT_19 . METHOD_6 ( STRING_2 ) ; } obj . setValue ( IDENT_20 , in ) ; }
org . junit . Assert . assertTrue ( false ) 