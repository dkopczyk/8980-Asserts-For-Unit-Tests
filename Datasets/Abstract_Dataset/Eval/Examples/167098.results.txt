METHOD_0 ( ) { info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_2 . IDENT_3 IDENT_4 = mock ( info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_2 . IDENT_3 . class ) ; info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_2 . IDENT_3 IDENT_5 = mock ( info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_2 . IDENT_3 . class ) ; info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_2 . IDENT_3 IDENT_6 = mock ( info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_2 . IDENT_3 . class ) ; when ( IDENT_7 . METHOD_1 ( METHOD_2 ( IDENT_4 ) ) ) . thenReturn ( java . util . Collections . singletonList ( IDENT_5 ) ) ; when ( IDENT_7 . METHOD_3 ( METHOD_2 ( IDENT_5 ) , eq ( new info . IDENT_0 . IDENT_1 . base . path . Path ( STRING_0 ) ) ) ) . thenReturn ( IDENT_6 ) ; when ( IDENT_8 . getValue ( IDENT_9 ) ) . thenReturn ( STRING_1 ) ; when ( IDENT_8 . getValue ( IDENT_10 ) ) . thenReturn ( java . util . Collections . emptyList ( ) ) ; when ( info . IDENT_0 . IDENT_1 . IDENT_11 . IDENT_11 . IDENT_12 . resolve ( METHOD_2 ( IDENT_13 ) ) ) . thenReturn ( IDENT_14 ) . METHOD_4 ( info . IDENT_0 . IDENT_1 . IDENT_11 . IDENT_15 . exception . IDENT_16 . class ) ; when ( info . IDENT_0 . IDENT_1 . IDENT_11 . IDENT_11 . IDENT_12 . resolve ( METHOD_2 ( IDENT_17 ) , any ( ) , any ( ) ) ) . thenReturn ( IDENT_18 ) . thenReturn ( IDENT_19 ) . METHOD_4 ( info . IDENT_0 . IDENT_1 . IDENT_11 . IDENT_15 . exception . IDENT_16 . class ) ; when ( info . IDENT_0 . IDENT_1 . IDENT_11 . IDENT_11 . IDENT_12 . resolve ( METHOD_2 ( IDENT_20 ) , any ( ) ) ) . thenReturn ( IDENT_8 ) . thenReturn ( IDENT_21 ) . METHOD_4 ( info . IDENT_0 . IDENT_1 . IDENT_11 . IDENT_15 . exception . IDENT_16 . class ) ; when ( info . IDENT_0 . IDENT_1 . IDENT_11 . IDENT_11 . IDENT_12 . resolve ( METHOD_2 ( IDENT_22 ) , any ( ) , any ( ) , any ( ) ) ) . thenReturn ( IDENT_23 ) . thenReturn ( IDENT_23 ) . METHOD_4 ( info . IDENT_0 . IDENT_1 . IDENT_11 . IDENT_15 . exception . IDENT_16 . class ) ; METHOD_5 ( ( IDENT_24 ) -> { when ( IDENT_19 . METHOD_6 ( ) ) . thenReturn ( true ) ; return null ; } ) . when ( IDENT_19 ) . init ( any ( ) , any ( ) ) ; info . IDENT_0 . IDENT_1 . IDENT_25 . IDENT_25 . IDENT_26 IDENT_27 = new info . IDENT_0 . IDENT_1 . IDENT_25 . IDENT_25 . METHOD_7 ( ) ; info . IDENT_0 . IDENT_1 . IDENT_25 . interfaces . IDENT_28 . IDENT_29 status = IDENT_27 . METHOD_8 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_2 . IDENT_3 ) { try { info . IDENT_0 . IDENT_1 . IDENT_25 . IDENT_25 . IDENT_30 IDENT_31 = METHOD_9 ( ( STRING_2 + ( IDENT_32 . getPath ( ) ) ) ) ; if ( IDENT_31 . METHOD_6 ( ) ) { return IDENT_31 ; } java . util . Set < info . IDENT_0 . IDENT_1 . IDENT_25 . IDENT_25 . IDENT_30 > IDENT_33 = new java . util . HashSet ( ) ; for ( info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_2 . IDENT_3 path : fs . METHOD_1 ( IDENT_32 ) ) { info . IDENT_0 . IDENT_1 . IDENT_25 . IDENT_25 . IDENT_30 status = METHOD_10 ( path ) ; IDENT_33 . add ( status ) ; IDENT_33 . addAll ( status . METHOD_11 ( ) ) ; } for ( info . IDENT_0 . IDENT_1 . IDENT_25 . IDENT_25 . IDENT_30 IDENT_34 : IDENT_33 ) { if ( ! ( IDENT_34 . METHOD_6 ( ) ) ) { throw new info . IDENT_0 . IDENT_1 . IDENT_25 . interfaces . IDENT_28 . exceptions . METHOD_12 ( java . text . IDENT_35 . format ( STRING_3 , IDENT_34 . getId ( ) ) ) ; } IDENT_31 . METHOD_13 ( IDENT_34 ) ; } IDENT_31 . init ( IDENT_32 , info . IDENT_0 . IDENT_1 . IDENT_11 . IDENT_11 . IDENT_12 . resolve ( info . IDENT_0 . IDENT_1 . IDENT_11 . IDENT_36 . IDENT_37 . METHOD_14 ( STRING_4 ) ) ) ; METHOD_15 ( IDENT_31 ) ; for ( info . IDENT_0 . IDENT_1 . IDENT_25 . IDENT_25 . IDENT_30 status : IDENT_33 ) { status . load ( ) ; } IDENT_31 . load ( ) ; return IDENT_31 ; } catch ( java . io . IOException | info . IDENT_0 . IDENT_1 . IDENT_25 . interfaces . IDENT_28 . exceptions . METHOD_12 | info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_38 . exception . IDENT_39 | info . IDENT_0 . IDENT_1 . IDENT_11 . IDENT_15 . exception . IDENT_16 e ) { throw new info . IDENT_0 . IDENT_1 . IDENT_25 . interfaces . IDENT_28 . exceptions . METHOD_12 ( java . text . IDENT_35 . format ( STRING_5 , IDENT_32 . getPath ( ) ) , e ) ; } }
org . junit . Assert . assertSame ( IDENT_18 , status ) 