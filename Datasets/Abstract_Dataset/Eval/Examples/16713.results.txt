METHOD_0 ( ) { final org . apache . rya . streams . IDENT_0 . IDENT_1 source = new org . apache . rya . streams . IDENT_0 . kafka . METHOD_1 ( kafka . METHOD_2 ( ) , java . lang . Integer . METHOD_3 ( kafka . METHOD_4 ( ) ) , com . google . common . util . concurrent . IDENT_2 . IDENT_3 . METHOD_5 ( 0 , 100 , TimeUnit . IDENT_4 ) ) ; try { source . METHOD_6 ( ) ; final java . util . concurrent . atomic . IDENT_5 IDENT_6 = new java . util . concurrent . atomic . METHOD_7 ( false ) ; final org . apache . rya . streams . IDENT_0 . IDENT_1 . IDENT_7 listener = new org . apache . rya . streams . IDENT_0 . IDENT_1 . METHOD_8 ( ) { @ org . apache . rya . streams . IDENT_0 . kafka . Override public void METHOD_9 ( final java . lang . String IDENT_8 , final org . apache . rya . streams . api . IDENT_9 . IDENT_10 log ) { IDENT_6 . set ( true ) ; } @ org . apache . rya . streams . IDENT_0 . kafka . Override public void METHOD_10 ( final java . lang . String IDENT_8 ) { IDENT_6 . set ( true ) ; } } ; source . METHOD_11 ( listener ) ; source . METHOD_12 ( listener ) ; final java . lang . String IDENT_11 = java . util . UUID . METHOD_13 ( ) . toString ( ) ; final java . lang . String IDENT_12 = org . apache . rya . streams . kafka . IDENT_13 . METHOD_14 ( IDENT_11 ) ; kafka . METHOD_15 ( IDENT_12 ) ; java . lang . Thread . sleep ( INT_0 ) ; "<AssertPlaceHolder>" ; } finally { source . METHOD_16 ( ) ; } } get ( ) { if ( ( metadata ) == null ) { metadata = METHOD_17 ( ) ; } return metadata ; }
org . junit . Assert . assertFalse ( IDENT_6 . get ( ) ) 