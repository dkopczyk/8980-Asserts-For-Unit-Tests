METHOD_0 ( ) { info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 IDENT_4 = mock ( info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 . class ) ; info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 message = mock ( info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 . class ) ; when ( IDENT_4 . getValue ( new info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . METHOD_1 ( STRING_0 ) ) ) . thenReturn ( message ) ; info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 IDENT_6 = new info . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . METHOD_2 ( ( ( info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 ) ( null ) ) ) ; ( ( info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 . IDENT_10 ) ( IDENT_6 ) ) . init ( IDENT_4 ) ; info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 result = ( ( info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 . IDENT_10 ) ( IDENT_6 ) ) . METHOD_3 ( new info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . METHOD_1 ( STRING_0 ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_11 . IDENT_12 ) { try { return ( ( info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 ) ( IDENT_13 . getValue ( IDENT_14 ) ) ) ; } catch ( info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . exception . IDENT_15 e ) { throw new info . IDENT_0 . IDENT_1 . base . exception . IDENT_16 . METHOD_4 ( STRING_1 , e ) ; } }
org . junit . Assert . assertSame ( result , message ) 