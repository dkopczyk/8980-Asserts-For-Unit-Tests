METHOD_0 ( ) { info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 description = mock ( info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 . class ) ; java . util . List < info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 > IDENT_4 = new java . util . METHOD_1 ( ) ; java . util . List < info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 > IDENT_5 = new java . util . METHOD_1 ( ) ; java . lang . Object IDENT_6 = STRING_0 ; info . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_9 IDENT_10 = mock ( info . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_9 . class ) ; info . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_9 IDENT_11 = mock ( info . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_9 . class ) ; info . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_12 IDENT_13 = mock ( info . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_12 . class ) ; info . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_12 IDENT_14 = mock ( info . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_12 . class ) ; info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 IDENT_15 = mock ( info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 . class ) ; info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 IDENT_16 = mock ( info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 . class ) ; when ( description . getValue ( METHOD_2 ( info . IDENT_0 . IDENT_1 . IDENT_17 . IDENT_17 . IDENT_18 . resolve ( IDENT_19 , STRING_1 ) ) ) ) . thenReturn ( IDENT_4 ) ; when ( description . getValue ( METHOD_2 ( info . IDENT_0 . IDENT_1 . IDENT_17 . IDENT_17 . IDENT_18 . resolve ( IDENT_19 , STRING_2 ) ) ) ) . thenReturn ( IDENT_5 ) ; IDENT_4 . add ( IDENT_15 ) ; IDENT_4 . add ( IDENT_16 ) ; info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 IDENT_20 = mock ( info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 . class ) ; when ( IDENT_20 . getValue ( METHOD_2 ( info . IDENT_0 . IDENT_1 . IDENT_17 . IDENT_17 . IDENT_18 . resolve ( IDENT_19 , STRING_3 ) ) ) ) . thenReturn ( info . IDENT_0 . IDENT_1 . IDENT_8 . IDENT_21 . Exception . class . METHOD_3 ( ) ) ; when ( IDENT_20 . getValue ( METHOD_2 ( info . IDENT_0 . IDENT_1 . IDENT_17 . IDENT_17 . IDENT_18 . resolve ( IDENT_19 , STRING_0 ) ) ) ) . thenReturn ( STRING_4 ) ; info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 IDENT_22 = mock ( info . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_2 . IDENT_3 . class ) ; when ( IDENT_22 . getValue ( METHOD_2 ( info . IDENT_0 . IDENT_1 . IDENT_17 . IDENT_17 . IDENT_18 . resolve ( IDENT_19 , STRING_3 ) ) ) ) . thenReturn ( info . IDENT_0 . IDENT_1 . IDENT_8 . IDENT_21 . IDENT_23 . class . METHOD_3 ( ) ) ; when ( IDENT_22 . getValue ( METHOD_2 ( info . IDENT_0 . IDENT_1 . IDENT_17 . IDENT_17 . IDENT_18 . resolve ( IDENT_19 , STRING_0 ) ) ) ) . thenReturn ( STRING_5 ) ; when ( IDENT_24 . resolve ( STRING_6 ) ) . thenReturn ( IDENT_10 ) ; when ( IDENT_24 . resolve ( STRING_7 ) ) . thenReturn ( IDENT_11 ) ; IDENT_5 . add ( IDENT_20 ) ; IDENT_5 . add ( IDENT_22 ) ; when ( info . IDENT_0 . IDENT_1 . IDENT_17 . IDENT_17 . IDENT_18 . resolve ( METHOD_2 ( IDENT_25 ) , eq ( STRING_4 ) ) ) . thenReturn ( STRING_6 ) ; when ( info . IDENT_0 . IDENT_1 . IDENT_17 . IDENT_17 . IDENT_18 . resolve ( METHOD_2 ( IDENT_25 ) , eq ( STRING_5 ) ) ) . thenReturn ( STRING_7 ) ; when ( info . IDENT_0 . IDENT_1 . IDENT_17 . IDENT_17 . IDENT_18 . resolve ( METHOD_2 ( IDENT_26 ) , METHOD_2 ( IDENT_15 ) ) ) . thenReturn ( STRING_8 ) ; when ( info . IDENT_0 . IDENT_1 . IDENT_17 . IDENT_17 . IDENT_18 . resolve ( METHOD_2 ( IDENT_26 ) , METHOD_2 ( IDENT_16 ) ) ) . thenReturn ( STRING_9 ) ; when ( IDENT_27 . route ( STRING_8 ) ) . thenReturn ( IDENT_13 ) ; when ( IDENT_27 . route ( STRING_9 ) ) . thenReturn ( IDENT_14 ) ; info . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_9 IDENT_28 = new info . IDENT_0 . IDENT_1 . IDENT_8 . IDENT_21 . METHOD_4 ( ) . resolve ( IDENT_6 , description , IDENT_24 , IDENT_27 ) ; "<AssertPlaceHolder>" ; } resolve ( info . IDENT_0 . IDENT_1 . IDENT_17 . IDENT_29 . IDENT_30 , java . lang . Object [ ] ) { if ( key == null ) { throw new info . IDENT_0 . IDENT_1 . IDENT_17 . IDENT_31 . exception . METHOD_5 ( STRING_10 ) ; } info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_32 . IDENT_33 strategy = storage . get ( key ) ; if ( strategy == null ) { throw new info . IDENT_0 . IDENT_1 . IDENT_17 . IDENT_31 . exception . METHOD_5 ( ( ( STRING_11 + key ) + STRING_12 ) ) ; } try { return ( ( T ) ( strategy . resolve ( args ) ) ) ; } catch ( java . lang . Exception e ) { throw new info . IDENT_0 . IDENT_1 . IDENT_17 . IDENT_31 . exception . METHOD_5 ( ( STRING_13 + key ) , e ) ; } }
org . junit . Assert . assertNotNull ( IDENT_28 ) 