METHOD_0 ( ) { final org . apache . rya . shell . IDENT_0 IDENT_1 = new org . apache . rya . shell . METHOD_1 ( ) ; final org . apache . rya . api . client . accumulo . IDENT_2 IDENT_3 = new org . apache . rya . api . client . accumulo . METHOD_2 ( "" , new char [ ] { } , STRING_0 , "" ) ; IDENT_1 . METHOD_3 ( IDENT_3 , mock ( org . apache . rya . api . client . IDENT_4 . class ) ) ; IDENT_1 . METHOD_4 ( STRING_1 ) ; final java . lang . String IDENT_5 = new org . apache . rya . shell . METHOD_5 ( IDENT_1 ) . METHOD_6 ( ) ; final java . lang . String expected = STRING_2 ; "<AssertPlaceHolder>" ; } METHOD_6 ( ) { final org . apache . rya . shell . METHOD_1 . IDENT_6 state = IDENT_1 . METHOD_7 ( ) ; java . lang . String IDENT_7 = STRING_3 ; if ( state . METHOD_8 ( ) . METHOD_9 ( ) ) { if ( ( state . METHOD_8 ( ) . get ( ) ) == ( org . apache . rya . shell . METHOD_1 . IDENT_8 . IDENT_9 ) ) { IDENT_7 = state . METHOD_10 ( ) . get ( ) . METHOD_11 ( ) ; } else if ( ( state . METHOD_8 ( ) . get ( ) ) == ( org . apache . rya . shell . METHOD_1 . IDENT_8 . IDENT_10 ) ) { IDENT_7 = state . METHOD_12 ( ) . get ( ) . METHOD_13 ( ) ; } else { throw new java . lang . IllegalStateException ( STRING_4 ) ; } } switch ( state . METHOD_14 ( ) ) { case IDENT_11 : return STRING_5 ; case IDENT_12 : return java . lang . String . format ( STRING_6 , IDENT_7 ) ; case IDENT_13 : return java . lang . String . format ( STRING_7 , IDENT_7 , state . METHOD_15 ( ) . METHOD_16 ( STRING_3 ) ) ; default : return STRING_5 ; } }
org . junit . Assert . assertEquals ( expected , IDENT_5 ) 