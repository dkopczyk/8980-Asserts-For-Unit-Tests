METHOD_0 ( ) { final org . apache . rya . streams . api . IDENT_0 IDENT_1 = mock ( org . apache . rya . streams . api . IDENT_0 . class ) ; final org . apache . rya . streams . api . IDENT_2 . IDENT_3 METHOD_0 = mock ( org . apache . rya . streams . api . IDENT_2 . IDENT_3 . class ) ; when ( IDENT_1 . METHOD_1 ( ) ) . thenReturn ( METHOD_0 ) ; final org . apache . rya . shell . IDENT_4 state = new org . apache . rya . shell . METHOD_2 ( ) ; state . METHOD_3 ( mock ( org . apache . rya . api . client . accumulo . IDENT_5 . class ) , mock ( org . apache . rya . api . client . IDENT_6 . class ) ) ; state . METHOD_4 ( STRING_0 ) ; state . METHOD_5 ( IDENT_1 ) ; final org . apache . rya . shell . IDENT_7 commands = new org . apache . rya . shell . METHOD_6 ( state , mock ( org . apache . rya . shell . util . IDENT_8 . class ) , mock ( org . apache . rya . shell . util . IDENT_9 . class ) ) ; final java . util . UUID IDENT_10 = java . util . UUID . METHOD_7 ( ) ; final java . lang . String message = commands . METHOD_0 ( IDENT_10 . toString ( ) ) ; verify ( METHOD_0 ) . delete ( eq ( IDENT_10 ) ) ; final java . lang . String expected = STRING_1 ; "<AssertPlaceHolder>" ; } delete ( org . apache . rya . api . domain . IDENT_11 ) { METHOD_8 ( subject ) ; try { final org . bson . Document IDENT_12 = IDENT_13 . METHOD_9 ( IDENT_14 ) . METHOD_10 ( org . apache . rya . indexing . IDENT_15 . IDENT_13 . IDENT_16 . IDENT_17 ) . METHOD_11 ( org . apache . rya . indexing . IDENT_15 . IDENT_13 . IDENT_16 . METHOD_12 ( subject ) ) ; return IDENT_12 != null ; } catch ( final com . mongodb . IDENT_18 e ) { throw new org . apache . rya . indexing . IDENT_15 . IDENT_13 . METHOD_13 ( ( ( STRING_2 + ( subject . METHOD_14 ( ) ) ) + STRING_3 ) , e ) ; } }
org . junit . Assert . assertEquals ( expected , message ) 