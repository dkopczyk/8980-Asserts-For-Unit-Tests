METHOD_0 ( ) { final org . apache . rya . streams . api . IDENT_0 IDENT_1 = mock ( org . apache . rya . streams . api . IDENT_0 . class ) ; final org . apache . rya . streams . api . IDENT_2 . IDENT_3 IDENT_4 = mock ( org . apache . rya . streams . api . IDENT_2 . IDENT_3 . class ) ; when ( IDENT_1 . METHOD_1 ( ) ) . thenReturn ( IDENT_4 ) ; final java . util . UUID IDENT_5 = java . util . UUID . METHOD_2 ( STRING_0 ) ; final org . apache . rya . streams . api . entity . IDENT_6 query = new org . apache . rya . streams . api . entity . METHOD_3 ( IDENT_5 , STRING_1 , true , false ) ; when ( IDENT_4 . METHOD_4 ( IDENT_5 ) ) . thenReturn ( java . util . Optional . of ( query ) ) ; final org . apache . rya . shell . IDENT_7 state = new org . apache . rya . shell . METHOD_5 ( ) ; state . METHOD_6 ( mock ( org . apache . rya . api . client . accumulo . IDENT_8 . class ) , mock ( org . apache . rya . api . client . IDENT_9 . class ) ) ; state . METHOD_7 ( STRING_2 ) ; state . METHOD_8 ( IDENT_1 ) ; final org . apache . rya . shell . IDENT_10 commands = new org . apache . rya . shell . METHOD_9 ( state , mock ( org . apache . rya . shell . util . IDENT_11 . class ) , mock ( org . apache . rya . shell . util . IDENT_12 . class ) ) ; final java . lang . String message = commands . METHOD_0 ( IDENT_5 . toString ( ) ) ; final java . lang . String expected = STRING_3 + ( ( ( ( ( STRING_4 + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) + STRING_9 ) ; "<AssertPlaceHolder>" ; } toString ( ) { if ( ( IDENT_13 ) != null ) { return IDENT_13 . toString ( ) ; } else { return IDENT_14 . toString ( ) ; } }
org . junit . Assert . assertEquals ( expected , message ) 