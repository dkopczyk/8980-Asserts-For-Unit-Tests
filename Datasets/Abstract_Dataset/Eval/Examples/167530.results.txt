METHOD_0 ( ) { io . IDENT_0 . IDENT_1 . IDENT_2 IDENT_1 = new io . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; final java . util . List < java . lang . Object > IDENT_3 = new java . util . ArrayList < java . lang . Object > ( ) ; io . IDENT_0 . IDENT_1 . METHOD_1 . IDENT_4 IDENT_5 = new io . IDENT_0 . IDENT_1 . METHOD_1 . METHOD_2 ( ) { @ io . IDENT_0 . IDENT_1 . Override public void call ( java . lang . Object OP_0 args ) { IDENT_3 . add ( STRING_0 ) ; } } ; io . IDENT_0 . IDENT_1 . METHOD_1 . METHOD_2 IDENT_6 = new io . IDENT_0 . IDENT_1 . METHOD_1 . METHOD_2 ( ) { @ io . IDENT_0 . IDENT_1 . Override public void call ( java . lang . Object OP_0 args ) { IDENT_3 . add ( STRING_1 ) ; } } ; IDENT_1 . METHOD_3 ( "foo" , IDENT_5 ) ; IDENT_1 . METHOD_3 ( "bar" , IDENT_6 ) ; IDENT_1 . METHOD_4 ( "foo" ) ; IDENT_1 . METHOD_4 ( "bar" ) ; IDENT_1 . METHOD_5 ( ) ; IDENT_1 . METHOD_4 ( "foo" ) ; IDENT_1 . METHOD_4 ( "bar" ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { io . IDENT_0 . IDENT_1 . METHOD_1 IDENT_1 = new io . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; final java . util . List < java . lang . Object > IDENT_3 = new java . util . ArrayList < java . lang . Object > ( ) ; io . IDENT_0 . IDENT_1 . METHOD_1 . METHOD_2 IDENT_5 = new io . IDENT_0 . IDENT_1 . METHOD_1 . METHOD_2 ( ) { @ io . IDENT_0 . IDENT_1 . Override public void call ( java . lang . Object OP_0 args ) { IDENT_3 . add ( STRING_0 ) ; } } ; io . IDENT_0 . IDENT_1 . METHOD_1 . METHOD_2 IDENT_6 = new io . IDENT_0 . IDENT_1 . METHOD_1 . METHOD_2 ( ) { @ io . IDENT_0 . IDENT_1 . Override public void call ( java . lang . Object OP_0 args ) { IDENT_3 . add ( STRING_1 ) ; } } ; IDENT_1 . METHOD_3 ( "foo" , IDENT_5 ) ; IDENT_1 . METHOD_3 ( "foo" , IDENT_6 ) ; IDENT_1 . METHOD_5 ( "foo" , IDENT_6 ) ; IDENT_1 . METHOD_4 ( "foo" ) ; org . junit . Assert . assertThat ( IDENT_3 . toArray ( ) , org . hamcrest . CoreMatchers . is ( new java . lang . Object [ ] { STRING_0 } ) ) ; }
org . junit . Assert . assertThat ( IDENT_3 . toArray ( ) , org . hamcrest . CoreMatchers . is ( new java . lang . Object [ ] { STRING_0 , STRING_1 } ) ) 