METHOD_0 ( ) { java . util . List < io . IDENT_0 . IDENT_1 . IDENT_2 > expected = asList ( new io . IDENT_0 . IDENT_1 . METHOD_1 ( 1 , 3 , INT_0 , INT_1 , 0 ) , new io . IDENT_0 . IDENT_1 . METHOD_1 ( 1 , 4 , INT_2 , 10 , 0 ) , new io . IDENT_0 . IDENT_1 . METHOD_1 ( 1 , 5 , INT_3 , INT_4 , 0 ) , new io . IDENT_0 . IDENT_1 . METHOD_1 ( 1 , 6 , 4 , INT_5 , 0 ) , new io . IDENT_0 . IDENT_1 . METHOD_1 ( 1 , 7 , 0 , 15 , 5 ) , new io . IDENT_0 . IDENT_1 . METHOD_1 ( 1 , 8 , 0 , INT_6 , 20 ) , new io . IDENT_0 . IDENT_1 . METHOD_1 ( 1 , 9 , 0 , 12 , INT_7 ) , new io . IDENT_0 . IDENT_1 . METHOD_1 ( 1 , 10 , 0 , INT_8 , INT_9 ) ) ; METHOD_2 ( io . IDENT_0 . IDENT_1 . IDENT_3 . METHOD_3 ( IDENT_1 , IDENT_4 , new io . IDENT_0 . IDENT_1 . METHOD_4 ( 1 , 3 , INT_0 , INT_1 ) , new io . IDENT_0 . IDENT_1 . METHOD_4 ( 1 , 4 , INT_2 , 10 ) , new io . IDENT_0 . IDENT_1 . METHOD_4 ( 1 , 5 , INT_3 , INT_4 ) , new io . IDENT_0 . IDENT_1 . METHOD_4 ( 1 , 6 , 4 , INT_5 ) ) , io . IDENT_0 . IDENT_1 . IDENT_3 . METHOD_3 ( IDENT_1 , IDENT_4 , new io . IDENT_0 . IDENT_1 . METHOD_5 ( 1 , 7 , 15 , 5 ) , new io . IDENT_0 . IDENT_1 . METHOD_5 ( 1 , 8 , INT_6 , 20 ) , new io . IDENT_0 . IDENT_1 . METHOD_5 ( 1 , 9 , 12 , INT_7 ) , new io . IDENT_0 . IDENT_1 . METHOD_5 ( 1 , 10 , INT_8 , INT_9 ) ) ) ; java . util . List < io . IDENT_0 . IDENT_1 . METHOD_1 > list = METHOD_2 ( IDENT_1 . METHOD_6 ( asList ( STRING_0 , STRING_1 ) , asList ( STRING_2 , STRING_3 , STRING_4 ) , METHOD_7 ( ) , io . IDENT_0 . IDENT_1 . METHOD_1 . class , IDENT_5 ) . toList ( ) ) ; "<AssertPlaceHolder>" ; } toList ( ) { System . out . println ( STRING_5 ) ; io . IDENT_0 . IDENT_6 . IDENT_7 . toList ( io . IDENT_0 . IDENT_6 . IDENT_8 . of ( 1 ) , io . IDENT_0 . IDENT_6 . IDENT_8 . of ( 2 ) , io . IDENT_0 . IDENT_6 . IDENT_8 . of ( 3 ) , io . IDENT_0 . IDENT_6 . IDENT_8 . of ( 4 ) , io . IDENT_0 . IDENT_6 . IDENT_8 . of ( 5 ) , io . IDENT_0 . IDENT_6 . IDENT_8 . of ( 6 ) ) . METHOD_8 ( ( list ) -> System . out . println ( ( ( ( STRING_6 + ( list . size ( ) ) ) + STRING_7 ) + list ) ) ) ; System . out . println ( ) ; }
org . junit . Assert . assertEquals ( expected , list ) 