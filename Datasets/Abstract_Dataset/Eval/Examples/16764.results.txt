METHOD_0 ( ) { java . util . IDENT_0 . METHOD_1 ( java . util . IDENT_0 . METHOD_2 ( STRING_0 ) ) ; final org . apache . rya . api . instance . IDENT_1 IDENT_2 = . METHOD_3 ( new METHOD_4 ( true ) ) org . apache . rya . api . instance . IDENT_1 . builder ( ) . METHOD_5 ( STRING_1 ) . METHOD_6 ( STRING_1 2 ) . METHOD_7 ( new org . apache . rya . api . instance . IDENT_1 . METHOD_8 ( false ) ) . METHOD_9 ( new org . apache . rya . api . instance . IDENT_1 . METHOD_10 ( true ) ) . METHOD_11 ( new org . apache . rya . api . instance . IDENT_1 . METHOD_12 ( true ) ) . METHOD_13 ( org . apache . rya . api . instance . IDENT_1 . IDENT_3 . builder ( ) . METHOD_14 ( true ) ) . METHOD_15 ( new org . apache . rya . api . instance . IDENT_1 . METHOD_16 ( com . google . common . base . Optional . METHOD_17 ( ) ) ) . METHOD_18 ( new org . apache . rya . api . instance . IDENT_1 . METHOD_19 ( com . google . common . base . Optional . METHOD_17 ( ) ) ) . build ( ) ; final java . lang . String IDENT_4 = new org . apache . rya . shell . util . METHOD_20 ( ) . format ( IDENT_5 . IDENT_6 , IDENT_2 ) ; final java . lang . String expected = STRING_2 + ( ( ( ( ( ( ( ( ( ( STRING_1 1 + STRING_1 0 ) + STRING_3 ) + STRING_4 + STRING_5 + STRING_6 ) + STRING_5 ) + STRING_7 ) + STRING_5 ) + STRING_1 3 ) + STRING_5 ) + STRING_8 ) + STRING_9 ) ; "<AssertPlaceHolder>" ; } format ( org . apache . rya . shell . IDENT_7 . IDENT_5 , org . apache . rya . api . instance . IDENT_1 ) { METHOD_21 ( IDENT_2 ) ; final java . lang . StringBuilder report = new java . lang . StringBuilder ( ) ; report . append ( STRING_2 ) ; report . append ( STRING_3 4 ) . append ( IDENT_2 . METHOD_22 ( ) ) . append ( STRING_2 1 ) ; report . append ( STRING_2 2 ) . append ( IDENT_2 . METHOD_23 ( ) ) . append ( STRING_2 1 ) ; if ( IDENT_8 == ( org . apache . rya . shell . IDENT_7 . IDENT_5 . IDENT_9 ) ) { report . append ( STRING_3 0 ) . append ( com . google . common . base . IDENT_10 . METHOD_24 ( STRING_10 ) . join ( IDENT_2 . METHOD_25 ( ) ) ) . append ( STRING_2 1 ) ; } report . append ( STRING_3 ) ; if ( IDENT_8 == ( org . apache . rya . shell . IDENT_7 . IDENT_5 . IDENT_9 ) ) { report . append ( STRING_3 9 ) ; report . append ( STRING_2 5 ) . append ( IDENT_2 . METHOD_26 ( ) . METHOD_27 ( ) ) . append ( STRING_2 1 ) ; } report . append ( STRING_4 ) ; report . append ( STRING_2 5 ) . append ( IDENT_2 . METHOD_28 ( ) . METHOD_27 ( ) ) . append ( STRING_2 1 ) ; report . append ( STRING_2 0 ) ; report . append ( STRING_2 5 ) . append ( IDENT_2 . METHOD_29 ( ) . METHOD_27 ( ) ) . append ( STRING_2 1 ) ; report . append ( STRING_7 ) ; report . append ( STRING_2 5 ) . append ( IDENT_2 . METHOD_30 ( ) . METHOD_27 ( ) ) . append ( STRING_2 1 ) ; report . append ( STRING_3 3 ) ; final org . apache . rya . api . instance . IDENT_1 . IDENT_3 IDENT_11 = IDENT_2 . METHOD_31 ( ) ; report . append ( STRING_2 5 ) . append ( IDENT_11 . METHOD_27 ( ) ) . append ( STRING_2 1 ) ; if ( IDENT_11 . METHOD_27 ( ) ) { if ( IDENT_11 . METHOD_32 ( ) . METHOD_33 ( ) ) { final java . lang . String IDENT_12 = IDENT_11 . METHOD_32 ( ) . get ( ) . METHOD_34 ( ) ; report . append ( STRING_3 8 ) . append ( IDENT_12 ) . append ( STRING_2 1 ) ; } final com . google . common . collect . ImmutableMap < java . lang . String , org . apache . rya . api . instance . IDENT_1 . IDENT_3 . IDENT_13 > IDENT_14 = IDENT_11 . METHOD_35 ( ) ; report . append ( STRING_3 1 ) ; if ( IDENT_14 . isEmpty ( ) ) { report . append ( STRING_3 5 ) ; } else { for ( final org . apache . rya . api . instance . IDENT_1 . IDENT_3 . IDENT_13 IDENT_15 : IDENT_14 . values ( ) ) { report . append ( STRING_11 ) . append ( IDENT_15 . getId ( ) ) . append ( STRING_2 1 ) ; final java . lang . String IDENT_16 = format ( IDENT_15 . METHOD_36 ( ) , STRING_3 7 ) ; report . append ( STRING_12 ) . append ( IDENT_16 ) . append ( STRING_2 1 ) ; final java . lang . String IDENT_17 = format ( IDENT_15 . METHOD_37 ( ) , STRING_2 4 ) ; report . append ( STRING_2 3 ) . append ( IDENT_17 ) . append ( STRING_2 1 ) ; } } if ( IDENT_8 == ( org . apache . rya . shell . IDENT_7 . IDENT_5 . IDENT_9 ) ) { report . append ( STRING_13 ) ; report . append ( STRING_3 6 ) ; final java . lang . String IDENT_18 = format ( IDENT_2 . METHOD_38 ( ) . METHOD_39 ( ) , STRING_2 4 ) ; report . append ( STRING_14 ) . append ( IDENT_18 ) . append ( STRING_2 1 ) ; report . append ( STRING_15 ) ; final java . lang . String IDENT_19 = format ( IDENT_2 . METHOD_40 ( ) . METHOD_39 ( ) , STRING_2 4 ) ; report . append ( STRING_3 2 ) . append ( IDENT_19 ) . append ( STRING_2 1 ) ; } } return report . toString ( ) ; }
org . junit . Assert . assertEquals ( expected , IDENT_4 ) 