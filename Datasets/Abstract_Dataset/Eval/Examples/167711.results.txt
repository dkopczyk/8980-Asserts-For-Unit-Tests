METHOD_0 ( ) { java . lang . IDENT_0 IDENT_1 = java . lang . Thread . METHOD_1 ( ) . METHOD_2 ( ) ; io . IDENT_2 . loader . IDENT_3 IDENT_4 = io . IDENT_2 . loader . IDENT_3 . create ( io . IDENT_2 . IDENT_5 . IDENT_6 . METHOD_3 ( ) , java . util . concurrent . IDENT_7 . METHOD_4 ( ) , IDENT_1 , STRING_0 ) ; IDENT_4 . start ( ) ; io . IDENT_2 . IDENT_5 . IDENT_6 . METHOD_3 ( ) . run ( ) ; io . IDENT_2 . loader . IDENT_8 IDENT_9 = ( name ) -> name . equals ( STRING_1 ) ? io . IDENT_2 . IDENT_10 . IDENT_11 . of ( io . IDENT_2 . IDENT_12 . IDENT_13 . METHOD_5 ( io . IDENT_2 . http . IDENT_14 . IDENT_15 ) ) : io . IDENT_2 . IDENT_10 . IDENT_11 . METHOD_6 ( new java . nio . file . METHOD_7 ( name ) ) ; io . IDENT_2 . http . IDENT_16 IDENT_17 = io . IDENT_2 . http . IDENT_16 . create ( io . IDENT_2 . IDENT_5 . IDENT_6 . METHOD_3 ( ) , IDENT_9 . filter ( IDENT_4 :: contains ) ) ; io . IDENT_2 . http . IDENT_18 response = METHOD_8 ( IDENT_17 . METHOD_9 ( io . IDENT_2 . http . IDENT_19 . get ( STRING_2 ) ) ) ; io . IDENT_2 . IDENT_12 . IDENT_20 body = METHOD_8 ( response . METHOD_10 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_11 ( java . nio . IDENT_21 . IDENT_22 ) { java . lang . String string = getString ( IDENT_21 ) ; METHOD_12 ( ) ; return string ; }
org . junit . Assert . assertEquals ( io . IDENT_2 . http . IDENT_14 . IDENT_15 , body . METHOD_11 ( io . IDENT_2 . http . UTF_8 ) ) 