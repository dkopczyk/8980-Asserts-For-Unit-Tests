METHOD_0 ( ) { java . lang . IDENT_0 [ ] IDENT_1 = new java . lang . IDENT_0 [ ] { new java . lang . METHOD_1 ( STRING_0 , STRING_1 , STRING_2 , 1 ) , new java . lang . METHOD_1 ( STRING_3 , STRING_4 , STRING_5 , 2 ) } ; java . lang . Throwable IDENT_2 = new java . lang . Throwable ( STRING_6 ) ; IDENT_2 . METHOD_2 ( IDENT_1 ) ; org . apache . logging . log4j . core . impl . IDENT_3 IDENT_4 = new org . apache . logging . log4j . core . impl . METHOD_3 ( IDENT_2 ) ; org . IDENT_5 . IDENT_6 . model . IDENT_7 IDENT_8 = org . IDENT_5 . IDENT_6 . model . IDENT_7 . METHOD_4 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( org . IDENT_5 . IDENT_6 . model . IDENT_7 , java . lang . Throwable ) { if ( ! ( IDENT_8 . METHOD_6 ( ) . equals ( IDENT_9 . getMessage ( ) ) ) ) { return false ; } for ( int i = 0 ; i < ( IDENT_8 . METHOD_7 ( ) . length ) ; i ++ ) { java . lang . METHOD_1 el = IDENT_9 . METHOD_8 ( ) [ i ] ; org . IDENT_5 . IDENT_6 . model . IDENT_10 IDENT_11 = IDENT_8 . METHOD_7 ( ) [ i ] ; if ( ! ( org . IDENT_5 . IDENT_6 . model . IDENT_12 . METHOD_9 ( IDENT_11 , el ) ) ) { return false ; } } return true ; }
org . junit . Assert . assertTrue ( org . IDENT_5 . IDENT_6 . model . IDENT_12 . METHOD_5 ( IDENT_8 , IDENT_4 ) ) 