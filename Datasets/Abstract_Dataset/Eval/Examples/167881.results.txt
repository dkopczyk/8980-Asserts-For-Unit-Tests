METHOD_0 ( ) { co . IDENT_0 . IDENT_1 . mapreduce . lib . db . IDENT_2 IDENT_3 = new co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_1 ( 0 , java . sql . IDENT_4 . IDENT_5 , STRING_0 ) ; java . util . ArrayList < co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_1 > IDENT_6 = new java . util . ArrayList < co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_1 > ( ) ; IDENT_6 . add ( IDENT_3 ) ; co . IDENT_0 . IDENT_1 . avro . IDENT_7 IDENT_8 = new co . IDENT_0 . IDENT_1 . avro . METHOD_2 ( ) ; org . apache . avro . Schema schema = IDENT_8 . METHOD_3 ( IDENT_6 ) ; org . apache . avro . Schema IDENT_9 = org . apache . avro . Schema . METHOD_4 ( STRING_1 , null , null , false ) ; org . apache . avro . Schema . Field IDENT_10 = new org . apache . avro . Schema . Field ( STRING_2 , org . apache . avro . Schema . create ( Schema . Type . IDENT_11 ) , null , null ) ; java . util . ArrayList < org . apache . avro . Schema . Field > fields = new java . util . ArrayList < org . apache . avro . Schema . Field > ( ) ; fields . add ( IDENT_10 ) ; IDENT_9 . METHOD_5 ( fields ) ; org . apache . avro . Schema IDENT_12 = org . apache . avro . Schema . METHOD_4 ( org . apache . avro . IDENT_13 . IDENT_14 . class . getName ( ) , null , null , false ) ; java . util . List < org . apache . avro . Schema . Field > IDENT_15 = new java . util . ArrayList < org . apache . avro . Schema . Field > ( ) ; IDENT_15 . add ( new org . apache . avro . Schema . Field ( STRING_3 , IDENT_9 , "" , null ) ) ; IDENT_15 . add ( new org . apache . avro . Schema . Field ( "value" , IDENT_8 . METHOD_6 ( IDENT_6 ) , "" , null , Field . IDENT_16 . IDENT_17 ) ) ; IDENT_12 . METHOD_5 ( IDENT_15 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( int ) { org . apache . avro . Schema . Type IDENT_18 = null ; switch ( type ) { case java . sql . IDENT_4 . IDENT_19 : IDENT_18 = Schema . Type . IDENT_19 ; break ; case java . sql . IDENT_4 . IDENT_20 : IDENT_18 = Schema . Type . IDENT_11 ; break ; case java . sql . IDENT_4 . IDENT_21 : case java . sql . IDENT_4 . IDENT_22 : case java . sql . IDENT_4 . IDENT_23 : IDENT_18 = Schema . Type . IDENT_24 ; break ; case java . sql . IDENT_4 . IDENT_25 : IDENT_18 = Schema . Type . IDENT_25 ; break ; case java . sql . IDENT_4 . IDENT_26 : IDENT_18 = Schema . Type . IDENT_27 ; break ; case java . sql . IDENT_4 . IDENT_28 : IDENT_18 = Schema . Type . IDENT_24 ; break ; case java . sql . IDENT_4 . IDENT_29 : IDENT_18 = Schema . Type . IDENT_27 ; break ; case java . sql . IDENT_4 . IDENT_30 : IDENT_18 = Schema . Type . IDENT_31 ; break ; case java . sql . IDENT_4 . IDENT_31 : case java . sql . IDENT_4 . IDENT_32 : IDENT_18 = Schema . Type . IDENT_31 ; break ; case java . sql . IDENT_4 . IDENT_5 : IDENT_18 = Schema . Type . IDENT_33 ; break ; case java . sql . IDENT_4 . IDENT_34 : IDENT_18 = Schema . Type . IDENT_24 ; break ; case java . sql . IDENT_4 . IDENT_35 : IDENT_18 = Schema . Type . IDENT_27 ; break ; case java . sql . IDENT_4 . IDENT_36 : IDENT_18 = Schema . Type . IDENT_36 ; break ; case java . sql . IDENT_4 . IDENT_37 : IDENT_18 = Schema . Type . IDENT_31 ; break ; case java . sql . IDENT_4 . IDENT_38 : IDENT_18 = Schema . Type . IDENT_32 ; break ; case java . sql . IDENT_4 . IDENT_39 : IDENT_18 = Schema . Type . IDENT_33 ; break ; case java . sql . IDENT_4 . IDENT_40 : IDENT_18 = Schema . Type . IDENT_27 ; break ; case java . sql . IDENT_4 . IDENT_41 : IDENT_18 = Schema . Type . IDENT_27 ; break ; case java . sql . IDENT_4 . IDENT_42 : IDENT_18 = Schema . Type . IDENT_33 ; break ; case java . sql . IDENT_4 . IDENT_43 : IDENT_18 = Schema . Type . IDENT_24 ; break ; case java . sql . IDENT_4 . IDENT_44 : IDENT_18 = Schema . Type . IDENT_27 ; break ; default : IDENT_18 = null ; break ; } org . apache . avro . Schema IDENT_45 = org . apache . avro . Schema . create ( IDENT_18 ) ; return IDENT_45 ; }
org . junit . Assert . assertEquals ( IDENT_12 , schema ) 