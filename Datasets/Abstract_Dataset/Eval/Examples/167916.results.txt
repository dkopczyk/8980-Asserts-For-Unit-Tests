METHOD_0 ( ) { java . util . ArrayList < co . IDENT_0 . IDENT_1 . mapreduce . lib . db . IDENT_2 > IDENT_3 = new java . util . ArrayList < co . IDENT_0 . IDENT_1 . mapreduce . lib . db . IDENT_2 > ( ) ; IDENT_3 . add ( new co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_1 ( 0 , java . sql . IDENT_4 . IDENT_5 , "name" ) ) ; IDENT_3 . add ( new co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_1 ( 1 , java . sql . IDENT_4 . IDENT_6 , STRING_0 ) ) ; IDENT_3 . add ( new co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_1 ( 2 , java . sql . IDENT_4 . IDENT_6 , STRING_1 ) ) ; IDENT_3 . add ( new co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_1 ( 3 , java . sql . IDENT_4 . IDENT_5 , STRING_2 ) ) ; IDENT_3 . add ( new co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_1 ( 4 , java . sql . IDENT_4 . IDENT_5 , STRING_3 ) ) ; IDENT_3 . add ( new co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_1 ( 5 , java . sql . IDENT_4 . IDENT_7 , STRING_4 ) ) ; co . IDENT_0 . IDENT_1 . mapreduce . lib . db . IDENT_8 IDENT_9 = new co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 ( ) ; IDENT_9 . METHOD_3 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { return IDENT_10 ; }
org . junit . Assert . assertEquals ( IDENT_3 , IDENT_9 . METHOD_4 ( ) ) 