METHOD_0 ( ) { org . apache . hadoop . io . IDENT_0 key = new org . apache . hadoop . io . METHOD_1 ( STRING_0 ) ; co . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = new co . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_2 ( ) ; IDENT_5 . METHOD_3 ( key ) ; java . util . ArrayList < co . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_7 > values = new java . util . ArrayList < co . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_7 > ( ) ; org . apache . hadoop . mapreduce . IDENT_8 . Context context = mock ( IDENT_8 . Context . class ) ; org . apache . hadoop . mapreduce . IDENT_9 IDENT_10 = new org . apache . hadoop . mapreduce . METHOD_4 ( ) ; org . apache . hadoop . mapreduce . IDENT_11 IDENT_12 = IDENT_10 . METHOD_5 ( IDENT_13 . IDENT_14 ) ; when ( context . METHOD_6 ( IDENT_13 . IDENT_14 ) ) . thenReturn ( IDENT_12 ) ; co . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_15 IDENT_16 = new co . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_7 ( ) ; IDENT_16 . METHOD_8 ( IDENT_5 , values , context ) ; verify ( context ) . write ( null , key ) ; "<AssertPlaceHolder>" ; } write ( IDENT_17 , IDENT_18 ) { METHOD_9 ( value ) ; out . write ( co . IDENT_1 . IDENT_2 . mapreduce . lib . output . IDENT_19 . IDENT_20 . IDENT_21 ) ; }
org . junit . Assert . assertEquals ( 1 , context . METHOD_6 ( IDENT_13 . IDENT_14 ) . getValue ( ) ) 