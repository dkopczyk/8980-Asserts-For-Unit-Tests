METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( eq ( subject ) , any ( org . IDENT_1 . IDENT_2 . repository . security . IDENT_3 . class ) ) ) . METHOD_2 ( ( i ) -> { org . IDENT_1 . IDENT_2 . repository . security . IDENT_3 p = ( ( org . IDENT_1 . IDENT_2 . repository . security . IDENT_3 ) ( i . METHOD_3 ( ) [ 1 ] ) ) ; return org . IDENT_1 . IDENT_2 . repository . security . IDENT_4 . IDENT_5 . equals ( p . getName ( ) ) ; } ) ; java . util . List < org . IDENT_1 . IDENT_2 . repository . IDENT_6 > IDENT_7 = IDENT_8 . METHOD_4 ( repository , IDENT_9 , IDENT_10 ) ; "<AssertPlaceHolder>" ; } getName ( ) { return name ; }
org . junit . Assert . assertThat ( IDENT_7 , org . hamcrest . Matchers . contains ( repository , IDENT_10 ) ) 