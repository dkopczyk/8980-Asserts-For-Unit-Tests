METHOD_0 ( ) { IDENT_0 . start ( ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_1 = com . google . common . collect . ImmutableMap . of ( "foo" , STRING_0 , "bar" , STRING_1 , STRING_2 , STRING_3 ) ; "<AssertPlaceHolder>" ; IDENT_0 . METHOD_1 ( ) ; when ( IDENT_2 . load ( ) ) . thenReturn ( new java . util . HashMap ( IDENT_1 ) ) ; IDENT_0 . start ( ) ; IDENT_0 . METHOD_1 ( ) ; IDENT_0 . start ( ) ; org . mockito . IDENT_3 order = METHOD_2 ( IDENT_4 , IDENT_5 , IDENT_6 , IDENT_7 , IDENT_8 , IDENT_9 , IDENT_10 ) ; order . verify ( IDENT_4 ) . METHOD_3 ( STRING_4 ) ; order . verify ( IDENT_5 ) . METHOD_3 ( STRING_4 ) ; order . verify ( IDENT_6 ) . METHOD_3 ( STRING_4 ) ; order . verify ( IDENT_7 ) . apply ( ) ; order . verify ( IDENT_9 ) . apply ( ) ; order . verify ( IDENT_8 ) . apply ( ) ; order . verify ( IDENT_10 ) . apply ( ) ; order . verify ( IDENT_4 ) . commit ( ) ; order . verify ( IDENT_5 ) . commit ( ) ; order . verify ( IDENT_6 ) . commit ( ) ; order . verify ( IDENT_4 ) . end ( ) ; order . verify ( IDENT_5 ) . end ( ) ; order . verify ( IDENT_6 ) . end ( ) ; METHOD_4 ( IDENT_4 , IDENT_5 , IDENT_6 , IDENT_7 , IDENT_8 , IDENT_9 , IDENT_10 ) ; } METHOD_5 ( ) { org . mockito . IDENT_11 < java . util . Map > IDENT_12 = org . mockito . IDENT_11 . METHOD_6 ( java . util . Map . class ) ; verify ( IDENT_2 ) . save ( IDENT_12 . METHOD_7 ( ) ) ; return IDENT_12 . getValue ( ) ; }
org . junit . Assert . assertThat ( METHOD_5 ( ) , org . hamcrest . Matchers . is ( IDENT_1 ) ) 