METHOD_0 ( javax . servlet . http . IDENT_0 , org . apache . IDENT_1 . common . rest . IDENT_2 . IDENT_3 , org . apache . IDENT_1 . common . rest . IDENT_2 . IDENT_4 , org . apache . IDENT_1 . common . rest . codec . param . IDENT_5 ) { java . util . List < org . apache . IDENT_1 . common . rest . IDENT_2 . IDENT_4 > params = new java . util . ArrayList ( ) ; params . add ( IDENT_6 ) ; java . lang . String s = STRING_0 ; new IDENT_7 . METHOD_1 ( ) { { IDENT_8 . METHOD_2 ( ) ; result = params ; IDENT_6 . METHOD_3 ( ) ; result = IDENT_9 ; IDENT_9 . getValue ( request ) ; result = s ; } } ; java . lang . Object [ ] IDENT_10 = org . apache . IDENT_1 . common . rest . codec . IDENT_11 . METHOD_4 ( request , IDENT_8 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( javax . servlet . http . IDENT_0 , org . apache . IDENT_1 . common . rest . IDENT_2 . IDENT_3 ) { java . util . List < org . apache . IDENT_1 . common . rest . IDENT_2 . IDENT_4 > IDENT_12 = IDENT_8 . METHOD_2 ( ) ; java . lang . Object [ ] IDENT_13 = new java . lang . Object [ IDENT_12 . size ( ) ] ; for ( int IDENT_14 = 0 ; IDENT_14 < ( IDENT_12 . size ( ) ) ; IDENT_14 ++ ) { org . apache . IDENT_1 . common . rest . IDENT_2 . IDENT_4 param = IDENT_12 . get ( IDENT_14 ) ; try { IDENT_13 [ IDENT_14 ] = param . METHOD_3 ( ) . getValue ( request ) ; } catch ( java . lang . Exception e ) { throw new org . apache . IDENT_1 . IDENT_15 . IDENT_16 . exception . METHOD_5 ( javax . ws . rs . core . Response . Status . IDENT_17 , java . lang . String . format ( STRING_1 , IDENT_8 . METHOD_6 ( ) . METHOD_7 ( ) , param . METHOD_8 ( ) , param . METHOD_3 ( ) . METHOD_9 ( ) ) ) ; } } return IDENT_13 ; }
org . junit . Assert . assertEquals ( IDENT_10 [ 0 ] , s ) 