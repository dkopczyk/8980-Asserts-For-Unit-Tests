METHOD_0 ( ) { java . time . IDENT_0 now = java . time . IDENT_0 . now ( ) ; java . lang . Object result = METHOD_1 ( ) . METHOD_2 ( now ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . Object ) { if ( IDENT_1 == null ) { return null ; } if ( ( ( ( ( ( ( ( ( ( ( ( IDENT_1 instanceof java . lang . String ) || ( IDENT_1 instanceof java . lang . Integer ) ) || ( IDENT_1 instanceof java . lang . Long ) ) || ( IDENT_1 instanceof java . lang . IDENT_2 ) ) || ( IDENT_1 instanceof java . lang . Double ) ) || ( IDENT_1 instanceof java . lang . Boolean ) ) || ( IDENT_1 instanceof java . math . BigDecimal ) ) || ( IDENT_1 instanceof byte [ ] ) ) || ( IDENT_1 instanceof java . util . Date ) ) || ( IDENT_1 instanceof java . time . IDENT_0 ) ) || ( IDENT_1 instanceof org . IDENT_3 . core . json . IDENT_4 ) ) || ( IDENT_1 instanceof org . IDENT_3 . core . json . IDENT_5 ) ) { return IDENT_1 ; } if ( IDENT_1 instanceof com . google . gson . IDENT_6 ) { return METHOD_3 ( ( ( com . google . gson . IDENT_6 ) ( IDENT_1 ) ) ) ; } if ( IDENT_1 instanceof java . util . Collection < ? > ) { org . IDENT_3 . core . json . IDENT_5 array = METHOD_4 ( ) ; for ( java . lang . Object element : ( ( java . util . Collection < ? > ) ( IDENT_1 ) ) ) { array . add ( element ) ; } return array ; } else if ( IDENT_1 instanceof java . lang . Object [ ] ) { org . IDENT_3 . core . json . IDENT_5 array = METHOD_4 ( ) ; for ( java . lang . Object element : ( ( java . lang . Object [ ] ) ( IDENT_1 ) ) ) { array . add ( element ) ; } return array ; } else if ( IDENT_1 instanceof java . util . Map ) { org . IDENT_3 . core . json . IDENT_4 obj = create ( ) ; java . util . Map < ? , ? > map = ( ( java . util . Map < ? , ? > ) ( IDENT_1 ) ) ; for ( java . util . Map . Entry < ? , ? > entry : map . entrySet ( ) ) { if ( ( entry . getKey ( ) ) == null ) { throw new java . lang . RuntimeException ( STRING_0 ) ; } obj . METHOD_5 ( java . lang . String . valueOf ( entry . getKey ( ) ) , entry . getValue ( ) ) ; } return obj ; } else if ( IDENT_1 instanceof java . lang . IDENT_7 < ? > ) { return ( ( java . lang . IDENT_7 < ? > ) ( IDENT_1 ) ) . name ( ) ; } java . lang . String IDENT_8 = METHOD_6 ( IDENT_1 ) ; if ( ( ( IDENT_8 . startsWith ( STRING_1 ) ) && ( IDENT_8 . METHOD_7 ( STRING_1 ) ) ) && ( ( IDENT_8 . length ( ) ) > 1 ) ) { IDENT_8 = IDENT_8 . substring ( 1 , ( ( IDENT_8 . length ( ) ) - 1 ) ) ; return IDENT_8 ; } org . IDENT_3 . core . json . IDENT_4 IDENT_9 = METHOD_8 ( IDENT_8 ) ; return IDENT_9 ; }
org . junit . Assert . assertEquals ( now , result ) 