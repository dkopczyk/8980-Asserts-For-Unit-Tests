METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 < java . lang . String > IDENT_3 = com . IDENT_0 . IDENT_1 . IDENT_2 . from ( STRING_0 , STRING_1 , STRING_2 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 < java . lang . String > IDENT_4 = new com . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; java . lang . Object [ ] buffer = IDENT_3 . buffer ; int size = IDENT_3 . size ( ) ; for ( int i = 0 ; i < size ; i ++ ) { if ( com . splicemachine . utils . IDENT_5 . IDENT_6 . containsKey ( ( ( java . lang . String ) ( buffer [ i ] ) ) ) ) IDENT_4 . add ( ( ( java . lang . String ) ( buffer [ i ] ) ) ) ; } "<AssertPlaceHolder>" ; } size ( ) { return IDENT_7 . size ( ) ; }
org . junit . Assert . assertEquals ( 3 , IDENT_4 . size ( ) ) 