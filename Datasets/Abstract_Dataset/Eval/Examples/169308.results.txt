METHOD_0 ( ) { org . apache . commons . math3 . geometry . IDENT_0 . IDENT_1 . IDENT_2 p = new org . apache . commons . math3 . geometry . IDENT_0 . IDENT_1 . METHOD_1 ( FLOAT_0 , new org . apache . commons . math3 . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( FLOAT_1 , ( - FLOAT_2 ) ) , new org . apache . commons . math3 . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( FLOAT_3 , ( - FLOAT_4 ) ) , new org . apache . commons . math3 . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( FLOAT_5 , ( - FLOAT_4 ) ) , new org . apache . commons . math3 . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( FLOAT_6 , ( - FLOAT_7 ) ) ) ; org . apache . commons . math3 . geometry . IDENT_0 . IDENT_1 . METHOD_1 IDENT_3 = new org . apache . commons . math3 . geometry . IDENT_0 . IDENT_1 . METHOD_1 ( FLOAT_0 , new org . apache . commons . math3 . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( FLOAT_8 , ( - FLOAT_9 ) ) , new org . apache . commons . math3 . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( FLOAT_8 , ( - FLOAT_10 ) ) , new org . apache . commons . math3 . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( FLOAT_8 , ( - FLOAT_11 ) ) , new org . apache . commons . math3 . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( FLOAT_12 , ( - FLOAT_11 ) ) , new org . apache . commons . math3 . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( FLOAT_12 , ( - FLOAT_9 ) ) ) ; "<AssertPlaceHolder>" ; } contains ( java . lang . Object ) { boolean result = false ; for ( int i = 0 ; i < ( length ( ) ) ; i ++ ) { org . IDENT_4 . javascript . xml . impl . IDENT_5 . IDENT_6 IDENT_7 = METHOD_3 ( i ) ; if ( IDENT_7 . METHOD_4 ( xml ) ) { result = true ; break ; } } return result ; }
org . junit . Assert . assertFalse ( p . contains ( IDENT_3 ) ) 