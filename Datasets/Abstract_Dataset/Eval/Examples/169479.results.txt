METHOD_0 ( ) { array . put ( ( ( 1L << INT_0 ) + "" ) , array , "a" ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( ) { java . lang . Object [ ] IDENT_0 = METHOD_2 ( ) ; java . util . List < java . lang . Integer > IDENT_1 = new java . util . ArrayList < java . lang . Integer > ( IDENT_0 . length ) ; for ( java . lang . Object id : IDENT_0 ) { int IDENT_2 = org . IDENT_3 . javascript . IDENT_4 . METHOD_3 ( id ) ; if ( ( IDENT_2 >= 0 ) && ( org . IDENT_3 . javascript . IDENT_4 . toString ( IDENT_2 ) . equals ( org . IDENT_3 . javascript . IDENT_4 . toString ( id ) ) ) ) { IDENT_1 . add ( IDENT_2 ) ; } } return IDENT_1 . toArray ( new java . lang . Integer [ IDENT_1 . size ( ) ] ) ; }
org . junit . Assert . assertThat ( array . METHOD_1 ( ) , org . hamcrest . core . Is . is ( new java . lang . Integer [ ] { } ) ) 