METHOD_0 ( ) { IDENT_0 . IDENT_1 IDENT_2 = new IDENT_0 . METHOD_1 ( ) ; java . lang . String expected = STRING_0 ; IDENT_2 . IDENT_3 = new java . util . METHOD_2 ( STRING_1 ) ; IDENT_2 . exec ( ) ; java . lang . String out = IDENT_2 . output . replace ( "\n" , " " ) . trim ( ) ; "<AssertPlaceHolder>" ; } replace ( int , java . lang . Object ) { org . IDENT_4 . javascript . IDENT_5 . IDENT_6 IDENT_7 = child ( index ) ; if ( ( IDENT_7 . length ( ) ) > 0 ) { org . IDENT_4 . javascript . IDENT_5 . IDENT_8 IDENT_9 = IDENT_7 . item ( 0 ) ; METHOD_3 ( IDENT_9 , xml ) ; METHOD_4 ( index ) ; } return this ; }
org . junit . Assert . assertEquals ( expected . replace ( " " , "" ) , out . replace ( " " , "" ) ) 