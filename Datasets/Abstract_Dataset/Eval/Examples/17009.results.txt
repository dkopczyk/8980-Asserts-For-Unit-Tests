connect ( io . vertx . core . net . IDENT_0 , io . vertx . core . net . IDENT_0 ) { int port = INT_0 ; java . lang . String host = STRING_0 ; io . vertx . core . impl . IDENT_1 IDENT_2 = new io . vertx . core . impl . METHOD_0 ( ) ; new IDENT_3 . IDENT_4 < io . vertx . core . net . IDENT_5 > ( IDENT_6 ) { @ IDENT_3 . IDENT_7 io . vertx . core . net . IDENT_5 connect ( int port , java . lang . String host , io . vertx . core . IDENT_8 < io . vertx . core . IDENT_9 < io . vertx . core . net . IDENT_0 > > IDENT_10 ) { IDENT_10 . METHOD_1 ( IDENT_2 . METHOD_2 ( IDENT_11 ) ) ; return null ; } } ; new IDENT_3 . IDENT_4 < io . vertx . core . net . IDENT_5 > ( IDENT_12 ) { @ IDENT_3 . IDENT_7 io . vertx . core . net . IDENT_5 connect ( int port , java . lang . String host , io . vertx . core . IDENT_8 < io . vertx . core . IDENT_9 < io . vertx . core . net . IDENT_0 > > IDENT_10 ) { IDENT_10 . METHOD_1 ( IDENT_2 . METHOD_2 ( IDENT_13 ) ) ; return null ; } } ; java . util . List < io . vertx . core . net . IDENT_0 > IDENT_14 = new java . util . ArrayList ( ) ; IDENT_15 . connect ( false , port , host , ( IDENT_16 ) -> { IDENT_14 . add ( IDENT_16 . result ( ) ) ; } ) ; IDENT_15 . connect ( true , port , host , ( IDENT_16 ) -> { IDENT_14 . add ( IDENT_16 . result ( ) ) ; } ) ; "<AssertPlaceHolder>" ; } add ( com . IDENT_17 . IDENT_18 . api . IDENT_19 ) { if ( IDENT_20 . isEmpty ( ) ) { IDENT_21 = registry ; } IDENT_20 . add ( registry ) ; }
org . junit . Assert . assertThat ( IDENT_14 , org . hamcrest . Matchers . contains ( IDENT_11 , IDENT_13 ) ) 