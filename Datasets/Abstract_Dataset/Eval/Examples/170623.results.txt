METHOD_0 ( ) { double [ ] y = new double [ ] { 0.0 , 1.0 , - 2.0 } ; org . apache . commons . math3 . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new org . apache . commons . math3 . IDENT_0 . IDENT_1 . IDENT_4 . METHOD_1 ( y , true ) ; IDENT_3 . METHOD_2 ( 0 ) ; IDENT_3 . METHOD_3 ( ) ; IDENT_3 . METHOD_2 ( 1 ) ; java . io . ByteArrayOutputStream IDENT_5 = new java . io . ByteArrayOutputStream ( ) ; java . io . IDENT_6 IDENT_7 = new java . io . METHOD_4 ( IDENT_5 ) ; try { IDENT_7 . METHOD_5 ( IDENT_3 ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( org . apache . commons . math3 . exception . IDENT_8 IDENT_9 ) { "<AssertPlaceHolder>" ; } } getMessage ( ) { return message ; }
org . junit . Assert . assertEquals ( 0 , IDENT_9 . getMessage ( ) . length ( ) ) 