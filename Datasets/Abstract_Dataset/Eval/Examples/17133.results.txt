METHOD_0 ( ) { METHOD_1 ( exception ) . when ( IDENT_0 ) . next ( any ( org . apache . IDENT_1 . IDENT_2 . IDENT_0 . IDENT_3 . class ) ) ; try { IDENT_4 . METHOD_2 ( IDENT_0 , IDENT_5 ) ; METHOD_3 ( org . apache . IDENT_1 . IDENT_6 . IDENT_7 . RuntimeException . class ) ; } catch ( java . lang . Exception e ) { "<AssertPlaceHolder>" ; } verify ( delegate ) . METHOD_4 ( IDENT_8 , null , exception ) ; } METHOD_2 ( java . lang . String , java . util . Map ) { if ( ( IDENT_9 == null ) || ( IDENT_9 . isEmpty ( ) ) ) { return ; } java . util . Map < java . lang . String , java . lang . Object > configuration = org . apache . IDENT_1 . config . IDENT_10 . METHOD_5 ( IDENT_9 ) ; if ( STRING_0 . equals ( action ) ) { IDENT_11 . METHOD_6 ( configuration ) ; METHOD_7 ( METHOD_8 ( com . google . common . collect . ImmutableMap . < java . lang . String , java . lang . Object > METHOD_9 ( configuration ) , null , null ) ) ; } else if ( STRING_1 . equals ( action ) ) { IDENT_11 . METHOD_6 ( configuration ) ; METHOD_7 ( METHOD_8 ( null , com . google . common . collect . ImmutableMap . < java . lang . String , java . lang . Object > METHOD_9 ( configuration ) , null ) ) ; } else if ( STRING_2 . equals ( action ) ) { for ( java . lang . String IDENT_12 : configuration . METHOD_10 ( ) ) { IDENT_11 . remove ( IDENT_12 ) ; } METHOD_7 ( METHOD_8 ( null , null , com . google . common . collect . ImmutableMap . < java . lang . String , java . lang . Object > METHOD_9 ( configuration ) ) ) ; } else { org . apache . IDENT_1 . config . IDENT_13 . IDENT_14 . IDENT_15 . LOGGER . error ( STRING_3 , action ) ; return ; } org . apache . IDENT_1 . config . IDENT_13 . IDENT_14 . IDENT_15 . LOGGER . warn ( STRING_4 , action , configuration . METHOD_10 ( ) ) ; }
org . junit . Assert . assertThat ( e , org . hamcrest . core . Is . is ( exception ) ) 