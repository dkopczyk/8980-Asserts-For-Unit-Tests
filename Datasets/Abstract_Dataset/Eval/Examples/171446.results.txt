METHOD_0 ( ) { java . util . concurrent . atomic . IDENT_0 count = new java . util . concurrent . atomic . METHOD_1 ( 0 ) ; com . spotify . IDENT_1 . core . IDENT_2 service = com . spotify . IDENT_1 . core . IDENT_3 . builder ( "test" ) . METHOD_2 ( new com . spotify . IDENT_1 . core . METHOD_3 ( 1.0 , count ) ) . METHOD_2 ( new com . spotify . IDENT_1 . core . METHOD_3 ( 1.0 , count ) ) . build ( ) ; try ( com . spotify . IDENT_1 . core . IDENT_2 . IDENT_4 instance = service . start ( ) ) { instance . METHOD_4 ( ) . METHOD_5 ( ) ; instance . METHOD_6 ( ) ; } "<AssertPlaceHolder>" ; } get ( ) { if ( ! ( com . spotify . IDENT_1 . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_7 ( config ) ) ) { com . spotify . IDENT_1 . IDENT_5 . IDENT_6 . LOG . warn ( STRING_0 ) ; return new com . spotify . IDENT_1 . IDENT_5 . IDENT_6 . METHOD_8 ( ) ; } com . spotify . IDENT_1 . IDENT_5 . IDENT_6 . IDENT_7 IDENT_8 = com . spotify . IDENT_1 . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_9 ( config , IDENT_9 ) ; return new com . spotify . IDENT_1 . IDENT_5 . IDENT_6 . METHOD_10 ( IDENT_8 ) ; }
org . junit . Assert . assertThat ( count . get ( ) , org . hamcrest . Matchers . is ( 2 ) ) 