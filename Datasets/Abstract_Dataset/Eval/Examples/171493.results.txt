METHOD_0 ( ) { final com . spotify . IDENT_0 . http . client . IDENT_1 IDENT_2 = com . spotify . IDENT_0 . http . client . IDENT_1 . create ( ( request , IDENT_3 ) -> java . util . concurrent . IDENT_4 . METHOD_1 ( com . spotify . IDENT_0 . Response . METHOD_2 ( IDENT_5 . IDENT_6 . METHOD_3 ( STRING_0 ) ) ) , ( request , IDENT_3 ) -> { fail ( STRING_1 ) ; return null ; } ) ; final com . spotify . IDENT_0 . Response < IDENT_5 . IDENT_6 > response = IDENT_2 . METHOD_4 ( com . spotify . IDENT_0 . IDENT_7 . METHOD_5 ( STRING_2 ) , java . util . Optional . empty ( ) ) . METHOD_6 ( ) . get ( ) ; "<AssertPlaceHolder>" ; } of ( java . lang . IDENT_8 ) { return new com . spotify . IDENT_0 . route . METHOD_7 ( com . google . common . collect . ImmutableList . METHOD_8 ( rules ) ) ; }
org . junit . Assert . assertThat ( response . payload ( ) , org . hamcrest . Matchers . is ( java . util . Optional . of ( IDENT_5 . IDENT_6 . METHOD_3 ( STRING_0 ) ) ) ) 