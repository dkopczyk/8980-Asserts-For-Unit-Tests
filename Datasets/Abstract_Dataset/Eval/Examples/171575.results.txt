METHOD_0 ( ) { METHOD_1 ( STRING_0 , STRING_1 ) ; IDENT_0 . METHOD_2 ( com . spotify . IDENT_1 . client . IDENT_2 . IDENT_3 ) ; final com . google . common . collect . ImmutableMap < java . lang . String , java . lang . String > IDENT_4 = com . google . common . collect . ImmutableMap . of ( STRING_2 , STRING_3 ) ; final com . spotify . IDENT_1 . client . messages . IDENT_5 config = com . spotify . IDENT_1 . client . messages . IDENT_5 . builder ( ) . image ( com . spotify . IDENT_1 . client . IDENT_2 . IDENT_3 ) . METHOD_3 ( com . spotify . IDENT_1 . client . messages . IDENT_6 . builder ( ) . METHOD_4 ( METHOD_4 ) . build ( ) ) . build ( ) ; final com . spotify . IDENT_1 . client . messages . IDENT_7 container = IDENT_0 . METHOD_5 ( config , METHOD_6 ( ) ) ; final com . spotify . IDENT_1 . client . messages . IDENT_8 info = IDENT_0 . METHOD_7 ( container . id ( ) ) ; "<AssertPlaceHolder>" ; } id ( ) { return id ; }
org . junit . Assert . assertThat ( info . METHOD_3 ( ) . METHOD_4 ( ) , org . hamcrest . Matchers . is ( METHOD_4 ) ) 