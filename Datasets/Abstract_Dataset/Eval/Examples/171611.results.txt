METHOD_0 ( ) { final com . spotify . IDENT_0 . IDENT_1 < java . lang . String > task = com . spotify . IDENT_0 . IDENT_1 . METHOD_1 ( STRING_0 ) . METHOD_2 ( java . lang . String . class ) . process ( ( ) -> { throw new java . lang . RuntimeException ( STRING_1 ) ; } ) ; com . spotify . IDENT_0 . context . IDENT_2 . METHOD_3 ( IDENT_3 ) ; java . util . concurrent . atomic . IDENT_4 status = new java . util . concurrent . atomic . METHOD_4 ( ) ; com . spotify . IDENT_0 . context . IDENT_5 . METHOD_5 ( task ) . METHOD_6 ( status :: set ) ; verify ( IDENT_3 , times ( 1 ) ) . accept ( eq ( 1 ) ) ; "<AssertPlaceHolder>" ; } get ( ) { if ( ( value ) == null ) { MOD_0 ( this ) { if ( ( value ) == null ) { value = IDENT_6 . get ( ) ; } } } return value ; }
org . junit . Assert . assertThat ( status . get ( ) , org . hamcrest . CoreMatchers . is ( 1 ) ) 