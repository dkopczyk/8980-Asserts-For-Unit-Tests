METHOD_0 ( ) { final com . spotify . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = com . spotify . IDENT_0 . IDENT_1 . IDENT_2 . builder ( ) . build ( ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { final java . util . Map < org . apache . IDENT_4 . data . IDENT_5 , java . lang . Integer > IDENT_6 = com . google . common . collect . IDENT_7 . METHOD_2 ( ) ; for ( final com . spotify . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_8 rule : rules ) { if ( rule . matches ( path ) ) { final int IDENT_9 = ( IDENT_6 . containsKey ( rule . id ) ) ? IDENT_6 . get ( rule . id ) : 0 ; IDENT_6 . put ( rule . id , ( ( rule . IDENT_10 ) | IDENT_9 ) ) ; } } if ( IDENT_6 . isEmpty ( ) ) { return null ; } final java . util . List < org . apache . IDENT_4 . data . IDENT_11 > IDENT_12 = com . google . common . collect . Lists . newArrayList ( ) ; for ( final Map . Entry < org . apache . IDENT_4 . data . IDENT_5 , java . lang . Integer > e : IDENT_6 . entrySet ( ) ) { IDENT_12 . add ( new org . apache . IDENT_4 . data . METHOD_3 ( e . getValue ( ) , e . getKey ( ) ) ) ; } return IDENT_12 ; }
org . junit . Assert . assertNull ( IDENT_3 . METHOD_1 ( "/" ) ) 