METHOD_0 ( ) { final com . spotify . IDENT_0 . IDENT_1 . IDENT_2 group = METHOD_1 ( of ( IDENT_3 ) , of ( metadata ) , of ( IDENT_4 ) ) ; final java . util . List < eu . IDENT_5 . IDENT_6 . IDENT_7 < com . spotify . IDENT_0 . IDENT_1 . IDENT_8 > > IDENT_9 = com . google . common . collect . ImmutableList . of ( other , other , other ) ; doReturn ( IDENT_10 ) . when ( group ) . METHOD_2 ( request ) ; doReturn ( expected ) . when ( IDENT_6 ) . collect ( IDENT_9 , com . spotify . IDENT_0 . IDENT_1 . IDENT_8 . METHOD_3 ( ) ) ; doReturn ( other ) . when ( group ) . METHOD_4 ( eq ( IDENT_3 ) , eq ( request ) , any ( ) ) ; doReturn ( other ) . when ( group ) . METHOD_5 ( eq ( metadata ) , eq ( request ) , eq ( range ) , any ( ) ) ; doReturn ( other ) . when ( group ) . METHOD_6 ( eq ( IDENT_4 ) , eq ( request ) , eq ( range ) , any ( ) ) ; "<AssertPlaceHolder>" ; verify ( group ) . METHOD_2 ( request ) ; verify ( group ) . METHOD_4 ( eq ( IDENT_3 ) , eq ( request ) , any ( ) ) ; verify ( group ) . METHOD_5 ( eq ( metadata ) , eq ( request ) , eq ( range ) , any ( ) ) ; verify ( group ) . METHOD_6 ( eq ( IDENT_4 ) , eq ( request ) , eq ( range ) , any ( ) ) ; verify ( METHOD_2 , times ( 2 ) ) . get ( ) ; } METHOD_7 ( com . spotify . IDENT_0 . IDENT_1 . IDENT_11 ) { final io . IDENT_12 . trace . IDENT_13 IDENT_14 = IDENT_15 . METHOD_8 ( STRING_0 ) . METHOD_9 ( ) ; final java . util . List < eu . IDENT_5 . IDENT_6 . IDENT_7 < com . spotify . IDENT_0 . IDENT_1 . IDENT_8 > > IDENT_9 = new java . util . ArrayList ( ) ; final java . util . function . IDENT_16 < com . spotify . IDENT_0 . common . IDENT_17 > range = METHOD_2 ( request ) ; IDENT_3 . map ( ( m ) -> METHOD_4 ( m , request , IDENT_14 ) ) . METHOD_10 ( IDENT_9 :: add ) ; metadata . map ( ( m ) -> METHOD_5 ( m , request , range . get ( ) , IDENT_14 ) ) . METHOD_10 ( IDENT_9 :: add ) ; IDENT_4 . map ( ( s ) -> METHOD_6 ( s , request , range . get ( ) , IDENT_14 ) ) . METHOD_10 ( IDENT_9 :: add ) ; return IDENT_6 . collect ( IDENT_9 , com . spotify . IDENT_0 . IDENT_1 . IDENT_8 . METHOD_3 ( ) ) . METHOD_11 ( IDENT_14 :: end ) ; }
org . junit . Assert . assertEquals ( expected , group . METHOD_7 ( request ) ) 