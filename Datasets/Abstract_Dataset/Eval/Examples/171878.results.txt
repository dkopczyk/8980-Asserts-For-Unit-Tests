METHOD_0 ( ) { java . util . Optional < com . spotify . IDENT_0 . model . IDENT_1 > IDENT_2 = storage . METHOD_1 ( com . spotify . IDENT_0 . model . IDENT_3 . create ( "foo" , "bar" ) ) ; "<AssertPlaceHolder>" ; } is ( com . spotify . IDENT_0 . api . IDENT_4 ) { return new org . hamcrest . IDENT_5 < com . spotify . IDENT_0 . api . IDENT_6 . IDENT_7 > ( ) { @ com . spotify . IDENT_0 . api . Override MOD_0 boolean METHOD_2 ( com . spotify . IDENT_0 . api . IDENT_6 . IDENT_7 item ) { return ( item . METHOD_3 ( ) ) == ( version . METHOD_3 ( ) ) ; } @ com . spotify . IDENT_0 . api . Override public void METHOD_4 ( org . hamcrest . IDENT_8 description ) { description . METHOD_5 ( STRING_0 ) ; description . METHOD_6 ( version ) ; } } ; }
org . junit . Assert . assertThat ( IDENT_2 , org . hamcrest . Matchers . is ( java . util . Optional . empty ( ) ) ) 