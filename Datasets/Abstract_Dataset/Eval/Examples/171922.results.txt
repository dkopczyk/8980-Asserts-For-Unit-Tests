METHOD_0 ( ) { final java . util . concurrent . IDENT_0 < java . lang . String > IDENT_1 = IDENT_2 :: get ; final java . lang . String result = io . grpc . Context . METHOD_1 ( ) . METHOD_2 ( com . spotify . IDENT_3 . util . IDENT_2 , STRING_0 ) . call ( ( ) -> IDENT_4 . METHOD_3 ( java . util . List . of ( IDENT_1 ) , INT_0 , com . spotify . IDENT_3 . util . IDENT_5 ) ) ; "<AssertPlaceHolder>" ; } is ( com . spotify . IDENT_3 . api . IDENT_6 ) { return new org . hamcrest . IDENT_7 < com . spotify . IDENT_3 . api . IDENT_8 . IDENT_9 > ( ) { @ com . spotify . IDENT_3 . api . Override MOD_0 boolean METHOD_4 ( com . spotify . IDENT_3 . api . IDENT_8 . IDENT_9 item ) { return ( item . METHOD_5 ( ) ) == ( version . METHOD_5 ( ) ) ; } @ com . spotify . IDENT_3 . api . Override public void METHOD_6 ( org . hamcrest . IDENT_10 description ) { description . METHOD_7 ( STRING_1 ) ; description . METHOD_8 ( version ) ; } } ; }
org . junit . Assert . assertThat ( result , org . hamcrest . Matchers . is ( STRING_0 ) ) 