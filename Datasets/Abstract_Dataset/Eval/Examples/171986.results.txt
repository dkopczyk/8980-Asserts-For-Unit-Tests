METHOD_0 ( ) { short [ ] data = new short [ ] { 0 , IDENT_0 . MAX_VALUE , IDENT_0 . IDENT_1 , 12 , INT_0 , - INT_1 , - INT_2 } ; org . IDENT_2 . api . util . map . concurrent . IDENT_3 array = new org . IDENT_2 . api . util . map . concurrent . METHOD_1 ( data . length , data ) ; METHOD_2 ( array , data ) ; data = new short [ ] { 0 , IDENT_0 . MAX_VALUE , IDENT_0 . IDENT_1 , 12 , INT_0 , - INT_1 , - INT_2 , INT_3 } ; array = new org . IDENT_2 . api . util . map . concurrent . METHOD_1 ( data . length , data ) ; METHOD_2 ( array , data ) ; array = new org . IDENT_2 . api . util . map . concurrent . METHOD_1 ( 1 , null ) ; array . set ( 0 , ( ( short ) ( 12 ) ) ) ; "<AssertPlaceHolder>" ; array = null ; } get ( java . lang . Class ) { return METHOD_3 ( ) . METHOD_4 ( x , y , IDENT_4 , true ) . get ( type ) ; }
org . junit . Assert . assertEquals ( array . get ( 0 ) , ( ( short ) ( 12 ) ) ) 