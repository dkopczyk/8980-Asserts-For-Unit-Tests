METHOD_0 ( ) { for ( int j = 0 ; j < 100 ; j ++ ) { java . util . Set < java . lang . String > IDENT_0 = new java . util . HashSet ( ) ; for ( int i = 0 ; i < 1000 ; i ++ ) { IDENT_0 . add ( org . springframework . cloud . IDENT_1 . resource . support . IDENT_2 . METHOD_1 ( METHOD_2 ( 20 ) ) ) ; } "<AssertPlaceHolder>" ; } } METHOD_2 ( int ) { java . lang . StringBuilder sb = new java . lang . StringBuilder ( len ) ; for ( int i = 0 ; i < len ; i ++ ) sb . append ( org . springframework . cloud . IDENT_1 . resource . support . IDENT_3 . IDENT_4 . charAt ( org . springframework . cloud . IDENT_1 . resource . support . IDENT_3 . IDENT_5 . METHOD_3 ( org . springframework . cloud . IDENT_1 . resource . support . IDENT_3 . IDENT_4 . length ( ) ) ) ) ; return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( ( ( IDENT_0 . size ( ) ) == 1000 ) , true ) 