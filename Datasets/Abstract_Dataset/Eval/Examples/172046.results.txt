METHOD_0 ( ) { java . lang . String location = STRING_0 ; com . google . cloud . storage . IDENT_0 storage = mock ( com . google . cloud . storage . IDENT_0 . class ) ; com . google . cloud . storage . IDENT_1 IDENT_2 = com . google . cloud . storage . IDENT_1 . of ( STRING_1 , "test" ) ; when ( storage . get ( IDENT_2 ) ) . thenReturn ( null ) ; com . google . cloud . storage . IDENT_3 IDENT_4 = com . google . cloud . storage . IDENT_3 . METHOD_1 ( IDENT_2 ) . build ( ) ; com . google . cloud . IDENT_5 IDENT_6 = mock ( com . google . cloud . IDENT_5 . class ) ; com . google . cloud . storage . IDENT_7 IDENT_8 = mock ( com . google . cloud . storage . IDENT_7 . class ) ; when ( IDENT_8 . writer ( ) ) . thenReturn ( IDENT_6 ) ; when ( storage . create ( IDENT_4 ) ) . thenReturn ( IDENT_8 ) ; org . springframework . cloud . IDENT_9 . storage . IDENT_10 resource = new org . springframework . cloud . IDENT_9 . storage . METHOD_2 ( storage , location ) ; org . springframework . cloud . IDENT_9 . storage . METHOD_2 IDENT_11 = METHOD_3 ( resource ) ; java . io . IDENT_12 IDENT_13 = IDENT_11 . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { if ( METHOD_5 ( ) ) { throw new java . lang . IllegalStateException ( ( ( STRING_2 + ( METHOD_6 ( ) ) ) + STRING_3 ) ) ; } else { com . google . cloud . storage . IDENT_7 IDENT_8 = METHOD_7 ( ) ; if ( ( IDENT_8 == null ) || ( ! ( IDENT_8 . exists ( ) ) ) ) { if ( ! ( this . IDENT_14 ) ) { throw new java . io . METHOD_8 ( ( STRING_4 + ( METHOD_6 ( ) ) ) ) ; } IDENT_8 = METHOD_9 ( ) ; } return java . nio . IDENT_15 . IDENT_16 . METHOD_10 ( IDENT_8 . writer ( ) ) ; } }
org . junit . Assert . assertNotNull ( IDENT_13 ) 