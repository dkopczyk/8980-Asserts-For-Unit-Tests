METHOD_0 ( ) { when ( this . IDENT_0 . METHOD_1 ( "foo" , 0 ) ) . thenReturn ( true ) ; "<AssertPlaceHolder>" ; verify ( this . IDENT_0 ) . getResource ( eq ( "foo" ) , eq ( new java . io . File ( "bar" ) ) , any ( org . springframework . build . IDENT_1 . maven . IDENT_2 . class ) ) ; } METHOD_2 ( java . lang . String , java . io . File , long ) { org . apache . maven . IDENT_0 . resource . IDENT_3 resource = new org . apache . maven . IDENT_0 . resource . METHOD_3 ( IDENT_4 ) ; try { if ( METHOD_1 ( IDENT_4 , IDENT_5 ) ) { get ( IDENT_4 , IDENT_6 ) ; return true ; } return false ; } catch ( org . apache . maven . IDENT_0 . IDENT_7 | org . apache . maven . IDENT_0 . IDENT_8 | org . apache . maven . IDENT_0 . authorization . IDENT_9 e ) { this . IDENT_10 . METHOD_4 ( resource , IDENT_11 . IDENT_12 , e ) ; throw e ; } }
org . junit . Assert . assertTrue ( this . IDENT_0 . METHOD_2 ( "foo" , new java . io . File ( "bar" ) , 0 ) ) 