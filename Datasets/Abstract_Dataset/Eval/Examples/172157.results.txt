METHOD_0 ( ) { org . springframework . batch . core . IDENT_0 IDENT_1 = new org . springframework . batch . core . METHOD_1 ( ) ; org . springframework . batch . core . IDENT_2 job = new org . springframework . batch . admin . service . METHOD_2 ( STRING_0 ) { @ org . springframework . batch . admin . service . Override public org . springframework . batch . core . IDENT_3 METHOD_3 ( ) { return new org . springframework . batch . core . IDENT_4 . support . METHOD_4 ( ) ; } } ; when ( IDENT_5 . METHOD_5 ( ) ) . thenReturn ( java . util . Arrays . asList ( STRING_0 , STRING_1 ) ) ; when ( IDENT_5 . METHOD_6 ( STRING_0 ) ) . thenReturn ( job ) ; org . springframework . batch . core . IDENT_6 IDENT_7 = org . springframework . batch . test . IDENT_8 . METHOD_7 ( ) ; IDENT_7 . METHOD_8 ( IDENT_9 . IDENT_10 ) ; when ( IDENT_11 . METHOD_9 ( STRING_0 , IDENT_1 ) ) . thenReturn ( IDENT_7 ) ; when ( IDENT_12 . run ( job , IDENT_1 ) ) . thenReturn ( org . springframework . batch . test . IDENT_8 . METHOD_7 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( java . lang . String , org . springframework . batch . core . METHOD_1 ) { org . springframework . batch . core . IDENT_6 IDENT_13 = null ; if ( IDENT_5 . METHOD_5 ( ) . contains ( IDENT_14 ) ) { org . springframework . batch . core . IDENT_2 job = IDENT_5 . METHOD_6 ( IDENT_14 ) ; org . springframework . batch . core . IDENT_6 IDENT_15 = IDENT_11 . METHOD_9 ( IDENT_14 , IDENT_1 ) ; boolean IDENT_16 = false ; if ( IDENT_15 != null ) { org . springframework . batch . core . IDENT_9 status = IDENT_15 . getStatus ( ) ; if ( ( status . METHOD_11 ( ) ) && ( status != ( org . springframework . batch . core . IDENT_9 . IDENT_17 ) ) ) { IDENT_16 = true ; } } if ( ( ( job . METHOD_3 ( ) ) != null ) && ( ! IDENT_16 ) ) { IDENT_1 = job . METHOD_3 ( ) . METHOD_12 ( IDENT_1 ) ; } IDENT_13 = IDENT_12 . run ( job , IDENT_1 ) ; if ( IDENT_13 . METHOD_13 ( ) ) { IDENT_18 . add ( IDENT_13 ) ; } } else { if ( ( IDENT_19 ) != null ) { IDENT_13 = new org . springframework . batch . core . METHOD_14 ( IDENT_19 . start ( IDENT_14 , IDENT_1 . METHOD_15 ( ) ) ) ; } else { throw new org . springframework . batch . core . METHOD_10 . METHOD_16 ( java . lang . String . format ( STRING_2 , java . lang . String . valueOf ( IDENT_14 ) ) ) ; } } return IDENT_13 ; }
org . junit . Assert . assertNotNull ( service . METHOD_10 ( STRING_0 , IDENT_1 ) ) 