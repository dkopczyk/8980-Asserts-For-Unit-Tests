METHOD_0 ( ) { org . springframework . batch . admin . util . IDENT_0 service = new org . springframework . batch . admin . util . METHOD_1 ( new org . springframework . core . task . METHOD_2 ( ) ) ; java . util . concurrent . IDENT_1 < java . lang . String > task = new java . util . concurrent . IDENT_1 < java . lang . String > ( new java . util . concurrent . IDENT_2 < java . lang . String > ( ) { public java . lang . String call ( ) throws org . springframework . batch . admin . util . Exception { return "foo" ; } } ) ; service . execute ( task ) ; "<AssertPlaceHolder>" ; } get ( ) { try { T result = queue . METHOD_3 ( ) ; if ( ( IDENT_3 . get ( ) ) != null ) { throw new java . util . concurrent . METHOD_4 ( IDENT_3 . get ( ) ) ; } return result ; } finally { METHOD_5 ( IDENT_4 ) ; } }
org . junit . Assert . assertEquals ( "foo" , task . get ( ) ) 