METHOD_0 ( ) { client . put ( policy , new com . IDENT_0 . client . METHOD_1 ( METHOD_2 ( ) , org . springframework . data . IDENT_0 . core . IDENT_1 . IDENT_2 , STRING_0 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_1 , STRING_2 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_3 , STRING_4 ) ) ; client . put ( policy , new com . IDENT_0 . client . METHOD_1 ( METHOD_2 ( ) , org . springframework . data . IDENT_0 . core . IDENT_1 . IDENT_2 , STRING_5 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_1 , STRING_2 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_3 , STRING_4 ) ) ; client . put ( policy , new com . IDENT_0 . client . METHOD_1 ( METHOD_2 ( ) , org . springframework . data . IDENT_0 . core . IDENT_1 . IDENT_2 , STRING_6 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_1 , STRING_2 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_3 , STRING_4 ) ) ; client . put ( policy , new com . IDENT_0 . client . METHOD_1 ( METHOD_2 ( ) , org . springframework . data . IDENT_0 . core . IDENT_1 . IDENT_2 , STRING_7 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_1 , STRING_2 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_3 , STRING_4 ) ) ; client . put ( policy , new com . IDENT_0 . client . METHOD_1 ( METHOD_2 ( ) , org . springframework . data . IDENT_0 . core . IDENT_1 . IDENT_2 , STRING_6 2 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_1 , STRING_2 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_3 , STRING_4 ) ) ; client . put ( policy , new com . IDENT_0 . client . METHOD_1 ( METHOD_2 ( ) , org . springframework . data . IDENT_0 . core . IDENT_1 . IDENT_2 , STRING_6 3 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_1 , STRING_2 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_3 , STRING_4 ) ) ; client . put ( policy , new com . IDENT_0 . client . METHOD_1 ( METHOD_2 ( ) , org . springframework . data . IDENT_0 . core . IDENT_1 . IDENT_2 , STRING_8 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_1 , STRING_2 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_3 , STRING_4 ) ) ; client . put ( policy , new com . IDENT_0 . client . METHOD_1 ( METHOD_2 ( ) , org . springframework . data . IDENT_0 . core . IDENT_1 . IDENT_2 , STRING_6 0 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_1 , STRING_2 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_3 , STRING_4 ) ) ; client . put ( policy , new com . IDENT_0 . client . METHOD_1 ( METHOD_2 ( ) , org . springframework . data . IDENT_0 . core . IDENT_1 . IDENT_2 , STRING_6 1 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_1 , STRING_2 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_3 , STRING_4 ) ) ; client . put ( policy , new com . IDENT_0 . client . METHOD_1 ( METHOD_2 ( ) , org . springframework . data . IDENT_0 . core . IDENT_1 . IDENT_2 , STRING_9 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_1 , STRING_2 ) , new com . IDENT_0 . client . METHOD_3 ( STRING_3 , STRING_4 ) ) ; java . util . List < org . springframework . data . IDENT_0 . IDENT_3 . Person > list = template . METHOD_4 ( org . springframework . data . IDENT_0 . IDENT_3 . Person . class ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . Class ) { final org . springframework . data . IDENT_0 . core . List < T > IDENT_4 = new org . springframework . data . IDENT_0 . core . ArrayList < T > ( ) ; java . lang . IDENT_5 < T > results = METHOD_5 ( type , null , ( ( com . IDENT_0 . helper . query . IDENT_6 [ ] ) ( null ) ) ) ; org . springframework . data . IDENT_0 . core . Iterator < T > iterator = results . iterator ( ) ; try { while ( iterator . hasNext ( ) ) { IDENT_4 . add ( iterator . next ( ) ) ; } } finally { ( ( org . springframework . data . IDENT_0 . core . IDENT_7 . IDENT_8 < T > ) ( iterator ) ) . close ( ) ; } return IDENT_4 ; }
org . junit . Assert . assertEquals ( 10 , list . size ( ) ) 