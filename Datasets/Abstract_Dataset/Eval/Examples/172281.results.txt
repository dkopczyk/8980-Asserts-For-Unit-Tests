METHOD_0 ( ) { java . lang . Class entity = org . springframework . data . elasticsearch . core . IDENT_0 . IDENT_1 . class ; IDENT_2 . METHOD_1 ( entity ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . Class ) { if ( clazz . METHOD_3 ( org . springframework . data . elasticsearch . IDENT_3 . IDENT_4 . class ) ) { java . lang . String IDENT_5 = clazz . METHOD_4 ( org . springframework . data . elasticsearch . IDENT_3 . IDENT_4 . class ) . METHOD_5 ( ) ; if ( ! ( org . springframework . util . StringUtils . isEmpty ( METHOD_5 ) ) ) { java . lang . String IDENT_6 = org . springframework . data . elasticsearch . core . IDENT_7 . METHOD_6 ( METHOD_5 ) ; if ( ! ( org . springframework . util . StringUtils . isEmpty ( IDENT_6 ) ) ) { return METHOD_2 ( clazz , IDENT_6 ) ; } } else { org . springframework . data . elasticsearch . core . IDENT_7 . LOGGER . info ( STRING_0 ) ; } } org . springframework . data . elasticsearch . core . mapping . IDENT_8 < T > IDENT_9 = METHOD_7 ( clazz ) ; org . elasticsearch . common . IDENT_10 . IDENT_11 IDENT_12 = null ; try { org . springframework . data . elasticsearch . core . mapping . IDENT_13 property = IDENT_9 . METHOD_8 ( ) ; IDENT_12 = METHOD_9 ( clazz , IDENT_9 . METHOD_10 ( ) , property . METHOD_11 ( ) , IDENT_9 . METHOD_12 ( ) ) ; } catch ( java . lang . Exception e ) { throw new org . springframework . data . elasticsearch . METHOD_13 ( ( STRING_1 + ( clazz . METHOD_14 ( ) ) ) , e ) ; } return METHOD_2 ( clazz , IDENT_12 ) ; }
org . junit . Assert . assertThat ( IDENT_2 . METHOD_2 ( entity ) , is ( true ) ) 