METHOD_0 ( ) { org . apache . IDENT_0 . cache . client . IDENT_1 IDENT_2 = org . mockito . Mockito . mock ( org . apache . IDENT_0 . cache . client . IDENT_1 . class ) ; org . mockito . Mockito . METHOD_1 ( new java . lang . RuntimeException ( "test" ) ) . when ( IDENT_2 ) . METHOD_2 ( ) ; org . springframework . data . IDENT_3 . client . IDENT_4 IDENT_5 = new org . springframework . data . IDENT_3 . client . METHOD_3 ( ) { @ org . springframework . data . IDENT_3 . client . Override MOD_0 < T extends org . apache . IDENT_0 . cache . IDENT_6 > T METHOD_4 ( ) { return ( ( T ) ( IDENT_2 ) ) ; } } ; IDENT_5 . METHOD_5 ( false ) ; "<AssertPlaceHolder>" ; IDENT_5 . METHOD_6 ( org . mockito . Mockito . mock ( org . springframework . context . event . IDENT_7 . class , STRING_0 ) ) ; org . mockito . Mockito . verify ( IDENT_2 , org . mockito . Mockito . METHOD_7 ( ) ) . METHOD_2 ( ) ; } METHOD_8 ( ) { java . lang . Boolean METHOD_2 = METHOD_9 ( ) ; if ( METHOD_2 != null ) { return Boolean . IDENT_8 . equals ( METHOD_2 ) ; } else { try { return org . springframework . data . IDENT_3 . IDENT_9 . METHOD_10 ( METHOD_4 ( ) ) ; } catch ( java . lang . Throwable IDENT_10 ) { return false ; } } }
org . junit . Assert . assertThat ( IDENT_5 . METHOD_8 ( ) , org . hamcrest . CoreMatchers . is ( false ) ) 