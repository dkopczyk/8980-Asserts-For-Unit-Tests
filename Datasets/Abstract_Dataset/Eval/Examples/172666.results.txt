METHOD_0 ( ) { final IDENT_0 IDENT_1 = IDENT_2 . instance ( ) ; IDENT_3 IDENT_4 = IDENT_5 . instance ( ) ; IDENT_6 . METHOD_1 ( IDENT_1 ) . set ( IDENT_4 ) ; IDENT_6 . METHOD_2 ( IDENT_1 , INT_0 , TimeUnit . IDENT_7 ) ; "<AssertPlaceHolder>" ; org . springframework . data . redis . core . IDENT_8 . METHOD_3 ( ( ) -> ! ( IDENT_6 . METHOD_4 ( IDENT_1 ) ) , INT_1 ) ; } METHOD_5 ( IDENT_0 , java . util . concurrent . TimeUnit ) { byte [ ] IDENT_9 = METHOD_6 ( key ) ; return execute ( ( connection ) -> { try { return connection . METHOD_7 ( METHOD_6 , IDENT_10 ) ; } catch ( e ) { return connection . METHOD_8 ( METHOD_6 , IDENT_10 ) ; } } , true ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_6 . METHOD_5 ( IDENT_1 , TimeUnit . IDENT_7 ) ) > 0L ) ) 