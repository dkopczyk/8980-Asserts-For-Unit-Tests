METHOD_0 ( ) { resource = METHOD_1 ( STRING_0 , STRING_1 ) ; org . eclipse . core . resources . IDENT_0 [ ] IDENT_1 = resource . METHOD_2 ( ( ( org . springframework . IDENT_2 . eclipse . beans . core . IDENT_3 . IDENT_4 ) + STRING_2 ) , false , org . eclipse . core . resources . IDENT_5 . IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String , boolean , int ) { java . util . Set < org . eclipse . core . resources . IDENT_0 > IDENT_7 = new java . util . HashSet < org . eclipse . core . resources . IDENT_0 > ( ) ; for ( org . springframework . IDENT_2 . eclipse . core . io . IDENT_8 . IDENT_9 IDENT_10 : this . IDENT_1 . values ( ) ) { if ( ( IDENT_10 . getType ( ) . equals ( type ) ) || ( IDENT_11 && ( IDENT_10 . METHOD_3 ( type ) ) ) ) { IDENT_7 . add ( IDENT_10 ) ; } } return ( ( org . eclipse . core . resources . IDENT_0 [ ] ) ( IDENT_7 . toArray ( new org . eclipse . core . resources . IDENT_0 [ IDENT_7 . size ( ) ] ) ) ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_1 . length ) 