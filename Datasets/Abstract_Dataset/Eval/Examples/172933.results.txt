METHOD_0 ( ) { org . springframework . IDENT_0 . eclipse . IDENT_1 . core . IDENT_2 . IDENT_3 spec = METHOD_1 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { ImmutableMap . Builder < org . springframework . IDENT_0 . eclipse . IDENT_1 . core . IDENT_4 , java . util . Optional < java . lang . String > > builder = com . google . common . collect . ImmutableMap . builder ( ) ; org . w3c . dom . Document IDENT_5 = org . springframework . IDENT_0 . eclipse . IDENT_1 . util . IDENT_6 . METHOD_2 ( IDENT_7 ) ; org . w3c . dom . Element IDENT_8 = METHOD_3 ( IDENT_5 . METHOD_4 ( ) , org . springframework . IDENT_0 . eclipse . IDENT_1 . util . IDENT_9 ) ; java . util . List < org . w3c . dom . Element > IDENT_10 = METHOD_5 ( IDENT_8 , org . springframework . IDENT_0 . eclipse . IDENT_1 . util . IDENT_11 ) ; for ( org . w3c . dom . Element IDENT_12 : IDENT_10 ) { java . lang . String IDENT_13 = org . springframework . IDENT_0 . eclipse . IDENT_1 . util . IDENT_14 . METHOD_6 ( IDENT_12 ) ; java . lang . String IDENT_15 = org . springframework . IDENT_0 . eclipse . IDENT_1 . util . IDENT_14 . METHOD_7 ( IDENT_12 ) ; if ( ( IDENT_15 != null ) && ( IDENT_13 != null ) ) { builder . put ( new org . springframework . IDENT_0 . eclipse . IDENT_1 . core . METHOD_8 ( IDENT_13 , IDENT_15 ) , java . util . Optional . METHOD_9 ( org . springframework . IDENT_0 . eclipse . IDENT_1 . util . IDENT_14 . METHOD_10 ( IDENT_12 ) ) ) ; } } return builder . build ( ) ; }
org . junit . Assert . assertNotNull ( spec ) 