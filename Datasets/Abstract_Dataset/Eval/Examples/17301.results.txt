METHOD_0 ( io . vertx . core . IDENT_0 , org . apache . IDENT_1 . IDENT_2 . vertx . IDENT_3 ) { boolean status = true ; org . mockito . Mockito . when ( IDENT_4 . METHOD_1 ( ) ) . thenReturn ( IDENT_5 ) ; org . mockito . Mockito . when ( IDENT_4 . METHOD_2 ( ) ) . thenReturn ( true ) ; org . mockito . Mockito . when ( IDENT_5 . METHOD_3 ( ) ) . thenReturn ( IDENT_6 ) ; org . mockito . Mockito . when ( IDENT_6 . METHOD_4 ( ) ) . thenReturn ( true ) ; org . mockito . Mockito . when ( IDENT_4 . METHOD_5 ( ) ) . thenReturn ( IDENT_7 ) ; org . mockito . Mockito . when ( IDENT_7 . METHOD_6 ( IDENT_8 . IDENT_9 ) ) . thenReturn ( IDENT_7 ) ; org . mockito . Mockito . when ( IDENT_10 . METHOD_7 ( ) ) . thenReturn ( IDENT_11 ) ; org . mockito . Mockito . when ( IDENT_11 . METHOD_8 ( ) ) . thenReturn ( IDENT_12 ) ; instance . init ( vertx ) ; java . lang . reflect . Field IDENT_13 = instance . getClass ( ) . METHOD_9 ( STRING_0 ) ; IDENT_13 . METHOD_10 ( true ) ; org . apache . IDENT_1 . IDENT_2 . vertx . client . IDENT_14 < org . apache . IDENT_1 . IDENT_2 . vertx . client . http . IDENT_15 > client = new org . apache . IDENT_1 . IDENT_2 . vertx . client . IDENT_14 < org . apache . IDENT_1 . IDENT_2 . vertx . client . http . IDENT_15 > ( vertx , null ) { @ IDENT_16 . IDENT_17 public org . apache . IDENT_1 . IDENT_2 . vertx . client . http . IDENT_15 METHOD_11 ( boolean sync ) { return IDENT_10 ; } } ; IDENT_13 . set ( instance , client ) ; try { instance . METHOD_12 ( IDENT_4 , IDENT_18 ) ; } catch ( java . lang . Exception e ) { status = false ; } "<AssertPlaceHolder>" ; } METHOD_12 ( org . apache . IDENT_1 . IDENT_2 . vertx . client . IDENT_19 . IDENT_20 , org . apache . IDENT_1 . IDENT_2 . vertx . client . IDENT_19 . IDENT_21 ) { IDENT_22 . put ( IDENT_23 . METHOD_13 ( ) , new org . apache . IDENT_1 . IDENT_2 . vertx . client . IDENT_19 . METHOD_14 ( IDENT_23 . METHOD_15 ( ) , IDENT_24 ) ) ; if ( METHOD_16 ( IDENT_23 ) ) { return ; } context . METHOD_17 ( ( v ) -> { if ( ! ( METHOD_16 ( IDENT_23 ) ) ) { IDENT_25 . add ( IDENT_23 ) ; } if ( Status . IDENT_26 . equals ( status ) ) { connect ( ) ; } } ) ; }
org . junit . Assert . assertTrue ( status ) 