METHOD_0 ( ) { try { org . springframework . IDENT_0 . support . IDENT_1 IDENT_2 = new org . springframework . IDENT_0 . support . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( true ) ; IDENT_2 . execute ( new org . springframework . IDENT_0 . IDENT_3 < java . lang . Object , java . lang . Throwable > ( ) { @ org . springframework . IDENT_0 . support . Override public java . lang . Object METHOD_3 ( org . springframework . IDENT_0 . IDENT_4 status ) throws org . springframework . IDENT_0 . support . Exception { status . METHOD_4 ( ) ; throw new java . lang . IllegalStateException ( STRING_0 ) ; } } ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( java . lang . IllegalStateException ex ) { "<AssertPlaceHolder>" ; } } METHOD_4 ( ) { IDENT_5 = true ; }
org . junit . Assert . assertEquals ( STRING_0 , ex . getMessage ( ) ) 