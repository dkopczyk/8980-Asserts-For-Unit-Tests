METHOD_0 ( ) { org . springframework . IDENT_0 . support . IDENT_1 IDENT_2 = new org . springframework . IDENT_0 . support . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( new org . springframework . IDENT_0 . policy . METHOD_3 ( 1 ) ) ; org . springframework . IDENT_0 . IDENT_3 . IDENT_4 IDENT_5 = METHOD_4 ( org . springframework . IDENT_0 . IDENT_3 . IDENT_4 . class ) ; @ org . springframework . IDENT_0 . support . METHOD_5 ( STRING_0 ) org . springframework . IDENT_0 . IDENT_3 . IDENT_6 IDENT_7 = new org . springframework . IDENT_0 . IDENT_3 . METHOD_6 ( ) { } ; IDENT_2 . METHOD_7 ( IDENT_5 ) ; expect ( IDENT_5 . start ( METHOD_8 ( org . springframework . IDENT_0 . IDENT_8 . class ) ) ) . andReturn ( IDENT_7 ) ; replay ( IDENT_5 ) ; try { IDENT_2 . execute ( new org . springframework . IDENT_0 . IDENT_9 < java . lang . Object , java . lang . Exception > ( ) { @ org . springframework . IDENT_0 . support . Override public java . lang . Object METHOD_9 ( org . springframework . IDENT_0 . IDENT_8 context ) throws org . springframework . IDENT_0 . support . Exception { throw new java . lang . Exception ( STRING_1 ) ; } } , null , new org . springframework . IDENT_0 . support . METHOD_10 ( IDENT_2 ) { @ org . springframework . IDENT_0 . support . Override public boolean METHOD_11 ( java . lang . Throwable exception ) { return true ; } } ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . Exception expected ) { "<AssertPlaceHolder>" ; } verify ( IDENT_5 ) ; } METHOD_11 ( java . lang . Throwable ) { return true ; }
org . junit . Assert . assertEquals ( STRING_1 , expected . getMessage ( ) ) 