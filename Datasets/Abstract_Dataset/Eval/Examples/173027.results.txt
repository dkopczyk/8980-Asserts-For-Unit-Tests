METHOD_0 ( ) { final org . springframework . IDENT_0 . model . IDENT_1 IDENT_2 = mock ( org . springframework . IDENT_0 . model . IDENT_1 . class ) ; final org . springframework . IDENT_0 . IDENT_3 . IDENT_4 . IDENT_5 IDENT_6 = mock ( org . springframework . IDENT_0 . IDENT_3 . IDENT_4 . IDENT_5 . class ) ; final org . springframework . IDENT_0 . model . IDENT_7 IDENT_8 = new org . springframework . IDENT_0 . model . METHOD_1 ( STRING_0 ) ; final org . springframework . IDENT_0 . model . METHOD_1 IDENT_9 = new org . springframework . IDENT_0 . model . METHOD_1 ( STRING_1 , 0 , org . springframework . IDENT_0 . model . IDENT_10 . IDENT_11 , null , java . util . Arrays . asList ( IDENT_8 ) ) ; final java . util . List < org . springframework . IDENT_0 . IDENT_3 . IDENT_4 . IDENT_12 . IDENT_13 > IDENT_12 = java . util . Collections . emptyList ( ) ; final org . springframework . IDENT_0 . IDENT_14 . IDENT_15 . IDENT_16 IDENT_17 = new org . springframework . IDENT_0 . IDENT_14 . IDENT_15 . METHOD_2 ( IDENT_2 , IDENT_6 , IDENT_9 , org . springframework . IDENT_0 . IDENT_14 . IDENT_15 . IDENT_18 . IDENT_19 , IDENT_12 , org . springframework . IDENT_0 . IDENT_14 . IDENT_15 . IDENT_18 . IDENT_20 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { return ( ( ( type . METHOD_4 ( ) . size ( ) ) != 0 ) && ( METHOD_5 ( ) ) ) && ( new org . springframework . IDENT_0 . IDENT_14 . IDENT_15 . METHOD_2 ( IDENT_21 , IDENT_22 , type . METHOD_4 ( ) . get ( 0 ) ) . METHOD_6 ( ) ) ; }
org . junit . Assert . assertTrue ( IDENT_17 . METHOD_3 ( ) ) 