METHOD_0 ( ) { final org . springframework . IDENT_0 . model . IDENT_1 IDENT_2 = mock ( org . springframework . IDENT_0 . model . IDENT_1 . class ) ; when ( IDENT_2 . METHOD_1 ( ) ) . thenReturn ( STRING_0 ) ; final org . springframework . IDENT_0 . IDENT_3 . IDENT_4 . IDENT_5 IDENT_6 = IDENT_7 . METHOD_2 ( org . springframework . IDENT_0 . IDENT_3 . IDENT_8 . IDENT_9 . IDENT_10 , org . springframework . IDENT_0 . IDENT_3 . IDENT_8 . IDENT_9 . IDENT_11 , IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String , java . lang . String , org . springframework . IDENT_0 . model . IDENT_1 ) { if ( org . apache . commons . lang3 . StringUtils . METHOD_3 ( IDENT_12 ) ) { return null ; } org . apache . commons . lang3 . IDENT_13 . METHOD_4 ( IDENT_14 , STRING_1 ) ; org . apache . commons . lang3 . IDENT_13 . METHOD_5 ( IDENT_15 , STRING_2 ) ; try { final com . github . IDENT_8 . api . IDENT_16 IDENT_17 = com . github . IDENT_8 . IDENT_18 . parse ( new java . io . ByteArrayInputStream ( IDENT_12 . getBytes ( ) ) ) ; final com . github . IDENT_8 . api . body . IDENT_19 IDENT_20 = org . springframework . IDENT_0 . IDENT_3 . IDENT_8 . IDENT_21 . METHOD_6 ( IDENT_17 , IDENT_15 ) ; if ( IDENT_20 == null ) { return null ; } return org . springframework . IDENT_0 . IDENT_3 . IDENT_8 . IDENT_4 . IDENT_22 . getInstance ( IDENT_17 , null , IDENT_20 , IDENT_14 , IDENT_15 , IDENT_23 , IDENT_24 ) . build ( ) ; } catch ( final java . io . IOException e ) { throw new java . lang . IllegalStateException ( e ) ; } catch ( final com . github . IDENT_8 . IDENT_25 e ) { throw new java . lang . IllegalStateException ( ( ( ( STRING_3 + IDENT_15 ) + STRING_4 ) + ( e . getMessage ( ) ) ) ) ; } }
org . junit . Assert . assertNull ( IDENT_6 ) 