METHOD_0 ( ) { java . lang . String IDENT_0 = METHOD_1 ( IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 ) ; short [ ] IDENT_5 = METHOD_2 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { int len = text . length ( ) ; if ( ( ( len & 1 ) != 0 ) || ( len == 0 ) ) return IDENT_1 . IDENT_2 . IDENT_6 . IDENT_7 ; char [ ] IDENT_8 = text . METHOD_3 ( ) ; short [ ] IDENT_9 = new short [ len > > 1 ] ; for ( int c = 0 , i = 0 ; c < len ; i ++ , c += 2 ) { IDENT_9 [ i ] = ( ( short ) ( ( ( IDENT_8 [ c ] ) OP_0 INT_0 ) | ( ( ( IDENT_8 [ ( c + 1 ) ] ) OP_0 INT_0 ) << 8 ) ) ) ; } return IDENT_9 ; }
org . junit . Assert . assertArrayEquals ( IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 , IDENT_5 ) 