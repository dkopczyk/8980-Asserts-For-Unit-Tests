METHOD_0 ( ) { int k = 5 ; int index = 0 ; IDENT_0 . conf . IDENT_1 conf = new IDENT_0 . conf . METHOD_1 ( ) . set ( METHOD_1 . IDENT_2 , k ) ; double [ ] [ ] IDENT_3 = new double [ ] [ ] { new double [ ] { FLOAT_0 , FLOAT_1 , FLOAT_2 , FLOAT_3 , FLOAT_4 , - FLOAT_5 , FLOAT_6 , FLOAT_7 , FLOAT_8 , - FLOAT_9 , FLOAT_10 , FLOAT_11 , FLOAT_12 , FLOAT_13 , FLOAT_14 , - FLOAT_15 , FLOAT_16 , FLOAT_17 , - FLOAT_18 , FLOAT_19 } , new double [ ] { - FLOAT_20 , FLOAT_21 , - FLOAT_22 , FLOAT_23 , - FLOAT_24 , FLOAT_25 , FLOAT_26 , FLOAT_27 , FLOAT_28 , FLOAT_29 , FLOAT_30 , - FLOAT_31 , FLOAT_32 , FLOAT_33 , FLOAT_34 , - FLOAT_35 , FLOAT_36 , FLOAT_37 , FLOAT_38 , FLOAT_39 } , new double [ ] { FLOAT_40 , FLOAT_41 , FLOAT_42 , - FLOAT_43 , FLOAT_44 , FLOAT_45 , FLOAT_46 , FLOAT_47 , FLOAT_48 , - FLOAT_49 , FLOAT_50 , FLOAT_51 , FLOAT_52 , FLOAT_53 , FLOAT_54 , FLOAT_55 , FLOAT_56 , FLOAT_57 , - FLOAT_58 , - FLOAT_59 } , new double [ ] { FLOAT_60 , FLOAT_61 , FLOAT_62 , - FLOAT_63 , FLOAT_64 , FLOAT_24 , FLOAT_65 , FLOAT_66 , FLOAT_67 , FLOAT_68 , FLOAT_69 , FLOAT_33 , - FLOAT_70 , FLOAT_71 , FLOAT_72 , FLOAT_73 , - FLOAT_74 , FLOAT_75 , FLOAT_76 , FLOAT_77 } , new double [ ] { FLOAT_78 , - FLOAT_79 , FLOAT_80 , FLOAT_81 , FLOAT_82 , FLOAT_83 , - FLOAT_84 , FLOAT_85 , FLOAT_34 , FLOAT_86 , FLOAT_87 , - FLOAT_88 , FLOAT_89 , - FLOAT_90 , FLOAT_91 , FLOAT_81 , FLOAT_92 , FLOAT_93 , FLOAT_94 , - FLOAT_95 } } ; double [ ] [ ] IDENT_4 = new double [ ] [ ] { new double [ ] { FLOAT_0 , FLOAT_1 , FLOAT_2 , FLOAT_3 , FLOAT_4 } , new double [ ] { - FLOAT_20 , FLOAT_21 , - FLOAT_22 , FLOAT_23 , - FLOAT_24 } , new double [ ] { FLOAT_40 , FLOAT_41 , FLOAT_42 , - FLOAT_43 , FLOAT_44 } , new double [ ] { FLOAT_60 , FLOAT_61 , FLOAT_62 , - FLOAT_63 , FLOAT_64 } , new double [ ] { FLOAT_78 , - FLOAT_79 , FLOAT_80 , FLOAT_81 , FLOAT_82 } } ; java . util . List < IDENT_0 . datamodel . IDENT_5 > data = new java . util . ArrayList ( ) ; for ( int i = 0 ; i < 5 ; i ++ ) { IDENT_0 . datamodel . IDENT_5 d = new IDENT_0 . datamodel . METHOD_2 ( new java . util . ArrayList ( ) , new org . apache . commons . math3 . linear . METHOD_3 ( IDENT_3 [ i ] ) ) ; data . add ( d ) ; } IDENT_0 . analysis . IDENT_6 . IDENT_7 t = new IDENT_0 . analysis . IDENT_6 . METHOD_4 ( conf ) ; t . METHOD_5 ( data ) ; java . util . List < IDENT_0 . datamodel . METHOD_2 > IDENT_8 = t . METHOD_6 ( ) . METHOD_7 ( ) ; for ( IDENT_0 . datamodel . METHOD_2 IDENT_9 : IDENT_8 ) { double [ ] val = IDENT_9 . metrics ( ) . toArray ( ) ; "<AssertPlaceHolder>" ; } t . METHOD_8 ( ) ; t . METHOD_9 ( ) ; } metrics ( ) { return metrics ; }
org . junit . Assert . assertArrayEquals ( IDENT_4 [ ( index ++ ) ] , val , 0 ) 