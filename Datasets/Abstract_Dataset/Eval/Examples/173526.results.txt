METHOD_0 ( ) { java . util . concurrent . atomic . IDENT_0 < org . IDENT_1 . IDENT_2 . java . lang . Throwable > reference = new java . util . concurrent . atomic . METHOD_1 ( ) ; org . IDENT_1 . IDENT_2 . java . lang . Exception expected = new org . IDENT_1 . IDENT_2 . java . lang . Exception ( STRING_0 ) ; try { org . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_2 ( ( ) -> { throw expected ; } ) . METHOD_3 ( reference :: set ) . METHOD_4 ( ) ; } catch ( java . lang . Throwable IDENT_4 ) { } "<AssertPlaceHolder>" ; } get ( ) { try { return METHOD_5 ( ) ; } catch ( java . lang . RuntimeException | java . lang . IDENT_5 exception ) { throw exception ; } catch ( final java . lang . Throwable IDENT_6 ) { throw new org . IDENT_1 . IDENT_2 . METHOD_6 ( IDENT_6 ) ; } }
org . junit . Assert . assertEquals ( expected , reference . get ( ) ) 