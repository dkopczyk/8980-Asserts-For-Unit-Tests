METHOD_0 ( ) { it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 IDENT_9 = new it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_1 ( ) ; IDENT_9 . METHOD_2 ( ) ; it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_10 status = new it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_3 ( 1 ) ; status . METHOD_4 ( IDENT_9 ) ; it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_11 . IDENT_12 IDENT_13 = status . METHOD_5 ( ) . METHOD_6 ( ) . get ( 1 ) ; IDENT_13 . METHOD_2 ( ) ; it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_11 . IDENT_14 [ ] IDENT_15 = IDENT_13 . METHOD_7 ( ) ; IDENT_9 . METHOD_8 ( IDENT_13 ) ; for ( it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_11 . IDENT_16 c : it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_11 . IDENT_16 . values ( ) ) { it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_8 . IDENT_17 IDENT_18 = new it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_8 . METHOD_9 ( IDENT_9 , c ) ; IDENT_18 . METHOD_2 ( ) ; if ( ( ! ( c . METHOD_10 ( ) . equals ( IDENT_15 [ 0 ] . METHOD_10 ( ) ) ) ) && ( ! ( c . METHOD_10 ( ) . equals ( IDENT_15 [ 1 ] . METHOD_10 ( ) ) ) ) ) { "<AssertPlaceHolder>" ; } } } isValid ( it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_3 ) { return it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_8 . IDENT_19 . METHOD_11 ( this , status ) ; }
org . junit . Assert . assertFalse ( IDENT_18 . isValid ( status ) ) 