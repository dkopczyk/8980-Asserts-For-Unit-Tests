METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . String > options = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; final java . lang . String IDENT_0 = java . lang . Integer . toString ( INT_0 ) ; options . put ( IDENT_1 . IDENT_2 , IDENT_0 ) ; org . easymock . EasyMock . replay ( IDENT_3 , IDENT_4 ) ; IDENT_5 = new org . apache . IDENT_6 . core . IDENT_7 . METHOD_1 ( STRING_0 , org . apache . IDENT_6 . common . IDENT_8 . IDENT_9 , null , null , IDENT_3 , false , null , options , IDENT_10 , null ) ; org . apache . hadoop . yarn . api . records . IDENT_11 ctx = IDENT_5 . application . METHOD_2 ( ) ; java . lang . String IDENT_12 = java . lang . Long . toString ( ctx . METHOD_3 ( ) ) ; "<AssertPlaceHolder>" ; } toString ( org . apache . hadoop . yarn . api . records . IDENT_13 ) { if ( IDENT_14 == null ) { return STRING_1 ; } else { return java . lang . String . format ( Locale . IDENT_15 , STRING_2 , org . apache . IDENT_6 . server . IDENT_16 . state . IDENT_17 . METHOD_4 ( IDENT_14 ) , org . apache . IDENT_6 . server . IDENT_16 . state . IDENT_17 . METHOD_5 ( IDENT_14 . METHOD_6 ( ) ) ) ; } }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_12 ) 