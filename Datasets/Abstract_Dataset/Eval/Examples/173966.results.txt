METHOD_0 ( ) { java . lang . String command = STRING_0 ; try { parser . parse ( command ) ; org . junit . Assert . fail ( ) ; } catch ( com . stratio . IDENT_0 . utils . IDENT_1 e ) { "<AssertPlaceHolder>" ; } } parse ( java . lang . String ) { java . util . Map < com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 , java . util . regex . IDENT_5 > IDENT_6 = new java . util . HashMap ( ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_7 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_1 9 ) ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_8 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_2 ) ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_9 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_1 5 ) ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_10 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_1 ) ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_11 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_3 ) ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_12 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_4 ) ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_13 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_4 0 ) ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_14 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_1 2 ) ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_15 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_1 6 ) ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_16 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_5 ) ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_17 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_6 ) ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_18 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_7 ) ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_19 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_1 3 ) ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_20 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_1 1 ) ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_21 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_4 1 ) ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_22 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_8 ) ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_23 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_9 ) ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_24 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_1 7 ) ) ; IDENT_6 . put ( com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 . IDENT_25 , java . util . regex . IDENT_5 . METHOD_1 ( STRING_1 4 ) ) ; java . lang . String IDENT_26 = input . toLowerCase ( ) . trim ( ) ; for ( Map . Entry < com . stratio . IDENT_2 . utils . IDENT_3 . IDENT_4 , java . util . regex . IDENT_5 > p : IDENT_6 . entrySet ( ) ) { java . util . regex . IDENT_27 matcher = p . getValue ( ) . matcher ( IDENT_26 ) ; if ( matcher . find ( ) ) { java . lang . String IDENT_28 = STRING_1 0 ; if ( ( matcher . METHOD_2 ( ) ) > 1 ) { IDENT_28 = matcher . group ( 2 ) ; } switch ( p . getKey ( ) ) { case IDENT_7 : return METHOD_3 ( IDENT_28 ) ; case IDENT_8 : return METHOD_4 ( IDENT_28 ) ; case IDENT_9 : return METHOD_5 ( IDENT_28 ) ; case IDENT_10 : return create ( IDENT_28 ) ; case IDENT_11 : return METHOD_6 ( IDENT_28 ) ; case IDENT_12 : return METHOD_7 ( IDENT_28 ) ; case IDENT_13 : return METHOD_8 ( IDENT_28 ) ; case IDENT_14 : return insert ( IDENT_28 ) ; case IDENT_15 : return list ( IDENT_28 ) ; case IDENT_16 : return METHOD_9 ( IDENT_28 ) ; case IDENT_17 : return METHOD_10 ( IDENT_28 ) ; case IDENT_18 : return METHOD_11 ( IDENT_28 ) ; case IDENT_19 : return METHOD_12 ( IDENT_28 ) ; case IDENT_20 : return METHOD_13 ( IDENT_28 ) ; case IDENT_21 : return METHOD_14 ( IDENT_28 ) ; case IDENT_22 : return METHOD_15 ( IDENT_28 ) ; case IDENT_23 : return METHOD_16 ( IDENT_28 ) ; case IDENT_24 : return METHOD_17 ( IDENT_28 ) ; case IDENT_25 : return METHOD_18 ( ) ; default : return STRING_1 8 ; } } } return STRING_10 ; }
org . junit . Assert . assertNotNull ( e ) 