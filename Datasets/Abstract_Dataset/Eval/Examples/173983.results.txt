METHOD_0 ( ) { java . lang . Boolean filter = IDENT_0 . METHOD_1 ( IDENT_1 , context ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . Object , java . util . Map ) { final java . lang . String IDENT_2 = METHOD_2 ( context ) ; final java . lang . String IDENT_3 = context . get ( STRING_0 ) ; int isValid = 0 ; try { final java . util . Date IDENT_4 = new java . text . METHOD_3 ( IDENT_2 ) . parse ( IDENT_3 ) ; final java . util . Date IDENT_5 = new java . text . METHOD_3 ( IDENT_2 ) . parse ( ( ( java . lang . String ) ( IDENT_6 ) ) ) ; isValid = IDENT_5 . compareTo ( IDENT_4 ) ; } catch ( java . text . IDENT_7 e ) { e . printStackTrace ( ) ; } return isValid > 0 ; }
org . junit . Assert . assertNotNull ( filter ) 