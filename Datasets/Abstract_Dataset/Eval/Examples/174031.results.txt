METHOD_0 ( ) { try { java . lang . String [ ] parameters = new java . lang . String [ ] { STRING_0 , eu . IDENT_0 . client . IDENT_1 . METHOD_1 ( ) } ; eu . IDENT_0 . client . IDENT_2 IDENT_3 = new eu . IDENT_0 . client . METHOD_2 ( ) ; int IDENT_4 = IDENT_3 . info ( parameters ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { System . err . println ( e . getMessage ( ) ) ; e . printStackTrace ( ) ; org . junit . Assert . fail ( ( STRING_1 + ( e . getMessage ( ) ) ) ) ; } } info ( java . lang . String [ ] ) { org . apache . commons . cli . IDENT_5 line ; try { line = parser . parse ( eu . IDENT_0 . client . METHOD_2 . IDENT_6 , args , false ) ; METHOD_3 ( line ) ; } catch ( org . apache . commons . cli . IDENT_7 e ) { System . out . println ( e . getMessage ( ) ) ; METHOD_4 ( ) ; return 1 ; } catch ( org . apache . commons . cli . IDENT_8 e ) { System . out . println ( e . getMessage ( ) ) ; METHOD_4 ( ) ; return 2 ; } catch ( java . lang . Exception e ) { return METHOD_5 ( e ) ; } if ( IDENT_9 ) { METHOD_4 ( ) ; return 0 ; } boolean description = line . METHOD_6 ( eu . IDENT_0 . client . METHOD_2 . IDENT_10 . METHOD_7 ( ) ) ; boolean plan = line . METHOD_6 ( eu . IDENT_0 . client . METHOD_2 . IDENT_11 . METHOD_7 ( ) ) ; if ( ( ! description ) && ( ! plan ) ) { System . out . println ( STRING_2 ) ; METHOD_4 ( ) ; return 1 ; } eu . IDENT_0 . client . IDENT_12 . IDENT_13 IDENT_12 ; try { IDENT_12 = METHOD_8 ( line ) ; } catch ( java . lang . Throwable t ) { return METHOD_5 ( t ) ; } if ( IDENT_12 == null ) { METHOD_4 ( ) ; return 1 ; } int IDENT_14 = - 1 ; if ( line . METHOD_6 ( eu . IDENT_0 . client . METHOD_2 . IDENT_15 . METHOD_7 ( ) ) ) { java . lang . String IDENT_16 = line . METHOD_9 ( eu . IDENT_0 . client . METHOD_2 . IDENT_15 . METHOD_7 ( ) ) ; try { IDENT_14 = java . lang . Integer . METHOD_10 ( IDENT_16 ) ; } catch ( java . lang . IDENT_17 e ) { System . out . println ( ( ( STRING_3 + IDENT_16 ) + STRING_4 ) ) ; METHOD_11 ( ) ; return 1 ; } if ( IDENT_14 <= 0 ) { System . out . println ( STRING_5 ) ; METHOD_11 ( ) ; return 1 ; } } try { if ( description ) { java . lang . String IDENT_18 = IDENT_12 . METHOD_12 ( ) ; if ( IDENT_18 != null ) { System . out . println ( STRING_6 ) ; System . out . println ( IDENT_18 ) ; System . out . println ( STRING_7 ) ; } else { System . out . println ( STRING_8 ) ; } } if ( plan ) { eu . IDENT_0 . client . IDENT_12 . IDENT_19 client = METHOD_13 ( line ) ; java . lang . String IDENT_20 = client . METHOD_14 ( IDENT_12 , IDENT_14 ) ; if ( IDENT_20 != null ) { System . out . println ( STRING_9 ) ; System . out . println ( IDENT_20 ) ; System . out . println ( STRING_7 ) ; } else { System . out . println ( STRING_10 ) ; } } return 0 ; } catch ( java . lang . Throwable t ) { return METHOD_5 ( t ) ; } finally { IDENT_12 . METHOD_15 ( ) ; } }
org . junit . Assert . assertTrue ( ( IDENT_4 == 0 ) ) 