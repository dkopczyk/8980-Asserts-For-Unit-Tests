METHOD_0 ( ) { java . io . File [ ] IDENT_0 = ( this . IDENT_1 . METHOD_1 ( ) ) ? this . IDENT_1 . METHOD_2 ( ) : new java . io . File [ ] { this . IDENT_1 } ; java . util . Arrays . METHOD_3 ( IDENT_0 ) ; for ( int IDENT_2 = 0 ; IDENT_2 < ( this . IDENT_3 ) ; IDENT_2 ++ ) { long IDENT_4 = ( this . IDENT_5 [ IDENT_2 ] ) OP_0 ( ( this . IDENT_6 ) - ( this . info . METHOD_4 ( ) ) ) ; long IDENT_7 = ( ( ( ( this . METHOD_5 ( IDENT_2 ) ) - 1 ) * ( this . IDENT_6 ) ) + ( this . info . METHOD_4 ( ) ) ) + IDENT_4 ; "<AssertPlaceHolder>" ; } } METHOD_4 ( ) { return ( 8 + 8 ) + 8 ; }
org . junit . Assert . assertEquals ( IDENT_7 , IDENT_0 [ IDENT_2 ] . length ( ) ) 