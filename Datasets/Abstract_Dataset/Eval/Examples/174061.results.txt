METHOD_0 ( ) { try { eu . IDENT_0 . IDENT_1 . runtime . task . IDENT_2 . IDENT_3 < eu . IDENT_0 . api . common . IDENT_4 . IDENT_5 < eu . IDENT_0 . api . java . tuple . IDENT_6 < java . lang . String , java . lang . Integer > > , eu . IDENT_0 . api . java . tuple . IDENT_6 < java . lang . String , java . lang . Integer > > context = new eu . IDENT_0 . IDENT_1 . runtime . task . IDENT_2 . IDENT_3 < eu . IDENT_0 . api . common . IDENT_4 . IDENT_5 < eu . IDENT_0 . api . java . tuple . IDENT_6 < java . lang . String , java . lang . Integer > > , eu . IDENT_0 . api . java . tuple . IDENT_6 < java . lang . String , java . lang . Integer > > ( ( INT_0 * INT_0 ) ) ; context . METHOD_1 ( ) . METHOD_2 ( ( INT_1 * INT_0 ) ) ; java . util . List < eu . IDENT_0 . api . java . tuple . IDENT_6 < java . lang . String , java . lang . Integer > > data = eu . IDENT_0 . IDENT_1 . runtime . task . IDENT_2 . IDENT_7 . METHOD_3 ( ) ; java . util . Collections . METHOD_4 ( data ) ; eu . IDENT_0 . api . java . IDENT_8 . IDENT_9 < eu . IDENT_0 . api . java . tuple . IDENT_6 < java . lang . String , java . lang . Integer > > IDENT_10 = ( ( eu . IDENT_0 . api . java . IDENT_8 . IDENT_9 < eu . IDENT_0 . api . java . tuple . IDENT_6 < java . lang . String , java . lang . Integer > > ) ( eu . IDENT_0 . api . java . IDENT_8 . IDENT_11 . METHOD_5 ( data . get ( 0 ) ) ) ) ; eu . IDENT_0 . util . IDENT_12 < eu . IDENT_0 . api . java . tuple . IDENT_6 < java . lang . String , java . lang . Integer > > input = eu . IDENT_0 . IDENT_1 . runtime . util . IDENT_13 . get ( ) ; context . METHOD_6 ( IDENT_14 . IDENT_15 ) ; eu . IDENT_0 . api . common . IDENT_8 . IDENT_16 < eu . IDENT_0 . api . java . tuple . IDENT_6 < java . lang . String , java . lang . Integer > > IDENT_17 = IDENT_10 . METHOD_7 ( new int [ ] { 0 } , new boolean [ ] { true } ) ; eu . IDENT_0 . IDENT_1 . runtime . task . IDENT_2 . IDENT_18 < eu . IDENT_0 . api . java . tuple . IDENT_6 < java . lang . String , java . lang . Integer > > result = new eu . IDENT_0 . IDENT_1 . runtime . task . IDENT_2 . IDENT_18 < eu . IDENT_0 . api . java . tuple . IDENT_6 < java . lang . String , java . lang . Integer > > ( IDENT_10 . METHOD_8 ( ) ) ; context . METHOD_9 ( input , IDENT_10 . METHOD_8 ( ) ) ; context . METHOD_10 ( IDENT_17 ) ; context . METHOD_11 ( result ) ; eu . IDENT_0 . IDENT_1 . runtime . task . IDENT_19 < eu . IDENT_0 . api . java . tuple . IDENT_6 < java . lang . String , java . lang . Integer > > driver = new eu . IDENT_0 . IDENT_1 . runtime . task . IDENT_19 < eu . IDENT_0 . api . java . tuple . IDENT_6 < java . lang . String , java . lang . Integer > > ( ) ; driver . METHOD_12 ( context ) ; driver . METHOD_13 ( ) ; driver . run ( ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { System . err . println ( e . getMessage ( ) ) ; e . printStackTrace ( ) ; org . junit . Assert . fail ( e . getMessage ( ) ) ; } } METHOD_14 ( ) { return list ; }
org . junit . Assert . assertEquals ( 0 , result . METHOD_14 ( ) . size ( ) ) 