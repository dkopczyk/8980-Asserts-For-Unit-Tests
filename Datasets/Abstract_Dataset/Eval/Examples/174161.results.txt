METHOD_0 ( ) { com . IDENT_0 . core . model . IDENT_1 IDENT_2 = com . IDENT_0 . test . service . TestUtils . METHOD_1 ( IDENT_3 . IDENT_4 ) ; IDENT_2 . setId ( null ) ; IDENT_2 . METHOD_2 ( IDENT_5 ) ; IDENT_2 . METHOD_3 ( IDENT_6 ) ; java . text . IDENT_7 IDENT_8 = new java . text . METHOD_4 ( STRING_0 ) ; java . lang . String IDENT_9 = java . lang . Long . toString ( IDENT_8 . parse ( STRING_1 ) . getTime ( ) ) ; java . util . Map < java . lang . String , java . lang . String > metadata = new java . util . HashMap ( ) ; metadata . put ( STRING_2 , IDENT_9 ) ; IDENT_2 . METHOD_5 ( metadata ) ; com . IDENT_0 . core . model . IDENT_1 IDENT_10 = IDENT_11 . METHOD_6 ( IDENT_2 ) ; IDENT_11 . METHOD_7 ( IDENT_2 ) ; java . lang . Thread . sleep ( TimeUnit . IDENT_12 . METHOD_8 ( 10 ) ) ; IDENT_13 = new com . IDENT_0 . test . service . METHOD_9 ( com . IDENT_0 . test . service . TestUtils . METHOD_10 ( ) ) ; java . lang . String IDENT_14 = STRING_3 + ( IDENT_10 . METHOD_11 ( ) . getId ( ) ) ; java . lang . String IDENT_15 = ( STRING_4 + ( IDENT_2 . getId ( ) ) ) + "/" ; java . util . List < org . IDENT_16 . IDENT_17 . domain . IDENT_18 > IDENT_19 = IDENT_13 . METHOD_12 ( IDENT_14 , IDENT_15 ) ; "<AssertPlaceHolder>" ; } METHOD_12 ( java . lang . String , java . lang . String ) { if ( ! ( IDENT_20 . METHOD_13 ( IDENT_14 ) ) ) { return java . util . Collections . emptyList ( ) ; } org . IDENT_16 . IDENT_17 . domain . IDENT_21 < ? extends org . IDENT_16 . IDENT_17 . domain . IDENT_22 > IDENT_23 = IDENT_20 . list ( IDENT_14 , IDENT_24 . Builder . METHOD_14 ( IDENT_15 ) ) ; java . util . List < org . IDENT_16 . IDENT_17 . domain . IDENT_18 > IDENT_19 = new java . util . ArrayList ( ) ; for ( org . IDENT_16 . IDENT_17 . domain . IDENT_22 metadata : IDENT_23 ) { IDENT_19 . add ( IDENT_20 . METHOD_15 ( IDENT_14 , metadata . getName ( ) ) ) ; } return IDENT_19 ; }
org . junit . Assert . assertEquals ( 3 , IDENT_19 . size ( ) ) 