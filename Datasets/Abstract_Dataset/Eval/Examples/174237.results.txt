METHOD_0 ( ) { java . io . File file = IDENT_0 . METHOD_1 ( STRING_0 ) ; file . delete ( ) ; "<AssertPlaceHolder>" ; path = IDENT_0 . METHOD_2 ( ) . getAbsolutePath ( ) ; METHOD_3 ( path ) ; net . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = METHOD_4 ( ) ; for ( com . streamsets . pipeline . lib . remote . IDENT_5 IDENT_6 : METHOD_5 ( IDENT_4 ) ) { for ( java . lang . String p : new java . lang . String [ ] { file . getName ( ) , "/" + ( file . getName ( ) ) } ) { METHOD_6 ( ( ) -> IDENT_6 . METHOD_7 ( p ) ) ; } } } exists ( ) { return IDENT_6 . exists ( METHOD_8 ( ) ) ; }
org . junit . Assert . assertFalse ( file . exists ( ) ) 