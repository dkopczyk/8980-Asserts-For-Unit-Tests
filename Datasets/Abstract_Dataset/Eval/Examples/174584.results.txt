METHOD_0 ( ) { byte [ ] IDENT_0 = new byte [ ] { 1 , 2 , 3 } ; java . io . File file = new java . io . File ( METHOD_1 ( ) , STRING_0 ) ; METHOD_2 ( new java . io . File ( ( ( file . getAbsolutePath ( ) ) + STRING_1 ) ) , IDENT_0 ) ; com . streamsets . IDENT_1 . io . IDENT_2 IDENT_3 = new com . streamsets . IDENT_1 . io . METHOD_3 ( file ) ; try { byte [ ] res = METHOD_4 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; IDENT_3 . METHOD_5 ( ) . close ( ) ; } finally { IDENT_3 . close ( ) ; } } METHOD_4 ( com . streamsets . IDENT_1 . io . METHOD_3 ) { java . io . InputStream is = IDENT_4 . METHOD_5 ( ) ; byte [ ] arr = new byte [ IDENT_4 . METHOD_6 ( ) . exists ( ) ? ( ( int ) ( IDENT_4 . METHOD_6 ( ) . length ( ) ) ) : 0 ] ; org . apache . commons . io . IDENT_5 . METHOD_7 ( is , arr ) ; is . close ( ) ; return arr ; }
org . junit . Assert . assertArrayEquals ( IDENT_0 , res ) 