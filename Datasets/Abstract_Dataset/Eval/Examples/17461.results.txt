METHOD_0 ( ) { org . apache . IDENT_0 . catalog . Schema schema = new org . apache . IDENT_0 . catalog . Schema ( ) ; schema . METHOD_1 ( STRING_0 , Type . IDENT_1 ) ; schema . METHOD_1 ( STRING_1 , Type . IDENT_1 ) ; schema . METHOD_1 ( "name" , Type . IDENT_2 ) ; org . apache . IDENT_0 . catalog . IDENT_3 meta = org . apache . IDENT_0 . catalog . IDENT_4 . METHOD_2 ( IDENT_5 . IDENT_6 ) ; org . apache . IDENT_0 . storage . IDENT_7 [ ] IDENT_8 = new org . apache . IDENT_0 . storage . IDENT_7 [ 4 ] ; for ( int i = 0 ; i < ( IDENT_8 . length ) ; i ++ ) { IDENT_8 [ i ] = new org . apache . IDENT_0 . storage . METHOD_3 ( 3 ) ; IDENT_8 [ i ] . put ( new org . apache . IDENT_0 . IDENT_9 . IDENT_10 [ ] { org . apache . IDENT_0 . IDENT_9 . IDENT_11 . METHOD_4 ( i ) , org . apache . IDENT_0 . IDENT_9 . IDENT_11 . METHOD_4 ( ( i + INT_0 ) ) , org . apache . IDENT_0 . IDENT_9 . IDENT_11 . METHOD_5 ( ( "name" + i ) ) } ) ; } org . apache . hadoop . fs . Path path = org . apache . IDENT_0 . storage . IDENT_12 . METHOD_6 ( IDENT_13 , STRING_2 , STRING_3 ) ; fs . METHOD_7 ( path . METHOD_8 ( ) ) ; org . apache . IDENT_0 . storage . IDENT_14 IDENT_15 = org . apache . IDENT_0 . storage . IDENT_16 . METHOD_9 ( conf ) . METHOD_10 ( meta , schema , path ) ; IDENT_15 . init ( ) ; for ( org . apache . IDENT_0 . storage . IDENT_7 t : IDENT_8 ) { IDENT_15 . METHOD_11 ( t ) ; } IDENT_15 . close ( ) ; org . apache . IDENT_0 . storage . IDENT_17 IDENT_18 = org . apache . IDENT_0 . storage . IDENT_16 . METHOD_9 ( conf ) . METHOD_12 ( meta , schema , path ) ; IDENT_18 . init ( ) ; int i = 0 ; while ( ( IDENT_18 . next ( ) ) != null ) { i ++ ; } "<AssertPlaceHolder>" ; } next ( ) { try { if ( ( IDENT_19 ) <= 0 ) { return false ; } IDENT_20 = METHOD_13 ( ) ; ( IDENT_21 ) ++ ; if ( ( IDENT_20 ) != null ) { return true ; } } catch ( java . io . IOException e ) { throw new org . apache . IDENT_0 . jdbc . METHOD_14 ( e . getMessage ( ) ) ; } return false ; }
org . junit . Assert . assertEquals ( 4 , i ) 