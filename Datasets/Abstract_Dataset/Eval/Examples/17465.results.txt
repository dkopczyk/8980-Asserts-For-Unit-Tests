METHOD_0 ( ) { org . apache . IDENT_0 . catalog . Schema schema = new org . apache . IDENT_0 . catalog . Schema ( ) ; schema . METHOD_1 ( STRING_0 , Type . IDENT_1 ) ; schema . METHOD_1 ( STRING_1 , Type . IDENT_2 ) ; schema . METHOD_1 ( STRING_2 5 , Type . IDENT_3 , 7 ) ; schema . METHOD_1 ( STRING_3 , Type . IDENT_4 ) ; schema . METHOD_1 ( STRING_2 0 , Type . IDENT_5 ) ; schema . METHOD_1 ( STRING_4 , Type . IDENT_6 ) ; schema . METHOD_1 ( STRING_5 , Type . IDENT_7 ) ; schema . METHOD_1 ( STRING_6 , Type . IDENT_8 ) ; schema . METHOD_1 ( STRING_7 , Type . IDENT_9 ) ; schema . METHOD_1 ( STRING_8 , Type . IDENT_10 ) ; schema . METHOD_1 ( STRING_9 , Type . IDENT_11 ) ; schema . METHOD_1 ( STRING_2 3 , Type . IDENT_12 ) ; org . apache . IDENT_0 . catalog . IDENT_13 options = new org . apache . IDENT_0 . catalog . METHOD_2 ( ) ; org . apache . IDENT_0 . catalog . IDENT_14 meta = org . apache . IDENT_0 . catalog . IDENT_15 . METHOD_3 ( IDENT_16 , options ) ; org . apache . hadoop . fs . Path IDENT_17 = new org . apache . hadoop . fs . Path ( IDENT_18 , STRING_2 1 ) ; org . apache . IDENT_0 . storage . v2 . IDENT_19 IDENT_20 = org . apache . IDENT_0 . storage . v2 . IDENT_21 . METHOD_4 ( conf ) . METHOD_5 ( meta , schema , IDENT_17 ) ; IDENT_20 . init ( ) ; org . apache . IDENT_0 . storage . v2 . IDENT_22 tuple = new org . apache . IDENT_0 . storage . v2 . METHOD_6 ( 12 ) ; tuple . put ( new org . apache . IDENT_0 . IDENT_23 . IDENT_24 [ ] { org . apache . IDENT_0 . IDENT_23 . IDENT_25 . METHOD_7 ( true ) , org . apache . IDENT_0 . IDENT_23 . IDENT_25 . METHOD_8 ( ( ( byte ) ( INT_0 ) ) ) , org . apache . IDENT_0 . IDENT_23 . IDENT_25 . METHOD_9 ( STRING_2 4 ) , org . apache . IDENT_0 . IDENT_23 . IDENT_25 . METHOD_10 ( ( ( short ) ( INT_1 ) ) ) , org . apache . IDENT_0 . IDENT_23 . IDENT_25 . METHOD_11 ( INT_2 ) , org . apache . IDENT_0 . IDENT_23 . IDENT_25 . METHOD_12 ( INT_3 ) , org . apache . IDENT_0 . IDENT_23 . IDENT_25 . METHOD_13 ( FLOAT_0 ) , org . apache . IDENT_0 . IDENT_23 . IDENT_25 . METHOD_14 ( FLOAT_1 ) , org . apache . IDENT_0 . IDENT_23 . IDENT_25 . METHOD_15 ( STRING_2 4 ) , org . apache . IDENT_0 . IDENT_23 . IDENT_25 . METHOD_16 ( STRING_2 FLOAT_2 getBytes ( ) ) , org . apache . IDENT_0 . IDENT_23 . IDENT_25 . METHOD_17 ( STRING_2 2 ) , org . apache . IDENT_0 . IDENT_23 . IDENT_26 . get ( ) } ) ; IDENT_20 . METHOD_18 ( tuple ) ; IDENT_20 . METHOD_19 ( ) ; IDENT_20 . close ( ) ; org . apache . hadoop . fs . IDENT_27 status = fs . METHOD_20 ( IDENT_17 ) ; org . apache . IDENT_0 . storage . IDENT_28 . IDENT_29 IDENT_28 = new org . apache . IDENT_0 . storage . IDENT_28 . METHOD_21 ( STRING_2 , IDENT_17 , 0 , status . METHOD_22 ( ) ) ; org . apache . IDENT_0 . storage . v2 . IDENT_30 IDENT_31 = org . apache . IDENT_0 . storage . v2 . IDENT_21 . METHOD_4 ( conf ) . METHOD_23 ( meta , schema , IDENT_28 ) ; IDENT_31 . init ( ) ; org . apache . IDENT_0 . storage . v2 . IDENT_22 IDENT_32 ; while ( ( IDENT_32 = IDENT_31 . next ( ) ) != null ) { for ( int i = 0 ; i < ( tuple . size ( ) ) ; i ++ ) { "<AssertPlaceHolder>" ; } } } get ( java . lang . String ) { org . apache . IDENT_0 . IDENT_23 . IDENT_33 factory ; if ( org . apache . IDENT_0 . IDENT_23 . IDENT_33 . IDENT_34 . containsKey ( IDENT_35 ) ) { factory = org . apache . IDENT_0 . IDENT_23 . IDENT_33 . IDENT_34 . get ( IDENT_35 ) ; } else { factory = new org . apache . IDENT_0 . IDENT_23 . METHOD_24 ( IDENT_35 ) ; org . apache . IDENT_0 . IDENT_23 . METHOD_24 . IDENT_34 . put ( IDENT_35 , factory ) ; } return factory ; }
org . junit . Assert . assertEquals ( tuple . get ( i ) , IDENT_32 . get ( i ) ) 