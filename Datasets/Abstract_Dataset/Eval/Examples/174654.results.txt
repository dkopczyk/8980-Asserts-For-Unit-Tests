METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 , false ) ) . thenReturn ( IDENT_6 ) ; IDENT_3 . METHOD_2 ( IDENT_0 ) ; IDENT_3 . METHOD_3 ( IDENT_7 . IDENT_8 ) ; java . util . List < java . lang . String > IDENT_9 = IDENT_3 . METHOD_1 ( IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { final java . util . IDENT_10 < org . eclipse . IDENT_1 . internal . ui . text . IDENT_2 . engine . IDENT_11 > IDENT_9 = new java . util . IDENT_12 < org . eclipse . IDENT_1 . internal . ui . text . IDENT_2 . engine . IDENT_11 > ( ) ; MOD_0 ( this ) { IDENT_9 . addAll ( IDENT_13 . METHOD_1 ( IDENT_14 , false ) ) ; IDENT_9 . addAll ( IDENT_15 . METHOD_1 ( IDENT_14 , false ) ) ; if ( ( ( IDENT_1 . IDENT_2 . IDENT_16 . IDENT_7 . IDENT_17 ) == ( IDENT_18 ) ) && ( ( IDENT_19 ) != null ) ) { IDENT_9 . addAll ( IDENT_19 . METHOD_1 ( IDENT_14 , false ) ) ; } } java . util . List < java . lang . String > IDENT_20 = new java . util . ArrayList < java . lang . String > ( IDENT_9 . size ( ) ) ; for ( org . eclipse . IDENT_1 . internal . ui . text . IDENT_2 . engine . IDENT_11 IDENT_21 : IDENT_9 ) { IDENT_20 . add ( IDENT_21 . getText ( ) ) ; } return IDENT_20 ; }
org . junit . Assert . assertEquals ( 0 , IDENT_9 . size ( ) ) 