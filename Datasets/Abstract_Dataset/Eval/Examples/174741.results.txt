METHOD_0 ( ) { final byte [ ] data = new byte [ ] { 0 , - INT_0 } ; final java . io . ByteArrayOutputStream stream = new java . io . ByteArrayOutputStream ( ) ; final com . IDENT_0 . transform . IDENT_1 . IDENT_2 IDENT_3 = new com . IDENT_0 . transform . IDENT_1 . METHOD_1 ( stream ) ; IDENT_3 . METHOD_2 ( 0 , 1 ) ; IDENT_3 . METHOD_2 ( 1 , 8 ) ; IDENT_3 . METHOD_3 ( ) ; IDENT_3 . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { stream . write ( buffer , 0 , index ) ; stream . METHOD_4 ( ) ; int IDENT_4 ; if ( ( offset ) == 0 ) { IDENT_4 = 0 ; } else { IDENT_4 = 1 ; buffer [ 0 ] = buffer [ index ] ; } for ( int i = IDENT_4 ; i < ( buffer . length ) ; i ++ ) { buffer [ i ] = 0 ; } pos += index ; index = 0 ; }
org . junit . Assert . assertArrayEquals ( data , stream . toByteArray ( ) ) 