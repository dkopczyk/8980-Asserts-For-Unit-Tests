METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; org . apache . hadoop . hbase . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = METHOD_1 ( IDENT_0 ) ; org . apache . hadoop . fs . Path IDENT_5 = new org . apache . hadoop . fs . Path ( IDENT_6 , IDENT_0 ) ; METHOD_2 ( IDENT_5 ) ; fs . METHOD_3 ( new org . apache . hadoop . fs . Path ( IDENT_5 , IDENT_4 . METHOD_4 ( ) ) ) ; org . apache . hadoop . hbase . IDENT_1 . IDENT_2 . IDENT_7 IDENT_8 = METHOD_5 ( IDENT_0 ) ; org . apache . hadoop . hbase . IDENT_1 . IDENT_9 IDENT_10 = org . apache . hadoop . hbase . IDENT_1 . IDENT_9 . METHOD_6 ( IDENT_4 , IDENT_6 , this . conf , IDENT_8 ) ; IDENT_10 . close ( ) ; IDENT_10 . METHOD_7 ( ) . METHOD_8 ( ) ; final byte [ ] tableName = org . apache . hadoop . hbase . util . IDENT_11 . METHOD_9 ( IDENT_0 ) ; final byte [ ] IDENT_12 = tableName ; org . apache . hadoop . hbase . IDENT_1 . IDENT_2 . IDENT_13 IDENT_14 = METHOD_10 ( this . conf ) ; final int IDENT_15 = 1000 ; for ( org . apache . hadoop . hbase . IDENT_1 . IDENT_2 . IDENT_16 IDENT_17 : IDENT_8 . METHOD_11 ( ) ) { METHOD_12 ( tableName , IDENT_4 , IDENT_12 , IDENT_17 . getName ( ) , IDENT_15 , IDENT_18 , IDENT_14 , IDENT_8 ) ; } IDENT_14 . close ( ) ; METHOD_13 ( this . conf ) ; org . apache . hadoop . hbase . IDENT_1 . IDENT_2 . IDENT_13 IDENT_19 = METHOD_10 ( this . conf ) ; IDENT_19 . METHOD_14 ( IDENT_14 . METHOD_15 ( ) ) ; for ( org . apache . hadoop . hbase . IDENT_1 . IDENT_2 . IDENT_16 IDENT_17 : IDENT_8 . METHOD_11 ( ) ) { METHOD_12 ( tableName , IDENT_4 , IDENT_12 , IDENT_17 . getName ( ) , IDENT_15 , IDENT_18 , IDENT_19 , IDENT_8 ) ; } IDENT_19 . close ( ) ; METHOD_13 ( this . conf ) ; org . apache . hadoop . hbase . IDENT_1 . IDENT_2 . IDENT_13 IDENT_20 = METHOD_10 ( this . conf ) ; IDENT_20 . METHOD_14 ( IDENT_19 . METHOD_15 ( ) ) ; try { final org . apache . hadoop . hbase . IDENT_1 . IDENT_9 IDENT_21 = new org . apache . hadoop . hbase . IDENT_1 . METHOD_16 ( IDENT_5 , IDENT_20 , this . fs , this . conf , IDENT_4 , IDENT_8 , null ) ; long IDENT_22 = IDENT_21 . METHOD_17 ( ) ; "<AssertPlaceHolder>" ; IDENT_21 . close ( ) ; } finally { IDENT_20 . METHOD_8 ( ) ; } } METHOD_15 ( ) { return IDENT_23 ; }
org . junit . Assert . assertTrue ( ( IDENT_22 > ( IDENT_20 . METHOD_15 ( ) ) ) ) 