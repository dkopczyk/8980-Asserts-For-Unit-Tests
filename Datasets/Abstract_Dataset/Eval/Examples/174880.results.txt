METHOD_0 ( ) { org . apache . hadoop . hbase . IDENT_0 . IDENT_1 . IDENT_2 [ ] IDENT_3 = new org . apache . hadoop . hbase . IDENT_0 . IDENT_1 . IDENT_2 . Entry [ 5 ] ; for ( int i = 0 ; i < 2 ; i ++ ) { IDENT_3 [ i ] = METHOD_1 ( org . apache . hadoop . hbase . IDENT_4 . IDENT_0 . IDENT_5 . IDENT_6 , i , IDENT_7 . Type . IDENT_8 ) ; } IDENT_3 [ 2 ] = METHOD_1 ( org . apache . hadoop . hbase . IDENT_4 . IDENT_0 . IDENT_5 . IDENT_6 , 1 , IDENT_7 . Type . IDENT_9 ) ; for ( int i = 3 ; i < 5 ; i ++ ) { IDENT_3 [ i ] = METHOD_1 ( org . apache . hadoop . hbase . IDENT_4 . IDENT_0 . IDENT_5 . IDENT_6 , i , IDENT_7 . Type . IDENT_8 ) ; } org . apache . hadoop . hbase . IDENT_4 . IDENT_0 . IDENT_5 . IDENT_10 . METHOD_2 ( IDENT_3 ) ; org . apache . hadoop . hbase . client . IDENT_11 get = new org . apache . hadoop . hbase . client . METHOD_3 ( org . apache . hadoop . hbase . util . IDENT_12 . METHOD_4 ( 1 ) ) ; org . apache . hadoop . hbase . client . Result res = org . apache . hadoop . hbase . IDENT_4 . IDENT_0 . IDENT_5 . IDENT_13 . get ( get ) ; "<AssertPlaceHolder>" ; } size ( ) { if ( ( this . IDENT_14 ) == null ) { METHOD_5 ( ) ; } return ( this . IDENT_14 ) == null ? 0 : this . IDENT_14 . length ; }
org . junit . Assert . assertEquals ( 0 , res . size ( ) ) 