METHOD_0 ( ) { System . out . println ( IDENT_0 ) ; io . IDENT_1 . IDENT_2 . model . IDENT_3 IDENT_4 = new io . IDENT_1 . builder . internal . IDENT_5 . METHOD_1 ( ) . apply ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } apply ( IDENT_6 ) { IDENT_7 result ; MOD_0 ( function ) { IDENT_8 . METHOD_2 ( item ) ; io . IDENT_1 . IDENT_9 . IDENT_10 . METHOD_2 ( item ) ; try { result = ( ( cache ) != null ) ? cache . get ( item ) : null ; if ( result == null ) { int IDENT_11 = ( ( IDENT_8 ) != null ) ? java . util . Collections . METHOD_3 ( IDENT_8 , item ) : 0 ; int IDENT_12 = io . IDENT_1 . IDENT_9 . IDENT_10 . size ( ) ; boolean IDENT_13 = ( IDENT_11 > ( IDENT_14 ) ) && ( ( IDENT_14 ) > 0 ) ; boolean IDENT_15 = ( IDENT_12 > ( IDENT_16 ) ) && ( ( IDENT_16 ) > 0 ) ; boolean IDENT_17 = ( ( IDENT_18 ) != null ) && ( IDENT_18 . apply ( item ) ) ; if ( ( ( IDENT_13 || IDENT_15 ) || IDENT_17 ) && ( ( IDENT_19 ) != null ) ) { result = IDENT_19 . apply ( item ) ; } else { result = function . apply ( item ) ; METHOD_4 ( item , result ) ; } } } finally { IDENT_8 . METHOD_5 ( ) ; io . IDENT_1 . IDENT_9 . IDENT_10 . METHOD_5 ( ) ; } return result ; } }
org . junit . Assert . assertNotNull ( IDENT_4 ) 