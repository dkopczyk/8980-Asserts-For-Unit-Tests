METHOD_0 ( ) { com . IDENT_0 . internal . kernel . IDENT_1 . METHOD_1 ( new com . IDENT_0 . runtime . IDENT_2 . METHOD_2 ( ) ) ; com . IDENT_0 . device . IDENT_3 device = com . IDENT_0 . internal . kernel . IDENT_1 . instance ( ) . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( com . IDENT_0 . device . IDENT_3 , int ) { final int IDENT_4 = 100 ; final int [ ] IDENT_5 = new int [ size ] ; double IDENT_6 = 0.0 ; double IDENT_7 = 0.0 ; double IDENT_8 = 0.0 ; final com . IDENT_0 . runtime . IDENT_2 . IDENT_9 kernel = new com . IDENT_0 . runtime . IDENT_2 . METHOD_5 ( ) ; int [ ] IDENT_10 = null ; com . IDENT_0 . IDENT_11 range = device . METHOD_6 ( size , size ) ; long IDENT_12 = java . lang . System . currentTimeMillis ( ) ; try { for ( int i = 0 ; i < IDENT_4 ; i ++ ) { IDENT_10 = java . util . Arrays . METHOD_7 ( IDENT_5 , IDENT_5 . length ) ; kernel . METHOD_8 ( IDENT_10 ) ; kernel . execute ( range ) ; IDENT_7 = kernel . METHOD_9 ( ) ; IDENT_6 += IDENT_7 ; IDENT_8 = kernel . METHOD_10 ( ) ; } long IDENT_13 = ( java . lang . System . currentTimeMillis ( ) ) - IDENT_12 ; java . lang . ref . IDENT_14 < com . IDENT_0 . IDENT_15 > IDENT_16 = kernel . METHOD_11 ( device ) ; com . IDENT_0 . IDENT_15 report = IDENT_16 . get ( ) ; org . junit . Assert . assertEquals ( STRING_0 , IDENT_4 , report . METHOD_12 ( ) ) ; org . junit . Assert . assertEquals ( STRING_1 , IDENT_6 , kernel . METHOD_13 ( ) , FLOAT_0 ) ; org . junit . Assert . assertEquals ( STRING_2 , IDENT_7 , report . METHOD_9 ( ) , FLOAT_0 ) ; org . junit . Assert . assertEquals ( STRING_3 , IDENT_8 , report . METHOD_10 ( ) , FLOAT_0 ) ; org . junit . Assert . assertEquals ( STRING_4 , IDENT_13 , IDENT_6 , INT_0 ) ; org . junit . Assert . assertTrue ( METHOD_14 ( IDENT_5 , IDENT_10 ) ) ; } finally { kernel . METHOD_15 ( null ) ; kernel . METHOD_16 ( ) ; } return true ; }
org . junit . Assert . assertTrue ( METHOD_4 ( device , 16 ) ) 