METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . model . IDENT_2 condition = new com . IDENT_0 . IDENT_1 . model . METHOD_1 ( ) ; condition . METHOD_2 ( STRING_0 ) ; condition . setName ( STRING_1 ) ; condition . METHOD_3 ( IDENT_3 . IDENT_4 ) ; condition . setValue ( STRING_2 ) ; com . IDENT_0 . IDENT_1 . model . METHOD_1 IDENT_5 = new com . IDENT_0 . IDENT_1 . model . METHOD_1 ( ) ; IDENT_5 . METHOD_2 ( STRING_0 ) ; IDENT_5 . setName ( STRING_3 ) ; IDENT_5 . METHOD_3 ( IDENT_3 . IDENT_6 ) ; IDENT_5 . setValue ( STRING_4 ) ; rule . METHOD_4 ( new com . IDENT_0 . IDENT_1 . model . METHOD_1 [ ] { condition , IDENT_5 } ) ; "<AssertPlaceHolder>" ; } process ( com . IDENT_0 . IDENT_1 . context . IDENT_7 ) { if ( ( IDENT_8 ) != null ) { for ( final com . IDENT_0 . IDENT_1 . model . METHOD_1 condition : IDENT_8 ) { if ( ( condition . process ( IDENT_9 ) ) != ( IDENT_10 . IDENT_11 ) ) { return null ; } } } return state ; }
org . junit . Assert . assertNull ( rule . process ( IDENT_9 ) ) 