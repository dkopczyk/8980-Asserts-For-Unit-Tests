METHOD_0 ( ) { IDENT_0 . core . IDENT_1 . IDENT_2 . domain . IDENT_3 domain = new IDENT_0 . core . IDENT_1 . IDENT_2 . domain . METHOD_1 ( ) ; domain . METHOD_2 ( STRING_0 ) ; domain . METHOD_2 ( STRING_1 ) ; domain . METHOD_2 ( STRING_2 ) ; domain . METHOD_3 ( STRING_3 ) ; domain . METHOD_4 ( STRING_4 ) ; IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_4 . IDENT_5 parser = new IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_4 . METHOD_5 ( domain ) ; java . util . List < IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_6 . data . IDENT_7 > IDENT_8 = new java . util . ArrayList < IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_6 . data . IDENT_7 > ( ) ; IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_4 . ast . IDENT_9 IDENT_10 = ( ( IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_4 . ast . IDENT_9 ) ( parser . parse ( STRING_5 ) ) ) ; IDENT_8 . add ( new IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_6 . data . METHOD_6 ( IDENT_10 ) ) ; IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_6 . data . IDENT_11 IDENT_12 = new IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_6 . data . METHOD_7 ( IDENT_8 ) ; IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_4 . ast . IDENT_13 IDENT_14 = ( ( IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_4 . ast . IDENT_13 ) ( parser . parse ( STRING_6 ) ) ) ; IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_6 . data . METHOD_7 IDENT_15 = IDENT_16 . apply ( IDENT_14 , IDENT_12 ) ; "<AssertPlaceHolder>" ; } apply ( java . lang . String , IDENT_0 . core . IDENT_17 . map . IDENT_18 ) { if ( a != null ) return a . METHOD_8 ( ) ; return s ; }
org . junit . Assert . assertNull ( IDENT_15 ) 