METHOD_0 ( ) { org . talend . components . IDENT_0 . client . model . IDENT_1 IDENT_2 = IDENT_3 . METHOD_1 ( ) . METHOD_2 ( STRING_0 ) ; java . util . List < com . IDENT_0 . IDENT_4 . test . IDENT_5 . IDENT_6 . IDENT_7 > IDENT_8 = METHOD_3 ( new org . talend . components . IDENT_0 . client . IDENT_9 < com . IDENT_0 . IDENT_4 . test . IDENT_5 . IDENT_6 . IDENT_7 > ( IDENT_3 . METHOD_1 ( ) , IDENT_2 ) , 10 ) ; com . IDENT_0 . IDENT_4 . test . platform . messages . IDENT_10 response = new com . IDENT_0 . IDENT_4 . test . platform . messages . METHOD_4 ( ) ; response . METHOD_5 ( METHOD_6 ( IDENT_8 . size ( ) ) ) ; when ( port . METHOD_7 ( METHOD_8 ( com . IDENT_0 . IDENT_4 . test . platform . messages . IDENT_11 . class ) ) ) . thenReturn ( response ) ; IDENT_3 . METHOD_7 ( IDENT_8 ) ; verify ( port , times ( 1 ) ) . METHOD_9 ( METHOD_8 ( com . IDENT_0 . IDENT_4 . test . platform . messages . IDENT_12 . class ) ) ; verify ( port , times ( 1 ) ) . METHOD_7 ( METHOD_8 ( com . IDENT_0 . IDENT_4 . test . platform . messages . IDENT_11 . class ) ) ; java . util . List < org . talend . components . IDENT_0 . client . IDENT_13 < com . IDENT_0 . IDENT_4 . test . platform . core . IDENT_14 > > IDENT_15 = IDENT_3 . METHOD_7 ( null ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( com . IDENT_0 . IDENT_4 . IDENT_16 . platform . messages . IDENT_11 ) { return port . METHOD_7 ( parameters ) ; }
org . junit . Assert . assertTrue ( IDENT_15 . isEmpty ( ) ) 