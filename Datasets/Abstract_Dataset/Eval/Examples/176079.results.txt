METHOD_0 ( ) { org . talend . IDENT_0 . IDENT_1 . store . file . IDENT_2 . METHOD_1 ( IDENT_3 . resolve ( STRING_0 ) , STRING_1 , STRING_2 , IDENT_4 . IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . nio . file . Path ) { boolean IDENT_6 ; try ( java . util . stream . IDENT_7 < java . nio . file . Path > IDENT_8 = java . nio . file . IDENT_9 . METHOD_3 ( path ) ) { IDENT_6 = IDENT_8 . filter ( IDENT_9 :: IDENT_10 ) . map ( org . talend . IDENT_0 . IDENT_1 . store . file . IDENT_11 :: IDENT_12 ) . METHOD_4 ( ) . METHOD_5 ( ) ; } catch ( java . io . IOException e ) { throw new org . talend . IDENT_0 . exception . METHOD_6 ( IDENT_13 , e , build ( ) . put ( STRING_3 , path ) ) ; } return IDENT_6 ; }
org . junit . Assert . assertTrue ( org . talend . IDENT_0 . IDENT_1 . store . file . IDENT_11 . METHOD_2 ( IDENT_3 ) ) 