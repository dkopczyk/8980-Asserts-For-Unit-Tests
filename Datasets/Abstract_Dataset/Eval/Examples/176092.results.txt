METHOD_0 ( ) { java . util . List < java . lang . Integer > IDENT_0 = java . util . Arrays . asList ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ) ; final java . util . List < org . talend . IDENT_1 . api . IDENT_2 . IDENT_3 > IDENT_4 = IDENT_0 . stream ( ) . map ( ( i ) -> METHOD_1 ( java . lang . String . valueOf ( i ) ) ) . collect ( java . util . stream . IDENT_5 . toList ( ) ) ; IDENT_4 . METHOD_2 ( ( IDENT_6 ) -> METHOD_3 ( ) . add ( IDENT_6 ) ) ; final java . util . List < org . talend . IDENT_1 . api . IDENT_2 . IDENT_3 > actual = METHOD_3 ( ) . list ( org . talend . IDENT_1 . api . IDENT_2 . IDENT_3 . class ) . collect ( java . util . stream . IDENT_5 . toList ( ) ) ; "<AssertPlaceHolder>" ; IDENT_4 . METHOD_2 ( actual :: contains ) ; } size ( ) { return org . talend . IDENT_1 . IDENT_7 . store . file . IDENT_8 . METHOD_4 ( IDENT_9 . METHOD_5 ( ) ) ; }
org . junit . Assert . assertEquals ( IDENT_0 . size ( ) , actual . size ( ) ) 