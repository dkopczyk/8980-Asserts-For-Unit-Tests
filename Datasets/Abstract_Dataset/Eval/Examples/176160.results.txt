METHOD_0 ( ) { try ( java . io . InputStream IDENT_0 = org . talend . IDENT_1 . IDENT_2 . util . IDENT_3 . class . getResourceAsStream ( org . talend . IDENT_1 . IDENT_2 . util . IDENT_3 . IDENT_4 ) ; java . io . InputStream IDENT_5 = org . talend . IDENT_1 . IDENT_2 . util . IDENT_3 . class . getResourceAsStream ( org . talend . IDENT_1 . IDENT_2 . util . IDENT_3 . IDENT_6 ) ) { boolean result = org . talend . IDENT_1 . IDENT_2 . util . IDENT_7 . METHOD_1 ( IDENT_5 , IDENT_0 ) ; "<AssertPlaceHolder>" ; } } METHOD_1 ( java . io . InputStream , java . io . InputStream ) { org . apache . commons . io . IDENT_8 IDENT_9 = org . apache . commons . io . IDENT_10 . METHOD_2 ( actual , IDENT_11 . UTF_8 ) ; org . apache . commons . io . IDENT_8 IDENT_12 = org . apache . commons . io . IDENT_10 . METHOD_2 ( expected , IDENT_11 . UTF_8 ) ; java . util . Map < java . lang . String , java . lang . Integer > IDENT_13 = new java . util . HashMap ( ) ; java . util . Map < java . lang . String , java . lang . Integer > IDENT_14 = new java . util . HashMap ( ) ; while ( ( IDENT_9 . hasNext ( ) ) || ( IDENT_12 . hasNext ( ) ) ) { java . lang . String IDENT_15 = ( IDENT_9 . hasNext ( ) ) ? IDENT_9 . METHOD_3 ( ) : null ; java . lang . String IDENT_16 = ( IDENT_12 . hasNext ( ) ) ? IDENT_12 . METHOD_3 ( ) : null ; if ( ( IDENT_15 != null ) && ( IDENT_16 != null ) ) { if ( ! ( IDENT_15 . equals ( IDENT_16 ) ) ) { if ( ! ( org . talend . IDENT_1 . IDENT_2 . util . IDENT_7 . METHOD_4 ( IDENT_14 , IDENT_15 ) ) ) { org . talend . IDENT_1 . IDENT_2 . util . IDENT_7 . METHOD_5 ( IDENT_13 , IDENT_15 ) ; } if ( ! ( org . talend . IDENT_1 . IDENT_2 . util . IDENT_7 . METHOD_4 ( IDENT_13 , IDENT_16 ) ) ) { org . talend . IDENT_1 . IDENT_2 . util . IDENT_7 . METHOD_5 ( IDENT_14 , IDENT_16 ) ; } } } else if ( IDENT_15 != null ) { org . talend . IDENT_1 . IDENT_2 . util . IDENT_7 . METHOD_5 ( IDENT_13 , IDENT_15 ) ; } else { org . talend . IDENT_1 . IDENT_2 . util . IDENT_7 . METHOD_5 ( IDENT_14 , IDENT_16 ) ; } } if ( ( IDENT_13 . isEmpty ( ) ) && ( IDENT_14 . isEmpty ( ) ) ) { return true ; } if ( ! ( IDENT_13 . isEmpty ( ) ) ) { org . talend . IDENT_1 . IDENT_2 . util . IDENT_7 . LOGGER . warn ( ( STRING_0 + ( org . talend . IDENT_1 . IDENT_2 . util . IDENT_7 . METHOD_6 ( IDENT_13 ) ) ) ) ; } if ( ! ( IDENT_14 . isEmpty ( ) ) ) { org . talend . IDENT_1 . IDENT_2 . util . IDENT_7 . LOGGER . warn ( ( STRING_1 + ( org . talend . IDENT_1 . IDENT_2 . util . IDENT_7 . METHOD_6 ( IDENT_14 ) ) ) ) ; } return false ; }
org . junit . Assert . assertTrue ( result ) 