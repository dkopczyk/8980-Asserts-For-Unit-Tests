METHOD_0 ( ) { org . talend . IDENT_0 . IDENT_1 . model . IDENT_2 IDENT_3 = new org . talend . IDENT_0 . IDENT_1 . model . METHOD_1 ( STRING_0 , "name" , 1 ) ; org . talend . IDENT_0 . IDENT_1 . model . METHOD_1 IDENT_4 = new org . talend . IDENT_0 . IDENT_1 . model . METHOD_1 ( STRING_0 , "name" , 1 ) ; "<AssertPlaceHolder>" ; } compareTo ( org . talend . IDENT_0 . IDENT_1 . model . METHOD_1 ) { if ( other == null ) { return 1 ; } if ( ! ( org . apache . commons . lang3 . StringUtils . equals ( version , other . METHOD_2 ( ) ) ) ) { final java . lang . String [ ] IDENT_5 = version . split ( STRING_1 ) ; final java . lang . String [ ] IDENT_6 = other . METHOD_2 ( ) . split ( STRING_1 ) ; for ( int i = 0 ; i < ( IDENT_5 . length ) ; i ++ ) { java . lang . String IDENT_7 = org . apache . commons . lang3 . StringUtils . METHOD_3 ( IDENT_5 [ i ] , 6 , STRING_2 ) ; java . lang . String IDENT_8 = STRING_3 ; if ( i < ( IDENT_6 . length ) ) { IDENT_8 = org . apache . commons . lang3 . StringUtils . METHOD_3 ( IDENT_6 [ i ] , 6 , STRING_2 ) ; } final int result = IDENT_7 . compareTo ( IDENT_8 ) ; if ( result != 0 ) { return result ; } } } return java . lang . Integer . compare ( order , other . METHOD_4 ( ) ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_3 . compareTo ( IDENT_4 ) ) 