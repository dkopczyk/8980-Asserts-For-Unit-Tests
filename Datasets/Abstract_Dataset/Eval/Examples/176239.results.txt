METHOD_0 ( ) { org . talend . core . model . metadata . builder . connection . IDENT_0 IDENT_1 = mock ( org . talend . core . model . metadata . builder . connection . IDENT_0 . class ) ; when ( IDENT_1 . METHOD_1 ( ) ) . thenReturn ( true ) ; org . eclipse . IDENT_2 . common . util . IDENT_3 < java . lang . String , java . lang . String > IDENT_4 = new org . eclipse . IDENT_2 . common . util . METHOD_2 ( ) ; IDENT_4 . put ( IDENT_5 . IDENT_6 , STRING_0 ) ; IDENT_4 . put ( IDENT_5 . IDENT_7 , STRING_1 ) ; IDENT_4 . put ( IDENT_5 . IDENT_8 , STRING_2 ) ; IDENT_4 . put ( IDENT_5 . IDENT_9 , null ) ; when ( IDENT_1 . METHOD_3 ( ) ) . thenReturn ( IDENT_4 ) ; METHOD_4 ( IDENT_1 , STRING_3 ) ; METHOD_4 ( IDENT_1 , STRING_4 ) ; METHOD_4 ( IDENT_1 , STRING_5 ) ; java . lang . Object result = org . talend . core . model . metadata . IDENT_10 . IDENT_11 . getValue ( IDENT_1 , STRING_6 , null ) ; "<AssertPlaceHolder>" ; } getValue ( org . talend . core . model . metadata . builder . connection . IDENT_12 , java . lang . String , org . talend . core . model . metadata . IDENT_13 ) { return org . talend . core . model . metadata . IDENT_10 . IDENT_11 . getValue ( connection , value , table , null , null ) ; }
org . junit . Assert . assertTrue ( ( result == null ) ) 