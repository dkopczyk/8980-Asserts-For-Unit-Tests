METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . Object > parameters = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; parameters . put ( IDENT_0 . IDENT_1 , new org . talend . core . runtime . repository . build . IDENT_2 . METHOD_1 ( ) . getProperty ( ) . METHOD_2 ( ) ) ; org . talend . core . runtime . repository . build . IDENT_2 . IDENT_3 IDENT_4 = new org . talend . core . runtime . repository . build . IDENT_2 . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . talend . repository . IDENT_5 . IDENT_6 . IDENT_7 . model . IDENT_8 ) { boolean METHOD_4 = super . METHOD_4 ( IDENT_9 ) ; if ( METHOD_4 ) { org . talend . core . model . repository . IDENT_10 IDENT_11 = IDENT_9 . getType ( ) ; if ( ( IDENT_11 != null ) && ( IDENT_12 . contains ( IDENT_11 ) ) ) { if ( ( ! ( org . talend . commons . IDENT_13 . METHOD_5 ( ) ) ) && ( METHOD_6 ( ) ) ) { java . lang . String IDENT_14 = org . talend . core . runtime . IDENT_15 . getInstance ( ) . METHOD_7 ( ) ; java . lang . String [ ] IDENT_16 = IDENT_11 . METHOD_8 ( ) ; if ( IDENT_16 != null ) { for ( java . lang . String IDENT_17 : IDENT_16 ) { java . lang . String IDENT_18 = org . talend . core . utils . IDENT_19 . METHOD_9 ( IDENT_17 ) ; if ( ( IDENT_14 != null ) && ( IDENT_14 . equals ( IDENT_18 ) ) ) { return true ; } } return false ; } } return true ; } } return false ; }
org . junit . Assert . assertTrue ( IDENT_4 . METHOD_4 ( parameters ) ) 