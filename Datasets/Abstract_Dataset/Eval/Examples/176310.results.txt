METHOD_0 ( ) { java . lang . String [ ] res = org . talend . repository . ui . IDENT_0 . metadata . connection . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( ( - 1 ) , ( - 1 ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( int , int ) { if ( ( index > ( ( INT_0 * INT_0 ) + INT_0 ) ) || ( index < 1 ) ) { return new java . lang . String [ 0 ] ; } if ( index == 1 ) { return org . talend . repository . ui . IDENT_0 . metadata . connection . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( IDENT_4 ) ; } index = index - 1 ; int IDENT_5 = IDENT_4 + index ; if ( IDENT_4 <= 0 ) { return new java . lang . String [ 0 ] ; } else if ( IDENT_5 <= INT_0 ) { java . lang . String [ ] res = new java . lang . String [ IDENT_4 ] ; java . lang . System . METHOD_2 ( org . talend . repository . ui . IDENT_0 . metadata . connection . IDENT_1 . IDENT_2 . IDENT_3 . x , index , res , 0 , IDENT_4 ) ; return res ; } else { java . lang . String [ ] res = org . talend . repository . ui . IDENT_0 . metadata . connection . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_3 ( IDENT_5 ) ; java . lang . String [ ] IDENT_6 = new java . lang . String [ IDENT_4 ] ; java . lang . System . METHOD_2 ( res , index , IDENT_6 , 0 , IDENT_4 ) ; return IDENT_6 ; } }
org . junit . Assert . assertEquals ( 0 , res . length ) 