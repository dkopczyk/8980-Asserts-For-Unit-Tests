METHOD_0 ( ) { java . io . File IDENT_0 = new java . io . File ( IDENT_1 , STRING_0 ) ; IDENT_0 . METHOD_1 ( ) ; final boolean IDENT_2 = new org . talend . IDENT_3 . runtime . IDENT_4 . component . METHOD_2 ( ) . METHOD_3 ( IDENT_0 , null ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . io . File , org . talend . IDENT_3 . runtime . IDENT_4 . component . IDENT_5 ) { if ( ( ( ( ( IDENT_6 == null ) || ( IDENT_7 == null ) ) || ( ! ( IDENT_7 . exists ( ) ) ) ) || ( IDENT_7 . METHOD_4 ( ) ) ) || ( ! ( IDENT_7 . getName ( ) . METHOD_5 ( IDENT_8 . IDENT_9 ) ) ) ) { return false ; } try { final java . util . List < org . talend . IDENT_3 . runtime . IDENT_4 . component . IDENT_5 > IDENT_10 = parse ( new org . IDENT_11 . io . METHOD_6 ( ) . read ( IDENT_7 ) ) ; java . util . List < org . talend . IDENT_3 . runtime . IDENT_4 . component . IDENT_5 > IDENT_12 = new java . util . ArrayList < org . talend . IDENT_3 . runtime . IDENT_4 . component . IDENT_5 > ( IDENT_10 ) ; if ( IDENT_12 . contains ( IDENT_6 ) ) { IDENT_12 . remove ( IDENT_6 ) ; } IDENT_12 . add ( IDENT_6 ) ; return METHOD_7 ( IDENT_7 , IDENT_12 ) ; } catch ( java . lang . Exception e ) { if ( org . talend . commons . IDENT_13 . METHOD_8 ( ) ) { org . talend . commons . exception . IDENT_14 . process ( e ) ; } } return false ; }
org . junit . Assert . assertFalse ( IDENT_2 ) 