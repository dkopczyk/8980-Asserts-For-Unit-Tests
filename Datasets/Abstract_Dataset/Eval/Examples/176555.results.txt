METHOD_0 ( ) { final java . lang . String expression = STRING_0 ; java . lang . String result = IDENT_0 . METHOD_1 ( expression , new org . talend . IDENT_1 . mapper . model . IDENT_2 . METHOD_2 ( STRING_1 , STRING_2 ) , new org . talend . IDENT_1 . mapper . model . IDENT_2 . METHOD_2 ( STRING_1 , STRING_3 ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( org . talend . IDENT_1 . mapper . model . IDENT_2 . METHOD_2 , org . talend . IDENT_1 . mapper . model . IDENT_2 . METHOD_2 , java . lang . String , org . talend . IDENT_1 . mapper . utils . IDENT_3 , boolean ) { if ( ( IDENT_4 == null ) || ( ( IDENT_4 . trim ( ) . length ( ) ) == 0 ) ) { return null ; } org . talend . IDENT_1 . mapper . model . IDENT_2 . METHOD_2 [ ] IDENT_5 = IDENT_6 . METHOD_3 ( IDENT_4 ) ; for ( org . talend . IDENT_1 . mapper . model . IDENT_2 . METHOD_2 IDENT_7 : IDENT_5 ) { if ( IDENT_8 && ( IDENT_9 . tableName . equals ( IDENT_7 . tableName ) ) ) { IDENT_9 . IDENT_10 = IDENT_7 . IDENT_10 ; IDENT_11 . IDENT_10 = IDENT_7 . IDENT_10 ; } if ( IDENT_7 . equals ( IDENT_9 ) ) { IDENT_4 = IDENT_6 . METHOD_1 ( IDENT_4 , IDENT_7 , IDENT_11 ) ; } } return IDENT_4 ; }
org . junit . Assert . assertEquals ( expression , result ) 