METHOD_0 ( ) { org . talend . repository . model . IDENT_0 IDENT_1 = METHOD_1 ( STRING_0 , null , false ) ; org . talend . repository . model . IDENT_0 IDENT_2 = METHOD_1 ( STRING_1 , null , true ) ; METHOD_2 ( IDENT_1 , IDENT_3 . IDENT_4 ) ; METHOD_2 ( IDENT_1 , IDENT_3 . IDENT_4 ) ; java . lang . Object [ ] IDENT_5 = new java . lang . Object [ 2 ] ; IDENT_5 [ 0 ] = IDENT_1 ; IDENT_5 [ 1 ] = IDENT_2 ; when ( IDENT_6 . toArray ( ) ) . thenReturn ( IDENT_5 ) ; boolean IDENT_7 = IDENT_8 . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { org . eclipse . IDENT_9 . IDENT_10 . IDENT_11 IDENT_12 = ( ( org . eclipse . IDENT_9 . IDENT_10 . IDENT_11 ) ( METHOD_4 ( ) . METHOD_5 ( ) ) ) ; java . lang . Object [ ] IDENT_13 = IDENT_12 . toArray ( ) ; if ( ( IDENT_13 . length ) > 1 ) { org . talend . repository . model . IDENT_0 IDENT_14 = null ; org . talend . core . model . repository . IDENT_3 IDENT_15 = null ; for ( java . lang . Object obj : IDENT_13 ) { if ( obj instanceof org . talend . repository . model . IDENT_0 ) { if ( IDENT_14 == null ) { IDENT_14 = ( ( org . talend . repository . model . IDENT_0 ) ( obj ) ) ; IDENT_15 = IDENT_14 . METHOD_6 ( ) ; continue ; } org . talend . repository . model . IDENT_0 node = ( ( org . talend . repository . model . IDENT_0 ) ( obj ) ) ; org . talend . core . model . repository . IDENT_3 IDENT_16 = node . METHOD_6 ( ) ; if ( ( ( ( IDENT_15 != null ) && ( IDENT_16 != null ) ) && ( ! ( IDENT_16 . getType ( ) . equals ( IDENT_15 . getType ( ) ) ) ) ) || ( ( org . talend . IDENT_17 . helper . IDENT_18 . METHOD_7 ( node ) ) != ( org . talend . IDENT_17 . helper . IDENT_18 . METHOD_7 ( IDENT_14 ) ) ) ) { return false ; } } } } return true ; }
org . junit . Assert . assertFalse ( IDENT_7 ) 