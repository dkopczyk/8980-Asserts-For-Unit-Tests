METHOD_0 ( ) { expect ( backend . connect ( ) ) . andReturn ( IDENT_0 ) ; expect ( IDENT_0 . METHOD_1 ( org . talend . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 ) ) . andReturn ( IDENT_5 ) ; expect ( IDENT_5 . exists ( ) ) . andReturn ( false ) ; METHOD_2 ( ) ; org . talend . IDENT_1 . IDENT_2 . client . internal . IDENT_6 slc = new org . talend . IDENT_1 . IDENT_2 . client . internal . METHOD_3 ( ) ; slc . METHOD_4 ( backend ) ; java . util . List < java . lang . String > IDENT_7 = slc . METHOD_5 ( org . talend . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 ) ; "<AssertPlaceHolder>" ; METHOD_6 ( ) ; } METHOD_5 ( java . lang . String ) { if ( ( IDENT_8 ) == null ) { throw new org . talend . IDENT_1 . IDENT_9 . storage . common . exception . METHOD_7 ( STRING_0 ) ; } java . lang . String ctx = IDENT_8 . METHOD_8 ( key ) ; if ( ctx == null ) { throw new org . talend . IDENT_1 . IDENT_9 . storage . common . exception . METHOD_9 ( ( ( STRING_1 + key ) + STRING_2 ) ) ; } return ctx ; }
org . junit . Assert . assertThat ( IDENT_7 , empty ( ) ) 