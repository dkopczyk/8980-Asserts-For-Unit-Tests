METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( org . mockito . Mockito . any ( ) , org . mockito . Mockito . any ( ) ) ) . thenReturn ( false ) ; when ( IDENT_0 . METHOD_2 ( org . mockito . Mockito . any ( ) , org . mockito . Mockito . any ( ) ) ) . thenReturn ( IDENT_1 ) ; IDENT_2 . IDENT_3 . IDENT_3 . database . IDENT_4 . IDENT_5 is = mock ( IDENT_2 . IDENT_3 . IDENT_3 . database . IDENT_4 . IDENT_5 . class ) ; org . IDENT_6 . IDENT_7 IDENT_8 = mock ( org . IDENT_6 . IDENT_7 . class ) ; when ( IDENT_8 . METHOD_3 ( ) ) . thenReturn ( new org . IDENT_6 . util . METHOD_4 ( INT_0 , INT_0 , INT_1 ) ) ; when ( is . METHOD_5 ( ) ) . thenReturn ( IDENT_8 ) ; when ( IDENT_0 . METHOD_6 ( org . mockito . Mockito . any ( ) , org . mockito . Mockito . any ( java . util . UUID . class ) ) ) . thenReturn ( is ) ; java . lang . String [ ] name = new java . lang . String [ ] { STRING_0 } ; when ( IDENT_9 . METHOD_7 ( org . mockito . Mockito . any ( ) ) ) . thenReturn ( IDENT_10 ) ; IDENT_2 . IDENT_3 . IDENT_3 . api . commands . admin . IDENT_11 IDENT_12 = new IDENT_2 . IDENT_3 . IDENT_3 . api . commands . admin . METHOD_8 ( ac ) ; "<AssertPlaceHolder>" ; org . mockito . Mockito . verify ( user ) . METHOD_9 ( STRING_1 , STRING_2 , STRING_3 ) ; IDENT_12 . execute ( user , IDENT_12 . METHOD_10 ( ) , java . util . Arrays . asList ( name ) ) ; } execute ( IDENT_2 . IDENT_3 . IDENT_3 . api . user . User , java . lang . String , java . util . List ) { user . METHOD_11 ( ( ( ( ( STRING_4 + ( IDENT_2 . IDENT_3 . IDENT_3 . IDENT_13 . getInstance ( ) . METHOD_12 ( ) . getName ( ) ) ) + STRING_5 ) + ( IDENT_2 . IDENT_3 . IDENT_3 . IDENT_13 . getInstance ( ) . METHOD_12 ( ) . METHOD_13 ( ) ) ) + STRING_6 ) ) ; user . METHOD_11 ( STRING_7 ) ; user . METHOD_11 ( STRING_8 ) ; return true ; }
org . junit . Assert . assertTrue ( IDENT_12 . execute ( user , IDENT_12 . METHOD_10 ( ) , java . util . Arrays . asList ( name ) ) ) 