METHOD_0 ( ) { net . sf . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = METHOD_1 ( ) ; net . sf . IDENT_0 . IDENT_1 . IDENT_2 IDENT_4 = IDENT_3 . METHOD_2 ( ) ; byte [ ] IDENT_5 = new byte [ INT_0 ] ; IDENT_4 . METHOD_3 ( IDENT_5 ) ; IDENT_3 = METHOD_1 ( ) ; IDENT_4 = IDENT_3 . METHOD_2 ( ) ; byte [ ] IDENT_6 = new byte [ INT_0 ] ; IDENT_4 . METHOD_3 ( IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( int ) { java . nio . ByteBuffer buf = java . nio . ByteBuffer . METHOD_4 ( n ) ; while ( buf . METHOD_5 ( ) ) { java . nio . ByteBuffer IDENT_7 = java . nio . ByteBuffer . METHOD_4 ( ( ( IDENT_8 . length ) + 4 ) ) ; IDENT_7 . put ( IDENT_8 ) ; IDENT_7 . METHOD_6 ( IDENT_9 ) ; byte [ ] hash = IDENT_10 . METHOD_7 ( IDENT_7 . array ( ) ) ; if ( ( buf . METHOD_8 ( ) ) < ( hash . length ) ) buf . put ( hash , 0 , buf . METHOD_8 ( ) ) ; else buf . put ( hash ) ; ( IDENT_9 ) ++ ; } return buf . array ( ) ; }
org . junit . Assert . assertArrayEquals ( IDENT_5 , IDENT_6 ) 