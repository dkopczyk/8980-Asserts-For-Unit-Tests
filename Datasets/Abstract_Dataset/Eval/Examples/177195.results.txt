METHOD_0 ( ) { int [ ] IDENT_0 = net . sf . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( 1000 ) . IDENT_0 ; byte [ ] data = net . sf . IDENT_1 . util . IDENT_4 . METHOD_2 ( IDENT_0 ) ; int [ ] IDENT_5 = net . sf . IDENT_1 . util . IDENT_4 . METHOD_3 ( data , 1000 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( byte [ ] , int ) { java . math . BigInteger IDENT_6 = new java . math . BigInteger ( 1 , b ) ; int [ ] IDENT_0 = new int [ IDENT_7 ] ; for ( int i = 0 ; i < IDENT_7 ; i ++ ) { IDENT_0 [ i ] = ( IDENT_6 . METHOD_4 ( net . sf . IDENT_1 . util . IDENT_4 . IDENT_8 ) . METHOD_5 ( ) ) - 1 ; if ( ( IDENT_0 [ i ] ) > 1 ) IDENT_0 [ i ] OP_0 3 ; IDENT_6 = IDENT_6 . METHOD_6 ( net . sf . IDENT_1 . util . IDENT_4 . IDENT_8 ) ; } return IDENT_0 ; }
org . junit . Assert . assertArrayEquals ( IDENT_0 , IDENT_5 ) 