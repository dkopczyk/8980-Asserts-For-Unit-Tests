METHOD_0 ( ) { org . apache . IDENT_0 . jdbc . IDENT_1 IDENT_2 = new org . apache . IDENT_0 . jdbc . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( STRING_0 ) ; net . IDENT_3 . IDENT_4 . persistence . IDENT_5 . IDENT_6 IDENT_7 = new net . IDENT_3 . IDENT_4 . persistence . IDENT_5 . METHOD_3 ( STRING_1 , IDENT_2 ) ; IDENT_7 . METHOD_4 ( ) ; net . IDENT_3 . IDENT_4 . persistence . IDENT_5 . METHOD_3 validator = new net . IDENT_3 . IDENT_4 . persistence . IDENT_5 . METHOD_3 ( STRING_2 , IDENT_2 ) ; net . IDENT_3 . IDENT_4 . persistence . IDENT_5 . METHOD_3 . IDENT_8 state = validator . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { boolean IDENT_9 ; java . lang . String IDENT_10 ; net . IDENT_3 . IDENT_4 . persistence . IDENT_5 . METHOD_3 . IDENT_8 IDENT_11 ; net . IDENT_3 . IDENT_4 . persistence . IDENT_5 . METHOD_3 . LOGGER . info ( ( STRING_3 + ( IDENT_12 ) ) ) ; java . sql . IDENT_13 connection = null ; try { IDENT_2 . METHOD_5 ( STRING_4 ) ; connection = IDENT_2 . METHOD_6 ( ) ; connection . METHOD_7 ( false ) ; IDENT_10 = METHOD_8 ( connection ) ; IDENT_9 = ( IDENT_10 != null ) && ( IDENT_10 . equalsIgnoreCase ( IDENT_12 ) ) ; if ( IDENT_9 ) { IDENT_11 = net . IDENT_3 . IDENT_4 . persistence . IDENT_5 . METHOD_3 . IDENT_8 . IDENT_14 ; net . IDENT_3 . IDENT_4 . persistence . IDENT_5 . METHOD_3 . LOGGER . info ( STRING_5 ) ; } else { net . IDENT_3 . IDENT_4 . persistence . IDENT_5 . METHOD_3 . LOGGER . info ( ( ( ( STRING_6 + IDENT_10 ) + STRING_7 ) + ( IDENT_12 ) ) ) ; IDENT_11 = net . IDENT_3 . IDENT_4 . persistence . IDENT_5 . METHOD_3 . IDENT_8 . IDENT_15 ; } } catch ( java . sql . IDENT_16 e ) { IDENT_11 = net . IDENT_3 . IDENT_4 . persistence . IDENT_5 . METHOD_3 . IDENT_8 . IDENT_17 ; net . IDENT_3 . IDENT_4 . persistence . IDENT_5 . METHOD_3 . LOGGER . info ( STRING_8 ) ; } finally { IDENT_2 . METHOD_5 ( "" ) ; try { if ( connection != null ) { connection . close ( ) ; } } catch ( java . sql . IDENT_16 e ) { } } if ( IDENT_11 != ( net . IDENT_3 . IDENT_4 . persistence . IDENT_5 . METHOD_3 . IDENT_8 . IDENT_14 ) ) { try { METHOD_9 ( IDENT_2 , IDENT_11 ) ; } catch ( java . lang . Exception e ) { net . IDENT_3 . IDENT_4 . persistence . IDENT_5 . METHOD_3 . LOGGER . error ( STRING_9 , e ) ; } } return IDENT_11 ; }
org . junit . Assert . assertEquals ( METHOD_3 . IDENT_8 . IDENT_15 , state ) 