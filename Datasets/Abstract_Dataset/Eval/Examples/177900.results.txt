METHOD_0 ( ) { System . out . println ( ( ( METHOD_1 ( STRING_0 ) ) + STRING_1 ) ) ; java . util . ArrayList < java . lang . String > IDENT_0 = new java . util . ArrayList < java . lang . String > ( ) ; IDENT_0 . add ( STRING_2 ) ; java . lang . String IDENT_1 = STRING_3 ; java . lang . String IDENT_2 = STRING_4 ; java . lang . String IDENT_3 = STRING_5 ; com . IDENT_4 . iot . IDENT_5 . IDENT_6 . IDENT_7 IDENT_8 = METHOD_2 ( IDENT_0 , IDENT_1 , IDENT_2 , IDENT_3 , STRING_6 0 ) ; java . util . ArrayList < java . lang . String > IDENT_9 = new java . util . ArrayList < java . lang . String > ( ) ; IDENT_9 . add ( STRING_2 ) ; java . lang . String IDENT_10 = STRING_7 ; java . lang . String IDENT_11 = STRING_6 1 ; java . lang . String IDENT_12 = STRING_6 ; com . IDENT_4 . iot . IDENT_5 . IDENT_6 . IDENT_13 IDENT_14 = new com . IDENT_4 . iot . IDENT_5 . IDENT_6 . METHOD_3 ( METHOD_4 ( IDENT_9 , IDENT_10 , IDENT_11 , IDENT_12 ) ) ; IDENT_8 . METHOD_5 ( IDENT_14 ) ; try { "<AssertPlaceHolder>" ; System . out . println ( ( ( METHOD_1 ( STRING_0 ) ) + STRING_8 ) ) ; } catch ( java . lang . IDENT_15 e ) { System . out . println ( ( ( METHOD_1 ( STRING_0 ) ) + STRING_9 ) ) ; throw e ; } METHOD_6 ( ) { return IDENT_16 ; }
org . junit . Assert . assertTrue ( ( ( IDENT_8 . METHOD_6 ( ) . size ( ) ) == 2 ) ) 