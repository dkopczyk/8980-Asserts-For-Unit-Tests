METHOD_0 ( ) { System . out . println ( ( ( com . IDENT_0 . iot . IDENT_1 . utils . IDENT_2 . METHOD_1 ( STRING_0 ) ) + STRING_1 ) ) ; java . lang . String IDENT_3 = STRING_2 ; java . lang . Long IDENT_4 ; try { IDENT_4 = com . IDENT_0 . iot . IDENT_1 . utils . IDENT_5 . METHOD_2 ( IDENT_3 ) ; } catch ( java . text . IDENT_6 e ) { System . out . println ( ( ( com . IDENT_0 . iot . IDENT_1 . utils . IDENT_2 . METHOD_1 ( STRING_0 ) ) + STRING_3 ) ) ; throw new java . lang . METHOD_3 ( e . getMessage ( ) ) ; } try { "<AssertPlaceHolder>" ; System . out . println ( ( ( com . IDENT_0 . iot . IDENT_1 . utils . IDENT_2 . METHOD_1 ( STRING_0 ) ) + STRING_4 ) ) ; } catch ( java . lang . METHOD_3 e ) { System . out . println ( ( ( com . IDENT_0 . iot . IDENT_1 . utils . IDENT_2 . METHOD_1 ( STRING_0 ) ) + STRING_5 ) ) ; throw e ; } METHOD_4 ( long , boolean ) { java . text . IDENT_7 IDENT_8 = new java . text . METHOD_5 ( STRING_6 ) ; IDENT_8 . METHOD_6 ( java . util . IDENT_9 . METHOD_7 ( STRING_7 ) ) ; java . lang . String IDENT_10 = IDENT_8 . format ( new java . util . Date ( IDENT_11 ) ) ; IDENT_10 += STRING_8 ; IDENT_8 = new java . text . METHOD_5 ( STRING_9 ) ; IDENT_8 . METHOD_6 ( java . util . IDENT_9 . METHOD_7 ( STRING_7 ) ) ; IDENT_10 += ( IDENT_8 . format ( new java . util . Date ( IDENT_11 ) ) ) + ( IDENT_12 ? STRING_10 : "" ) ; return IDENT_10 ; }
org . junit . Assert . assertEquals ( IDENT_3 , com . IDENT_0 . iot . IDENT_1 . utils . IDENT_5 . METHOD_4 ( IDENT_4 , true ) ) 