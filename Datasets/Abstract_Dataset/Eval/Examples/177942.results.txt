METHOD_0 ( ) { System . out . println ( ( ( METHOD_1 ( STRING_0 ) ) + STRING_1 ) ) ; com . IDENT_0 . iot . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new com . IDENT_0 . iot . IDENT_1 . IDENT_2 . METHOD_2 ( null , false ) ; IDENT_4 . METHOD_3 ( IDENT_5 ) ; com . IDENT_0 . iot . IDENT_1 . IDENT_6 . IDENT_7 . IDENT_8 IDENT_9 ; com . IDENT_0 . iot . IDENT_1 . IDENT_6 . IDENT_7 . IDENT_8 IDENT_10 ; try { IDENT_9 = com . IDENT_0 . iot . IDENT_1 . utils . IDENT_11 . METHOD_4 ( IDENT_12 ) ; IDENT_10 = com . IDENT_0 . iot . IDENT_1 . utils . IDENT_11 . METHOD_4 ( IDENT_13 ) ; } catch ( java . lang . Exception e ) { System . out . println ( ( ( METHOD_1 ( STRING_0 ) ) + STRING_2 ) ) ; throw new java . lang . METHOD_5 ( e . getMessage ( ) ) ; } org . apache . commons . lang3 . tuple . IDENT_14 < java . lang . String , java . lang . String , com . IDENT_0 . iot . IDENT_1 . IDENT_6 . IDENT_7 . IDENT_8 > map = IDENT_4 . METHOD_6 ( IDENT_15 , IDENT_16 , IDENT_9 ) ; com . IDENT_0 . iot . IDENT_1 . IDENT_6 . IDENT_7 . IDENT_8 IDENT_17 = map . METHOD_7 ( ) ; boolean equals = true ; if ( ( ! ( IDENT_17 . getId ( ) . equals ( IDENT_10 . getId ( ) ) ) ) || ( ! ( IDENT_17 . getType ( ) . equals ( IDENT_10 . getType ( ) ) ) ) ) { equals = false ; } else { for ( int j = 0 ; j < ( IDENT_17 . METHOD_8 ( ) . size ( ) ) ; j ++ ) { com . IDENT_0 . iot . IDENT_1 . IDENT_6 . IDENT_7 . IDENT_18 IDENT_19 = IDENT_17 . METHOD_8 ( ) . get ( j ) ; com . IDENT_0 . iot . IDENT_1 . IDENT_6 . IDENT_7 . IDENT_18 IDENT_20 = IDENT_10 . METHOD_8 ( ) . get ( j ) ; if ( ( ! ( IDENT_19 . getName ( ) . equals ( IDENT_20 . getName ( ) ) ) ) || ( ! ( IDENT_19 . getType ( ) . equals ( IDENT_20 . getType ( ) ) ) ) ) { equals = false ; break ; } } } try { "<AssertPlaceHolder>" ; System . out . println ( ( ( METHOD_1 ( STRING_0 ) ) + STRING_3 ) ) ; } catch ( java . lang . METHOD_5 e ) { System . out . println ( ( ( METHOD_1 ( STRING_0 ) ) + STRING_4 ) ) ; throw e ; } METHOD_8 ( ) { return attributes ; }
org . junit . Assert . assertTrue ( equals ) 