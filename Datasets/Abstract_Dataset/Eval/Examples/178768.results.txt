METHOD_0 ( ) { java . util . Map root = new java . util . METHOD_1 ( ) ; root . put ( STRING_0 1 , new java . util . ArrayList ( ) { { add ( new java . util . METHOD_1 ( ) { { put ( STRING_0 7 , STRING_1 ) ; put ( STRING_0 , STRING_1 ) ; put ( STRING_2 , STRING_3 ) ; put ( STRING_0 0 , STRING_4 ) ; } } ) ; add ( new java . util . METHOD_1 ( ) { { put ( STRING_0 7 , STRING_4 1 ) ; put ( STRING_0 , STRING_4 1 ) ; put ( STRING_2 , STRING_3 ) ; put ( STRING_0 0 , STRING_4 ) ; } } ) ; } } ) ; root . put ( STRING_0 5 , new java . util . ArrayList ( ) { { add ( new java . util . METHOD_1 ( ) { { put ( STRING_0 7 , STRING_0 4 ) ; put ( STRING_5 , STRING_0 2 ) ; put ( "value" , STRING_4 0 ) ; } } ) ; add ( new java . util . METHOD_1 ( ) { { put ( STRING_0 7 , STRING_0 3 ) ; put ( STRING_5 , STRING_0 9 ) ; put ( "value" , STRING_0 6 ) ; } } ) ; } } ) ; root . put ( STRING_6 , STRING_7 ) ; org . IDENT_0 . config . generator . IDENT_1 IDENT_2 = new org . IDENT_0 . config . generator . METHOD_2 ( org . IDENT_0 . config . generator . IDENT_3 . METHOD_3 ( ) ) ; java . io . StringWriter output = new java . io . StringWriter ( ) ; IDENT_2 . METHOD_4 ( root , STRING_0 8 , output ) ; byte [ ] IDENT_4 = java . nio . file . IDENT_5 . METHOD_5 ( java . nio . file . IDENT_6 . get ( this . getClass ( ) . getResource ( STRING_4 2 ) . getPath ( ) ) ) ; java . lang . String expected = new java . lang . String ( IDENT_4 , STRING_8 ) ; java . lang . String actual = output . toString ( ) ; "<AssertPlaceHolder>" ; } toString ( ) { return ( ( ( STRING_9 + STRING_10 ) + ( name ) ) + STRING_11 ) + STRING_12 ; }
org . junit . Assert . assertThat ( actual , org . hamcrest . CoreMatchers . equalTo ( expected ) ) 