METHOD_0 ( ) { info . IDENT_0 . IDENT_1 . IDENT_2 . server . domain . IDENT_3 project = info . IDENT_0 . IDENT_1 . IDENT_2 . server . domain . IDENT_3 . newInstance ( STRING_0 ) ; info . IDENT_0 . IDENT_1 . IDENT_2 . server . domain . List < java . lang . Object > params = new info . IDENT_0 . IDENT_1 . IDENT_2 . server . domain . ArrayList < java . lang . Object > ( ) ; params . add ( IDENT_4 . IDENT_5 , STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( ) { java . util . List < java . lang . Object > IDENT_6 = new java . util . ArrayList ( ) ; IDENT_6 . add ( info . IDENT_0 . IDENT_1 . IDENT_2 . server . domain . IDENT_7 , IDENT_8 ) ; IDENT_6 . add ( info . IDENT_0 . IDENT_1 . IDENT_2 . server . domain . IDENT_9 , IDENT_10 ) ; IDENT_6 . add ( info . IDENT_0 . IDENT_1 . IDENT_2 . server . domain . IDENT_11 , IDENT_12 ) ; java . util . IDENT_13 < java . lang . String , java . lang . Object > IDENT_14 = new java . util . IDENT_13 < java . lang . String , java . lang . Object > ( ) ; for ( info . IDENT_0 . IDENT_1 . IDENT_2 . server . domain . IDENT_15 node : IDENT_16 ) { IDENT_14 . put ( node . METHOD_2 ( ) , node . METHOD_1 ( ) ) ; } IDENT_6 . add ( info . IDENT_0 . IDENT_1 . IDENT_2 . server . domain . IDENT_17 , IDENT_14 ) ; return IDENT_6 ; }
org . junit . Assert . assertEquals ( params , project . METHOD_1 ( ) ) 