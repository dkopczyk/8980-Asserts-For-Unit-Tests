METHOD_0 ( ) { "<AssertPlaceHolder>" ; } METHOD_1 ( com . IDENT_0 . IDENT_1 . tools . IDENT_2 , int ) { if ( i == 0 ) { return false ; } switch ( IDENT_3 ) { case IDENT_4 : if ( ( com . IDENT_0 . models . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . size ( ) ) >= ( i + 1 ) ) { com . IDENT_0 . models . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . get ( ( i - 1 ) ) . METHOD_2 ( com . IDENT_0 . models . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . get ( i ) . METHOD_3 ( ) ) ; com . IDENT_0 . models . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . remove ( i ) ; return true ; } return false ; case IDENT_9 : if ( ( com . IDENT_0 . models . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_10 . size ( ) ) >= ( i + 1 ) ) { com . IDENT_0 . models . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_10 . get ( ( i - 1 ) ) . METHOD_2 ( com . IDENT_0 . models . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_10 . get ( i ) . METHOD_3 ( ) ) ; com . IDENT_0 . models . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_10 . remove ( i ) ; return true ; } return false ; case IDENT_11 : if ( ( com . IDENT_0 . models . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_12 . size ( ) ) >= ( i + 1 ) ) { com . IDENT_0 . models . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_12 . get ( ( i - 1 ) ) . METHOD_2 ( com . IDENT_0 . models . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_12 . get ( i ) . METHOD_3 ( ) ) ; com . IDENT_0 . models . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_12 . remove ( i ) ; return true ; } return false ; case IDENT_13 : if ( ( com . IDENT_0 . models . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_14 . size ( ) ) >= ( i + 1 ) ) { com . IDENT_0 . models . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_14 . get ( ( i - 1 ) ) . METHOD_2 ( com . IDENT_0 . models . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_14 . get ( i ) . METHOD_3 ( ) ) ; com . IDENT_0 . models . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_14 . remove ( i ) ; return true ; } return false ; default : throw new com . IDENT_0 . exceptions . IDENT_15 . METHOD_4 ( ) ; } }
org . junit . Assert . assertFalse ( com . IDENT_0 . models . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_1 ( IDENT_2 . IDENT_11 , 20 ) ) 