METHOD_0 ( ) { uk . ac . IDENT_0 . IDENT_1 . IDENT_2 . core . data . IDENT_3 IDENT_4 = new uk . ac . IDENT_0 . IDENT_1 . IDENT_2 . core . data . impl . METHOD_1 ( ) ; IDENT_4 . setId ( 1L ) ; IDENT_4 . METHOD_2 ( STRING_0 ) ; com . IDENT_5 . IDENT_6 . core . IDENT_7 IDENT_8 = new com . IDENT_5 . IDENT_6 . core . METHOD_3 ( ) ; uk . ac . IDENT_0 . IDENT_1 . IDENT_2 . core . data . IDENT_3 IDENT_9 = new uk . ac . IDENT_0 . IDENT_1 . IDENT_2 . core . data . impl . METHOD_1 ( ) ; IDENT_9 . setId ( IDENT_4 . getId ( ) ) ; IDENT_9 . METHOD_2 ( STRING_1 ) ; org . mockito . Mockito . when ( IDENT_10 . get ( IDENT_4 . getId ( ) ) ) . thenReturn ( IDENT_9 ) ; IDENT_11 . METHOD_4 ( IDENT_4 , IDENT_8 ) ; org . mockito . IDENT_12 < uk . ac . IDENT_0 . IDENT_1 . IDENT_2 . core . data . IDENT_3 > IDENT_13 = org . mockito . IDENT_12 . METHOD_5 ( uk . ac . IDENT_0 . IDENT_1 . IDENT_2 . core . data . IDENT_3 . class ) ; org . mockito . Mockito . verify ( IDENT_10 ) . save ( IDENT_13 . METHOD_6 ( ) ) ; uk . ac . IDENT_0 . IDENT_1 . IDENT_2 . core . data . IDENT_3 IDENT_14 = METHOD_6 . getValue ( ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ) { return IDENT_15 ; }
org . junit . Assert . assertEquals ( 1 , IDENT_14 . METHOD_7 ( ) . size ( ) ) 