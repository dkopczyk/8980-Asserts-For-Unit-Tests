METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( anyString ( ) , eq ( IDENT_1 . IDENT_2 . IDENT_3 ) ) ) . METHOD_2 ( org . IDENT_4 . IDENT_5 . IllegalArgumentException . class ) ; try { IDENT_6 . convert ( "" , IDENT_1 . IDENT_2 . IDENT_3 ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . lang . Exception e ) { "<AssertPlaceHolder>" ; } } convert ( java . lang . String , org . IDENT_4 . IDENT_5 . IDENT_7 ) { if ( value == null ) { throw new org . IDENT_4 . IDENT_5 . METHOD_3 ( ( ( STRING_1 + IDENT_8 ) + STRING_2 ) ) ; } org . IDENT_4 . IDENT_5 . IDENT_1 . logger . debug ( STRING_3 , IDENT_8 , value ) ; try { org . IDENT_4 . IDENT_5 . IDENT_9 info ; switch ( IDENT_8 ) { case IDENT_10 : if ( ! ( value . startsWith ( STRING_4 ) ) ) { value = STRING_4 + value ; } case IDENT_11 : case IDENT_12 : org . IDENT_4 . IDENT_5 . IDENT_13 IDENT_14 ; if ( IDENT_8 == ( org . IDENT_4 . IDENT_5 . IDENT_1 . IDENT_2 . IDENT_11 ) ) { IDENT_14 = IDENT_15 . METHOD_4 ( value ) ; } else if ( IDENT_8 == ( org . IDENT_4 . IDENT_5 . IDENT_1 . IDENT_2 . IDENT_10 ) ) { IDENT_14 = IDENT_15 . METHOD_5 ( value ) ; } else { IDENT_14 = IDENT_15 . METHOD_6 ( value ) ; } if ( IDENT_14 != null ) { info = new org . IDENT_4 . IDENT_5 . METHOD_7 ( IDENT_14 ) ; } else { org . IDENT_4 . IDENT_5 . IDENT_16 result = IDENT_17 . METHOD_1 ( value , IDENT_8 ) ; info = new org . IDENT_4 . IDENT_5 . METHOD_7 ( result ) ; if ( IDENT_8 == ( org . IDENT_4 . IDENT_5 . IDENT_1 . IDENT_2 . IDENT_11 ) ) { info . METHOD_8 ( value ) ; } else if ( IDENT_8 == ( org . IDENT_4 . IDENT_5 . IDENT_1 . IDENT_2 . IDENT_10 ) ) { info . METHOD_9 ( value ) ; } IDENT_14 = new org . IDENT_4 . IDENT_5 . METHOD_10 ( info . METHOD_11 ( ) . METHOD_12 ( null ) , info . METHOD_13 ( ) . METHOD_12 ( null ) , info . METHOD_14 ( ) . METHOD_12 ( null ) , info . METHOD_15 ( ) . METHOD_12 ( null ) , info . METHOD_16 ( ) . METHOD_12 ( null ) ) ; IDENT_15 . save ( IDENT_14 ) ; } break ; case IDENT_18 : case IDENT_3 : case IDENT_19 : case IDENT_20 : org . IDENT_4 . IDENT_5 . IDENT_21 IDENT_22 ; if ( IDENT_8 == ( org . IDENT_4 . IDENT_5 . IDENT_1 . IDENT_2 . IDENT_18 ) ) { IDENT_22 = IDENT_23 . METHOD_17 ( value ) ; } else if ( IDENT_8 == ( org . IDENT_4 . IDENT_5 . IDENT_1 . IDENT_2 . IDENT_3 ) ) { IDENT_22 = IDENT_23 . METHOD_18 ( value ) ; } else if ( IDENT_8 == ( org . IDENT_4 . IDENT_5 . IDENT_1 . IDENT_2 . IDENT_19 ) ) { IDENT_22 = IDENT_23 . METHOD_19 ( value ) ; } else { IDENT_22 = IDENT_23 . METHOD_6 ( value ) ; } if ( IDENT_22 != null ) { info = new org . IDENT_4 . IDENT_5 . METHOD_7 ( IDENT_22 ) ; } else { org . IDENT_4 . IDENT_5 . IDENT_24 result = IDENT_25 . METHOD_1 ( value , IDENT_8 ) ; info = new org . IDENT_4 . IDENT_5 . METHOD_7 ( result ) ; IDENT_22 = new org . IDENT_4 . IDENT_5 . METHOD_20 ( info . METHOD_21 ( ) . METHOD_12 ( null ) , info . METHOD_22 ( ) . METHOD_12 ( null ) , info . METHOD_23 ( ) . METHOD_12 ( null ) , info . METHOD_14 ( ) . METHOD_12 ( null ) , info . METHOD_15 ( ) . METHOD_12 ( null ) , info . METHOD_16 ( ) . METHOD_12 ( null ) ) ; IDENT_23 . save ( IDENT_22 ) ; } break ; default : throw new java . lang . IllegalArgumentException ( STRING_5 ) ; } org . IDENT_4 . IDENT_5 . IDENT_1 . logger . debug ( ( STRING_6 + info ) ) ; return info ; } catch ( java . lang . Exception e ) { org . IDENT_4 . IDENT_5 . IDENT_1 . logger . error ( ( ( ( STRING_7 + IDENT_8 ) + " " ) + value ) , e ) ; com . google . common . base . IDENT_26 . METHOD_24 ( e , org . IDENT_4 . IDENT_5 . METHOD_3 . class ) ; throw new org . IDENT_4 . IDENT_5 . METHOD_3 ( STRING_8 , e ) ; } }
org . junit . Assert . assertEquals ( org . IDENT_4 . IDENT_5 . METHOD_3 . class , e . getClass ( ) ) 