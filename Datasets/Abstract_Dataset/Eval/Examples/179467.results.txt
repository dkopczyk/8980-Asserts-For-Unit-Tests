METHOD_0 ( ) { java . util . List < org . IDENT_0 . server . common . data . IDENT_1 > IDENT_2 = new java . util . ArrayList ( ) ; for ( int i = 0 ; i < INT_0 ; i ++ ) { IDENT_2 . add ( METHOD_1 ( ( STRING_0 + i ) ) ) ; } java . util . List < org . IDENT_0 . server . common . data . IDENT_1 > IDENT_3 = METHOD_2 ( new org . IDENT_0 . server . common . data . page . METHOD_3 ( INT_1 ) , STRING_1 ) ; java . util . Collections . METHOD_4 ( IDENT_2 , IDENT_4 ) ; java . util . Collections . METHOD_4 ( IDENT_3 , IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . IDENT_0 . server . common . data . page . METHOD_3 , java . lang . String ) { java . util . List < org . IDENT_0 . server . common . data . IDENT_1 > IDENT_5 = new java . util . ArrayList ( ) ; org . IDENT_0 . server . common . data . page . IDENT_6 < org . IDENT_0 . server . common . data . IDENT_1 > IDENT_7 ; do { IDENT_7 = METHOD_5 ( IDENT_8 , new com . fasterxml . jackson . core . type . IDENT_9 < org . IDENT_0 . server . common . data . page . IDENT_6 < org . IDENT_0 . server . common . data . IDENT_1 > > ( ) { } , IDENT_10 ) ; IDENT_5 . addAll ( IDENT_7 . METHOD_6 ( ) ) ; if ( IDENT_7 . hasNext ( ) ) { IDENT_10 = IDENT_7 . METHOD_7 ( ) ; } } while ( IDENT_7 . hasNext ( ) ) ; return IDENT_5 ; }
org . junit . Assert . assertEquals ( IDENT_2 , IDENT_3 ) 