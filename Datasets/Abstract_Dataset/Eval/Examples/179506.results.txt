METHOD_0 ( ) { METHOD_1 ( ) ; METHOD_2 ( METHOD_3 ( ) ) ; com . IDENT_0 . IDENT_1 . hadoop . IDENT_2 IDENT_3 = METHOD_3 ( ) ; METHOD_4 ( IDENT_3 ) ; IDENT_4 . METHOD_5 ( STRING_0 ) . METHOD_6 ( ) . METHOD_7 ( ) ; METHOD_8 ( ) ; com . IDENT_0 . IDENT_1 . core . IDENT_5 IDENT_6 = graph . METHOD_9 ( STRING_0 ) ; for ( int i = 0 ; i < INT_0 ; i ++ ) { com . IDENT_0 . IDENT_1 . core . IDENT_5 v = graph . METHOD_9 ( STRING_0 ) ; v . METHOD_10 ( STRING_1 , IDENT_6 ) ; if ( ( 0 < i ) && ( 0 == ( i OP_0 4 ) ) ) graph . tx ( ) . commit ( ) ; } graph . tx ( ) . commit ( ) ; org . apache . hadoop . conf . Configuration c = new org . apache . hadoop . conf . Configuration ( ) ; c . set ( ( ( ( com . IDENT_0 . IDENT_1 . hadoop . IDENT_7 . getPath ( IDENT_8 . IDENT_9 , true ) ) + STRING_2 ) + STRING_3 ) , getClass ( ) . METHOD_11 ( ) ) ; c . set ( ( ( ( com . IDENT_0 . IDENT_1 . hadoop . IDENT_7 . getPath ( IDENT_8 . IDENT_9 , true ) ) + STRING_2 ) + STRING_4 ) , STRING_5 ) ; c . set ( com . IDENT_0 . IDENT_1 . hadoop . IDENT_7 . getPath ( IDENT_8 . IDENT_10 ) , STRING_6 ) ; c . set ( STRING_7 , STRING_8 ) ; org . apache . hadoop . mapreduce . IDENT_11 job = METHOD_12 ( c ) ; "<AssertPlaceHolder>" ; } METHOD_13 ( java . lang . Thread [ ] ) { return com . IDENT_0 . IDENT_1 . util . IDENT_12 . IDENT_13 . METHOD_13 ( IDENT_14 , Integer . MAX_VALUE ) ; }
org . junit . Assert . assertTrue ( job . METHOD_13 ( true ) ) 