METHOD_0 ( ) { org . IDENT_0 . concurrent . IDENT_1 . IDENT_2 factory = METHOD_1 ( ) ; try { org . IDENT_0 . concurrent . IDENT_3 IDENT_4 = factory . METHOD_2 ( 1 ) ; java . lang . IDENT_5 IDENT_6 = new org . IDENT_0 . test . concurrent . METHOD_3 ( ) ; IDENT_4 . METHOD_4 ( IDENT_6 , ( ( 1000 * INT_0 ) * INT_0 ) ) ; org . IDENT_0 . concurrent . future . IDENT_7 < ? > future = IDENT_4 . METHOD_4 ( org . IDENT_0 . concurrent . IDENT_8 . instance ( ) , ( ( 1000 * INT_0 ) * INT_0 ) ) ; future . METHOD_5 ( false ) ; java . util . List < java . lang . IDENT_5 > result = IDENT_4 . METHOD_6 ( ) ; "<AssertPlaceHolder>" ; } finally { factory . METHOD_7 ( ) ; } } size ( ) { return IDENT_9 . size ; }
org . junit . Assert . assertEquals ( 1 , result . size ( ) ) 