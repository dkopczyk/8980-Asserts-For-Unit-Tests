METHOD_0 ( ) { java . lang . Exception IDENT_0 = new java . lang . Exception ( ) ; org . IDENT_1 . concurrent . future . IDENT_2 < ? > IDENT_3 = METHOD_1 ( ) . METHOD_2 ( IDENT_0 ) ; java . util . concurrent . atomic . IDENT_4 IDENT_5 = new java . util . concurrent . atomic . METHOD_3 ( false ) ; org . IDENT_1 . concurrent . future . IDENT_2 < java . lang . IDENT_6 > IDENT_7 = IDENT_3 . map ( ( o ) -> { IDENT_5 . set ( true ) ; return null ; } ) ; "<AssertPlaceHolder>" ; org . IDENT_1 . concurrent . future . IDENT_8 . METHOD_4 ( IDENT_7 , IDENT_0 ) ; } METHOD_5 ( ) { return IDENT_9 . METHOD_5 ( ) ; }
org . junit . Assert . assertTrue ( IDENT_7 . METHOD_5 ( ) ) 