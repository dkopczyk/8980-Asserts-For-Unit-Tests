METHOD_0 ( ) { org . IDENT_0 . concurrent . future . IDENT_1 . IDENT_2 IDENT_3 = METHOD_1 ( ) ; org . IDENT_0 . test . concurrent . IDENT_4 IDENT_5 = new org . IDENT_0 . test . concurrent . METHOD_2 ( ) ; java . util . concurrent . IDENT_6 < ? > future = IDENT_3 . METHOD_3 ( IDENT_5 ) ; long IDENT_7 = org . IDENT_0 . util . IDENT_8 . METHOD_4 ( ) ; try { future . get ( org . IDENT_0 . concurrent . future . IDENT_9 , TimeUnit . IDENT_10 ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . util . concurrent . IDENT_11 e ) { long IDENT_12 = org . IDENT_0 . util . IDENT_8 . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } } METHOD_4 ( ) { return ( ( org . IDENT_0 . util . IDENT_8 . IDENT_13 = java . lang . System . METHOD_5 ( ) ) - ( org . IDENT_0 . util . IDENT_8 . IDENT_14 ) ) / ( org . IDENT_0 . util . IDENT_8 . IDENT_15 ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_12 - IDENT_7 ) >= ( IDENT_9 ) ) ) 