METHOD_0 ( ) { org . apache . jackrabbit . oak . spi . security . IDENT_0 params = org . apache . jackrabbit . oak . spi . security . IDENT_0 . of ( IDENT_1 . IDENT_2 , true , IDENT_1 . IDENT_3 , STRING_0 ) ; org . apache . jackrabbit . oak . spi . security . authorization . IDENT_4 . impl . IDENT_5 cc = org . apache . jackrabbit . oak . spi . security . authorization . IDENT_4 . impl . IDENT_6 . METHOD_1 ( params ) ; java . util . List < java . security . IDENT_7 > IDENT_8 = com . google . common . collect . ImmutableList . of ( IDENT_9 . INSTANCE , new org . apache . jackrabbit . oak . spi . security . IDENT_10 . METHOD_2 ( ) { @ org . apache . jackrabbit . oak . spi . security . authorization . IDENT_4 . impl . Override public java . lang . String getName ( ) { return STRING_1 ; } } , new org . apache . jackrabbit . oak . spi . security . IDENT_10 . METHOD_3 ( ) { @ org . apache . jackrabbit . oak . spi . security . authorization . IDENT_4 . impl . Override public java . lang . String getName ( ) { return STRING_2 ; } } ) ; for ( java . security . IDENT_7 p : IDENT_8 ) { java . util . Set < java . security . IDENT_7 > IDENT_11 = com . google . common . collect . IDENT_12 . of ( p , org . apache . jackrabbit . oak . spi . security . IDENT_10 . IDENT_13 . getInstance ( ) ) ; org . apache . jackrabbit . oak . spi . security . authorization . IDENT_14 . IDENT_15 IDENT_16 = cc . METHOD_4 ( root , STRING_3 , IDENT_11 ) ; "<AssertPlaceHolder>" ; } } getInstance ( ) { return org . apache . jackrabbit . oak . spi . security . authorization . IDENT_14 . IDENT_17 . INSTANCE ; }
org . junit . Assert . assertSame ( org . apache . jackrabbit . oak . spi . security . authorization . IDENT_14 . IDENT_17 . getInstance ( ) , IDENT_16 ) 