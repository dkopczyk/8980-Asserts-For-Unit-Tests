METHOD_0 ( int , int , int , int , int , int , java . time . IDENT_0 . IDENT_1 , long ) { org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 start = org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_6 . INSTANCE . date ( IDENT_7 , IDENT_8 , IDENT_9 ) ; org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 end = org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_6 . INSTANCE . date ( IDENT_10 , IDENT_11 , IDENT_12 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . time . IDENT_0 . IDENT_13 , java . time . IDENT_0 . IDENT_1 ) { org . IDENT_2 . IDENT_3 . IDENT_14 end = org . IDENT_2 . IDENT_3 . IDENT_14 . from ( IDENT_15 ) ; long IDENT_16 = ( end . METHOD_2 ( ) ) - ( METHOD_2 ( ) ) ; if ( unit == ( java . time . IDENT_0 . IDENT_17 . IDENT_18 ) ) { return IDENT_16 ; } else if ( unit instanceof java . time . IDENT_0 . IDENT_19 ) { switch ( ( ( java . time . IDENT_0 . IDENT_19 ) ( unit ) ) ) { case java . time . IDENT_0 . IDENT_19 . IDENT_20 : return IDENT_16 / 4 ; case java . time . IDENT_0 . IDENT_19 . IDENT_21 : return IDENT_16 / INT_0 ; case java . time . IDENT_0 . IDENT_19 . IDENT_22 : return IDENT_16 / INT_1 ; case java . time . IDENT_0 . IDENT_19 . IDENT_23 : return IDENT_16 / INT_2 ; case java . time . IDENT_0 . IDENT_19 . IDENT_24 : return ( end . METHOD_3 ( java . time . IDENT_0 . IDENT_25 . IDENT_26 ) ) - ( METHOD_3 ( java . time . IDENT_0 . IDENT_25 . IDENT_26 ) ) ; default : throw new java . time . IDENT_0 . METHOD_4 ( ( STRING_0 + unit ) ) ; } } return unit . METHOD_5 ( this , end ) ; }
org . junit . Assert . assertEquals ( expected , start . METHOD_1 ( end , unit ) ) 