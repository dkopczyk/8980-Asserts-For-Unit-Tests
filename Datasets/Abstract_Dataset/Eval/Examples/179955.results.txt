METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . of ( INT_0 , 6 , INT_1 ) ; java . time . IDENT_5 test = IDENT_5 . IDENT_6 . with ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } of ( int , int , int ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . METHOD_1 ( IDENT_8 ) ; IDENT_9 . IDENT_10 . METHOD_1 ( IDENT_11 , org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_12 ) ; IDENT_9 . IDENT_13 . METHOD_1 ( IDENT_14 , org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_15 ) ; if ( ( IDENT_11 == ( ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 . IDENT_16 ) + 1 ) ) && ( ! ( IDENT_9 . INSTANCE . METHOD_2 ( IDENT_8 ) ) ) ) { throw new java . time . METHOD_3 ( ( ( STRING_0 + IDENT_8 ) + STRING_1 ) ) ; } if ( ( ( IDENT_14 > ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 . IDENT_17 ) ) && ( IDENT_11 == ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 . IDENT_16 ) ) ) && ( IDENT_9 . INSTANCE . METHOD_2 ( IDENT_8 ) ) ) { throw new java . time . METHOD_3 ( ( ( STRING_2 + IDENT_8 ) + STRING_3 ) ) ; } return new org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_4 ( IDENT_8 , IDENT_11 , IDENT_14 ) ; }
org . junit . Assert . assertEquals ( java . time . IDENT_5 . of ( INT_0 , 6 , INT_1 ) , test ) 