METHOD_0 ( ) { try { org . IDENT_0 . IDENT_1 . logger . info ( STRING_0 ) ; org . IDENT_0 . IDENT_2 server = org . IDENT_0 . IDENT_1 . METHOD_1 ( org . IDENT_0 . IDENT_1 . IDENT_3 ) ; server . METHOD_2 ( ) ; org . apache . IDENT_4 . transport . IDENT_5 IDENT_6 = org . IDENT_0 . IDENT_7 . create ( org . IDENT_0 . IDENT_1 . context , org . IDENT_0 . IDENT_1 . IDENT_3 ) ; org . IDENT_0 . test . IDENT_8 . IDENT_9 client = new org . IDENT_0 . test . IDENT_8 . METHOD_3 ( new org . apache . IDENT_4 . protocol . METHOD_4 ( IDENT_6 ) ) ; IDENT_6 . METHOD_5 ( ) ; int l = INT_0 * INT_0 ; char [ ] c = new char [ l ] ; java . util . IDENT_10 IDENT_11 = new java . util . METHOD_6 ( INT_1 ) ; for ( int i = 0 ; i < l ; i ++ ) { c [ i ] = ( ( char ) ( ( IDENT_11 . METHOD_7 ( ( INT_2 - INT_3 ) ) ) + INT_3 ) ) ; } java . lang . String s = new java . lang . String ( c ) ; java . lang . String r = client . METHOD_8 ( s ) ; "<AssertPlaceHolder>" ; IDENT_6 . close ( ) ; server . METHOD_9 ( ) ; } catch ( java . lang . Throwable ex ) { org . IDENT_0 . IDENT_1 . logger . error ( STRING_1 , ex ) ; throw ex ; } } METHOD_8 ( java . lang . String ) { return s ; }
org . junit . Assert . assertEquals ( s , r ) 