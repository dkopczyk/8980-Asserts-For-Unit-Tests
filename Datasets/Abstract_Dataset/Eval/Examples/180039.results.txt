METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_2 = new org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; java . util . List < java . io . InputStream > IDENT_4 = new java . util . ArrayList ( ) ; IDENT_4 . add ( new java . io . METHOD_2 ( STRING_0 ) ) ; IDENT_4 . add ( new java . io . METHOD_2 ( STRING_1 ) ) ; IDENT_2 . METHOD_3 ( IDENT_4 ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 IDENT_6 = new org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_4 ( IDENT_2 ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 m = IDENT_6 . METHOD_5 ( STRING_2 ) ; java . util . Set < java . io . File > IDENT_8 = new java . util . HashSet ( ) ; IDENT_8 . add ( new java . io . File ( STRING_3 ) ) ; java . util . Set < java . lang . String > IDENT_9 = m . METHOD_6 ( IDENT_8 ) ; java . util . Set < java . lang . String > IDENT_10 = new java . util . HashSet ( ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( java . util . Set ) { java . util . Set < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_11 > IDENT_9 = new java . util . HashSet ( ) ; IDENT_12 : for ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_11 IDENT_13 : this . METHOD_7 ( ) ) { for ( java . io . File IDENT_14 : IDENT_8 ) { java . io . File IDENT_15 = new java . io . File ( ( ( ( IDENT_14 . getAbsolutePath ( ) ) + ( java . io . File . IDENT_16 ) ) + ( IDENT_13 . METHOD_8 ( ) ) ) ) ; if ( IDENT_15 . exists ( ) ) { continue IDENT_12 ; } } IDENT_9 . add ( IDENT_13 ) ; } return IDENT_9 ; }
org . junit . Assert . assertThat ( IDENT_9 , org . hamcrest . CoreMatchers . equalTo ( IDENT_10 ) ) 