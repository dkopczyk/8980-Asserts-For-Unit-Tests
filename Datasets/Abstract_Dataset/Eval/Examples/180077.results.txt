METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 < IDENT_0 . IDENT_1 . IDENT_2 . IDENT_4 > build = builder . build ( STRING_0 , null ) ; "<AssertPlaceHolder>" ; } build ( java . lang . String , IDENT_0 . IDENT_1 . lang . IDENT_5 ) { if ( ! ( IDENT_6 . toLowerCase ( ) . startsWith ( property . getName ( ) . toLowerCase ( ) ) ) ) { return null ; } java . lang . String rest = IDENT_6 . substring ( property . getName ( ) . length ( ) ) ; IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 IDENT_9 = null ; if ( rest . startsWith ( STRING_1 ) ) { IDENT_9 = IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_10 ; rest = rest . substring ( 2 ) ; } if ( rest . startsWith ( STRING_2 ) ) { IDENT_9 = IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_11 ; rest = rest . substring ( 1 ) ; } if ( rest . startsWith ( STRING_3 ) ) { IDENT_9 = IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_12 ; rest = rest . substring ( 2 ) ; } if ( rest . startsWith ( STRING_4 ) ) { IDENT_9 = IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_13 ; rest = rest . substring ( 1 ) ; } if ( rest . startsWith ( STRING_5 ) ) { IDENT_9 = IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_14 ; rest = rest . substring ( 1 ) ; } if ( IDENT_9 == null ) { throw new IDENT_0 . IDENT_1 . METHOD_1 ( lang . METHOD_2 ( IDENT_6 , METHOD_3 ( ) ) ) ; } double d ; try { d = java . lang . Double . METHOD_4 ( rest ) ; } catch ( java . lang . IDENT_15 e ) { throw new IDENT_0 . IDENT_1 . METHOD_1 ( lang . METHOD_2 ( IDENT_6 , METHOD_3 ( ) ) ) ; } double max = ( ( ( IDENT_9 == ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_14 ) ) || ( IDENT_9 == ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_10 ) ) ) || ( IDENT_9 == ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_11 ) ) ) ? d : Double . IDENT_16 ; double min = ( ( ( IDENT_9 == ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_14 ) ) || ( IDENT_9 == ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_12 ) ) ) || ( IDENT_9 == ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_13 ) ) ) ? d : Double . IDENT_17 ; return new IDENT_0 . IDENT_1 . IDENT_2 . METHOD_5 ( IDENT_6 , property , min , ( IDENT_9 != ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_13 ) ) , max , ( IDENT_9 != ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_11 ) ) ) ; }
org . junit . Assert . assertEquals ( new IDENT_0 . IDENT_1 . IDENT_2 . METHOD_5 ( STRING_0 , new IDENT_0 . IDENT_1 . IDENT_2 . METHOD_6 ( ) , Double . IDENT_17 , true , 12 , false ) , build ) 