METHOD_0 ( ) { com . tinkerpop . IDENT_0 . IDENT_1 graph = com . tinkerpop . IDENT_0 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( ) ; com . tinkerpop . IDENT_5 . IDENT_6 factory = new com . tinkerpop . IDENT_5 . METHOD_2 ( new com . tinkerpop . IDENT_5 . IDENT_7 . METHOD_3 ( ) { @ com . tinkerpop . IDENT_5 . IDENT_7 . Override public void METHOD_4 ( com . tinkerpop . IDENT_5 . IDENT_8 config ) { config . METHOD_5 ( new com . tinkerpop . IDENT_5 . IDENT_7 . METHOD_6 ( ) { @ com . tinkerpop . IDENT_5 . IDENT_7 . Override public java . lang . Class < ? > [ ] METHOD_7 ( com . tinkerpop . IDENT_0 . IDENT_9 e , java . lang . Class < ? > IDENT_10 ) { return new java . lang . Class [ 0 ] ; } @ com . tinkerpop . IDENT_5 . IDENT_7 . Override public java . lang . Class < ? > [ ] METHOD_7 ( com . tinkerpop . IDENT_0 . IDENT_11 v , java . lang . Class < ? > IDENT_10 ) { return new java . lang . Class [ ] { com . tinkerpop . IDENT_5 . IDENT_7 . IDENT_12 . IDENT_13 . class } ; } } ) ; } } ) ; IDENT_14 = factory . create ( graph ) ; com . tinkerpop . IDENT_5 . domain . classes . Person IDENT_15 = IDENT_14 . METHOD_8 ( 1 , com . tinkerpop . IDENT_5 . domain . classes . Person . class ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( java . lang . Object , java . lang . Class ) { return this . METHOD_9 ( METHOD_8 ( id ) , IDENT_16 ) ; }
org . junit . Assert . assertTrue ( ( IDENT_15 instanceof com . tinkerpop . IDENT_5 . IDENT_7 . IDENT_12 . IDENT_13 ) ) 