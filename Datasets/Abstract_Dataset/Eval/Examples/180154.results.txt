METHOD_0 ( ) { org . apache . commons . configuration . IDENT_0 IDENT_1 = new org . apache . commons . configuration . METHOD_1 ( ) ; IDENT_1 . METHOD_2 ( STRING_0 , STRING_1 ) ; org . apache . commons . configuration . METHOD_1 IDENT_2 = new org . apache . commons . configuration . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( STRING_2 , STRING_3 ) ; IDENT_1 . METHOD_2 ( STRING_4 , IDENT_2 ) ; com . tinkerpop . IDENT_3 . extension . IDENT_4 IDENT_5 = new com . tinkerpop . IDENT_3 . extension . METHOD_3 ( STRING_5 , "name" , IDENT_1 ) ; org . apache . commons . configuration . METHOD_1 IDENT_6 = new org . apache . commons . configuration . METHOD_1 ( ) ; IDENT_6 . METHOD_2 ( STRING_0 , STRING_1 ) ; org . apache . commons . configuration . METHOD_1 IDENT_7 = new org . apache . commons . configuration . METHOD_1 ( ) ; IDENT_7 . METHOD_2 ( STRING_2 , STRING_3 ) ; IDENT_6 . METHOD_2 ( STRING_4 , IDENT_7 ) ; com . tinkerpop . IDENT_3 . extension . METHOD_3 IDENT_8 = new com . tinkerpop . IDENT_3 . extension . METHOD_3 ( STRING_5 , "name" , IDENT_6 ) ; "<AssertPlaceHolder>" ; } equals ( java . lang . Object ) { if ( ( this ) == o ) return true ; if ( ( o == null ) || ( ( getClass ( ) ) != ( o . getClass ( ) ) ) ) return false ; final com . tinkerpop . IDENT_3 . IDENT_9 that = ( ( com . tinkerpop . IDENT_3 . IDENT_9 ) ( o ) ) ; if ( ! ( IDENT_10 . equals ( that . IDENT_10 ) ) ) return false ; if ( ! ( graph . getClass ( ) . equals ( that . graph . getClass ( ) ) ) ) return false ; for ( com . tinkerpop . IDENT_3 . extension . IDENT_11 IDENT_12 : IDENT_13 ) { if ( ! ( that . METHOD_4 ( ) . contains ( IDENT_12 ) ) ) { return false ; } } for ( com . tinkerpop . IDENT_3 . extension . METHOD_3 configuration : IDENT_14 ) { if ( ! ( that . METHOD_5 ( ) . contains ( configuration ) ) ) { return false ; } } return true ; }
org . junit . Assert . assertTrue ( IDENT_5 . equals ( IDENT_8 ) ) 