METHOD_0 ( ) { final java . io . File IDENT_0 = java . io . File . METHOD_1 ( STRING_0 , STRING_1 ) ; final long IDENT_1 = INT_0 ; final long IDENT_2 = IDENT_1 / INT_1 ; final java . io . IDENT_3 IDENT_4 = new IDENT_5 . util . METHOD_2 ( IDENT_0 , STRING_2 ) ; IDENT_4 . METHOD_3 ( ( IDENT_1 * ( Long . IDENT_6 ) ) ) ; final java . io . IDENT_3 IDENT_7 = new IDENT_5 . util . METHOD_2 ( IDENT_0 , STRING_2 ) ; IDENT_7 . METHOD_3 ( ( IDENT_1 * ( Long . IDENT_6 ) ) ) ; IDENT_7 . METHOD_4 ( ( IDENT_2 * ( Long . IDENT_6 ) ) ) ; final java . io . IDENT_3 IDENT_8 = new IDENT_5 . util . METHOD_2 ( IDENT_0 , STRING_2 ) ; IDENT_8 . METHOD_3 ( ( IDENT_1 * ( Long . IDENT_6 ) ) ) ; IDENT_8 . METHOD_4 ( ( ( INT_2 * IDENT_2 ) * ( Long . IDENT_6 ) ) ) ; final java . io . IDENT_3 IDENT_9 = new IDENT_5 . util . METHOD_2 ( IDENT_0 , STRING_2 ) ; IDENT_9 . METHOD_3 ( ( IDENT_1 * ( Long . IDENT_6 ) ) ) ; IDENT_9 . METHOD_4 ( ( ( INT_3 * IDENT_2 ) * ( Long . IDENT_6 ) ) ) ; for ( long i = 0L ; i < ( 1L * IDENT_2 ) ; i ++ ) { IDENT_4 . METHOD_5 ( i ) ; } for ( long i = 1L * IDENT_2 ; i < ( INT_2 * IDENT_2 ) ; i ++ ) { IDENT_7 . METHOD_5 ( i ) ; } for ( long i = INT_2 * IDENT_2 ; i < ( INT_3 * IDENT_2 ) ; i ++ ) { IDENT_8 . METHOD_5 ( i ) ; } for ( long i = INT_3 * IDENT_2 ; i < ( INT_1 * IDENT_2 ) ; i ++ ) { IDENT_9 . METHOD_5 ( i ) ; } IDENT_4 . close ( ) ; IDENT_7 . close ( ) ; IDENT_8 . close ( ) ; IDENT_9 . close ( ) ; final java . io . IDENT_3 IDENT_10 = new IDENT_5 . util . METHOD_2 ( IDENT_0 , STRING_3 ) ; for ( long i = 0L ; i < IDENT_1 ; i ++ ) { "<AssertPlaceHolder>" ; } IDENT_10 . close ( ) ; } METHOD_6 ( ) { this . METHOD_7 ( this . IDENT_11 , 0 , 8 ) ; long res = IDENT_11 [ 0 ] ; res OP_0 8 ; res OP_1 ( IDENT_11 [ 1 ] ) & 255 ; res OP_0 8 ; res OP_1 ( IDENT_11 [ 2 ] ) & 255 ; res OP_0 8 ; res OP_1 ( IDENT_11 [ 3 ] ) & 255 ; res OP_0 8 ; res OP_1 ( IDENT_11 [ 4 ] ) & 255 ; res OP_0 8 ; res OP_1 ( IDENT_11 [ 5 ] ) & 255 ; res OP_0 8 ; res OP_1 ( IDENT_11 [ 6 ] ) & 255 ; res OP_0 8 ; res OP_1 ( IDENT_11 [ 7 ] ) & 255 ; return res ; }
org . junit . Assert . assertEquals ( i , IDENT_10 . METHOD_6 ( ) ) 