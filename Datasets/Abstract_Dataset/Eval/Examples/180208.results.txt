METHOD_0 ( ) { final int elements = INT_0 ; final java . util . List < java . lang . Long > IDENT_0 = new java . util . ArrayList < java . lang . Long > ( ) ; final java . util . IDENT_1 IDENT_2 = new java . util . METHOD_1 ( ) ; for ( int i = 0 ; i < elements ; i ++ ) { IDENT_0 . add ( IDENT_2 . METHOD_2 ( ) ) ; } final IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 array = new IDENT_3 . IDENT_4 . IDENT_5 . METHOD_3 ( elements ) ; array . METHOD_4 ( ) ; for ( int i = 0 ; i < elements ; i ++ ) { array . set ( i , IDENT_0 . get ( i ) ) ; } for ( int i = 0 ; i < ( elements / 2 ) ; i ++ ) { array . METHOD_5 ( i , ( ( elements - 1 ) - i ) ) ; } java . util . Collections . METHOD_6 ( IDENT_0 ) ; for ( int i = 0 ; i < elements ; i ++ ) { "<AssertPlaceHolder>" ; } } get ( java . lang . Object ) { final IDENT_7 v = super . get ( key ) ; if ( v instanceof IDENT_8 . IDENT_9 . IDENT_10 ) { final IDENT_8 . IDENT_9 . IDENT_10 IDENT_11 = ( ( IDENT_8 . IDENT_9 . IDENT_10 ) ( v ) ) ; if ( IDENT_11 . METHOD_7 ( ) ) { if ( IDENT_12 . contains ( IDENT_11 ) ) { return v ; } } } return null ; }
org . junit . Assert . assertEquals ( ( ( long ) ( IDENT_0 . get ( i ) ) ) , array . get ( i ) ) 