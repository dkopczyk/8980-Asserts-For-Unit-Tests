METHOD_0 ( ) { final IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = ( ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) ( METHOD_1 ( ) ) ) ; final IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_5 = ( ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) ( METHOD_1 ( ) ) ) ; final long IDENT_2 = 1L ; final IDENT_0 . util . IDENT_6 IDENT_7 = new IDENT_0 . util . METHOD_2 ( ) ; IDENT_7 . METHOD_3 ( IDENT_2 ) ; boolean IDENT_8 = ! ( IDENT_5 . METHOD_4 ( IDENT_7 ) . get ( 0 ) ) ; "<AssertPlaceHolder>" ; } put ( java . lang . Object ) { util . IDENT_9 [ ] IDENT_10 = set ; int hash = key . hashCode ( ) ; int index = ( hash & INT_0 ) OP_0 ( IDENT_10 . length ) ; for ( util . IDENT_9 e = IDENT_10 [ index ] ; e != null ; e = e . next ) { if ( ( ( e . hash ) == hash ) && ( e . key . equals ( key ) ) ) { java . lang . Object IDENT_11 = e . key ; e . key = key ; return IDENT_11 ; } } if ( ( count ) >= ( IDENT_12 ) ) { METHOD_5 ( ) ; return put ( key ) ; } util . IDENT_9 e = new util . METHOD_6 ( ) ; e . hash = hash ; e . key = key ; e . next = IDENT_10 [ index ] ; IDENT_10 [ index ] = e ; ( count ) ++ ; return null ; }
org . junit . Assert . assertEquals ( IDENT_4 . put ( IDENT_2 ) , IDENT_8 ) 