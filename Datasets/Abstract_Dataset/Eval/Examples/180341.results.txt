METHOD_0 ( ) { java . io . File file = METHOD_1 ( STRING_0 ) ; eu . IDENT_0 . IDENT_1 . parser . data . IDENT_2 . IDENT_3 IDENT_4 = METHOD_2 ( file ) ; eu . IDENT_0 . IDENT_1 . datamodel . IDENT_5 a = IDENT_6 . METHOD_3 ( ( ( eu . IDENT_0 . IDENT_1 . parser . data . IDENT_2 . IDENT_5 ) ( IDENT_4 ) ) , "" ) ; eu . IDENT_0 . IDENT_1 . datamodel . IDENT_7 . IDENT_8 [ ] expected = new eu . IDENT_0 . IDENT_1 . datamodel . IDENT_7 . IDENT_8 [ ] { new eu . IDENT_0 . IDENT_1 . datamodel . bean . METHOD_4 ( 1 , new java . util . Date ( 0 ) , STRING_1 , STRING_2 , STRING_3 , STRING_4 ) , new eu . IDENT_0 . IDENT_1 . datamodel . bean . METHOD_4 ( 5 , new java . util . Date ( ( ( ( INT_0 * INT_1 ) * INT_1 ) * 1000 ) ) , STRING_5 , "" , STRING_6 , STRING_7 ) } ; for ( eu . IDENT_0 . IDENT_1 . datamodel . IDENT_9 IDENT_10 : a . METHOD_5 ( ) ) { int i = 0 ; for ( eu . IDENT_0 . IDENT_1 . datamodel . IDENT_7 . IDENT_8 actual : IDENT_10 . METHOD_6 ( ) . METHOD_7 ( ) ) { "<AssertPlaceHolder>" ; i ++ ; } } } METHOD_7 ( ) { return java . util . Collections . METHOD_8 ( IDENT_11 ) ; }
org . junit . Assert . assertEquals ( expected [ i ] , actual ) 