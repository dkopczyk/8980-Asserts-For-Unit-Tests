METHOD_0 ( ) { context . METHOD_1 ( new org . IDENT_0 . METHOD_2 ( ) { { METHOD_3 ( IDENT_1 ) . build ( ) ; METHOD_4 ( METHOD_5 ( client ) ) ; METHOD_3 ( IDENT_2 ) . build ( ) ; METHOD_4 ( METHOD_5 ( IDENT_3 ) ) ; METHOD_3 ( client ) . execute ( with ( org . hamcrest . Matchers . < org . apache . http . client . methods . IDENT_4 > METHOD_6 ( org . apache . http . client . methods . IDENT_4 . class ) ) , with ( org . hamcrest . Matchers . any ( org . apache . http . client . IDENT_5 . class ) ) , with ( org . hamcrest . Matchers . any ( org . apache . http . protocol . IDENT_6 . class ) ) ) ; METHOD_4 ( METHOD_5 ( response ) ) ; } } ) ; IDENT_7 . apache . IDENT_8 http = new IDENT_7 . apache . METHOD_7 ( IDENT_1 , IDENT_2 ) ; IDENT_7 . apache . IDENT_9 IDENT_10 = http . put ( IDENT_7 . IDENT_11 . METHOD_8 ( ) , new IDENT_7 . apache . METHOD_9 ( "" ) ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( ) { try { return new java . net . URL ( STRING_0 ) ; } catch ( java . net . IDENT_12 e ) { throw new java . lang . RuntimeException ( e ) ; } }
org . junit . Assert . assertThat ( IDENT_10 , org . hamcrest . Matchers . is ( response ) ) 