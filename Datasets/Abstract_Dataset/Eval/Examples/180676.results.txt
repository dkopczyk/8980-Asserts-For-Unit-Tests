METHOD_0 ( ) { net . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = net . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ( ( java . net . IDENT_5 ) ( java . net . IDENT_6 . METHOD_2 ( STRING_0 ) ) ) ) ; System . err . println ( IDENT_4 ) ; IDENT_4 = IDENT_4 . METHOD_3 ( 0 ) ; System . err . println ( IDENT_4 ) ; net . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_7 = net . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ( ( java . net . IDENT_5 ) ( java . net . IDENT_6 . METHOD_2 ( STRING_1 ) ) ) ) ; IDENT_7 = IDENT_7 . METHOD_4 ( 0 ) ; java . net . IDENT_6 i = IDENT_4 . set ( IDENT_7 ) . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { final byte [ ] IDENT_8 = new byte [ 4 ] ; IDENT_8 [ 0 ] = ( ( byte ) ( ( IDENT_9 ) > > > INT_0 ) ) ; IDENT_8 [ 1 ] = ( ( byte ) ( ( IDENT_9 ) > > > 16 ) ) ; IDENT_8 [ 2 ] = ( ( byte ) ( ( IDENT_9 ) > > > 8 ) ) ; IDENT_8 [ 3 ] = ( ( byte ) ( IDENT_9 ) ) ; try { return ( ( java . net . IDENT_5 ) ( java . net . IDENT_5 . METHOD_6 ( IDENT_8 ) ) ) ; } catch ( java . net . IDENT_10 e ) { e . printStackTrace ( ) ; return null ; } }
org . junit . Assert . assertEquals ( i , java . net . IDENT_6 . METHOD_2 ( STRING_1 ) ) 