METHOD_0 ( ) { java . lang . String key = STRING_0 ; net . IDENT_0 . utils . IDENT_1 < java . lang . String , java . lang . String > test = new net . IDENT_0 . utils . IDENT_1 < java . lang . String , java . lang . String > ( 1 , INT_0 , true ) ; test . put ( key , STRING_1 ) ; java . util . Iterator < java . lang . String > iterator = test . values ( ) . iterator ( ) ; while ( iterator . hasNext ( ) ) { iterator . next ( ) ; try { iterator . remove ( ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . IDENT_2 IDENT_3 ) { } } "<AssertPlaceHolder>" ; } size ( ) { return ( ( to ) - ( from ) ) + 1 ; }
org . junit . Assert . assertEquals ( 1 , test . size ( ) ) 