METHOD_0 ( ) { net . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new net . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; net . IDENT_0 . IDENT_1 . METHOD_1 IDENT_4 = new net . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; net . IDENT_0 . IDENT_1 . IDENT_5 IDENT_6 = null ; net . IDENT_0 . IDENT_1 . IDENT_5 IDENT_7 = null ; net . IDENT_0 . connection . IDENT_8 cc = null ; try { IDENT_6 = new net . IDENT_0 . IDENT_1 . METHOD_2 ( new net . IDENT_0 . IDENT_9 . METHOD_3 ( new net . IDENT_0 . IDENT_10 . METHOD_4 ( STRING_0 ) ) . METHOD_5 ( INT_0 ) . METHOD_6 ( INT_1 ) . start ( ) ) . storage ( IDENT_3 ) . start ( ) ; IDENT_7 = new net . IDENT_0 . IDENT_1 . METHOD_2 ( new net . IDENT_0 . IDENT_9 . METHOD_3 ( new net . IDENT_0 . IDENT_10 . METHOD_4 ( STRING_1 ) ) . METHOD_5 ( INT_0 ) . METHOD_6 ( INT_2 ) . start ( ) ) . storage ( IDENT_4 ) . start ( ) ; net . IDENT_0 . IDENT_1 . IDENT_11 IDENT_12 = IDENT_6 . METHOD_7 ( ) ; java . util . IDENT_13 < net . IDENT_0 . IDENT_10 . METHOD_4 , net . IDENT_0 . storage . IDENT_14 > IDENT_15 = new java . util . IDENT_16 < net . IDENT_0 . IDENT_10 . METHOD_4 , net . IDENT_0 . storage . IDENT_14 > ( ) ; byte [ ] IDENT_17 = new byte [ ] { 1 , 2 , 3 } ; byte [ ] IDENT_18 = new byte [ ] { 2 , 3 , 4 } ; IDENT_15 . put ( new net . IDENT_0 . IDENT_10 . METHOD_4 ( INT_3 ) , new net . IDENT_0 . storage . METHOD_8 ( IDENT_17 ) ) ; IDENT_15 . put ( new net . IDENT_0 . IDENT_10 . METHOD_4 ( INT_4 ) , new net . IDENT_0 . storage . METHOD_8 ( IDENT_18 ) ) ; net . IDENT_0 . IDENT_19 . IDENT_20 IDENT_21 = IDENT_7 . METHOD_9 ( ) . METHOD_10 ( ) . METHOD_11 ( ) . create ( 0 , 1 ) ; IDENT_21 . METHOD_12 ( ) ; cc = IDENT_21 . METHOD_13 ( ) ; net . IDENT_0 . IDENT_1 . IDENT_22 IDENT_23 = new net . IDENT_0 . IDENT_1 . METHOD_14 ( IDENT_7 , new net . IDENT_0 . IDENT_10 . METHOD_4 ( INT_5 ) ) ; IDENT_23 . METHOD_15 ( net . IDENT_0 . IDENT_10 . METHOD_4 . METHOD_16 ( "test" ) ) ; net . IDENT_0 . message . IDENT_24 IDENT_25 = new net . IDENT_0 . message . METHOD_17 ( new net . IDENT_0 . IDENT_10 . METHOD_4 ( INT_5 ) , net . IDENT_0 . IDENT_10 . METHOD_4 . METHOD_16 ( "test" ) , net . IDENT_0 . IDENT_10 . METHOD_4 . IDENT_26 , IDENT_15 ) ; IDENT_23 . METHOD_18 ( IDENT_15 ) ; IDENT_23 . METHOD_19 ( METHOD_4 . IDENT_26 ) ; net . IDENT_0 . IDENT_19 . IDENT_27 fr = IDENT_12 . put ( IDENT_7 . METHOD_20 ( ) , IDENT_23 , cc ) ; fr . METHOD_12 ( ) ; fr . METHOD_21 ( ) ; net . IDENT_0 . IDENT_1 . IDENT_28 IDENT_29 = new net . IDENT_0 . IDENT_1 . METHOD_22 ( IDENT_7 , new net . IDENT_0 . IDENT_10 . METHOD_4 ( INT_5 ) ) ; IDENT_29 . METHOD_15 ( net . IDENT_0 . IDENT_10 . METHOD_4 . METHOD_16 ( "test" ) ) ; IDENT_29 . METHOD_23 ( IDENT_15 . METHOD_24 ( ) ) ; IDENT_29 . METHOD_19 ( METHOD_4 . IDENT_26 ) ; fr = IDENT_12 . get ( IDENT_7 . METHOD_20 ( ) , IDENT_29 , cc ) ; fr . METHOD_12 ( ) ; "<AssertPlaceHolder>" ; System . err . println ( fr . METHOD_25 ( ) ) ; net . IDENT_0 . message . Message m = fr . METHOD_26 ( ) ; java . util . Map < net . IDENT_0 . IDENT_10 . IDENT_30 , net . IDENT_0 . storage . METHOD_8 > IDENT_31 = m . METHOD_27 ( 0 ) . METHOD_27 ( ) ; compare ( METHOD_27 . METHOD_27 ( ) , IDENT_31 ) ; fr . METHOD_28 ( ) ; System . err . println ( STRING_2 ) ; } finally { if ( cc != null ) { cc . METHOD_29 ( ) . METHOD_30 ( ) ; } if ( IDENT_6 != null ) { IDENT_6 . METHOD_29 ( ) . METHOD_31 ( ) ; } if ( IDENT_7 != null ) { IDENT_7 . METHOD_29 ( ) . METHOD_31 ( ) ; } } } METHOD_32 ( ) { if ( ! ( super . METHOD_32 ( ) ) ) { return false ; } return METHOD_33 ( result ( ) , IDENT_32 . size ( ) , IDENT_33 ) ; }
org . junit . Assert . assertEquals ( true , fr . METHOD_32 ( ) ) 