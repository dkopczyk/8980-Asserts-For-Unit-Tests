METHOD_0 ( ) { org . apache . jackrabbit . oak . spi . commit . IDENT_0 IDENT_1 = new org . apache . jackrabbit . oak . spi . commit . METHOD_1 ( new org . apache . jackrabbit . oak . plugins . index . METHOD_2 ( new org . apache . jackrabbit . oak . plugins . index . METHOD_3 ( new org . apache . jackrabbit . oak . plugins . index . property . METHOD_4 ( ) , new org . apache . jackrabbit . oak . plugins . index . reference . METHOD_5 ( ) ) ) ) ; org . apache . jackrabbit . oak . spi . state . IDENT_2 IDENT_3 = builder . METHOD_6 ( ) ; org . apache . jackrabbit . oak . plugins . index . IDENT_4 . METHOD_7 ( builder . child ( org . apache . jackrabbit . oak . plugins . index . IDENT_5 . IDENT_6 ) , STRING_0 , true , false , com . google . common . collect . IDENT_7 . of ( "foo" ) , null ) ; builder . child ( STRING_1 ) . setProperty ( "foo" , STRING_2 ) ; org . apache . jackrabbit . oak . spi . state . IDENT_2 IDENT_8 = builder . METHOD_6 ( ) ; org . apache . jackrabbit . oak . spi . state . IDENT_2 IDENT_9 = IDENT_1 . METHOD_8 ( IDENT_3 , IDENT_8 , IDENT_10 . IDENT_11 ) ; IDENT_3 = IDENT_9 ; builder = IDENT_3 . builder ( ) ; builder . METHOD_9 ( STRING_3 ) . METHOD_9 ( STRING_0 ) . setProperty ( org . apache . jackrabbit . oak . plugins . index . IDENT_5 . IDENT_12 , org . apache . jackrabbit . oak . plugins . index . IDENT_5 . IDENT_13 ) ; builder . METHOD_9 ( STRING_3 ) . METHOD_9 ( STRING_0 ) . setProperty ( org . apache . jackrabbit . oak . plugins . index . IDENT_5 . IDENT_14 , true ) ; IDENT_8 = builder . METHOD_6 ( ) ; org . apache . jackrabbit . oak . commons . junit . IDENT_15 IDENT_16 = org . apache . jackrabbit . oak . commons . junit . IDENT_15 . METHOD_10 ( org . apache . jackrabbit . oak . plugins . index . IDENT_17 . class . getName ( ) ) . filter ( IDENT_18 . IDENT_19 ) . create ( ) ; IDENT_16 . METHOD_11 ( ) ; IDENT_3 = IDENT_8 ; builder = IDENT_3 . builder ( ) ; builder . child ( STRING_4 ) . setProperty ( "foo" , STRING_2 ) ; IDENT_8 = builder . METHOD_6 ( ) ; IDENT_9 = IDENT_1 . METHOD_8 ( IDENT_3 , IDENT_8 , IDENT_10 . IDENT_11 ) ; "<AssertPlaceHolder>" ; IDENT_16 . METHOD_12 ( ) ; } METHOD_13 ( ) { if ( ( IDENT_20 ) == null ) { return STRING_5 ; } ch . IDENT_21 . IDENT_22 . IDENT_23 . IDENT_24 layout = org . apache . jackrabbit . oak . commons . junit . IDENT_25 . METHOD_14 ( ) ; java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; for ( int i = 0 ; i < ( IDENT_20 . METHOD_15 ( ) ) ; i ++ ) { sb . append ( layout . METHOD_16 ( IDENT_20 . get ( i ) ) ) ; } return sb . toString ( ) ; }
org . junit . Assert . assertTrue ( IDENT_16 . METHOD_13 ( ) . isEmpty ( ) ) 