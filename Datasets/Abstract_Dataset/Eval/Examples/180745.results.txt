METHOD_0 ( ) { for ( final int size : com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 ) { final com . IDENT_0 . IDENT_1 . tests . IDENT_6 . IDENT_7 IDENT_6 = METHOD_1 ( size ) ; final org . eclipse . core . IDENT_8 . IDENT_9 . list . IDENT_10 IDENT_11 = org . eclipse . core . IDENT_8 . IDENT_9 . list . IDENT_12 . METHOD_2 ( IDENT_13 . IDENT_14 . IDENT_15 ) ; IDENT_11 . add ( IDENT_6 ) ; final long IDENT_16 = java . lang . System . currentTimeMillis ( ) ; final org . eclipse . core . IDENT_8 . IDENT_9 . list . IDENT_10 IDENT_17 = ( ( org . eclipse . core . IDENT_8 . IDENT_9 . list . IDENT_10 ) ( factory . METHOD_3 ( IDENT_18 . get ( 0 ) ) ) ) ; "<AssertPlaceHolder>" ; final long IDENT_19 = java . lang . System . currentTimeMillis ( ) ; com . IDENT_0 . utils . logging . IDENT_20 . debug ( this , ( ( STRING_0 + ( IDENT_21 - IDENT_16 ) ) + STRING_1 ) ) ; com . IDENT_0 . utils . logging . IDENT_20 . debug ( this , ( ( STRING_2 + ( IDENT_22 - IDENT_21 ) ) + STRING_1 ) ) ; com . IDENT_0 . utils . logging . IDENT_20 . debug ( this , ( ( STRING_3 + ( IDENT_19 - IDENT_22 ) ) + STRING_1 ) ) ; } } get ( int ) { switch ( value ) { case com . IDENT_0 . IDENT_1 . IDENT_23 . IDENT_24 . IDENT_25 : return com . IDENT_0 . IDENT_1 . IDENT_23 . IDENT_24 . IDENT_26 ; case com . IDENT_0 . IDENT_1 . IDENT_23 . IDENT_24 . IDENT_27 : return com . IDENT_0 . IDENT_1 . IDENT_23 . IDENT_24 . IDENT_28 ; case com . IDENT_0 . IDENT_1 . IDENT_23 . IDENT_24 . IDENT_29 : return com . IDENT_0 . IDENT_1 . IDENT_23 . IDENT_24 . IDENT_30 ; case com . IDENT_0 . IDENT_1 . IDENT_23 . IDENT_24 . IDENT_31 : return com . IDENT_0 . IDENT_1 . IDENT_23 . IDENT_24 . IDENT_32 ; } return null ; }
org . junit . Assert . assertEquals ( size , IDENT_17 . size ( ) ) 