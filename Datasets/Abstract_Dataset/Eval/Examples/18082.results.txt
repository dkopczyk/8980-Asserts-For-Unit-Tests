METHOD_0 ( ) { java . util . concurrent . atomic . IDENT_0 METHOD_0 = new java . util . concurrent . atomic . METHOD_1 ( ) ; store = new org . apache . jackrabbit . oak . plugins . index . property . strategy . METHOD_2 ( org . apache . jackrabbit . oak . plugins . index . IDENT_1 . IDENT_2 , ( IDENT_3 ) -> METHOD_0 . set ( true ) ) ; IDENT_4 = "foo" ; org . apache . jackrabbit . oak . spi . state . IDENT_5 root = IDENT_6 ; IDENT_7 = root . builder ( ) ; com . google . common . base . IDENT_8 < org . apache . jackrabbit . oak . spi . state . IDENT_9 > index = METHOD_3 ( ( ) -> IDENT_7 . child ( IDENT_2 ) ) ; store . update ( index , STRING_0 , null , null , org . apache . jackrabbit . oak . plugins . index . property . strategy . IDENT_10 . IDENT_11 , METHOD_4 ( STRING_1 ) ) ; "<AssertPlaceHolder>" ; } get ( ) { return result ; }
org . junit . Assert . assertTrue ( METHOD_0 . get ( ) ) 