METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 doc = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . load ( new java . io . File ( org . IDENT_0 . IDENT_1 . input . IDENT_4 . IDENT_5 , STRING_0 ) ) ; "<AssertPlaceHolder>" ; org . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_7 renderer = new org . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_1 ( doc ) ; for ( int i = 0 ; i < ( doc . METHOD_2 ( ) ) ; ++ i ) { try { renderer . METHOD_3 ( i ) ; } catch ( java . io . IOException ex ) { if ( ( i == 3 ) && ( ex . getMessage ( ) . equals ( STRING_1 ) ) ) { continue ; } throw ex ; } } doc . close ( ) ; } METHOD_2 ( ) { return METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) ; }
org . junit . Assert . assertEquals ( 8 , doc . METHOD_2 ( ) ) 