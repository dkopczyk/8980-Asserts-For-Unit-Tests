METHOD_0 ( ) { org . apache . jackrabbit . oak . spi . commit . IDENT_0 IDENT_1 = new org . apache . jackrabbit . oak . spi . commit . METHOD_1 ( new org . apache . jackrabbit . oak . plugins . IDENT_2 . METHOD_2 ( ) ) ; org . apache . jackrabbit . oak . spi . state . IDENT_3 root = org . apache . jackrabbit . oak . IDENT_4 . IDENT_5 ; org . apache . jackrabbit . oak . spi . state . IDENT_6 builder = root . builder ( ) ; org . apache . jackrabbit . oak . spi . state . IDENT_3 IDENT_7 = builder . METHOD_3 ( ) ; builder . child ( STRING_0 ) . setProperty ( org . apache . jackrabbit . IDENT_8 . IDENT_9 , STRING_1 , Type . IDENT_10 ) ; builder . child ( STRING_0 ) . child ( STRING_2 ) . setProperty ( org . apache . jackrabbit . IDENT_8 . IDENT_9 , STRING_1 , Type . IDENT_10 ) ; org . apache . jackrabbit . oak . spi . state . IDENT_3 IDENT_11 = builder . METHOD_3 ( ) ; root = IDENT_1 . METHOD_4 ( IDENT_7 , IDENT_11 , IDENT_12 . IDENT_13 ) ; builder = root . builder ( ) ; IDENT_7 = builder . METHOD_3 ( ) ; builder . child ( STRING_0 ) . setProperty ( org . apache . jackrabbit . IDENT_8 . IDENT_9 , STRING_3 , Type . IDENT_10 ) ; try { IDENT_1 . METHOD_4 ( IDENT_7 , builder . METHOD_3 ( ) , IDENT_12 . IDENT_13 ) ; org . junit . Assert . fail ( STRING_4 ) ; } catch ( org . apache . jackrabbit . oak . api . IDENT_14 e ) { "<AssertPlaceHolder>" ; } } METHOD_5 ( ) { return METHOD_6 ( org . apache . jackrabbit . oak . api . IDENT_14 . IDENT_15 ) ; }
org . junit . Assert . assertTrue ( e . METHOD_5 ( ) ) 