METHOD_0 ( ) { org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 IDENT_3 = org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . METHOD_1 ( 1 , false , 1 , IDENT_4 . IDENT_5 , IDENT_6 . IDENT_7 , "" , 8 ) ; org . eclipse . IDENT_0 . IDENT_1 . core . event . IDENT_8 . IDENT_9 IDENT_10 = null ; java . lang . String IDENT_11 = "" ; org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_12 result = new org . eclipse . IDENT_0 . IDENT_1 . core . event . types . METHOD_2 ( IDENT_3 , IDENT_10 , IDENT_11 , 1 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( int , boolean , int , java . nio . IDENT_4 , org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_6 , java . lang . String , long ) { if ( ( ( ( IDENT_13 . equals ( IDENT_6 . IDENT_14 ) ) && ( IDENT_15 . equals ( "" ) ) ) && ( base == ( org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_16 ) ) ) && ( IDENT_17 != null ) ) { if ( IDENT_18 == ( org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_19 ) ) { switch ( len ) { case org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_20 : return IDENT_21 ? org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_22 : org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_23 ; case org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_24 : if ( ! IDENT_21 ) { if ( org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . METHOD_3 ( IDENT_17 ) ) { return org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_25 ; } return org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_26 ; } break ; case org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_27 : if ( IDENT_21 ) { if ( org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . METHOD_3 ( IDENT_17 ) ) { return org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_28 ; } return org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_29 ; } if ( org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . METHOD_3 ( IDENT_17 ) ) { return org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_30 ; } return org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_31 ; case org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_32 : if ( IDENT_21 ) { if ( org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . METHOD_3 ( IDENT_17 ) ) { return org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_33 ; } return org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_34 ; } if ( org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . METHOD_3 ( IDENT_17 ) ) { return org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_35 ; } return org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_36 ; default : } } else if ( IDENT_18 == 1 ) { switch ( len ) { case org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_37 : if ( ! IDENT_21 ) { if ( org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . METHOD_3 ( IDENT_17 ) ) { return org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_38 ; } return org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_39 ; } break ; case org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_40 : if ( ! IDENT_21 ) { if ( org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . METHOD_3 ( IDENT_17 ) ) { return org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_41 ; } return org . eclipse . IDENT_0 . IDENT_1 . core . event . types . IDENT_2 . IDENT_42 ; } break ; default : break ; } } } return new org . eclipse . IDENT_0 . IDENT_1 . core . event . types . METHOD_4 ( len , IDENT_21 , base , IDENT_17 , IDENT_13 , IDENT_15 , IDENT_18 ) ; }
org . junit . Assert . assertNotNull ( result ) 