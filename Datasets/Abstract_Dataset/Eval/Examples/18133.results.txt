METHOD_0 ( ) { org . apache . jackrabbit . oak . api . IDENT_0 info = new org . apache . jackrabbit . oak . spi . security . authentication . METHOD_1 ( STRING_0 , java . util . Collections . < java . lang . String , java . lang . Object > METHOD_2 ( ) , java . util . Collections . < java . security . IDENT_1 > METHOD_3 ( ) ) ; java . util . Set < org . apache . jackrabbit . oak . api . IDENT_0 > IDENT_2 = java . util . Collections . METHOD_4 ( info ) ; final javax . security . auth . IDENT_3 subject = new javax . security . auth . METHOD_5 ( false , java . util . Collections . METHOD_4 ( new org . apache . jackrabbit . oak . security . authentication . IDENT_4 . METHOD_6 ( ) ) , IDENT_2 , java . util . Collections . < java . lang . Object > METHOD_3 ( ) ) ; org . apache . jackrabbit . oak . api . IDENT_5 cs = javax . security . auth . METHOD_5 . METHOD_7 ( subject , new java . security . IDENT_6 < org . apache . jackrabbit . oak . api . IDENT_5 > ( ) { @ org . apache . jackrabbit . oak . security . authentication . Override public org . apache . jackrabbit . oak . api . IDENT_5 run ( ) { try { return METHOD_8 ( null ) ; } catch ( java . lang . Exception e ) { return null ; } } } , null ) ; try { "<AssertPlaceHolder>" ; } finally { if ( cs != null ) { cs . close ( ) ; } } } METHOD_9 ( ) { METHOD_10 ( ) ; return org . apache . jackrabbit . oak . spi . security . authentication . METHOD_1 . METHOD_11 ( IDENT_7 . METHOD_12 ( ) ) ; }
org . junit . Assert . assertSame ( info , cs . METHOD_9 ( ) ) 