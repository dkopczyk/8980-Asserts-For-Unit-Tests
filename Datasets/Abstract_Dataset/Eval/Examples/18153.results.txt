METHOD_0 ( ) { org . apache . jackrabbit . oak . IDENT_0 . IDENT_1 IDENT_2 = new org . apache . jackrabbit . oak . IDENT_0 . impl . METHOD_1 ( java . util . Collections . METHOD_2 ( STRING_0 , STRING_1 ) ) ; org . apache . jackrabbit . oak . IDENT_0 . IDENT_3 IDENT_4 = new org . apache . jackrabbit . oak . IDENT_0 . impl . METHOD_3 ( IDENT_2 ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_5 = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; IDENT_5 . put ( null , null ) ; IDENT_5 . put ( org . apache . jackrabbit . oak . security . authorization . IDENT_6 . IDENT_7 , org . apache . jackrabbit . oak . security . authorization . IDENT_6 . IDENT_7 ) ; IDENT_5 . put ( "/" , "/" ) ; IDENT_5 . put ( STRING_2 , STRING_2 ) ; IDENT_5 . put ( STRING_3 , STRING_2 ) ; for ( java . lang . String path : IDENT_5 . METHOD_4 ( ) ) { org . apache . jackrabbit . oak . spi . security . authorization . IDENT_6 . IDENT_8 IDENT_9 = METHOD_5 ( path , java . util . Collections . < org . apache . jackrabbit . oak . spi . security . authorization . IDENT_6 . IDENT_10 > emptyList ( ) , IDENT_4 ) ; "<AssertPlaceHolder>" ; } } get ( java . lang . String ) { if ( IDENT_11 == null ) { return com . google . common . collect . IDENT_12 . of ( ) ; } java . util . Set < java . security . IDENT_13 > IDENT_14 ; if ( ! ( IDENT_15 . containsKey ( IDENT_11 ) ) ) { java . lang . String [ ] IDENT_16 = IDENT_17 . get ( IDENT_11 ) ; if ( IDENT_16 == null ) { IDENT_14 = com . google . common . collect . IDENT_12 . of ( ) ; } else { com . google . common . collect . IDENT_12 . Builder < java . security . IDENT_13 > builder = com . google . common . collect . IDENT_12 . builder ( ) ; for ( java . lang . String IDENT_18 : IDENT_17 . get ( IDENT_11 ) ) { try { org . apache . jackrabbit . api . security . user . IDENT_19 IDENT_20 = IDENT_21 . METHOD_6 ( IDENT_18 ) ; if ( ( IDENT_20 != null ) && ( IDENT_20 . METHOD_7 ( ) ) ) { java . security . IDENT_13 IDENT_22 = IDENT_20 . METHOD_8 ( ) ; if ( org . apache . jackrabbit . oak . spi . security . IDENT_23 . IDENT_24 . METHOD_7 ( IDENT_22 ) ) { builder . add ( IDENT_22 ) ; } else { org . apache . jackrabbit . oak . spi . security . authentication . IDENT_25 . impl . IDENT_23 . IDENT_26 . log . warn ( STRING_4 , IDENT_18 ) ; } } else { org . apache . jackrabbit . oak . spi . security . authentication . IDENT_25 . impl . IDENT_23 . IDENT_26 . log . warn ( STRING_5 , IDENT_18 ) ; } } catch ( javax . jcr . IDENT_27 e ) { org . apache . jackrabbit . oak . spi . security . authentication . IDENT_25 . impl . IDENT_23 . IDENT_26 . log . debug ( STRING_6 , IDENT_18 , e ) ; } } IDENT_14 = builder . build ( ) ; } IDENT_15 . put ( IDENT_11 , IDENT_14 ) ; } else { IDENT_14 = IDENT_15 . get ( IDENT_11 ) ; } return IDENT_14 ; }
org . junit . Assert . assertEquals ( IDENT_5 . get ( path ) , IDENT_9 . getPath ( ) ) 