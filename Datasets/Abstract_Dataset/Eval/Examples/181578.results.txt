METHOD_0 ( ) { final net . IDENT_0 . auth . IDENT_1 module = new net . IDENT_0 . auth . METHOD_1 ( ) ; final javax . ws . rs . client . IDENT_2 IDENT_3 = mock ( javax . ws . rs . client . IDENT_2 . class ) ; module . METHOD_2 ( IDENT_3 ) ; final javax . security . auth . message . IDENT_4 IDENT_5 = mock ( javax . security . auth . message . IDENT_4 . class ) ; when ( IDENT_5 . METHOD_3 ( ) ) . thenReturn ( false ) ; final javax . security . auth . IDENT_6 . IDENT_7 IDENT_8 = mock ( javax . security . auth . IDENT_6 . IDENT_7 . class ) ; module . METHOD_4 ( IDENT_5 , null , IDENT_8 , options ) ; final javax . security . auth . message . IDENT_9 IDENT_10 = mock ( javax . security . auth . message . IDENT_9 . class ) ; final javax . servlet . http . IDENT_11 IDENT_12 = mock ( javax . servlet . http . IDENT_11 . class ) ; when ( IDENT_12 . METHOD_5 ( ) ) . thenReturn ( STRING_0 ) ; when ( IDENT_12 . METHOD_6 ( ) ) . thenReturn ( true ) ; when ( IDENT_12 . METHOD_7 ( ) ) . thenReturn ( STRING_1 ) ; when ( IDENT_10 . METHOD_8 ( ) ) . thenReturn ( IDENT_12 ) ; final javax . security . auth . IDENT_13 client = new javax . security . auth . METHOD_9 ( ) ; "<AssertPlaceHolder>" ; METHOD_10 ( IDENT_8 , IDENT_3 ) ; } METHOD_11 ( javax . security . auth . message . IDENT_9 , javax . security . auth . METHOD_9 , javax . security . auth . METHOD_9 ) { final javax . servlet . http . IDENT_11 req = ( ( javax . servlet . http . IDENT_11 ) ( IDENT_10 . METHOD_8 ( ) ) ) ; final javax . servlet . http . IDENT_14 IDENT_15 = ( ( javax . servlet . http . IDENT_14 ) ( IDENT_10 . METHOD_12 ( ) ) ) ; try { if ( ( ! ( IDENT_16 ) ) && ( ! ( req . METHOD_6 ( ) ) ) ) { return javax . security . auth . message . IDENT_17 . IDENT_18 ; } if ( ! ( req . METHOD_6 ( ) ) ) { IDENT_15 . METHOD_13 ( IDENT_19 . IDENT_20 , net . IDENT_0 . auth . IDENT_21 . IDENT_22 . getString ( STRING_2 ) ) ; return javax . security . auth . message . IDENT_17 . IDENT_23 ; } final java . lang . String IDENT_24 = req . METHOD_14 ( IDENT_25 ) ; if ( ( IDENT_24 == null ) && ( IDENT_16 ) ) { return javax . security . auth . message . IDENT_17 . IDENT_26 ; } else if ( ( IDENT_24 == null ) && ( ! ( IDENT_16 ) ) ) { return javax . security . auth . message . IDENT_17 . IDENT_18 ; } handler . METHOD_15 ( new javax . security . auth . IDENT_6 . IDENT_27 [ ] { new javax . security . auth . message . IDENT_6 . METHOD_16 ( client , IDENT_24 ) , new javax . security . auth . message . IDENT_6 . METHOD_17 ( client , METHOD_18 ( req ) ) } ) ; return javax . security . auth . message . IDENT_17 . IDENT_18 ; } catch ( java . io . IOException | javax . security . auth . IDENT_6 . IDENT_28 e ) { net . IDENT_0 . auth . IDENT_21 . LOG . METHOD_19 ( this . getClass ( ) . getName ( ) , STRING_3 , e ) ; throw new javax . security . auth . message . METHOD_20 ( e . getMessage ( ) ) ; } }
org . junit . Assert . assertEquals ( IDENT_17 . IDENT_18 , module . METHOD_11 ( IDENT_10 , client , null ) ) 