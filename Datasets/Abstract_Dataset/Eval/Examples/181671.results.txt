METHOD_0 ( ) { java . util . concurrent . atomic . IDENT_0 IDENT_1 = new java . util . concurrent . atomic . METHOD_1 ( false ) ; io . IDENT_2 . future . IDENT_3 . value ( 1 ) . METHOD_0 ( ( ) -> IDENT_1 . set ( true ) ) ; "<AssertPlaceHolder>" ; } get ( ) { final java . util . Optional < ? > [ ] ctx = io . IDENT_2 . future . IDENT_4 . IDENT_5 . get ( ) ; if ( ( ctx == null ) || ( ( ctx . length ) <= ( position ) ) ) return java . util . Optional . empty ( ) ; final java . util . Optional < ? > v = ctx [ position ] ; if ( v == null ) return java . util . Optional . empty ( ) ; else return ( ( java . util . Optional < T > ) ( v ) ) ; }
org . junit . Assert . assertTrue ( IDENT_1 . get ( ) ) 