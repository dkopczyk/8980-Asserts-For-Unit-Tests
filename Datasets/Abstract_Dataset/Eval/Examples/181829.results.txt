METHOD_0 ( ) { java . lang . String IDENT_0 = METHOD_1 ( ) ; com . IDENT_1 . client . model . IDENT_2 IDENT_3 = com . IDENT_1 . client . model . IDENT_2 . builder ( ) . database ( com . IDENT_1 . client . IDENT_4 . IDENT_5 ) . table ( STRING_0 ) . from ( new java . util . Date ( 0L ) ) . to ( new java . util . Date ( ( INT_0 * 1000 ) ) ) . METHOD_2 ( IDENT_6 . IDENT_7 ) . METHOD_3 ( STRING_1 ) . METHOD_4 ( STRING_2 ) . METHOD_5 ( STRING_3 ) . METHOD_6 ( STRING_4 ) . METHOD_7 ( METHOD_7 ) . build ( ) ; client . METHOD_8 ( com . IDENT_1 . client . IDENT_4 . IDENT_5 ) ; client . METHOD_9 ( com . IDENT_1 . client . IDENT_4 . IDENT_5 , STRING_0 ) ; java . lang . String IDENT_8 = client . METHOD_10 ( IDENT_3 ) ; try { client . METHOD_10 ( IDENT_3 ) ; org . junit . Assert . fail ( ( STRING_5 + ( com . IDENT_1 . client . IDENT_9 . class . getName ( ) ) ) ) ; } catch ( com . IDENT_1 . client . IDENT_9 e ) { "<AssertPlaceHolder>" ; } } METHOD_11 ( ) { return com . google . common . base . Optional . METHOD_12 ( IDENT_10 ) ; }
org . junit . Assert . assertThat ( e . METHOD_11 ( ) , org . hamcrest . Matchers . is ( com . google . common . base . Optional . of ( IDENT_8 ) ) ) 