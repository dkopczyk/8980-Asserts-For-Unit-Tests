METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 + ( ( ( ( ( ( ( ( ( ( ( STRING_1 + STRING_2 9 ) + STRING_0 4 ) + STRING_0 2 ) + STRING_2 ) + STRING_2 0 ) + STRING_3 ) + STRING_4 ) + STRING_0 3 ) + STRING_2 6 ) + STRING_2 8 ) + STRING_5 ) ; java . lang . String IDENT_1 = STRING_2 2 ; java . lang . String IDENT_2 = STRING_2 5 ; java . lang . String IDENT_3 = STRING_2 3 ; java . util . List < java . lang . String > IDENT_4 = java . util . Arrays . asList ( STRING_6 , STRING_7 ) ; java . lang . String IDENT_5 = STRING_0 1 ; java . lang . String IDENT_6 = STRING_8 ; java . util . List < com . IDENT_7 . vo . IDENT_8 > IDENT_9 = java . util . Arrays . asList ( new com . IDENT_7 . vo . METHOD_1 ( STRING_0 0 , null , null ) , new com . IDENT_7 . vo . METHOD_1 ( STRING_2 1 , null , null ) ) ; java . util . List < java . lang . String > IDENT_10 = java . util . Arrays . asList ( STRING_2 7 , STRING_9 ) ; java . lang . String IDENT_11 = STRING_2 4 ; com . IDENT_7 . vo . IDENT_12 IDENT_13 = new com . IDENT_7 . vo . METHOD_2 ( IDENT_1 , IDENT_11 , IDENT_3 , IDENT_2 , IDENT_5 , IDENT_6 , IDENT_4 , IDENT_9 ) ; IDENT_13 . METHOD_3 ( IDENT_10 ) ; java . lang . String IDENT_14 = IDENT_15 . METHOD_4 ( IDENT_13 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( com . IDENT_7 . vo . METHOD_2 ) { return METHOD_4 ( java . util . Collections . singletonList ( IDENT_13 ) ) ; }
org . junit . Assert . assertThat ( IDENT_14 , org . hamcrest . core . Is . is ( IDENT_0 ) ) 