METHOD_0 ( ) { java . lang . String IDENT_0 = METHOD_1 ( ) ; when ( IDENT_1 . METHOD_2 ( ) ) . thenReturn ( STRING_0 ) ; java . util . List < com . IDENT_2 . vo . IDENT_3 > IDENT_4 = IDENT_5 . METHOD_3 ( IDENT_0 , "" , null ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , java . lang . String , java . util . List ) { java . lang . String IDENT_6 = IDENT_0 . replace ( STRING_1 , STRING_2 ) ; IDENT_7 . ast . IDENT_8 IDENT_9 = METHOD_4 ( IDENT_6 ) ; IDENT_7 . ast . IDENT_10 feature = IDENT_9 . METHOD_5 ( ) ; java . lang . String IDENT_11 = ( ( feature . METHOD_6 ( ) ) + STRING_3 ) + ( feature . getName ( ) ) ; java . lang . String IDENT_12 = feature . METHOD_7 ( ) ; java . lang . String IDENT_13 = feature . METHOD_8 ( ) ; java . util . List < java . lang . String > IDENT_14 = IDENT_15 . METHOD_9 ( feature . METHOD_10 ( ) ) ; java . util . ArrayList < com . IDENT_2 . vo . IDENT_3 > IDENT_16 = new java . util . ArrayList ( ) ; java . util . List < com . IDENT_2 . vo . IDENT_17 > IDENT_18 = new java . util . ArrayList ( ) ; java . util . List < IDENT_7 . ast . IDENT_19 > IDENT_20 = feature . METHOD_11 ( ) ; for ( IDENT_7 . ast . IDENT_19 IDENT_21 : IDENT_20 ) { java . lang . String IDENT_22 = ( ( IDENT_21 . METHOD_6 ( ) ) + STRING_3 ) + ( IDENT_21 . getName ( ) ) ; java . lang . String IDENT_23 = IDENT_21 . METHOD_8 ( ) ; if ( IDENT_21 instanceof IDENT_7 . ast . IDENT_24 ) { IDENT_7 . ast . IDENT_24 IDENT_25 = ( ( IDENT_7 . ast . IDENT_24 ) ( IDENT_21 ) ) ; IDENT_18 = IDENT_15 . METHOD_12 ( IDENT_25 . METHOD_13 ( ) ) ; continue ; } if ( IDENT_21 instanceof IDENT_7 . ast . IDENT_26 ) { IDENT_7 . ast . IDENT_26 IDENT_27 = ( ( IDENT_7 . ast . IDENT_26 ) ( IDENT_21 ) ) ; if ( ( ( IDENT_28 == null ) || ( IDENT_28 . isEmpty ( ) ) ) || ( IDENT_28 . contains ( IDENT_27 . METHOD_14 ( ) . METHOD_15 ( ) ) ) ) { com . IDENT_2 . vo . IDENT_3 IDENT_29 = new com . IDENT_2 . vo . METHOD_16 ( IDENT_11 , IDENT_30 , IDENT_12 , IDENT_13 , IDENT_22 , IDENT_23 , IDENT_14 , IDENT_18 ) ; METHOD_17 ( IDENT_27 , IDENT_29 ) ; if ( METHOD_18 ( IDENT_29 . METHOD_19 ( ) , IDENT_29 . METHOD_20 ( ) ) ) { IDENT_16 . add ( IDENT_29 ) ; } } continue ; } if ( IDENT_21 instanceof IDENT_7 . ast . IDENT_31 ) { IDENT_7 . ast . IDENT_31 IDENT_32 = ( ( IDENT_7 . ast . IDENT_31 ) ( IDENT_21 ) ) ; if ( ( ( IDENT_28 == null ) || ( IDENT_28 . isEmpty ( ) ) ) || ( IDENT_28 . contains ( IDENT_32 . METHOD_14 ( ) . METHOD_15 ( ) ) ) ) { java . util . List < com . IDENT_2 . vo . METHOD_16 > IDENT_33 = METHOD_21 ( IDENT_32 , IDENT_11 , IDENT_30 , IDENT_12 , IDENT_13 , IDENT_14 , IDENT_18 ) ; for ( com . IDENT_2 . vo . METHOD_16 IDENT_29 : IDENT_33 ) { if ( METHOD_18 ( IDENT_29 . METHOD_19 ( ) , IDENT_29 . METHOD_20 ( ) , IDENT_29 . METHOD_22 ( ) ) ) { IDENT_16 . add ( IDENT_29 ) ; } } } } } return IDENT_16 ; }
org . junit . Assert . assertThat ( IDENT_4 . size ( ) , org . hamcrest . core . Is . is ( 2 ) ) 