METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; com . IDENT_1 . IDENT_2 . beans . IDENT_3 . IDENT_4 IDENT_5 = new com . IDENT_1 . IDENT_2 . beans . IDENT_3 . METHOD_1 ( ) ; IDENT_5 . METHOD_2 ( STRING_1 ) ; IDENT_5 . METHOD_3 ( "name" ) ; IDENT_5 . METHOD_4 ( STRING_2 ) ; java . util . List < java . lang . String > IDENT_6 = new java . util . ArrayList ( ) ; IDENT_6 . add ( STRING_1 ) ; com . IDENT_1 . IDENT_2 . beans . IDENT_3 . METHOD_1 IDENT_7 = com . IDENT_1 . util . IDENT_8 . METHOD_5 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . String ) { if ( org . apache . commons . lang3 . StringUtils . isEmpty ( IDENT_9 ) ) return null ; com . IDENT_1 . IDENT_2 . beans . IDENT_3 . METHOD_1 IDENT_10 = new com . IDENT_1 . IDENT_2 . beans . IDENT_3 . METHOD_1 ( ) ; java . lang . String [ ] IDENT_11 = IDENT_9 . split ( STRING_3 ) ; if ( ( IDENT_11 . length ) == 3 ) { IDENT_10 . METHOD_2 ( IDENT_11 [ 0 ] ) ; IDENT_10 . METHOD_3 ( IDENT_11 [ 1 ] ) ; IDENT_10 . METHOD_4 ( IDENT_11 [ 2 ] ) ; } else if ( ( IDENT_11 . length ) == 2 ) { IDENT_10 . METHOD_2 ( IDENT_11 [ 0 ] ) ; IDENT_10 . METHOD_3 ( IDENT_11 [ 1 ] ) ; } else { return null ; } return IDENT_10 ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_7 ) 