METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 graph = com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 . METHOD_1 ( ) ; it . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 IDENT_11 = new it . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . METHOD_2 ( new long [ ] { IDENT_12 , IDENT_13 , IDENT_14 , IDENT_15 , IDENT_16 , IDENT_17 , IDENT_18 , IDENT_19 , IDENT_20 , IDENT_21 , IDENT_22 , IDENT_23 , IDENT_24 , IDENT_25 } , new double [ ] { 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 } ) ; it . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_26 IDENT_27 = new it . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . METHOD_3 ( new long [ ] { IDENT_28 , IDENT_29 , IDENT_30 , IDENT_31 , IDENT_32 , IDENT_33 , IDENT_34 , IDENT_35 , IDENT_36 , IDENT_37 , IDENT_38 , IDENT_39 , IDENT_40 } ) ; byte [ ] IDENT_41 = new byte [ ] { com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_42 . IDENT_43 } ; com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_44 . IDENT_45 IDENT_46 = new com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_44 . METHOD_4 ( IDENT_27 , IDENT_11 , IDENT_41 ) ; com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_44 . HashMap < java . lang . Long , com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_44 . IDENT_47 > results = new com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_44 . HashMap ( ) ; new com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_44 . METHOD_5 ( graph ) . METHOD_6 ( IDENT_46 , new com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_44 . METHOD_7 ( 0 ) ) . METHOD_8 ( ) . METHOD_9 ( ( IDENT_48 ) -> results . put ( ( ( com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_44 . IDENT_47 ) ( IDENT_48 ) ) . METHOD_10 ( ) , ( ( com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_44 . IDENT_47 ) ( IDENT_48 ) ) ) ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_49 ; }
org . junit . Assert . assertEquals ( 0 , results . size ( ) ) 