METHOD_0 ( ) { java . lang . String [ ] values = net . IDENT_0 . IDENT_1 . METHOD_1 ( null , STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , char ) { if ( ( value == null ) || ( value . isEmpty ( ) ) ) { return net . IDENT_0 . IDENT_1 . IDENT_2 ; } int count = net . IDENT_0 . IDENT_1 . METHOD_2 ( value , IDENT_3 ) ; if ( count == 0 ) { return net . IDENT_0 . IDENT_1 . IDENT_2 ; } java . lang . String [ ] values = new java . lang . String [ count ] ; int start = 0 ; int index = 0 ; char IDENT_4 = IDENT_3 ; for ( int i = 0 ; i < ( value . length ( ) ) ; i ++ ) { char c = value . charAt ( i ) ; if ( ( c != IDENT_3 ) && ( IDENT_4 == IDENT_3 ) ) { start = i ; } else if ( ( c == IDENT_3 ) && ( IDENT_4 != IDENT_3 ) ) { values [ ( index ++ ) ] = value . substring ( start , i ) ; } IDENT_4 = c ; } if ( index == ( count - 1 ) ) { values [ ( index ++ ) ] = value . substring ( start ) ; } return values ; }
org . junit . Assert . assertEquals ( 0 , values . length ) 