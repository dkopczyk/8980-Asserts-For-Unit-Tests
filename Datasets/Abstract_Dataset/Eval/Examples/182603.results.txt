METHOD_0 ( ) { IDENT_0 = new net . IDENT_1 . client . METHOD_1 ( proxy . METHOD_2 ( ) , listener , 1 ) ; IDENT_0 . connect ( STRING_0 , false ) ; verify ( listener , METHOD_3 ( INT_0 ) ) . METHOD_4 ( IDENT_0 , IDENT_2 . IDENT_3 ) ; IDENT_4 = new net . IDENT_1 . client . METHOD_1 ( proxy . METHOD_2 ( ) , listener , 1 ) ; IDENT_4 . connect ( STRING_0 , false ) ; verify ( listener , METHOD_3 ( INT_0 ) ) . METHOD_4 ( IDENT_4 , IDENT_2 . IDENT_3 ) ; IDENT_5 = new net . IDENT_1 . client . METHOD_1 ( IDENT_6 . METHOD_5 ( ) , listener , 1 ) ; IDENT_5 . connect ( STRING_1 , false ) ; verify ( listener , METHOD_3 ( INT_0 ) ) . METHOD_4 ( IDENT_5 , IDENT_2 . IDENT_3 ) ; IDENT_5 . METHOD_6 ( new net . IDENT_1 . client . IDENT_7 [ ] { new net . IDENT_1 . client . METHOD_7 ( STRING_2 , net . IDENT_1 . message . IDENT_8 . IDENT_9 ) } ) ; verify ( listener , METHOD_3 ( INT_0 ) ) . METHOD_8 ( METHOD_9 ( IDENT_5 ) , any ( net . IDENT_1 . client . METHOD_7 [ ] . class ) , any ( net . IDENT_1 . client . METHOD_7 [ ] . class ) , eq ( true ) ) ; for ( int i = 0 ; i < 10 ; i ++ ) { METHOD_10 ( listener , handler ) ; net . IDENT_1 . client . IDENT_10 IDENT_11 = new net . IDENT_1 . client . METHOD_11 ( STRING_2 , net . IDENT_1 . message . IDENT_8 . IDENT_9 , new byte [ ] { 1 , 2 , 3 } ) ; net . IDENT_1 . client . IDENT_12 client = ( ( i OP_0 2 ) == 0 ) ? IDENT_0 : IDENT_4 ; client . METHOD_12 ( IDENT_11 ) ; verify ( handler , METHOD_3 ( INT_0 ) ) . METHOD_12 ( any ( net . IDENT_1 . IDENT_13 . IDENT_14 . class ) , ( ( net . IDENT_1 . message . IDENT_15 ) ( IDENT_16 . METHOD_13 ( ) ) ) ) ; net . IDENT_1 . message . IDENT_15 IDENT_17 = ( ( net . IDENT_1 . message . IDENT_15 ) ( IDENT_16 . getValue ( ) ) ) ; verify ( listener , METHOD_3 ( INT_0 ) ) . METHOD_14 ( METHOD_9 ( IDENT_5 ) , IDENT_18 . METHOD_13 ( ) ) ; net . IDENT_1 . client . METHOD_11 IDENT_19 = IDENT_18 . getValue ( ) ; IDENT_19 . METHOD_15 ( ) ; verify ( handler , METHOD_3 ( INT_0 ) ) . METHOD_16 ( any ( net . IDENT_1 . IDENT_13 . IDENT_14 . class ) , ( ( net . IDENT_1 . message . IDENT_20 ) ( IDENT_16 . METHOD_13 ( ) ) ) ) ; net . IDENT_1 . message . IDENT_20 IDENT_21 = ( ( net . IDENT_1 . message . IDENT_20 ) ( IDENT_16 . getValue ( ) ) ) ; "<AssertPlaceHolder>" ; verify ( listener ) . METHOD_17 ( METHOD_9 ( client ) , METHOD_9 ( IDENT_11 ) ) ; } } METHOD_18 ( ) { return ( METHOD_19 ( ) ) == 0 ? 0 : ( buffer . METHOD_20 ( ( ( METHOD_21 ( ) ) - 2 ) ) ) & INT_1 ; }
org . junit . Assert . assertEquals ( IDENT_17 . METHOD_18 ( ) , IDENT_21 . METHOD_18 ( ) ) 