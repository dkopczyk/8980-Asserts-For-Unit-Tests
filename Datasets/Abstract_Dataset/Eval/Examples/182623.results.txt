METHOD_0 ( ) { net . IDENT_0 . message . IDENT_1 message = new net . IDENT_0 . message . METHOD_1 ( net . IDENT_0 . message . IDENT_2 . IDENT_3 , false , STRING_0 , 7 , new byte [ ] { INT_0 , INT_1 , INT_2 } ) ; IDENT_4 . METHOD_2 ( STRING_0 , IDENT_2 . IDENT_3 ) ; IDENT_4 . METHOD_3 ( message , IDENT_5 ) ; METHOD_4 ( channel ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { try { java . lang . reflect . Field field = net . IDENT_0 . IDENT_6 . IDENT_7 . class . METHOD_6 ( STRING_1 ) ; field . METHOD_7 ( true ) ; @ net . IDENT_0 . IDENT_6 . METHOD_8 ( STRING_2 ) java . util . IDENT_8 < net . IDENT_0 . message . METHOD_1 > IDENT_9 = ( ( java . util . IDENT_8 < net . IDENT_0 . message . METHOD_1 > ) ( field . get ( IDENT_4 ) ) ) ; return IDENT_9 . size ( ) ; } catch ( java . lang . Exception ex ) { throw new java . lang . RuntimeException ( ex ) ; } }
org . junit . Assert . assertEquals ( 1 , METHOD_5 ( ) ) 