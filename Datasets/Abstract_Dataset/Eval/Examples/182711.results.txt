METHOD_0 ( ) { org . glassfish . IDENT_0 . server . IDENT_1 server = METHOD_1 ( org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_4 . class ) ; try { final java . util . concurrent . IDENT_5 IDENT_6 = new java . util . concurrent . METHOD_2 ( 1 ) ; final javax . IDENT_7 . IDENT_8 IDENT_9 = IDENT_8 . Builder . create ( ) . METHOD_3 ( java . util . Arrays . asList ( STRING_0 , STRING_1 , STRING_2 ) ) . build ( ) ; javax . IDENT_7 . IDENT_10 . METHOD_4 ( ) . METHOD_5 ( new javax . IDENT_7 . METHOD_6 ( ) { @ org . glassfish . IDENT_0 . test . IDENT_2 . Override public void METHOD_7 ( final javax . IDENT_7 . IDENT_11 session , javax . IDENT_7 . IDENT_12 config ) { session . METHOD_8 ( new javax . IDENT_7 . IDENT_13 . IDENT_14 < java . lang . String > ( ) { @ java . lang . Override public void METHOD_9 ( java . lang . String message ) { if ( ( message . equals ( STRING_1 ) ) && ( session . METHOD_10 ( ) . equals ( STRING_1 ) ) ) { IDENT_6 . METHOD_11 ( ) ; } } } ) ; } } , IDENT_9 , METHOD_12 ( org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . METHOD_6 . class ) ) ; IDENT_6 . METHOD_13 ( 1 , TimeUnit . IDENT_15 ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; throw new java . lang . RuntimeException ( e . getMessage ( ) , e ) ; } finally { METHOD_14 ( server ) ; } } METHOD_15 ( ) { return count ; }
org . junit . Assert . assertEquals ( 0 , IDENT_6 . METHOD_15 ( ) ) 