METHOD_0 ( ) { int IDENT_0 = 6 ; double [ ] [ ] IDENT_1 = new double [ ] [ ] { new double [ ] { FLOAT_0 , FLOAT_1 , FLOAT_2 , FLOAT_3 , FLOAT_4 , FLOAT_5 } , new double [ ] { FLOAT_6 , FLOAT_7 , FLOAT_8 , FLOAT_9 , FLOAT_10 , FLOAT_11 } , new double [ ] { FLOAT_12 , FLOAT_13 , FLOAT_14 , FLOAT_15 , FLOAT_16 , FLOAT_17 } , new double [ ] { FLOAT_18 , FLOAT_19 , FLOAT_20 , FLOAT_21 , FLOAT_22 , FLOAT_23 } , new double [ ] { FLOAT_24 , FLOAT_25 , FLOAT_26 , FLOAT_27 , FLOAT_28 , FLOAT_29 } , new double [ ] { FLOAT_30 , FLOAT_31 , FLOAT_32 , FLOAT_33 , FLOAT_34 , FLOAT_35 } , new double [ ] { FLOAT_36 , FLOAT_37 , FLOAT_38 , FLOAT_39 , FLOAT_40 , FLOAT_41 } , new double [ ] { FLOAT_42 , FLOAT_43 , FLOAT_44 , FLOAT_45 , FLOAT_46 , FLOAT_47 } , new double [ ] { FLOAT_48 , FLOAT_49 , FLOAT_50 , FLOAT_51 , FLOAT_52 , FLOAT_53 } } ; ch . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 < java . lang . Object > IDENT_6 = ch . IDENT_2 . IDENT_3 . IDENT_4 . test . IDENT_7 . METHOD_1 ( IDENT_0 ) ; java . lang . Object IDENT_8 = new java . lang . Object ( ) ; for ( int i = 0 ; i < ( IDENT_1 . length ) ; i ++ ) { long [ ] buf = new long [ IDENT_0 ] ; for ( int j = 0 ; j < IDENT_0 ; j ++ ) { buf [ j ] = org . IDENT_9 . index . IDENT_10 . IDENT_11 . METHOD_2 ( IDENT_1 [ i ] [ j ] ) ; } "<AssertPlaceHolder>" ; } } put ( long , IDENT_8 ) { try { IDENT_12 . METHOD_3 ( ) ; org . IDENT_9 . index . IDENT_10 . IDENT_13 < IDENT_8 > IDENT_14 = this . info . METHOD_4 ( ) ; IDENT_8 ret = METHOD_5 ( key , val , IDENT_14 ) ; this . info = IDENT_14 ; return ret ; } finally { IDENT_12 . METHOD_6 ( ) ; } }
org . junit . Assert . assertNull ( IDENT_6 . put ( buf , IDENT_8 ) ) 