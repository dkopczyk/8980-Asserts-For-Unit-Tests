METHOD_0 ( ) { if ( ( ( METHOD_1 ( ) ) || ( METHOD_2 ( ) ) ) || ( METHOD_3 ( ) ) ) { return ; } final com . IDENT_0 . model . test . IDENT_1 IDENT_2 = new com . IDENT_0 . model . test . METHOD_4 ( ) ; IDENT_2 . setId ( 1 ) ; final java . util . Map < java . lang . String , java . lang . Object > IDENT_3 = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; IDENT_3 . put ( STRING_0 , IDENT_2 ) ; final java . lang . String query = STRING_1 + STRING_2 ; final java . util . List < com . IDENT_0 . model . test . IDENT_4 > IDENT_5 = IDENT_6 . METHOD_5 ( query , com . IDENT_0 . model . test . IDENT_4 . class , IDENT_3 ) ; "<AssertPlaceHolder>" ; final com . IDENT_0 . IDENT_7 . IDENT_8 < com . IDENT_0 . model . test . IDENT_4 > IDENT_9 = METHOD_6 ( com . IDENT_0 . model . test . IDENT_4 . class ) ; final com . IDENT_0 . IDENT_7 . IDENT_8 < com . IDENT_0 . model . test . IDENT_10 > IDENT_11 = IDENT_9 . METHOD_7 ( STRING_3 , com . IDENT_0 . model . test . IDENT_10 . class ) ; METHOD_7 . METHOD_8 ( IDENT_2 , STRING_4 ) ; IDENT_9 . METHOD_9 ( STRING_3 , METHOD_7 ) ; METHOD_10 ( IDENT_5 , IDENT_9 . METHOD_11 ( ) ) ; } METHOD_5 ( java . lang . String , java . lang . Class , java . util . Map ) { final javax . persistence . IDENT_12 < T > IDENT_13 = IDENT_14 . METHOD_12 ( query , IDENT_15 ) ; METHOD_13 ( IDENT_13 , parameters ) ; return IDENT_13 . METHOD_11 ( ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_5 . size ( ) ) > 0 ) ) 