METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . String > headers = new java . util . HashMap < java . lang . String , java . lang . String > ( ) { { put ( "foo" , "bar" ) ; } } ; io . netty . buffer . IDENT_0 IDENT_1 = serializer . METHOD_1 ( headers ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_2 = serializer . METHOD_2 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; IDENT_1 . METHOD_3 ( ) ; } METHOD_2 ( io . netty . buffer . IDENT_0 ) { int IDENT_3 = buffer . METHOD_4 ( ) ; java . util . Map < java . lang . String , java . lang . String > headers = com . google . common . collect . IDENT_4 . METHOD_5 ( IDENT_3 ) ; for ( int i = 0 ; i < IDENT_3 ; i ++ ) { java . lang . String key = com . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_6 ( buffer ) ; java . lang . String value = com . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_6 ( buffer ) ; headers . put ( key , value ) ; } return headers ; }
org . junit . Assert . assertEquals ( headers , IDENT_2 ) 