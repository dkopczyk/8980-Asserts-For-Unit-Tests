METHOD_0 ( ) { METHOD_1 ( eu . IDENT_0 . concurrent . IDENT_1 . e ) . when ( IDENT_2 ) . get ( ) ; doReturn ( future ) . when ( IDENT_3 ) . METHOD_2 ( eu . IDENT_0 . concurrent . IDENT_1 . e ) ; "<AssertPlaceHolder>" ; verify ( IDENT_3 ) . METHOD_2 ( eu . IDENT_0 . concurrent . IDENT_1 . e ) ; } METHOD_3 ( java . util . function . IDENT_4 , java . util . function . IDENT_5 ) { try { return this . METHOD_4 ( IDENT_2 . get ( ) ) ; } catch ( java . lang . Exception e ) { return METHOD_2 ( e ) ; } }
org . junit . Assert . assertEquals ( future , IDENT_3 . METHOD_3 ( consumer , IDENT_2 ) ) 