METHOD_0 ( ) { for ( java . lang . String name : com . google . common . collect . IDENT_0 . METHOD_1 ( org . apache . jackrabbit . oak . security . user . IDENT_1 , org . apache . jackrabbit . oak . security . user . IDENT_2 ) ) { java . lang . String path = STRING_0 + name ; for ( java . lang . String IDENT_3 : IDENT_4 ) { org . apache . jackrabbit . oak . api . IDENT_5 t = org . apache . jackrabbit . oak . security . user . IDENT_6 . METHOD_2 ( STRING_1 , IDENT_3 ) ; org . apache . jackrabbit . oak . plugins . tree . IDENT_7 location = org . mockito . Mockito . mock ( org . apache . jackrabbit . oak . plugins . tree . IDENT_7 . class ) ; when ( location . METHOD_3 ( ) ) . thenReturn ( t ) ; when ( location . exists ( ) ) . thenReturn ( false ) ; when ( location . getPath ( ) ) . thenReturn ( path ) ; "<AssertPlaceHolder>" ; } } } METHOD_4 ( org . apache . jackrabbit . oak . plugins . tree . IDENT_7 ) { if ( ( IDENT_8 ) == null ) { return IDENT_9 . METHOD_4 ( location ) ; } for ( org . apache . jackrabbit . oak . spi . security . Context ctx : IDENT_8 ) { if ( ctx . METHOD_4 ( location ) ) { return true ; } } return false ; }
org . junit . Assert . assertTrue ( ctx . METHOD_4 ( location ) ) 