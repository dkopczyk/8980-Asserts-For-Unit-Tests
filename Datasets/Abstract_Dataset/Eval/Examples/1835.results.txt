METHOD_0 ( ) { new de . IDENT_0 . IDENT_1 . IDENT_2 . db . IDENT_3 . IDENT_4 . METHOD_1 ( IDENT_5 . METHOD_2 ( ) ) . METHOD_3 ( ) ; java . util . List < de . IDENT_0 . IDENT_1 . IDENT_2 . db . IDENT_6 > IDENT_7 = IDENT_5 . METHOD_4 ( ) . METHOD_5 ( de . IDENT_0 . IDENT_1 . IDENT_2 . db . IDENT_6 . class ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . Class ) { final javax . persistence . Entity IDENT_8 = clazz . METHOD_6 ( javax . persistence . Entity . class ) ; if ( IDENT_8 == null ) { throw new java . lang . IllegalArgumentException ( ( STRING_0 + ( clazz . getName ( ) ) ) ) ; } return METHOD_7 ( new java . lang . IDENT_9 < java . util . List < T > > ( ) { @ de . IDENT_0 . IDENT_1 . IDENT_2 . db . transaction . Override @ de . IDENT_0 . IDENT_1 . IDENT_2 . db . transaction . METHOD_8 ( STRING_1 ) public java . util . List < T > run ( final javax . persistence . IDENT_10 IDENT_11 ) { final java . lang . String IDENT_12 = ( IDENT_8 . name ( ) . isEmpty ( ) ) ? clazz . METHOD_9 ( ) : IDENT_8 . name ( ) ; final java . lang . String IDENT_13 = IDENT_12 . toLowerCase ( ) ; return IDENT_11 . METHOD_10 ( ( ( ( ( ( STRING_2 + IDENT_13 ) + STRING_3 ) + IDENT_12 ) + " " ) + IDENT_13 ) ) . METHOD_11 ( ) ; } } ) ; }
org . junit . Assert . assertEquals ( 1 , METHOD_5 . size ( ) ) 