METHOD_0 ( ) { try { javax . jcr . IDENT_0 s = METHOD_1 ( ) ; java . lang . StringBuilder IDENT_1 = new java . lang . StringBuilder ( ) ; for ( int i = 0 ; i < 100 ; i ++ ) { IDENT_1 . append ( STRING_0 ) ; } java . lang . String IDENT_2 = STRING_1 + ( IDENT_1 . toString ( ) ) ; javax . jcr . Node n = s . METHOD_2 ( ) . METHOD_3 ( IDENT_2 ) ; s . save ( ) ; javax . jcr . IDENT_0 IDENT_3 = METHOD_4 ( ) ; javax . jcr . Node IDENT_4 = IDENT_3 . METHOD_2 ( ) . METHOD_5 ( IDENT_2 ) ; "<AssertPlaceHolder>" ; IDENT_3 . METHOD_6 ( ) ; } catch ( javax . jcr . IDENT_5 . IDENT_6 ex ) { } } getPath ( ) { if ( ( path ) == null ) { path = METHOD_7 ( parent . getPath ( ) , name ) ; } return path ; }
org . junit . Assert . assertEquals ( n . getPath ( ) , IDENT_4 . getPath ( ) ) 