METHOD_0 ( ) { java . util . List < javax . IDENT_0 . IDENT_1 < javax . IDENT_0 . IDENT_2 . IDENT_3 > > times = new java . util . ArrayList ( METHOD_1 ( ) ) ; times . add ( IDENT_4 . create ( INT_0 , IDENT_5 . IDENT_6 ) ) ; java . util . List < javax . IDENT_0 . IDENT_1 < javax . IDENT_0 . IDENT_2 . IDENT_3 > > list = times . stream ( ) . filter ( IDENT_7 . IDENT_8 . IDENT_9 . function . IDENT_10 . METHOD_2 ( ) ) . collect ( java . util . stream . IDENT_11 . toList ( ) ) ; "<AssertPlaceHolder>" ; } create ( java . lang . IDENT_12 , javax . IDENT_0 . IDENT_13 ) { return IDENT_7 . IDENT_8 . IDENT_9 . IDENT_2 . IDENT_14 . METHOD_3 ( value , unit ) ; }
org . junit . Assert . assertEquals ( java . lang . Integer . valueOf ( 5 ) , java . lang . Integer . valueOf ( list . size ( ) ) ) 