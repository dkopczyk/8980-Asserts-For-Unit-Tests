METHOD_0 ( ) { javax . IDENT_0 . IDENT_1 < javax . IDENT_0 . IDENT_2 . IDENT_3 > value = IDENT_4 . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_7 . METHOD_1 ( new java . lang . METHOD_2 ( 10 ) , IDENT_8 . IDENT_9 ) ; javax . IDENT_0 . IDENT_1 < javax . IDENT_0 . IDENT_2 . IDENT_3 > IDENT_10 = IDENT_4 . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_7 . METHOD_1 ( new java . lang . METHOD_2 ( FLOAT_0 ) , IDENT_8 . IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . IDENT_11 , javax . IDENT_0 . IDENT_12 ) { java . util . IDENT_13 . METHOD_3 ( value ) ; java . util . IDENT_13 . METHOD_3 ( unit ) ; if ( IDENT_4 . IDENT_5 . IDENT_6 . IDENT_2 . Double . class . METHOD_4 ( value ) ) { return new IDENT_4 . IDENT_5 . IDENT_6 . IDENT_2 . METHOD_5 ( IDENT_4 . IDENT_5 . IDENT_6 . IDENT_2 . Double . class . METHOD_6 ( value ) , unit ) ; } else if ( java . math . BigDecimal . class . METHOD_4 ( value ) ) { return new IDENT_4 . IDENT_5 . IDENT_6 . IDENT_2 . METHOD_7 ( java . math . BigDecimal . class . METHOD_6 ( value ) , unit ) ; } else if ( java . math . BigInteger . class . METHOD_4 ( value ) ) { return new IDENT_4 . IDENT_5 . IDENT_6 . IDENT_2 . METHOD_7 ( new java . math . BigDecimal ( java . math . BigInteger . class . METHOD_6 ( value ) ) , unit ) ; } return new IDENT_4 . IDENT_5 . IDENT_6 . IDENT_2 . METHOD_8 ( value , unit ) ; }
org . junit . Assert . assertEquals ( value , IDENT_10 ) 