METHOD_0 ( ) { com . IDENT_0 . api . client . IDENT_1 IDENT_2 = new com . IDENT_0 . api . client . IDENT_1 < com . IDENT_0 . api . IDENT_3 . model . IDENT_4 > ( ) { @ com . IDENT_0 . api . IDENT_3 . Override public com . IDENT_0 . api . IDENT_3 . model . IDENT_4 parse ( java . lang . String response ) throws java . io . IOException { return com . IDENT_0 . api . IDENT_3 . IDENT_5 . mapper . METHOD_1 ( response , com . IDENT_0 . api . IDENT_3 . model . IDENT_4 . class ) ; } } ; java . lang . String IDENT_6 = STRING_0 + ( ( ( ( ( ( ( ( STRING_1 + STRING_2 ) + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) + STRING_9 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { return new com . IDENT_0 . api . client . IDENT_1 < com . IDENT_0 . api . IDENT_7 . model . IDENT_8 > ( ) { @ com . IDENT_0 . api . IDENT_7 . Override public com . IDENT_0 . api . IDENT_7 . model . IDENT_8 parse ( java . lang . String response ) throws java . io . IOException { return com . IDENT_0 . api . IDENT_7 . parse . IDENT_9 . getInstance ( ) . METHOD_1 ( response , com . IDENT_0 . api . IDENT_7 . model . IDENT_8 . class ) ; } } ; }
org . junit . Assert . assertEquals ( request . METHOD_2 ( ) . parse ( IDENT_6 ) , IDENT_2 . parse ( IDENT_6 ) ) 