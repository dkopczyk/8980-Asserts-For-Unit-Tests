METHOD_0 ( ) { IDENT_0 . IDENT_1 IDENT_2 = new IDENT_0 . METHOD_1 ( ) ; java . lang . String IDENT_3 = STRING_0 ; java . lang . String IDENT_4 = STRING_1 ; "<AssertPlaceHolder>" ; } contains ( java . lang . String , java . lang . String ) { boolean result = false ; char [ ] IDENT_5 = IDENT_6 . METHOD_2 ( ) ; char [ ] IDENT_7 = IDENT_8 . METHOD_2 ( ) ; for ( int i = 0 ; i < ( ( IDENT_5 . length ) - ( IDENT_7 . length ) ) ; i ++ ) { if ( ( IDENT_5 [ i ] ) == ( IDENT_7 [ 0 ] ) ) { int count = 0 ; for ( int j = 0 ; j < ( IDENT_7 . length ) ; j ++ ) { if ( ( IDENT_5 [ ( i + j ) ] ) == ( IDENT_7 [ j ] ) ) { count ++ ; } } if ( count == ( IDENT_7 . length ) ) { result = true ; } } } return result ; }
org . junit . Assert . assertThat ( IDENT_2 . contains ( IDENT_3 , IDENT_4 ) , org . hamcrest . core . Is . is ( false ) ) 