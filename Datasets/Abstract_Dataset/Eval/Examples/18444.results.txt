METHOD_0 ( ) { org . apache . jackrabbit . oak . spi . state . IDENT_0 IDENT_1 = METHOD_1 ( builder , "test" , of ( "foo" ) , STRING_0 ) ; IDENT_1 . setProperty ( IDENT_2 . IDENT_3 , true ) ; IDENT_1 = org . apache . jackrabbit . oak . plugins . index . lucene . IDENT_4 . METHOD_2 ( IDENT_1 . METHOD_3 ( ) . builder ( ) ) ; org . apache . jackrabbit . oak . spi . state . IDENT_0 IDENT_5 = org . apache . jackrabbit . oak . plugins . index . lucene . IDENT_6 . METHOD_4 ( IDENT_1 , STRING_1 ) ; IDENT_5 . setProperty ( IDENT_2 . IDENT_7 , true ) ; org . apache . jackrabbit . oak . plugins . index . lucene . IDENT_8 node = METHOD_5 ( new org . apache . jackrabbit . oak . plugins . index . lucene . METHOD_6 ( root , IDENT_1 . METHOD_3 ( ) , STRING_2 ) ) ; org . apache . jackrabbit . oak . query . index . IDENT_9 filter = METHOD_7 ( STRING_3 ) ; filter . METHOD_8 ( org . apache . jackrabbit . oak . spi . query . IDENT_10 . IDENT_11 . parse ( STRING_4 , STRING_5 ) ) ; org . apache . jackrabbit . oak . plugins . index . search . spi . query . IDENT_12 IDENT_13 = new org . apache . jackrabbit . oak . plugins . index . search . spi . query . METHOD_9 ( node , STRING_2 , filter , java . util . Collections . < org . apache . jackrabbit . oak . spi . query . IDENT_14 . IDENT_15 > emptyList ( ) ) ; org . apache . jackrabbit . oak . spi . query . IDENT_14 . IDENT_16 plan = IDENT_13 . METHOD_10 ( ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( ) { if ( ( IDENT_17 ) == null ) { org . apache . jackrabbit . oak . plugins . index . search . spi . query . METHOD_9 . log . debug ( STRING_6 , IDENT_18 ) ; return null ; } org . apache . jackrabbit . oak . plugins . index . search . spi . query . IDENT_16 . Builder builder = METHOD_11 ( ) ; if ( IDENT_17 . METHOD_12 ( ) ) { if ( builder == null ) { if ( METHOD_13 ( ) ) { return null ; } java . lang . String msg = java . lang . String . format ( ( STRING_7 + STRING_8 ) , filter , IDENT_17 ) ; throw new java . lang . IllegalStateException ( msg ) ; } else { builder . METHOD_14 ( 1 ) . METHOD_15 ( FLOAT_0 ) . METHOD_16 ( FLOAT_0 ) ; } } return builder != null ? builder . build ( ) : null ; }
org . junit . Assert . assertNull ( plan ) 