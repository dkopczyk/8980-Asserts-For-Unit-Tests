METHOD_0 ( ) { org . apache . jackrabbit . oak . plugins . index . lucene . util . IDENT_0 IDENT_1 = new org . apache . jackrabbit . oak . plugins . index . lucene . util . METHOD_1 ( ) ; IDENT_1 . METHOD_2 ( STRING_0 ) . property ( "foo" ) . METHOD_3 ( ) ; org . apache . jackrabbit . oak . plugins . index . lucene . IDENT_2 IDENT_3 = new org . apache . jackrabbit . oak . plugins . index . lucene . METHOD_4 ( root , IDENT_1 . build ( ) , STRING_1 ) ; org . apache . jackrabbit . oak . plugins . index . lucene . IDENT_4 node = METHOD_5 ( IDENT_3 ) ; org . apache . jackrabbit . oak . query . index . IDENT_5 filter = METHOD_6 ( STRING_0 ) ; filter . METHOD_7 ( STRING_2 , IDENT_6 . IDENT_7 , org . apache . jackrabbit . oak . plugins . IDENT_8 . IDENT_9 . METHOD_8 ( STRING_3 ) ) ; org . apache . jackrabbit . oak . plugins . index . search . spi . query . IDENT_10 IDENT_11 = new org . apache . jackrabbit . oak . plugins . index . search . spi . query . METHOD_9 ( node , STRING_1 , filter , java . util . Collections . < org . apache . jackrabbit . oak . spi . query . IDENT_12 . IDENT_13 > emptyList ( ) ) ; org . apache . jackrabbit . oak . spi . query . IDENT_12 . IDENT_14 plan = IDENT_11 . METHOD_10 ( ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( ) { if ( ( IDENT_15 ) == null ) { org . apache . jackrabbit . oak . plugins . index . search . spi . query . METHOD_9 . log . debug ( STRING_4 , IDENT_16 ) ; return null ; } org . apache . jackrabbit . oak . plugins . index . search . spi . query . IDENT_14 . Builder builder = METHOD_11 ( ) ; if ( IDENT_15 . METHOD_12 ( ) ) { if ( builder == null ) { if ( METHOD_13 ( ) ) { return null ; } java . lang . String msg = java . lang . String . format ( ( STRING_5 + STRING_6 ) , filter , IDENT_15 ) ; throw new java . lang . IllegalStateException ( msg ) ; } else { builder . METHOD_14 ( 1 ) . METHOD_15 ( FLOAT_0 ) . METHOD_16 ( FLOAT_0 ) ; } } return builder != null ? builder . build ( ) : null ; }
org . junit . Assert . assertNull ( plan ) 