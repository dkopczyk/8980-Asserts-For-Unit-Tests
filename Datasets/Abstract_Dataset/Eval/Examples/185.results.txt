METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . route . IDENT_2 IDENT_3 = new com . IDENT_0 . IDENT_1 . route . METHOD_1 ( ) ; IDENT_3 . METHOD_2 ( com . IDENT_0 . IDENT_1 . route . IDENT_4 . IDENT_5 . class , new com . IDENT_0 . IDENT_1 . route . IDENT_4 . METHOD_3 ( ) ) ; IDENT_3 . add ( IDENT_6 . IDENT_7 , STRING_0 , new com . IDENT_0 . IDENT_1 . route . IDENT_4 . METHOD_4 ( STRING_1 ) , null ) ; IDENT_3 . add ( IDENT_6 . IDENT_8 , STRING_0 , new com . IDENT_0 . IDENT_1 . route . IDENT_4 . METHOD_4 ( STRING_2 ) , STRING_3 ) ; java . lang . String expected = STRING_4 + STRING_5 ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { java . util . Set < java . lang . String > IDENT_9 = new java . util . HashSet < java . lang . String > ( ) ; for ( java . util . Map < java . lang . String , com . IDENT_0 . IDENT_1 . route . IDENT_10 > IDENT_11 : IDENT_12 . values ( ) ) { IDENT_9 . addAll ( IDENT_11 . METHOD_6 ( ) ) ; } java . util . List < java . lang . String > IDENT_13 = list ( IDENT_9 ) ; java . util . Collections . METHOD_7 ( IDENT_13 ) ; java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; for ( java . lang . String route : IDENT_13 ) { for ( com . IDENT_0 . IDENT_1 . route . IDENT_6 method : com . IDENT_0 . IDENT_1 . route . IDENT_6 . METHOD_8 ( ) ) { java . util . Map < java . lang . String , com . IDENT_0 . IDENT_1 . route . IDENT_10 > IDENT_14 = IDENT_12 . get ( method ) ; if ( IDENT_14 . containsKey ( route ) ) { com . IDENT_0 . IDENT_1 . route . IDENT_10 IDENT_15 = IDENT_14 . get ( route ) ; com . IDENT_0 . IDENT_1 . route . IDENT_16 action = this . IDENT_17 . get ( IDENT_15 ) ; sb . append ( java . lang . String . format ( com . IDENT_0 . IDENT_1 . route . METHOD_1 . IDENT_18 , IDENT_15 , action ) ) ; } } } return sb . toString ( ) ; }
org . junit . Assert . assertThat ( IDENT_3 . METHOD_5 ( ) , is ( expected ) ) 