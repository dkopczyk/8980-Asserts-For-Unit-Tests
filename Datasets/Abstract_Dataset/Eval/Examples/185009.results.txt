METHOD_0 ( ) { java . sql . IDENT_0 conn = IDENT_1 . METHOD_1 ( ) ; java . sql . IDENT_2 statement = conn . METHOD_2 ( ) ; if ( ( com . vaadin . IDENT_3 . data . util . IDENT_4 . IDENT_5 . db ) == ( com . vaadin . IDENT_3 . data . util . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 ) ) { statement . METHOD_3 ( STRING_0 ) ; statement . METHOD_3 ( STRING_1 ) ; } else { statement . METHOD_3 ( STRING_2 ) ; statement . METHOD_3 ( STRING_3 ) ; } statement . close ( ) ; conn . commit ( ) ; IDENT_1 . METHOD_4 ( conn ) ; com . vaadin . IDENT_3 . data . util . IDENT_4 . query . IDENT_8 query = new com . vaadin . IDENT_3 . data . util . IDENT_4 . query . METHOD_5 ( STRING_4 , java . util . Arrays . asList ( STRING_5 ) , IDENT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( ) { com . vaadin . IDENT_3 . data . util . IDENT_4 . query . IDENT_9 . METHOD_7 ( ) . log ( IDENT_10 . IDENT_11 , STRING_6 ) ; com . vaadin . IDENT_3 . data . util . IDENT_4 . query . generator . IDENT_12 IDENT_13 = IDENT_14 . METHOD_8 ( METHOD_9 ( ) , filters , null , 0 , 0 , STRING_7 ) ; boolean IDENT_15 = false ; if ( ! ( METHOD_10 ( ) ) ) { IDENT_15 = true ; METHOD_11 ( ) ; } java . sql . ResultSet r = null ; int count = - 1 ; try { r = METHOD_12 ( IDENT_13 ) ; r . next ( ) ; count = r . METHOD_13 ( 1 ) ; } finally { try { if ( r != null ) { METHOD_4 ( null , r . METHOD_14 ( ) , r ) ; } } finally { if ( IDENT_15 ) { commit ( ) ; } } } return count ; }
org . junit . Assert . assertEquals ( 6 , query . METHOD_6 ( ) ) 