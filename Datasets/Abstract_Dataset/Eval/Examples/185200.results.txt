METHOD_0 ( ) { java . util . List < java . lang . Class < ? extends com . vaadin . ui . IDENT_0 > > IDENT_1 = com . vaadin . tests . IDENT_2 . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; IDENT_1 . remove ( com . vaadin . ui . IDENT_3 . class ) ; METHOD_0 ( new com . vaadin . ui . METHOD_2 ( STRING_0 ) ) ; for ( java . lang . Class < ? extends com . vaadin . ui . IDENT_0 > clazz : IDENT_1 ) { if ( java . lang . reflect . IDENT_4 . METHOD_3 ( clazz . METHOD_4 ( ) ) ) { continue ; } try { java . lang . reflect . IDENT_5 < ? extends com . vaadin . ui . IDENT_0 > IDENT_6 = clazz . METHOD_5 ( ) ; IDENT_6 . METHOD_6 ( true ) ; METHOD_0 ( IDENT_6 . newInstance ( ) ) ; } catch ( java . lang . IDENT_7 IDENT_8 ) { } } } isEmpty ( ) { return ( size ( ) ) == 0 ; }
org . junit . Assert . assertFalse ( IDENT_1 . isEmpty ( ) ) 