METHOD_0 ( ) { final com . IDENT_0 . IDENT_1 . IDENT_2 [ ] IDENT_3 = IDENT_4 . IDENT_5 . METHOD_1 ( ( - 1 ) , 1 , 4 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( int , int , int ) { if ( ( IDENT_6 < 0 ) || ( IDENT_7 < 0 ) ) { return com . IDENT_0 . IDENT_1 . IDENT_8 . IDENT_9 ; } if ( length < 1 ) { return com . IDENT_0 . IDENT_1 . IDENT_8 . IDENT_9 ; } if ( IDENT_7 >= ( IDENT_10 . length ) ) { return com . IDENT_0 . IDENT_1 . IDENT_8 . IDENT_9 ; } if ( IDENT_6 >= ( IDENT_10 [ 0 ] . length ) ) { return com . IDENT_0 . IDENT_1 . IDENT_8 . IDENT_9 ; } final int IDENT_11 = ( ( IDENT_7 + length ) >= ( IDENT_10 . length ) ) ? IDENT_10 . length : IDENT_7 + length ; final com . IDENT_0 . IDENT_1 . IDENT_2 [ ] IDENT_12 = METHOD_2 ( IDENT_6 ) ; final com . IDENT_0 . IDENT_1 . IDENT_2 [ ] IDENT_13 = new com . IDENT_0 . IDENT_1 . IDENT_2 [ IDENT_11 ] ; java . lang . System . METHOD_3 ( IDENT_12 , IDENT_7 , IDENT_13 , 0 , ( IDENT_11 - IDENT_7 ) ) ; return IDENT_13 ; }
org . junit . Assert . assertEquals ( IDENT_3 . length , 0 ) 