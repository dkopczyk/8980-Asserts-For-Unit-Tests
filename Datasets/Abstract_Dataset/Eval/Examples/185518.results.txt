METHOD_0 ( ) { com . github . IDENT_0 . IDENT_1 . IDENT_2 . List < com . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 > entities = com . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_4 . METHOD_1 ( STRING_0 , INT_0 ) ; IDENT_5 . METHOD_2 ( entities ) ; IDENT_5 . METHOD_3 ( com . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . class ) ; com . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 IDENT_8 = new com . github . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_4 ( new com . github . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_5 ( ) ) ; IDENT_8 . METHOD_6 ( org . springframework . data . domain . IDENT_9 . of ( 0 , 10 ) ) ; org . springframework . data . domain . IDENT_10 < com . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 > IDENT_11 = IDENT_5 . METHOD_7 ( 1000 , IDENT_8 , com . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . class ) ; java . lang . String IDENT_12 = ( ( org . springframework . data . elasticsearch . core . IDENT_13 ) ( IDENT_11 ) ) . METHOD_8 ( ) ; com . github . IDENT_0 . IDENT_1 . IDENT_2 . List < com . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 > IDENT_14 = new com . github . IDENT_0 . IDENT_1 . IDENT_2 . ArrayList ( ) ; while ( IDENT_11 . METHOD_9 ( ) ) { IDENT_14 . addAll ( IDENT_11 . METHOD_10 ( ) ) ; IDENT_12 = ( ( org . springframework . data . elasticsearch . core . IDENT_13 ) ( IDENT_11 ) ) . METHOD_8 ( ) ; IDENT_11 = IDENT_5 . METHOD_11 ( IDENT_12 , 1000 , com . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . class ) ; } IDENT_5 . METHOD_12 ( IDENT_12 ) ; "<AssertPlaceHolder>" ; } METHOD_12 ( java . lang . String ) { execute ( new com . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_15 . Builder ( ) . METHOD_13 ( IDENT_12 ) . build ( ) , true ) ; }
org . junit . Assert . assertThat ( IDENT_14 . size ( ) , is ( equalTo ( INT_0 ) ) ) 