METHOD_0 ( ) { int [ ] a = new int [ ] { 3 , 1 , 5 , 2 , 7 , 6 , 0 , 10 } ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; int max = IDENT_4 . METHOD_2 ( a ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( int [ ] ) { int min = a [ 0 ] ; int max = a [ 0 ] ; int IDENT_5 = Integer . IDENT_6 ; int i = 1 ; while ( i < ( a . length ) ) { min = java . lang . Math . min ( a [ i ] , min ) ; max = ( min == ( a [ i ] ) ) ? max : java . lang . Math . max ( a [ i ] , max ) ; IDENT_5 = java . lang . Math . max ( IDENT_5 , ( max - min ) ) ; i ++ ; } return IDENT_5 ; }
org . junit . Assert . assertEquals ( max , 10 ) 