METHOD_0 ( ) { org . IDENT_0 . IDENT_1 IDENT_2 = org . IDENT_0 . IDENT_3 . METHOD_1 ( org . IDENT_0 . IDENT_4 . IDENT_5 ) ; org . IDENT_0 . IDENT_1 IDENT_6 = org . IDENT_0 . IDENT_3 . METHOD_2 ( org . IDENT_0 . IDENT_4 . IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String [ ] ) { if ( IDENT_8 == null ) throw new java . lang . IllegalArgumentException ( STRING_0 ) ; int [ ] IDENT_9 = new int [ ] { 0 , 0 , 0 } ; for ( int IDENT_10 = 0 ; ( IDENT_10 < ( IDENT_9 . length ) ) && ( IDENT_10 < ( IDENT_8 . length ) ) ; IDENT_10 ++ ) { try { IDENT_9 [ IDENT_10 ] = java . lang . Integer . METHOD_3 ( IDENT_8 [ IDENT_10 ] ) ; } catch ( java . lang . IDENT_11 IDENT_12 ) { throw new java . lang . IllegalArgumentException ( java . lang . String . format ( STRING_1 , IDENT_8 [ IDENT_10 ] ) , IDENT_12 ) ; } } return org . IDENT_0 . IDENT_3 . METHOD_4 ( IDENT_9 ) ; }
org . junit . Assert . assertEquals ( IDENT_2 , IDENT_6 ) 