METHOD_0 ( ) { io . vertx . core . IDENT_0 < java . lang . String > IDENT_1 = io . vertx . core . IDENT_0 . future ( ) ; try { io . IDENT_2 . IDENT_3 IDENT_4 = io . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_0 ) ; io . IDENT_2 . plugins . IDENT_5 . METHOD_2 ( ( IDENT_6 ) -> IDENT_4 ) ; io . IDENT_2 . IDENT_3 < java . lang . String > IDENT_7 = io . vertx . IDENT_2 . impl . IDENT_8 . METHOD_3 ( IDENT_1 :: IDENT_9 ) ; "<AssertPlaceHolder>" ; } finally { io . IDENT_2 . plugins . IDENT_5 . METHOD_4 ( ) ; } } METHOD_3 ( java . util . function . IDENT_10 ) { return io . IDENT_2 . plugins . IDENT_5 . METHOD_5 ( new io . vertx . IDENT_2 . impl . IDENT_8 < T > ( IDENT_11 ) ) ; }
org . junit . Assert . assertSame ( IDENT_7 , IDENT_4 ) 