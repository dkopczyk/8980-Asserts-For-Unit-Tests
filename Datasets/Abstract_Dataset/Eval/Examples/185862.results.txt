METHOD_0 ( ) { io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_2 resolver = METHOD_1 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { if ( io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_2 . IDENT_3 . matcher ( IDENT_4 ) . matches ( ) ) throw new io . vertx . ext . web . api . IDENT_0 . METHOD_3 ( STRING_1 , METHOD_3 . IDENT_5 . IDENT_6 ) ; java . util . regex . IDENT_7 IDENT_8 = io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_2 . IDENT_9 . matcher ( IDENT_4 ) ; if ( ( ! ( parameters . isEmpty ( ) ) ) && ( IDENT_8 . find ( ) ) ) { java . lang . StringBuilder regex = new java . lang . StringBuilder ( ) ; int IDENT_10 = 0 ; boolean IDENT_11 = ( IDENT_4 . charAt ( ( ( IDENT_4 . length ( ) ) - 1 ) ) ) == STRING_2 ; IDENT_8 . METHOD_4 ( ) ; int i = 0 ; while ( IDENT_8 . find ( ) ) { java . lang . String IDENT_12 = IDENT_4 . substring ( IDENT_10 , IDENT_8 . start ( ) ) ; if ( ( IDENT_12 . length ( ) ) != 0 ) regex . append ( java . util . regex . IDENT_13 . METHOD_5 ( IDENT_12 ) ) ; IDENT_10 = IDENT_8 . end ( ) ; java . lang . String IDENT_14 = IDENT_8 . group ( 1 ) ; io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . Optional < io . IDENT_15 . IDENT_16 . IDENT_17 . models . parameters . IDENT_18 > IDENT_19 = parameters . stream ( ) . filter ( ( p ) -> p . getName ( ) . equals ( IDENT_14 ) ) . METHOD_6 ( ) ; if ( IDENT_19 . METHOD_7 ( ) ) { io . IDENT_15 . IDENT_16 . IDENT_17 . models . parameters . IDENT_18 parameter = IDENT_19 . get ( ) ; java . lang . String IDENT_20 = METHOD_8 ( parameter ) ; boolean IDENT_21 = METHOD_9 ( parameter ) ; boolean IDENT_22 = io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_23 . METHOD_10 ( parameter ) ; boolean IDENT_24 = io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_23 . METHOD_11 ( parameter ) ; java . lang . String IDENT_25 = STRING_3 + i ; if ( IDENT_20 . equals ( STRING_4 ) ) { regex . append ( io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_26 . create ( ) . METHOD_12 ( IDENT_25 , io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_26 . create ( ) . METHOD_13 ( STRING_3 0 , STRING_3 5 , STRING_3 3 , STRING_5 , STRING_6 2 , STRING_6 1 , STRING_7 , STRING_8 , STRING_3 6 , STRING_3 7 , STRING_6 3 , STRING_3 8 , STRING_3 4 , STRING_6 , STRING_3 9 , ( IDENT_27 ? STRING_9 : null ) ) . METHOD_14 ( ) ) . METHOD_15 ( ) ) ; IDENT_28 . put ( IDENT_25 , IDENT_14 ) ; } else if ( IDENT_20 . equals ( STRING_10 ) ) { if ( IDENT_22 && IDENT_21 ) { io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . Map < java . lang . String , io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_23 . IDENT_29 > properties = io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_23 . METHOD_16 ( parameter . METHOD_17 ( ) ) ; for ( Map . Entry < java . lang . String , io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_23 . IDENT_29 > entry : properties . entrySet ( ) ) { IDENT_25 = STRING_3 + i ; regex . append ( io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_26 . create ( ) . METHOD_18 ( io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_26 . create ( ) . METHOD_19 ( STRING_9 ) . METHOD_15 ( ) . METHOD_5 ( entry . getKey ( ) ) . append ( STRING_6 0 ) . METHOD_12 ( IDENT_25 , io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_26 . create ( ) . METHOD_13 ( STRING_3 0 , STRING_3 5 , STRING_3 3 , STRING_5 , STRING_6 2 , STRING_6 1 , STRING_7 , STRING_8 , STRING_3 6 , STRING_3 7 , STRING_6 3 , STRING_3 8 , STRING_3 4 , STRING_6 , STRING_3 9 , STRING_9 , STRING_6 0 ) . METHOD_14 ( ) ) ) ) ; IDENT_28 . put ( IDENT_25 , entry . getKey ( ) ) ; i ++ ; } } else { regex . append ( io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_26 . create ( ) . METHOD_19 ( STRING_9 ) . METHOD_15 ( ) . METHOD_12 ( IDENT_25 , io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_26 . create ( ) . METHOD_13 ( STRING_3 0 , STRING_3 5 , STRING_3 3 , STRING_5 , STRING_6 2 , STRING_6 1 , STRING_7 , STRING_8 , STRING_6 0 , STRING_3 6 , STRING_3 7 , STRING_6 4 , STRING_6 3 , STRING_3 8 , STRING_3 4 , STRING_6 , STRING_3 9 ) . METHOD_14 ( ) ) . METHOD_15 ( ) ) ; IDENT_28 . put ( IDENT_25 , IDENT_14 ) ; } } else if ( IDENT_20 . equals ( STRING_3 2 ) ) { if ( IDENT_22 && IDENT_21 ) { io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . Map < java . lang . String , io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_23 . IDENT_29 > properties = io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_23 . METHOD_16 ( parameter . METHOD_17 ( ) ) ; for ( Map . Entry < java . lang . String , io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_23 . IDENT_29 > entry : properties . entrySet ( ) ) { IDENT_25 = STRING_3 + i ; regex . append ( io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_26 . create ( ) . METHOD_18 ( io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_26 . create ( ) . METHOD_19 ( STRING_6 1 ) . METHOD_5 ( entry . getKey ( ) ) . append ( STRING_6 0 ) . METHOD_12 ( IDENT_25 , io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_26 . create ( ) . METHOD_13 ( STRING_3 0 , STRING_3 5 , STRING_3 3 , STRING_5 , STRING_6 2 , STRING_6 1 , STRING_7 , STRING_8 , STRING_6 0 , STRING_3 6 , STRING_3 7 , STRING_6 4 , STRING_6 3 , STRING_3 8 , STRING_3 4 , STRING_6 , STRING_3 9 , ( IDENT_27 ? STRING_9 : null ) ) . METHOD_14 ( ) ) ) ) ; IDENT_28 . put ( IDENT_25 , entry . getKey ( ) ) ; i ++ ; } } else if ( IDENT_24 && IDENT_21 ) { regex . append ( io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_26 . create ( ) . METHOD_12 ( IDENT_25 , io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_26 . create ( ) . METHOD_20 ( io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_26 . create ( ) . append ( STRING_6 1 ) . METHOD_5 ( IDENT_14 ) . append ( STRING_6 0 ) . METHOD_13 ( STRING_3 0 , STRING_3 5 , STRING_3 3 , STRING_5 , STRING_6 2 , STRING_6 1 , STRING_7 , STRING_8 , STRING_6 0 , STRING_3 6 , STRING_3 7 , STRING_6 4 , STRING_6 3 , STRING_3 8 , STRING_3 4 , STRING_6 , STRING_3 9 , ( IDENT_27 ? STRING_9 : null ) ) . METHOD_14 ( ) ) . METHOD_21 ( ) ) ) ; IDENT_28 . put ( IDENT_25 , IDENT_14 ) ; } else { regex . append ( io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_26 . create ( ) . append ( STRING_6 1 ) . METHOD_5 ( IDENT_14 ) . append ( STRING_6 0 ) . METHOD_12 ( IDENT_25 , io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . IDENT_26 . create ( ) . METHOD_13 ( STRING_3 0 , STRING_3 5 , STRING_3 3 , STRING_5 , STRING_6 2 , STRING_6 1 , STRING_7 , STRING_8 , STRING_6 0 , STRING_3 6 , STRING_3 7 , STRING_6 3 , STRING_3 8 , STRING_3 4 , STRING_6 , STRING_3 9 , ( IDENT_27 ? STRING_9 : null ) ) . METHOD_14 ( ) ) . METHOD_15 ( ) ) ; IDENT_28 . put ( IDENT_25 , IDENT_14 ) ; } } } else { throw io . vertx . ext . web . api . IDENT_0 . METHOD_3 . METHOD_22 ( ( STRING_11 + IDENT_14 ) ) ; } i ++ ; } java . lang . String IDENT_30 = IDENT_4 . substring ( IDENT_10 , ( IDENT_11 ? ( IDENT_4 . length ( ) ) - 1 : IDENT_4 . length ( ) ) ) ; if ( ( IDENT_30 . length ( ) ) != 0 ) regex . append ( java . util . regex . IDENT_13 . METHOD_5 ( IDENT_30 ) ) ; if ( IDENT_11 ) regex . append ( STRING_3 1 ) ; return io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . Optional . of ( java . util . regex . IDENT_13 . METHOD_23 ( regex . toString ( ) ) ) ; } else { return io . vertx . ext . web . api . IDENT_0 . IDENT_1 . impl . Optional . empty ( ) ; } }
org . junit . Assert . assertFalse ( resolver . METHOD_2 ( ) . METHOD_7 ( ) ) 