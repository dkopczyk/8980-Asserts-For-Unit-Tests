METHOD_0 ( ) { org . apache . jackrabbit . oak . spi . security . authorization . IDENT_0 . IDENT_1 IDENT_2 = METHOD_1 ( IDENT_3 . IDENT_4 , new javax . jcr . IDENT_5 [ ] { IDENT_6 } ) ; org . apache . jackrabbit . oak . spi . security . authorization . IDENT_7 . IDENT_8 IDENT_9 = METHOD_2 ( IDENT_2 ) ; javax . jcr . IDENT_5 val = IDENT_9 . METHOD_3 ( IDENT_3 . IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String ) { for ( org . apache . jackrabbit . oak . spi . security . authorization . IDENT_0 . IDENT_1 IDENT_0 : IDENT_10 ) { java . lang . String IDENT_11 = METHOD_4 ( IDENT_0 ) ; if ( IDENT_11 . equals ( IDENT_12 ) ) { if ( IDENT_0 . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) ) { java . util . List < javax . jcr . IDENT_5 > values = IDENT_13 . METHOD_8 ( IDENT_0 . getProperty ( ) ) ; switch ( values . size ( ) ) { case 1 : return values . get ( 0 ) ; default : throw new javax . jcr . METHOD_9 ( STRING_0 ) ; } } else { return IDENT_13 . METHOD_10 ( IDENT_0 . getProperty ( ) ) ; } } } return null ; }
org . junit . Assert . assertEquals ( IDENT_6 , val ) 