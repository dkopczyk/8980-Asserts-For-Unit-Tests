METHOD_0 ( ) { java . util . Map < java . lang . Integer , java . lang . Integer > IDENT_0 = com . google . common . collect . IDENT_1 . METHOD_1 ( ) ; IDENT_0 . put ( INT_0 , INT_1 ) ; IDENT_0 . put ( INT_1 , INT_2 ) ; IDENT_0 . put ( INT_3 , INT_4 ) ; IDENT_0 . put ( INT_2 , INT_5 ) ; IDENT_0 . put ( INT_6 , INT_7 ) ; IDENT_0 . put ( INT_4 , INT_8 ) ; IDENT_0 . put ( INT_9 , INT_10 ) ; IDENT_0 . put ( INT_11 , INT_12 ) ; IDENT_0 . put ( INT_13 , INT_14 ) ; IDENT_0 . put ( INT_15 , INT_16 ) ; java . util . List < IDENT_2 . runtime . model . IDENT_3 > IDENT_4 = new java . util . ArrayList < IDENT_2 . runtime . model . IDENT_3 > ( ) ; java . util . Map < java . lang . Integer , java . lang . Integer > IDENT_5 ; try ( IDENT_6 . IDENT_2 . data . IDENT_7 builder = new IDENT_6 . IDENT_2 . data . METHOD_2 ( IDENT_4 , true ) ) { IDENT_2 . runtime . io . IDENT_8 resource = METHOD_3 ( STRING_0 ) ; builder . parse ( resource , IDENT_6 . IDENT_2 . IDENT_9 . IDENT_10 ) ; IDENT_5 = builder . METHOD_4 ( ) ; } "<AssertPlaceHolder>" ; } equals ( java . lang . Object ) { if ( o instanceof IDENT_6 . IDENT_11 . IDENT_12 ) { IDENT_6 . IDENT_11 . IDENT_12 other = ( ( IDENT_6 . IDENT_11 . IDENT_12 ) ( o ) ) ; return ( ( this . time ) == ( other . time ) ) && ( ( this . unit ) == ( other . unit ) ) ; } return false ; }
org . junit . Assert . assertTrue ( IDENT_0 . equals ( IDENT_5 ) ) 