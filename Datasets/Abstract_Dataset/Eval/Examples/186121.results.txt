METHOD_0 ( ) { model . add ( METHOD_1 ( edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . utils . configuration . IDENT_4 , edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . utils . configuration . IDENT_5 . METHOD_2 ( edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . utils . configuration . IDENT_6 . IDENT_7 . class ) ) ) ; edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . utils . configuration . IDENT_6 . IDENT_7 instance = loader . METHOD_3 ( edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . utils . configuration . IDENT_4 , edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . utils . configuration . IDENT_6 . IDENT_7 . class ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , java . lang . Class ) { if ( uri == null ) { throw new java . lang . METHOD_4 ( STRING_0 ) ; } if ( IDENT_8 == null ) { throw new java . lang . METHOD_4 ( STRING_1 ) ; } try { edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . utils . configuration . IDENT_9 < T > IDENT_10 = edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . utils . configuration . IDENT_11 . parse ( IDENT_12 , uri , IDENT_8 ) ; edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . utils . configuration . IDENT_13 < T > IDENT_14 = edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . utils . configuration . IDENT_15 . METHOD_5 ( IDENT_10 . METHOD_6 ( ) ) ; IDENT_14 . METHOD_7 ( ctx , req ) ; IDENT_14 . METHOD_8 ( IDENT_10 . METHOD_9 ( ) ) ; IDENT_14 . METHOD_10 ( this , IDENT_10 . METHOD_9 ( ) ) ; IDENT_14 . validate ( ) ; return IDENT_14 . getInstance ( ) ; } catch ( java . lang . Exception e ) { throw new edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . utils . configuration . METHOD_11 ( ( ( STRING_2 + uri ) + STRING_3 ) , e ) ; } }
org . junit . Assert . assertNotNull ( instance ) 