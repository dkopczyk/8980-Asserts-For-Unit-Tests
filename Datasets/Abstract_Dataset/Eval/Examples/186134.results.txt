METHOD_0 ( ) { java . util . Set < java . lang . String > IDENT_0 = edu . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . utils . configuration . IDENT_5 . METHOD_1 ( edu . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . utils . configuration . IDENT_6 . IDENT_7 . class ) ; for ( java . lang . String IDENT_8 : IDENT_0 ) { model . add ( METHOD_2 ( ( STRING_0 + ( model . size ( ) ) ) , IDENT_8 ) ) ; } java . util . Set < edu . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . utils . configuration . IDENT_6 . IDENT_7 > IDENT_9 = loader . METHOD_3 ( edu . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . utils . configuration . IDENT_6 . IDENT_7 . class ) ; "<AssertPlaceHolder>" ; } size ( ) { return m . size ( ) ; }
org . junit . Assert . assertEquals ( IDENT_0 . size ( ) , IDENT_9 . size ( ) ) 