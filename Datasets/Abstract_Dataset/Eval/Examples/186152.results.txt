METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 a = m ( org . IDENT_0 . IDENT_1 . IDENT_3 . a ( 1.0 , 2.0 ) , org . IDENT_0 . IDENT_1 . IDENT_3 . a ( FLOAT_0 , FLOAT_1 ) ) ; org . IDENT_0 . IDENT_1 . IDENT_2 b = m ( org . IDENT_0 . IDENT_1 . IDENT_3 . a ( FLOAT_0 , 1.0 ) , org . IDENT_0 . IDENT_1 . IDENT_3 . a ( FLOAT_1 , 2.0 ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( ) { org . IDENT_0 . IDENT_2 result = org . IDENT_0 . IDENT_1 . IDENT_4 . METHOD_2 ( IDENT_5 , IDENT_6 ) ; java . util . Iterator < java . lang . Integer > IDENT_7 = METHOD_3 ( ) ; java . util . List < java . lang . Integer > IDENT_8 = new java . util . IDENT_9 < java . lang . Integer > ( ) ; while ( IDENT_7 . hasNext ( ) ) { IDENT_8 . add ( 0 , IDENT_7 . next ( ) ) ; } for ( int i : IDENT_8 ) { org . IDENT_0 . iterator . IDENT_10 it = METHOD_4 ( i ) ; while ( it . hasNext ( ) ) { double x = it . next ( ) ; int j = it . index ( ) ; result . set ( j , ( ( ( IDENT_6 ) - 1 ) - i ) , x ) ; } } return result ; }
org . junit . Assert . assertEquals ( b , a . METHOD_1 ( ) ) 