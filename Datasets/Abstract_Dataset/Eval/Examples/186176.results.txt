METHOD_0 ( ) { java . io . InputStream is = new java . io . ByteArrayInputStream ( STRING_0 . getBytes ( IDENT_0 . UTF_8 ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( org . IDENT_1 . InputStream ) { org . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_1 . METHOD_2 ( new org . IDENT_1 . METHOD_3 ( new org . IDENT_1 . METHOD_4 ( is ) ) ) ; IDENT_3 . METHOD_5 ( STRING_1 , STRING_1 ) ; IDENT_3 . METHOD_6 ( ) ; if ( ! ( STRING_2 . equals ( IDENT_3 . IDENT_4 ) ) ) { throw new java . lang . IllegalArgumentException ( STRING_3 ) ; } IDENT_3 . METHOD_6 ( ) ; java . lang . String object = IDENT_3 . IDENT_4 ; if ( ! ( STRING_4 . equals ( object ) ) ) { throw new java . lang . IllegalArgumentException ( ( ( STRING_5 + object ) + STRING_6 ) ) ; } IDENT_3 . METHOD_6 ( ) ; java . lang . String format = IDENT_3 . IDENT_4 ; if ( ( ! ( STRING_7 . equals ( format ) ) ) && ( ! ( STRING_8 . equals ( format ) ) ) ) { throw new java . lang . IllegalArgumentException ( ( ( STRING_9 + format ) + STRING_6 ) ) ; } IDENT_3 . METHOD_6 ( ) ; java . lang . String field = IDENT_3 . IDENT_4 ; if ( ! ( STRING_10 . equals ( field ) ) ) { throw new java . lang . IllegalArgumentException ( ( ( STRING_11 + field ) + STRING_6 ) ) ; } IDENT_3 . METHOD_6 ( ) ; int length = ( ( int ) ( java . lang . Math . METHOD_7 ( IDENT_3 . IDENT_5 ) ) ) ; if ( STRING_7 . equals ( format ) ) { IDENT_3 . METHOD_6 ( ) ; int IDENT_6 = ( ( int ) ( java . lang . Math . METHOD_7 ( IDENT_3 . IDENT_5 ) ) ) ; org . IDENT_1 . IDENT_7 result = org . IDENT_1 . IDENT_8 . IDENT_9 . METHOD_8 ( length , IDENT_6 ) ; for ( int k = 0 ; k < IDENT_6 ; k ++ ) { IDENT_3 . METHOD_6 ( ) ; int i = ( ( int ) ( java . lang . Math . METHOD_7 ( IDENT_3 . IDENT_5 ) ) ) ; IDENT_3 . METHOD_6 ( ) ; double x = IDENT_3 . IDENT_5 ; result . set ( ( i - 1 ) , x ) ; } return result ; } else { org . IDENT_1 . IDENT_7 result = org . IDENT_1 . IDENT_8 . IDENT_10 . METHOD_8 ( length ) ; for ( int i = 0 ; i < length ; i ++ ) { IDENT_3 . METHOD_6 ( ) ; result . set ( i , IDENT_3 . IDENT_5 ) ; } return result ; } }
org . junit . Assert . assertEquals ( org . IDENT_1 . IDENT_7 . METHOD_1 ( is ) , org . IDENT_1 . IDENT_7 . METHOD_8 ( 0 ) ) 