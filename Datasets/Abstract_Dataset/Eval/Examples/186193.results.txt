METHOD_0 ( ) { java . util . concurrent . IDENT_0 IDENT_1 = new java . util . concurrent . METHOD_1 ( 1 ) ; java . util . concurrent . atomic . IDENT_2 IDENT_3 = new java . util . concurrent . atomic . METHOD_2 ( ) ; java . util . concurrent . IDENT_4 executor = ( task ) -> { task . run ( ) ; throw new java . util . concurrent . METHOD_3 ( ) ; } ; java . lang . IDENT_5 task = ( ) -> { IDENT_3 . METHOD_4 ( ) ; IDENT_1 . METHOD_5 ( ) ; } ; util . execute ( executor , task ) ; IDENT_1 . METHOD_6 ( ) ; "<AssertPlaceHolder>" ; } get ( ) { long IDENT_6 = IDENT_7 . currentTimeMillis ( ) ; if ( ( IDENT_6 - ( IDENT_8 ) ) < ( IDENT_9 ) ) { return IDENT_10 ; } IDENT_10 = IDENT_11 . get ( ) ; IDENT_8 = IDENT_6 ; return IDENT_10 ; }
org . junit . Assert . assertEquals ( 1 , IDENT_3 . get ( ) ) 