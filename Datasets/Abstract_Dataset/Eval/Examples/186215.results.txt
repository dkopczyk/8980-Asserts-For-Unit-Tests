METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( METHOD_2 ( IDENT_1 ) ) ) . METHOD_3 ( new org . mockito . IDENT_2 . IDENT_3 < java . lang . Object > ( ) { @ com . IDENT_4 . IDENT_5 . strategy . Override public java . lang . Object METHOD_4 ( org . mockito . IDENT_6 . IDENT_7 IDENT_8 ) throws java . lang . Throwable { java . lang . Thread . sleep ( INT_0 ) ; return connection ; } } ) ; when ( IDENT_0 . METHOD_5 ( ) ) . thenReturn ( 5 ) ; com . IDENT_4 . IDENT_5 . strategy . IDENT_9 IDENT_10 = new com . IDENT_4 . IDENT_5 . strategy . IDENT_9 . IDENT_11 < javax . sql . IDENT_12 > ( 5 , 100 ) . newInstance ( configuration ) ; "<AssertPlaceHolder>" ; verify ( IDENT_0 , METHOD_6 ( ) ) . METHOD_7 ( METHOD_8 ( ) ) ; verify ( IDENT_13 , times ( 1 ) ) . update ( 5 ) ; verify ( IDENT_14 , METHOD_6 ( ) ) . update ( METHOD_9 ( ) ) ; } METHOD_1 ( int ) { com . IDENT_4 . IDENT_5 . IDENT_15 . LOGGER . info ( STRING_0 , index ) ; java . sql . IDENT_16 connection = IDENT_17 . METHOD_1 ( ) ; org . junit . Assert . assertNotNull ( connection ) ; com . IDENT_4 . IDENT_5 . IDENT_15 . LOGGER . info ( STRING_1 , connection ) ; return connection ; }
org . junit . Assert . assertSame ( connection , IDENT_10 . METHOD_1 ( IDENT_1 ) ) 