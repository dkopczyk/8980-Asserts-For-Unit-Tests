METHOD_0 ( ) { final IDENT_0 . IDENT_1 . IDENT_2 . generator . IDENT_3 IDENT_4 = IDENT_0 . IDENT_1 . IDENT_2 . generator . TestUtils . METHOD_1 ( ) ; METHOD_1 . IDENT_5 = IDENT_6 . IDENT_7 ; final java . lang . String output = new IDENT_0 . IDENT_1 . IDENT_2 . generator . METHOD_2 ( METHOD_1 ) . METHOD_3 ( IDENT_0 . IDENT_1 . IDENT_2 . generator . IDENT_8 . from ( IDENT_0 . IDENT_1 . IDENT_2 . generator . IDENT_9 . IDENT_10 . class ) ) ; final java . lang . String expected = ( "\n" + ( ( ( ( ( ( ( ( ( STRING_0 + STRING_1 ) + STRING_2 ) + "\n" ) + STRING_3 ) + STRING_4 ) + STRING_1 0 ) + STRING_5 ) + STRING_6 ) + STRING_2 ) ) . replace ( STRING_7 , STRING_8 ) ; "<AssertPlaceHolder>" ; } from ( java . lang . reflect . Type [ ] ) { java . util . IDENT_11 . METHOD_4 ( types , STRING_9 ) ; final java . util . List < IDENT_0 . IDENT_1 . IDENT_2 . generator . parser . IDENT_12 < java . lang . reflect . Type > > IDENT_13 = new java . util . ArrayList ( ) ; for ( java . lang . reflect . Type type : types ) { IDENT_13 . add ( new IDENT_0 . IDENT_1 . IDENT_2 . generator . parser . METHOD_5 ( type ) ) ; } return new IDENT_0 . IDENT_1 . IDENT_2 . generator . METHOD_6 ( IDENT_13 ) ; }
org . junit . Assert . assertEquals ( expected , output ) 