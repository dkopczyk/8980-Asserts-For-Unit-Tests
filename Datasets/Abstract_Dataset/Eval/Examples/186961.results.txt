METHOD_0 ( ) { java . lang . String [ ] operations = new java . lang . String [ ] { com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_2 . Operation . IDENT_3 , com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_2 . Operation . IDENT_4 , com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_2 . Operation . IDENT_5 , com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_2 . Operation . IDENT_6 , com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_2 . Operation . IDENT_7 } ; java . lang . String IDENT_8 = ( IDENT_9 ) + STRING_0 ; com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_10 . Builder IDENT_11 = new com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_10 . Builder ( ) ; IDENT_11 . METHOD_1 ( com . ibm . IDENT_0 . IDENT_1 . v1 . IDENT_12 . METHOD_1 ) ; com . ibm . IDENT_0 . IDENT_1 . v1 . model . Configuration configuration = com . ibm . IDENT_0 . IDENT_1 . v1 . IDENT_12 . METHOD_2 ( com . ibm . IDENT_0 . IDENT_1 . v1 . IDENT_12 . IDENT_13 ) ; configuration . setName ( IDENT_8 ) ; IDENT_11 . configuration ( configuration ) ; com . ibm . IDENT_0 . IDENT_1 . v1 . model . Configuration IDENT_14 = METHOD_3 ( IDENT_11 . build ( ) ) ; com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_15 IDENT_16 = new com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_15 . Builder ( com . ibm . IDENT_0 . IDENT_1 . v1 . IDENT_12 . METHOD_1 , IDENT_14 . METHOD_4 ( ) ) . build ( ) ; com . ibm . IDENT_0 . IDENT_1 . v1 . model . Configuration IDENT_17 = IDENT_1 . METHOD_5 ( IDENT_16 ) . execute ( ) . METHOD_6 ( ) ; for ( com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_2 IDENT_18 : IDENT_17 . METHOD_7 ( ) ) { java . lang . String operation = IDENT_18 . METHOD_8 ( ) ; "<AssertPlaceHolder>" ; } } METHOD_8 ( ) { return operation ; }
org . junit . Assert . assertEquals ( true , java . util . Arrays . asList ( operations ) . contains ( operation ) ) 