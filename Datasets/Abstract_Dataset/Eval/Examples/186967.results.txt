METHOD_0 ( ) { com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_2 IDENT_3 = METHOD_1 ( STRING_0 , com . ibm . IDENT_0 . IDENT_1 . v1 . IDENT_4 . IDENT_5 ) ; com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_6 IDENT_7 = new com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_6 . Builder ( ) . METHOD_2 ( com . ibm . IDENT_0 . IDENT_1 . v1 . IDENT_4 . METHOD_2 ) . METHOD_3 ( com . ibm . IDENT_0 . IDENT_1 . v1 . IDENT_4 . METHOD_3 ) . METHOD_4 ( STRING_1 ) . build ( ) ; com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_8 IDENT_9 = IDENT_1 . query ( IDENT_7 ) . execute ( ) . METHOD_5 ( ) ; java . lang . String IDENT_10 = IDENT_9 . METHOD_6 ( ) ; com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_11 IDENT_12 = new com . ibm . IDENT_0 . IDENT_1 . v1 . model . METHOD_7 ( ) ; IDENT_12 . METHOD_8 ( com . ibm . IDENT_0 . IDENT_1 . v1 . IDENT_4 . METHOD_2 ) ; IDENT_12 . METHOD_9 ( com . ibm . IDENT_0 . IDENT_1 . v1 . IDENT_4 . METHOD_3 ) ; IDENT_12 . METHOD_10 ( IDENT_3 . METHOD_11 ( ) ) ; IDENT_12 . METHOD_12 ( IDENT_10 ) ; com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_13 IDENT_14 = new com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_13 . Builder ( ) . type ( IDENT_13 . Type . IDENT_15 ) . data ( IDENT_12 ) . build ( ) ; com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_16 response = IDENT_1 . METHOD_13 ( IDENT_14 ) . execute ( ) . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } METHOD_13 ( com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_13 ) { com . ibm . cloud . sdk . core . util . IDENT_17 . METHOD_14 ( IDENT_14 , STRING_2 ) ; java . lang . String [ ] IDENT_18 = new java . lang . String [ ] { STRING_3 } ; com . ibm . cloud . sdk . core . http . IDENT_19 builder = com . ibm . cloud . sdk . core . http . IDENT_19 . METHOD_15 ( com . ibm . cloud . sdk . core . http . IDENT_19 . METHOD_16 ( METHOD_17 ( ) , IDENT_18 ) ) ; builder . query ( STRING_4 , IDENT_20 ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_21 = com . ibm . IDENT_0 . common . IDENT_22 . METHOD_18 ( STRING_5 , STRING_6 , STRING_7 ) ; for ( java . util . Map . Entry < java . lang . String , java . lang . String > header : IDENT_21 . entrySet ( ) ) { builder . header ( header . getKey ( ) , header . getValue ( ) ) ; } builder . header ( STRING_8 , STRING_9 ) ; final com . google . gson . IDENT_23 IDENT_24 = new com . google . gson . METHOD_19 ( ) ; IDENT_24 . METHOD_20 ( STRING_10 , IDENT_14 . type ( ) ) ; IDENT_24 . add ( STRING_11 , com . ibm . cloud . sdk . core . util . IDENT_25 . METHOD_21 ( ) . METHOD_22 ( IDENT_14 . data ( ) ) ) ; builder . METHOD_23 ( IDENT_24 ) ; return METHOD_24 ( builder . build ( ) , com . ibm . cloud . sdk . core . util . IDENT_26 . METHOD_25 ( com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_16 . class ) ) ; }
org . junit . Assert . assertNotNull ( response ) 