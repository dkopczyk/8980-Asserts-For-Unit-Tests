METHOD_0 ( ) { com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_2 IDENT_3 = new com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_2 . Builder ( ) . METHOD_1 ( METHOD_1 ) . build ( ) ; com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_4 result = service . METHOD_2 ( IDENT_3 ) . execute ( ) . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_2 ) { com . ibm . cloud . sdk . core . util . IDENT_5 . METHOD_4 ( IDENT_6 , STRING_0 ) ; java . lang . String [ ] IDENT_7 = new java . lang . String [ ] { STRING_1 , STRING_2 } ; java . lang . String [ ] IDENT_8 = new java . lang . String [ ] { IDENT_6 . METHOD_1 ( ) } ; com . ibm . cloud . sdk . core . http . IDENT_9 builder = com . ibm . cloud . sdk . core . http . IDENT_9 . get ( com . ibm . cloud . sdk . core . http . IDENT_9 . METHOD_5 ( METHOD_6 ( ) , IDENT_7 , IDENT_8 ) ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_10 = com . ibm . IDENT_0 . common . IDENT_11 . METHOD_7 ( STRING_3 , STRING_4 , STRING_5 ) ; for ( java . util . Map . Entry < java . lang . String , java . lang . String > header : IDENT_10 . entrySet ( ) ) { builder . header ( header . getKey ( ) , header . getValue ( ) ) ; } builder . header ( STRING_6 , STRING_7 ) ; return METHOD_8 ( builder . build ( ) , com . ibm . cloud . sdk . core . util . IDENT_12 . METHOD_9 ( com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_4 . class ) ) ; }
org . junit . Assert . assertNotNull ( result ) 