METHOD_0 ( ) { org . apache . jackrabbit . oak . IDENT_0 . IDENT_1 table = new org . apache . jackrabbit . oak . IDENT_0 . METHOD_1 ( ) ; java . util . Map < java . lang . Integer , java . lang . Integer > expected = new java . util . HashMap ( ) ; for ( int i = 0 ; i < INT_0 ; i ++ ) { expected . put ( table . METHOD_2 ( IDENT_2 . IDENT_3 , i ) , i ) ; } java . util . Map < java . lang . Integer , java . lang . Integer > IDENT_4 = new java . util . HashMap ( ) ; for ( org . apache . jackrabbit . oak . IDENT_0 . IDENT_5 . Entry entry : table ) { IDENT_4 . put ( entry . METHOD_3 ( ) , entry . METHOD_4 ( ) ) ; } "<AssertPlaceHolder>" ; } METHOD_4 ( ) { return offset ; }
org . junit . Assert . assertEquals ( expected , IDENT_4 ) 