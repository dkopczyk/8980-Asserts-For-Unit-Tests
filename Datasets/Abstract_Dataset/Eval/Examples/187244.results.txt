METHOD_0 ( ) { java . io . ByteArrayOutputStream IDENT_0 = new java . io . ByteArrayOutputStream ( ) ; java . io . IDENT_1 IDENT_2 = new java . io . METHOD_1 ( IDENT_0 ) ; IDENT_2 . METHOD_2 ( IDENT_3 . IDENT_4 ) ; IDENT_2 . close ( ) ; java . io . ByteArrayInputStream IDENT_5 = new java . io . ByteArrayInputStream ( IDENT_0 . toByteArray ( ) ) ; java . io . IDENT_6 IDENT_7 = new java . io . METHOD_3 ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { int IDENT_8 = read ( ) ; switch ( IDENT_8 ) { case STRING_0 : return null ; case STRING_1 : return java . lang . Boolean . valueOf ( true ) ; case STRING_2 : return java . lang . Boolean . valueOf ( false ) ; case STRING_3 : return java . lang . Integer . valueOf ( METHOD_5 ( ) ) ; case STRING_4 : return java . lang . Long . valueOf ( METHOD_6 ( ) ) ; case STRING_5 : return java . lang . Double . valueOf ( METHOD_7 ( ) ) ; case STRING_6 : return new java . util . Date ( METHOD_6 ( ) ) ; case STRING_7 : case STRING_8 : { IDENT_9 = IDENT_8 == STRING_8 ; IDENT_10 = ( ( read ( ) ) << 8 ) + ( read ( ) ) ; return METHOD_8 ( ) ; } case STRING_9 : case STRING_10 : { IDENT_9 = IDENT_8 == STRING_10 ; IDENT_10 = ( ( read ( ) ) << 8 ) + ( read ( ) ) ; int data ; IDENT_11 . METHOD_9 ( 0 ) ; while ( ( data = METHOD_10 ( ) ) >= 0 ) { IDENT_11 . append ( ( ( char ) ( data ) ) ) ; } return IDENT_11 . toString ( ) ; } case STRING_11 : case STRING_12 : { IDENT_9 = IDENT_8 == STRING_12 ; IDENT_10 = ( ( read ( ) ) << 8 ) + ( read ( ) ) ; int data ; java . io . ByteArrayOutputStream IDENT_12 = new java . io . ByteArrayOutputStream ( ) ; while ( ( data = METHOD_11 ( ) ) >= 0 ) { IDENT_12 . write ( data ) ; } return IDENT_12 . toByteArray ( ) ; } case STRING_13 : { java . lang . String type = METHOD_12 ( ) ; int length = METHOD_13 ( ) ; return IDENT_13 . METHOD_14 ( this , length , type ) ; } case STRING_14 : { java . lang . String type = METHOD_12 ( ) ; return IDENT_13 . METHOD_15 ( this , type ) ; } case STRING_15 : { int ref = METHOD_5 ( ) ; return IDENT_14 . get ( ref ) ; } case STRING_16 : { java . lang . String type = METHOD_12 ( ) ; java . lang . String url = METHOD_16 ( ) ; return METHOD_17 ( type , url ) ; } default : throw error ( ( STRING_17 + ( METHOD_18 ( IDENT_8 ) ) ) ) ; } }
org . junit . Assert . assertSame ( IDENT_3 . IDENT_4 , IDENT_7 . METHOD_4 ( ) ) 