METHOD_0 ( ) { final com . IDENT_0 . api . util . auth . IDENT_1 user = mock ( com . IDENT_0 . api . util . auth . IDENT_1 . class ) ; final com . sun . jersey . api . core . IDENT_2 request = mock ( com . sun . jersey . api . core . IDENT_2 . class ) ; when ( request . METHOD_1 ( ) ) . thenReturn ( user ) ; final com . sun . jersey . api . core . IDENT_3 context = mock ( com . sun . jersey . api . core . IDENT_3 . class ) ; when ( context . METHOD_2 ( ) ) . thenReturn ( request ) ; "<AssertPlaceHolder>" ; } getValue ( com . sun . jersey . api . core . IDENT_3 ) { java . util . List < java . util . Locale > IDENT_4 ; try { IDENT_4 = c . METHOD_2 ( ) . METHOD_3 ( ) ; } catch ( javax . ws . rs . IDENT_5 e ) { IDENT_4 = com . google . common . collect . ImmutableList . of ( ) ; } if ( ! ( IDENT_4 . isEmpty ( ) ) ) { final java . util . Locale IDENT_6 = IDENT_4 . get ( 0 ) ; if ( ! ( IDENT_6 . equals ( com . IDENT_0 . api . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 ) ) ) { return IDENT_6 ; } } return java . util . Locale . METHOD_4 ( ) ; }
org . junit . Assert . assertThat ( provider . getValue ( context ) , org . hamcrest . CoreMatchers . is ( user ) ) 