METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . datamodel . helpers . IDENT_2 item = org . IDENT_0 . IDENT_1 . datamodel . helpers . IDENT_3 . METHOD_1 ( org . IDENT_0 . IDENT_1 . datamodel . helpers . IDENT_3 . METHOD_2 ( STRING_0 ) , java . util . Collections . singletonList ( org . IDENT_0 . IDENT_1 . datamodel . helpers . IDENT_3 . METHOD_3 ( STRING_1 , STRING_2 ) ) , java . util . Collections . singletonList ( org . IDENT_0 . IDENT_1 . datamodel . helpers . IDENT_3 . METHOD_3 ( STRING_1 , STRING_3 ) ) , java . util . Collections . singletonList ( org . IDENT_0 . IDENT_1 . datamodel . helpers . IDENT_3 . METHOD_3 ( STRING_1 , STRING_4 ) ) , java . util . Collections . emptyList ( ) , java . util . Collections . METHOD_4 ( STRING_5 , org . IDENT_0 . IDENT_1 . datamodel . helpers . IDENT_3 . METHOD_5 ( "foo" , STRING_5 , java . util . Collections . emptyList ( ) ) ) ) ; org . IDENT_0 . IDENT_1 . datamodel . helpers . IDENT_4 converter = new org . IDENT_0 . IDENT_1 . datamodel . helpers . METHOD_6 ( new org . IDENT_0 . IDENT_1 . datamodel . helpers . METHOD_7 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( java . util . List ) { java . util . List < org . IDENT_0 . IDENT_1 . datamodel . helpers . IDENT_5 > result = new java . util . ArrayList ( IDENT_6 . size ( ) ) ; for ( org . IDENT_0 . IDENT_1 . datamodel . helpers . IDENT_5 IDENT_7 : IDENT_6 ) { result . add ( METHOD_8 ( IDENT_7 ) ) ; } return result ; }
org . junit . Assert . assertEquals ( item , converter . METHOD_8 ( item ) ) 