METHOD_0 ( ) { org . apache . commons . io . IDENT_0 . METHOD_1 ( new java . io . File ( STRING_0 ) ) ; org . apache . jackrabbit . oak . plugins . document . IDENT_1 . Builder builder = IDENT_2 . METHOD_2 ( ) ; builder . METHOD_3 ( STRING_0 ) ; org . apache . jackrabbit . oak . plugins . document . IDENT_3 IDENT_4 = builder . METHOD_4 ( ) ; com . google . common . cache . IDENT_5 < org . apache . jackrabbit . oak . plugins . document . IDENT_6 , org . apache . jackrabbit . oak . plugins . document . IDENT_7 . IDENT_8 > cache = builder . METHOD_5 ( IDENT_4 ) ; org . apache . jackrabbit . oak . plugins . document . IDENT_7 . IDENT_8 c = new org . apache . jackrabbit . oak . plugins . document . IDENT_7 . METHOD_6 ( ) ; for ( int i = 0 ; i < 100 ; i ++ ) { c . IDENT_9 . add ( ( STRING_1 + i ) ) ; } org . apache . jackrabbit . oak . plugins . document . Path path = org . apache . jackrabbit . oak . plugins . document . Path . METHOD_7 ( STRING_2 ) ; org . apache . jackrabbit . oak . plugins . document . IDENT_6 key = null ; for ( int i = 0 ; i < 1000 ; i ++ ) { key = new org . apache . jackrabbit . oak . plugins . document . METHOD_8 ( "" , path , new org . apache . jackrabbit . oak . plugins . document . METHOD_9 ( new org . apache . jackrabbit . oak . plugins . document . METHOD_10 ( i , 0 , 1 ) ) ) ; cache . put ( key , c ) ; } cache . METHOD_11 ( key ) ; java . lang . Thread . sleep ( 200 ) ; "<AssertPlaceHolder>" ; builder . METHOD_12 ( ) . close ( ) ; } METHOD_13 ( java . lang . String ) { if ( METHOD_14 ( key ) ) { return IDENT_10 . METHOD_13 ( new org . apache . jackrabbit . oak . plugins . document . util . METHOD_15 ( key ) ) ; } else { return IDENT_11 . METHOD_13 ( new org . apache . jackrabbit . oak . plugins . document . util . METHOD_15 ( key ) ) ; } }
org . junit . Assert . assertNull ( cache . METHOD_13 ( key ) ) 