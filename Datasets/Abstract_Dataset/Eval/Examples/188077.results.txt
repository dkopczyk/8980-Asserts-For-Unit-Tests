METHOD_0 ( ) { org . apache . camel . IDENT_0 . IDENT_1 . name . IDENT_2 strategy = new org . apache . camel . IDENT_0 . IDENT_1 . name . METHOD_1 ( org . wildfly . camel . test . IDENT_1 . IDENT_3 . IDENT_4 . class , true ) ; final org . apache . camel . IDENT_0 . IDENT_1 . IDENT_5 format = new org . apache . camel . IDENT_0 . IDENT_1 . METHOD_2 ( STRING_0 , strategy ) ; org . apache . camel . IDENT_6 IDENT_7 = new org . apache . camel . impl . METHOD_3 ( ) ; IDENT_7 . METHOD_4 ( new org . apache . camel . builder . METHOD_5 ( ) { @ org . wildfly . camel . test . IDENT_1 . Override public void METHOD_6 ( ) throws org . wildfly . camel . test . IDENT_1 . Exception { from ( STRING_1 ) . METHOD_7 ( format ) ; } } ) ; IDENT_7 . start ( ) ; try ( java . io . InputStream input = getClass ( ) . getResourceAsStream ( STRING_2 ) ) { org . wildfly . camel . test . common . types . IDENT_8 IDENT_9 = new org . wildfly . camel . test . common . types . METHOD_8 ( ) ; IDENT_9 . METHOD_9 ( STRING_3 ) ; IDENT_9 . METHOD_10 ( STRING_4 ) ; org . apache . camel . IDENT_10 template = IDENT_7 . METHOD_11 ( ) ; java . lang . String result = template . METHOD_12 ( STRING_1 , IDENT_9 , java . lang . String . class ) ; "<AssertPlaceHolder>" ; } finally { IDENT_7 . METHOD_13 ( ) ; } } METHOD_14 ( java . lang . String ) { return org . wildfly . camel . test . common . utils . IDENT_11 . METHOD_14 ( new java . io . ByteArrayInputStream ( IDENT_12 . getBytes ( ) ) ) ; }
org . junit . Assert . assertEquals ( org . wildfly . camel . test . common . utils . IDENT_11 . METHOD_14 ( input ) , org . wildfly . camel . test . common . utils . IDENT_11 . METHOD_14 ( result ) ) 