METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . Object > IDENT_0 = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; IDENT_0 . put ( org . wildfly . security . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 , STRING_0 ) ; javax . security . IDENT_1 . IDENT_5 server = new org . wildfly . security . IDENT_1 . test . METHOD_1 ( org . wildfly . security . IDENT_1 . IDENT_2 . IDENT_6 . class , org . wildfly . security . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_7 ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( IDENT_8 . IDENT_9 , METHOD_4 ( STRING_1 , STRING_2 , STRING_0 ) ) . METHOD_5 ( IDENT_0 ) . METHOD_6 ( STRING_3 ) . METHOD_7 ( STRING_4 ) . build ( ) ; javax . security . auth . IDENT_10 . IDENT_11 IDENT_12 = org . wildfly . security . IDENT_1 . IDENT_2 . IDENT_13 . METHOD_8 ( STRING_5 , STRING_2 , STRING_0 , null , STRING_1 ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_14 = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; IDENT_14 . put ( org . wildfly . security . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_15 , STRING_6 ) ; javax . security . IDENT_1 . IDENT_16 client = javax . security . IDENT_1 . IDENT_17 . METHOD_9 ( new java . lang . String [ ] { org . wildfly . security . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_7 } , STRING_1 , STRING_3 , STRING_4 , IDENT_14 , IDENT_12 ) ; "<AssertPlaceHolder>" ; byte [ ] message = server . METHOD_10 ( new byte [ 0 ] ) ; try { client . METHOD_11 ( message ) ; org . junit . Assert . fail ( STRING_7 ) ; } catch ( java . io . IOException e ) { } } METHOD_12 ( ) { return delegate . METHOD_12 ( ) ; }
org . junit . Assert . assertFalse ( client . METHOD_12 ( ) ) 