METHOD_0 ( ) { final java . lang . String algorithm = IDENT_0 ; final javax . security . IDENT_1 . IDENT_2 IDENT_3 = METHOD_1 ( org . wildfly . security . IDENT_1 . IDENT_4 . IDENT_5 . class ) ; "<AssertPlaceHolder>" ; org . wildfly . security . IDENT_6 . IDENT_7 IDENT_8 = org . wildfly . security . IDENT_6 . IDENT_7 . getInstance ( algorithm ) ; final org . wildfly . security . IDENT_6 . IDENT_9 IDENT_6 = IDENT_8 . METHOD_2 ( new org . wildfly . security . IDENT_6 . spec . METHOD_3 ( org . wildfly . common . IDENT_10 . IDENT_11 . METHOD_4 ( STRING_0 ) . METHOD_5 ( ) . METHOD_6 ( ) , STRING_1 , INT_0 ) ) ; final org . wildfly . security . IDENT_1 . test . IDENT_12 . IDENT_13 < org . wildfly . security . auth . server . IDENT_14 > IDENT_15 = new org . wildfly . security . IDENT_1 . test . IDENT_12 . IDENT_13 < > ( ) ; final org . wildfly . security . IDENT_1 . test . IDENT_12 . IDENT_13 < java . io . IDENT_16 > IDENT_17 = new org . wildfly . security . IDENT_1 . test . IDENT_12 . IDENT_13 < > ( ) ; try { final javax . security . IDENT_1 . IDENT_18 IDENT_19 = METHOD_7 ( IDENT_6 , IDENT_17 , IDENT_15 ) ; final javax . security . auth . IDENT_20 . IDENT_21 IDENT_22 = METHOD_8 ( STRING_2 , STRING_3 , org . wildfly . security . IDENT_1 . IDENT_4 . IDENT_23 . IDENT_24 , algorithm , org . wildfly . security . IDENT_1 . IDENT_4 . IDENT_23 . IDENT_25 ) ; final javax . security . IDENT_1 . IDENT_26 IDENT_27 = IDENT_3 . METHOD_9 ( new java . lang . String [ ] { IDENT_28 . IDENT_29 . IDENT_23 } , null , "test" , STRING_4 , java . util . Collections . < java . lang . String , java . lang . Object > METHOD_10 ( ) , IDENT_22 ) ; byte [ ] message = IDENT_27 . METHOD_11 ( new byte [ 0 ] ) ; try { IDENT_19 . METHOD_12 ( message ) ; org . junit . Assert . fail ( STRING_5 ) ; } catch ( javax . security . IDENT_1 . IDENT_30 expected ) { } IDENT_27 . METHOD_13 ( ) ; IDENT_19 . METHOD_13 ( ) ; METHOD_14 ( IDENT_15 , STRING_2 , ( ( org . wildfly . security . IDENT_6 . interfaces . IDENT_31 ) ( IDENT_6 ) ) , algorithm ) ; } finally { IDENT_17 . METHOD_15 ( ) . close ( ) ; } } METHOD_1 ( java . lang . Class ) { java . util . IDENT_32 < javax . security . IDENT_1 . IDENT_2 > IDENT_33 = javax . security . IDENT_1 . IDENT_34 . METHOD_16 ( ) ; while ( IDENT_33 . METHOD_17 ( ) ) { javax . security . IDENT_1 . IDENT_2 IDENT_35 = IDENT_33 . METHOD_18 ( ) ; if ( IDENT_35 . getClass ( ) . equals ( IDENT_36 ) ) { return IDENT_36 . METHOD_19 ( IDENT_35 ) ; } } return null ; }
org . junit . Assert . assertNotNull ( IDENT_3 ) 