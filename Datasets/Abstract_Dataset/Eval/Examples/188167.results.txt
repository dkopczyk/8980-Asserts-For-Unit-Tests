METHOD_0 ( ) { org . wildfly . security . IDENT_0 . IDENT_1 IDENT_0 = new org . wildfly . security . IDENT_0 . METHOD_1 ( ) ; org . wildfly . security . IDENT_0 . IDENT_2 command = IDENT_0 . METHOD_2 ( IDENT_3 . IDENT_4 ) ; java . lang . String IDENT_5 = STRING_0 ; org . apache . commons . lang3 . tuple . IDENT_6 < java . lang . String , java . lang . String > IDENT_7 = org . apache . commons . lang3 . tuple . IDENT_6 . of ( STRING_1 , STRING_1 0 ) ; org . apache . commons . lang3 . tuple . IDENT_6 < java . lang . String , java . lang . String > IDENT_8 = org . apache . commons . lang3 . tuple . IDENT_6 . of ( STRING_2 , STRING_1 6 ) ; org . apache . commons . lang3 . tuple . IDENT_6 < java . lang . String , java . lang . String > IDENT_9 = org . apache . commons . lang3 . tuple . IDENT_6 . of ( STRING_1 4 , STRING_3 ) ; org . apache . commons . lang3 . tuple . IDENT_6 < java . lang . String , java . lang . String > IDENT_10 = org . apache . commons . lang3 . tuple . IDENT_6 . of ( STRING_4 , STRING_5 ) ; java . lang . String IDENT_11 = METHOD_3 ( ) ; java . lang . String [ ] IDENT_12 = new java . lang . String [ ] { IDENT_7 . METHOD_4 ( ) , IDENT_7 . METHOD_5 ( ) , IDENT_8 . METHOD_4 ( ) , IDENT_10 . METHOD_4 ( ) , IDENT_10 . METHOD_5 ( ) } ; java . lang . String [ ] IDENT_13 = new java . lang . String [ ] { IDENT_9 . METHOD_5 ( ) , IDENT_9 . METHOD_4 ( ) , IDENT_7 . METHOD_4 ( ) , IDENT_9 . METHOD_4 ( ) , IDENT_7 . METHOD_5 ( ) } ; for ( int i = 0 ; i < ( IDENT_12 . length ) ; i ++ ) { java . lang . String [ ] args = new java . lang . String [ ] { STRING_6 + IDENT_11 , STRING_1 3 , IDENT_12 [ i ] , STRING_1 8 , STRING_7 , STRING_8 , STRING_1 7 , STRING_1 2 , IDENT_5 , IDENT_13 [ i ] } ; try { command . execute ( args ) ; org . junit . Assert . fail ( STRING_1 1 ) ; } catch ( java . lang . Exception e ) { if ( ! ( e instanceof org . apache . commons . cli . IDENT_14 ) ) { org . junit . Assert . fail ( java . lang . String . format ( STRING_9 , org . apache . commons . cli . IDENT_14 . class . METHOD_6 ( ) , e . getClass ( ) . METHOD_6 ( ) ) ) ; } "<AssertPlaceHolder>" ; } } } getMessage ( ) { return this . IDENT_15 ; }
org . junit . Assert . assertEquals ( java . lang . String . format ( STRING_1 5 , IDENT_13 [ i ] , IDENT_12 [ i ] ) , e . getMessage ( ) ) 