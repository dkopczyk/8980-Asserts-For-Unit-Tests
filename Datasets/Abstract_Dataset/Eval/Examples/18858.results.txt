METHOD_0 ( ) { final int IDENT_0 = 200 ; java . util . IDENT_1 random = new java . util . METHOD_1 ( ) ; org . apache . jackrabbit . oak . plugins . document . IDENT_2 IDENT_3 = METHOD_2 ( IDENT_0 ) ; org . apache . jackrabbit . oak . plugins . document . IDENT_4 store = IDENT_3 . METHOD_3 ( ) ; org . apache . jackrabbit . oak . plugins . document . IDENT_5 doc = METHOD_4 ( store ) ; for ( int i = 0 ; i < 10 ; i ++ ) { int IDENT_6 = random . METHOD_5 ( IDENT_0 ) ; org . apache . jackrabbit . oak . plugins . document . IDENT_7 r = com . google . common . collect . IDENT_8 . get ( doc . METHOD_6 ( STRING_0 ) . METHOD_7 ( ) , IDENT_6 ) ; java . lang . IDENT_9 < Map . Entry < org . apache . jackrabbit . oak . plugins . document . IDENT_7 , java . lang . String > > IDENT_10 = doc . METHOD_0 ( STRING_0 , new org . apache . jackrabbit . oak . plugins . document . METHOD_8 ( r ) ) ; "<AssertPlaceHolder>" ; } IDENT_3 . METHOD_9 ( ) ; } size ( java . lang . IDENT_9 ) { long size = 0 ; for ( org . apache . jackrabbit . oak . api . IDENT_11 b : IDENT_12 ) { size += b . length ( ) ; } return size ; }
org . junit . Assert . assertEquals ( IDENT_6 , ( IDENT_0 - ( com . google . common . collect . IDENT_8 . size ( IDENT_10 ) ) ) ) 