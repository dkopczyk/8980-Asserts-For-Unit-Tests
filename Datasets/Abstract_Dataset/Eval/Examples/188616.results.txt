METHOD_0 ( ) { org . wildfly . test . integration . IDENT_0 . batch . IDENT_1 . IDENT_2 = new java . util . concurrent . METHOD_1 ( ) ; final org . wildfly . security . auth . server . IDENT_3 IDENT_4 = org . wildfly . test . integration . IDENT_0 . batch . IDENT_1 . METHOD_2 ( STRING_0 , STRING_1 ) ; IDENT_4 . METHOD_3 ( ( ( java . util . concurrent . IDENT_5 < java . lang . Long > ) ( ( ) -> IDENT_6 . start ( STRING_2 , new java . util . Properties ( ) ) ) ) ) ; final java . lang . String IDENT_7 = org . wildfly . test . integration . IDENT_0 . batch . IDENT_1 . IDENT_2 . get ( org . jboss . as . test . shared . IDENT_8 . METHOD_4 ( 20 ) , TimeUnit . IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . jboss . as . controller . client . helpers . domain . IDENT_10 ) { METHOD_5 ( client ) ; org . jboss . IDENT_11 . IDENT_12 read = org . jboss . as . controller . operations . common . IDENT_13 . METHOD_6 ( org . jboss . as . test . integration . domain . IDENT_14 . IDENT_15 , IDENT_16 . IDENT_17 ) ; read . get ( org . jboss . as . test . integration . domain . IDENT_14 . IDENT_18 ) . set ( org . jboss . as . test . integration . domain . IDENT_14 . IDENT_19 ) ; org . jboss . IDENT_11 . IDENT_12 result = org . jboss . as . test . integration . domain . management . util . IDENT_20 . METHOD_7 ( read , client ) ; for ( org . jboss . IDENT_11 . IDENT_12 IDENT_21 : result . asList ( ) ) { final java . util . List < org . jboss . IDENT_11 . IDENT_12 > IDENT_22 = org . jboss . as . test . integration . domain . IDENT_14 . IDENT_23 . METHOD_8 ( client , org . jboss . as . controller . IDENT_16 . METHOD_9 ( org . jboss . as . test . integration . domain . IDENT_14 . IDENT_19 , IDENT_21 . METHOD_10 ( ) ) ) ; METHOD_11 ( client , IDENT_22 ) ; } }
org . junit . Assert . assertEquals ( STRING_0 , IDENT_7 ) 