METHOD_0 ( ) { final org . jboss . IDENT_0 . client . IDENT_1 < org . jboss . as . test . integration . IDENT_2 . IDENT_0 . remote . client . api . IDENT_3 > IDENT_4 = new org . jboss . IDENT_0 . client . METHOD_1 ( org . jboss . as . test . integration . IDENT_2 . IDENT_0 . remote . client . api . IDENT_3 . class , org . jboss . as . test . integration . IDENT_2 . IDENT_0 . remote . client . api . IDENT_5 . IDENT_6 , org . jboss . as . test . integration . IDENT_2 . IDENT_0 . remote . client . api . IDENT_5 . IDENT_7 , org . jboss . as . test . integration . IDENT_2 . IDENT_0 . remote . client . api . IDENT_8 . class . METHOD_2 ( ) , "" ) ; final org . jboss . as . test . integration . IDENT_2 . IDENT_0 . remote . client . api . IDENT_3 proxy = org . jboss . IDENT_0 . client . IDENT_9 . METHOD_3 ( IDENT_4 ) ; java . util . concurrent . IDENT_10 < java . lang . Object > task = new java . util . concurrent . IDENT_10 < java . lang . Object > ( ) { @ org . jboss . as . test . integration . IDENT_2 . IDENT_0 . remote . client . api . Override public java . lang . Object call ( ) throws org . jboss . as . test . integration . IDENT_2 . IDENT_0 . remote . client . api . Exception { try { proxy . METHOD_4 ( ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . Exception e ) { org . jboss . as . test . integration . IDENT_2 . IDENT_0 . remote . client . api . IDENT_5 . logger . trace ( ( STRING_0 + e ) ) ; } java . lang . Thread . sleep ( 1000 ) ; "<AssertPlaceHolder>" ; return null ; } } ; final java . util . concurrent . IDENT_11 executor = java . util . concurrent . IDENT_12 . METHOD_5 ( 10 ) ; try { final java . util . List < java . util . concurrent . IDENT_13 > IDENT_14 = new java . util . ArrayList < java . util . concurrent . IDENT_13 > ( ) ; for ( int i = 0 ; i < 100 ; ++ i ) { IDENT_14 . add ( executor . METHOD_6 ( task ) ) ; } for ( java . util . concurrent . IDENT_13 result : IDENT_14 ) { result . get ( ) ; } } finally { executor . METHOD_7 ( ) ; } } METHOD_8 ( ) { return STRING_1 ; }
org . junit . Assert . assertEquals ( STRING_1 , proxy . METHOD_8 ( ) ) 