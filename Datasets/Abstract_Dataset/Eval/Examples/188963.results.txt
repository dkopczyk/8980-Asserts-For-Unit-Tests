METHOD_0 ( ) { System . out . println ( STRING_0 ) ; java . lang . String header = STRING_1 ; org . IDENT_0 . IDENT_1 . bean . IDENT_2 expResult = new org . IDENT_0 . IDENT_1 . bean . METHOD_1 ( STRING_2 , org . IDENT_0 . commons . IDENT_3 . UTF_8 ) ; org . IDENT_0 . IDENT_1 . bean . IDENT_2 result = org . IDENT_0 . IDENT_1 . util . IDENT_4 . METHOD_2 ( header ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { final java . lang . String [ ] arr = header . split ( STRING_3 ) ; if ( ( arr . length ) == 1 ) { return new org . IDENT_0 . IDENT_1 . bean . METHOD_1 ( header , null ) ; } else { final java . lang . String IDENT_5 = arr [ 0 ] ; for ( int i = 1 ; i < ( arr . length ) ; i ++ ) { final java . lang . String IDENT_6 = arr [ i ] ; if ( IDENT_6 . contains ( STRING_4 ) ) { java . util . regex . IDENT_7 p = java . util . regex . IDENT_7 . METHOD_3 ( STRING_5 ) ; java . util . regex . IDENT_8 m = p . matcher ( IDENT_6 ) ; if ( m . matches ( ) ) { java . nio . IDENT_9 . IDENT_10 IDENT_9 = java . nio . IDENT_9 . IDENT_10 . METHOD_4 ( m . group ( 1 ) ) ; return new org . IDENT_0 . IDENT_1 . bean . METHOD_1 ( IDENT_5 , IDENT_9 ) ; } } } return new org . IDENT_0 . IDENT_1 . bean . METHOD_1 ( IDENT_5 , null ) ; } }
org . junit . Assert . assertEquals ( expResult , result ) 