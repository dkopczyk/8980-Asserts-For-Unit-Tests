METHOD_0 ( ) { java . lang . String expected = org . apache . jackrabbit . util . IDENT_0 . format ( java . util . Calendar . getInstance ( ) ) ; org . apache . jackrabbit . oak . api . IDENT_1 IDENT_2 = org . apache . jackrabbit . oak . plugins . IDENT_3 . IDENT_4 . METHOD_1 ( STRING_0 , expected , Type . IDENT_5 ) ; java . lang . String actual = IDENT_2 . getValue ( Type . IDENT_5 ) ; "<AssertPlaceHolder>" ; } getValue ( java . lang . String ) { if ( IDENT_6 . IDENT_7 . equals ( IDENT_8 ) ) { return org . apache . jackrabbit . oak . plugins . IDENT_3 . IDENT_9 . METHOD_2 ( IDENT_10 . IDENT_11 ) ; } if ( IDENT_8 . startsWith ( IDENT_6 . IDENT_12 ) ) { java . lang . String IDENT_13 = IDENT_8 . substring ( ( ( IDENT_6 . IDENT_12 . length ( ) ) + 1 ) , ( ( IDENT_8 . length ( ) ) - 1 ) ) ; org . apache . solr . client . IDENT_14 . response . IDENT_15 IDENT_16 = null ; for ( org . apache . solr . client . IDENT_14 . response . IDENT_15 IDENT_17 : IDENT_10 . IDENT_18 ) { if ( IDENT_17 . getName ( ) . equals ( ( IDENT_13 + STRING_1 ) ) ) { IDENT_16 = IDENT_17 ; break ; } } if ( IDENT_16 != null ) { org . apache . jackrabbit . oak . commons . json . IDENT_19 writer = new org . apache . jackrabbit . oak . commons . json . METHOD_3 ( ) ; writer . object ( ) ; for ( org . apache . solr . client . IDENT_14 . response . IDENT_15 . IDENT_20 count : IDENT_16 . METHOD_4 ( ) ) { writer . key ( count . getName ( ) ) . value ( count . METHOD_5 ( ) ) ; } writer . METHOD_6 ( ) ; return org . apache . jackrabbit . oak . plugins . IDENT_3 . IDENT_9 . METHOD_7 ( writer . toString ( ) ) ; } else { return null ; } } if ( ( IDENT_6 . IDENT_21 . equals ( IDENT_8 ) ) || ( IDENT_6 . IDENT_22 . equals ( IDENT_8 ) ) ) { return org . apache . jackrabbit . oak . plugins . IDENT_3 . IDENT_9 . METHOD_7 ( IDENT_10 . IDENT_23 ) ; } java . util . Collection < java . lang . Object > IDENT_24 = IDENT_10 . doc . METHOD_8 ( IDENT_8 ) ; java . lang . String value ; if ( ( IDENT_24 != null ) && ( ( IDENT_24 . size ( ) ) > 0 ) ) { if ( ( IDENT_24 . size ( ) ) > 1 ) { value = com . google . common . collect . IDENT_25 . toString ( IDENT_24 ) ; } else { java . lang . Object IDENT_26 = IDENT_10 . doc . METHOD_9 ( IDENT_8 ) ; if ( IDENT_26 != null ) { value = IDENT_26 . toString ( ) ; } else { return null ; } } } else { value = com . google . common . collect . IDENT_25 . toString ( java . util . Collections . emptyList ( ) ) ; } return org . apache . jackrabbit . oak . plugins . IDENT_3 . IDENT_9 . METHOD_7 ( value ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 