METHOD_0 ( ) { final java . lang . String actual = IDENT_0 . METHOD_1 ( IDENT_1 . IDENT_2 . IDENT_3 . model . resource . processor . support . IDENT_4 . IDENT_5 , ( STRING_0 + ( IDENT_1 . IDENT_2 . IDENT_3 . model . resource . processor . support . IDENT_4 . IDENT_6 ) ) ) ; final java . lang . String expected = STRING_1 + ( IDENT_1 . IDENT_2 . IDENT_3 . model . resource . processor . support . IDENT_4 . IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String ) { org . apache . commons . lang3 . IDENT_7 . METHOD_2 ( IDENT_8 ) ; org . apache . commons . lang3 . IDENT_7 . METHOD_2 ( IDENT_9 ) ; if ( org . apache . commons . lang3 . StringUtils . isEmpty ( IDENT_9 ) ) { return IDENT_9 ; } if ( IDENT_1 . IDENT_2 . IDENT_3 . model . resource . IDENT_10 . IDENT_11 . isValid ( IDENT_8 ) ) { if ( IDENT_1 . IDENT_2 . IDENT_3 . model . resource . IDENT_10 . IDENT_11 . isValid ( IDENT_9 ) ) { return METHOD_3 ( IDENT_9 ) ; } if ( IDENT_1 . IDENT_2 . IDENT_3 . model . resource . IDENT_10 . IDENT_11 . METHOD_4 ( IDENT_8 ) ) { return ( context . IDENT_12 ) + ( METHOD_5 ( IDENT_8 , IDENT_9 ) ) ; } final java . lang . String IDENT_13 = METHOD_6 ( context . IDENT_14 ) ; IDENT_1 . IDENT_2 . IDENT_3 . model . resource . processor . support . IDENT_15 . LOG . debug ( STRING_2 , IDENT_13 ) ; java . lang . String IDENT_16 = METHOD_5 ( ( IDENT_13 + IDENT_8 ) , IDENT_9 ) ; if ( IDENT_16 . startsWith ( IDENT_11 . IDENT_17 ) ) { IDENT_16 = METHOD_3 ( IDENT_16 ) ; } IDENT_1 . IDENT_2 . IDENT_3 . model . resource . processor . support . IDENT_15 . LOG . debug ( STRING_3 , IDENT_16 ) ; return IDENT_16 ; } if ( IDENT_1 . IDENT_2 . IDENT_3 . model . resource . IDENT_10 . IDENT_18 . isValid ( IDENT_8 ) ) { final java . lang . String IDENT_19 = ( context . IDENT_12 ) + ( METHOD_5 ( IDENT_8 , IDENT_9 ) ) ; final java . lang . String IDENT_20 = METHOD_3 ( IDENT_9 ) ; return IDENT_1 . IDENT_2 . IDENT_3 . model . resource . IDENT_10 . IDENT_11 . isValid ( IDENT_9 ) ? IDENT_20 : IDENT_19 ; } if ( IDENT_1 . IDENT_2 . IDENT_3 . model . resource . IDENT_10 . IDENT_21 . isValid ( IDENT_8 ) ) { final java . lang . String IDENT_22 = ( IDENT_1 . IDENT_2 . IDENT_3 . model . resource . IDENT_10 . IDENT_11 . isValid ( IDENT_9 ) ) ? METHOD_7 ( IDENT_8 ) : IDENT_8 ; return METHOD_5 ( IDENT_22 , IDENT_9 ) ; } throw new IDENT_1 . IDENT_2 . IDENT_3 . METHOD_8 ( ( ( ( STRING_4 + IDENT_9 ) + STRING_5 ) + IDENT_8 ) ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 