METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; java . lang . String [ ] res = org . apache . jena . query . IDENT_2 . METHOD_1 ( IDENT_0 , IDENT_1 ) ; java . lang . String [ ] exp = new java . lang . String [ ] { } ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String ) { java . lang . String [ ] IDENT_3 = new java . lang . String [ ] { } ; int IDENT_4 = command . indexOf ( IDENT_1 ) ; if ( IDENT_4 > ( - 1 ) ) { java . lang . String IDENT_5 = command . substring ( 0 , IDENT_4 ) . toLowerCase ( ) ; int IDENT_6 = IDENT_5 . METHOD_2 ( org . apache . jena . query . IDENT_2 . IDENT_7 ) ; int IDENT_8 = IDENT_5 . METHOD_2 ( STRING_2 ) ; int IDENT_9 = IDENT_5 . METHOD_2 ( STRING_3 ) ; if ( ( ( IDENT_6 > ( - 1 ) ) && ( IDENT_6 < IDENT_8 ) ) && ( IDENT_9 < IDENT_6 ) ) { java . lang . String IDENT_10 = command . substring ( ( IDENT_6 + ( org . apache . jena . query . IDENT_2 . IDENT_7 . length ( ) ) ) , IDENT_8 ) ; IDENT_3 = IDENT_10 . replaceAll ( STRING_4 , "" ) . trim ( ) . split ( " " ) ; } } return IDENT_3 ; }
org . junit . Assert . assertArrayEquals ( exp , res ) 