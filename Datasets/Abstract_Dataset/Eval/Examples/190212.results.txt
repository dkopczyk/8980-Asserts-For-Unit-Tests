METHOD_0 ( ) { com . IDENT_0 . internal . metadata . IDENT_1 IDENT_2 = com . IDENT_0 . internal . metadata . IDENT_3 . METHOD_1 ( com . IDENT_0 . internal . IDENT_4 . IDENT_5 . class ) ; com . IDENT_0 . internal . IDENT_4 . IDENT_6 < java . lang . Object > properties = com . IDENT_0 . internal . IDENT_4 . IDENT_7 . IDENT_8 . METHOD_2 ( IDENT_2 ) ; com . IDENT_0 . internal . IDENT_4 . IDENT_5 instance = new com . IDENT_0 . internal . IDENT_4 . METHOD_3 ( ) ; java . lang . Object [ ] input = new java . lang . Object [ ] { null , STRING_0 , STRING_1 , null , null } ; properties . METHOD_4 ( instance , input ) ; java . lang . Object [ ] output = properties . METHOD_5 ( instance ) ; java . lang . Object [ ] IDENT_9 = new java . lang . Object [ ] { - 1 , STRING_0 , STRING_1 , 0 , METHOD_3 . IDENT_10 } ; "<AssertPlaceHolder>" ; } equals ( double [ ] , double [ ] ) { if ( ( x == null ) || ( y == null ) ) { return ! ( ( x == null ) OP_0 ( y == null ) ) ; } if ( ( x . length ) != ( y . length ) ) { return false ; } for ( int i = 0 ; i < ( x . length ) ; ++ i ) { if ( ! ( org . IDENT_11 . core . internal . commons . math . util . IDENT_12 . equals ( x [ i ] , y [ i ] ) ) ) { return false ; } } return true ; }
org . junit . Assert . assertTrue ( java . util . Arrays . equals ( IDENT_9 , output ) ) 