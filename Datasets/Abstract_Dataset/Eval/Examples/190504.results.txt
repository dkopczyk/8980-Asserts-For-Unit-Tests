METHOD_0 ( ) { int IDENT_0 = IDENT_1 . execute ( new org . springframework . transaction . support . IDENT_2 < java . lang . Integer > ( ) { @ com . IDENT_3 . IDENT_4 . IDENT_5 . Override public com . IDENT_3 . IDENT_4 . IDENT_5 . Integer METHOD_1 ( org . springframework . transaction . IDENT_6 status ) { try { org . springframework . jdbc . support . IDENT_7 IDENT_8 = new org . springframework . jdbc . support . METHOD_2 ( ) ; IDENT_9 . update ( new org . springframework . jdbc . core . METHOD_3 ( ) { @ com . IDENT_3 . IDENT_4 . IDENT_5 . Override public java . sql . IDENT_10 METHOD_4 ( java . sql . IDENT_11 IDENT_12 ) throws java . sql . IDENT_13 { java . sql . IDENT_10 IDENT_14 = IDENT_12 . METHOD_5 ( STRING_0 , IDENT_15 . IDENT_16 ) ; IDENT_14 . METHOD_6 ( 1 , STRING_1 ) ; return IDENT_14 ; } } , IDENT_8 ) ; if ( ( IDENT_8 . getKey ( ) . METHOD_7 ( ) ) > 0 ) throw new java . lang . Exception ( "" ) ; IDENT_9 . update ( STRING_2 , new java . lang . Object [ ] { STRING_3 , STRING_4 , IDENT_8 . getKey ( ) . METHOD_7 ( ) } ) ; return 1 ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; status . METHOD_8 ( ) ; return 0 ; } } } ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( ) { com . IDENT_3 . IDENT_4 . IDENT_17 . IDENT_18 . IDENT_19 . IDENT_20 IDENT_21 = METHOD_9 ( ) ; com . IDENT_3 . IDENT_4 . IDENT_17 . IDENT_18 . IDENT_22 IDENT_23 = IDENT_21 . tx ; if ( IDENT_23 != null ) { if ( ! ( IDENT_23 . METHOD_10 ( ) ) ) { IDENT_23 . METHOD_8 ( ) ; if ( log . METHOD_11 ( ) ) log . debug ( ( STRING_5 + IDENT_23 ) ) ; return ; } IDENT_21 . tx = null ; } throw new java . lang . IllegalStateException ( STRING_6 ) ; }
org . junit . Assert . assertTrue ( ( IDENT_0 > 0 ) ) 