METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 [ ] IDENT_6 = METHOD_1 ( 0 , 2 ) ; org . IDENT_2 . IDENT_3 . IDENT_4 . client . METHOD_2 ( org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_7 , org . IDENT_2 . IDENT_3 . IDENT_4 . auth , org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_8 , IDENT_0 ) ; org . IDENT_2 . common . IDENT_9 . IDENT_10 IDENT_11 = org . IDENT_2 . IDENT_3 . IDENT_4 . client . METHOD_3 ( IDENT_0 , null , org . IDENT_2 . IDENT_3 . IDENT_4 . options ) ; IDENT_11 . METHOD_4 ( org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_8 , "/" , IDENT_12 . IDENT_13 , 2 , 0 ) ; IDENT_11 . METHOD_5 ( org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_8 , org . IDENT_2 . common . IDENT_9 . IDENT_14 . METHOD_6 ( new org . IDENT_2 . IDENT_15 . IDENT_16 . IDENT_17 . IDENT_18 [ ] { org . IDENT_2 . IDENT_15 . IDENT_16 . IDENT_17 . IDENT_18 . IDENT_19 , org . IDENT_2 . IDENT_15 . IDENT_16 . IDENT_17 . IDENT_18 . IDENT_20 } ) ) ; IDENT_11 . METHOD_7 ( org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_8 , org . IDENT_2 . common . IDENT_9 . IDENT_14 . METHOD_6 ( new org . IDENT_2 . IDENT_15 . IDENT_16 . IDENT_17 . IDENT_18 [ ] { org . IDENT_2 . IDENT_15 . IDENT_16 . IDENT_17 . IDENT_18 . IDENT_20 } ) ) ; org . IDENT_2 . common . IDENT_9 . IDENT_21 file = IDENT_11 . METHOD_8 ( org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_8 , IDENT_1 , org . IDENT_2 . common . IDENT_9 . IDENT_14 . METHOD_9 ( org . IDENT_2 . IDENT_3 . IDENT_22 , org . IDENT_2 . IDENT_3 . IDENT_23 ) , INT_0 ) ; org . IDENT_2 . IDENT_24 . buffer . IDENT_25 IDENT_26 = org . IDENT_2 . IDENT_27 . METHOD_10 ( ( INT_1 * INT_2 ) , ( ( byte ) ( 1 ) ) ) ; file . write ( org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_8 , IDENT_26 . METHOD_11 ( ) , ( INT_1 * INT_2 ) , 0 ) ; IDENT_26 . METHOD_12 ( ) ; file . close ( ) ; METHOD_13 ( IDENT_11 , IDENT_1 , 3 ) ; java . lang . Thread . sleep ( ( ( org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_28 ) + INT_3 ) ) ; IDENT_11 . METHOD_7 ( org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_8 , org . IDENT_2 . common . IDENT_9 . IDENT_14 . METHOD_6 ( new org . IDENT_2 . IDENT_15 . IDENT_16 . IDENT_17 . IDENT_18 [ ] { org . IDENT_2 . IDENT_15 . IDENT_16 . IDENT_17 . IDENT_18 . IDENT_20 , org . IDENT_2 . IDENT_15 . IDENT_16 . IDENT_17 . IDENT_18 . IDENT_29 } ) ) ; IDENT_6 [ 0 ] . METHOD_14 ( ) ; IDENT_6 [ 1 ] . METHOD_14 ( ) ; file = IDENT_11 . METHOD_8 ( org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_8 , IDENT_1 , org . IDENT_2 . common . IDENT_9 . IDENT_14 . METHOD_9 ( org . IDENT_2 . IDENT_3 . IDENT_22 ) ) ; byte [ ] IDENT_30 = new byte [ 1 ] ; file . read ( org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_8 , IDENT_30 , 1 , 0 ) ; file . close ( ) ; IDENT_11 . close ( ) ; "<AssertPlaceHolder>" ; METHOD_15 ( IDENT_6 , 0 ) ; } close ( ) { if ( org . IDENT_2 . IDENT_24 . logging . IDENT_31 . METHOD_16 ( ) ) { org . IDENT_2 . IDENT_24 . logging . IDENT_31 . METHOD_17 ( IDENT_31 . IDENT_32 , this , STRING_2 , org . IDENT_2 . common . IDENT_33 . hadoop . IDENT_34 . class . getName ( ) ) ; } super . close ( ) ; for ( org . IDENT_2 . common . IDENT_9 . IDENT_35 IDENT_36 : IDENT_37 . values ( ) ) { IDENT_36 . close ( ) ; } IDENT_38 . METHOD_18 ( ) ; }
org . junit . Assert . assertEquals ( IDENT_30 [ 0 ] , ( ( byte ) ( 1 ) ) ) 