METHOD_0 ( ) { final javax . IDENT_0 . IDENT_1 IDENT_2 = IDENT_3 . mock ( javax . IDENT_0 . IDENT_1 . class ) ; this . IDENT_3 . METHOD_1 ( new org . IDENT_4 . METHOD_2 ( ) { { METHOD_3 ( IDENT_2 ) . METHOD_4 ( STRING_0 ) ; METHOD_5 ( METHOD_6 ( new java . lang . String [ ] { STRING_1 , STRING_2 } ) ) ; METHOD_3 ( IDENT_2 ) . METHOD_7 ( STRING_0 ) ; METHOD_5 ( METHOD_6 ( STRING_3 ) ) ; } } ) ; org . xwiki . container . IDENT_0 . IDENT_1 request = new org . xwiki . container . IDENT_0 . METHOD_8 ( IDENT_2 ) ; java . util . List < java . lang . Object > values = request . METHOD_9 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( java . lang . String ) { java . util . Properties properties = new java . util . Properties ( ) ; java . io . IDENT_5 IDENT_6 ; try { IDENT_6 = new java . io . METHOD_10 ( path ) ; try { properties . load ( IDENT_6 ) ; } finally { IDENT_6 . close ( ) ; } } catch ( java . io . IDENT_7 e ) { org . xwiki . test . integration . IDENT_8 . LOGGER . debug ( STRING_4 , path , e ) ; } return properties ; }
org . junit . Assert . assertEquals ( java . util . Arrays . asList ( STRING_1 , STRING_2 , STRING_3 ) , values ) 