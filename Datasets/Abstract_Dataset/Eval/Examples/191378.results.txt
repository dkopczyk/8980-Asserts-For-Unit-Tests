METHOD_0 ( ) { com . IDENT_0 . hive . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new com . IDENT_0 . hive . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_7 [ ] IDENT_8 = new org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_7 [ ] { org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_9 . IDENT_10 . IDENT_11 , org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_9 . IDENT_10 . IDENT_12 , org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_13 . METHOD_2 ( IDENT_10 . IDENT_11 ) , org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_13 . METHOD_2 ( IDENT_10 . IDENT_11 ) } ; org . apache . hadoop . hive . IDENT_14 . IDENT_1 . IDENT_15 . IDENT_16 IDENT_17 = new org . apache . hadoop . hive . IDENT_14 . IDENT_1 . IDENT_15 . METHOD_3 ( IDENT_8 , false , false ) ; org . apache . hadoop . hive . IDENT_14 . IDENT_1 . IDENT_15 . IDENT_18 IDENT_19 = IDENT_4 . METHOD_4 ( IDENT_17 ) ; java . util . List < java . lang . String > IDENT_20 = new java . util . ArrayList ( ) ; IDENT_20 . add ( STRING_0 ) ; IDENT_20 . add ( STRING_1 ) ; IDENT_20 . add ( STRING_2 ) ; java . util . List < org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_7 > IDENT_21 = new java . util . ArrayList ( ) ; IDENT_21 . add ( org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_13 . METHOD_2 ( IDENT_10 . IDENT_11 ) ) ; IDENT_21 . add ( org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_13 . METHOD_2 ( IDENT_10 . IDENT_12 ) ) ; IDENT_21 . add ( org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_13 . METHOD_2 ( IDENT_10 . IDENT_11 ) ) ; org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_7 IDENT_22 = org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_13 . METHOD_5 ( IDENT_20 , IDENT_21 ) ; org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_7 [ ] IDENT_23 = new org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_7 [ ] { IDENT_22 } ; org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_7 IDENT_24 = IDENT_19 . init ( IDENT_25 . IDENT_26 , IDENT_23 ) ; java . util . List < java . lang . Object > IDENT_27 = new java . util . ArrayList ( ) ; IDENT_27 . add ( java . util . Arrays . asList ( STRING_3 ) ) ; IDENT_27 . add ( java . util . Arrays . asList ( INT_0 ) ) ; IDENT_27 . add ( java . util . Arrays . asList ( STRING_4 , null , STRING_3 , null , STRING_5 , null , STRING_6 , null ) ) ; java . util . List < java . lang . Object > IDENT_28 = new java . util . ArrayList ( ) ; IDENT_28 . add ( java . util . Arrays . asList ( STRING_5 , STRING_4 ) ) ; IDENT_28 . add ( java . util . Arrays . asList ( INT_1 , INT_2 ) ) ; IDENT_27 . add ( java . util . Arrays . asList ( STRING_4 , null , STRING_3 , null , STRING_5 , null , STRING_6 , null ) ) ; org . apache . hadoop . hive . IDENT_14 . IDENT_1 . IDENT_15 . IDENT_18 . IDENT_29 IDENT_30 = IDENT_19 . METHOD_6 ( ) ; IDENT_19 . METHOD_7 ( IDENT_30 ) ; IDENT_19 . METHOD_8 ( IDENT_30 , IDENT_27 ) ; IDENT_19 . METHOD_8 ( IDENT_30 , IDENT_28 ) ; java . lang . Object result = IDENT_19 . METHOD_9 ( IDENT_30 ) ; java . util . List < java . lang . Object > expected = new java . util . ArrayList ( ) ; expected . add ( java . util . Arrays . asList ( STRING_3 , STRING_5 , STRING_4 ) ) ; expected . add ( java . util . Arrays . asList ( INT_0 , INT_1 , INT_2 ) ) ; expected . add ( java . util . Arrays . asList ( STRING_4 , null , STRING_3 , null , STRING_5 , null , STRING_6 , null ) ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( com . IDENT_0 . hive . IDENT_1 . IDENT_2 . IDENT_29 ) { com . IDENT_0 . hive . IDENT_1 . IDENT_2 . IDENT_31 IDENT_32 = ( ( com . IDENT_0 . hive . IDENT_1 . IDENT_2 . IDENT_31 ) ( IDENT_33 ) ) ; return IDENT_32 . serialize ( ) ; }
org . junit . Assert . assertEquals ( expected , result ) 