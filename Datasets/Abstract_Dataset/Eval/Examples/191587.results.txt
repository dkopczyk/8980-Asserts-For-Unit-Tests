get ( ) { final com . IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_3 index = build ( ) ; final com . IDENT_0 . IDENT_1 . util . mutable . IDENT_4 IDENT_5 = com . IDENT_0 . IDENT_1 . util . mutable . impl . IDENT_6 . METHOD_0 ( IDENT_7 ) ; index . get ( IDENT_5 , 0 ) ; "<AssertPlaceHolder>" ; } get ( long ) { assert ( 0 <= index ) && ( index < ( IDENT_8 ) ) ; final java . nio . ByteBuffer IDENT_9 = IDENT_10 . get ( ) ; try { final int c = ch . read ( IDENT_9 , ( ( this . offset ) + index ) ) ; assert c == ( IDENT_11 . IDENT_12 ) ; } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( e ) ; } return IDENT_9 . get ( 0 ) ; }
org . junit . Assert . assertTrue ( IDENT_5 . get ( 0 ) ) 