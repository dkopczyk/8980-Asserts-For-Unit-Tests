METHOD_0 ( ) { java . util . List < java . lang . String > IDENT_0 = org . IDENT_1 . core . util . Lists . newArrayList ( ) ; IDENT_0 . add ( STRING_0 ) ; IDENT_0 . add ( STRING_1 ) ; final java . lang . Boolean IDENT_2 = IDENT_3 . METHOD_0 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_0 ( java . util . List ) { if ( org . apache . commons . collections . IDENT_4 . isEmpty ( IDENT_5 ) ) { return false ; } try { for ( java . lang . String key : IDENT_5 ) { IDENT_6 . METHOD_1 ( ) . remove ( IDENT_7 . IDENT_8 , key ) ; } final java . util . List < java . lang . String > keys = IDENT_5 . stream ( ) . map ( ( IDENT_9 ) -> java . lang . String . format ( IDENT_7 . IDENT_10 , IDENT_9 ) ) . collect ( java . util . stream . IDENT_11 . toList ( ) ) ; IDENT_6 . delete ( keys ) ; return true ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; return false ; } }
org . junit . Assert . assertNotNull ( IDENT_2 ) 