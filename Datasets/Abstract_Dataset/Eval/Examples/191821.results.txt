METHOD_0 ( ) { try { count = 0 ; IDENT_0 = new java . util . ArrayList ( ) ; for ( int IDENT_1 = 0 ; IDENT_1 < 5 ; IDENT_1 ++ ) { IDENT_0 . add ( new net . IDENT_2 . IDENT_3 . bean . METHOD_1 ( ) ) ; } org . easymock . EasyMock . expect ( IDENT_4 . METHOD_2 ( org . easymock . EasyMock . METHOD_3 ( org . junit . METHOD_1 . class ) ) ) . andReturn ( 1 ) . times ( 5 ) ; control . replay ( ) ; count = IDENT_5 . METHOD_2 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; control . verify ( ) ; control . METHOD_4 ( ) ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( ) ; } } METHOD_2 ( java . util . List ) { int IDENT_6 = 0 ; if ( ( list == null ) || ( ( list . size ( ) ) == 0 ) ) { return IDENT_6 ; } for ( net . IDENT_2 . framework . bean . IDENT_7 obj : list ) { if ( obj == null ) { continue ; } try { IDENT_6 += this . IDENT_8 . METHOD_2 ( obj ) ; } catch ( java . lang . Exception e ) { throw e ; } } return IDENT_6 ; }
org . junit . Assert . assertEquals ( 5 , count ) 