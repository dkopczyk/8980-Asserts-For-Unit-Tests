METHOD_0 ( ) { IDENT_0 . IDENT_1 obj = new IDENT_0 . METHOD_1 ( ) ; obj . METHOD_2 ( STRING_0 . getBytes ( ) , ( ( short ) ( 0 ) ) , ( ( byte ) ( ( IDENT_0 . METHOD_1 . IDENT_2 ) | ( IDENT_0 . METHOD_1 . IDENT_3 ) ) ) , ( ( short ) ( 4 ) ) ) ; byte [ ] res = new byte [ INT_0 ] ; byte [ ] IDENT_4 = STRING_1 . getBytes ( ) ; obj . METHOD_3 ( IDENT_4 , ( ( short ) ( 0 ) ) , ( ( short ) ( IDENT_4 . length ) ) , res , ( ( short ) ( 0 ) ) ) ; byte [ ] expected = new byte [ ] { INT_1 , ( ( byte ) ( INT_2 ) ) , ( ( byte ) ( INT_3 ) ) , INT_4 , ( ( byte ) ( INT_5 ) ) , INT_6 , INT_7 , INT_8 , INT_9 , 4 , INT_10 , INT_11 , 8 , ( ( byte ) ( INT_12 ) ) , INT_7 , ( ( byte ) ( INT_13 ) ) , INT_14 , 0 , INT_15 , 8 , ( ( byte ) ( INT_16 ) ) , INT_17 , INT_18 , ( ( byte ) ( INT_19 ) ) , ( ( byte ) ( INT_16 ) ) , ( ( byte ) ( INT_20 ) ) , INT_21 , ( ( byte ) ( INT_22 ) ) , 100 , ( ( byte ) ( INT_20 ) ) , INT_23 , INT_24 } ; "<AssertPlaceHolder>" ; } METHOD_3 ( byte [ ] , short , short , byte [ ] , short ) { byte [ ] buf = null ; if ( ( ( type ) & ( IDENT_0 . METHOD_1 . IDENT_5 ) ) == ( IDENT_0 . METHOD_1 . IDENT_2 ) ) { if ( ( len > ( IDENT_0 . METHOD_1 . IDENT_6 ) ) || ( len == 0 ) ) { IDENT_7 . framework . IDENT_8 . METHOD_4 ( IDENT_9 . IDENT_10 ) ; } if ( ( ( props ) & ( IDENT_0 . METHOD_1 . IDENT_11 ) ) == ( IDENT_0 . METHOD_1 . IDENT_11 ) ) { short IDENT_12 = ( ( short ) ( ( IDENT_0 . METHOD_1 . IDENT_6 ) - len ) ) ; short i = ( ( IDENT_13 ) < IDENT_12 ) ? IDENT_13 : IDENT_12 ; for ( ; i < ( IDENT_0 . METHOD_1 . IDENT_6 ) ; i ++ ) { if ( i < IDENT_12 ) { if ( ( IDENT_14 [ i ] ) == 0 ) { continue ; } else { IDENT_7 . framework . IDENT_8 . METHOD_4 ( IDENT_9 . IDENT_15 ) ; } } else { break ; } } short IDENT_16 = ( ( short ) ( ( i - IDENT_12 ) + IDENT_17 ) ) ; byte IDENT_18 = IDENT_7 . framework . IDENT_19 . METHOD_5 ( IDENT_20 , IDENT_16 , IDENT_14 , i , len ) ; if ( IDENT_18 == ( - 1 ) ) { IDENT_7 . framework . IDENT_8 . METHOD_4 ( IDENT_9 . IDENT_15 ) ; } IDENT_13 = IDENT_12 ; IDENT_7 . framework . IDENT_19 . METHOD_6 ( IDENT_20 , IDENT_17 , IDENT_14 , IDENT_12 , len ) ; } buf = IDENT_20 ; } else if ( ( ( type ) & ( IDENT_0 . METHOD_1 . IDENT_5 ) ) == ( IDENT_0 . METHOD_1 . IDENT_21 ) ) { IDENT_7 . framework . IDENT_19 . METHOD_7 ( IDENT_0 . METHOD_1 . IDENT_22 , IDENT_0 . METHOD_1 . IDENT_23 , ( ( short ) ( 8 ) ) , ( ( byte ) ( 0 ) ) ) ; if ( ( ( IDENT_24 ) == null ) || ( ( ( ( ( IDENT_24 [ 0 ] ) == 0 ) && ( ( IDENT_24 [ 1 ] ) == 0 ) ) && ( ( IDENT_24 [ 2 ] ) == 0 ) ) && ( ( IDENT_24 [ 3 ] ) == 0 ) ) ) { IDENT_7 . framework . IDENT_19 . METHOD_8 ( IDENT_0 . METHOD_1 . IDENT_22 , ( ( short ) ( 6 ) ) , IDENT_25 ) ; } else { IDENT_7 . framework . IDENT_19 . METHOD_9 ( IDENT_24 , IDENT_0 . METHOD_1 . IDENT_23 , IDENT_0 . METHOD_1 . IDENT_22 , ( ( short ) ( 4 ) ) , IDENT_0 . METHOD_1 . IDENT_26 ) ; short IDENT_27 = 0 ; short IDENT_28 = ( ( short ) ( ( ( IDENT_25 ) > > > 8 ) & 255 ) ) ; short IDENT_29 = ( ( short ) ( ( IDENT_25 ) & 255 ) ) ; for ( byte j = 7 ; j > 0 ; j OP_0 ) { short IDENT_30 = ( ( short ) ( ( IDENT_0 . METHOD_1 . IDENT_22 [ j ] ) & 255 ) ) ; if ( j == 7 ) { IDENT_30 += IDENT_29 ; } else if ( j == 6 ) { IDENT_30 += IDENT_28 ; } IDENT_30 += IDENT_27 ; IDENT_27 = ( ( byte ) ( IDENT_30 > > > 8 ) ) ; IDENT_0 . METHOD_1 . IDENT_22 [ j ] = ( ( byte ) ( IDENT_30 ) ) ; } } ( IDENT_25 ) ++ ; buf = IDENT_0 . METHOD_1 . IDENT_22 ; IDENT_17 = 0 ; len = 8 ; } else { IDENT_7 . framework . IDENT_8 . METHOD_4 ( IDENT_9 . IDENT_31 ) ; } IDENT_32 . METHOD_10 ( ) ; IDENT_32 . update ( IDENT_33 , IDENT_0 . METHOD_1 . IDENT_23 , IDENT_0 . METHOD_1 . IDENT_6 ) ; short IDENT_34 = IDENT_32 . METHOD_11 ( buf , IDENT_17 , len , IDENT_35 , IDENT_36 ) ; IDENT_32 . METHOD_10 ( ) ; IDENT_32 . update ( IDENT_37 , IDENT_0 . METHOD_1 . IDENT_23 , IDENT_0 . METHOD_1 . IDENT_6 ) ; return IDENT_32 . METHOD_11 ( IDENT_35 , IDENT_36 , IDENT_34 , IDENT_35 , IDENT_36 ) ; }
org . junit . Assert . assertArrayEquals ( expected , res ) 