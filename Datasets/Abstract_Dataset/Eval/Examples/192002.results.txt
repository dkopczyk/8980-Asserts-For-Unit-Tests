METHOD_0 ( ) { System . out . METHOD_1 ( STRING_0 ) ; final IDENT_0 . com . IDENT_1 . model . IDENT_2 . IDENT_3 IDENT_4 = IDENT_0 . com . IDENT_1 . model . IDENT_2 . IDENT_3 . METHOD_2 ( ) . build ( ) ; IDENT_4 . METHOD_3 ( STRING_1 ) ; IDENT_4 . METHOD_4 ( STRING_2 ) ; IDENT_4 . METHOD_5 ( STRING_3 ) ; final IDENT_0 . com . IDENT_1 . model . IDENT_2 . IDENT_3 IDENT_5 = IDENT_0 . com . IDENT_1 . model . IDENT_2 . IDENT_3 . METHOD_2 ( ) . build ( ) ; IDENT_5 . METHOD_3 ( STRING_1 ) ; IDENT_5 . METHOD_4 ( STRING_2 ) ; IDENT_5 . METHOD_5 ( STRING_3 ) ; for ( int i = 0 ; i < 10 ; i ++ ) { "<AssertPlaceHolder>" ; } System . out . println ( STRING_4 ) ; } equals ( java . lang . Object ) { boolean result = super . equals ( object ) ; if ( result ) { final IDENT_0 . com . IDENT_1 . model . IDENT_2 . IDENT_3 IDENT_2 = ( ( IDENT_0 . com . IDENT_1 . model . IDENT_2 . IDENT_3 ) ( object ) ) ; result = ( ( this . IDENT_6 . equals ( IDENT_2 . IDENT_6 ) ) && ( this . IDENT_7 . equals ( IDENT_2 . IDENT_7 ) ) ) && ( this . IDENT_8 . equals ( IDENT_2 . IDENT_8 ) ) ; } return result ; }
org . junit . Assert . assertTrue ( IDENT_4 . equals ( IDENT_5 ) ) 