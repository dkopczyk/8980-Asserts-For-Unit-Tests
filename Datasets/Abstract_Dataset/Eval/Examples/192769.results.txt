METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . transaction . IDENT_2 IDENT_3 = org . mockito . Mockito . mock ( com . IDENT_0 . IDENT_1 . transaction . IDENT_2 . class ) ; com . IDENT_0 . IDENT_1 . IDENT_4 command = org . mockito . Mockito . mock ( com . IDENT_0 . IDENT_1 . IDENT_4 . class ) ; org . mockito . Mockito . when ( command . METHOD_1 ( ) ) . thenReturn ( 12 ) ; com . IDENT_0 . IDENT_1 . transaction . IDENT_5 matcher = org . mockito . Mockito . mock ( com . IDENT_0 . IDENT_1 . transaction . IDENT_5 . class ) ; com . IDENT_0 . IDENT_1 . IDENT_4 request = org . mockito . Mockito . mock ( com . IDENT_0 . IDENT_1 . IDENT_4 . class ) ; org . mockito . Mockito . when ( matcher . METHOD_2 ( command , request ) ) . thenReturn ( true ) ; com . IDENT_0 . IDENT_1 . transaction . IDENT_6 IDENT_7 = new com . IDENT_0 . IDENT_1 . transaction . METHOD_3 ( ) ; com . IDENT_0 . IDENT_1 . transaction . IDENT_8 transaction = new com . IDENT_0 . IDENT_1 . transaction . METHOD_4 ( IDENT_3 , command , matcher ) ; transaction . METHOD_5 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; org . mockito . Mockito . verify ( IDENT_3 , org . mockito . Mockito . times ( 1 ) ) . METHOD_6 ( org . mockito . IDENT_9 . any ( com . IDENT_0 . IDENT_1 . transaction . IDENT_10 . class ) , org . mockito . IDENT_9 . METHOD_7 ( ) ) ; transaction . METHOD_8 ( IDENT_11 . IDENT_12 , 12 ) ; org . mockito . Mockito . verify ( IDENT_3 , org . mockito . Mockito . times ( 1 ) ) . METHOD_6 ( org . mockito . IDENT_9 . any ( com . IDENT_0 . IDENT_1 . transaction . IDENT_10 . class ) , org . mockito . IDENT_9 . eq ( INT_0 ) ) ; transaction . METHOD_9 ( request ) ; org . mockito . Mockito . verify ( IDENT_3 , org . mockito . Mockito . METHOD_10 ( ) ) . METHOD_11 ( transaction , IDENT_13 . IDENT_14 ) ; transaction . METHOD_8 ( IDENT_11 . IDENT_15 , 12 ) ; org . mockito . Mockito . verify ( IDENT_3 , org . mockito . Mockito . times ( 1 ) ) . METHOD_11 ( transaction , IDENT_13 . IDENT_14 ) ; } METHOD_12 ( ) { state = com . IDENT_0 . IDENT_1 . transaction . METHOD_4 . IDENT_13 . IDENT_16 ; METHOD_13 ( IDENT_17 ) ; ( IDENT_18 ) ++ ; return command ; }
org . junit . Assert . assertEquals ( command , transaction . METHOD_12 ( ) ) 