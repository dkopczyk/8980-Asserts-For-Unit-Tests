METHOD_0 ( ) { final byte [ ] IDENT_0 = new byte [ ] { ( ( byte ) ( INT_0 ) ) , ( ( byte ) ( INT_1 ) ) , ( ( byte ) ( INT_2 ) ) , ( ( byte ) ( INT_3 ) ) , ( ( byte ) ( INT_4 ) ) , ( ( byte ) ( INT_5 ) ) , ( ( byte ) ( INT_6 ) ) , ( ( byte ) ( INT_7 ) ) , ( ( byte ) ( INT_8 ) ) , ( ( byte ) ( INT_9 ) ) , ( ( byte ) ( INT_10 ) ) , ( ( byte ) ( INT_11 ) ) , ( ( byte ) ( INT_12 ) ) , ( ( byte ) ( INT_13 ) ) , ( ( byte ) ( INT_14 ) ) , ( ( byte ) ( INT_15 ) ) } ; final byte [ ] IDENT_1 = new byte [ ] { ( ( byte ) ( INT_16 ) ) , ( ( byte ) ( INT_17 ) ) , ( ( byte ) ( INT_18 ) ) , ( ( byte ) ( INT_19 ) ) , ( ( byte ) ( INT_3 ) ) , ( ( byte ) ( INT_20 ) ) , ( ( byte ) ( INT_21 ) ) , ( ( byte ) ( INT_22 ) ) , ( ( byte ) ( 6 ) ) , ( ( byte ) ( INT_23 ) ) , ( ( byte ) ( INT_24 ) ) , ( ( byte ) ( INT_11 ) ) , ( ( byte ) ( INT_25 ) ) , ( ( byte ) ( INT_26 ) ) , ( ( byte ) ( INT_27 ) ) , ( ( byte ) ( 15 ) ) } ; final byte [ ] expected = new byte [ ] { ( ( byte ) ( INT_28 ) ) , ( ( byte ) ( INT_29 ) ) , ( ( byte ) ( INT_30 ) ) , ( ( byte ) ( INT_31 ) ) , ( ( byte ) ( INT_32 ) ) , ( ( byte ) ( INT_33 ) ) , ( ( byte ) ( INT_34 ) ) , ( ( byte ) ( INT_35 ) ) , ( ( byte ) ( INT_36 ) ) , ( ( byte ) ( 15 ) ) , ( ( byte ) ( INT_37 ) ) , ( ( byte ) ( 0 ) ) , ( ( byte ) ( INT_38 ) ) , ( ( byte ) ( INT_39 ) ) , ( ( byte ) ( INT_40 ) ) , ( ( byte ) ( INT_41 ) ) , ( ( byte ) ( INT_42 ) ) , ( ( byte ) ( INT_43 ) ) , ( ( byte ) ( 8 ) ) , ( ( byte ) ( INT_44 ) ) , ( ( byte ) ( INT_45 ) ) , ( ( byte ) ( INT_19 ) ) , ( ( byte ) ( INT_46 ) ) , ( ( byte ) ( INT_47 ) ) , ( ( byte ) ( INT_48 ) ) , ( ( byte ) ( INT_49 ) ) , ( ( byte ) ( INT_50 ) ) , ( ( byte ) ( INT_20 ) ) , ( ( byte ) ( INT_51 ) ) , ( ( byte ) ( INT_29 ) ) , ( ( byte ) ( INT_52 ) ) , ( ( byte ) ( INT_53 ) ) , ( ( byte ) ( INT_54 ) ) , ( ( byte ) ( INT_4 ) ) , ( ( byte ) ( INT_48 ) ) , ( ( byte ) ( INT_55 ) ) , ( ( byte ) ( INT_56 ) ) , ( ( byte ) ( INT_9 ) ) , ( ( byte ) ( INT_9 ) ) , ( ( byte ) ( INT_57 ) ) , ( ( byte ) ( INT_58 ) ) , ( ( byte ) ( INT_59 ) ) , ( ( byte ) ( INT_60 ) ) , ( ( byte ) ( INT_44 ) ) , ( ( byte ) ( INT_57 ) ) , ( ( byte ) ( INT_61 ) ) , ( ( byte ) ( INT_62 ) ) , ( ( byte ) ( INT_63 ) ) } ; final byte [ ] result = new org . IDENT_2 . IDENT_3 . METHOD_1 ( ) . METHOD_2 ( IDENT_0 , IDENT_1 , 3 ) ; "<AssertPlaceHolder>" ; }
org . junit . Assert . assertArrayEquals ( expected , result ) 