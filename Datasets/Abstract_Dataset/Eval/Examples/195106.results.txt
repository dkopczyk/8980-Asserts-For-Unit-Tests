METHOD_0 ( ) { boolean IDENT_0 = false ; final javax . persistence . IDENT_1 IDENT_2 = mock ( javax . persistence . IDENT_1 . class ) ; final org . nhindirect . config . store . IDENT_3 domain = mock ( org . nhindirect . config . store . IDENT_3 . class ) ; final org . nhindirect . config . store . dao . IDENT_4 IDENT_5 = mock ( org . nhindirect . config . store . dao . IDENT_4 . class ) ; when ( IDENT_5 . METHOD_1 ( new java . lang . Long ( INT_0 ) ) ) . thenReturn ( domain ) ; final org . nhindirect . config . store . dao . impl . IDENT_6 dao = new org . nhindirect . config . store . dao . impl . METHOD_2 ( ) ; final javax . persistence . Query query = mock ( javax . persistence . Query . class ) ; METHOD_3 ( new javax . persistence . METHOD_4 ( ) ) . when ( query ) . METHOD_5 ( ) ; when ( IDENT_2 . METHOD_6 ( STRING_0 ) ) . thenReturn ( query ) ; dao . METHOD_7 ( IDENT_5 ) ; dao . METHOD_8 ( IDENT_2 ) ; final org . nhindirect . config . store . dao . impl . METHOD_2 IDENT_7 = METHOD_9 ( dao ) ; try { IDENT_7 . METHOD_10 ( INT_0 , INT_1 ) ; } catch ( org . nhindirect . config . store . IDENT_8 e ) { IDENT_0 = true ; } "<AssertPlaceHolder>" ; verify ( IDENT_5 , times ( 1 ) ) . METHOD_1 ( new java . lang . Long ( INT_0 ) ) ; verify ( IDENT_7 , times ( 1 ) ) . METHOD_11 ( INT_1 ) ; verify ( IDENT_2 , METHOD_12 ( ) ) . remove ( ( ( org . nhindirect . config . store . IDENT_9 ) ( any ( ) ) ) ) ; }
org . junit . Assert . assertTrue ( IDENT_0 ) 