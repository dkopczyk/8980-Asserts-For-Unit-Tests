METHOD_0 ( ) { final org . apache . kafka . common . utils . IDENT_0 time = new org . apache . kafka . common . utils . METHOD_1 ( ) ; final org . apache . kafka . IDENT_1 . consumer . IDENT_2 . IDENT_3 IDENT_4 = new org . apache . kafka . IDENT_1 . consumer . IDENT_2 . METHOD_2 ( new org . apache . kafka . common . utils . METHOD_3 ( ) , IDENT_5 . IDENT_6 ) ; final org . apache . kafka . IDENT_1 . consumer . IDENT_2 . IDENT_7 metadata = METHOD_4 ( IDENT_4 ) ; final org . apache . kafka . IDENT_1 . IDENT_8 client = new org . apache . kafka . IDENT_1 . METHOD_5 ( time , metadata ) ; METHOD_6 ( client , java . util . Collections . METHOD_7 ( IDENT_9 , 1 ) ) ; org . apache . kafka . common . Node node = metadata . METHOD_8 ( ) . nodes ( ) . get ( 0 ) ; final org . apache . kafka . IDENT_1 . consumer . IDENT_2 . IDENT_10 IDENT_11 = new org . apache . kafka . IDENT_1 . consumer . METHOD_9 ( ) ; final org . apache . kafka . IDENT_1 . consumer . IDENT_12 < java . lang . String , java . lang . String > consumer = METHOD_10 ( time , client , IDENT_4 , metadata , IDENT_11 , true ) ; consumer . METHOD_11 ( METHOD_12 ( IDENT_9 ) , METHOD_13 ( consumer ) ) ; METHOD_14 ( client , node , IDENT_11 , singletonList ( IDENT_13 ) , null ) ; consumer . METHOD_15 ( IDENT_14 . IDENT_15 ) ; final java . util . IDENT_16 < org . apache . kafka . IDENT_1 . IDENT_17 > IDENT_18 = client . METHOD_16 ( ) ; "<AssertPlaceHolder>" ; } size ( ) { return METHOD_17 ( ) . METHOD_18 ( ) ; }
org . junit . Assert . assertEquals ( 0 , METHOD_16 . size ( ) ) 