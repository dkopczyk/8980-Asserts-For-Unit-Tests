METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; IDENT_1 . METHOD_1 ( METHOD_2 ( IDENT_2 ) , IDENT_3 ) ; METHOD_3 ( IDENT_0 , IDENT_4 , singletonList ( IDENT_5 ) ) ; final java . util . concurrent . atomic . IDENT_6 IDENT_7 = new java . util . concurrent . atomic . METHOD_4 ( false ) ; client . METHOD_5 ( new org . apache . kafka . IDENT_8 . IDENT_9 . METHOD_6 ( ) { @ org . apache . kafka . IDENT_8 . consumer . IDENT_10 . Override public boolean matches ( org . apache . kafka . common . IDENT_11 . IDENT_12 body ) { IDENT_7 . set ( true ) ; org . apache . kafka . common . IDENT_11 . IDENT_13 IDENT_14 = ( ( org . apache . kafka . common . IDENT_11 . IDENT_13 ) ( body ) ) ; return ( IDENT_14 . data ( ) . METHOD_7 ( ) . equals ( IDENT_0 ) ) && ( IDENT_14 . data ( ) . METHOD_8 ( ) . equals ( METHOD_8 ) ) ; } } , new org . apache . kafka . common . IDENT_11 . METHOD_9 ( new org . apache . kafka . common . message . METHOD_10 ( ) . METHOD_11 ( IDENT_15 . IDENT_16 . code ( ) ) ) ) ; IDENT_4 . close ( time . METHOD_12 ( 0 ) ) ; "<AssertPlaceHolder>" ; } get ( ) { return value ; }
org . junit . Assert . assertTrue ( IDENT_7 . get ( ) ) 