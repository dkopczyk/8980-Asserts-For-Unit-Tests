METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; org . apache . kafka . common . IDENT_2 cluster = org . apache . kafka . common . IDENT_2 . METHOD_1 ( java . util . Arrays . asList ( new java . net . METHOD_2 ( IDENT_0 , INT_0 ) , new java . net . METHOD_2 ( IDENT_1 , INT_0 ) ) ) ; java . util . Set < java . lang . String > IDENT_3 = org . apache . kafka . common . utils . Utils . METHOD_3 ( IDENT_0 , IDENT_1 ) ; java . util . Set < java . lang . String > IDENT_4 = new java . util . HashSet ( ) ; for ( org . apache . kafka . common . Node node : cluster . nodes ( ) ) IDENT_4 . add ( node . host ( ) ) ; "<AssertPlaceHolder>" ; } host ( ) { return host ; }
org . junit . Assert . assertEquals ( IDENT_3 , IDENT_4 ) 