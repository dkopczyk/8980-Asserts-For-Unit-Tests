METHOD_0 ( ) { final java . lang . String key = STRING_0 ; org . apache . kafka . common . config . IDENT_0 IDENT_1 = new org . apache . kafka . common . config . METHOD_1 ( ) ; IDENT_1 . METHOD_2 ( key , Type . IDENT_2 , METHOD_1 . IDENT_3 , org . apache . kafka . common . config . METHOD_1 . IDENT_4 . in ( STRING_1 , STRING_2 , STRING_3 ) , IDENT_5 . IDENT_6 , STRING_4 ) ; java . util . Properties props = new java . util . Properties ( ) ; props . put ( key , STRING_1 ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_7 = IDENT_1 . parse ( props ) ; "<AssertPlaceHolder>" ; } get ( org . apache . kafka . connect . data . Field ) { java . lang . Object val = values [ field . index ( ) ] ; if ( ( val == null ) && ( ( field . schema ( ) . METHOD_3 ( ) ) != null ) ) { val = field . schema ( ) . METHOD_3 ( ) ; } return val ; }
org . junit . Assert . assertEquals ( STRING_1 , IDENT_7 . get ( key ) ) 