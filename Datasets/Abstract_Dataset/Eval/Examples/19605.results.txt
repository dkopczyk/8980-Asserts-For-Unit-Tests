METHOD_0 ( ) { java . util . Map < java . lang . String , org . apache . kafka . common . config . IDENT_0 > expected = new java . util . HashMap ( ) ; java . lang . String IDENT_1 = STRING_0 ; java . lang . String IDENT_2 = STRING_1 ; org . apache . kafka . common . config . IDENT_0 IDENT_3 = new org . apache . kafka . common . config . METHOD_1 ( "a" , 1 , java . util . Arrays . < java . lang . Object > asList ( 1 , 2 , 3 ) , java . util . Collections . < java . lang . String > emptyList ( ) ) ; org . apache . kafka . common . config . METHOD_1 IDENT_4 = new org . apache . kafka . common . config . METHOD_1 ( "b" , null , java . util . Arrays . < java . lang . Object > asList ( 4 , 5 ) , java . util . Arrays . asList ( IDENT_1 , IDENT_1 ) ) ; org . apache . kafka . common . config . METHOD_1 IDENT_5 = new org . apache . kafka . common . config . METHOD_1 ( STRING_2 , null , java . util . Arrays . < java . lang . Object > asList ( 4 , 5 ) , java . util . Arrays . asList ( IDENT_2 ) ) ; org . apache . kafka . common . config . METHOD_1 IDENT_6 = new org . apache . kafka . common . config . METHOD_1 ( STRING_3 , 10 , java . util . Arrays . < java . lang . Object > asList ( 1 , 2 , 3 ) , java . util . Collections . < java . lang . String > emptyList ( ) ) ; expected . put ( "a" , IDENT_3 ) ; expected . put ( "b" , IDENT_4 ) ; expected . put ( STRING_2 , IDENT_5 ) ; expected . put ( STRING_3 , IDENT_6 ) ; org . apache . kafka . common . config . IDENT_7 IDENT_8 = new org . apache . kafka . common . config . METHOD_2 ( ) . METHOD_3 ( "a" , Type . IDENT_9 , IDENT_10 . IDENT_11 , STRING_4 , STRING_5 , 1 , IDENT_12 . IDENT_13 , "a" , java . util . Arrays . asList ( "b" , STRING_2 ) , new org . apache . kafka . common . config . IDENT_14 . METHOD_4 ( false ) ) . METHOD_3 ( "b" , Type . IDENT_9 , IDENT_10 . IDENT_11 , STRING_4 , STRING_5 , 2 , IDENT_12 . IDENT_13 , "b" , new org . apache . kafka . common . config . IDENT_14 . METHOD_4 ( true ) ) . METHOD_3 ( STRING_2 , Type . IDENT_9 , IDENT_10 . IDENT_11 , STRING_4 , STRING_5 , 3 , IDENT_12 . IDENT_13 , STRING_2 , new org . apache . kafka . common . config . IDENT_14 . METHOD_4 ( true ) ) . METHOD_3 ( STRING_3 , Type . IDENT_9 , IDENT_10 . IDENT_11 , STRING_4 , STRING_5 , 4 , IDENT_12 . IDENT_13 , STRING_3 , java . util . Arrays . asList ( "b" ) , new org . apache . kafka . common . config . IDENT_14 . METHOD_4 ( false ) ) ; java . util . Map < java . lang . String , java . lang . String > props = new java . util . HashMap ( ) ; props . put ( "a" , "1" ) ; props . put ( STRING_3 , STRING_6 ) ; java . util . List < org . apache . kafka . common . config . METHOD_1 > IDENT_15 = IDENT_8 . validate ( props ) ; for ( org . apache . kafka . common . config . METHOD_1 config : IDENT_15 ) { java . lang . String name = config . name ( ) ; org . apache . kafka . common . config . METHOD_1 IDENT_16 = expected . get ( name ) ; "<AssertPlaceHolder>" ; } } get ( org . apache . kafka . connect . data . Field ) { java . lang . Object val = values [ field . index ( ) ] ; if ( ( val == null ) && ( ( field . schema ( ) . METHOD_5 ( ) ) != null ) ) { val = field . schema ( ) . METHOD_5 ( ) ; } return val ; }
org . junit . Assert . assertEquals ( IDENT_16 , config ) 