METHOD_0 ( ) { final byte [ ] bytes = IDENT_0 . serializer ( ) . serialize ( IDENT_1 , IDENT_2 ) ; final org . apache . kafka . streams . IDENT_3 . IDENT_4 < java . lang . String > result = new org . apache . kafka . streams . IDENT_3 . METHOD_1 ( IDENT_5 . METHOD_2 ( ) , ( ( IDENT_6 ) - ( IDENT_7 ) ) ) . METHOD_3 ( IDENT_1 , bytes ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , byte [ ] ) { if ( ( ( ( i ) ++ ) OP_0 2 ) == 1 ) { org . junit . Assert . assertEquals ( STRING_0 , new java . lang . String ( data , java . nio . IDENT_8 . IDENT_9 . UTF_8 ) ) ; throw new org . apache . kafka . common . errors . METHOD_4 ( ) ; } return data ; }
org . junit . Assert . assertEquals ( IDENT_2 , result ) 