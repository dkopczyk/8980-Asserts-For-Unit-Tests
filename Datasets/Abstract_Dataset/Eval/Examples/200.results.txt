METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . view . IDENT_2 resolver = mock ( com . IDENT_0 . IDENT_1 . view . IDENT_2 . class ) ; registry = METHOD_1 ( registry ) ; registry . METHOD_2 ( java . lang . Throwable . class , resolver ) ; java . lang . IllegalArgumentException first = new java . lang . IllegalArgumentException ( ) ; registry . METHOD_3 ( first ) ; verify ( registry ) . METHOD_4 ( first ) ; verify ( registry ) . METHOD_5 ( first ) ; "<AssertPlaceHolder>" ; java . lang . IllegalArgumentException IDENT_3 = new java . lang . IllegalArgumentException ( ) ; registry . METHOD_3 ( IDENT_3 ) ; verify ( registry ) . METHOD_4 ( IDENT_3 ) ; verify ( registry , times ( 0 ) ) . METHOD_5 ( IDENT_3 ) ; } METHOD_4 ( T ) { java . lang . Class < ? > type = METHOD_6 ( IDENT_4 ) ; MOD_0 ( IDENT_5 ) { return ( ( com . IDENT_0 . IDENT_1 . view . IDENT_2 < T > ) ( IDENT_5 . get ( type ) ) ) ; } }
org . junit . Assert . assertThat ( registry . METHOD_4 ( first ) , is ( resolver ) ) 