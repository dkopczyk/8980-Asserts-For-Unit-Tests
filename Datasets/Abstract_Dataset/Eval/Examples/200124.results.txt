METHOD_0 ( ) { jsprit . core . problem . IDENT_0 . Builder IDENT_1 = IDENT_0 . Builder . newInstance ( ) ; new jsprit . core . problem . io . METHOD_1 ( IDENT_1 ) . read ( STRING_0 ) ; jsprit . core . problem . IDENT_0 IDENT_2 = IDENT_1 . build ( ) ; jsprit . core . algorithm . IDENT_3 IDENT_4 = new jsprit . core . algorithm . IDENT_5 . METHOD_2 ( ) . METHOD_3 ( IDENT_2 ) ; IDENT_4 . METHOD_4 ( 100 ) ; final java . util . List < java . lang . Boolean > IDENT_6 = new java . util . ArrayList < java . lang . Boolean > ( ) ; IDENT_4 . METHOD_5 ( new jsprit . core . algorithm . IDENT_7 . listener . METHOD_6 ( ) { @ jsprit . core . algorithm . Override public void METHOD_7 ( jsprit . core . problem . job . IDENT_8 IDENT_9 , jsprit . core . problem . solution . route . IDENT_10 IDENT_11 , double IDENT_12 , double IDENT_13 ) { if ( IDENT_9 . getId ( ) . equals ( "1" ) ) { if ( IDENT_11 . METHOD_8 ( ) . getId ( ) . equals ( STRING_1 ) ) { IDENT_6 . add ( true ) ; } } if ( IDENT_9 . getId ( ) . equals ( "2" ) ) { if ( IDENT_11 . METHOD_8 ( ) . getId ( ) . equals ( STRING_2 ) ) { IDENT_6 . add ( true ) ; } } } } ) ; @ jsprit . core . algorithm . METHOD_9 ( STRING_3 ) java . util . Collection < jsprit . core . problem . solution . IDENT_14 > IDENT_15 = IDENT_4 . METHOD_10 ( ) ; "<AssertPlaceHolder>" ; }
org . junit . Assert . assertTrue ( IDENT_6 . isEmpty ( ) ) 