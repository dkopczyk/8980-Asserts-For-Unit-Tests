METHOD_0 ( ) { jsprit . core . problem . solution . route . IDENT_0 . Builder IDENT_1 = IDENT_0 . Builder . newInstance ( IDENT_2 , driver ) ; IDENT_1 . METHOD_1 ( IDENT_3 . Builder . newInstance ( "2" ) . METHOD_2 ( 0 , INT_0 ) . METHOD_3 ( jsprit . core . problem . IDENT_4 . newInstance ( "1" ) ) . build ( ) ) ; jsprit . core . problem . solution . route . IDENT_0 route = IDENT_1 . build ( ) ; java . util . Iterator < jsprit . core . problem . solution . route . IDENT_5 . IDENT_6 > IDENT_7 = route . METHOD_4 ( ) . METHOD_5 ( ) ; int count = 0 ; while ( IDENT_7 . hasNext ( ) ) { @ jsprit . core . problem . solution . route . METHOD_6 ( STRING_0 ) jsprit . core . problem . solution . route . IDENT_5 . IDENT_6 IDENT_8 = IDENT_7 . next ( ) ; count ++ ; } "<AssertPlaceHolder>" ; }
org . junit . Assert . assertEquals ( 1 , count ) 