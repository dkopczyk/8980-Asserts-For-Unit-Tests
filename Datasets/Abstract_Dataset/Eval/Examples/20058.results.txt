METHOD_0 ( ) { java . lang . String IDENT_0 = org . apache . IDENT_1 . common . IDENT_2 . METHOD_1 ( ) . toString ( ) ; org . apache . IDENT_1 . query . IDENT_3 . logger . info ( ( STRING_0 + IDENT_0 ) ) ; java . lang . String IDENT_4 = STRING_1 ; java . lang . String sql = STRING_2 ; org . apache . IDENT_1 . query . IDENT_3 . logger . info ( ( STRING_3 + IDENT_4 ) ) ; org . IDENT_5 . database . IDENT_6 IDENT_7 = new org . IDENT_5 . database . METHOD_2 ( IDENT_8 ) ; org . IDENT_5 . dataset . IDENT_9 IDENT_10 = METHOD_3 ( IDENT_7 , IDENT_4 , sql , false ) ; java . lang . String IDENT_11 = java . lang . String . valueOf ( IDENT_10 . getValue ( 0 , STRING_4 ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . IDENT_5 . database . IDENT_6 , java . lang . String , java . lang . String , boolean ) { org . apache . IDENT_1 . common . IDENT_12 . METHOD_4 ( ) ; sql = org . apache . IDENT_1 . query . IDENT_13 . METHOD_5 ( sql , org . apache . IDENT_1 . query . IDENT_13 . IDENT_14 ) ; org . IDENT_5 . dataset . IDENT_9 IDENT_15 = IDENT_16 . METHOD_6 ( ( ( org . apache . IDENT_1 . query . IDENT_13 . IDENT_17 ) + IDENT_4 ) , sql ) ; if ( IDENT_18 ) { java . lang . String [ ] IDENT_19 = new java . lang . String [ IDENT_15 . METHOD_7 ( ) . METHOD_8 ( ) . length ] ; for ( int i = 0 ; i < ( IDENT_19 . length ) ; i ++ ) { IDENT_19 [ i ] = IDENT_15 . METHOD_7 ( ) . METHOD_8 ( ) [ i ] . METHOD_9 ( ) ; } IDENT_15 = new org . IDENT_5 . dataset . METHOD_10 ( IDENT_15 , IDENT_19 ) ; } if ( org . apache . IDENT_1 . query . IDENT_13 . IDENT_20 ) org . apache . IDENT_1 . query . IDENT_13 . METHOD_11 ( IDENT_15 ) ; return IDENT_15 ; }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_11 ) 