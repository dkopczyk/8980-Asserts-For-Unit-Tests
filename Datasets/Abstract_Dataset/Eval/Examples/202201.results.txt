METHOD_0 ( ) { long IDENT_0 ; long IDENT_1 ; long IDENT_2 = 0 ; long IDENT_3 = 0 ; for ( int j = 0 ; j < 50 ; j ++ ) { for ( int i = 0 ; i < ( org . IDENT_4 . media . core . concurrent . IDENT_5 . size ) ; i ++ ) { IDENT_6 [ i ] = new org . IDENT_4 . media . core . concurrent . IDENT_5 . METHOD_1 ( ( ( org . IDENT_4 . media . core . concurrent . IDENT_5 . IDENT_7 ) * i ) ) ; IDENT_8 [ i ] = new org . IDENT_4 . media . core . concurrent . IDENT_5 . METHOD_2 ( ( ( org . IDENT_4 . media . core . concurrent . IDENT_5 . IDENT_7 ) * i ) ) ; IDENT_9 [ i ] = new org . IDENT_4 . media . core . concurrent . IDENT_5 . METHOD_3 ( ) ; IDENT_10 [ i ] = new org . IDENT_4 . media . core . concurrent . IDENT_5 . METHOD_4 ( ) ; } IDENT_11 = new java . util . concurrent . METHOD_5 ( ( 1 - ( org . IDENT_4 . media . core . concurrent . IDENT_5 . size ) ) ) ; IDENT_12 . set ( 0 ) ; IDENT_1 = java . lang . System . currentTimeMillis ( ) ; for ( int i = 0 ; i < ( org . IDENT_4 . media . core . concurrent . IDENT_5 . size ) ; i ++ ) { IDENT_8 [ i ] . start ( ) ; IDENT_10 [ i ] . start ( ) ; } try { IDENT_11 . METHOD_6 ( ) ; } catch ( java . lang . Exception ex ) { } java . lang . System . METHOD_7 ( ) ; IDENT_0 = java . lang . System . currentTimeMillis ( ) ; IDENT_2 += IDENT_0 - IDENT_1 ; IDENT_11 = new java . util . concurrent . METHOD_5 ( ( 1 - ( org . IDENT_4 . media . core . concurrent . IDENT_5 . size ) ) ) ; IDENT_12 . set ( 0 ) ; IDENT_1 = java . lang . System . currentTimeMillis ( ) ; for ( int i = 0 ; i < ( org . IDENT_4 . media . core . concurrent . IDENT_5 . size ) ; i ++ ) { IDENT_6 [ i ] . start ( ) ; IDENT_9 [ i ] . start ( ) ; } try { IDENT_11 . METHOD_6 ( ) ; } catch ( java . lang . Exception ex ) { } java . lang . System . METHOD_7 ( ) ; IDENT_0 = java . lang . System . currentTimeMillis ( ) ; IDENT_3 += IDENT_0 - IDENT_1 ; } "<AssertPlaceHolder>" ; System . out . println ( ( STRING_0 + IDENT_3 ) ) ; System . out . println ( ( STRING_1 + IDENT_2 ) ) ; }
org . junit . Assert . assertTrue ( ( IDENT_2 > IDENT_3 ) ) 