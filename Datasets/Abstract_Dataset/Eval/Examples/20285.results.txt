METHOD_0 ( ) { final java . lang . Throwable IDENT_0 = new java . lang . IllegalArgumentException ( STRING_0 ) ; final org . apache . logging . log4j . core . impl . IDENT_1 proxy = new org . apache . logging . log4j . core . impl . METHOD_1 ( IDENT_0 ) ; final java . lang . String IDENT_2 = STRING_1 ; final java . lang . String IDENT_3 = proxy . METHOD_2 ( null , org . apache . logging . log4j . core . pattern . IDENT_4 . getInstance ( ) , STRING_1 , IDENT_5 . IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , java . lang . String ) { final java . lang . String [ ] IDENT_7 = text . split ( "\n" ) ; for ( final java . lang . String line : IDENT_7 ) { if ( line . isEmpty ( ) ) { continue ; } if ( ! ( line . contains ( IDENT_8 ) ) ) { return false ; } } return true ; }
org . junit . Assert . assertTrue ( IDENT_3 , METHOD_3 ( IDENT_3 , IDENT_2 ) ) 