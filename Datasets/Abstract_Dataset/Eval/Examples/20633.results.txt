METHOD_0 ( ) { java . io . File IDENT_0 = IDENT_1 . METHOD_1 ( ) ; for ( int i = 1 ; i < 200 ; i ++ ) { METHOD_2 ( ) ; METHOD_3 ( ) ; org . apache . maven . shared . utils . io . IDENT_2 . METHOD_4 ( IDENT_0 ) ; } int IDENT_3 = INT_0 ; long IDENT_4 = java . lang . System . METHOD_5 ( ) ; for ( int i = 1 ; i < IDENT_3 ; i ++ ) { METHOD_2 ( ) ; METHOD_3 ( ) ; org . apache . maven . shared . utils . io . IDENT_2 . METHOD_4 ( IDENT_0 ) ; IDENT_0 . METHOD_6 ( ) ; } long IDENT_5 = java . lang . System . METHOD_5 ( ) ; long IDENT_6 = IDENT_5 - IDENT_4 ; System . out . println ( ( STRING_0 + IDENT_6 ) ) ; IDENT_4 = java . lang . System . METHOD_5 ( ) ; for ( int i = 1 ; i < IDENT_3 ; i ++ ) { METHOD_2 ( ) ; org . apache . maven . shared . utils . io . IDENT_7 IDENT_8 = new org . apache . maven . shared . utils . io . METHOD_7 ( ) ; IDENT_8 . METHOD_8 ( IDENT_0 ) ; IDENT_8 . METHOD_9 ( ) ; java . lang . String [ ] IDENT_9 = IDENT_8 . METHOD_10 ( ) ; METHOD_3 ( ) ; IDENT_8 . METHOD_9 ( ) ; org . apache . maven . shared . utils . io . IDENT_10 IDENT_11 = IDENT_8 . METHOD_11 ( IDENT_9 ) ; "<AssertPlaceHolder>" ; org . apache . maven . shared . utils . io . IDENT_2 . METHOD_4 ( IDENT_0 ) ; IDENT_0 . METHOD_6 ( ) ; } IDENT_5 = java . lang . System . METHOD_5 ( ) ; long IDENT_12 = IDENT_5 - IDENT_4 ; System . out . println ( ( STRING_1 + IDENT_12 ) ) ; long IDENT_13 = IDENT_12 - IDENT_6 ; System . out . println ( ( STRING_2 + IDENT_13 ) ) ; } METHOD_11 ( java . lang . String [ ] ) { if ( ( IDENT_14 ) == null ) { METHOD_9 ( ) ; } return org . apache . maven . shared . utils . io . METHOD_7 . METHOD_12 ( IDENT_9 , IDENT_14 . toArray ( new java . lang . String [ IDENT_14 . size ( ) ] ) ) ; }
org . junit . Assert . assertNotNull ( IDENT_11 ) 