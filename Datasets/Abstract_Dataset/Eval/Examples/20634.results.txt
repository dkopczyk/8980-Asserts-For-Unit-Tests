METHOD_0 ( ) { org . junit . IDENT_0 . METHOD_1 ( org . apache . maven . shared . utils . io . IDENT_1 . METHOD_2 ( ) ) ; org . junit . IDENT_0 . METHOD_3 ( org . apache . maven . shared . utils . IDENT_2 . METHOD_4 ( IDENT_2 . IDENT_3 ) ) ; java . io . File IDENT_4 = new java . io . File ( IDENT_5 . METHOD_5 ( ) , STRING_0 ) ; java . io . File IDENT_6 = org . apache . maven . shared . utils . io . IDENT_7 . METHOD_6 ( new java . io . File ( STRING_1 ) ) ; org . apache . maven . shared . utils . io . IDENT_8 . METHOD_7 ( new java . io . File ( IDENT_6 , STRING_2 ) , IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( java . io . File ) { try { java . lang . Object path = org . apache . maven . shared . utils . io . IDENT_1 . IDENT_9 . invoke ( file ) ; return ( ( java . lang . Boolean ) ( org . apache . maven . shared . utils . io . IDENT_1 . IDENT_10 . invoke ( null , path ) ) ) ; } catch ( java . lang . IDENT_11 e ) { throw new java . lang . RuntimeException ( e ) ; } catch ( java . lang . reflect . IDENT_12 e ) { throw new java . lang . RuntimeException ( e ) ; } }
org . junit . Assert . assertTrue ( org . apache . maven . shared . utils . io . IDENT_1 . METHOD_8 ( IDENT_4 ) ) 