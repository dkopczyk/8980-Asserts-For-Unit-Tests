METHOD_0 ( ) { org . apache . maven . IDENT_0 . IDENT_1 session = mock ( org . apache . maven . IDENT_0 . IDENT_1 . class ) ; org . apache . maven . IDENT_0 . IDENT_2 IDENT_3 = new org . apache . maven . IDENT_0 . METHOD_1 ( ) ; java . util . Map < java . lang . String , java . util . List < org . apache . maven . IDENT_4 . model . IDENT_5 > > IDENT_6 = new java . util . HashMap ( ) ; IDENT_6 . put ( STRING_0 , java . util . Arrays . asList ( new org . apache . maven . IDENT_4 . model . METHOD_2 ( ) , new org . apache . maven . IDENT_4 . model . METHOD_2 ( ) ) ) ; IDENT_6 . put ( STRING_1 , java . util . Collections . singletonList ( new org . apache . maven . IDENT_4 . model . METHOD_2 ( ) ) ) ; IDENT_3 . METHOD_3 ( IDENT_6 ) ; when ( session . METHOD_4 ( ) ) . thenReturn ( IDENT_3 ) ; org . apache . maven . IDENT_4 . IDENT_7 IDENT_8 = mock ( org . apache . maven . IDENT_4 . IDENT_7 . class ) ; when ( IDENT_8 . METHOD_5 ( org . mockito . IDENT_9 . < java . lang . String , java . lang . String > METHOD_6 ( ) ) ) . thenReturn ( false ) . thenReturn ( true ) ; when ( IDENT_10 . METHOD_7 ( METHOD_8 ( org . apache . maven . IDENT_4 . model . METHOD_2 . class ) ) ) . thenReturn ( IDENT_8 ) ; java . util . List < org . apache . maven . IDENT_4 . IDENT_11 > IDENT_12 = IDENT_13 . METHOD_9 ( session , STRING_0 , java . util . Collections . METHOD_10 ( STRING_2 , "value" ) ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_14 . size ( ) ; }
org . junit . Assert . assertEquals ( 1 , IDENT_12 . size ( ) ) 