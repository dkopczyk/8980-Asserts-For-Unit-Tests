METHOD_0 ( ) { boolean actual = executor . execute ( STRING_0 , message , org . apache . IDENT_0 . IDENT_1 . common . Boolean . class ) ; "<AssertPlaceHolder>" ; } execute ( java . lang . String , java . util . Map , java . lang . Class ) { java . lang . Object IDENT_2 = execute ( expression , state ) ; T result = org . apache . IDENT_0 . IDENT_1 . common . utils . IDENT_3 . convert ( IDENT_2 , clazz ) ; if ( result == null ) { throw new java . lang . IllegalArgumentException ( java . lang . String . format ( STRING_1 , clazz . METHOD_1 ( ) , org . apache . commons . lang . IDENT_4 . METHOD_2 ( IDENT_2 , STRING_2 ) , expression ) ) ; } return result ; }
org . junit . Assert . assertThat ( actual , org . hamcrest . CoreMatchers . equalTo ( true ) ) 