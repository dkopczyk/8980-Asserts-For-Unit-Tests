METHOD_0 ( ) { org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 < java . lang . Double > IDENT_4 = mock ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . class ) ; when ( IDENT_4 . getValue ( ) ) . thenReturn ( null ) ; org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 < java . lang . Double > IDENT_5 = mock ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . class ) ; when ( IDENT_5 . getValue ( ) ) . thenReturn ( null ) ; org . apache . IDENT_0 . IDENT_1 . common . IDENT_6 . IDENT_7 . IDENT_8 op = mock ( IDENT_7 . IDENT_8 . class ) ; when ( op . METHOD_1 ( ) ) . thenReturn ( mock ( org . antlr . v4 . runtime . tree . IDENT_9 . class ) ) ; boolean IDENT_10 = IDENT_11 . evaluate ( IDENT_4 , IDENT_5 , op ) ; "<AssertPlaceHolder>" ; } evaluate ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 , org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 , org . apache . IDENT_0 . IDENT_1 . common . IDENT_6 . IDENT_12 ) { if ( ( ( IDENT_4 . getValue ( ) ) == null ) || ( ( IDENT_5 . getValue ( ) ) == null ) ) { return false ; } else if ( ( ( IDENT_4 . getValue ( ) ) instanceof java . lang . IDENT_13 ) && ( ( IDENT_5 . getValue ( ) ) instanceof java . lang . IDENT_13 ) ) { return METHOD_2 ( ( ( java . lang . IDENT_13 ) ( IDENT_4 . getValue ( ) ) ) , ( ( java . lang . IDENT_13 ) ( IDENT_5 . getValue ( ) ) ) , op ) ; } else if ( ( ( ( IDENT_4 . getValue ( ) . getClass ( ) ) == ( IDENT_5 . getValue ( ) . getClass ( ) ) ) && ( ( IDENT_4 . getValue ( ) ) instanceof java . lang . IDENT_14 ) ) && ( ( IDENT_5 . getValue ( ) ) instanceof java . lang . IDENT_14 ) ) { return compare ( ( ( java . lang . IDENT_14 < ? > ) ( IDENT_4 . getValue ( ) ) ) , ( ( java . lang . IDENT_14 < ? > ) ( IDENT_5 . getValue ( ) ) ) , op ) ; } throw new org . apache . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_3 ( ( ( ( STRING_0 + ( IDENT_4 . getValue ( ) ) ) + op ) + ( IDENT_5 . getValue ( ) ) ) ) ; }
org . junit . Assert . assertTrue ( IDENT_10 ) 