METHOD_0 ( ) { java . lang . String expression = java . lang . String . format ( STRING_0 , IDENT_0 , IDENT_1 ) ; java . util . Map < java . lang . String , java . lang . Object > actual = ( ( java . util . Map < java . lang . String , java . lang . Object > ) ( run ( expression , context ) ) ) ; "<AssertPlaceHolder>" ; } run ( org . apache . IDENT_2 . framework . IDENT_3 , org . apache . commons . cli . IDENT_4 ) { final boolean IDENT_5 = org . apache . IDENT_6 . common . cli . IDENT_7 . IDENT_8 . IDENT_9 . METHOD_1 ( cli ) ; java . lang . String IDENT_10 = org . apache . IDENT_6 . common . cli . IDENT_7 . IDENT_8 . IDENT_11 . get ( cli ) ; java . util . Optional < java . lang . String > IDENT_12 = java . util . Optional . METHOD_2 ( org . apache . IDENT_6 . common . cli . IDENT_7 . IDENT_8 . IDENT_13 . get ( cli ) ) ; java . util . Optional < java . lang . String > IDENT_14 = java . util . Optional . METHOD_2 ( org . apache . IDENT_6 . common . cli . IDENT_7 . IDENT_8 . IDENT_15 . get ( cli ) ) ; switch ( IDENT_10 . toLowerCase ( ) ) { case STRING_1 : java . lang . String IDENT_16 = org . apache . IDENT_6 . common . cli . IDENT_7 . IDENT_8 . IDENT_17 . get ( cli ) ; if ( org . apache . commons . lang3 . StringUtils . isEmpty ( IDENT_16 ) ) { throw new java . lang . IllegalArgumentException ( STRING_2 ) ; } if ( IDENT_12 . METHOD_3 ( ) ) { METHOD_4 ( IDENT_16 , client , org . apache . IDENT_6 . common . configuration . IDENT_18 . valueOf ( IDENT_12 . get ( ) ) , IDENT_14 ) ; } else { METHOD_4 ( IDENT_16 , client ) ; } break ; case STRING_3 : if ( IDENT_12 . METHOD_3 ( ) ) { METHOD_5 ( client , org . apache . IDENT_6 . common . configuration . IDENT_18 . valueOf ( IDENT_12 . get ( ) ) , IDENT_14 ) ; } else { METHOD_5 ( client ) ; } break ; case STRING_4 : METHOD_6 ( client , org . apache . IDENT_6 . common . cli . IDENT_7 . IDENT_8 . IDENT_19 . get ( cli ) , IDENT_5 ) ; break ; case STRING_5 : if ( IDENT_12 . METHOD_3 ( ) ) { java . util . Optional < java . lang . String > IDENT_20 = java . util . Optional . METHOD_2 ( org . apache . IDENT_6 . common . cli . IDENT_7 . IDENT_8 . IDENT_21 . get ( cli ) ) ; java . util . Optional < java . lang . String > IDENT_22 = java . util . Optional . METHOD_2 ( org . apache . IDENT_6 . common . cli . IDENT_7 . IDENT_8 . IDENT_23 . get ( cli ) ) ; java . util . Optional < java . lang . String > IDENT_24 = java . util . Optional . METHOD_2 ( org . apache . IDENT_6 . common . cli . IDENT_7 . IDENT_8 . IDENT_25 . get ( cli ) ) ; java . util . Optional < java . lang . String > IDENT_26 = java . util . Optional . METHOD_2 ( org . apache . IDENT_6 . common . cli . IDENT_7 . IDENT_8 . IDENT_27 . get ( cli ) ) ; METHOD_7 ( client , org . apache . IDENT_6 . common . configuration . IDENT_18 . valueOf ( IDENT_12 . get ( ) ) , IDENT_14 , IDENT_22 , IDENT_20 , IDENT_24 , IDENT_26 ) ; } else { throw new java . lang . IllegalArgumentException ( STRING_6 ) ; } break ; default : throw new java . lang . IllegalStateException ( ( ( STRING_7 + IDENT_10 ) + STRING_8 ) ) ; } }
org . junit . Assert . assertNull ( actual ) 