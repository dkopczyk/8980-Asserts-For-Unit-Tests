METHOD_0 ( ) { METHOD_1 ( true ) ; java . lang . String IDENT_0 = STRING_0 ; org . apache . nifi . IDENT_1 . commons . status . IDENT_2 actual = org . apache . nifi . IDENT_1 . status . IDENT_3 . getStatus ( IDENT_4 , IDENT_0 , org . IDENT_5 . IDENT_6 . METHOD_2 ( org . apache . nifi . IDENT_1 . status . IDENT_7 . class ) ) ; org . apache . nifi . IDENT_1 . commons . status . IDENT_2 expected = new org . apache . nifi . IDENT_1 . commons . status . METHOD_3 ( ) ; expected . METHOD_4 ( Collections . IDENT_8 ) ; METHOD_5 ( expected , false , false , true , true ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( org . apache . nifi . IDENT_1 . commons . status . METHOD_3 , boolean , boolean , boolean , boolean ) { org . apache . nifi . IDENT_1 . commons . status . instance . IDENT_9 IDENT_10 = new org . apache . nifi . IDENT_1 . commons . status . instance . METHOD_6 ( ) ; if ( IDENT_11 ) { org . apache . nifi . IDENT_1 . commons . status . instance . IDENT_12 IDENT_13 = new org . apache . nifi . IDENT_1 . commons . status . instance . METHOD_7 ( ) ; IDENT_13 . METHOD_8 ( 1L ) ; IDENT_13 . METHOD_9 ( 2 ) ; IDENT_13 . METHOD_10 ( 3 ) ; IDENT_13 . METHOD_11 ( IDENT_14 ) ; IDENT_10 . METHOD_12 ( IDENT_13 ) ; } if ( IDENT_15 ) { if ( IDENT_14 ) { org . apache . nifi . IDENT_1 . commons . status . common . IDENT_16 IDENT_17 = new org . apache . nifi . IDENT_1 . commons . status . common . METHOD_13 ( ) ; IDENT_17 . METHOD_14 ( STRING_1 ) ; IDENT_17 . METHOD_15 ( new java . util . Date ( INT_0 ) ) ; IDENT_10 . METHOD_16 ( java . util . Collections . singletonList ( IDENT_17 ) ) ; } else { IDENT_10 . METHOD_16 ( Collections . IDENT_8 ) ; } } if ( IDENT_18 ) { org . apache . nifi . IDENT_1 . commons . status . instance . IDENT_19 IDENT_20 = new org . apache . nifi . IDENT_1 . commons . status . instance . METHOD_17 ( ) ; IDENT_20 . METHOD_18 ( 1L ) ; IDENT_20 . METHOD_19 ( INT_1 ) ; IDENT_20 . METHOD_20 ( INT_2 ) ; IDENT_20 . METHOD_21 ( 4 ) ; IDENT_20 . METHOD_22 ( INT_3 ) ; IDENT_20 . METHOD_23 ( 6 ) ; IDENT_20 . METHOD_24 ( INT_4 ) ; IDENT_20 . METHOD_25 ( 8 ) ; IDENT_10 . METHOD_26 ( IDENT_20 ) ; } IDENT_21 . METHOD_27 ( IDENT_10 ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 