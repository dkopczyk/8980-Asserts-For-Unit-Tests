METHOD_0 ( ) { IDENT_0 = new IDENT_1 . IDENT_2 . IDENT_3 . config . factory . METHOD_1 ( IDENT_4 ) { @ IDENT_1 . IDENT_2 . IDENT_3 . config . factory . Override MOD_0 java . lang . String METHOD_2 ( ) { return STRING_0 ; } } ; "<AssertPlaceHolder>" ; } create ( ) { if ( ( IDENT_5 ) == null ) { IDENT_5 = METHOD_3 ( ) ; } if ( ( IDENT_5 ) != null ) { final java . lang . StringBuffer IDENT_6 = new java . lang . StringBuffer ( ) ; for ( final IDENT_1 . IDENT_2 . IDENT_3 . model . factory . IDENT_7 factory : IDENT_5 ) { try { IDENT_8 . METHOD_4 ( factory ) ; final java . lang . Class < ? extends IDENT_1 . IDENT_2 . IDENT_3 . model . factory . IDENT_7 > IDENT_9 = factory . getClass ( ) . METHOD_5 ( IDENT_1 . IDENT_2 . IDENT_3 . model . factory . IDENT_7 . class ) ; IDENT_6 . append ( ( ( STRING_1 + ( METHOD_6 ( IDENT_9 ) ) ) + STRING_2 ) ) ; return factory . create ( ) ; } catch ( final IDENT_1 . IDENT_2 . IDENT_3 . IDENT_10 e ) { IDENT_1 . IDENT_2 . IDENT_3 . IDENT_11 . model . factory . IDENT_12 . LOG . debug ( STRING_3 , e . METHOD_7 ( ) ) ; IDENT_6 . append ( ( ( STRING_4 + ( METHOD_6 ( factory . getClass ( ) ) ) ) + STRING_5 ) ) ; IDENT_6 . append ( ( ( ( STRING_6 + ( METHOD_6 ( factory . getClass ( ) ) ) ) + " " ) + ( e . getMessage ( ) ) ) ) ; if ( ( ! ( IDENT_13 ) ) && ( ( e . METHOD_7 ( ) ) instanceof java . io . IOException ) ) { throw e ; } } } IDENT_1 . IDENT_2 . IDENT_3 . IDENT_11 . model . factory . IDENT_12 . LOG . error ( IDENT_6 . toString ( ) ) ; } throw new IDENT_1 . IDENT_2 . IDENT_3 . METHOD_8 ( STRING_7 ) ; }
org . junit . Assert . assertNotNull ( IDENT_0 . create ( ) ) 