METHOD_0 ( ) { final org . apache . nifi . IDENT_0 . IDENT_1 < org . IDENT_0 . IDENT_2 > repo = METHOD_1 ( ) ; final java . util . List < org . IDENT_0 . IDENT_2 > records = new java . util . ArrayList ( ) ; for ( int i = 0 ; i < 10 ; i ++ ) { final org . IDENT_0 . IDENT_2 record = new org . IDENT_0 . METHOD_2 ( java . lang . String . valueOf ( i ) , org . IDENT_0 . IDENT_3 . IDENT_4 ) ; records . add ( record ) ; } repo . update ( records , false ) ; repo . METHOD_3 ( ) ; final org . apache . nifi . IDENT_0 . IDENT_1 < org . IDENT_0 . METHOD_2 > IDENT_5 = METHOD_4 ( ) ; final java . util . Collection < org . IDENT_0 . METHOD_2 > IDENT_6 = IDENT_5 . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { if ( IDENT_6 ) { throw new java . lang . IllegalStateException ( STRING_0 ) ; } org . apache . nifi . IDENT_0 . IDENT_1 . logger . info ( STRING_1 , IDENT_7 ) ; final long IDENT_8 = java . lang . System . METHOD_6 ( ) ; IDENT_6 = true ; IDENT_9 = IDENT_10 . METHOD_7 ( ) ; this . IDENT_11 . addAll ( IDENT_9 . METHOD_8 ( ) ) ; final long IDENT_12 = TimeUnit . IDENT_13 . METHOD_9 ( ( ( java . lang . System . METHOD_6 ( ) ) - IDENT_8 ) ) ; final java . util . Map < java . lang . Object , T > IDENT_14 = IDENT_9 . METHOD_10 ( ) ; final java . util . Set < java . lang . String > IDENT_15 = IDENT_9 . METHOD_8 ( ) ; final java . io . File [ ] IDENT_16 = IDENT_17 . METHOD_11 ( this :: IDENT_18 ) ; if ( IDENT_16 == null ) { throw new java . io . IOException ( ( ( STRING_2 0 + ( IDENT_17 ) ) + STRING_3 ) ) ; } if ( ( IDENT_9 . METHOD_12 ( ) ) == null ) { org . apache . nifi . IDENT_0 . IDENT_1 . logger . info ( STRING_4 , IDENT_7 , IDENT_16 . length ) ; } else { org . apache . nifi . IDENT_0 . IDENT_1 . logger . info ( STRING_5 , IDENT_14 . size ( ) , IDENT_15 . size ( ) , IDENT_9 . METHOD_12 ( ) , IDENT_9 . METHOD_13 ( ) , IDENT_12 , IDENT_16 . length ) ; } final java . util . List < java . io . File > IDENT_19 = java . util . Arrays . asList ( IDENT_16 ) ; java . util . Collections . METHOD_14 ( IDENT_19 , new java . util . IDENT_20 < java . io . File > ( ) { @ org . apache . nifi . IDENT_0 . Override public int compare ( final java . io . File IDENT_21 , final java . io . File IDENT_22 ) { final long IDENT_23 = METHOD_15 ( IDENT_21 ) ; final long IDENT_24 = METHOD_15 ( IDENT_22 ) ; return java . lang . Long . compare ( IDENT_23 , IDENT_24 ) ; } } ) ; final long IDENT_25 = IDENT_9 . METHOD_13 ( ) ; int IDENT_26 = 0 ; int IDENT_27 = 0 ; int IDENT_28 = 0 ; long IDENT_29 = IDENT_25 ; for ( final java . io . File IDENT_30 : IDENT_19 ) { final long IDENT_31 = METHOD_15 ( IDENT_30 ) ; if ( IDENT_31 < IDENT_25 ) { org . apache . nifi . IDENT_0 . IDENT_1 . logger . debug ( STRING_2 , IDENT_30 , IDENT_31 , IDENT_25 ) ; IDENT_28 ++ ; continue ; } org . apache . nifi . IDENT_0 . IDENT_1 . logger . debug ( STRING_6 , IDENT_30 , IDENT_31 ) ; IDENT_27 ++ ; try ( final org . apache . nifi . IDENT_0 . IDENT_32 < T > IDENT_33 = new org . apache . nifi . IDENT_0 . METHOD_16 ( IDENT_30 , IDENT_34 , IDENT_35 , 0L ) ) { final org . apache . nifi . IDENT_0 . IDENT_36 IDENT_37 = IDENT_33 . METHOD_5 ( IDENT_14 , IDENT_15 ) ; final int IDENT_38 = IDENT_37 . METHOD_17 ( ) ; org . apache . nifi . IDENT_0 . IDENT_1 . logger . debug ( STRING_7 , IDENT_38 , IDENT_30 ) ; IDENT_26 += IDENT_38 ; IDENT_29 = java . lang . Math . max ( IDENT_29 , IDENT_37 . METHOD_13 ( ) ) ; } } org . apache . nifi . IDENT_0 . IDENT_1 . logger . debug ( STRING_8 , IDENT_26 , IDENT_27 , IDENT_28 ) ; this . IDENT_39 = IDENT_29 + 1 ; final long IDENT_40 = ( java . lang . System . METHOD_6 ( ) ) - IDENT_8 ; final long IDENT_41 = TimeUnit . IDENT_42 . convert ( IDENT_40 , TimeUnit . IDENT_13 ) ; org . apache . nifi . IDENT_0 . IDENT_1 . logger . info ( STRING_9 , IDENT_14 . size ( ) , IDENT_41 ) ; this . IDENT_11 . addAll ( IDENT_15 ) ; METHOD_18 ( this . IDENT_11 ) ; return IDENT_14 . values ( ) ; }
org . junit . Assert . assertEquals ( new java . util . HashSet ( records ) , new java . util . HashSet ( IDENT_6 ) ) 