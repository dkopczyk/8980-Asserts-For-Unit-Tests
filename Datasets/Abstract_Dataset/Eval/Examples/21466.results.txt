METHOD_0 ( ) { doc = ( ( org . IDENT_0 . simple . IDENT_1 ) ( org . IDENT_0 . simple . Document . METHOD_1 ( org . IDENT_0 . simple . utils . IDENT_2 . getAbsolutePath ( org . IDENT_0 . simple . common . IDENT_3 . IDENT_4 . IDENT_5 ) ) ) ) ; org . IDENT_0 . simple . IDENT_1 IDENT_6 = org . IDENT_0 . simple . IDENT_1 . METHOD_2 ( ) ; IDENT_6 . METHOD_3 ( STRING_0 ) ; IDENT_6 . METHOD_3 ( STRING_1 ) ; IDENT_6 . METHOD_3 ( STRING_2 ) ; search = null ; int i = 0 ; search = new org . IDENT_0 . simple . common . IDENT_3 . METHOD_4 ( STRING_3 , doc ) ; org . IDENT_0 . simple . common . IDENT_3 . IDENT_7 IDENT_8 ; org . IDENT_0 . simple . common . IDENT_3 . IDENT_7 IDENT_9 = null ; while ( search . hasNext ( ) ) { if ( IDENT_9 != null ) { IDENT_8 = IDENT_9 ; } else { IDENT_8 = ( ( org . IDENT_0 . simple . common . IDENT_3 . IDENT_7 ) ( search . METHOD_5 ( ) ) ) ; } IDENT_9 = ( ( org . IDENT_0 . simple . common . IDENT_3 . IDENT_7 ) ( search . METHOD_5 ( ) ) ) ; if ( IDENT_8 != null ) { try { IDENT_8 . METHOD_6 ( IDENT_6 ) ; i ++ ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( ( ( ( ( STRING_4 + ( e . getClass ( ) . getName ( ) ) ) + STRING_5 ) + ( e . getMessage ( ) ) ) + STRING_6 ) ) ; } } } if ( IDENT_9 != null ) { try { IDENT_9 . METHOD_6 ( IDENT_6 ) ; i ++ ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( ( ( ( ( STRING_4 + ( e . getClass ( ) . getName ( ) ) ) + STRING_5 ) + ( e . getMessage ( ) ) ) + STRING_6 ) ) ; } } search = new org . IDENT_0 . simple . common . IDENT_3 . METHOD_4 ( STRING_0 , doc ) ; int j = 0 ; while ( search . hasNext ( ) ) { search . METHOD_5 ( ) ; j ++ ; } "<AssertPlaceHolder>" ; try { doc . save ( org . IDENT_0 . simple . utils . IDENT_2 . METHOD_7 ( STRING_7 ) ) ; } catch ( java . lang . Exception e ) { java . util . logging . IDENT_10 . METHOD_8 ( org . IDENT_0 . simple . common . IDENT_3 . IDENT_4 . class . getName ( ) ) . log ( IDENT_11 . IDENT_12 , e . getMessage ( ) , e ) ; org . junit . Assert . fail ( ( ( ( ( STRING_4 + ( e . getClass ( ) . getName ( ) ) ) + STRING_5 ) + ( e . getMessage ( ) ) ) + STRING_6 ) ) ; } } METHOD_5 ( ) { if ( ( IDENT_13 ) != null ) { IDENT_14 = IDENT_13 ; IDENT_13 = null ; } else { IDENT_14 = METHOD_9 ( IDENT_14 ) ; } if ( ( IDENT_14 ) == null ) { return null ; } else { IDENT_15 . IDENT_16 . METHOD_10 ( IDENT_14 ) ; return IDENT_14 ; } }
org . junit . Assert . assertTrue ( ( i == j ) ) 