METHOD_0 ( ) { try { parser = new org . apache . olingo . odata2 . jpa . processor . core . METHOD_1 ( mock ( STRING_0 ) ) ; parser . METHOD_2 ( 0 , 1 ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( org . apache . olingo . odata2 . jpa . processor . api . exception . IDENT_0 e ) { "<AssertPlaceHolder>" ; } } METHOD_2 ( int , int ) { org . apache . olingo . odata2 . api . uri . IDENT_1 IDENT_2 = null ; if ( ( ( IDENT_3 == IDENT_4 ) || ( IDENT_3 > IDENT_4 ) ) || ( IDENT_3 < 0 ) ) { return IDENT_2 ; } try { IDENT_5 = METHOD_3 ( ) ; java . util . List < org . apache . olingo . odata2 . api . uri . IDENT_6 > IDENT_7 = context . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) ; java . util . List < org . apache . olingo . odata2 . api . uri . IDENT_6 > IDENT_8 = IDENT_7 . METHOD_7 ( IDENT_3 , IDENT_4 ) ; IDENT_2 = org . apache . olingo . odata2 . api . uri . IDENT_9 . parse ( IDENT_5 , IDENT_8 , java . util . Collections . < java . lang . String , java . lang . String > METHOD_8 ( ) ) ; } catch ( org . apache . olingo . odata2 . api . exception . IDENT_10 e ) { throw org . apache . olingo . odata2 . jpa . processor . api . exception . IDENT_0 . METHOD_9 ( IDENT_0 . IDENT_11 . METHOD_10 ( e . getMessage ( ) ) , e ) ; } return IDENT_2 ; }
org . junit . Assert . assertEquals ( true , true ) 