METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 0 + ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( STRING_0 4 http : org . apache . olingo . odata2 . api . IDENT_1 . IDENT_2 IDENT_3 = org . apache . olingo . odata2 . IDENT_4 . mock . IDENT_5 . METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; java . io . InputStream IDENT_6 = METHOD_4 ( IDENT_0 ) ; org . apache . olingo . odata2 . core . IDENT_7 . consumer . IDENT_8 IDENT_9 = new org . apache . olingo . odata2 . core . IDENT_7 . consumer . METHOD_5 ( ) ; org . apache . olingo . odata2 . api . IDENT_7 . entry . IDENT_10 result = IDENT_9 . METHOD_6 ( IDENT_3 , IDENT_6 , org . apache . olingo . odata2 . api . IDENT_7 . IDENT_11 . init ( ) . METHOD_7 ( false ) . build ( ) ) ; "<AssertPlaceHolder>" ; } build ( ) { org . apache . olingo . odata2 . jpa . processor . core . IDENT_12 . data . IDENT_13 IDENT_14 = null ; try { if ( ( IDENT_15 ) == 0 ) { IDENT_14 = ( ( org . apache . olingo . odata2 . jpa . processor . core . IDENT_12 . data . IDENT_13 ) ( org . apache . olingo . odata2 . jpa . processor . api . IDENT_12 . IDENT_16 . METHOD_8 ( IDENT_17 . IDENT_18 , METHOD_9 ( ) ) . build ( ) ) ) ; } } catch ( org . apache . olingo . odata2 . jpa . processor . api . exception . IDENT_19 e ) { org . junit . Assert . fail ( ( ( ( org . apache . olingo . odata2 . jpa . processor . core . common . IDENT_20 . IDENT_21 ) + ( e . getMessage ( ) ) ) + ( org . apache . olingo . odata2 . jpa . processor . core . common . IDENT_20 . IDENT_22 ) ) ) ; } catch ( org . apache . olingo . odata2 . jpa . processor . api . exception . IDENT_23 e ) { org . junit . Assert . fail ( ( ( ( org . apache . olingo . odata2 . jpa . processor . core . common . IDENT_20 . IDENT_21 ) + ( e . getMessage ( ) ) ) + ( org . apache . olingo . odata2 . jpa . processor . core . common . IDENT_20 . IDENT_22 ) ) ) ; } return IDENT_14 ; }
org . junit . Assert . assertNotNull ( result ) 