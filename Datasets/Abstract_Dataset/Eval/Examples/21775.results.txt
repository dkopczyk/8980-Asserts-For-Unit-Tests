METHOD_0 ( ) { org . apache . olingo . server . core . serializer . utils . IDENT_0 IDENT_1 = new org . apache . olingo . server . core . serializer . utils . METHOD_1 ( INT_0 ) ; java . io . IDENT_2 write = IDENT_1 . METHOD_2 ( ) ; int IDENT_3 = INT_1 ; java . lang . String IDENT_4 = METHOD_3 ( IDENT_3 ) ; byte [ ] IDENT_5 = IDENT_4 . getBytes ( org . apache . olingo . server . core . serializer . utils . IDENT_6 . IDENT_7 ) ; for ( byte element : IDENT_5 ) { write . write ( element ) ; } java . io . InputStream IDENT_8 = IDENT_1 . METHOD_4 ( ) ; byte [ ] buffer = new byte [ IDENT_3 ] ; for ( int i = 0 ; i < ( buffer . length ) ; i ++ ) { buffer [ i ] = ( ( byte ) ( IDENT_8 . read ( ) ) ) ; } java . lang . String result = new java . lang . String ( buffer , org . apache . olingo . server . core . serializer . utils . IDENT_6 . IDENT_7 ) ; "<AssertPlaceHolder>" ; } read ( ) { throw new java . io . IOException ( "test" ) ; }
org . junit . Assert . assertEquals ( IDENT_4 , result ) 