METHOD_0 ( ) { org . apache . IDENT_0 . tools . read . IDENT_1 simple = new org . apache . IDENT_0 . tools . read . METHOD_1 ( ) ; org . apache . IDENT_0 . schema . IDENT_2 schema = new org . apache . IDENT_0 . schema . METHOD_2 ( STRING_0 , new org . apache . IDENT_0 . schema . METHOD_3 ( Type . IDENT_3 . IDENT_4 , METHOD_3 . IDENT_5 . IDENT_6 , STRING_1 2 ) , new org . apache . IDENT_0 . schema . METHOD_4 ( Type . IDENT_3 . IDENT_7 , STRING_1 1 , new org . apache . IDENT_0 . schema . METHOD_3 ( Type . IDENT_3 . IDENT_8 , METHOD_3 . IDENT_5 . IDENT_9 , STRING_1 ) , new org . apache . IDENT_0 . schema . METHOD_3 ( Type . IDENT_3 . IDENT_4 , METHOD_3 . IDENT_5 . IDENT_6 , STRING_2 ) ) ) ; org . apache . IDENT_0 . tools . read . METHOD_1 IDENT_10 = new org . apache . IDENT_0 . tools . read . METHOD_1 ( ) ; IDENT_10 . values . add ( METHOD_5 ( STRING_1 , INT_0 ) ) ; IDENT_10 . values . add ( METHOD_5 ( STRING_2 , STRING_3 ) ) ; IDENT_10 . values . add ( METHOD_5 ( STRING_2 , STRING_4 ) ) ; IDENT_10 . values . add ( METHOD_5 ( STRING_2 , STRING_5 ) ) ; IDENT_10 . values . add ( METHOD_5 ( STRING_2 , STRING_1 0 ) ) ; IDENT_10 . values . add ( METHOD_5 ( STRING_2 , STRING_6 ) ) ; simple . values . add ( METHOD_5 ( STRING_1 2 , STRING_7 ) ) ; simple . values . add ( METHOD_5 ( STRING_1 2 , STRING_3 ) ) ; simple . values . add ( METHOD_5 ( STRING_1 2 , STRING_8 ) ) ; simple . values . add ( METHOD_5 ( STRING_1 2 , STRING_4 ) ) ; simple . values . add ( METHOD_5 ( STRING_1 2 , STRING_9 ) ) ; simple . values . add ( METHOD_5 ( STRING_1 1 , IDENT_10 ) ) ; java . lang . String actual = org . apache . IDENT_0 . tools . json . IDENT_11 . METHOD_6 ( schema ) . METHOD_7 ( simple ) ; java . lang . String expected = METHOD_8 ( obj ( entry ( STRING_1 2 , array ( STRING_7 , STRING_3 , STRING_8 , STRING_4 , STRING_9 ) ) , entry ( STRING_1 1 , obj ( entry ( STRING_1 , INT_0 ) , entry ( STRING_2 , array ( STRING_3 , STRING_4 , STRING_5 , STRING_1 0 , STRING_6 ) ) ) ) ) ) ; "<AssertPlaceHolder>" ; } entry ( java . lang . String , T ) { return new Map . Entry < java . lang . String , T > ( ) { @ java . lang . Override public java . lang . String getKey ( ) { return key ; } @ java . lang . Override public org . apache . IDENT_0 . tools . read . T getValue ( ) { return value ; } @ java . lang . Override public org . apache . IDENT_0 . tools . read . T setValue ( org . apache . IDENT_0 . tools . read . T value ) { throw new java . lang . METHOD_9 ( ) ; } } ; }
org . junit . Assert . assertEquals ( expected , actual ) 