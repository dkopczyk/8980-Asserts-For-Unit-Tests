METHOD_0 ( ) { org . apache . avro . Schema schema = org . apache . avro . IDENT_0 . record ( STRING_0 ) . fields ( ) . METHOD_1 ( "value" ) . METHOD_2 ( ) ; org . apache . hadoop . fs . Path file = new org . apache . hadoop . fs . Path ( METHOD_3 ( ) . getPath ( ) ) ; java . lang . String [ ] records = new java . lang . String [ ] { STRING_1 , STRING_2 , STRING_3 , STRING_3 , STRING_2 , STRING_1 , STRING_4 } ; try ( org . apache . IDENT_1 . hadoop . IDENT_2 < org . apache . avro . IDENT_3 . IDENT_4 . IDENT_5 > writer = org . apache . IDENT_1 . avro . IDENT_6 . < org . apache . avro . IDENT_3 . IDENT_4 . IDENT_5 > builder ( file ) . METHOD_4 ( schema ) . METHOD_5 ( IDENT_7 ) . build ( ) ) { for ( java . lang . String record : records ) { writer . write ( new org . apache . avro . IDENT_3 . METHOD_6 ( schema ) . set ( "value" , record . getBytes ( ) ) . build ( ) ) ; } } try ( org . apache . IDENT_1 . hadoop . IDENT_8 < org . apache . avro . IDENT_3 . IDENT_9 > reader = org . apache . IDENT_1 . avro . IDENT_10 . < org . apache . avro . IDENT_3 . IDENT_9 > builder ( file ) . METHOD_5 ( IDENT_7 ) . build ( ) ) { org . apache . avro . IDENT_3 . IDENT_9 IDENT_11 ; int i = 0 ; while ( ( IDENT_11 = reader . read ( ) ) != null ) { java . nio . ByteBuffer buf = ( ( java . nio . ByteBuffer ) ( IDENT_11 . get ( "value" ) ) ) ; byte [ ] bytes = new byte [ buf . METHOD_7 ( ) ] ; buf . get ( bytes ) ; "<AssertPlaceHolder>" ; } } } get ( java . lang . Class ) { org . apache . IDENT_1 . IDENT_12 . METHOD_8 ( c . METHOD_9 ( ) , ( ( STRING_5 + c ) + STRING_6 ) ) ; return org . apache . IDENT_1 . IDENT_13 . IDENT_14 . IDENT_15 . IDENT_16 . get ( c ) ; }
org . junit . Assert . assertEquals ( records [ ( i ++ ) ] , new java . lang . String ( bytes ) ) 