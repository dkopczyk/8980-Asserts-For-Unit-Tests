METHOD_0 ( ) { long [ ] data = new long [ ( 5 * ( IDENT_0 ) ) + 1 ] ; for ( int i = 0 ; i < ( data . length ) ; i ++ ) { data [ i ] = i * INT_0 ; } METHOD_1 ( data ) ; reader = new org . apache . IDENT_1 . column . values . IDENT_2 . METHOD_2 ( ) ; reader . METHOD_3 ( 100 , writer . getBytes ( ) . METHOD_4 ( ) ) ; int IDENT_3 ; for ( int i = 0 ; i < ( data . length ) ; i += IDENT_3 + 1 ) { IDENT_3 = ( ( data . length ) - i ) / 2 ; "<AssertPlaceHolder>" ; reader . METHOD_5 ( IDENT_3 ) ; } } METHOD_6 ( ) { try { return IDENT_4 . METHOD_7 ( IDENT_5 . METHOD_8 ( ) ) ; } catch ( java . io . IOException e ) { throw new org . apache . IDENT_1 . io . METHOD_9 ( e ) ; } }
org . junit . Assert . assertEquals ( ( i * INT_0 ) , reader . METHOD_6 ( ) ) 