METHOD_0 ( ) { java . util . List < java . lang . Integer > IDENT_0 = java . util . Arrays . asList ( INT_0 , INT_1 , INT_2 ) ; java . util . List < java . lang . Integer > result = IDENT_1 . METHOD_1 ( METHOD_2 ( "" ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { java . util . List < java . lang . Integer > IDENT_2 = new java . util . ArrayList ( ) ; for ( char IDENT_3 : IDENT_4 . METHOD_3 ( ) ) { int IDENT_5 = IDENT_6 . METHOD_4 ( IDENT_3 ) ; org . junit . Assert . assertTrue ( ( IDENT_5 > 0 ) ) ; IDENT_2 . add ( IDENT_5 ) ; } return IDENT_2 ; }
org . junit . Assert . assertEquals ( IDENT_0 , result ) 