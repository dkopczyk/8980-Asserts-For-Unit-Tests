METHOD_0 ( ) { final java . util . Collection < java . util . concurrent . IDENT_0 < java . lang . IDENT_1 > > IDENT_2 = new java . util . ArrayList < java . util . concurrent . IDENT_0 < java . lang . IDENT_1 > > ( ) ; final long IDENT_3 = 100 ; final int times = 10 ; for ( int i = 0 ; i < times ; i ++ ) { IDENT_2 . add ( METHOD_1 ( IDENT_3 ) ) ; } final long start = java . lang . System . currentTimeMillis ( ) ; IDENT_4 . METHOD_2 ( IDENT_2 ) ; final long end = java . lang . System . currentTimeMillis ( ) ; final long IDENT_5 = end - start ; IDENT_6 . IDENT_7 . IDENT_8 . maven . plugin . support . IDENT_9 . LOG . debug ( STRING_0 , IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . util . Collection ) { IDENT_10 . set ( true ) ; super . METHOD_2 ( IDENT_2 ) ; }
org . junit . Assert . assertTrue ( ( IDENT_5 < ( IDENT_3 * times ) ) ) 