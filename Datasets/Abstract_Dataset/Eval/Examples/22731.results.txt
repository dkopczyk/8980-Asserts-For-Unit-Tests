METHOD_0 ( ) { java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { STRING_0 , STRING_1 } ; for ( java . lang . String f : IDENT_0 ) { org . apache . commons . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = new org . apache . commons . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( org . apache . poi . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_2 ( f ) ) ; org . apache . commons . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_9 entry = IDENT_5 . METHOD_3 ( STRING_2 ) ; org . IDENT_10 . IDENT_11 . IDENT_12 . IDENT_13 . IDENT_14 . IDENT_15 document = IDENT_15 . IDENT_16 . parse ( IDENT_5 . METHOD_4 ( entry ) ) ; "<AssertPlaceHolder>" ; IDENT_5 . close ( ) ; } } METHOD_4 ( org . apache . commons . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_9 ) { java . io . InputStream is = IDENT_17 . METHOD_4 ( entry ) ; return new javax . crypto . METHOD_5 ( is , IDENT_18 ) ; }
org . junit . Assert . assertNotNull ( document ) 