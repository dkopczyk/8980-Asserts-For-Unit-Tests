METHOD_0 ( ) { org . apache . poi . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new org . apache . poi . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; org . apache . poi . IDENT_0 . IDENT_1 . IDENT_4 IDENT_5 = IDENT_3 . METHOD_2 ( ) ; org . apache . poi . IDENT_0 . IDENT_1 . IDENT_6 IDENT_7 = IDENT_5 . METHOD_3 ( 4 , 5 ) ; int IDENT_8 = IDENT_7 . METHOD_4 ( ) ; int IDENT_9 = IDENT_7 . METHOD_5 ( ) ; for ( int row = 0 ; row < IDENT_8 ; row ++ ) { for ( int IDENT_10 = 0 ; IDENT_10 < IDENT_9 ; IDENT_10 ++ ) { org . apache . poi . IDENT_0 . IDENT_1 . IDENT_11 c = IDENT_7 . METHOD_6 ( row , IDENT_10 ) ; c . METHOD_7 ( ( ( ( STRING_0 + ( row + 1 ) ) + STRING_1 ) + ( IDENT_10 + 1 ) ) ) ; } } java . io . ByteArrayOutputStream IDENT_12 = new java . io . ByteArrayOutputStream ( ) ; IDENT_3 . write ( IDENT_12 ) ; IDENT_3 . close ( ) ; java . io . ByteArrayInputStream IDENT_13 = new java . io . ByteArrayInputStream ( IDENT_12 . toByteArray ( ) ) ; org . apache . poi . IDENT_0 . IDENT_1 . METHOD_1 IDENT_14 = new org . apache . poi . IDENT_0 . IDENT_1 . METHOD_1 ( IDENT_13 ) ; IDENT_5 = IDENT_14 . METHOD_8 ( ) . get ( 0 ) ; IDENT_7 = ( ( org . apache . poi . IDENT_0 . IDENT_1 . IDENT_6 ) ( IDENT_5 . METHOD_9 ( ) . get ( 0 ) ) ) ; IDENT_8 = IDENT_7 . METHOD_4 ( ) ; IDENT_9 = IDENT_7 . METHOD_5 ( ) ; for ( int row = 0 ; row < IDENT_8 ; row ++ ) { for ( int IDENT_10 = 0 ; IDENT_10 < IDENT_9 ; IDENT_10 ++ ) { org . apache . poi . IDENT_0 . IDENT_1 . IDENT_11 c = IDENT_7 . METHOD_6 ( row , IDENT_10 ) ; c . METHOD_7 ( ( ( c . getText ( ) ) + STRING_2 ) ) ; } } IDENT_12 . METHOD_10 ( ) ; IDENT_14 . write ( IDENT_12 ) ; IDENT_14 . close ( ) ; IDENT_13 = new java . io . ByteArrayInputStream ( IDENT_12 . toByteArray ( ) ) ; org . apache . poi . IDENT_0 . IDENT_1 . METHOD_1 IDENT_15 = new org . apache . poi . IDENT_0 . IDENT_1 . METHOD_1 ( IDENT_13 ) ; IDENT_5 = IDENT_15 . METHOD_8 ( ) . get ( 0 ) ; IDENT_7 = ( ( org . apache . poi . IDENT_0 . IDENT_1 . IDENT_6 ) ( IDENT_5 . METHOD_9 ( ) . get ( 0 ) ) ) ; IDENT_8 = IDENT_7 . METHOD_4 ( ) ; IDENT_9 = IDENT_7 . METHOD_5 ( ) ; for ( int row = 0 ; row < IDENT_8 ; row ++ ) { for ( int IDENT_10 = 0 ; IDENT_10 < IDENT_9 ; IDENT_10 ++ ) { org . apache . poi . IDENT_0 . IDENT_1 . IDENT_11 c = IDENT_7 . METHOD_6 ( row , IDENT_10 ) ; "<AssertPlaceHolder>" ; } } IDENT_15 . close ( ) ; } getText ( ) { return IDENT_16 ; }
org . junit . Assert . assertEquals ( ( ( ( ( STRING_0 + ( row + 1 ) ) + STRING_1 ) + ( IDENT_10 + 1 ) ) + STRING_2 ) , c . getText ( ) ) 