METHOD_0 ( ) { java . io . File f = org . apache . poi . IDENT_0 . METHOD_1 ( ) . METHOD_2 ( STRING_0 ) ; try ( org . apache . poi . IDENT_1 . IDENT_2 . IDENT_3 fs = new org . apache . poi . IDENT_1 . IDENT_2 . METHOD_3 ( f , true ) ) { org . apache . poi . IDENT_4 . IDENT_5 doc = new org . apache . poi . IDENT_4 . METHOD_4 ( fs ) ; "<AssertPlaceHolder>" ; doc . close ( ) ; } } METHOD_2 ( java . lang . String ) { java . io . File f = new java . io . File ( IDENT_6 , IDENT_7 ) ; if ( ! ( f . exists ( ) ) ) { throw new java . lang . RuntimeException ( ( ( ( ( STRING_1 + IDENT_7 ) + STRING_2 ) + ( IDENT_6 . getAbsolutePath ( ) ) ) + STRING_3 ) ) ; } try { if ( ( IDENT_7 . length ( ) ) > 0 ) { java . lang . String IDENT_8 = IDENT_7 ; if ( ( IDENT_8 . indexOf ( STRING_4 ) ) > 0 ) { IDENT_8 = IDENT_8 . substring ( ( ( IDENT_8 . indexOf ( STRING_4 ) ) + 1 ) ) ; } if ( ! ( IDENT_8 . equals ( f . METHOD_5 ( ) . getName ( ) ) ) ) { throw new java . lang . RuntimeException ( ( ( ( ( STRING_5 + IDENT_8 ) + STRING_6 ) + ( f . METHOD_5 ( ) . getName ( ) ) ) + STRING_3 ) ) ; } } } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( e ) ; } return f ; }
org . junit . Assert . assertNotNull ( doc ) 