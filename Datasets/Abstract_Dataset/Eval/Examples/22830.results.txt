METHOD_0 ( ) { org . apache . poi . IDENT_0 . record . IDENT_1 [ ] IDENT_2 = new org . apache . poi . IDENT_0 . record . IDENT_1 [ ] { new org . apache . poi . IDENT_0 . record . METHOD_1 ( 0 ) , new org . apache . poi . IDENT_0 . record . METHOD_2 ( ) , new org . apache . poi . IDENT_0 . record . METHOD_3 ( INT_0 , STRING_0 . getBytes ( IDENT_3 . IDENT_4 ) ) , new org . apache . poi . IDENT_0 . record . METHOD_4 ( STRING_1 . getBytes ( IDENT_3 . IDENT_4 ) ) } ; org . apache . poi . IDENT_0 . model . IDENT_5 rs = new org . apache . poi . IDENT_0 . model . METHOD_5 ( java . util . Arrays . asList ( IDENT_2 ) , 0 ) ; org . apache . poi . IDENT_0 . record . IDENT_6 . IDENT_7 IDENT_8 ; try { IDENT_8 = new org . apache . poi . IDENT_0 . record . IDENT_6 . METHOD_6 ( rs , org . apache . poi . IDENT_0 . record . IDENT_6 . IDENT_9 . METHOD_7 ( ) ) ; } catch ( java . lang . RuntimeException e ) { if ( e . getMessage ( ) . startsWith ( STRING_2 ) ) { org . junit . Assert . fail ( STRING_3 ) ; } throw e ; } org . apache . poi . IDENT_0 . IDENT_10 . IDENT_11 . IDENT_12 IDENT_13 = new org . apache . poi . IDENT_0 . IDENT_10 . IDENT_11 . METHOD_8 ( ) ; IDENT_8 . METHOD_9 ( IDENT_13 ) ; org . apache . poi . IDENT_0 . record . IDENT_1 [ ] IDENT_14 = IDENT_13 . METHOD_10 ( ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( ) { org . apache . poi . IDENT_0 . record . IDENT_1 [ ] result = new org . apache . poi . IDENT_0 . record . IDENT_1 [ IDENT_15 . size ( ) ] ; IDENT_15 . toArray ( result ) ; return result ; }
org . junit . Assert . assertEquals ( 5 , IDENT_14 . length ) 