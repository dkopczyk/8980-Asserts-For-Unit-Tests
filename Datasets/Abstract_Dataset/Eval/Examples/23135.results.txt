METHOD_0 ( ) { final org . apache . IDENT_0 . jms . message . IDENT_1 message = METHOD_1 ( ) ; java . lang . Thread runner = new java . lang . Thread ( new java . lang . METHOD_2 ( ) { @ org . apache . IDENT_0 . jms . util . Override public void run ( ) { try { TimeUnit . IDENT_2 . sleep ( INT_0 ) ; } catch ( java . lang . IDENT_3 e ) { } queue . METHOD_3 ( message ) ; } } ) ; runner . start ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( long ) { MOD_0 ( IDENT_4 ) { while ( ( ( IDENT_5 != 0 ) && ( METHOD_5 ( ) ) ) && ( isEmpty ( ) ) ) { if ( IDENT_5 == ( - 1 ) ) { IDENT_4 . METHOD_6 ( ) ; } else { long start = java . lang . System . currentTimeMillis ( ) ; IDENT_4 . METHOD_6 ( IDENT_5 ) ; IDENT_5 = java . lang . Math . max ( ( ( IDENT_5 + start ) - ( java . lang . System . currentTimeMillis ( ) ) ) , 0 ) ; } } if ( ( ! ( METHOD_5 ( ) ) ) || ( isEmpty ( ) ) ) { return null ; } return METHOD_7 ( ) ; } }
org . junit . Assert . assertSame ( message , queue . METHOD_4 ( ( - 1 ) ) ) 