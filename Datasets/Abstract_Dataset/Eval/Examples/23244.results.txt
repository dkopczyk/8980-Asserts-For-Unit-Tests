METHOD_0 ( ) { METHOD_1 ( ) ; org . apache . IDENT_0 . db . IDENT_1 IDENT_2 = org . mockito . Mockito . mock ( org . apache . IDENT_0 . db . IDENT_1 . class ) ; org . apache . IDENT_0 . entity . IDENT_3 IDENT_3 = new org . apache . IDENT_0 . entity . METHOD_2 ( ) ; java . lang . String IDENT_4 = STRING_0 ; org . apache . IDENT_0 . entity . IDENT_5 user = new org . apache . IDENT_0 . entity . METHOD_3 ( ) ; METHOD_2 . setId ( user . getId ( ) ) ; METHOD_2 . METHOD_4 ( STRING_0 ) ; java . util . List < org . apache . IDENT_0 . entity . METHOD_2 > list = new java . util . ArrayList < org . apache . IDENT_0 . entity . METHOD_2 > ( ) ; list . add ( METHOD_2 ) ; org . mockito . Mockito . when ( IDENT_6 . METHOD_5 ( ) ) . thenReturn ( IDENT_2 ) ; org . mockito . Mockito . when ( IDENT_2 . METHOD_6 ( org . apache . IDENT_0 . IDENT_7 . IDENT_8 . IDENT_9 ) ) . thenReturn ( list ) ; boolean IDENT_10 = IDENT_11 . METHOD_7 ( org . apache . IDENT_0 . IDENT_7 . IDENT_8 . IDENT_9 , IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( java . lang . Long , org . apache . IDENT_0 . entity . METHOD_2 ) { boolean IDENT_12 = false ; for ( java . lang . String IDENT_13 : IDENT_14 ) { if ( IDENT_13 . equalsIgnoreCase ( IDENT_15 . METHOD_8 ( ) ) ) { IDENT_12 = true ; break ; } } if ( ! IDENT_12 ) { org . apache . IDENT_0 . common . IDENT_16 IDENT_17 = org . apache . IDENT_0 . common . IDENT_18 . METHOD_9 ( ) ; if ( ( IDENT_17 == null ) || ( ( ! ( IDENT_17 . METHOD_10 ( ) ) ) && ( ! ( IDENT_17 . METHOD_11 ( ) ) ) ) ) { return false ; } } IDENT_6 . METHOD_5 ( ) . remove ( IDENT_15 . getId ( ) ) ; return true ; }
org . junit . Assert . assertTrue ( IDENT_10 ) 