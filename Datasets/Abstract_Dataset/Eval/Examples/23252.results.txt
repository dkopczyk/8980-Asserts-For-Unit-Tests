METHOD_0 ( ) { java . util . List < org . apache . IDENT_0 . view . IDENT_1 > IDENT_2 = new java . util . ArrayList < org . apache . IDENT_0 . view . IDENT_1 > ( ) ; final org . apache . IDENT_0 . view . IDENT_1 IDENT_3 = METHOD_1 ( ) ; IDENT_3 . setName ( STRING_0 ) ; IDENT_3 . METHOD_2 ( STRING_1 ) ; IDENT_2 . add ( IDENT_3 ) ; org . apache . IDENT_0 . common . IDENT_4 IDENT_5 = METHOD_3 ( ) ; IDENT_5 . METHOD_4 ( STRING_2 , org . apache . IDENT_0 . IDENT_6 . IDENT_7 . IDENT_8 ) ; org . apache . IDENT_0 . view . IDENT_9 IDENT_10 = METHOD_5 ( ) ; org . mockito . Mockito . when ( IDENT_11 . METHOD_6 ( ( ( org . apache . IDENT_0 . common . IDENT_4 ) ( org . mockito . Mockito . any ( ) ) ) ) ) . thenReturn ( METHOD_5 ) ; org . apache . IDENT_0 . view . IDENT_12 IDENT_13 = IDENT_14 . METHOD_7 ( org . apache . IDENT_0 . IDENT_6 . IDENT_7 . IDENT_8 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( java . lang . Long ) { org . apache . IDENT_0 . common . IDENT_4 IDENT_15 = new org . apache . IDENT_0 . common . METHOD_8 ( ) ; IDENT_15 . METHOD_4 ( STRING_2 , IDENT_16 ) ; org . apache . IDENT_0 . IDENT_6 . IDENT_9 IDENT_17 = IDENT_11 . METHOD_6 ( IDENT_15 ) ; org . apache . IDENT_0 . IDENT_6 . IDENT_12 IDENT_2 = new org . apache . IDENT_0 . IDENT_6 . METHOD_9 ( ) ; java . util . List < org . apache . IDENT_0 . IDENT_6 . IDENT_1 > IDENT_18 = new java . util . ArrayList < org . apache . IDENT_0 . IDENT_6 . IDENT_1 > ( ) ; if ( IDENT_17 != null ) { java . util . List < org . apache . IDENT_0 . IDENT_6 . IDENT_19 > IDENT_20 = IDENT_17 . METHOD_10 ( ) ; java . util . Set < java . lang . Long > IDENT_21 = new java . util . HashSet < java . lang . Long > ( ) ; for ( org . apache . IDENT_0 . IDENT_6 . IDENT_19 IDENT_22 : IDENT_20 ) { IDENT_21 . add ( IDENT_22 . METHOD_11 ( ) ) ; } for ( java . lang . Long IDENT_23 : IDENT_21 ) { org . apache . IDENT_0 . IDENT_6 . IDENT_1 IDENT_24 = IDENT_25 . METHOD_12 ( IDENT_23 ) ; IDENT_18 . add ( IDENT_24 ) ; } IDENT_2 . METHOD_13 ( IDENT_18 ) ; } else { org . apache . IDENT_0 . IDENT_6 . IDENT_26 . logger . debug ( ( STRING_3 + IDENT_16 ) ) ; } return IDENT_2 ; }
org . junit . Assert . assertNotNull ( IDENT_13 ) 