METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; org . apache . IDENT_1 . plugin . service . IDENT_2 context = new org . apache . IDENT_1 . plugin . service . METHOD_1 ( ) ; context . METHOD_2 ( IDENT_0 ) ; context . METHOD_3 ( STRING_1 ) ; java . util . List < java . lang . String > list = IDENT_3 . METHOD_4 ( IDENT_0 , context ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String , org . apache . IDENT_1 . plugin . service . METHOD_1 ) { if ( org . apache . IDENT_1 . rest . IDENT_4 . LOG . METHOD_5 ( ) ) { org . apache . IDENT_1 . rest . IDENT_4 . LOG . debug ( ( ( STRING_2 + IDENT_0 ) + STRING_3 ) ) ; } java . util . List < java . lang . String > ret = new java . util . ArrayList < java . lang . String > ( ) ; org . apache . IDENT_1 . plugin . util . IDENT_5 IDENT_6 = null ; try { if ( org . apache . IDENT_1 . plugin . util . IDENT_5 . METHOD_6 ( org . apache . IDENT_1 . rest . IDENT_4 . IDENT_7 ) ) { IDENT_6 = org . apache . IDENT_1 . plugin . util . IDENT_5 . METHOD_7 ( org . apache . IDENT_1 . rest . IDENT_4 . IDENT_7 , ( ( STRING_4 + IDENT_0 ) + STRING_3 ) ) ; } ret = IDENT_8 . METHOD_4 ( IDENT_0 , context , IDENT_9 ) ; } catch ( javax . ws . rs . IDENT_10 IDENT_11 ) { throw IDENT_11 ; } catch ( java . lang . Throwable IDENT_11 ) { org . apache . IDENT_1 . rest . IDENT_4 . LOG . error ( ( ( ( ( STRING_5 + IDENT_0 ) + STRING_6 ) + context ) + STRING_7 ) , IDENT_11 ) ; throw IDENT_12 . METHOD_8 ( IDENT_11 . getMessage ( ) ) ; } finally { org . apache . IDENT_1 . plugin . util . IDENT_5 . log ( IDENT_6 ) ; } if ( org . apache . IDENT_1 . rest . IDENT_4 . LOG . METHOD_5 ( ) ) { org . apache . IDENT_1 . rest . IDENT_4 . LOG . debug ( ( ( ( STRING_8 + IDENT_0 ) + STRING_9 ) + ret ) ) ; } return ret ; }
org . junit . Assert . assertNotNull ( list ) 