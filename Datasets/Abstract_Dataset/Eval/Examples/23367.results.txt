METHOD_0 ( ) { java . util . List < org . apache . IDENT_0 . plugin . model . IDENT_1 > ret = new java . util . ArrayList < org . apache . IDENT_0 . plugin . model . IDENT_1 > ( ) ; try { org . mockito . Mockito . when ( IDENT_2 . METHOD_1 ( ( ( org . apache . IDENT_0 . plugin . util . IDENT_3 ) ( org . mockito . Mockito . any ( ) ) ) ) ) . thenReturn ( ret ) ; } catch ( java . lang . Exception e ) { } java . util . List < org . apache . IDENT_0 . plugin . model . IDENT_1 > result = IDENT_4 . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; try { org . mockito . Mockito . verify ( IDENT_2 ) . METHOD_1 ( ( ( org . apache . IDENT_0 . plugin . util . IDENT_3 ) ( org . mockito . Mockito . any ( ) ) ) ) ; } catch ( java . lang . Exception e ) { } } METHOD_2 ( ) { if ( org . apache . IDENT_0 . rest . IDENT_5 . LOG . METHOD_3 ( ) ) { org . apache . IDENT_0 . rest . IDENT_5 . LOG . debug ( STRING_0 ) ; } java . util . List < org . apache . IDENT_0 . plugin . model . IDENT_1 > ret ; try { ret = IDENT_2 . METHOD_1 ( new org . apache . IDENT_0 . plugin . util . METHOD_4 ( ) ) ; } catch ( java . lang . Exception IDENT_6 ) { org . apache . IDENT_0 . rest . IDENT_5 . LOG . error ( STRING_1 , IDENT_6 ) ; throw IDENT_7 . METHOD_5 ( IDENT_8 . IDENT_9 , IDENT_6 . getMessage ( ) , true ) ; } if ( org . apache . commons . collections . IDENT_10 . isEmpty ( ret ) ) { if ( org . apache . IDENT_0 . rest . IDENT_5 . LOG . METHOD_3 ( ) ) { org . apache . IDENT_0 . rest . IDENT_5 . LOG . debug ( STRING_2 ) ; } } if ( org . apache . IDENT_0 . rest . IDENT_5 . LOG . METHOD_3 ( ) ) { org . apache . IDENT_0 . rest . IDENT_5 . LOG . debug ( ( STRING_3 + ret ) ) ; } return ret ; }
org . junit . Assert . assertNotNull ( result ) 