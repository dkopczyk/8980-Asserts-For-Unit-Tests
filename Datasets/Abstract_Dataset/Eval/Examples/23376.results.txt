METHOD_0 ( ) { javax . servlet . http . IDENT_0 request = org . mockito . Mockito . mock ( javax . servlet . http . IDENT_0 . class ) ; org . apache . IDENT_1 . common . IDENT_2 IDENT_3 = METHOD_1 ( ) ; org . mockito . Mockito . when ( IDENT_4 . METHOD_2 ( ( ( javax . servlet . http . IDENT_0 ) ( org . mockito . Mockito . any ( ) ) ) , ( ( java . util . List < org . apache . IDENT_1 . common . IDENT_5 > ) ( org . mockito . Mockito . any ( ) ) ) ) ) . thenReturn ( IDENT_3 ) ; IDENT_6 . setValue ( 1 ) ; org . mockito . Mockito . when ( IDENT_7 . METHOD_3 ( IDENT_3 ) ) . thenReturn ( IDENT_6 ) ; org . apache . IDENT_1 . view . IDENT_8 IDENT_9 = IDENT_10 . METHOD_4 ( request ) ; org . mockito . Mockito . verify ( IDENT_7 ) . METHOD_3 ( IDENT_3 ) ; org . mockito . Mockito . verify ( IDENT_4 ) . METHOD_2 ( ( ( javax . servlet . http . IDENT_0 ) ( org . mockito . Mockito . any ( ) ) ) , ( ( java . util . List < org . apache . IDENT_1 . common . IDENT_5 > ) ( org . mockito . Mockito . any ( ) ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( javax . servlet . http . IDENT_0 , java . util . List ) { org . apache . IDENT_1 . common . IDENT_2 IDENT_11 = new org . apache . IDENT_1 . common . METHOD_5 ( ) ; int IDENT_12 = IDENT_13 . METHOD_6 ( request . METHOD_7 ( STRING_0 ) , 0 , STRING_1 0 , IDENT_14 . IDENT_15 , null , STRING_0 ) ; IDENT_12 = ( IDENT_12 < 0 ) ? 0 : IDENT_12 ; IDENT_11 . METHOD_8 ( IDENT_12 ) ; int IDENT_16 = IDENT_13 . METHOD_6 ( request . METHOD_7 ( STRING_1 ) , IDENT_17 . METHOD_9 ( ) , STRING_2 , IDENT_14 . IDENT_15 , null , STRING_1 ) ; IDENT_11 . METHOD_10 ( IDENT_16 ) ; IDENT_11 . METHOD_11 ( IDENT_13 . METHOD_12 ( request . METHOD_7 ( STRING_3 ) , true ) ) ; IDENT_11 . METHOD_13 ( IDENT_13 . METHOD_14 ( request . METHOD_7 ( STRING_4 ) , null ) ) ; IDENT_11 . METHOD_15 ( IDENT_13 . METHOD_12 ( request . METHOD_7 ( STRING_5 ) , false ) ) ; java . lang . String IDENT_18 = IDENT_13 . METHOD_16 ( request . METHOD_7 ( STRING_6 ) , IDENT_19 . IDENT_20 , STRING_1 1 , IDENT_14 . IDENT_15 , null , STRING_6 ) ; boolean IDENT_21 = false ; if ( ! ( IDENT_22 . isEmpty ( IDENT_18 ) ) ) { for ( org . apache . IDENT_1 . common . IDENT_5 IDENT_23 : IDENT_24 ) { if ( IDENT_23 . METHOD_17 ( ) . equalsIgnoreCase ( IDENT_18 ) ) { IDENT_11 . METHOD_18 ( IDENT_23 . METHOD_17 ( ) ) ; java . lang . String IDENT_25 = IDENT_13 . METHOD_16 ( request . METHOD_7 ( STRING_7 ) , IDENT_19 . IDENT_20 , STRING_8 , IDENT_14 . IDENT_15 , null , STRING_7 ) ; IDENT_11 . METHOD_19 ( IDENT_25 ) ; IDENT_21 = true ; break ; } } } if ( ( ! IDENT_21 ) && ( ! ( IDENT_22 . isEmpty ( IDENT_18 ) ) ) ) { org . apache . IDENT_1 . common . IDENT_26 . logger . info ( ( STRING_9 + IDENT_18 ) , new java . lang . Throwable ( ) ) ; } return IDENT_11 ; }
org . junit . Assert . assertNotNull ( IDENT_9 ) 