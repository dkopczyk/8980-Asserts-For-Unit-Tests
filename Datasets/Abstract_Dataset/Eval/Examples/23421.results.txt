METHOD_0 ( ) { org . apache . IDENT_0 . runtime . common . client . api . IDENT_1 event = mock ( org . apache . IDENT_0 . runtime . common . client . api . IDENT_1 . class ) ; org . apache . IDENT_0 . util . Optional < java . lang . Integer > IDENT_2 = org . apache . IDENT_0 . util . Optional . of ( 100 ) ; when ( event . METHOD_1 ( ) ) . thenReturn ( IDENT_2 ) ; java . lang . String actual = this . IDENT_3 . METHOD_2 ( event ) ; java . lang . String expected = STRING_0 + ( ( STRING_1 + STRING_2 ) + STRING_3 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . apache . IDENT_0 . runtime . common . client . api . IDENT_1 ) { java . util . List < java . lang . String > IDENT_4 = new org . apache . IDENT_0 . runtime . common . IDENT_5 . METHOD_3 ( this . IDENT_6 , this . IDENT_7 ) . METHOD_4 ( IDENT_8 . getPath ( ) ) . METHOD_5 ( java . util . Collections . singletonList ( this . IDENT_9 . METHOD_6 ( ) ) ) . METHOD_7 ( METHOD_8 ( ) ) . METHOD_9 ( IDENT_10 . METHOD_1 ( ) . get ( ) ) . build ( ) ; return java . lang . String . format ( this . IDENT_11 , org . apache . commons . lang . StringUtils . join ( IDENT_4 , STRING_4 ) ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 