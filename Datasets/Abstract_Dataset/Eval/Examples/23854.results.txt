METHOD_0 ( ) { org . apache . IDENT_0 . IDENT_1 . ldap . IDENT_2 IDENT_1 = new org . apache . IDENT_0 . IDENT_1 . ldap . METHOD_1 ( ) { @ org . apache . IDENT_0 . IDENT_1 . ldap . Override MOD_0 java . lang . String METHOD_2 ( ) { return null ; } @ org . apache . IDENT_0 . IDENT_1 . ldap . Override MOD_0 java . lang . String METHOD_3 ( ) { return null ; } } ; java . lang . String IDENT_3 = "foo" ; java . lang . String IDENT_4 = IDENT_1 . METHOD_4 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String ) { if ( ! ( org . apache . IDENT_0 . util . StringUtils . METHOD_5 ( IDENT_3 ) ) ) { throw new java . lang . IllegalArgumentException ( STRING_0 ) ; } java . lang . String IDENT_5 = METHOD_2 ( ) ; java . lang . String IDENT_6 = METHOD_3 ( ) ; if ( ( IDENT_5 == null ) && ( IDENT_6 == null ) ) { org . apache . IDENT_0 . IDENT_1 . ldap . IDENT_7 . log . debug ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) ) ; return IDENT_3 ; } int IDENT_8 = ( IDENT_5 != null ) ? IDENT_5 . length ( ) : 0 ; int IDENT_9 = ( IDENT_6 != null ) ? IDENT_6 . length ( ) : 0 ; java . lang . StringBuilder sb = new java . lang . StringBuilder ( ( ( IDENT_8 + ( IDENT_3 . length ( ) ) ) + IDENT_9 ) ) ; if ( IDENT_8 > 0 ) { sb . append ( IDENT_5 ) ; } sb . append ( IDENT_3 ) ; if ( IDENT_9 > 0 ) { sb . append ( IDENT_6 ) ; } return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_3 , IDENT_4 ) 