METHOD_0 ( ) { final org . apache . IDENT_0 . session . IDENT_1 . IDENT_2 IDENT_3 = new org . apache . IDENT_0 . session . IDENT_1 . METHOD_1 ( ) ; IDENT_3 . setId ( 1 ) ; final org . apache . IDENT_0 . session . IDENT_1 . METHOD_1 IDENT_4 = new org . apache . IDENT_0 . session . IDENT_1 . METHOD_1 ( ) ; java . util . Calendar IDENT_5 = java . util . Calendar . getInstance ( ) ; java . lang . Long IDENT_6 = ( IDENT_7 . IDENT_8 ) + 1 ; IDENT_5 . add ( Calendar . IDENT_9 , ( - ( IDENT_6 . METHOD_2 ( ) ) ) ) ; java . util . Date IDENT_10 = IDENT_5 . getTime ( ) ; IDENT_4 . METHOD_3 ( IDENT_10 ) ; IDENT_4 . METHOD_4 ( IDENT_10 ) ; IDENT_4 . setId ( 2 ) ; final java . util . concurrent . atomic . IDENT_11 IDENT_12 = new java . util . concurrent . atomic . METHOD_5 ( ) ; org . apache . IDENT_0 . session . IDENT_13 IDENT_14 = new org . apache . IDENT_0 . session . METHOD_6 ( ) { @ org . apache . IDENT_0 . session . IDENT_1 . Override public void METHOD_7 ( org . apache . IDENT_0 . session . IDENT_15 session ) { IDENT_12 . METHOD_8 ( ) ; } } ; org . apache . IDENT_0 . session . IDENT_1 . IDENT_16 IDENT_17 = new org . apache . IDENT_0 . session . IDENT_1 . METHOD_9 ( ) { @ org . apache . IDENT_0 . session . IDENT_1 . Override MOD_0 org . apache . IDENT_0 . session . IDENT_15 METHOD_10 ( org . apache . IDENT_0 . session . IDENT_1 . IDENT_18 key ) throws org . apache . IDENT_0 . session . IDENT_19 { throw new java . lang . METHOD_11 ( STRING_0 ) ; } @ org . apache . IDENT_0 . session . IDENT_1 . Override MOD_0 org . apache . IDENT_0 . session . IDENT_15 METHOD_12 ( org . apache . IDENT_0 . session . IDENT_1 . IDENT_20 IDENT_21 ) throws org . apache . IDENT_0 . IDENT_22 . IDENT_23 { throw new java . lang . METHOD_11 ( STRING_0 ) ; } @ org . apache . IDENT_0 . session . IDENT_1 . Override MOD_0 java . util . Collection < org . apache . IDENT_0 . session . IDENT_15 > METHOD_13 ( ) { java . util . Collection < org . apache . IDENT_0 . session . IDENT_15 > IDENT_24 = new java . util . ArrayList < org . apache . IDENT_0 . session . IDENT_15 > ( 2 ) ; IDENT_24 . add ( IDENT_3 ) ; IDENT_24 . add ( IDENT_4 ) ; return IDENT_24 ; } } ; IDENT_17 . METHOD_14 ( java . util . Arrays . asList ( IDENT_14 ) ) ; IDENT_17 . METHOD_15 ( ) ; "<AssertPlaceHolder>" ; } asList ( IDENT_25 [ ] ) { if ( ( elements == null ) || ( ( elements . length ) == 0 ) ) { return java . util . Collections . emptyList ( ) ; } return java . util . Arrays . asList ( elements ) ; }
org . junit . Assert . assertEquals ( 1 , IDENT_12 . METHOD_2 ( ) ) 