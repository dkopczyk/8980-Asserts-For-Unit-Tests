METHOD_0 ( ) { javax . servlet . http . IDENT_0 request = METHOD_1 ( javax . servlet . http . IDENT_0 . class ) ; javax . servlet . http . IDENT_1 response = METHOD_1 ( javax . servlet . http . IDENT_1 . class ) ; javax . servlet . IDENT_2 IDENT_3 = METHOD_1 ( javax . servlet . IDENT_2 . class ) ; resolver . METHOD_2 ( ) . METHOD_3 ( STRING_0 , STRING_1 ) ; expect ( request . METHOD_4 ( IDENT_4 . IDENT_5 ) ) . andReturn ( null ) . METHOD_5 ( ) ; expect ( request . METHOD_6 ( ) ) . andReturn ( "" ) ; expect ( request . METHOD_7 ( ) ) . andReturn ( STRING_2 ) ; replay ( request ) ; javax . servlet . IDENT_2 IDENT_6 = resolver . METHOD_8 ( request , response , IDENT_3 ) ; "<AssertPlaceHolder>" ; verify ( request ) ; } METHOD_8 ( javax . servlet . IDENT_7 , javax . servlet . IDENT_8 , javax . servlet . IDENT_2 ) { java . lang . String path = org . apache . IDENT_9 . web . util . IDENT_4 . METHOD_9 ( org . apache . IDENT_9 . web . util . IDENT_4 . METHOD_10 ( request ) ) ; for ( final java . lang . String IDENT_10 : IDENT_11 . METHOD_11 ( ) ) { if ( IDENT_12 . matches ( IDENT_10 , path ) ) { final java . util . Iterator < com . google . IDENT_13 . IDENT_14 < ? extends javax . servlet . IDENT_15 > > IDENT_3 = java . util . Arrays . asList ( IDENT_11 . get ( IDENT_10 ) ) . iterator ( ) ; return new org . apache . IDENT_9 . IDENT_16 . web . METHOD_12 ( IDENT_17 , new java . util . Iterator < javax . servlet . IDENT_15 > ( ) { public boolean hasNext ( ) { return IDENT_3 . hasNext ( ) ; } public javax . servlet . IDENT_15 next ( ) { return IDENT_18 . getInstance ( IDENT_3 . next ( ) ) ; } public void remove ( ) { throw new java . lang . METHOD_13 ( ) ; } } ) ; } } return null ; }
org . junit . Assert . assertNotNull ( IDENT_6 ) 