METHOD_0 ( ) { org . apache . IDENT_0 . redis . state . IDENT_1 provider = new org . apache . IDENT_0 . redis . state . METHOD_1 ( ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_2 = new java . util . HashMap ( ) ; org . apache . IDENT_0 . redis . state . METHOD_1 . IDENT_3 config = provider . METHOD_2 ( IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . util . Map ) { org . apache . IDENT_0 . hbase . state . IDENT_4 . IDENT_3 IDENT_5 ; java . lang . String IDENT_6 ; com . fasterxml . jackson . databind . IDENT_7 mapper = new com . fasterxml . jackson . databind . METHOD_3 ( ) ; mapper . METHOD_4 ( com . fasterxml . jackson . annotation . IDENT_8 . IDENT_9 , com . fasterxml . jackson . annotation . IDENT_10 . IDENT_11 . IDENT_12 ) ; if ( IDENT_13 . containsKey ( IDENT_14 . IDENT_15 ) ) { IDENT_6 = ( ( java . lang . String ) ( IDENT_13 . get ( IDENT_14 . IDENT_15 ) ) ) ; IDENT_5 = mapper . METHOD_5 ( IDENT_6 , org . apache . IDENT_0 . hbase . state . IDENT_4 . IDENT_3 . class ) ; } else { IDENT_5 = new org . apache . IDENT_0 . hbase . state . IDENT_4 . METHOD_6 ( ) ; } METHOD_7 ( IDENT_5 . IDENT_16 , STRING_0 ) ; METHOD_7 ( IDENT_5 . tableName , STRING_1 ) ; METHOD_7 ( IDENT_5 . IDENT_17 , STRING_2 ) ; return IDENT_5 ; }
org . junit . Assert . assertNotNull ( config ) 