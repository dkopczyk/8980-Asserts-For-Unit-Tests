METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . Object > conf = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; conf . put ( STRING_0 , org . apache . IDENT_0 . IDENT_1 . com . google . common . collect . ImmutableList . of ( STRING_1 , new org . apache . IDENT_0 . METHOD_1 ( ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . util . Map ) { java . util . Map < java . lang . String , java . lang . Object > IDENT_2 = org . apache . IDENT_0 . utils . Utils . METHOD_3 ( IDENT_3 ) ; try { java . util . Map < java . lang . String , java . lang . Object > IDENT_4 = org . apache . IDENT_0 . utils . Utils . METHOD_3 ( ( ( java . util . Map < java . lang . String , java . lang . Object > ) ( org . apache . IDENT_0 . IDENT_1 . org . json . simple . IDENT_5 . METHOD_4 ( org . apache . IDENT_0 . IDENT_1 . org . json . simple . IDENT_5 . METHOD_5 ( IDENT_3 ) ) ) ) ) ; return org . apache . IDENT_0 . utils . Utils . METHOD_2 ( IDENT_2 , IDENT_4 ) ; } catch ( org . apache . IDENT_0 . IDENT_1 . org . json . simple . parser . IDENT_6 e ) { org . apache . IDENT_0 . utils . Utils . LOG . error ( STRING_2 , e ) ; } return false ; }
org . junit . Assert . assertFalse ( org . apache . IDENT_0 . utils . Utils . METHOD_2 ( conf ) ) 