METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . Object > IDENT_0 = org . apache . IDENT_1 . IDENT_2 . com . google . common . collect . ImmutableMap . of ( ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_3 = org . apache . IDENT_1 . IDENT_2 . com . google . common . collect . ImmutableMap . of ( STRING_0 , INT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . util . Map , java . util . Map ) { org . apache . IDENT_1 . IDENT_2 . com . google . common . collect . IDENT_4 < java . lang . String , java . lang . Object > IDENT_5 = org . apache . IDENT_1 . IDENT_2 . com . google . common . collect . IDENT_6 . METHOD_2 ( IDENT_7 , IDENT_8 ) ; if ( IDENT_5 . METHOD_3 ( ) ) { return true ; } for ( Map . Entry < java . lang . String , java . lang . Object > IDENT_9 : IDENT_5 . METHOD_4 ( ) . entrySet ( ) ) { org . apache . IDENT_1 . utils . Utils . LOG . warn ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) , IDENT_9 . getKey ( ) , IDENT_9 . getKey ( ) , IDENT_9 . getValue ( ) ) ; } for ( Map . Entry < java . lang . String , java . lang . Object > IDENT_10 : IDENT_5 . METHOD_5 ( ) . entrySet ( ) ) { org . apache . IDENT_1 . utils . Utils . LOG . warn ( ( STRING_4 + ( STRING_2 + STRING_3 ) ) , IDENT_10 . getKey ( ) , IDENT_10 . getKey ( ) , IDENT_10 . getValue ( ) ) ; } for ( Map . Entry < java . lang . String , org . apache . IDENT_1 . IDENT_2 . com . google . common . collect . IDENT_4 . IDENT_11 < java . lang . Object > > IDENT_12 : IDENT_5 . METHOD_6 ( ) . entrySet ( ) ) { java . lang . Object IDENT_13 = IDENT_12 . getValue ( ) . METHOD_7 ( ) ; java . lang . Object IDENT_14 = IDENT_12 . getValue ( ) . METHOD_8 ( ) ; org . apache . IDENT_1 . utils . Utils . LOG . warn ( STRING_5 , IDENT_12 . getKey ( ) , METHOD_7 , METHOD_8 ) ; } return false ; }
org . junit . Assert . assertFalse ( org . apache . IDENT_1 . utils . Utils . METHOD_1 ( IDENT_0 , IDENT_3 ) ) 