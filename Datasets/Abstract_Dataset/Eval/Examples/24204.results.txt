METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; org . apache . streams . test . component . IDENT_1 provider = new org . apache . streams . test . component . METHOD_1 ( IDENT_0 , new org . apache . streams . test . component . METHOD_2 ( ) ) ; provider . METHOD_3 ( null ) ; org . apache . streams . core . IDENT_2 IDENT_3 = provider . METHOD_4 ( ) ; int count = 0 ; for ( org . apache . streams . core . IDENT_4 IDENT_5 : IDENT_3 ) { ++ count ; } "<AssertPlaceHolder>" ; provider . METHOD_5 ( ) ; } METHOD_4 ( ) { int IDENT_6 = 0 ; java . util . IDENT_7 < org . apache . streams . core . IDENT_4 > batch = new java . util . concurrent . METHOD_6 ( ) ; try { while ( ( ! ( this . data . isEmpty ( ) ) ) && ( IDENT_6 < ( org . apache . streams . IDENT_8 . test . IDENT_9 . IDENT_10 . IDENT_11 ) ) ) { batch . add ( this . data . METHOD_7 ( ) ) ; ++ IDENT_6 ; } } catch ( java . lang . IDENT_12 IDENT_13 ) { java . lang . Thread . METHOD_8 ( ) . METHOD_9 ( ) ; } this . IDENT_14 = ( batch . isEmpty ( ) ) && ( this . data . isEmpty ( ) ) ; return new org . apache . streams . core . METHOD_10 ( batch ) ; }
org . junit . Assert . assertEquals ( 4 , count ) 