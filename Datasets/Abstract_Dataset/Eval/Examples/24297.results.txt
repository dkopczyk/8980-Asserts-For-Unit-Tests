METHOD_0 ( ) { org . apache . IDENT_0 . catalog . Schema schema = org . apache . IDENT_0 . catalog . IDENT_1 . builder ( ) . add ( STRING_0 , Type . IDENT_2 ) . add ( STRING_1 , Type . IDENT_2 ) . build ( ) ; org . apache . IDENT_0 . catalog . IDENT_3 [ ] IDENT_4 = org . apache . IDENT_0 . plan . util . IDENT_5 . METHOD_1 ( schema ) ; org . apache . IDENT_0 . storage . IDENT_6 s = new org . apache . IDENT_0 . storage . METHOD_2 ( 2 ) ; s . put ( 0 , org . apache . IDENT_0 . IDENT_7 . IDENT_8 . METHOD_3 ( STRING_2 ) ) ; s . put ( 1 , org . apache . IDENT_0 . IDENT_7 . IDENT_8 . METHOD_3 ( STRING_3 ) ) ; org . apache . IDENT_0 . storage . METHOD_2 e = new org . apache . IDENT_0 . storage . METHOD_2 ( 2 ) ; e . put ( 0 , org . apache . IDENT_0 . IDENT_7 . IDENT_8 . METHOD_3 ( STRING_4 ) ) ; e . put ( 1 , org . apache . IDENT_0 . IDENT_7 . IDENT_8 . METHOD_3 ( STRING_5 ) ) ; org . apache . IDENT_0 . storage . IDENT_9 expected = new org . apache . IDENT_0 . storage . METHOD_4 ( IDENT_4 , s , e ) ; org . apache . IDENT_0 . engine . IDENT_10 . IDENT_11 IDENT_12 = new org . apache . IDENT_0 . engine . IDENT_10 . METHOD_5 ( expected , IDENT_4 , true ) ; org . apache . IDENT_0 . storage . METHOD_4 [ ] IDENT_13 = IDENT_12 . METHOD_6 ( INT_0 ) ; org . apache . IDENT_0 . storage . METHOD_4 IDENT_14 = null ; for ( org . apache . IDENT_0 . storage . METHOD_4 r : IDENT_13 ) { if ( IDENT_14 != null ) { "<AssertPlaceHolder>" ; } IDENT_14 = r ; } } compareTo ( org . apache . IDENT_0 . IDENT_15 ) { int result = id . compareTo ( IDENT_16 . id ) ; if ( result == 0 ) { return ( IDENT_17 ) - ( IDENT_16 . IDENT_17 ) ; } else { return result ; } }
org . junit . Assert . assertTrue ( ( ( IDENT_14 . compareTo ( r ) ) < 0 ) ) 