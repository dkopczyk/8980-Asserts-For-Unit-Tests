METHOD_0 ( ) { org . apache . IDENT_0 . storage . IDENT_1 . IDENT_2 [ ] IDENT_3 = org . apache . IDENT_0 . engine . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_1 ( conf , STRING_0 , IDENT_7 . METHOD_2 ( ) , new org . apache . hadoop . fs . Path ( IDENT_7 . METHOD_3 ( ) ) , Integer . MAX_VALUE ) ; org . apache . IDENT_0 . storage . IDENT_1 . IDENT_2 [ ] IDENT_8 = org . apache . IDENT_0 . engine . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_1 ( conf , STRING_1 , IDENT_9 . METHOD_2 ( ) , new org . apache . hadoop . fs . Path ( IDENT_9 . METHOD_3 ( ) ) , Integer . MAX_VALUE ) ; org . apache . IDENT_0 . storage . IDENT_1 . IDENT_2 [ ] IDENT_10 = org . apache . IDENT_0 . util . IDENT_11 . METHOD_4 ( IDENT_8 , IDENT_3 ) ; org . apache . hadoop . fs . Path IDENT_12 = org . apache . IDENT_0 . util . IDENT_13 . METHOD_5 ( ( ( org . apache . IDENT_0 . IDENT_14 . IDENT_15 ) + STRING_2 ) ) ; org . apache . IDENT_0 . IDENT_16 . IDENT_17 ctx = new org . apache . IDENT_0 . IDENT_16 . METHOD_6 ( new org . apache . IDENT_0 . engine . query . METHOD_7 ( conf ) , org . apache . IDENT_0 . IDENT_18 . METHOD_8 ( ) , IDENT_10 , IDENT_12 ) ; ctx . METHOD_9 ( new org . apache . IDENT_0 . engine . IDENT_4 . IDENT_19 . METHOD_10 ( ) ) ; org . apache . IDENT_0 . IDENT_20 . IDENT_21 expr = IDENT_22 . parse ( IDENT_23 [ 4 ] ) ; org . apache . IDENT_0 . plan . IDENT_24 . IDENT_25 plan = IDENT_4 . METHOD_11 ( IDENT_26 , expr ) . METHOD_12 ( ) . METHOD_13 ( ) ; org . apache . IDENT_0 . engine . IDENT_4 . IDENT_27 IDENT_28 = new org . apache . IDENT_0 . engine . IDENT_4 . METHOD_14 ( conf ) ; org . apache . IDENT_0 . engine . IDENT_4 . IDENT_5 . IDENT_29 exec = IDENT_28 . METHOD_11 ( ctx , plan ) ; org . apache . IDENT_0 . engine . IDENT_4 . IDENT_5 . IDENT_30 IDENT_31 = ( ( org . apache . IDENT_0 . engine . IDENT_4 . IDENT_5 . IDENT_30 ) ( exec ) ) ; int count = 0 ; exec . init ( ) ; while ( ( exec . next ( ) ) != null ) { count = count + 1 ; } exec . close ( ) ; "<AssertPlaceHolder>" ; } close ( ) { if ( IDENT_32 ) { return ; } IDENT_32 = true ; if ( ( IDENT_33 ) != null ) { IDENT_33 . close ( ) ; IDENT_33 = null ; } if ( ( IDENT_34 ) != null ) { IDENT_34 . METHOD_15 ( ) ; IDENT_34 = null ; } if ( ( IDENT_35 ) != null ) { org . apache . IDENT_0 . IDENT_36 . exec . IDENT_37 . METHOD_16 ( IDENT_35 . METHOD_17 ( ) ) ; } if ( ! ( IDENT_38 . METHOD_18 ( IDENT_39 . IDENT_40 . . IDENT_41 ) ) ) { org . apache . hadoop . fs . Path IDENT_42 = org . apache . IDENT_0 . conf . IDENT_39 . METHOD_19 ( IDENT_38 , IDENT_43 ) ; if ( IDENT_44 . METHOD_3 ( ) . equals ( IDENT_42 . METHOD_20 ( ) ) ) { IDENT_45 . run ( ( ) -> { try { IDENT_42 . METHOD_21 ( IDENT_38 ) . delete ( IDENT_42 . METHOD_22 ( ) , true ) ; } catch ( e ) { org . apache . IDENT_0 . IDENT_36 . exec . IDENT_46 . LOG . error ( org . apache . IDENT_0 . IDENT_36 . exec . e ) ; } } ) ; } } org . apache . IDENT_0 . IDENT_36 . exec . IDENT_46 . LOG . info ( java . lang . String . format ( STRING_3 , IDENT_47 , IDENT_43 , ( ( IDENT_48 ) != null ? STRING_4 + ( IDENT_48 ) : "" ) , IDENT_49 ) ) ; }
org . junit . Assert . assertEquals ( 0 , count ) 