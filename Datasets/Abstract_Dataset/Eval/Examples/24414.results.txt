METHOD_0 ( ) { class IDENT_0 { @ org . apache . IDENT_1 . config . Field ( IDENT_2 = true ) org . apache . IDENT_1 . utils . IDENT_3 field ; } IDENT_0 parser = new METHOD_1 ( ) ; java . util . Map < java . lang . String , org . apache . IDENT_1 . config . IDENT_4 > params = new java . util . HashMap ( ) ; try { java . lang . String val = STRING_0 ; params . put ( STRING_1 , new org . apache . IDENT_1 . config . IDENT_4 < java . lang . String > ( STRING_1 , java . lang . String . class , val ) ) ; org . apache . IDENT_1 . utils . IDENT_5 . METHOD_2 ( parser , params ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( STRING_2 ) ; } try { java . util . Date val = new java . util . Date ( ) ; params . put ( STRING_1 , new org . apache . IDENT_1 . config . IDENT_4 < java . util . Date > ( STRING_1 , java . util . Date . class , val ) ) ; org . apache . IDENT_1 . utils . IDENT_5 . METHOD_2 ( parser , params ) ; org . junit . Assert . fail ( STRING_3 ) ; } catch ( org . apache . IDENT_1 . exception . IDENT_6 e ) { } } METHOD_2 ( java . lang . Object , java . util . Map ) { java . lang . Class < ? > IDENT_7 = bean . getClass ( ) ; if ( ! ( org . apache . IDENT_1 . utils . IDENT_5 . IDENT_8 . containsKey ( IDENT_7 ) ) ) { MOD_0 ( org . apache . IDENT_1 . config . IDENT_9 . class ) { if ( ! ( org . apache . IDENT_1 . utils . IDENT_5 . IDENT_8 . containsKey ( IDENT_7 ) ) ) { java . util . List < java . lang . reflect . IDENT_10 > IDENT_11 = org . apache . IDENT_1 . utils . IDENT_5 . METHOD_3 ( IDENT_7 , org . apache . IDENT_1 . config . Field . class ) ; java . util . List < org . apache . IDENT_1 . config . IDENT_12 > fields = new java . util . ArrayList ( IDENT_11 . size ( ) ) ; for ( java . lang . reflect . IDENT_10 IDENT_13 : IDENT_11 ) { fields . add ( new org . apache . IDENT_1 . config . METHOD_4 ( IDENT_13 ) ) ; } org . apache . IDENT_1 . utils . IDENT_5 . IDENT_8 . put ( IDENT_7 , fields ) ; } } } java . util . List < org . apache . IDENT_1 . config . METHOD_4 > fields = org . apache . IDENT_1 . utils . IDENT_5 . IDENT_8 . get ( IDENT_7 ) ; java . util . Set < java . lang . String > IDENT_14 = new java . util . HashSet ( ) ; for ( org . apache . IDENT_1 . config . METHOD_4 field : fields ) { IDENT_14 . add ( field . getName ( ) ) ; org . apache . IDENT_1 . config . IDENT_4 < ? > param = params . get ( field . getName ( ) ) ; if ( param != null ) { if ( field . getType ( ) . METHOD_5 ( param . getType ( ) ) ) { try { field . METHOD_6 ( bean , param . getValue ( ) ) ; } catch ( java . lang . Exception e ) { throw new org . apache . IDENT_1 . exception . METHOD_7 ( e . getMessage ( ) , e ) ; } } else { java . lang . String msg = java . lang . String . format ( Locale . IDENT_15 , ( STRING_4 + STRING_5 ) , param . getValue ( ) , param . getValue ( ) . getClass ( ) , field . getName ( ) , field . getType ( ) ) ; throw new org . apache . IDENT_1 . exception . METHOD_7 ( msg ) ; } } else if ( field . METHOD_8 ( ) ) { java . lang . String msg = java . lang . String . format ( Locale . IDENT_15 , ( STRING_6 + STRING_7 ) , field . getName ( ) , bean . getClass ( ) . getName ( ) ) ; throw new org . apache . IDENT_1 . exception . METHOD_7 ( msg ) ; } else { } } }
org . junit . Assert . assertEquals ( val , parser . field ) 