METHOD_0 ( ) { org . apache . IDENT_0 . request . IDENT_1 request = METHOD_1 ( org . apache . IDENT_0 . request . IDENT_1 . class ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_2 = METHOD_1 ( java . util . Map . class ) ; java . util . IDENT_3 < org . apache . IDENT_0 . IDENT_4 > IDENT_5 = METHOD_1 ( java . util . IDENT_3 . class ) ; expect ( request . METHOD_2 ( STRING_0 ) ) . andReturn ( IDENT_2 ) ; expect ( IDENT_2 . get ( org . apache . IDENT_0 . impl . IDENT_6 . IDENT_7 ) ) . andReturn ( IDENT_5 ) ; replay ( IDENT_8 , IDENT_9 , IDENT_10 , IDENT_11 , IDENT_12 , request , IDENT_2 , IDENT_5 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_8 , IDENT_9 , IDENT_10 , IDENT_11 , IDENT_12 , request , IDENT_2 , IDENT_5 ) ; } METHOD_3 ( org . apache . IDENT_0 . request . IDENT_1 ) { java . util . Map < java . lang . String , java . lang . Object > IDENT_2 = IDENT_13 . METHOD_2 ( STRING_0 ) ; java . util . IDENT_3 < org . apache . IDENT_0 . IDENT_4 > IDENT_14 = ( ( java . util . IDENT_3 < org . apache . IDENT_0 . IDENT_4 > ) ( IDENT_2 . get ( org . apache . IDENT_0 . impl . IDENT_15 . IDENT_7 ) ) ) ; if ( IDENT_14 == null ) { IDENT_14 = new java . util . IDENT_16 < org . apache . IDENT_0 . IDENT_4 > ( ) ; IDENT_2 . put ( org . apache . IDENT_0 . impl . IDENT_15 . IDENT_7 , IDENT_14 ) ; } return IDENT_14 ; }
org . junit . Assert . assertEquals ( IDENT_5 , container . METHOD_3 ( request ) ) 