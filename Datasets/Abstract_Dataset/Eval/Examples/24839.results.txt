METHOD_0 ( ) { final org . apache . tinkerpop . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = org . apache . tinkerpop . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( ) ; final org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_5 v = IDENT_4 . METHOD_2 ( STRING_0 ) ; final org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_5 v2 = IDENT_4 . METHOD_2 ( STRING_0 ) ; v . METHOD_3 ( STRING_1 , v2 ) ; final org . apache . tinkerpop . IDENT_0 . IDENT_2 . io . IDENT_6 writer = METHOD_4 ( IDENT_7 ) ; final org . apache . tinkerpop . IDENT_0 . IDENT_2 . io . IDENT_8 reader = METHOD_5 ( IDENT_7 ) ; try ( final java . io . ByteArrayOutputStream out = new java . io . ByteArrayOutputStream ( ) ) { writer . METHOD_6 ( out , IDENT_4 ) ; final java . lang . String json = out . toString ( ) ; final org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_9 IDENT_10 = ( ( org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_9 ) ( reader . METHOD_7 ( new java . io . ByteArrayInputStream ( json . getBytes ( ) ) , java . lang . Object . class ) ) ) ; "<AssertPlaceHolder>" ; } catch ( java . io . IOException e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( ( STRING_2 + ( e . getMessage ( ) ) ) ) ; } } METHOD_8 ( org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_9 , org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_9 ) { final java . util . Iterator < org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_5 > IDENT_11 = IDENT_12 . METHOD_9 ( ) ; final java . util . Iterator < org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_5 > IDENT_13 = IDENT_14 . METHOD_9 ( ) ; while ( IDENT_11 . hasNext ( ) ) { final org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_5 v = IDENT_11 . next ( ) ; final org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_5 IDENT_15 = IDENT_13 . next ( ) ; if ( ! ( v . equals ( IDENT_15 ) ) ) { return false ; } final java . util . Iterator IDENT_16 = v . properties ( ) ; final java . util . Iterator IDENT_17 = IDENT_15 . properties ( ) ; while ( IDENT_16 . hasNext ( ) ) { final org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_18 IDENT_19 = ( ( org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_18 ) ( IDENT_16 . next ( ) ) ) ; final org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_18 IDENT_20 = ( ( org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_18 ) ( IDENT_17 . next ( ) ) ) ; if ( ( ! ( IDENT_19 . value ( ) . equals ( IDENT_20 . value ( ) ) ) ) || ( ! ( IDENT_19 . equals ( IDENT_20 ) ) ) ) { return false ; } } } final java . util . Iterator < org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_21 > IDENT_22 = IDENT_12 . METHOD_10 ( ) ; final java . util . Iterator < org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_21 > IDENT_23 = IDENT_14 . METHOD_10 ( ) ; while ( IDENT_22 . hasNext ( ) ) { final org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_21 e = IDENT_22 . next ( ) ; final org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_21 IDENT_24 = IDENT_23 . next ( ) ; if ( ! ( e . equals ( IDENT_24 ) ) ) { return false ; } final java . util . Iterator IDENT_25 = e . properties ( ) ; final java . util . Iterator IDENT_26 = IDENT_24 . properties ( ) ; while ( IDENT_25 . hasNext ( ) ) { final org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_27 IDENT_28 = ( ( org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_27 ) ( IDENT_25 . next ( ) ) ) ; final org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_27 IDENT_29 = ( ( org . apache . tinkerpop . IDENT_0 . IDENT_2 . IDENT_27 ) ( IDENT_26 . next ( ) ) ) ; if ( ( ! ( IDENT_28 . value ( ) . equals ( IDENT_29 . value ( ) ) ) ) || ( ! ( IDENT_28 . equals ( IDENT_29 ) ) ) ) { return false ; } } } return true ; }
org . junit . Assert . assertTrue ( METHOD_8 ( IDENT_4 , IDENT_10 ) ) 