METHOD_0 ( ) { doReturn ( Boolean . IDENT_0 ) . when ( IDENT_1 ) . getProperty ( IDENT_2 , IDENT_3 . IDENT_4 ) ; doReturn ( METHOD_1 ( record ) ) . when ( IDENT_1 ) . METHOD_1 ( record , IDENT_3 . IDENT_5 , IDENT_6 . IDENT_7 ) ; IDENT_8 . METHOD_2 ( true ) ; "<AssertPlaceHolder>" ; verify ( IDENT_1 , times ( 1 ) ) . METHOD_1 ( record , IDENT_3 . IDENT_5 , IDENT_6 . IDENT_7 ) ; verify ( IDENT_1 , times ( 1 ) ) . getProperty ( IDENT_2 , IDENT_3 . IDENT_4 ) ; verify ( IDENT_9 , METHOD_3 ( ) ) . METHOD_4 ( record ) ; } evaluate ( org . IDENT_10 . service . IDENT_11 . repository . IDENT_12 ) { int result = net . sf . IDENT_13 . IDENT_14 . IDENT_15 . IDENT_16 ; java . util . Map < java . lang . String , java . lang . Integer > map = org . IDENT_10 . repo . transaction . IDENT_17 . METHOD_5 ( STRING_0 ) ; java . lang . String key = ( ( ( ( getName ( ) ) + STRING_1 ) + ( IDENT_18 . toString ( ) ) ) + STRING_1 ) + ( org . IDENT_10 . repo . security . authentication . IDENT_19 . METHOD_6 ( ) ) ; if ( map . containsKey ( key ) ) { result = map . get ( key ) ; } else { if ( METHOD_7 ( ) . METHOD_8 ( IDENT_18 ) ) { if ( ( ( METHOD_9 ( IDENT_18 ) ) && ( METHOD_10 ( IDENT_18 ) ) ) && ( METHOD_11 ( IDENT_18 ) ) ) { result = METHOD_12 ( IDENT_18 ) ; } else { result = net . sf . IDENT_13 . IDENT_14 . IDENT_15 . IDENT_20 ; } } result = METHOD_13 ( IDENT_18 , result ) ; if ( ( org . IDENT_10 . module . IDENT_21 . IDENT_22 . IDENT_23 . IDENT_24 . LOGGER . METHOD_14 ( ) ) && ( ( net . sf . IDENT_13 . IDENT_14 . IDENT_15 . IDENT_20 ) == result ) ) { org . IDENT_10 . module . IDENT_21 . IDENT_22 . IDENT_23 . IDENT_24 . LOGGER . debug ( ( ( ( STRING_2 + ( getName ( ) ) ) + STRING_3 ) + ( IDENT_18 . toString ( ) ) ) ) ; } map . put ( key , result ) ; } return result ; }
org . junit . Assert . assertFalse ( IDENT_8 . evaluate ( record ) ) 