METHOD_0 ( ) { org . apache . IDENT_0 . IDENT_1 . binding . IDENT_2 . provider . reference . IDENT_3 request = new org . apache . IDENT_0 . IDENT_1 . binding . IDENT_2 . provider . reference . METHOD_1 ( org . apache . IDENT_0 . IDENT_1 . binding . IDENT_2 . testing . IDENT_4 . IDENT_5 , STRING_0 ) ; try { request . METHOD_2 ( FLOAT_0 ) ; request . METHOD_2 ( FLOAT_0 ) ; request . METHOD_3 ( org . apache . IDENT_0 . IDENT_1 . binding . IDENT_2 . testing . Double . class ) ; request . METHOD_4 ( org . apache . IDENT_0 . IDENT_1 . binding . IDENT_2 . testing . exceptions . IDENT_6 . IDENT_7 . class ) ; request . METHOD_4 ( org . apache . IDENT_0 . IDENT_1 . binding . IDENT_2 . testing . exceptions . IDENT_6 . IDENT_8 . class ) ; request . invoke ( ) ; } catch ( java . lang . Exception e ) { "<AssertPlaceHolder>" ; } } invoke ( ) { org . apache . IDENT_0 . IDENT_1 . binding . IDENT_2 . provider . reference . IDENT_9 response = new org . apache . IDENT_0 . IDENT_1 . binding . IDENT_2 . provider . reference . METHOD_5 ( ) ; java . lang . String IDENT_10 = METHOD_6 ( ) ; org . IDENT_11 . IDENT_12 . IDENT_13 . IDENT_14 IDENT_15 = ( ( org . IDENT_11 . IDENT_12 . IDENT_13 . IDENT_16 ) ( IDENT_17 ) ) . METHOD_7 ( IDENT_10 , true ) ; METHOD_8 ( IDENT_15 ) ; try { IDENT_18 = IDENT_17 . METHOD_9 ( IDENT_15 ) ; if ( ( ( IDENT_18 ) != null ) && ( ( IDENT_19 ) != null ) ) { response . METHOD_10 ( org . apache . IDENT_0 . IDENT_1 . binding . IDENT_2 . provider . types . util . IDENT_20 . read ( IDENT_19 . METHOD_11 ( ) , IDENT_18 ) ) ; } } catch ( org . IDENT_11 . IDENT_12 . IDENT_13 . IDENT_21 IDENT_22 ) { METHOD_12 ( IDENT_22 ) ; } catch ( org . IDENT_11 . IDENT_12 . IDENT_23 IDENT_24 ) { METHOD_13 ( IDENT_24 ) ; } catch ( java . lang . Exception e ) { throw e ; } finally { METHOD_14 ( ) ; } return response ; }
org . junit . Assert . assertTrue ( ( e instanceof org . apache . IDENT_0 . IDENT_1 . binding . IDENT_2 . testing . exceptions . IDENT_6 . IDENT_8 ) ) 