METHOD_0 ( ) { com . google . common . util . concurrent . IDENT_0 service = new org . apache . IDENT_1 . internal . IDENT_2 . METHOD_1 ( STRING_0 , new java . util . concurrent . atomic . METHOD_2 ( ) ) ; com . google . common . util . concurrent . IDENT_3 < com . google . common . util . concurrent . IDENT_0 . IDENT_4 > IDENT_5 = org . apache . IDENT_1 . internal . IDENT_6 . METHOD_3 ( service ) ; service . start ( ) ; service . METHOD_4 ( ) ; IDENT_5 . get ( ) ; java . util . concurrent . atomic . METHOD_2 IDENT_7 = new java . util . concurrent . atomic . METHOD_2 ( ) ; service = new org . apache . IDENT_1 . internal . IDENT_2 . METHOD_1 ( STRING_1 , IDENT_7 ) ; IDENT_5 = org . apache . IDENT_1 . internal . IDENT_6 . METHOD_3 ( service ) ; service . METHOD_5 ( ) ; IDENT_7 . set ( true ) ; service . METHOD_4 ( ) ; try { IDENT_5 . get ( ) ; "<AssertPlaceHolder>" ; } catch ( java . util . concurrent . IDENT_8 e ) { } } get ( ) { return METHOD_6 ( ) ; }
org . junit . Assert . assertTrue ( false ) 