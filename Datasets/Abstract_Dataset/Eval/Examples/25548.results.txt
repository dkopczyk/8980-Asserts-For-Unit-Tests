METHOD_0 ( ) { com . google . IDENT_0 . IDENT_1 IDENT_2 = METHOD_1 ( ) ; org . apache . IDENT_3 . persistence . IDENT_4 . serialization . IDENT_5 . IDENT_6 IDENT_7 = IDENT_2 . getInstance ( org . apache . IDENT_3 . persistence . IDENT_4 . serialization . IDENT_5 . IDENT_6 . class ) ; java . lang . String IDENT_8 = STRING_0 + ( org . apache . commons . lang . IDENT_9 . METHOD_2 ( 10 ) ) ; long IDENT_10 = INT_0 ; int IDENT_11 = 20 ; int IDENT_12 = 20 ; int IDENT_13 = INT_1 ; java . util . concurrent . IDENT_14 IDENT_15 = java . util . concurrent . IDENT_16 . METHOD_3 ( IDENT_11 ) ; for ( int i = 0 ; i < IDENT_12 ; i ++ ) { IDENT_15 . METHOD_4 ( ( ) -> { for ( int j = 0 ; j < IDENT_13 ; j ++ ) { IDENT_7 . METHOD_5 ( IDENT_8 , IDENT_17 . Type . IDENT_18 , IDENT_10 , 1 ) ; } } ) ; } IDENT_15 . METHOD_6 ( ) ; try { while ( ! ( IDENT_15 . METHOD_7 ( 3 , TimeUnit . IDENT_19 ) ) ) { System . out . println ( ( STRING_1 + ( IDENT_7 . METHOD_8 ( IDENT_8 , IDENT_17 . Type . IDENT_18 , IDENT_10 ) ) ) ) ; } } catch ( java . lang . IDENT_20 e ) { e . printStackTrace ( ) ; } "<AssertPlaceHolder>" ; } METHOD_8 ( java . lang . String , org . apache . IDENT_3 . persistence . IDENT_4 . serialization . IDENT_5 . IDENT_21 , long ) { java . lang . String key = ( IDENT_8 + type ) + IDENT_10 ; MOD_0 ( IDENT_22 ) { if ( ( IDENT_22 . get ( key ) ) == null ) { java . lang . Long value = METHOD_9 ( IDENT_8 , type , IDENT_10 ) ; if ( value == null ) { throw new org . apache . IDENT_3 . persistence . IDENT_4 . exceptions . METHOD_10 ( java . text . IDENT_23 . format ( STRING_2 , IDENT_8 , type , IDENT_10 ) ) ; } else { IDENT_22 . put ( key , new org . apache . IDENT_3 . persistence . IDENT_4 . serialization . IDENT_5 . impl . IDENT_24 . METHOD_11 ( value ) ) ; } } org . apache . IDENT_3 . persistence . IDENT_4 . serialization . IDENT_5 . impl . IDENT_24 . METHOD_11 IDENT_25 = IDENT_22 . get ( key ) ; if ( IDENT_25 . METHOD_12 ( ) ) { long IDENT_26 = IDENT_25 . METHOD_13 ( ) . get ( ) ; METHOD_14 ( IDENT_8 , type , IDENT_10 , IDENT_26 ) ; IDENT_25 . METHOD_15 ( METHOD_9 ( IDENT_8 , type , IDENT_10 ) ) ; IDENT_25 . METHOD_13 ( ) . set ( 0L ) ; } } return IDENT_22 . get ( key ) . value ( ) ; }
org . junit . Assert . assertEquals ( ( IDENT_12 * IDENT_13 ) , IDENT_7 . METHOD_8 ( IDENT_8 , IDENT_17 . Type . IDENT_18 , IDENT_10 ) ) 