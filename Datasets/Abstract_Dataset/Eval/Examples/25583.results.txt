METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String api = STRING_1 ; int IDENT_1 = 100 ; org . apache . IDENT_2 . query . validator . IDENT_3 request = new org . apache . IDENT_2 . query . validator . METHOD_1 ( ) ; request . METHOD_2 ( IDENT_0 ) ; request . METHOD_3 ( ) . METHOD_4 ( api ) ; request . METHOD_3 ( ) . METHOD_5 ( IDENT_1 ) ; org . apache . IDENT_2 . query . validator . IDENT_4 response = validator . execute ( request ) ; "<AssertPlaceHolder>" ; } toString ( ) { java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; if ( ( IDENT_5 ) != null ) { sb . append ( "/" ) ; sb . append ( IDENT_5 ) ; } for ( int i = 0 ; i < ( parameters . size ( ) ) ; i ++ ) { org . apache . IDENT_2 . services . IDENT_6 p = parameters . get ( i ) ; if ( p instanceof org . apache . IDENT_2 . services . IDENT_6 . IDENT_7 ) { if ( i == ( ( parameters . size ( ) ) - 1 ) ) { sb . append ( STRING_2 ) ; } else { sb . append ( STRING_3 ) ; } boolean IDENT_8 = false ; java . lang . String q = p . toString ( ) ; if ( METHOD_6 ( q ) ) { try { sb . append ( STRING_4 ) . append ( java . net . IDENT_9 . encode ( q , STRING_5 ) ) ; } catch ( java . io . IDENT_10 e ) { org . apache . IDENT_2 . services . IDENT_11 . logger . error ( STRING_6 , e ) ; } IDENT_8 = true ; } int IDENT_1 = p . METHOD_7 ( ) . METHOD_8 ( ) ; if ( IDENT_1 != ( org . apache . IDENT_2 . persistence . Query . IDENT_12 ) ) { if ( IDENT_8 ) { sb . append ( STRING_7 ) ; } sb . append ( STRING_8 ) . append ( IDENT_1 ) ; IDENT_8 = true ; } if ( ( p . METHOD_7 ( ) . METHOD_9 ( ) ) != null ) { if ( IDENT_8 ) { sb . append ( STRING_7 ) ; } sb . append ( STRING_9 ) . append ( p . METHOD_7 ( ) . METHOD_9 ( ) ) ; IDENT_8 = true ; } } else { sb . append ( STRING_10 ) ; sb . append ( p . toString ( ) ) ; } } return sb . toString ( ) ; }
org . junit . Assert . assertTrue ( response . toString ( ) , response . result ( ) ) 