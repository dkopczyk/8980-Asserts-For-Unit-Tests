METHOD_0 ( ) { long IDENT_0 = ( java . lang . System . currentTimeMillis ( ) ) - ( ( ( INT_0 * INT_1 ) * INT_1 ) * 1000 ) ; app . METHOD_1 ( ) ; java . lang . String payload = STRING_0 ; org . apache . IDENT_1 . services . IDENT_2 . IDENT_3 . Map < java . lang . String , java . lang . String > IDENT_4 = new org . apache . IDENT_1 . services . IDENT_2 . IDENT_3 . HashMap < java . lang . String , java . lang . String > ( 1 ) ; IDENT_4 . put ( IDENT_5 . METHOD_2 ( ) . toString ( ) , payload ) ; app . put ( STRING_1 , IDENT_4 ) ; app . put ( STRING_2 , java . lang . System . currentTimeMillis ( ) ) ; app . put ( STRING_3 , false ) ; app . put ( STRING_4 , ( ( java . lang . System . currentTimeMillis ( ) ) + INT_2 ) ) ; org . apache . IDENT_1 . services . IDENT_2 . IDENT_3 . Entity e = app . METHOD_3 ( IDENT_6 . IDENT_7 , 1 , STRING_5 , IDENT_8 . METHOD_2 ( ) , STRING_6 ) . METHOD_4 ( ) ; app . METHOD_3 ( IDENT_6 . IDENT_9 , 1 , STRING_6 , e . METHOD_2 ( ) ) ; org . apache . IDENT_1 . services . IDENT_2 . IDENT_3 . IDENT_10 IDENT_11 = app . METHOD_5 ( ) . get ( e . METHOD_2 ( ) , org . apache . IDENT_1 . services . IDENT_2 . IDENT_3 . IDENT_10 . class ) ; "<AssertPlaceHolder>" ; IDENT_11 = METHOD_6 ( IDENT_11 ) ; METHOD_7 ( IDENT_11 , STRING_7 , IDENT_0 , 1 ) ; METHOD_7 ( IDENT_11 , STRING_8 , IDENT_0 , 0 ) ; } METHOD_8 ( ) { return IDENT_4 ; }
org . junit . Assert . assertEquals ( IDENT_11 . METHOD_8 ( ) . get ( IDENT_5 . METHOD_2 ( ) . toString ( ) ) , payload ) 