METHOD_0 ( ) { org . apache . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = IDENT_1 . METHOD_1 ( STRING_0 , IDENT_4 . IDENT_5 ) ; org . apache . IDENT_0 . IDENT_1 . IDENT_6 IDENT_7 = IDENT_3 . METHOD_2 ( 0 , IDENT_4 . IDENT_5 ) ; IDENT_7 . METHOD_3 ( STRING_1 ) ; IDENT_1 . METHOD_4 ( IDENT_8 ) ; "<AssertPlaceHolder>" ; IDENT_3 = IDENT_1 . METHOD_5 ( ) . get ( 0 ) ; try { IDENT_3 . METHOD_6 ( ) . get ( 0 ) . METHOD_7 ( ) ; org . junit . Assert . fail ( STRING_2 ) ; } catch ( org . apache . IDENT_0 . IDENT_9 . IDENT_10 e ) { } } METHOD_5 ( ) { java . util . List < org . apache . IDENT_0 . IDENT_1 . IDENT_2 > IDENT_11 = new java . util . ArrayList ( ) ; for ( java . lang . String IDENT_12 : IDENT_13 . values ( ) ) { try { IDENT_11 . add ( METHOD_8 ( IDENT_12 ) . METHOD_9 ( ) ) ; } catch ( java . io . IOException e ) { org . apache . IDENT_0 . IDENT_1 . IDENT_14 . LOGGER . warn ( ( STRING_3 + IDENT_12 ) , e ) ; } } return IDENT_11 ; }
org . junit . Assert . assertEquals ( 1 , IDENT_1 . METHOD_5 ( ) . size ( ) ) 