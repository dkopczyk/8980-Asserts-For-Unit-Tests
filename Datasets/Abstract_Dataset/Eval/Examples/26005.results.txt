METHOD_0 ( ) { java . io . File app = io . IDENT_0 . IDENT_1 . service . IDENT_2 . IDENT_3 . IDENT_4 . resolve ( STRING_0 ) . METHOD_1 ( ) ; org . openqa . selenium . remote . IDENT_5 IDENT_6 = new org . openqa . selenium . remote . METHOD_2 ( ) ; IDENT_6 . METHOD_3 ( io . IDENT_0 . IDENT_1 . service . IDENT_2 . IDENT_7 , STRING_1 ) ; IDENT_6 . METHOD_3 ( io . IDENT_0 . IDENT_1 . service . IDENT_2 . IDENT_8 , true ) ; IDENT_6 . METHOD_3 ( io . IDENT_0 . IDENT_1 . service . IDENT_2 . IDENT_9 , INT_0 ) ; IDENT_6 . METHOD_3 ( io . IDENT_0 . IDENT_1 . service . IDENT_2 . IDENT_10 , STRING_2 ) ; IDENT_6 . METHOD_3 ( io . IDENT_0 . IDENT_1 . service . IDENT_2 . IDENT_11 , STRING_3 ) ; IDENT_6 . METHOD_3 ( io . IDENT_0 . IDENT_1 . service . IDENT_2 . IDENT_12 , app . getAbsolutePath ( ) ) ; IDENT_6 . METHOD_3 ( io . IDENT_0 . IDENT_1 . service . IDENT_2 . IDENT_13 , io . IDENT_0 . IDENT_1 . service . IDENT_2 . IDENT_3 . IDENT_14 . METHOD_4 ( ) ) ; service = new io . IDENT_0 . IDENT_1 . service . IDENT_2 . METHOD_5 ( ) . METHOD_6 ( IDENT_6 ) . build ( ) ; service . start ( ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ) { IDENT_15 . METHOD_8 ( ) ; try { if ( ( process ) == null ) { return false ; } if ( ! ( process . METHOD_7 ( ) ) ) { return false ; } try { METHOD_9 ( INT_1 , TimeUnit . IDENT_16 ) ; return true ; } catch ( org . openqa . selenium . net . IDENT_17 e ) { return false ; } catch ( java . net . IDENT_18 e ) { throw new io . IDENT_0 . IDENT_1 . service . IDENT_2 . METHOD_10 ( e . getMessage ( ) , e ) ; } } finally { METHOD_8 . METHOD_11 ( ) ; } }
org . junit . Assert . assertTrue ( service . METHOD_7 ( ) ) 