METHOD_0 ( ) { db . collection ( com . IDENT_0 . IDENT_1 . IDENT_2 ) . METHOD_1 ( STRING_0 , null ) ; final com . IDENT_0 . model . IDENT_3 options = new com . IDENT_0 . model . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; final java . lang . Boolean exists = db . collection ( com . IDENT_0 . IDENT_1 . IDENT_2 ) . METHOD_4 ( STRING_2 , options ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String , com . IDENT_0 . model . METHOD_2 ) { try { executor . execute ( METHOD_5 ( key , options ) , com . IDENT_0 . IDENT_4 . IDENT_5 . class ) ; return true ; } catch ( final com . IDENT_0 . IDENT_6 e ) { if ( ( ( ( e . METHOD_6 ( ) ) != null ) && ( ( ( ( e . METHOD_6 ( ) . METHOD_7 ( ) ) == INT_0 ) || ( ( e . METHOD_6 ( ) . METHOD_7 ( ) ) == INT_1 ) ) || ( ( e . METHOD_6 ( ) . METHOD_7 ( ) ) == INT_2 ) ) ) && ( ( options == null ) || ( options . METHOD_8 ( ) ) ) ) { return false ; } throw e ; } }
org . junit . Assert . assertThat ( exists , org . hamcrest . Matchers . is ( false ) ) 