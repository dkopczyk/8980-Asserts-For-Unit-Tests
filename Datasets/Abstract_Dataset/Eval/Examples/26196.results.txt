METHOD_0 ( ) { final java . util . concurrent . atomic . IDENT_0 i = new java . util . concurrent . atomic . METHOD_1 ( 0L ) ; final com . IDENT_1 . IDENT_2 < com . IDENT_1 . IDENT_3 . IDENT_4 > IDENT_5 = db . query ( STRING_0 , com . IDENT_1 . IDENT_3 . IDENT_4 . class ) ; IDENT_5 . map ( new com . IDENT_1 . IDENT_6 < com . IDENT_1 . IDENT_3 . IDENT_4 , java . lang . Long > ( ) { @ com . IDENT_1 . Override public com . IDENT_1 . Long apply ( final com . IDENT_1 . IDENT_3 . IDENT_4 t ) { return t . METHOD_2 ( ) ; } } ) . METHOD_3 ( new com . IDENT_1 . IDENT_7 < java . lang . Long > ( ) { @ com . IDENT_1 . Override public void accept ( final java . lang . Long t ) { "<AssertPlaceHolder>" ; } } ) ; } accept ( com . IDENT_1 . IDENT_3 . IDENT_4 ) { org . junit . Assert . assertThat ( t . METHOD_2 ( ) , org . hamcrest . Matchers . is ( i . METHOD_4 ( ) ) ) ; }
org . junit . Assert . assertThat ( t , org . hamcrest . Matchers . is ( i . METHOD_4 ( ) ) ) 