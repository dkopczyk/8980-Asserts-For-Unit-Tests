METHOD_0 ( ) { final com . IDENT_0 . IDENT_1 < com . IDENT_0 . IDENT_2 . IDENT_3 > IDENT_4 = db . query ( STRING_0 , com . IDENT_0 . IDENT_2 . IDENT_3 . class ) ; final boolean match = IDENT_4 . map ( new com . IDENT_0 . IDENT_5 < com . IDENT_0 . IDENT_2 . IDENT_3 , java . lang . Long > ( ) { @ com . IDENT_0 . Override public com . IDENT_0 . Long apply ( final com . IDENT_0 . IDENT_2 . IDENT_3 t ) { return t . METHOD_1 ( ) ; } } ) . filter ( new com . IDENT_0 . IDENT_6 < java . lang . Long > ( ) { @ com . IDENT_0 . Override public boolean test ( final java . lang . Long t ) { return t < 50 ; } } ) . METHOD_2 ( new com . IDENT_0 . IDENT_6 < java . lang . Long > ( ) { @ com . IDENT_0 . Override public boolean test ( final java . lang . Long t ) { return t == INT_0 ; } } ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( com . IDENT_0 . IDENT_6 ) { boolean match = false ; for ( final T t : this ) { if ( IDENT_7 . test ( t ) ) { match = true ; break ; } } return match ; }
org . junit . Assert . assertThat ( match , org . hamcrest . Matchers . is ( true ) ) 