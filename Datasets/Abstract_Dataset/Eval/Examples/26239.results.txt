METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . query . expr . IDENT_2 exp = METHOD_1 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . IDENT_0 . IDENT_1 . IDENT_3 ) { java . lang . Object v = IDENT_4 . METHOD_2 ( map ) ; if ( v == null ) return null ; java . lang . String s = null ; if ( v instanceof java . lang . Integer ) { long IDENT_5 = ( ( java . lang . Integer ) ( v ) ) & INT_0 ; s = org . IDENT_0 . IDENT_1 . query . expr . IDENT_6 . convert ( IDENT_5 ) ; } else if ( v instanceof java . lang . Long ) { s = org . IDENT_0 . IDENT_1 . query . expr . IDENT_6 . convert ( ( ( java . lang . Long ) ( v ) ) ) ; } else { s = v . toString ( ) ; } if ( s . isEmpty ( ) ) return null ; try { return org . IDENT_0 . api . IDENT_7 . METHOD_3 ( s ) ; } catch ( java . lang . IllegalArgumentException e ) { return null ; } }
org . junit . Assert . assertTrue ( ( ( java . lang . Boolean ) ( exp . METHOD_2 ( null ) ) ) ) 