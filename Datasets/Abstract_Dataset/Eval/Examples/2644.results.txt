METHOD_0 ( ) { int IDENT_0 = ( eu . IDENT_1 . IDENT_2 . pipeline . format . IDENT_3 . IDENT_4 . xml . IDENT_5 . length ( ) ) + 10 ; final org . w3c . dom . Document document = METHOD_1 ( eu . IDENT_1 . IDENT_2 . pipeline . format . IDENT_3 . IDENT_4 . xml . IDENT_6 , eu . IDENT_1 . IDENT_2 . pipeline . format . IDENT_3 . IDENT_4 . xml . IDENT_5 ) ; final java . lang . String [ ] expressions = new java . lang . String [ ] { ( ( ( IDENT_6 ) + STRING_0 ) + IDENT_0 ) + "]" , ( ( ( IDENT_6 ) + STRING_1 ) + IDENT_0 ) + STRING_2 , ( ( ( IDENT_6 ) + STRING_1 ) + IDENT_0 ) + STRING_2 } ; for ( final java . lang . String IDENT_7 : expressions ) { final eu . IDENT_1 . IDENT_2 . pipeline . format . IDENT_3 . IDENT_4 . xml . IDENT_8 expression = new eu . IDENT_1 . IDENT_2 . pipeline . format . IDENT_3 . IDENT_4 . xml . METHOD_2 ( IDENT_7 ) ; expression . IDENT_9 = new eu . IDENT_1 . IDENT_2 . pipeline . format . xml . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } } evaluate ( org . xml . IDENT_10 . IDENT_11 ) { throw new java . lang . METHOD_4 ( ) ; }
org . junit . Assert . assertNull ( expression . evaluate ( document ) ) 