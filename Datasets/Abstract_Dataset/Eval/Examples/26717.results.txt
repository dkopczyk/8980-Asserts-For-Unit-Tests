METHOD_0 ( ) { final java . util . concurrent . IDENT_0 pool = new java . util . concurrent . METHOD_1 ( 1 ) ; final long IDENT_1 = Integer . MAX_VALUE ; pool . METHOD_2 ( ( ) -> { METHOD_3 ( ) ; for ( int i = 0 ; i < ( com . IDENT_2 . IDENT_3 . concurrent . IDENT_4 . IDENT_5 ) ; i ++ ) { new com . IDENT_2 . IDENT_3 . concurrent . METHOD_4 ( IDENT_1 ) . METHOD_5 ( ) ; } } ) ; IDENT_6 . METHOD_6 ( ) ; System . out . println ( IDENT_7 . get ( ) ) ; "<AssertPlaceHolder>" ; } get ( ) { return IDENT_8 . get ( ) ; }
org . junit . Assert . assertEquals ( ( ( IDENT_1 * ( com . IDENT_2 . IDENT_3 . concurrent . IDENT_4 . IDENT_5 ) ) + ( com . IDENT_2 . IDENT_3 . concurrent . IDENT_4 . IDENT_5 ) ) , IDENT_7 . get ( ) ) 