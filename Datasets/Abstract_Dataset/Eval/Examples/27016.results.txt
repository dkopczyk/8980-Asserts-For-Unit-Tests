METHOD_0 ( ) { com . asakusafw . runtime . io . text . IDENT_0 . IDENT_1 . IDENT_2 format = format ( 3 ) ; java . lang . String [ ] [ ] data = new java . lang . String [ ] [ ] { new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 } , new java . lang . String [ ] { STRING_3 , STRING_4 , STRING_5 } , new java . lang . String [ ] { STRING_6 , STRING_7 , STRING_8 } } ; try ( com . asakusafw . runtime . io . IDENT_3 < java . lang . String [ ] > in = format . METHOD_1 ( java . lang . String [ ] . class , STRING_9 , com . asakusafw . runtime . io . text . IDENT_0 . IDENT_1 . input ( data ) ) ) { java . lang . String [ ] [ ] result = collect ( 3 , in ) ; "<AssertPlaceHolder>" ; } } is ( java . lang . String ) { com . asakusafw . IDENT_4 . java . util . IDENT_5 IDENT_6 = com . asakusafw . IDENT_4 . java . util . IDENT_5 . of ( new com . asakusafw . IDENT_4 . model . METHOD_2 ( null , name ) ) ; IDENT_6 . METHOD_3 ( STRING_10 ) ; java . lang . Object result = invoke ( IDENT_6 . METHOD_4 ( ) ) ; return ( ( java . lang . Boolean ) ( result ) ) ; }
org . junit . Assert . assertThat ( result , is ( data ) ) 