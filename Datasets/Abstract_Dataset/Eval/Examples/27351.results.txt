command ( ) { com . asakusafw . utils . IDENT_0 . IDENT_1 < java . util . function . IDENT_2 < java . lang . String > > IDENT_3 = new com . asakusafw . utils . IDENT_0 . METHOD_0 ( STRING_0 , new com . asakusafw . utils . IDENT_0 . IDENT_4 . METHOD_1 ( STRING_1 ) ) ; IDENT_3 . METHOD_2 ( "a" , new com . asakusafw . utils . IDENT_0 . IDENT_4 . METHOD_1 ( STRING_2 ) ) ; java . util . Optional < java . lang . String > result = IDENT_3 . parse ( "a" ) . map ( IDENT_2 :: get ) ; "<AssertPlaceHolder>" ; } is ( java . lang . String ) { com . asakusafw . IDENT_5 . java . util . IDENT_6 IDENT_7 = com . asakusafw . IDENT_5 . java . util . IDENT_6 . of ( new com . asakusafw . IDENT_5 . model . METHOD_3 ( null , name ) ) ; IDENT_7 . METHOD_4 ( STRING_3 ) ; java . lang . Object result = invoke ( IDENT_7 . METHOD_5 ( ) ) ; return ( ( java . lang . Boolean ) ( result ) ) ; }
org . junit . Assert . assertThat ( result , is ( java . util . Optional . of ( STRING_2 ) ) ) 