METHOD_0 ( ) { com . asakusafw . utils . graph . IDENT_0 < java . lang . Integer > graph = com . asakusafw . utils . graph . IDENT_1 . newInstance ( ) ; com . asakusafw . utils . graph . IDENT_2 . METHOD_1 ( graph , 1 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( com . asakusafw . utils . graph . IDENT_0 ) { if ( graph == null ) { throw new java . lang . IllegalArgumentException ( STRING_0 ) ; } java . util . Set < IDENT_3 > results = new java . util . HashSet ( ) ; for ( com . asakusafw . utils . graph . IDENT_0 . IDENT_4 < ? extends IDENT_3 > IDENT_5 : graph ) { if ( IDENT_5 . METHOD_3 ( ) . isEmpty ( ) ) { results . add ( IDENT_5 . METHOD_4 ( ) ) ; } } return results ; }
org . junit . Assert . assertThat ( com . asakusafw . utils . graph . IDENT_1 . METHOD_2 ( graph ) , is ( set ( 1 ) ) ) 