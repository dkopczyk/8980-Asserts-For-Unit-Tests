METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . String > conf = new java . util . HashMap ( ) ; com . asakusafw . IDENT_0 . core . IDENT_1 < com . asakusafw . IDENT_0 . core . IDENT_2 > IDENT_3 = new com . asakusafw . IDENT_0 . core . METHOD_1 ( STRING_0 , com . asakusafw . IDENT_0 . IDENT_4 . IDENT_5 . class , conf , com . asakusafw . IDENT_0 . core . IDENT_6 . METHOD_2 ( getClass ( ) . METHOD_3 ( ) ) ) ; com . asakusafw . IDENT_0 . core . IDENT_2 instance = IDENT_3 . newInstance ( ) ; java . util . List < com . asakusafw . IDENT_0 . IDENT_4 . IDENT_7 . IDENT_8 > IDENT_9 = new java . util . ArrayList ( ) ; IDENT_9 . add ( new com . asakusafw . IDENT_0 . IDENT_4 . IDENT_7 . METHOD_4 ( "a" ) { @ com . asakusafw . IDENT_0 . IDENT_4 . Override MOD_0 void METHOD_5 ( ) throws java . io . IOException { throw new java . io . IOException ( ) ; } } ) ; try { instance . execute ( IDENT_10 . IDENT_11 , com . asakusafw . IDENT_0 . IDENT_4 . IDENT_7 . IDENT_12 , IDENT_9 , IDENT_2 . IDENT_13 ) ; org . junit . Assert . fail ( ) ; } catch ( java . io . IOException e ) { } java . util . Set < java . lang . String > rest = METHOD_6 ( IDENT_9 ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_14 ; }
org . junit . Assert . assertThat ( rest . size ( ) , is ( 0 ) ) 