METHOD_0 ( ) { java . util . Map < com . asakusafw . IDENT_0 . core . IDENT_1 , java . util . List < ? extends com . asakusafw . IDENT_0 . core . IDENT_2 > > exec = new java . util . HashMap ( ) ; exec . put ( IDENT_1 . IDENT_3 , java . util . Arrays . asList ( command ( 0 ) ) ) ; exec . put ( IDENT_1 . IDENT_4 , java . util . Arrays . asList ( hadoop ( 1 ) , command ( 2 , 1 ) ) ) ; exec . put ( IDENT_1 . IDENT_5 , java . util . Arrays . asList ( command ( 100 ) ) ) ; java . util . Set < com . asakusafw . IDENT_0 . core . IDENT_2 . IDENT_6 > IDENT_7 = java . util . IDENT_8 . METHOD_1 ( IDENT_2 . IDENT_6 . class ) ; com . asakusafw . IDENT_0 . core . IDENT_9 script = new com . asakusafw . IDENT_0 . core . METHOD_2 ( STRING_0 , set ( STRING_1 , STRING_2 ) , exec , IDENT_7 ) ; exec . put ( IDENT_1 . IDENT_10 , java . util . Arrays . asList ( command ( 100 ) ) ) ; com . asakusafw . IDENT_0 . core . METHOD_2 IDENT_11 = new com . asakusafw . IDENT_0 . core . METHOD_2 ( STRING_3 , set ( ) , exec , IDENT_7 ) ; java . util . Properties p = new java . util . Properties ( ) ; script . METHOD_3 ( p ) ; IDENT_11 . METHOD_3 ( p ) ; com . asakusafw . IDENT_0 . core . METHOD_2 IDENT_12 = com . asakusafw . IDENT_0 . core . METHOD_2 . load ( p , STRING_0 ) ; "<AssertPlaceHolder>" ; } is ( java . lang . String ) { com . asakusafw . IDENT_13 . java . util . IDENT_14 IDENT_15 = com . asakusafw . IDENT_13 . java . util . IDENT_14 . of ( new com . asakusafw . IDENT_13 . model . METHOD_4 ( null , name ) ) ; IDENT_15 . METHOD_5 ( STRING_4 ) ; java . lang . Object result = invoke ( IDENT_15 . METHOD_6 ( ) ) ; return ( ( java . lang . Boolean ) ( result ) ) ; }
org . junit . Assert . assertThat ( IDENT_12 , is ( script ) ) 