METHOD_0 ( ) { org . IDENT_0 . parser . IDENT_1 parser = org . IDENT_0 . parser . IDENT_1 . builder ( ) . build ( ) ; java . io . InputStream IDENT_2 = org . IDENT_0 . IDENT_3 . IDENT_4 . METHOD_1 ( ) . METHOD_2 ( ) ; org . IDENT_0 . test . Node IDENT_5 ; try ( java . io . IDENT_6 reader = new java . io . METHOD_3 ( IDENT_2 , java . nio . IDENT_7 . IDENT_8 . METHOD_4 ( STRING_0 ) ) ) { IDENT_5 = parser . METHOD_5 ( reader ) ; } java . lang . String spec = org . IDENT_0 . IDENT_3 . IDENT_4 . METHOD_6 ( org . IDENT_0 . IDENT_3 . IDENT_4 . METHOD_1 ( ) ) ; org . IDENT_0 . test . Node IDENT_9 = parser . parse ( spec ) ; org . IDENT_0 . renderer . html . IDENT_10 renderer = org . IDENT_0 . renderer . html . IDENT_10 . builder ( ) . METHOD_7 ( true ) . build ( ) ; "<AssertPlaceHolder>" ; } render ( org . IDENT_0 . node . Node ) { if ( node == null ) { throw new java . lang . METHOD_8 ( STRING_1 ) ; } java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; render ( node , sb ) ; return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( renderer . render ( IDENT_9 ) , renderer . render ( IDENT_5 ) ) 