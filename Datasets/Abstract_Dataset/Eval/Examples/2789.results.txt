METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 [ ] records = METHOD_1 ( 4 ) ; java . util . List < com . IDENT_0 . IDENT_1 . client . IDENT_4 < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 > > IDENT_5 = new java . util . ArrayList < com . IDENT_0 . IDENT_1 . client . IDENT_4 < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 > > ( ) ; for ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_6 : records ) { IDENT_5 . add ( new com . IDENT_0 . IDENT_1 . client . IDENT_4 < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 > ( IDENT_6 . METHOD_2 ( ) , IDENT_6 ) ) ; } IDENT_7 . METHOD_0 ( IDENT_5 ) ; java . util . List < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 > IDENT_8 = IDENT_7 . METHOD_3 ( new com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_4 ( 0 ) , new com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_4 ( records . length ) , com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . class ) ; for ( int i = 0 ; i < ( IDENT_5 . size ( ) ) ; i ++ ) { "<AssertPlaceHolder>" ; } } get ( java . util . List ) { return table . get ( IDENT_9 ) ; }
org . junit . Assert . assertEquals ( records [ i ] , IDENT_8 . get ( i ) ) 