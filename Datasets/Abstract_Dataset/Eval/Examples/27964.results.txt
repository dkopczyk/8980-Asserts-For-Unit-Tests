METHOD_0 ( ) { java . lang . String path = null ; if ( IDENT_0 . IDENT_1 . contains ( STRING_0 ) ) { path = STRING_1 ; } else { path = "/" ; } java . io . File file = org . mockito . Mockito . mock ( java . io . File . class ) ; java . io . File directory = org . mockito . Mockito . mock ( java . io . File . class ) ; java . lang . String [ ] IDENT_2 = new java . lang . String [ ] { STRING_2 , STRING_3 , STRING_4 } ; org . IDENT_3 . api . mockito . IDENT_4 . METHOD_1 ( java . io . File . class ) . METHOD_2 ( org . mockito . Mockito . anyString ( ) ) . thenReturn ( directory ) ; org . mockito . Mockito . when ( file . METHOD_3 ( ) ) . thenReturn ( directory ) ; org . mockito . Mockito . when ( directory . exists ( ) ) . thenReturn ( true ) ; org . mockito . Mockito . when ( directory . METHOD_4 ( ) ) . thenReturn ( true ) ; org . mockito . Mockito . when ( directory . list ( ) ) . thenReturn ( IDENT_2 ) ; org . mockito . Mockito . when ( directory . toString ( ) ) . thenReturn ( path ) ; doReturn ( directory ) . when ( IDENT_5 ) . METHOD_5 ( path ) ; doReturn ( true ) . when ( IDENT_5 ) . METHOD_6 ( org . mockito . Mockito . anyString ( ) ) ; boolean result = IDENT_5 . METHOD_7 ( path ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( java . lang . String ) { if ( ( ( com . IDENT_6 . IDENT_7 . core . util . IDENT_0 . METHOD_8 ( ) ) && ( ( STRING_1 . equals ( IDENT_8 ) ) || ( STRING_5 . equals ( IDENT_8 ) ) ) ) || ( "/" . equals ( IDENT_8 ) ) ) { com . IDENT_6 . IDENT_7 . core . IDENT_9 . impl . IDENT_10 . LOGGER . error ( ( STRING_6 + IDENT_8 ) ) ; return false ; } try { java . io . File directory = new java . io . File ( IDENT_8 ) ; if ( ! ( directory . exists ( ) ) ) { return false ; } org . apache . commons . io . IDENT_11 . METHOD_9 ( directory ) ; } catch ( java . io . IOException ex ) { return false ; } return true ; }
org . junit . Assert . assertTrue ( ( ! result ) ) 