METHOD_0 ( ) { java . lang . reflect . Method IDENT_0 = null ; try { IDENT_0 = org . IDENT_1 . core . IDENT_2 . IDENT_3 . class . METHOD_1 ( STRING_0 , org . IDENT_1 . core . annotation . Integer . class , java . lang . String . class , org . IDENT_1 . core . IDENT_2 . IDENT_3 . class , java . lang . Object . class , java . lang . String . class ) ; } catch ( java . lang . IDENT_4 e ) { e . printStackTrace ( ) ; } catch ( java . lang . IDENT_5 e ) { e . printStackTrace ( ) ; } attributes = new org . IDENT_1 . core . annotation . METHOD_2 ( ) ; IDENT_6 . start ( STRING_1 ) ; boolean result = attributes . METHOD_3 ( IDENT_0 ) ; IDENT_6 . METHOD_4 ( ) ; org . IDENT_1 . core . util . IDENT_7 . info ( ( ( ( ( IDENT_6 . METHOD_5 ( ) ) + STRING_2 ) + ( IDENT_6 . METHOD_6 ( ) ) ) + STRING_3 ) ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( ) { if ( ( this . IDENT_8 ) == null ) { throw new java . lang . IllegalStateException ( STRING_4 ) ; } return this . IDENT_8 . METHOD_7 ( ) ; }
org . junit . Assert . assertTrue ( result ) 