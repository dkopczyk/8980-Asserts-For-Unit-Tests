METHOD_0 ( ) { com . github . IDENT_0 . IDENT_1 . annotation . model . IDENT_2 configuration = new com . github . IDENT_0 . IDENT_1 . annotation . model . METHOD_1 ( ) . METHOD_2 ( STRING_0 ) ; java . lang . reflect . Method method = configuration . getClass ( ) . METHOD_3 ( STRING_1 , new java . lang . Class [ ] { } ) ; java . lang . annotation . IDENT_3 annotation = method . METHOD_4 ( com . github . IDENT_0 . IDENT_1 . annotation . validation . IDENT_4 . class ) ; java . util . Set < com . github . IDENT_0 . IDENT_1 . annotation . validation . apply . IDENT_5 > res = this . validator . validate ( configuration , method , annotation ) ; "<AssertPlaceHolder>" ; } validate ( java . lang . Object , java . lang . reflect . Method , java . lang . annotation . IDENT_3 ) { java . lang . Object IDENT_6 = com . github . IDENT_0 . IDENT_1 . common . helper . IDENT_7 . METHOD_5 ( object , method . getName ( ) , null , null ) ; if ( IDENT_6 == null ) { return null ; } return com . github . IDENT_0 . IDENT_1 . annotation . validation . apply . IDENT_8 . instance ( ) . validate ( IDENT_6 ) ; }
org . junit . Assert . assertTrue ( res . isEmpty ( ) ) 