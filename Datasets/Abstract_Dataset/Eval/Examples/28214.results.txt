METHOD_0 ( ) { com . github . IDENT_0 . IDENT_1 . input . jdbc . IDENT_2 c = this . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; this . METHOD_2 ( ) ; this . METHOD_3 ( ) ; this . METHOD_4 ( ) ; this . METHOD_5 ( ) ; } validate ( java . lang . Object ) { java . lang . reflect . Method [ ] methods = object . getClass ( ) . METHOD_6 ( ) ; java . util . Set < com . github . IDENT_0 . IDENT_1 . annotation . validation . apply . IDENT_3 > IDENT_4 = new java . util . HashSet < com . github . IDENT_0 . IDENT_1 . annotation . validation . apply . IDENT_3 > ( ) ; for ( java . lang . reflect . Method method : methods ) { java . lang . annotation . IDENT_5 [ ] IDENT_6 = method . METHOD_7 ( ) ; for ( java . lang . annotation . IDENT_5 annotation : IDENT_6 ) { com . github . IDENT_0 . IDENT_1 . annotation . validation . IDENT_7 IDENT_8 = annotation . METHOD_8 ( ) . METHOD_9 ( com . github . IDENT_0 . IDENT_1 . annotation . validation . IDENT_7 . class ) ; if ( IDENT_8 == null ) { continue ; } com . github . IDENT_0 . IDENT_1 . annotation . validation . apply . IDENT_9 validator = ( ( com . github . IDENT_0 . IDENT_1 . annotation . validation . apply . IDENT_9 ) ( com . github . IDENT_0 . IDENT_1 . common . helper . IDENT_10 . newInstance ( IDENT_8 . METHOD_10 ( ) ) ) ) ; java . util . Set < com . github . IDENT_0 . IDENT_1 . annotation . validation . apply . IDENT_3 > res = validator . validate ( object , method , annotation ) ; this . addAll ( IDENT_4 , res ) ; } } return IDENT_4 ; }
org . junit . Assert . assertTrue ( this . validator . validate ( c ) . isEmpty ( ) ) 