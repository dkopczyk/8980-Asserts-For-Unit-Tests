METHOD_0 ( ) { byte [ ] tableName = org . apache . hadoop . hbase . util . IDENT_0 . METHOD_1 ( STRING_0 ) ; java . util . List < com . alibaba . IDENT_1 . meta . Field > IDENT_2 = java . util . Arrays . asList ( IDENT_3 , IDENT_4 , IDENT_5 ) ; org . apache . hadoop . conf . Configuration hc = com . alibaba . IDENT_1 . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_2 ( ) ; java . lang . String method = STRING_1 ; this . IDENT_9 = com . alibaba . IDENT_1 . IDENT_6 . IDENT_7 . METHOD_3 ( tableName , method , hc , IDENT_2 ) ; try { IDENT_9 . METHOD_4 ( ) ; byte [ ] IDENT_10 = org . apache . hadoop . hbase . util . IDENT_0 . METHOD_1 ( STRING_2 ) ; IDENT_9 . METHOD_5 ( IDENT_10 ) ; byte [ ] IDENT_11 = IDENT_9 . METHOD_6 ( ) ; "<AssertPlaceHolder>" ; com . alibaba . IDENT_1 . IDENT_6 . IDENT_7 . LOG . info ( ( STRING_3 + ( org . apache . hadoop . hbase . util . IDENT_0 . toString ( IDENT_11 ) ) ) ) ; com . alibaba . IDENT_1 . IDENT_6 . IDENT_12 [ ] IDENT_13 = METHOD_7 ( IDENT_9 , IDENT_11 ) ; try { for ( int i = 0 ; i < ( IDENT_13 . length ) ; i ++ ) { METHOD_8 ( IDENT_13 [ i ] ) ; } for ( int i = 0 ; i < ( IDENT_13 . length ) ; i ++ ) { for ( int j = 0 ; j < 2 ; j ++ ) { } IDENT_13 [ i ] . METHOD_4 ( ) ; } byte [ ] [ ] IDENT_14 = new byte [ IDENT_13 . length ] [ ] ; for ( int i = 0 ; i < ( IDENT_13 . length ) ; i ++ ) { IDENT_14 [ i ] = IDENT_13 [ i ] . METHOD_6 ( ) ; System . out . println ( ( STRING_4 + ( IDENT_13 [ i ] ) ) ) ; } java . util . IDENT_15 < java . lang . String , com . alibaba . IDENT_1 . IDENT_6 . IDENT_12 > IDENT_16 = new java . util . IDENT_15 < java . lang . String , com . alibaba . IDENT_1 . IDENT_6 . IDENT_12 > ( ) ; for ( int i = 0 ; i < ( IDENT_13 . length ) ; i ++ ) { com . alibaba . IDENT_1 . IDENT_6 . IDENT_12 [ ] rs = null ; if ( ( IDENT_14 [ i ] ) != null ) { rs = METHOD_7 ( IDENT_13 [ i ] , IDENT_14 [ i ] ) ; for ( int j = 0 ; j < ( rs . length ) ; j ++ ) { IDENT_16 . put ( org . apache . hadoop . hbase . util . IDENT_0 . toString ( rs [ j ] . METHOD_9 ( ) ) , METHOD_8 ( rs [ j ] ) ) ; } } } com . alibaba . IDENT_1 . IDENT_6 . IDENT_7 . LOG . info ( STRING_5 ) ; int IDENT_17 = ( ( com . alibaba . IDENT_1 . IDENT_6 . IDENT_7 . IDENT_18 ) - ( com . alibaba . IDENT_1 . IDENT_6 . IDENT_7 . IDENT_19 ) ) / 3 ; byte [ ] b = org . apache . hadoop . hbase . util . IDENT_0 . METHOD_1 ( com . alibaba . IDENT_1 . IDENT_6 . IDENT_7 . IDENT_20 ) ; for ( com . alibaba . IDENT_1 . IDENT_6 . IDENT_12 r : IDENT_16 . values ( ) ) { b [ 0 ] += IDENT_17 ; } } finally { for ( int i = 0 ; i < ( IDENT_13 . length ) ; i ++ ) { try { IDENT_13 [ i ] . close ( ) ; } catch ( java . io . IOException e ) { } } } } finally { com . alibaba . IDENT_1 . IDENT_6 . IDENT_12 . METHOD_10 ( this . IDENT_9 ) ; this . IDENT_9 = null ; } } METHOD_6 ( ) { byte [ ] ret = IDENT_21 . METHOD_11 ( this . IDENT_22 ) ; if ( ret != null ) { try { METHOD_12 ( ret , STRING_6 ) ; } catch ( java . io . IOException e ) { com . alibaba . IDENT_1 . IDENT_6 . IDENT_12 . LOG . error ( STRING_7 , e ) ; return null ; } } return ret ; }
org . junit . Assert . assertNotNull ( IDENT_11 ) 