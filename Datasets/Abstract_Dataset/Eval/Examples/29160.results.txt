METHOD_0 ( ) { when ( obj . getKey ( ) ) . thenReturn ( ( ( ( ( STRING_0 + ( java . io . File . IDENT_0 ) ) + STRING_1 ) + ( java . io . File . IDENT_0 ) ) + STRING_2 ) ) ; when ( metadata . METHOD_1 ( ) ) . thenReturn ( STRING_3 ) ; final com . amazonaws . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = com . amazonaws . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_2 ( obj , null ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( com . amazonaws . services . IDENT_7 . model . IDENT_8 , hudson . model . IDENT_9 ) { final java . lang . String key = IDENT_10 . getKey ( ) ; com . amazonaws . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = com . amazonaws . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_11 ; if ( com . amazonaws . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_3 ( key , STRING_4 ) ) { IDENT_5 = com . amazonaws . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_12 ; } else if ( com . amazonaws . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_3 ( key , STRING_5 ) ) { IDENT_5 = com . amazonaws . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_13 ; } else if ( com . amazonaws . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_3 ( key , STRING_6 ) ) { IDENT_5 = com . amazonaws . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_14 ; } if ( IDENT_5 == ( com . amazonaws . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_11 ) ) { final java . lang . String IDENT_15 = IDENT_10 . METHOD_4 ( ) . METHOD_1 ( ) ; if ( STRING_7 . equalsIgnoreCase ( IDENT_15 ) ) { IDENT_5 = com . amazonaws . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_12 ; } else if ( ( STRING_8 . equalsIgnoreCase ( IDENT_15 ) ) || ( STRING_9 . equalsIgnoreCase ( IDENT_15 ) ) ) { IDENT_5 = com . amazonaws . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_13 ; } else if ( ( STRING_3 . equalsIgnoreCase ( IDENT_15 ) ) || ( STRING_10 . equalsIgnoreCase ( IDENT_15 ) ) ) { IDENT_5 = com . amazonaws . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_14 ; } } com . amazonaws . IDENT_1 . IDENT_2 . IDENT_16 . log ( l , STRING_11 , IDENT_5 . name ( ) ) ; return IDENT_5 ; }
org . junit . Assert . assertEquals ( IDENT_4 . IDENT_14 , IDENT_5 ) 