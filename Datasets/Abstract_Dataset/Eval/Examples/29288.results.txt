METHOD_0 ( ) { final boolean IDENT_0 = false ; final java . util . List < com . amazonaws . services . IDENT_1 . IDENT_2 > IDENT_3 = this . IDENT_4 . METHOD_1 ( IDENT_0 ) . collect ( toList ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( boolean ) { final IDENT_5 . amazon . IDENT_6 . services . IDENT_7 . model . IDENT_8 IDENT_9 = IDENT_5 . amazon . IDENT_6 . services . IDENT_7 . model . IDENT_8 . builder ( ) . tableName ( this . tableName ) . build ( ) ; final com . amazonaws . services . IDENT_1 . IDENT_10 iterator = new com . amazonaws . services . IDENT_1 . METHOD_2 ( this . IDENT_11 , IDENT_9 , ( item ) -> { final java . lang . String key = item . get ( this . IDENT_12 ) . s ( ) ; com . amazonaws . services . IDENT_1 . IDENT_13 . IDENT_14 options = com . amazonaws . services . IDENT_1 . IDENT_13 . builder ( key ) . METHOD_3 ( IDENT_0 ) ; options = this . IDENT_15 . map ( item :: get ) . map ( IDENT_5 . amazon . IDENT_6 . services . IDENT_7 . model . IDENT_16 :: s ) . map ( options :: IDENT_17 ) . METHOD_4 ( options ) ; final com . amazonaws . services . IDENT_1 . IDENT_2 IDENT_18 = this . METHOD_5 ( options . build ( ) , item ) ; return IDENT_18 ; } ) ; final java . lang . IDENT_19 < com . amazonaws . services . IDENT_1 . IDENT_2 > IDENT_20 = ( ) -> iterator ; return java . util . stream . IDENT_21 . stream ( IDENT_20 . METHOD_6 ( ) , false ) ; }
org . junit . Assert . assertEquals ( java . util . Collections . emptyList ( ) , IDENT_3 ) 