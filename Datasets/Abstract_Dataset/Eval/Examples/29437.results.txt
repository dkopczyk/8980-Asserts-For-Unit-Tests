METHOD_0 ( ) { java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 > IDENT_3 = java . util . Arrays . asList ( IDENT_4 , IDENT_4 , IDENT_5 , IDENT_6 , IDENT_7 , IDENT_7 , IDENT_8 ) ; org . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_11 IDENT_12 = new org . IDENT_0 . IDENT_9 . IDENT_10 . METHOD_1 ( org . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_11 . of ( IDENT_4 , IDENT_4 , IDENT_5 ) , org . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_11 . of ( IDENT_5 , IDENT_6 ) , org . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_11 . empty ( ) , org . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_11 . of ( IDENT_6 , IDENT_6 ) , org . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_11 . of ( IDENT_6 , IDENT_7 , IDENT_7 ) , org . IDENT_0 . IDENT_9 . IDENT_10 . IDENT_11 . of ( IDENT_7 , IDENT_8 ) ) ; java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 < ? > > IDENT_13 = new java . util . ArrayList ( ) ; IDENT_12 . METHOD_2 ( IDENT_13 :: add ) ; "<AssertPlaceHolder>" ; } of ( java . util . stream . IDENT_14 , java . util . function . IDENT_15 ) { java . util . IDENT_16 . METHOD_3 ( stream ) ; return new org . IDENT_0 . IDENT_9 . IDENT_10 . METHOD_4 ( stream . iterator ( ) ) { @ org . IDENT_0 . IDENT_9 . IDENT_10 . Override public org . IDENT_0 . IDENT_9 . IDENT_10 . Long METHOD_5 ( ) { return IDENT_17 . get ( ) ; } } ; }
org . junit . Assert . assertEquals ( IDENT_3 , IDENT_13 ) 