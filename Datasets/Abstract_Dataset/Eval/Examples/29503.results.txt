METHOD_0 ( ) { IDENT_0 . METHOD_1 ( ( messages ) -> ( i , m ) -> m . METHOD_2 ( org . IDENT_1 . IDENT_2 . Collections . METHOD_3 ( STRING_0 , "value" ) ) ) ; IDENT_0 . METHOD_4 ( ( IDENT_3 , IDENT_4 ) -> { if ( IDENT_3 . getMessage ( ) . METHOD_5 ( ) . containsKey ( STRING_0 ) ) { return STRING_1 ; } return IDENT_4 . METHOD_6 ( ) ; } ) ; IDENT_0 . METHOD_7 ( java . lang . String . class . getName ( ) , java . lang . String . class , ( q ) -> ( q . METHOD_8 ( ) ) + STRING_2 ) ; org . IDENT_1 . IDENT_2 . IDENT_5 < java . lang . String , java . lang . String > IDENT_6 = new org . IDENT_1 . IDENT_2 . METHOD_9 ( STRING_3 , IDENT_7 ) ; java . util . concurrent . IDENT_8 < java . lang . String > result = IDENT_0 . query ( IDENT_6 ) . METHOD_10 ( IDENT_9 :: METHOD_8 ) ; "<AssertPlaceHolder>" ; } get ( ) { if ( org . IDENT_1 . IDENT_10 . IDENT_11 . IDENT_12 . isEmpty ( ) ) { throw new java . lang . IllegalStateException ( STRING_4 ) ; } return org . IDENT_1 . IDENT_10 . IDENT_11 . IDENT_12 . IDENT_13 . get ( ) . METHOD_11 ( ) ; }
org . junit . Assert . assertEquals ( STRING_1 , result . get ( ) ) 