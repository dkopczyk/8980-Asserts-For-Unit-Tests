METHOD_0 ( ) { org . IDENT_0 . serialization . IDENT_1 < byte [ ] > IDENT_2 = IDENT_3 . serialize ( null , byte [ ] . class ) ; java . lang . String IDENT_4 = IDENT_3 . METHOD_1 ( IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( org . IDENT_0 . serialization . IDENT_1 ) { try { if ( org . IDENT_0 . serialization . IDENT_5 . METHOD_2 ( ) . equals ( IDENT_6 . getType ( ) ) ) { return null ; } java . lang . Class < ? > type = METHOD_3 ( IDENT_6 . getType ( ) ) ; if ( org . IDENT_0 . serialization . IDENT_7 . class . METHOD_4 ( type ) ) { return ( ( T ) ( new org . IDENT_0 . serialization . METHOD_5 ( this , IDENT_6 ) ) ) ; } if ( com . fasterxml . jackson . databind . IDENT_8 . class . equals ( IDENT_6 . METHOD_6 ( ) ) ) { return METHOD_7 ( type ) . METHOD_8 ( ( ( com . fasterxml . jackson . databind . IDENT_8 ) ( IDENT_6 . METHOD_9 ( ) ) ) ) ; } org . IDENT_0 . serialization . IDENT_1 < byte [ ] > IDENT_9 = converter . convert ( IDENT_6 , byte [ ] . class ) ; return METHOD_7 ( type ) . METHOD_8 ( IDENT_9 . METHOD_9 ( ) ) ; } catch ( java . io . IOException e ) { throw new org . IDENT_0 . serialization . METHOD_10 ( STRING_0 , e ) ; } }
org . junit . Assert . assertNull ( IDENT_4 ) 