METHOD_0 ( ) { final com . microsoft . azure . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = com . microsoft . azure . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( com . microsoft . azure . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 . toString ( ) , IDENT_6 . IDENT_7 ) ; try { final com . microsoft . azure . IDENT_0 . IDENT_1 . IDENT_8 IDENT_9 = IDENT_3 . METHOD_2 ( STRING_0 , STRING_1 , com . microsoft . azure . IDENT_0 . IDENT_1 . IDENT_10 . METHOD_3 ( ) , java . lang . System . currentTimeMillis ( ) ) ; IDENT_9 . METHOD_4 ( 100 ) ; java . util . concurrent . IDENT_11 . METHOD_5 ( 1 ) . METHOD_6 ( new java . lang . METHOD_7 ( ) { @ com . microsoft . azure . IDENT_0 . IDENT_1 . Override public void run ( ) { try { final java . lang . reflect . Field IDENT_12 = com . microsoft . azure . IDENT_0 . impl . IDENT_13 . class . METHOD_8 ( STRING_2 ) ; IDENT_12 . METHOD_9 ( true ) ; final com . microsoft . azure . IDENT_0 . impl . IDENT_14 IDENT_15 = ( ( com . microsoft . azure . IDENT_0 . impl . IDENT_14 ) ( IDENT_12 . get ( IDENT_3 ) ) ) ; final java . lang . reflect . Field IDENT_16 = com . microsoft . azure . IDENT_0 . impl . IDENT_14 . class . METHOD_8 ( STRING_3 ) ; IDENT_16 . METHOD_9 ( true ) ; final org . apache . IDENT_17 . IDENT_18 . IDENT_19 . IDENT_20 IDENT_19 = ( ( org . apache . IDENT_17 . IDENT_18 . IDENT_19 . IDENT_20 ) ( IDENT_16 . get ( IDENT_15 ) ) ) ; org . apache . IDENT_17 . IDENT_18 . engine . IDENT_21 handler = IDENT_19 . METHOD_10 ( ) ; handler . add ( new org . apache . IDENT_17 . IDENT_18 . engine . METHOD_11 ( ) { @ com . microsoft . azure . IDENT_0 . IDENT_1 . Override public void METHOD_12 ( org . apache . IDENT_17 . IDENT_18 . engine . IDENT_22 e ) { throw new java . lang . METHOD_13 ( ) ; } } ) ; } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( e . getMessage ( ) ) ; } } } , 2 , TimeUnit . IDENT_23 ) ; try { java . lang . Thread . sleep ( INT_0 ) ; final java . lang . IDENT_24 < com . microsoft . azure . IDENT_0 . IDENT_1 . IDENT_25 > events = IDENT_9 . METHOD_4 ( 100 ) ; "<AssertPlaceHolder>" ; } finally { IDENT_9 . METHOD_14 ( ) ; } } finally { IDENT_3 . METHOD_14 ( ) ; } } iterator ( ) { return this . events . iterator ( ) ; }
org . junit . Assert . assertTrue ( ( ( events != null ) && ( events . iterator ( ) . hasNext ( ) ) ) ) 