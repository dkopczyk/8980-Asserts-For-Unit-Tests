METHOD_0 ( ) { tests . unit . com . microsoft . azure . sdk . iot . IDENT_0 . transport . IDENT_1 . IDENT_2 IDENT_3 = new tests . unit . com . microsoft . azure . sdk . iot . IDENT_0 . transport . IDENT_1 . METHOD_1 ( tests . unit . com . microsoft . azure . sdk . iot . IDENT_0 . transport . IDENT_1 . IDENT_4 . IDENT_5 , IDENT_6 , null , null , false ) ; IDENT_7 . IDENT_8 . METHOD_2 ( IDENT_3 , STRING_0 , true ) ; IDENT_7 . IDENT_8 . METHOD_2 ( IDENT_3 , STRING_1 , IDENT_6 ) ; new IDENT_7 . METHOD_3 ( ) { { IDENT_9 . encode ( ( ( byte [ ] ) ( any ) ) , 0 ) ; result = 10 ; } } ; boolean result = IDENT_3 . METHOD_4 ( IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( com . microsoft . azure . sdk . iot . IDENT_0 . transport . IDENT_1 . IDENT_10 ) { if ( ( ( this . IDENT_11 ) != null ) && ( ( this . IDENT_11 . METHOD_5 ( ) ) != null ) ) { throw this . IDENT_11 . METHOD_5 ( ) ; } boolean result ; logger . METHOD_6 ( STRING_2 , logger . METHOD_7 ( ) ) ; if ( ! ( this . IDENT_12 ) ) { result = false ; } else { byte [ ] IDENT_13 = new byte [ INT_0 ] ; int length = 0 ; boolean IDENT_14 = false ; do { try { length = message . encode ( IDENT_13 , 0 ) ; IDENT_14 = true ; } catch ( java . nio . IDENT_15 e ) { IDENT_13 = new byte [ ( IDENT_13 . length ) * 2 ] ; } } while ( ! IDENT_14 ) ; if ( length > 0 ) { byte [ ] IDENT_16 = java . lang . String . valueOf ( this . IDENT_17 ) . getBytes ( ) ; if ( ( ( this . IDENT_17 ) == ( Integer . MAX_VALUE ) ) || ( ( this . IDENT_17 ) < 0 ) ) { this . IDENT_17 = 0 ; } else { ( this . IDENT_17 ) ++ ; } IDENT_18 . METHOD_8 ( IDENT_16 , IDENT_13 , length , 0 ) ; result = true ; } else { result = false ; } } logger . METHOD_6 ( STRING_3 , logger . METHOD_7 ( ) ) ; return result ; }
org . junit . Assert . assertEquals ( true , result ) 