METHOD_0 ( ) { final com . microsoft . azure . sdk . iot . IDENT_0 . transport . http . IDENT_1 IDENT_2 = com . microsoft . azure . sdk . iot . IDENT_0 . transport . http . IDENT_1 . IDENT_3 ; byte [ ] IDENT_4 = new byte [ ] { } ; new IDENT_5 . METHOD_1 ( ) { { IDENT_6 . METHOD_2 ( ) ; result = STRING_0 ; IDENT_6 . METHOD_3 ( ) ; result = IDENT_7 ; IDENT_7 . METHOD_4 ( ) ; result = IDENT_2 . name ( ) ; IDENT_7 . METHOD_5 ( ) ; result = null ; } } ; com . microsoft . azure . sdk . iot . IDENT_0 . transport . http . IDENT_8 conn = new com . microsoft . azure . sdk . iot . IDENT_0 . transport . http . METHOD_6 ( IDENT_6 , IDENT_2 ) ; conn . connect ( ) ; byte [ ] IDENT_9 = conn . METHOD_7 ( ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ) { byte [ ] error = new byte [ 0 ] ; try ( java . io . InputStream IDENT_10 = this . connection . METHOD_5 ( ) ) { if ( IDENT_10 != null ) { error = com . microsoft . azure . sdk . iot . service . transport . http . METHOD_6 . METHOD_8 ( IDENT_10 ) ; } } return error ; }
org . junit . Assert . assertThat ( IDENT_9 , org . hamcrest . CoreMatchers . is ( IDENT_4 ) ) 