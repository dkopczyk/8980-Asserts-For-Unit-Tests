METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . IDENT_2 IDENT_3 = new tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . METHOD_1 ( IDENT_4 , IDENT_5 ) ; tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . IDENT_6 . METHOD_2 ( IDENT_3 , STRING_1 , IDENT_7 ) ; tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . IDENT_6 . METHOD_2 ( IDENT_3 , STRING_2 , IDENT_8 ) ; java . util . ArrayList < tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . IDENT_9 > IDENT_10 = new java . util . ArrayList ( ) ; IDENT_10 . add ( IDENT_11 ) ; IDENT_10 . add ( IDENT_12 ) ; tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . IDENT_6 . METHOD_2 ( IDENT_3 , STRING_3 , IDENT_10 ) ; new tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . METHOD_3 ( ) { { IDENT_8 . METHOD_4 ( ) ; result = true ; tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . IDENT_6 . invoke ( IDENT_11 , STRING_4 , IDENT_0 ) ; result = IDENT_13 ; } } ; tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . IDENT_14 IDENT_15 = tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . IDENT_6 . invoke ( IDENT_3 , STRING_4 , IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { java . lang . Boolean IDENT_16 = true ; for ( Map . Entry < com . microsoft . azure . sdk . iot . device . IDENT_17 . IDENT_17 , com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . IDENT_18 > entry : IDENT_19 . entrySet ( ) ) { if ( ! ( entry . getValue ( ) . METHOD_4 ( ) ) ) { IDENT_16 = false ; break ; } } return IDENT_16 ; }
org . junit . Assert . assertEquals ( IDENT_13 , IDENT_15 ) 