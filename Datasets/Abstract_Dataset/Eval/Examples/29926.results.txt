METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . IDENT_2 IDENT_3 = new tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . METHOD_1 ( IDENT_4 , IDENT_5 ) ; tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . IDENT_6 . METHOD_2 ( IDENT_3 , STRING_1 , IDENT_7 ) ; new tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . METHOD_3 ( ) { { IDENT_7 . METHOD_4 ( ) ; result = false ; } } ; new tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . METHOD_5 ( ) { { tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . IDENT_6 . invoke ( IDENT_7 , STRING_2 , IDENT_0 ) ; result = true ; } } ; java . lang . Boolean IDENT_8 = tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . IDENT_6 . invoke ( IDENT_3 , STRING_2 , IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { java . lang . Boolean IDENT_9 = true ; for ( Map . Entry < com . microsoft . azure . sdk . iot . device . IDENT_10 . IDENT_10 , com . microsoft . azure . sdk . iot . device . transport . IDENT_1 . IDENT_11 > entry : IDENT_12 . entrySet ( ) ) { if ( ! ( entry . getValue ( ) . METHOD_4 ( ) ) ) { IDENT_9 = false ; break ; } } return IDENT_9 ; }
org . junit . Assert . assertEquals ( true , IDENT_8 ) 