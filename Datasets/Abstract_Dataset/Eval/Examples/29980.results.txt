METHOD_0 ( com . microsoft . azure . sdk . iot . device . transport . IDENT_0 ) { METHOD_1 ( ) ; METHOD_2 ( ) ; final byte [ ] IDENT_1 = new byte [ ] { INT_0 , INT_1 , INT_2 } ; new tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_2 . METHOD_3 ( ) { { IDENT_3 . getBytes ( ) ; result = IDENT_1 ; IDENT_3 . METHOD_4 ( ) ; result = IDENT_4 . IDENT_5 ; } } ; tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_2 . IDENT_6 connection = new tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_2 . METHOD_5 ( IDENT_7 ) ; tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_2 . IDENT_8 . METHOD_6 ( connection , STRING_0 , IDENT_9 ) ; connection . METHOD_7 ( IDENT_10 , IDENT_11 ) ; tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_2 . IDENT_12 result = connection . METHOD_8 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; new tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_2 . METHOD_9 ( ) { { IDENT_13 . METHOD_10 ( ( ( com . microsoft . azure . sdk . iot . device . transport . IDENT_0 ) ( any ) ) ) ; times = 0 ; IDENT_14 . METHOD_10 ( IDENT_3 ) ; times = 0 ; IDENT_15 . start ( ) ; times = 1 ; IDENT_15 . METHOD_10 ( IDENT_3 ) ; times = 1 ; } } ; } METHOD_8 ( com . microsoft . azure . sdk . iot . device . transport . IDENT_2 . Message ) { MOD_0 ( IDENT_16 ) { if ( ( ( message == null ) || ( ( message . getBytes ( ) ) == null ) ) || ( ( ( ( message . METHOD_4 ( ) ) != ( com . microsoft . azure . sdk . iot . device . IDENT_4 . IDENT_5 ) ) && ( ( message . METHOD_4 ( ) ) != ( com . microsoft . azure . sdk . iot . device . IDENT_4 . IDENT_17 ) ) ) && ( ( message . getBytes ( ) . length ) == 0 ) ) ) { return IDENT_12 . IDENT_18 ; } if ( ( this . state ) == ( IDENT_19 . IDENT_20 ) ) { throw new java . lang . IllegalStateException ( STRING_1 ) ; } com . microsoft . azure . sdk . iot . device . transport . IDENT_2 . IDENT_12 result = IDENT_12 . IDENT_21 ; if ( ( message . METHOD_4 ( ) ) == ( com . microsoft . azure . sdk . iot . device . IDENT_4 . IDENT_17 ) ) { this . IDENT_22 . start ( ) ; this . IDENT_22 . METHOD_10 ( ( ( com . microsoft . azure . sdk . iot . device . transport . IDENT_2 . IDENT_0 ) ( message ) ) ) ; } else if ( ( message . METHOD_4 ( ) ) == ( com . microsoft . azure . sdk . iot . device . IDENT_4 . IDENT_5 ) ) { this . IDENT_23 . start ( ) ; this . IDENT_23 . METHOD_10 ( ( ( com . microsoft . azure . sdk . iot . device . transport . IDENT_2 . IDENT_0 ) ( message ) ) ) ; } else { this . IDENT_24 . METHOD_10 ( message ) ; } return result ; } }
org . junit . Assert . assertEquals ( IDENT_12 . IDENT_21 , result ) 