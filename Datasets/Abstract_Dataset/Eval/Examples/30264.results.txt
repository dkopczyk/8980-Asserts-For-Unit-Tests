METHOD_0 ( ) { final int status = 200 ; final byte [ ] body = new byte [ ] { 1 } ; final byte [ ] IDENT_0 = new byte [ ] { } ; final java . util . Map < java . lang . String , java . util . List < java . lang . String > > IDENT_1 = new java . util . HashMap ( ) ; final java . lang . String field = STRING_0 ; final java . util . List < java . lang . String > values = new java . util . METHOD_1 ( ) ; final java . lang . String IDENT_2 = STRING_1 ; final java . lang . String IDENT_3 = STRING_2 ; final java . lang . String IDENT_4 = ( IDENT_2 + STRING_3 ) + IDENT_3 ; values . add ( IDENT_2 ) ; values . add ( IDENT_3 ) ; IDENT_1 . put ( field , values ) ; com . microsoft . azure . sdk . iot . service . transport . http . IDENT_5 response = new com . microsoft . azure . sdk . iot . service . transport . http . METHOD_2 ( status , body , IDENT_1 , IDENT_0 ) ; java . lang . String IDENT_6 = response . METHOD_3 ( field ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String ) { java . lang . String IDENT_7 = com . microsoft . azure . sdk . iot . service . transport . http . METHOD_2 . METHOD_4 ( field ) ; java . lang . String values = this . IDENT_1 . get ( IDENT_7 ) ; if ( values == null ) { java . lang . String IDENT_8 = java . lang . String . format ( ( STRING_4 + STRING_5 ) , field ) ; throw new java . lang . IllegalArgumentException ( IDENT_8 ) ; } return values ; }
org . junit . Assert . assertThat ( IDENT_6 , org . hamcrest . CoreMatchers . is ( IDENT_4 ) ) 