METHOD_0 ( ) { "<AssertPlaceHolder>" ; } METHOD_1 ( com . microsoft . azure . management . IDENT_0 ) { final java . lang . String IDENT_1 = com . microsoft . azure . management . resources . IDENT_2 . utils . IDENT_3 . METHOD_2 ( STRING_0 , INT_0 ) ; final java . lang . String IDENT_4 = com . microsoft . azure . management . resources . IDENT_2 . utils . IDENT_3 . METHOD_2 ( STRING_0 1 , INT_0 ) ; try { java . lang . String IDENT_5 = com . microsoft . azure . management . resources . IDENT_6 . IDENT_7 . METHOD_3 ( ) ; System . out . println ( ( STRING_1 + IDENT_1 ) ) ; azure . METHOD_4 ( ) . METHOD_5 ( IDENT_1 ) . METHOD_6 ( IDENT_8 . IDENT_9 ) . create ( ) ; System . out . println ( ( STRING_0 2 + IDENT_1 ) ) ; System . out . println ( ( STRING_2 + IDENT_4 ) ) ; azure . METHOD_7 ( ) . METHOD_5 ( IDENT_4 ) . METHOD_8 ( IDENT_1 ) . METHOD_9 ( IDENT_5 ) . METHOD_10 ( STRING_3 ) . METHOD_11 ( IDENT_10 . IDENT_11 ) . METHOD_12 ( ) ; System . out . println ( ( STRING_4 + IDENT_4 ) ) ; com . microsoft . azure . management . resources . IDENT_12 IDENT_13 = azure . METHOD_7 ( ) . METHOD_13 ( IDENT_1 , IDENT_4 ) ; System . out . println ( ( STRING_5 + ( IDENT_13 . METHOD_14 ( ) ) ) ) ; while ( ! ( ( ( IDENT_13 . METHOD_14 ( ) . equalsIgnoreCase ( STRING_6 ) ) || ( IDENT_13 . METHOD_14 ( ) . equalsIgnoreCase ( STRING_7 ) ) ) || ( IDENT_13 . METHOD_14 ( ) . equalsIgnoreCase ( STRING_8 ) ) ) ) { com . microsoft . azure . management . resources . IDENT_2 . utils . IDENT_3 . sleep ( INT_1 ) ; IDENT_13 = azure . METHOD_7 ( ) . METHOD_13 ( IDENT_1 , IDENT_4 ) ; System . out . println ( ( STRING_5 + ( IDENT_13 . METHOD_14 ( ) ) ) ) ; } return true ; } catch ( java . lang . Exception f ) { System . out . println ( f . getMessage ( ) ) ; f . printStackTrace ( ) ; } finally { try { System . out . println ( ( STRING_0 3 + IDENT_1 ) ) ; azure . METHOD_4 ( ) . METHOD_15 ( IDENT_1 ) ; System . out . println ( ( STRING_9 + IDENT_1 ) ) ; } catch ( java . lang . IDENT_14 IDENT_15 ) { System . out . println ( STRING_0 0 ) ; } catch ( java . lang . Exception g ) { g . printStackTrace ( ) ; } } return false ; }
org . junit . Assert . assertTrue ( com . microsoft . azure . management . resources . IDENT_6 . IDENT_7 . METHOD_1 ( azure ) ) 