METHOD_0 ( ) { com . IDENT_0 . commons . IDENT_1 IDENT_2 = com . IDENT_0 . commons . IDENT_1 . METHOD_1 ( com . IDENT_0 . commons . test . IDENT_3 . IDENT_4 ) ; com . IDENT_0 . commons . IDENT_1 IDENT_5 = new com . IDENT_0 . commons . METHOD_2 ( com . google . common . collect . ImmutableList . of ( 1 , INT_0 , INT_1 , INT_2 ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { METHOD_3 ( IDENT_6 , STRING_0 ) ; METHOD_4 ( com . IDENT_0 . commons . METHOD_2 . IDENT_7 . matcher ( IDENT_6 ) . matches ( ) , ( STRING_1 + IDENT_6 ) ) ; java . util . List < java . lang . Integer > IDENT_8 = com . google . common . collect . Lists . transform ( com . google . common . collect . ImmutableList . METHOD_5 ( com . google . common . base . IDENT_9 . METHOD_6 ( com . IDENT_0 . commons . METHOD_2 . IDENT_10 ) . split ( IDENT_6 ) ) , new com . IDENT_0 . commons . IDENT_11 . METHOD_7 ( ) ) ; return new com . IDENT_0 . commons . METHOD_2 ( IDENT_8 ) ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_2 ) 