METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . fhir . core . search . IDENT_2 parameters = METHOD_1 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { return new java . lang . IDENT_3 < IDENT_4 > ( ) { @ com . IDENT_0 . commons . IDENT_5 . Override public java . util . Iterator < IDENT_4 > iterator ( ) { final java . util . Iterator < IDENT_4 > delegate = elements . iterator ( ) ; return new com . IDENT_0 . commons . IDENT_6 < IDENT_4 > ( delegate ) { MOD_0 int i = - 1 ; boolean IDENT_7 = false ; @ com . IDENT_0 . commons . IDENT_5 . Override public IDENT_4 next ( ) { ( i ) ++ ; IDENT_7 = true ; return super . next ( ) ; } @ com . IDENT_0 . commons . IDENT_5 . Override public void remove ( ) { if ( ! ( IDENT_7 ) ) { throw new java . lang . IllegalStateException ( ) ; } IDENT_7 = false ; if ( IDENT_8 . remove ( i ) ) { IDENT_8 . METHOD_3 ( i , ( - 1 ) ) ; delegate . remove ( ) ; ( i ) OP_0 ; } else { throw new java . lang . IllegalStateException ( ( STRING_1 + ( i ) ) ) ; } } } ; } } ; }
org . junit . Assert . assertEquals ( "1" , parameters . METHOD_2 ( ) . iterator ( ) . next ( ) ) 