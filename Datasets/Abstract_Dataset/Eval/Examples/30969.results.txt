METHOD_0 ( ) { IDENT_0 . IDENT_1 . engine . IDENT_2 IDENT_3 = IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 . METHOD_1 ( STRING_0 ) ; IDENT_0 . IDENT_1 . engine . IDENT_6 IDENT_7 = new IDENT_0 . IDENT_1 . engine . METHOD_2 ( IDENT_8 ) ; IDENT_7 . METHOD_3 ( 1 ) ; IDENT_7 . METHOD_4 ( new IDENT_0 . IDENT_1 . engine . IDENT_9 . METHOD_5 ( new java . lang . String [ ] [ ] { new java . lang . String [ ] { STRING_1 , STRING_2 } } ) ) ; IDENT_0 . IDENT_1 . engine . List < IDENT_0 . IDENT_1 . engine . IDENT_10 > results = IDENT_7 . METHOD_6 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( IDENT_0 . IDENT_1 . engine . IDENT_2 ) { IDENT_11 = ( java . lang . System . METHOD_7 ( ) ) + ( ( IDENT_12 ) * INT_0 ) ; IDENT_11 OP_0 INT_1 ; IDENT_13 = 1 ; IDENT_0 . IDENT_1 . engine . METHOD_2 . LOG . debug ( ( ( ( STRING_3 + ( IDENT_11 ) ) + STRING_4 ) + ( java . lang . System . METHOD_7 ( ) ) ) ) ; final IDENT_0 . IDENT_1 . engine . Map < java . lang . String , IDENT_0 . IDENT_1 . engine . IDENT_10 > IDENT_14 = new IDENT_0 . IDENT_1 . engine . HashMap ( ) ; final IDENT_0 . IDENT_1 . engine . Map < java . lang . String , IDENT_0 . IDENT_1 . engine . IDENT_10 > IDENT_15 = new IDENT_0 . IDENT_1 . engine . HashMap ( ) ; while ( true ) { final IDENT_0 . IDENT_1 . engine . List < IDENT_0 . IDENT_1 . engine . IDENT_10 > IDENT_16 = com . google . common . collect . Lists . newArrayList ( IDENT_14 . values ( ) ) ; IDENT_0 . IDENT_1 . engine . METHOD_2 . LOG . debug ( STRING_5 , IDENT_13 , IDENT_16 . size ( ) ) ; final IDENT_0 . IDENT_1 . engine . List < IDENT_0 . IDENT_1 . engine . IDENT_10 > IDENT_17 = METHOD_6 ( IDENT_18 , IDENT_16 ) ; boolean IDENT_19 = false ; for ( IDENT_0 . IDENT_1 . engine . IDENT_10 result : IDENT_17 ) { IDENT_0 . IDENT_1 . engine . METHOD_2 . LOG . debug ( STRING_6 , result ) ; if ( ( result . getStatus ( ) ) != ( IDENT_10 . Status . IDENT_20 ) ) { IDENT_19 = true ; continue ; } if ( ( ! ( IDENT_14 . containsKey ( result . METHOD_8 ( ) ) ) ) || ( ( result . getStatus ( ) ) == ( IDENT_10 . Status . IDENT_20 ) ) ) { IDENT_14 . put ( result . METHOD_8 ( ) , result ) ; } } IDENT_15 . METHOD_9 ( IDENT_14 ) ; int IDENT_21 = Integer . MAX_VALUE ; for ( IDENT_0 . IDENT_1 . engine . IDENT_10 IDENT_22 : IDENT_14 . values ( ) ) { IDENT_21 = java . lang . Math . min ( IDENT_21 , IDENT_22 . METHOD_10 ( ) ) ; } final int IDENT_23 = IDENT_21 + ( IDENT_0 . IDENT_1 . engine . METHOD_2 . IDENT_24 ) ; IDENT_0 . IDENT_1 . engine . METHOD_2 . LOG . debug ( STRING_7 , IDENT_21 , IDENT_23 ) ; for ( java . lang . String IDENT_25 : new IDENT_0 . IDENT_1 . engine . HashSet ( IDENT_14 . METHOD_11 ( ) ) ) { if ( ( IDENT_14 . get ( IDENT_25 ) . METHOD_10 ( ) ) > IDENT_23 ) { IDENT_0 . IDENT_1 . engine . METHOD_2 . LOG . debug ( STRING_8 , IDENT_25 ) ; IDENT_14 . remove ( IDENT_25 ) ; } } if ( ( IDENT_19 || ( ( IDENT_14 . size ( ) ) <= 1 ) ) || ( IDENT_21 <= ( IDENT_0 . IDENT_1 . IDENT_26 . IDENT_27 . IDENT_28 ) ) ) { return new IDENT_0 . IDENT_1 . engine . ArrayList ( IDENT_15 . values ( ) ) ; } ( IDENT_13 ) ++ ; IDENT_29 = java . lang . Math . max ( 5 , ( ( IDENT_13 ) + 3 ) ) ; } }
org . junit . Assert . assertEquals ( 2 , results . size ( ) ) 