METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . client . core . IDENT_2 operation = org . IDENT_3 . api . mockito . IDENT_4 . mock ( com . IDENT_0 . IDENT_1 . client . core . IDENT_2 . class ) ; com . IDENT_0 . IDENT_1 . client . core . IDENT_5 IDENT_6 = new com . IDENT_0 . IDENT_1 . client . core . METHOD_1 ( ) ; IDENT_6 . init ( IDENT_7 ) ; boolean IDENT_8 = IDENT_6 . METHOD_2 ( operation , null ) ; for ( com . IDENT_0 . IDENT_1 . client . core . IDENT_9 IDENT_10 : IDENT_7 ) { verify ( IDENT_10 ) . execute ( operation ) ; } "<AssertPlaceHolder>" ; } execute ( com . IDENT_0 . IDENT_1 . client . core . IDENT_2 ) { METHOD_3 ( com . IDENT_0 . IDENT_1 . client . core . IDENT_9 . IDENT_11 . IDENT_12 , com . IDENT_0 . IDENT_1 . client . core . IDENT_9 . IDENT_11 . IDENT_13 ) ; operation . METHOD_4 ( this ) ; io . netty . channel . IDENT_14 channel = METHOD_5 ( ) ; if ( channel != null ) { IDENT_15 . put ( channel , operation ) ; io . netty . channel . IDENT_16 IDENT_17 = channel . METHOD_6 ( operation ) ; IDENT_17 . METHOD_7 ( IDENT_18 ) ; logger . debug ( STRING_0 , java . lang . System . METHOD_8 ( operation ) , IDENT_19 , port ) ; return true ; } else { logger . debug ( STRING_1 , java . lang . System . METHOD_8 ( operation ) , IDENT_19 , port ) ; return false ; } }
org . junit . Assert . assertFalse ( IDENT_8 ) 