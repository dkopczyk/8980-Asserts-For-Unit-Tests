METHOD_0 ( ) { final byte [ ] exp = new byte [ ] { ( ( byte ) ( INT_0 ) ) , INT_1 , 4 , 100 , 0 , 10 , INT_2 , INT_3 , INT_4 , INT_5 , INT_6 , INT_7 , INT_8 , INT_7 , INT_6 , INT_4 , INT_1 , 3 , 100 , 0 , 15 , INT_2 , INT_3 , INT_9 , INT_10 , INT_2 , INT_6 , INT_7 , INT_11 , INT_12 , INT_13 , INT_14 , INT_2 , INT_9 , INT_12 , INT_10 , INT_15 , 0 , 0 , 0 , INT_16 , INT_17 , INT_18 , INT_19 , INT_18 , INT_20 , INT_21 , INT_22 , INT_23 , INT_22 , INT_24 , INT_25 , INT_26 , INT_27 , INT_22 , INT_24 , INT_25 , INT_28 , INT_29 , INT_29 , INT_19 , INT_18 , INT_30 , 100 , 0 , 5 , INT_31 , INT_14 , INT_13 , INT_3 , INT_6 , INT_15 , 0 , 0 , 0 , INT_32 , ( ( byte ) ( INT_0 ) ) , INT_1 , 2 , INT_33 , INT_34 , INT_35 , 4 , ( ( byte ) ( INT_36 ) ) , INT_15 , 0 , 0 , 0 , 12 , ( ( byte ) ( INT_0 ) ) , INT_1 , 1 , 100 , 0 , 6 , INT_31 , INT_12 , INT_12 , INT_33 , INT_14 , INT_7 } ; try { com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = com . IDENT_5 . IDENT_6 . client . core . codec . IDENT_7 . METHOD_1 ( com . IDENT_5 . IDENT_6 . client . core . codec . IDENT_8 . IDENT_9 , com . IDENT_5 . IDENT_6 . client . core . codec . IDENT_8 . IDENT_10 ) ; IDENT_4 . METHOD_2 ( ) ; byte [ ] msg = IDENT_4 . toByteArray ( ) ; "<AssertPlaceHolder>" ; } catch ( java . io . IOException ex ) { org . junit . Assert . fail ( ex . getMessage ( ) ) ; } } METHOD_1 ( java . lang . String , byte [ ] ) { final com . IDENT_5 . IDENT_6 . client . core . codec . IDENT_3 IDENT_4 = new com . IDENT_5 . IDENT_6 . client . core . codec . METHOD_3 ( ) ; IDENT_4 . write ( IDENT_11 . IDENT_12 ) ; IDENT_4 . METHOD_4 ( 4 ) ; IDENT_4 . METHOD_5 ( com . IDENT_5 . IDENT_6 . client . core . codec . IDENT_7 . IDENT_13 ) ; IDENT_4 . METHOD_4 ( 3 ) ; IDENT_4 . METHOD_5 ( com . IDENT_5 . IDENT_6 . client . core . codec . IDENT_7 . IDENT_14 ) ; IDENT_4 . METHOD_6 ( IDENT_15 . getBytes ( IDENT_16 . UTF_8 ) ) ; IDENT_4 . METHOD_7 ( ) ; IDENT_4 . METHOD_8 ( false ) ; if ( IDENT_17 == null ) { IDENT_4 . METHOD_5 ( com . IDENT_5 . IDENT_6 . client . core . codec . IDENT_7 . IDENT_18 ) ; } else { IDENT_4 . METHOD_6 ( IDENT_17 ) ; } return IDENT_4 ; }
org . junit . Assert . assertArrayEquals ( exp , msg ) 