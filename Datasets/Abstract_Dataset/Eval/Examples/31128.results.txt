METHOD_0 ( ) { org . batfish . datamodel . IDENT_0 IDENT_1 = new org . batfish . datamodel . METHOD_1 ( ) ; org . batfish . datamodel . Configuration IDENT_2 = IDENT_1 . METHOD_2 ( ) . METHOD_3 ( IDENT_3 . IDENT_4 ) . METHOD_4 ( STRING_0 ) . build ( ) ; org . batfish . datamodel . IDENT_5 . IDENT_6 IDENT_7 = org . batfish . common . util . IDENT_8 . METHOD_5 ( IDENT_2 , IDENT_1 ) ; org . batfish . datamodel . IDENT_9 IDENT_10 = new org . batfish . datamodel . METHOD_6 ( ) ; IDENT_10 . METHOD_7 ( IDENT_11 . IDENT_12 ) ; org . batfish . datamodel . IDENT_5 . IDENT_6 IDENT_13 = IDENT_1 . METHOD_8 ( ) . setName ( IDENT_8 . IDENT_14 ) . METHOD_9 ( IDENT_2 ) . METHOD_10 ( java . util . Collections . singletonList ( new org . batfish . datamodel . IDENT_5 . statement . METHOD_11 ( new org . batfish . datamodel . IDENT_5 . expr . METHOD_12 ( com . google . common . collect . ImmutableList . of ( new org . batfish . datamodel . IDENT_5 . expr . METHOD_13 ( org . batfish . datamodel . IDENT_15 . IDENT_16 ) , new org . batfish . datamodel . IDENT_5 . expr . METHOD_14 ( org . batfish . datamodel . IDENT_5 . expr . IDENT_17 . instance ( ) , new org . batfish . datamodel . IDENT_5 . expr . METHOD_15 ( IDENT_10 ) ) ) ) , com . google . common . collect . ImmutableList . of ( new org . batfish . datamodel . IDENT_5 . statement . METHOD_16 ( new org . batfish . datamodel . IDENT_5 . expr . METHOD_17 ( org . batfish . datamodel . IDENT_18 . IDENT_19 , null ) ) , IDENT_20 . IDENT_21 . METHOD_18 ( ) ) ) ) ) . build ( ) ; "<AssertPlaceHolder>" ; } build ( ) { METHOD_19 ( ( ( IDENT_22 ) != null ) , STRING_1 ) ; METHOD_19 ( ( ( IDENT_23 ) != null ) , STRING_2 ) ; METHOD_19 ( ( ( IDENT_24 ) != null ) , STRING_3 ) ; return new org . batfish . IDENT_25 . METHOD_20 ( IDENT_22 , IDENT_23 , IDENT_26 , IDENT_24 , IDENT_27 , IDENT_28 , IDENT_29 ) ; }
org . junit . Assert . assertThat ( IDENT_7 , org . hamcrest . Matchers . equalTo ( IDENT_13 ) ) 