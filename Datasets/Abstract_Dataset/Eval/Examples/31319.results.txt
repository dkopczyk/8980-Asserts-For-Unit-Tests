METHOD_0 ( ) { org . batfish . datamodel . IDENT_0 IDENT_1 = org . batfish . datamodel . IDENT_0 . parse ( STRING_0 ) ; net . sf . IDENT_2 . IDENT_3 IDENT_4 = IDENT_5 . METHOD_1 ( ) . value ( IDENT_1 . METHOD_2 ( ) ) ; org . batfish . datamodel . IDENT_6 . IDENT_7 IDENT_8 = new org . batfish . datamodel . IDENT_6 . METHOD_3 ( "foo" ) ; java . util . Map < java . lang . String , org . batfish . datamodel . IDENT_9 > IDENT_10 = com . google . common . collect . ImmutableMap . of ( "foo" , org . batfish . datamodel . IDENT_9 . builder ( ) . setName ( "foo" ) . METHOD_4 ( com . google . common . collect . ImmutableList . of ( org . batfish . datamodel . IDENT_11 . METHOD_5 ( org . batfish . datamodel . IDENT_6 . IDENT_12 . METHOD_6 ( IDENT_1 ) ) ) ) . build ( ) ) ; org . batfish . common . IDENT_13 . IDENT_14 IDENT_15 = new org . batfish . common . IDENT_13 . METHOD_7 ( IDENT_5 , IDENT_16 , IDENT_10 , com . google . common . collect . ImmutableMap . of ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( org . batfish . datamodel . IDENT_6 . IDENT_17 ) { return METHOD_9 ( expr ) ; }
org . junit . Assert . assertThat ( IDENT_15 . METHOD_8 ( IDENT_8 ) , org . hamcrest . Matchers . equalTo ( IDENT_4 ) ) 