METHOD_0 ( ) { org . batfish . datamodel . IDENT_0 IDENT_1 = org . batfish . datamodel . IDENT_0 . builder ( ) . setName ( STRING_0 ) . METHOD_1 ( com . google . common . collect . ImmutableList . of ( METHOD_2 ( ) . METHOD_3 ( org . batfish . IDENT_2 . IDENT_3 . IDENT_4 ) . build ( ) , METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( org . batfish . IDENT_2 . IDENT_3 . IDENT_5 . IDENT_6 ) ) . build ( ) , METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( org . batfish . IDENT_2 . IDENT_3 . IDENT_5 . IDENT_7 ) ) . build ( ) , org . batfish . IDENT_2 . IDENT_3 . IDENT_8 ) ) . build ( ) ; java . util . Optional < org . batfish . IDENT_2 . IDENT_3 . IDENT_9 > flow = org . batfish . IDENT_2 . IDENT_3 . IDENT_10 . METHOD_5 ( org . batfish . IDENT_2 . IDENT_3 . IDENT_5 . IDENT_11 , org . batfish . IDENT_2 . IDENT_3 . IDENT_5 . IDENT_12 , IDENT_1 , org . batfish . IDENT_2 . IDENT_3 . IDENT_5 . IDENT_13 ) ; "<AssertPlaceHolder>" ; } empty ( ) { return new org . batfish . datamodel . IDENT_14 . METHOD_6 ( com . google . common . graph . IDENT_15 . METHOD_7 ( ) . build ( ) ) ; }
org . junit . Assert . assertThat ( flow , org . hamcrest . Matchers . equalTo ( java . util . Optional . empty ( ) ) ) 