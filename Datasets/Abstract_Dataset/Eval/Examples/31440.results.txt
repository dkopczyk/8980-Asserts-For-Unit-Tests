METHOD_0 ( ) { when ( IDENT_0 . get ( STRING_0 , STRING_1 , null ) ) . METHOD_1 ( new com . IDENT_1 . IDENT_2 . IDENT_3 . api . METHOD_2 ( STRING_0 ) ) ; try { METHOD_3 ( ) . get ( STRING_0 , STRING_1 ) ; org . junit . Assert . fail ( ) ; } catch ( com . IDENT_1 . IDENT_2 . IDENT_3 . api . METHOD_2 e ) { "<AssertPlaceHolder>" ; } verify ( IDENT_0 ) . get ( STRING_0 , STRING_1 , null ) ; METHOD_4 ( IDENT_0 ) ; } METHOD_5 ( ) { if ( ! ( IDENT_4 ) ) { if ( ! ( IDENT_5 . METHOD_6 ( IDENT_6 ) ) ) { IDENT_5 . METHOD_7 ( IDENT_6 , new com . IDENT_1 . IDENT_2 . web . IDENT_7 . IDENT_8 . METHOD_8 ( ) . METHOD_9 ( IDENT_9 ) . build ( ) , com . IDENT_1 . IDENT_2 . web . IDENT_7 . IDENT_8 . ImmutableMap . < java . lang . String , java . lang . Object > of ( ) , new com . IDENT_1 . IDENT_2 . web . IDENT_7 . IDENT_8 . METHOD_10 ( ) . METHOD_11 ( ) . METHOD_12 ( STRING_2 ) . build ( ) ) ; IDENT_4 = true ; } } return IDENT_6 ; }
org . junit . Assert . assertEquals ( e . METHOD_5 ( ) , STRING_0 ) 