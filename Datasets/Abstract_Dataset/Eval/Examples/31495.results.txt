METHOD_0 ( ) { java . util . List < java . util . Map < java . lang . String , java . lang . Object > > expected = com . google . common . collect . ImmutableList . < java . util . Map < java . lang . String , java . lang . Object > > of ( com . google . common . collect . ImmutableMap . < java . lang . String , java . lang . Object > of ( IDENT_0 . IDENT_1 , STRING_0 , IDENT_0 . IDENT_2 , STRING_1 , STRING_2 , INT_0 ) , com . google . common . collect . ImmutableMap . < java . lang . String , java . lang . Object > of ( IDENT_0 . IDENT_1 , STRING_3 , IDENT_0 . IDENT_2 , STRING_4 , STRING_2 , INT_1 ) ) ; java . util . List < com . IDENT_3 . IDENT_4 . IDENT_5 . api . IDENT_6 > IDENT_7 = com . google . common . collect . Lists . newArrayList ( com . IDENT_3 . IDENT_4 . IDENT_5 . api . IDENT_6 . of ( STRING_5 , STRING_1 ) , com . IDENT_3 . IDENT_4 . IDENT_5 . api . IDENT_6 . of ( STRING_3 , STRING_4 ) ) ; when ( IDENT_8 . METHOD_1 ( IDENT_7 , IDENT_9 . IDENT_10 ) ) . thenReturn ( expected . iterator ( ) ) ; java . util . List < java . util . Map < java . lang . String , java . lang . Object > > actual = com . google . common . collect . Lists . newArrayList ( METHOD_2 ( test . integration . IDENT_5 . IDENT_11 . IDENT_12 ) . METHOD_1 ( IDENT_7 , IDENT_9 . IDENT_10 ) ) ; "<AssertPlaceHolder>" ; verify ( IDENT_8 ) . METHOD_1 ( IDENT_7 , IDENT_9 . IDENT_10 ) ; METHOD_3 ( IDENT_8 ) ; } METHOD_1 ( java . util . List , com . IDENT_3 . IDENT_4 . IDENT_5 . api . IDENT_9 ) { return IDENT_13 . get ( ) . METHOD_1 ( IDENT_7 , IDENT_14 ) ; }
org . junit . Assert . assertEquals ( actual , expected ) 