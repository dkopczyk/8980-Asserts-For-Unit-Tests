METHOD_0 ( ) { final java . util . concurrent . atomic . IDENT_0 IDENT_1 = new java . util . concurrent . atomic . METHOD_1 ( false ) ; when ( IDENT_2 . METHOD_2 ( any ( com . IDENT_3 . IDENT_4 . IDENT_5 . class ) ) ) . METHOD_3 ( new org . mockito . IDENT_6 . IDENT_7 < java . lang . Boolean > ( ) { @ com . IDENT_3 . IDENT_4 . pool . Override public com . IDENT_3 . IDENT_4 . pool . Boolean METHOD_4 ( org . mockito . IDENT_8 . IDENT_9 IDENT_8 ) throws java . lang . Throwable { IDENT_1 . set ( true ) ; return false ; } } ) ; try { IDENT_10 . execute ( com . IDENT_3 . IDENT_4 . pool . IDENT_11 . IDENT_12 , new com . IDENT_3 . IDENT_4 . IDENT_13 < com . IDENT_3 . IDENT_4 . pool . IDENT_11 . IDENT_14 , java . lang . IDENT_15 > ( ) { @ com . IDENT_3 . IDENT_4 . pool . Override public com . IDENT_3 . IDENT_4 . pool . IDENT_15 call ( com . IDENT_3 . IDENT_4 . pool . IDENT_11 . IDENT_14 service ) throws com . IDENT_3 . IDENT_4 . exceptions . IDENT_16 { throw new com . IDENT_3 . IDENT_4 . exceptions . METHOD_5 ( ) ; } } ) ; org . junit . Assert . fail ( ) ; } catch ( com . IDENT_3 . IDENT_4 . exceptions . IDENT_17 expected ) { } IDENT_10 . METHOD_6 ( ) ; "<AssertPlaceHolder>" ; } get ( ) { return IDENT_18 . get ( "" ) ; }
org . junit . Assert . assertTrue ( IDENT_1 . get ( ) ) 