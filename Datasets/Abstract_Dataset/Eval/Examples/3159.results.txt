METHOD_0 ( ) { final com . allanbank . mongodb . bson . Document t = com . allanbank . mongodb . bson . builder . IDENT_0 . start ( ) . METHOD_1 ( "a" , 1 ) . METHOD_1 ( "b" , 2 ) . build ( ) ; final com . allanbank . mongodb . bson . Document [ ] IDENT_1 = new com . allanbank . mongodb . bson . Document [ ] { com . allanbank . mongodb . bson . builder . IDENT_0 . start ( ) . METHOD_1 ( "a" , 1 ) . METHOD_1 ( "b" , 2 ) . build ( ) , com . allanbank . mongodb . bson . builder . IDENT_0 . start ( ) . METHOD_1 ( STRING_0 , 1 ) . build ( ) } ; for ( final com . allanbank . mongodb . IDENT_2 . IDENT_3 IDENT_4 : IDENT_2 . IDENT_3 . values ( ) ) { final com . allanbank . mongodb . IDENT_2 IDENT_5 = new com . allanbank . mongodb . METHOD_2 ( IDENT_4 , IDENT_1 ) ; "<AssertPlaceHolder>" ; } } matches ( java . util . regex . IDENT_6 ) { IDENT_7 = null ; IDENT_8 . put ( IDENT_9 . IDENT_10 , new com . allanbank . mongodb . bson . element . METHOD_3 ( IDENT_9 . IDENT_10 . METHOD_4 ( ) , pattern ) ) ; return this ; }
org . junit . Assert . assertTrue ( IDENT_5 . matches ( t ) ) 