METHOD_0 ( ) { int IDENT_0 = 4 ; int IDENT_1 = 0 ; try ( IDENT_2 . nio . util . IDENT_3 < IDENT_2 . nio . util . Path > IDENT_4 = IDENT_2 . nio . util . IDENT_5 . METHOD_1 ( IDENT_6 , STRING_0 ) ) { for ( IDENT_2 . nio . util . Path path : IDENT_4 ) { if ( IDENT_2 . nio . util . IDENT_7 . METHOD_2 ( path ) ) { IDENT_1 ++ ; } } } "<AssertPlaceHolder>" ; } METHOD_1 ( IDENT_2 . nio . util . Path , java . lang . String ) { IDENT_2 . nio . util . IDENT_5 . validate ( IDENT_8 ) ; return new IDENT_2 . nio . IDENT_9 . directory . METHOD_3 ( IDENT_8 , pattern ) ; }
org . junit . Assert . assertThat ( IDENT_0 , org . hamcrest . CoreMatchers . is ( IDENT_1 ) ) 