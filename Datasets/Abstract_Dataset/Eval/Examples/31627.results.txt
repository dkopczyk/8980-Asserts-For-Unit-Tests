METHOD_0 ( ) { final java . util . HashMap < java . lang . String , java . lang . Object > parameters = new java . util . HashMap ( ) ; parameters . put ( STRING_0 5 , false ) ; parameters . put ( STRING_0 3 , false ) ; parameters . put ( STRING_1 , false ) ; final org . IDENT_0 . beam . framework . datamodel . IDENT_1 IDENT_2 = org . IDENT_0 . beam . framework . IDENT_3 . IDENT_4 . METHOD_1 ( STRING_2 , parameters , org . IDENT_0 . beam . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_2 ( ) ) ; final java . lang . String [ ] IDENT_8 = IDENT_2 . METHOD_3 ( ) ; final java . lang . String [ ] IDENT_9 = new java . lang . String [ ] { STRING_3 , STRING_0 2 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_0 4 , STRING_0 0 , STRING_8 , STRING_0 , STRING_9 , STRING_0 6 , STRING_0 1 } ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { int IDENT_10 = 10 ; int IDENT_11 = 10 ; org . IDENT_0 . beam . framework . datamodel . IDENT_1 IDENT_12 = new org . IDENT_0 . beam . framework . datamodel . METHOD_4 ( STRING_10 , STRING_10 , IDENT_10 , IDENT_11 ) ; for ( int i = 0 ; i < INT_0 ; i ++ ) { if ( i == 10 ) { continue ; } IDENT_12 . METHOD_5 ( java . lang . String . format ( STRING_11 3 , ( i + 1 ) ) , IDENT_13 . IDENT_14 ) . METHOD_6 ( i ) ; } IDENT_12 . METHOD_5 ( STRING_11 4 , IDENT_13 . IDENT_15 ) ; float [ ] IDENT_16 = new float [ IDENT_10 * IDENT_11 ] ; IDENT_12 . METHOD_7 ( new org . IDENT_0 . beam . framework . datamodel . METHOD_8 ( STRING_11 2 , IDENT_10 , IDENT_11 , 0 , 0 , 1 , 1 , IDENT_16 ) ) ; IDENT_12 . METHOD_7 ( new org . IDENT_0 . beam . framework . datamodel . METHOD_8 ( STRING_12 , IDENT_10 , IDENT_11 , 0 , 0 , 1 , 1 , IDENT_16 ) ) ; IDENT_12 . METHOD_7 ( new org . IDENT_0 . beam . framework . datamodel . METHOD_8 ( STRING_11 , IDENT_10 , IDENT_11 , 0 , 0 , 1 , 1 , IDENT_16 ) ) ; IDENT_12 . METHOD_7 ( new org . IDENT_0 . beam . framework . datamodel . METHOD_8 ( STRING_11 0 , IDENT_10 , IDENT_11 , 0 , 0 , 1 , 1 , IDENT_16 ) ) ; IDENT_12 . METHOD_7 ( new org . IDENT_0 . beam . framework . datamodel . METHOD_8 ( STRING_13 , IDENT_10 , IDENT_11 , 0 , 0 , 1 , 1 , IDENT_16 ) ) ; IDENT_12 . METHOD_7 ( new org . IDENT_0 . beam . framework . datamodel . METHOD_8 ( STRING_14 , IDENT_10 , IDENT_11 , 0 , 0 , 1 , 1 , IDENT_16 ) ) ; org . IDENT_0 . beam . framework . datamodel . IDENT_17 IDENT_18 = new org . IDENT_0 . beam . framework . datamodel . METHOD_9 ( STRING_11 4 ) ; IDENT_18 . METHOD_10 ( STRING_15 , 1 , STRING_16 ) ; IDENT_12 . METHOD_11 ( STRING_11 4 ) . METHOD_12 ( IDENT_18 ) ; IDENT_12 . METHOD_13 ( ) . add ( IDENT_18 ) ; IDENT_12 . METHOD_14 ( IDENT_13 . IDENT_19 . parse ( STRING_11 1 ) ) ; IDENT_12 . METHOD_15 ( IDENT_13 . IDENT_19 . parse ( STRING_17 ) ) ; final org . IDENT_0 . beam . framework . datamodel . IDENT_20 IDENT_21 = new org . IDENT_0 . beam . framework . datamodel . METHOD_16 ( STRING_18 ) ; final org . IDENT_0 . beam . framework . datamodel . IDENT_22 IDENT_23 = new org . IDENT_0 . beam . framework . datamodel . METHOD_17 ( STRING_19 , org . IDENT_0 . beam . framework . datamodel . IDENT_13 . METHOD_18 ( STRING_11 5 ) , true ) ; IDENT_21 . METHOD_19 ( IDENT_23 ) ; IDENT_12 . METHOD_20 ( ) . METHOD_21 ( IDENT_21 ) ; return IDENT_12 ; }
org . junit . Assert . assertArrayEquals ( IDENT_9 , IDENT_8 ) 