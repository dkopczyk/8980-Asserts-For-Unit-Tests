METHOD_0 ( ) { final java . awt . IDENT_0 IDENT_1 = new java . awt . METHOD_1 ( null ) ; try { IDENT_1 . put ( IDENT_2 . IDENT_3 , null ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . Exception expected ) { } try { IDENT_1 . put ( IDENT_2 . IDENT_3 , new java . lang . Object ( ) ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . Exception expected ) { } try { IDENT_1 . put ( IDENT_2 . IDENT_3 , new java . awt . METHOD_2 ( ) ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . Exception expected ) { } final java . awt . METHOD_2 IDENT_4 = new java . awt . METHOD_2 ( 1 , 1 ) ; IDENT_1 . put ( IDENT_2 . IDENT_3 , IDENT_4 ) ; "<AssertPlaceHolder>" ; } get ( int ) { if ( index >= ( IDENT_5 ) ) { throw new java . lang . IllegalStateException ( java . lang . String . format ( STRING_0 , ( ( IDENT_5 ) - 1 ) , index ) ) ; } if ( IDENT_6 ) { try { METHOD_3 ( IDENT_7 , IDENT_8 ) ; } catch ( java . io . IOException e ) { org . IDENT_9 . beam . IDENT_10 . IDENT_11 . IDENT_12 . logger . log ( IDENT_13 . IDENT_14 , STRING_1 , e ) ; return null ; } finally { IDENT_6 = false ; } } MOD_0 ( IDENT_8 ) { try { int IDENT_15 = METHOD_4 ( index ) ; if ( IDENT_15 != ( IDENT_7 ) ) { IDENT_8 . METHOD_5 ( ) ; METHOD_6 ( IDENT_15 , IDENT_8 ) ; IDENT_7 = IDENT_15 ; } int IDENT_16 = ( IDENT_17 ) * IDENT_15 ; return IDENT_8 . get ( ( index - IDENT_16 ) ) ; } catch ( java . io . IOException e ) { org . IDENT_9 . beam . IDENT_10 . IDENT_11 . IDENT_12 . logger . log ( IDENT_13 . IDENT_14 , java . lang . String . format ( STRING_2 , index ) , e ) ; } } return null ; }
org . junit . Assert . assertSame ( IDENT_4 , IDENT_1 . get ( IDENT_2 . IDENT_3 ) ) 