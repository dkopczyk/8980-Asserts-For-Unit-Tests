METHOD_0 ( ) { java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { STRING_0 , STRING_1 5 } ; final org . IDENT_1 . beam . framework . datamodel . IDENT_2 IDENT_3 = org . IDENT_1 . beam . IDENT_4 . IDENT_5 . METHOD_1 ( STRING_1 9 , STRING_1 3 , IDENT_0 ) ; IDENT_3 . METHOD_2 ( IDENT_6 . IDENT_7 . parse ( STRING_1 7 ) ) ; IDENT_3 . METHOD_3 ( IDENT_6 . IDENT_7 . parse ( STRING_1 0 ) ) ; final org . IDENT_1 . beam . framework . datamodel . IDENT_2 IDENT_8 = org . IDENT_1 . beam . IDENT_4 . IDENT_5 . METHOD_1 ( STRING_0 0 , STRING_1 3 , IDENT_0 ) ; IDENT_8 . METHOD_2 ( IDENT_6 . IDENT_7 . parse ( STRING_2 ) ) ; IDENT_8 . METHOD_3 ( IDENT_6 . IDENT_7 . parse ( STRING_3 ) ) ; final java . util . Calendar IDENT_9 = java . util . Calendar . getInstance ( ) ; IDENT_9 . set ( INT_0 , Calendar . IDENT_10 , 1 , 12 , INT_1 , 0 ) ; final java . util . Calendar IDENT_11 = java . util . Calendar . getInstance ( ) ; IDENT_11 . set ( INT_2 , Calendar . IDENT_12 , 1 , 6 , 0 , 0 ) ; final java . util . Calendar IDENT_13 = java . util . Calendar . getInstance ( ) ; IDENT_13 . set ( INT_3 , Calendar . IDENT_12 , 1 , 0 , 0 , 0 ) ; org . IDENT_1 . beam . IDENT_4 . IDENT_14 [ ] IDENT_15 = new org . IDENT_1 . beam . IDENT_4 . IDENT_14 [ ] { new org . IDENT_1 . beam . IDENT_4 . METHOD_4 ( STRING_1 2 , FLOAT_0 , FLOAT_0 , IDENT_9 . getTime ( ) ) , new org . IDENT_1 . beam . IDENT_4 . METHOD_4 ( STRING_1 , FLOAT_1 , FLOAT_1 , IDENT_11 . getTime ( ) ) , new org . IDENT_1 . beam . IDENT_4 . METHOD_4 ( STRING_4 , FLOAT_2 , FLOAT_2 , IDENT_13 . getTime ( ) ) } ; org . IDENT_1 . beam . IDENT_4 . IDENT_16 IDENT_17 = new org . IDENT_1 . beam . IDENT_4 . METHOD_5 ( ) ; IDENT_17 . METHOD_6 ( ) ; java . io . File IDENT_18 = org . IDENT_1 . beam . IDENT_4 . IDENT_5 . METHOD_7 ( STRING_1 1 , getClass ( ) ) ; IDENT_17 . METHOD_8 ( STRING_1 8 , IDENT_18 ) ; IDENT_17 . METHOD_8 ( STRING_5 , false ) ; IDENT_17 . METHOD_8 ( STRING_1 4 , false ) ; IDENT_17 . METHOD_8 ( STRING_6 , IDENT_15 ) ; IDENT_17 . METHOD_8 ( STRING_7 , 1 ) ; IDENT_17 . METHOD_8 ( STRING_8 , STRING_9 ) ; IDENT_17 . METHOD_9 ( IDENT_3 , IDENT_8 ) ; try ( org . IDENT_1 . beam . IDENT_4 . IDENT_19 reader = ( ( org . IDENT_1 . beam . IDENT_4 . IDENT_19 ) ( IDENT_17 . METHOD_10 ( STRING_1 6 ) ) ) ) { final java . util . List < org . IDENT_1 . beam . IDENT_20 . IDENT_21 > IDENT_22 = METHOD_11 ( reader ) ; "<AssertPlaceHolder>" ; METHOD_12 ( IDENT_22 , STRING_1 2 , 1 , FLOAT_3 , FLOAT_4 , FLOAT_5 , FLOAT_6 ) ; METHOD_12 ( IDENT_22 , STRING_1 , 2 , FLOAT_7 , FLOAT_8 , FLOAT_9 , FLOAT_10 ) ; } } size ( ) { return size ; }
org . junit . Assert . assertEquals ( 2 , IDENT_22 . size ( ) ) 