METHOD_0 ( ) { final com . allanbank . mongodb . bson . IDENT_0 ref = new com . allanbank . mongodb . bson . METHOD_1 ( STRING_0 , STRING_1 , new com . allanbank . mongodb . bson . element . METHOD_2 ( "a" , 1 ) ) ; final java . lang . String expected = STRING_2 ; final java . lang . String result = ref . toString ( ) ; "<AssertPlaceHolder>" ; } toString ( ) { final java . lang . StringBuilder builder = new java . lang . StringBuilder ( ) ; builder . append ( IDENT_1 . name ( ) ) ; if ( ( IDENT_2 ) != null ) { builder . append ( STRING_3 ) ; builder . append ( IDENT_2 ) ; builder . append ( STRING_4 ) ; } else if ( ! ( IDENT_3 . isEmpty ( ) ) ) { builder . append ( STRING_3 ) ; boolean first = true ; for ( final com . allanbank . mongodb . bson . Document IDENT_4 : IDENT_3 ) { if ( ! first ) { builder . append ( STRING_5 ) ; } first = false ; builder . append ( STRING_6 ) ; boolean IDENT_5 = true ; for ( final com . allanbank . mongodb . bson . Element element : IDENT_4 ) { if ( ! IDENT_5 ) { builder . append ( STRING_5 ) ; } IDENT_5 = false ; builder . append ( element ) ; } builder . append ( STRING_7 ) ; } builder . append ( STRING_4 ) ; } return builder . toString ( ) ; }
org . junit . Assert . assertEquals ( expected , result ) 