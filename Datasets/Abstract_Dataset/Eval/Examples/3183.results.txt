METHOD_0 ( ) { final com . allanbank . mongodb . bson . builder . IDENT_0 IDENT_1 = com . allanbank . mongodb . bson . builder . IDENT_2 . d ( com . allanbank . mongodb . bson . builder . IDENT_2 . e ( STRING_0 , STRING_1 ) , com . allanbank . mongodb . bson . builder . IDENT_2 . e ( STRING_2 , com . allanbank . mongodb . bson . builder . IDENT_2 . a ( STRING_3 , STRING_4 , STRING_5 ) ) , com . allanbank . mongodb . bson . builder . IDENT_2 . e ( STRING_6 , com . allanbank . mongodb . bson . builder . IDENT_2 . a ( STRING_7 , STRING_8 , STRING_9 ) ) ) ; final com . allanbank . mongodb . bson . builder . IDENT_0 expected = com . allanbank . mongodb . bson . builder . IDENT_2 . start ( ) ; expected . add ( STRING_0 , STRING_1 ) ; final com . allanbank . mongodb . bson . builder . IDENT_3 IDENT_4 = expected . METHOD_1 ( STRING_2 ) ; IDENT_4 . add ( STRING_3 ) . add ( STRING_4 ) . add ( STRING_5 ) ; final com . allanbank . mongodb . bson . builder . IDENT_3 IDENT_5 = expected . METHOD_1 ( STRING_6 ) ; IDENT_5 . add ( STRING_7 ) . add ( STRING_8 ) . add ( STRING_9 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { final long IDENT_6 = IDENT_7 ; if ( IDENT_6 != 0 ) { final com . allanbank . mongodb . bson . builder . IDENT_0 b = com . allanbank . mongodb . bson . builder . IDENT_2 . start ( ) ; b . add ( com . allanbank . mongodb . client . IDENT_8 . IDENT_9 , ( ( ( IDENT_10 ) + STRING_10 ) + ( IDENT_11 ) ) ) ; b . add ( com . allanbank . mongodb . client . IDENT_8 . IDENT_12 , IDENT_6 ) ; b . add ( com . allanbank . mongodb . client . IDENT_8 . IDENT_13 , IDENT_14 ) ; b . add ( com . allanbank . mongodb . client . IDENT_8 . IDENT_15 , IDENT_16 ) ; b . add ( com . allanbank . mongodb . client . IDENT_8 . IDENT_17 , IDENT_18 ) ; return b . build ( ) ; } return null ; }
org . junit . Assert . assertThat ( IDENT_1 . METHOD_2 ( ) , org . hamcrest . Matchers . is ( expected . METHOD_2 ( ) ) ) 