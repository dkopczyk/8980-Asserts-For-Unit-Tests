test ( ) { try { com . IDENT_0 . IDENT_1 . IDENT_2 api = com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . create ( ) ; debug ( api . METHOD_0 ( ) ) ; debug ( api . METHOD_1 ( ) ) ; debug ( api . METHOD_2 ( STRING_0 , STRING_0 , STRING_1 , STRING_2 ) ) ; debug ( api . METHOD_3 ( STRING_3 , STRING_4 ) ) ; debug ( api . METHOD_4 ( STRING_5 , STRING_5 , STRING_6 ) ) ; debug ( api . METHOD_5 ( INT_0 , INT_1 , STRING_7 , IDENT_4 . IDENT_5 , IDENT_6 . IDENT_7 , STRING_8 , 1 , INT_2 ) ) ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; "<AssertPlaceHolder>" ; } } METHOD_5 ( int , int , java . lang . String , com . IDENT_0 . IDENT_1 . IDENT_4 , com . IDENT_0 . IDENT_1 . IDENT_6 , java . lang . String , int , int ) { java . util . List < org . apache . http . IDENT_8 > param = METHOD_6 ( ) ; param . add ( new org . apache . http . message . METHOD_7 ( STRING_9 , java . lang . String . valueOf ( IDENT_9 ) ) ) ; param . add ( new org . apache . http . message . METHOD_7 ( STRING_10 , java . lang . String . valueOf ( IDENT_10 ) ) ) ; param . add ( new org . apache . http . message . METHOD_7 ( STRING_11 , IDENT_11 ) ) ; param . add ( new org . apache . http . message . METHOD_7 ( STRING_12 , IDENT_12 . getValue ( ) ) ) ; param . add ( new org . apache . http . message . METHOD_7 ( STRING_13 , IDENT_13 . getValue ( ) ) ) ; param . add ( new org . apache . http . message . METHOD_7 ( "value" , value ) ) ; param . add ( new org . apache . http . message . METHOD_7 ( STRING_14 , java . lang . String . valueOf ( IDENT_14 ) ) ) ; param . add ( new org . apache . http . message . METHOD_7 ( STRING_15 , java . lang . String . valueOf ( IDENT_15 ) ) ) ; return execute ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_16 , param , com . IDENT_0 . IDENT_1 . result . IDENT_17 . class ) ; }
org . junit . Assert . assertTrue ( false ) 