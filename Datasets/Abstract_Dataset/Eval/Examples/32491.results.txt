METHOD_0 ( ) { java . lang . String expected = STRING_0 + ( STRING_1 + STRING_2 ) ; java . lang . String actual = IDENT_0 . IDENT_1 . model . IDENT_2 . builder ( ) . host ( STRING_3 ) . METHOD_1 ( STRING_4 ) . METHOD_2 ( STRING_5 , STRING_6 , STRING_7 ) . METHOD_3 ( ) . build ( ) . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; sb . append ( STRING_8 ) ; if ( METHOD_2 ) sb . append ( STRING_9 0 ) ; sb . append ( STRING_9 2 ) ; if ( null != ( IDENT_3 ) ) sb . append ( IDENT_3 ) . append ( STRING_10 ) . append ( IDENT_4 ) . append ( STRING_9 ) ; sb . append ( IDENT_5 ) ; if ( ( - 1 ) != ( port ) ) sb . append ( STRING_10 ) . append ( port ) ; if ( null != ( METHOD_1 ) ) sb . append ( METHOD_1 ) ; if ( METHOD_2 ) { com . google . common . base . IDENT_6 . METHOD_5 ( IDENT_7 , STRING_9 1 ) ; com . google . common . base . IDENT_6 . METHOD_5 ( IDENT_8 , STRING_11 ) ; com . google . common . base . IDENT_6 . METHOD_5 ( IDENT_9 , STRING_12 ) ; sb . append ( STRING_9 3 ) . append ( STRING_13 ) . append ( IDENT_7 ) . append ( STRING_9 4 ) . append ( IDENT_8 ) . append ( STRING_14 ) . append ( IDENT_9 ) ; if ( null != ( verify ) ) sb . append ( STRING_15 ) . append ( verify ) ; if ( null != ( IDENT_10 ) ) sb . append ( STRING_16 ) . append ( IDENT_10 ) ; if ( null != ( IDENT_11 ) ) sb . append ( STRING_17 ) . append ( IDENT_11 ) ; } return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 