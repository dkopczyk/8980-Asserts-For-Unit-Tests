METHOD_0 ( ) { for ( de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 type : de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . values ( ) ) { de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_6 IDENT_7 = de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( type , de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_8 . IDENT_9 ) ; "<AssertPlaceHolder>" ; } } METHOD_1 ( de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_10 , de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . Map ) { switch ( IDENT_11 ) { case IDENT_12 : return new de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_2 ( IDENT_9 ) ; case IDENT_13 : return new de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_3 ( IDENT_9 ) ; case IDENT_14 : return new de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_4 ( IDENT_9 ) ; case IDENT_15 : return new de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_5 ( new de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_3 ( IDENT_9 ) , 4 ) ; case IDENT_16 : return IDENT_17 . INSTANCE ; } throw new java . lang . IllegalArgumentException ( ( STRING_0 + IDENT_11 ) ) ; }
org . junit . Assert . assertNotNull ( IDENT_7 ) 