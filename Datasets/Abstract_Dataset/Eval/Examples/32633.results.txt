METHOD_0 ( ) { final ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . IDENT_4 IDENT_5 = ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_6 . classes . IDENT_7 . getInstance ( new java . math . BigInteger ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_8 . IDENT_9 . IDENT_10 , 10 ) ) ; final ch . IDENT_0 . IDENT_1 . helper . random . IDENT_11 . IDENT_12 IDENT_13 = ch . IDENT_0 . IDENT_1 . helper . random . IDENT_11 . IDENT_12 . getInstance ( ) ; final int size = 20 ; ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . classes . IDENT_14 IDENT_15 = ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . classes . IDENT_16 . getInstance ( size ) . METHOD_1 ( ) ; ch . IDENT_0 . IDENT_1 . crypto . IDENT_17 . IDENT_18 . classes . IDENT_19 IDENT_20 = ch . IDENT_0 . IDENT_1 . crypto . IDENT_17 . IDENT_18 . classes . IDENT_19 . getInstance ( IDENT_5 , size , IDENT_13 ) ; ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . classes . IDENT_21 IDENT_22 = IDENT_20 . METHOD_2 ( ) . METHOD_1 ( ) ; ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . classes . IDENT_21 IDENT_23 = IDENT_20 . commit ( IDENT_15 , IDENT_22 ) ; ch . IDENT_0 . IDENT_1 . crypto . IDENT_8 . IDENT_24 . interfaces . IDENT_25 IDENT_26 = ch . IDENT_0 . IDENT_1 . crypto . IDENT_8 . classes . IDENT_27 . METHOD_3 ( INT_0 , null ) ; ch . IDENT_0 . IDENT_1 . crypto . IDENT_8 . IDENT_24 . interfaces . IDENT_28 IDENT_29 = ch . IDENT_0 . IDENT_1 . crypto . IDENT_8 . classes . IDENT_27 . METHOD_4 ( INT_0 , size ) ; ch . IDENT_0 . IDENT_1 . crypto . IDENT_8 . classes . IDENT_27 IDENT_30 = ch . IDENT_0 . IDENT_1 . crypto . IDENT_8 . classes . IDENT_27 . getInstance ( IDENT_26 , IDENT_29 , IDENT_5 , size , 20 , IDENT_13 ) ; ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . classes . IDENT_21 IDENT_31 = IDENT_30 . METHOD_5 ( ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . classes . IDENT_32 . getInstance ( IDENT_15 , IDENT_22 ) , IDENT_23 ) ; boolean v = IDENT_30 . verify ( IDENT_31 , IDENT_23 ) ; "<AssertPlaceHolder>" ; } verify ( ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . Element , ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . Element ) { if ( ( ! ( this . METHOD_6 ( ) . contains ( IDENT_31 ) ) ) || ( ! ( this . METHOD_7 ( ) . contains ( IDENT_33 ) ) ) ) { throw new java . lang . IllegalArgumentException ( ) ; } return this . METHOD_8 ( ( ( IDENT_34 ) ( IDENT_31 ) ) , ( ( IDENT_35 ) ( IDENT_33 ) ) ) ; }
org . junit . Assert . assertTrue ( v ) 