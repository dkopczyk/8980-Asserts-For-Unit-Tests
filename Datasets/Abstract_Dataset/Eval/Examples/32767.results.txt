METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 . util . IDENT_3 parameters = new com . IDENT_0 . IDENT_1 . IDENT_2 . util . METHOD_1 ( ) ; parameters . METHOD_2 ( false ) ; byte [ ] bytes = com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_4 . METHOD_3 ( null , parameters ) ; java . lang . Object result = com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_4 . METHOD_4 ( bytes ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( byte [ ] ) { if ( ( bytes == null ) || ( ( bytes . length ) == 0 ) ) { throw new com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_5 ( STRING_0 ) ; } com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . IDENT_6 IDENT_5 = new com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . METHOD_6 ( ) ; java . lang . Class IDENT_7 = null ; try { IDENT_5 . METHOD_7 ( bytes ) ; if ( IDENT_5 . METHOD_8 ( ) ) { java . lang . String IDENT_8 = IDENT_5 . METHOD_9 ( ) ; if ( IDENT_8 . equalsIgnoreCase ( STRING_1 ) ) { return null ; } else { IDENT_7 = com . IDENT_0 . IDENT_1 . IDENT_2 . util . IDENT_9 . METHOD_10 ( IDENT_8 ) ; } } else { throw new com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_5 ( "" ) ; } return com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_4 . METHOD_11 ( IDENT_5 , IDENT_7 ) ; } catch ( java . lang . Exception ex ) { ex . printStackTrace ( ) ; return null ; } finally { IDENT_5 . close ( ) ; } }
org . junit . Assert . assertNull ( result ) 