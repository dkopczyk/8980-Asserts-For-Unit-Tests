METHOD_0 ( ) { IDENT_0 . function . Set < java . lang . Boolean > IDENT_1 = new IDENT_0 . function . HashSet < java . lang . Boolean > ( ) ; IDENT_1 . add ( true ) ; IDENT_1 . add ( null ) ; IDENT_1 . add ( false ) ; IDENT_0 . function . Set < java . lang . Boolean > set = METHOD_1 ( IDENT_1 , IDENT_0 . function . HashSet . class ) ; IDENT_0 . function . Iterator < java . lang . Boolean > it = IDENT_1 . iterator ( ) ; IDENT_0 . function . Iterator < java . lang . Boolean > IDENT_2 = set . iterator ( ) ; while ( ( it . hasNext ( ) ) && ( IDENT_2 . hasNext ( ) ) ) { java . lang . Boolean IDENT_3 = ( ( java . lang . Boolean ) ( it . next ( ) ) ) ; java . lang . Boolean IDENT_4 = ( ( java . lang . Boolean ) ( IDENT_2 . next ( ) ) ) ; "<AssertPlaceHolder>" ; } } hasNext ( ) { return ( next ) != null ; }
org . junit . Assert . assertEquals ( IDENT_3 , IDENT_4 ) 