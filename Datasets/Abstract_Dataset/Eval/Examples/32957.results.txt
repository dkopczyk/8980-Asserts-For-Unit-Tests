METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . util . IDENT_4 cache = new org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . util . METHOD_1 ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . io . IDENT_5 params = new org . IDENT_0 . IDENT_1 . IDENT_2 . io . METHOD_2 ( ) ; params . METHOD_3 ( true ) ; cache . METHOD_4 ( params ) ; cache . METHOD_5 ( true ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_6 ( cache ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . io . IDENT_7 . IDENT_8 . METHOD_7 ( new org . IDENT_0 . IDENT_1 . IDENT_2 . io . IDENT_7 . METHOD_8 ( ) ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 IDENT_10 = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_9 ( STRING_0 ) ; org . IDENT_11 . IDENT_12 . IDENT_13 . IDENT_14 IDENT_15 = new org . IDENT_11 . IDENT_12 . IDENT_13 . METHOD_10 ( ) ; new org . IDENT_0 . IDENT_1 . IDENT_2 . io . IDENT_12 . METHOD_11 ( IDENT_10 , IDENT_15 ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . io . IDENT_12 . IDENT_16 IDENT_17 = new org . IDENT_0 . IDENT_1 . IDENT_2 . io . IDENT_12 . METHOD_12 ( ) ; new org . IDENT_11 . IDENT_12 . IDENT_18 . METHOD_13 ( IDENT_15 , IDENT_17 ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 IDENT_19 = IDENT_17 . METHOD_9 ( ) ; "<AssertPlaceHolder>" ; METHOD_14 ( IDENT_10 , IDENT_19 ) ; } METHOD_15 ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 , org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 ) { int IDENT_20 = IDENT_21 . METHOD_16 ( ) ; if ( IDENT_20 != ( IDENT_22 . METHOD_16 ( ) ) ) { System . out . println ( ( STRING_1 + ( IDENT_21 . METHOD_17 ( ) ) ) ) ; return false ; } for ( int i = 0 ; i < IDENT_20 ; i ++ ) { java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_23 > IDENT_24 = IDENT_21 . METHOD_18 ( i ) ; java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_23 > IDENT_25 = IDENT_22 . METHOD_18 ( i ) ; if ( ( IDENT_24 . size ( ) ) != ( IDENT_25 . size ( ) ) ) { System . out . println ( ( STRING_2 + ( IDENT_21 . METHOD_17 ( ) ) ) ) ; return false ; } METHOD_19 ( IDENT_24 , IDENT_25 ) ; METHOD_20 ( IDENT_21 , IDENT_22 , i ) ; for ( int j = 0 ; j < ( IDENT_24 . size ( ) ) ; j ++ ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_23 IDENT_26 = IDENT_24 . get ( j ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_23 IDENT_27 = IDENT_25 . get ( j ) ; org . junit . Assert . assertEquals ( IDENT_26 . getId ( ) , IDENT_27 . getId ( ) ) ; METHOD_21 ( IDENT_26 , IDENT_27 ) ; java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_28 > IDENT_29 = IDENT_26 . METHOD_22 ( ) ; java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_28 > IDENT_30 = IDENT_27 . METHOD_22 ( ) ; if ( ( IDENT_29 . size ( ) ) != ( IDENT_30 . size ( ) ) ) { System . out . println ( ( STRING_3 + ( IDENT_21 . METHOD_17 ( ) ) ) ) ; System . out . println ( ( ( ( ( ( IDENT_26 . getId ( ) ) + STRING_4 2 ) + ( IDENT_29 . size ( ) ) ) + " " ) + ( IDENT_30 . size ( ) ) ) ) ; return false ; } for ( int k = 0 ; k < ( IDENT_29 . size ( ) ) ; k ++ ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_28 IDENT_31 = IDENT_29 . get ( k ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_28 IDENT_32 = IDENT_30 . get ( k ) ; if ( ! ( IDENT_31 . getType ( ) . equals ( IDENT_32 . getType ( ) ) ) ) { System . out . println ( ( STRING_4 1 + ( IDENT_21 . METHOD_17 ( ) ) ) ) ; System . out . println ( ( ( ( IDENT_31 . METHOD_23 ( ) ) + STRING_5 ) + ( IDENT_31 . getType ( ) ) ) ) ; System . out . println ( ( ( ( IDENT_32 . METHOD_23 ( ) ) + STRING_5 ) + ( IDENT_32 . getType ( ) ) ) ) ; } if ( ( ( IDENT_31 . METHOD_24 ( ) . METHOD_25 ( ) . length ( ) ) == 1 ) && ( ( IDENT_32 . METHOD_24 ( ) . METHOD_25 ( ) . length ( ) ) == 1 ) ) { if ( ! ( IDENT_31 . METHOD_24 ( ) . METHOD_25 ( ) . equals ( IDENT_32 . METHOD_24 ( ) . METHOD_25 ( ) ) ) ) { System . out . println ( IDENT_31 . METHOD_23 ( ) ) ; } org . junit . Assert . assertEquals ( IDENT_31 . METHOD_24 ( ) . METHOD_25 ( ) , IDENT_32 . METHOD_24 ( ) . METHOD_25 ( ) ) ; } org . junit . Assert . assertEquals ( IDENT_31 . getType ( ) , IDENT_32 . getType ( ) ) ; org . junit . Assert . assertEquals ( IDENT_31 . METHOD_23 ( ) , IDENT_32 . METHOD_23 ( ) ) ; org . junit . Assert . assertEquals ( IDENT_31 . METHOD_26 ( ) . METHOD_27 ( ) , IDENT_32 . METHOD_26 ( ) . METHOD_27 ( ) ) ; org . junit . Assert . assertEquals ( IDENT_31 . METHOD_26 ( ) . METHOD_28 ( ) , IDENT_32 . METHOD_26 ( ) . METHOD_28 ( ) ) ; org . junit . Assert . assertEquals ( IDENT_31 . METHOD_26 ( ) . METHOD_29 ( ) , IDENT_32 . METHOD_26 ( ) . METHOD_29 ( ) ) ; if ( ( IDENT_32 . METHOD_30 ( ) . size ( ) ) != ( IDENT_31 . METHOD_30 ( ) . size ( ) ) ) { System . out . println ( ( ( ( ( ( STRING_6 + ( IDENT_21 . METHOD_17 ( ) ) ) + " " ) + ( IDENT_31 . METHOD_23 ( ) ) ) + " " ) + ( IDENT_31 . METHOD_26 ( ) . METHOD_27 ( ) ) ) ) ; System . out . println ( IDENT_31 . METHOD_30 ( ) . size ( ) ) ; System . out . println ( IDENT_32 . METHOD_30 ( ) . size ( ) ) ; } java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_33 > IDENT_34 = new java . util . ArrayList ( IDENT_31 . METHOD_31 ( ) ) ; java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_33 > IDENT_35 = new java . util . ArrayList ( IDENT_32 . METHOD_31 ( ) ) ; for ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_28 IDENT_36 : IDENT_31 . METHOD_30 ( ) ) { for ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_33 IDENT_37 : IDENT_36 . METHOD_31 ( ) ) { IDENT_34 . add ( IDENT_37 ) ; } } for ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_28 IDENT_38 : IDENT_32 . METHOD_30 ( ) ) { for ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_33 IDENT_39 : IDENT_38 . METHOD_31 ( ) ) { IDENT_35 . add ( IDENT_39 ) ; } } if ( ( IDENT_34 . size ( ) ) != ( IDENT_35 . size ( ) ) ) { System . out . println ( ( STRING_7 + ( IDENT_21 . METHOD_17 ( ) ) ) ) ; System . out . println ( IDENT_31 . METHOD_26 ( ) ) ; System . out . println ( ( ( ( IDENT_31 . METHOD_23 ( ) ) + STRING_8 ) + ( IDENT_32 . METHOD_23 ( ) ) ) ) ; System . out . println ( ( ( ( IDENT_34 . size ( ) ) + STRING_8 ) + ( IDENT_35 . size ( ) ) ) ) ; return false ; } METHOD_32 ( IDENT_34 , IDENT_35 ) ; for ( int l = 0 ; l < ( IDENT_34 . size ( ) ) ; l ++ ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_33 IDENT_40 = IDENT_34 . get ( l ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_33 IDENT_41 = IDENT_35 . get ( l ) ; org . junit . Assert . assertEquals ( IDENT_40 . METHOD_33 ( ) . METHOD_23 ( ) , IDENT_41 . METHOD_33 ( ) . METHOD_23 ( ) ) ; org . junit . Assert . assertEquals ( IDENT_40 . METHOD_34 ( ) , IDENT_41 . METHOD_34 ( ) ) ; org . junit . Assert . assertArrayEquals ( IDENT_40 . METHOD_35 ( ) , IDENT_41 . METHOD_35 ( ) , FLOAT_0 ) ; org . junit . Assert . assertEquals ( IDENT_40 . METHOD_36 ( ) , IDENT_41 . METHOD_36 ( ) , FLOAT_1 ) ; org . junit . Assert . assertEquals ( IDENT_40 . METHOD_37 ( ) , IDENT_41 . METHOD_37 ( ) , FLOAT_1 ) ; org . junit . Assert . assertEquals ( IDENT_40 . METHOD_38 ( ) , IDENT_41 . METHOD_38 ( ) ) ; org . junit . Assert . assertEquals ( IDENT_40 . getName ( ) , IDENT_41 . getName ( ) ) ; org . junit . Assert . assertEquals ( IDENT_40 . METHOD_39 ( ) , IDENT_41 . METHOD_39 ( ) ) ; if ( i == 0 ) { if ( ( IDENT_40 . METHOD_40 ( ) ) == null ) { if ( ( IDENT_41 . METHOD_40 ( ) ) != null ) { System . out . println ( STRING_4 ) ; return false ; } } else if ( ( IDENT_41 . METHOD_40 ( ) ) == null ) { System . out . println ( STRING_4 ) ; return false ; } else if ( ( IDENT_40 . METHOD_40 ( ) . size ( ) ) != ( IDENT_41 . METHOD_40 ( ) . size ( ) ) ) { System . out . println ( ( STRING_9 + ( IDENT_21 . METHOD_17 ( ) ) ) ) ; System . out . println ( ( ( ( IDENT_40 . METHOD_40 ( ) . size ( ) ) + STRING_4 0 ) + ( IDENT_41 . METHOD_40 ( ) . size ( ) ) ) ) ; System . out . println ( IDENT_40 ) ; System . out . println ( IDENT_41 ) ; for ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_42 IDENT_43 : IDENT_40 . METHOD_40 ( ) ) { System . out . println ( IDENT_43 ) ; } for ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_42 IDENT_43 : IDENT_41 . METHOD_40 ( ) ) { System . out . println ( IDENT_43 ) ; } return false ; } } } } } } return true ; }
org . junit . Assert . assertTrue ( METHOD_15 ( IDENT_10 , IDENT_19 ) ) 