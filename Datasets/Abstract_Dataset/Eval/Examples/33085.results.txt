METHOD_0 ( ) { java . lang . String json = STRING_0 ; java . lang . String [ ] [ ] tests = new java . lang . String [ ] [ ] { new java . lang . String [ ] { STRING_1 , "" } , new java . lang . String [ ] { STRING_2 , STRING_3 } , new java . lang . String [ ] { STRING_4 , STRING_5 } } ; for ( java . lang . String [ ] test : tests ) { IDENT_0 . IDENT_1 template = IDENT_0 . IDENT_1 . parse ( test [ 0 ] ) ; java . lang . String IDENT_2 = java . lang . String . valueOf ( template . render ( json ) ) ; "<AssertPlaceHolder>" ; } } render ( java . util . Map ) { if ( this . IDENT_3 . METHOD_1 ( ) ) { return render ( IDENT_4 , IDENT_0 . IDENT_5 . METHOD_2 ( ) , true ) ; } else { if ( ( this . IDENT_6 ) > ( this . IDENT_3 . IDENT_7 ) ) { throw new java . lang . RuntimeException ( ( ( STRING_6 + ( this . IDENT_3 . IDENT_7 ) ) + STRING_7 ) ) ; } return METHOD_3 ( IDENT_4 ) ; } }
org . junit . Assert . assertThat ( IDENT_2 , org . hamcrest . CoreMatchers . is ( test [ 1 ] ) ) 