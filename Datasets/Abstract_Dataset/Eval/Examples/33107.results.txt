METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . controller . IDENT_2 . IDENT_3 payload = new com . IDENT_0 . IDENT_1 . controller . IDENT_2 . METHOD_1 ( ) ; payload . setName ( STRING_0 ) ; com . IDENT_0 . IDENT_1 . controller . IDENT_4 IDENT_5 = new com . IDENT_0 . IDENT_1 . controller . METHOD_2 ( ) ; IDENT_5 . METHOD_3 ( ) ; IDENT_5 . setName ( STRING_1 ) ; IDENT_5 . METHOD_4 ( payload ) ; org . apache . IDENT_1 . control . IDENT_6 IDENT_7 = METHOD_5 ( 5 ) ; IDENT_7 . METHOD_4 ( IDENT_5 ) ; org . apache . IDENT_1 . IDENT_8 . IDENT_9 IDENT_10 = new org . apache . IDENT_1 . IDENT_8 . METHOD_6 ( new org . apache . IDENT_11 . collections . METHOD_7 ( IDENT_7 ) , IDENT_5 , IDENT_5 . IDENT_12 ) ; IDENT_10 . METHOD_8 ( STRING_2 ) ; IDENT_10 . METHOD_9 ( new com . IDENT_0 . IDENT_1 . controller . METHOD_10 ( ) ) ; org . apache . IDENT_1 . IDENT_8 . IDENT_13 . METHOD_11 ( ) . METHOD_12 ( IDENT_10 ) ; METHOD_13 ( IDENT_5 , IDENT_10 ) ; METHOD_13 ( payload , IDENT_10 ) ; IDENT_5 . METHOD_14 ( true ) ; IDENT_7 . METHOD_14 ( true ) ; payload . METHOD_14 ( true ) ; IDENT_10 . run ( ) ; "<AssertPlaceHolder>" ; } run ( ) { try { java . io . IDENT_14 IDENT_15 = new org . apache . commons . io . output . METHOD_15 ( ) ; java . io . InputStream is = IDENT_16 . METHOD_16 ( ) ; com . IDENT_0 . IDENT_1 . IDENT_17 . IDENT_18 . IDENT_19 . log . debug ( ( STRING_3 + ( is . METHOD_17 ( ) ) ) ) ; org . apache . commons . io . IDENT_20 . METHOD_18 ( is , IDENT_15 ) ; com . IDENT_0 . IDENT_1 . IDENT_17 . IDENT_18 . IDENT_19 . log . debug ( ( STRING_4 + ( is . METHOD_17 ( ) ) ) ) ; } catch ( java . lang . Exception e ) { com . IDENT_0 . IDENT_1 . IDENT_17 . IDENT_18 . IDENT_19 . log . error ( STRING_5 , e ) ; } }
org . junit . Assert . assertEquals ( 5 , com . IDENT_0 . IDENT_1 . controller . IDENT_2 . METHOD_1 . count . get ( ) ) 