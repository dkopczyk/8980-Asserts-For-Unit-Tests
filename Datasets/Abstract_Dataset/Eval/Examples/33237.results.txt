METHOD_0 ( ) { when ( request . METHOD_1 ( anyString ( ) ) ) . thenReturn ( ( - 1L ) ) ; when ( IDENT_0 . METHOD_2 ( de . IDENT_1 . IDENT_2 . web . IDENT_3 . IDENT_4 . IDENT_5 , de . IDENT_1 . IDENT_2 . web . IDENT_3 . IDENT_4 . IDENT_6 , de . IDENT_1 . IDENT_2 . web . IDENT_3 . IDENT_4 . IDENT_7 , STRING_0 ) ) . METHOD_3 ( new de . IDENT_1 . IDENT_2 . page . METHOD_4 ( de . IDENT_1 . IDENT_2 . web . IDENT_3 . IDENT_4 . IDENT_5 , de . IDENT_1 . IDENT_2 . web . IDENT_3 . IDENT_4 . IDENT_6 , ( ( de . IDENT_1 . IDENT_2 . web . IDENT_3 . IDENT_4 . IDENT_7 ) + STRING_1 ) ) ) ; org . springframework . http . IDENT_8 < byte [ ] > result = IDENT_9 . METHOD_5 ( de . IDENT_1 . IDENT_2 . web . IDENT_3 . IDENT_4 . IDENT_5 , de . IDENT_1 . IDENT_2 . web . IDENT_3 . IDENT_4 . IDENT_6 , de . IDENT_1 . IDENT_2 . web . IDENT_3 . IDENT_4 . IDENT_10 , STRING_0 , false , request ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . String , java . lang . String , java . lang . String , java . lang . String , boolean , javax . servlet . http . IDENT_11 ) { try { IDENT_12 = de . IDENT_1 . IDENT_2 . util . IDENT_13 . METHOD_6 ( IDENT_12 ) ; de . IDENT_1 . IDENT_2 . page . IDENT_14 metadata = IDENT_0 . METHOD_2 ( IDENT_15 , IDENT_16 , IDENT_12 , name ) ; org . springframework . http . IDENT_17 headers = new org . springframework . http . METHOD_7 ( ) ; long IDENT_18 = metadata . METHOD_8 ( ) . getTime ( ) ; long IDENT_19 = de . IDENT_1 . IDENT_2 . IDENT_20 . IDENT_21 . METHOD_9 ( request . METHOD_10 ( ) ) ; long IDENT_22 = java . lang . Math . max ( IDENT_18 , IDENT_19 ) ; if ( ! IDENT_23 ) { long IDENT_24 = de . IDENT_1 . IDENT_2 . page . IDENT_25 . METHOD_11 ( IDENT_15 ) ; if ( IDENT_24 >= 0 ) { IDENT_22 = java . lang . Math . max ( IDENT_22 , IDENT_24 ) ; } long IDENT_26 = request . METHOD_1 ( STRING_2 ) ; if ( ( IDENT_26 >= 0 ) && ( IDENT_22 <= IDENT_26 ) ) { return new org . springframework . http . IDENT_8 < byte [ ] > ( headers , org . springframework . http . IDENT_27 . IDENT_28 ) ; } } headers . METHOD_12 ( IDENT_22 ) ; headers . METHOD_13 ( 0 ) ; headers . METHOD_14 ( STRING_3 ) ; if ( IDENT_23 ) { headers . set ( STRING_4 , ( ( STRING_5 + ( name . replace ( STRING_6 , STRING_7 ) ) ) + STRING_8 ) ) ; } de . IDENT_1 . IDENT_2 . page . IDENT_29 IDENT_3 = IDENT_0 . METHOD_5 ( IDENT_15 , IDENT_16 , IDENT_12 , name ) ; headers . METHOD_15 ( org . springframework . http . IDENT_30 . METHOD_16 ( IDENT_3 . METHOD_17 ( ) ) ) ; return new org . springframework . http . IDENT_8 < byte [ ] > ( IDENT_3 . METHOD_18 ( ) . METHOD_18 ( ) , headers , org . springframework . http . IDENT_27 . IDENT_31 ) ; } catch ( de . IDENT_1 . IDENT_2 . page . METHOD_4 e ) { return new org . springframework . http . IDENT_8 < byte [ ] > ( org . springframework . http . IDENT_27 . IDENT_32 ) ; } }
org . junit . Assert . assertEquals ( IDENT_27 . IDENT_32 , result . getStatusCode ( ) ) 