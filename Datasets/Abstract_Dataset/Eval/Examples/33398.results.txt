METHOD_0 ( ) { for ( java . lang . String s : STRING_0 . split ( STRING_1 ) ) { double d = java . lang . Double . METHOD_1 ( s ) ; java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; com . IDENT_0 . IDENT_1 . converter . IDENT_2 . METHOD_2 ( sb , d , 6 ) ; "<AssertPlaceHolder>" ; } } toString ( ) { return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( STRING_2 + STRING_3 ) + ( IDENT_3 ) ) + STRING_4 ) + ( IDENT_4 ) ) + STRING_5 ) + STRING_6 ) + ( IDENT_5 ) ) + STRING_7 ) + ( IDENT_6 ) ) + STRING_8 ) + ( IDENT_7 ) ) + STRING_9 ) + ( IDENT_8 ) ) + STRING_10 ) + ( IDENT_9 ) ) + STRING_5 ) + STRING_11 ) + ( ex ) ) + STRING_5 ) + STRING_12 ; }
org . junit . Assert . assertEquals ( s , sb . toString ( ) ) 