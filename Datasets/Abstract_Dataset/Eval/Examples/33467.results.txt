METHOD_0 ( ) { IDENT_0 . expect ( net . IDENT_1 . IDENT_2 . junit . IllegalArgumentException . class ) ; IDENT_0 . METHOD_1 ( STRING_0 ) ; final java . lang . IDENT_3 error = METHOD_2 ( STRING_1 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { final org . junit . runners . model . IDENT_4 statement = IDENT_0 . apply ( new org . junit . runners . model . METHOD_3 ( ) { @ net . IDENT_1 . IDENT_2 . junit . Override public void evaluate ( ) throws java . lang . Throwable { throw new java . lang . IllegalArgumentException ( IDENT_5 ) ; } } , null ) ; try { statement . evaluate ( ) ; } catch ( final java . lang . Throwable IDENT_6 ) { if ( IDENT_6 instanceof java . lang . IDENT_3 ) { return ( ( java . lang . IDENT_3 ) ( IDENT_6 ) ) ; } } return null ; }
org . junit . Assert . assertNotNull ( error ) 