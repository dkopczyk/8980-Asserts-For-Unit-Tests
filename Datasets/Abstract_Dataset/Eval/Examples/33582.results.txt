METHOD_0 ( ) { final net . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 handler = METHOD_1 ( ) ; "<AssertPlaceHolder>" ; verify ( System . out ) . println ( ( STRING_0 + ( net . IDENT_0 . IDENT_1 . Constants . IDENT_4 ) ) ) ; verify ( System . out ) . println ( STRING_1 ) ; verify ( System . out ) . println ( STRING_2 ) ; METHOD_2 ( System . out ) ; } METHOD_3 ( ) { System . out . println ( ( ( ( net . IDENT_0 . IDENT_1 . Constants . IDENT_5 ) + STRING_3 ) + ( net . IDENT_0 . IDENT_1 . Constants . IDENT_4 ) ) ) ; System . out . println ( ( ( ( ( ( STRING_4 + ( net . IDENT_0 . IDENT_1 . Constants . IDENT_6 ) ) + STRING_5 ) + ( net . IDENT_0 . IDENT_1 . Constants . IDENT_7 ) ) + STRING_5 ) + ( net . IDENT_0 . IDENT_1 . Constants . IDENT_8 ) ) ) ; if ( ( IDENT_9 . METHOD_4 ( ) ) == 0 ) { System . out . println ( ( ( STRING_6 + ( IDENT_10 . IDENT_11 ) ) + STRING_7 ) ) ; return true ; } if ( ( IDENT_9 . METHOD_5 ( ) ) > 0 ) { System . out . println ( ( ( ( ( STRING_8 + ( IDENT_9 . METHOD_6 ( ) ) ) + STRING_9 ) + ( IDENT_10 . IDENT_11 ) ) + STRING_7 ) ) ; return false ; } if ( IDENT_9 . METHOD_7 ( IDENT_10 . IDENT_11 ) ) { System . out . println ( STRING_10 ) ; System . out . println ( net . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_10 . METHOD_8 ( ) ) ; return false ; } if ( IDENT_9 . METHOD_7 ( IDENT_10 . IDENT_12 ) ) { return false ; } return true ; }
org . junit . Assert . assertTrue ( handler . METHOD_3 ( ) ) 