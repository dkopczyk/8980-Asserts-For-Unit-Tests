METHOD_0 ( ) { io . IDENT_0 . proxy . IDENT_1 < IDENT_0 . tests . IDENT_2 > IDENT_3 = IDENT_4 . METHOD_1 ( domain , IDENT_0 . tests . IDENT_2 . class ) ; IDENT_0 . tests . IDENT_2 proxy = IDENT_3 . METHOD_2 ( IDENT_5 ) . METHOD_3 ( IDENT_6 ) . build ( ) ; int value = INT_0 ; proxy . METHOD_4 ( value ) ; int actual = proxy . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } build ( ) { return build ( new io . IDENT_0 . proxy . IDENT_7 < T > ( ) { @ io . IDENT_0 . proxy . Override public void METHOD_6 ( T result ) { io . IDENT_0 . proxy . IDENT_8 . logger . trace ( STRING_0 , IDENT_9 , IDENT_10 ) ; } @ io . IDENT_0 . proxy . Override public void METHOD_7 ( io . IDENT_0 . exceptions . IDENT_11 error ) { io . IDENT_0 . proxy . IDENT_8 . logger . error ( STRING_1 , IDENT_9 , IDENT_10 , error . getMessage ( ) ) ; } } ) ; }
org . junit . Assert . assertEquals ( value , actual ) 