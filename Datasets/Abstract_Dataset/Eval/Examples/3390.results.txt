METHOD_0 ( ) { final java . util . List < com . allanbank . mongodb . bson . Document > IDENT_0 = java . util . Collections . singletonList ( com . allanbank . mongodb . bson . builder . IDENT_1 . start ( ) . METHOD_1 ( STRING_0 , STRING_1 ) . build ( ) ) ; final com . allanbank . mongodb . client . message . Query q = new com . allanbank . mongodb . client . message . Query ( STRING_2 , STRING_3 , com . allanbank . mongodb . bson . builder . IDENT_1 . start ( ) . build ( ) , null , 0 , 0 , 0 , false , com . allanbank . mongodb . IDENT_2 . IDENT_3 , false , false , false , false ) ; final com . allanbank . mongodb . client . message . IDENT_4 IDENT_5 = new com . allanbank . mongodb . client . message . METHOD_2 ( 0 , 0 , 0 , IDENT_0 , false , false , false , true ) ; final com . allanbank . mongodb . IDENT_6 < com . allanbank . mongodb . IDENT_7 < com . allanbank . mongodb . bson . Document > > IDENT_8 = METHOD_3 ( com . allanbank . mongodb . IDENT_6 . class ) ; replay ( IDENT_8 ) ; final com . allanbank . mongodb . client . IDENT_9 . IDENT_10 IDENT_9 = new com . allanbank . mongodb . client . IDENT_9 . METHOD_4 ( null , q , false , IDENT_8 ) ; final com . allanbank . mongodb . error . IDENT_11 error = ( ( com . allanbank . mongodb . error . IDENT_11 ) ( IDENT_9 . METHOD_5 ( IDENT_5 , true ) ) ) ; "<AssertPlaceHolder>" ; verify ( IDENT_8 ) ; } METHOD_6 ( ) { return IDENT_12 ; }
org . junit . Assert . assertEquals ( ( - 1 ) , error . METHOD_6 ( ) ) 