METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = IDENT_1 . METHOD_1 ( ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 IDENT_6 = new com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 ( ) ; IDENT_6 . METHOD_3 ( STRING_0 , STRING_1 , STRING_2 , STRING_3 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_8 > IDENT_2 = IDENT_4 . search ( IDENT_6 , ( - 1 ) , ( - 1 ) ) ; "<AssertPlaceHolder>" ; } search ( com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 , int , int ) { com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_8 > IDENT_2 = new com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_8 > ( ) ; java . util . Map < java . lang . String , java . lang . Object > parameters = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; parameters . put ( STRING_4 , com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_9 ) ; parameters . METHOD_4 ( params . METHOD_5 ( ) ) ; if ( IDENT_10 > 0 ) { parameters . put ( STRING_5 , ( "" + IDENT_10 ) ) ; } if ( page > 0 ) { parameters . put ( STRING_6 , ( "" + page ) ) ; } com . IDENT_0 . IDENT_1 . Response response = transport . get ( transport . getPath ( ) , parameters , IDENT_11 , IDENT_12 ) ; if ( response . METHOD_6 ( ) ) { throw new com . IDENT_0 . IDENT_1 . METHOD_7 ( response . METHOD_8 ( ) , response . METHOD_9 ( ) ) ; } org . w3c . dom . Element IDENT_13 = response . METHOD_10 ( ) ; IDENT_2 . METHOD_11 ( IDENT_13 . METHOD_12 ( STRING_6 ) ) ; IDENT_2 . METHOD_13 ( IDENT_13 . METHOD_12 ( STRING_7 ) ) ; IDENT_2 . METHOD_14 ( IDENT_13 . METHOD_12 ( STRING_8 ) ) ; IDENT_2 . METHOD_15 ( IDENT_13 . METHOD_12 ( STRING_9 ) ) ; org . w3c . dom . IDENT_14 IDENT_15 = IDENT_13 . METHOD_16 ( STRING_10 ) ; for ( int i = 0 ; i < ( IDENT_15 . METHOD_17 ( ) ) ; i ++ ) { org . w3c . dom . Element IDENT_16 = ( ( org . w3c . dom . Element ) ( IDENT_15 . item ( i ) ) ) ; IDENT_2 . add ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_17 . METHOD_18 ( IDENT_16 ) ) ; } return IDENT_2 ; }
org . junit . Assert . assertNotNull ( IDENT_2 ) 