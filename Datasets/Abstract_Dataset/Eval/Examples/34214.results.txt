METHOD_0 ( ) { final java . util . List < org . bonitasoft . engine . IDENT_0 . IDENT_1 > IDENT_2 = METHOD_1 ( ) . METHOD_2 ( 5 , 10 , IDENT_3 . IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( int , int , org . bonitasoft . engine . IDENT_0 . IDENT_3 ) { final org . bonitasoft . engine . service . IDENT_5 IDENT_6 = METHOD_3 ( ) ; final org . bonitasoft . engine . IDENT_0 . IDENT_7 IDENT_8 = IDENT_6 . METHOD_4 ( ) ; final org . bonitasoft . engine . IDENT_0 . model . builder . IDENT_9 IDENT_10 = org . bonitasoft . engine . builder . IDENT_11 . get ( org . bonitasoft . engine . IDENT_0 . model . builder . IDENT_9 . class ) ; java . lang . String field = null ; org . bonitasoft . engine . persistence . IDENT_12 order = null ; switch ( IDENT_13 ) { case IDENT_4 : field = IDENT_10 . METHOD_5 ( ) ; order = org . bonitasoft . engine . persistence . IDENT_12 . IDENT_14 ; break ; case IDENT_15 : field = IDENT_10 . METHOD_5 ( ) ; order = org . bonitasoft . engine . persistence . IDENT_12 . IDENT_16 ; break ; case IDENT_17 : field = IDENT_10 . METHOD_6 ( ) ; order = org . bonitasoft . engine . persistence . IDENT_12 . IDENT_14 ; break ; case IDENT_18 : field = IDENT_10 . METHOD_6 ( ) ; order = org . bonitasoft . engine . persistence . IDENT_12 . IDENT_16 ; break ; default : throw new java . lang . IllegalStateException ( ) ; } try { final org . bonitasoft . engine . api . impl . transaction . IDENT_0 . IDENT_19 IDENT_20 = new org . bonitasoft . engine . api . impl . transaction . IDENT_0 . METHOD_7 ( IDENT_8 , IDENT_21 , IDENT_22 , field , order ) ; IDENT_20 . execute ( ) ; return org . bonitasoft . engine . service . IDENT_23 . METHOD_8 ( IDENT_20 . METHOD_9 ( ) ) ; } catch ( final org . bonitasoft . engine . commons . exceptions . IDENT_24 e ) { throw new org . bonitasoft . engine . exception . METHOD_10 ( e ) ; } }
org . junit . Assert . assertTrue ( IDENT_2 . isEmpty ( ) ) 