METHOD_0 ( ) { final com . allanbank . mongodb . bson . builder . IDENT_0 db = com . allanbank . mongodb . bson . builder . IDENT_1 . start ( ) . METHOD_1 ( STRING_0 , 1 ) ; db . METHOD_2 ( STRING_1 ) ; final java . util . List < com . allanbank . mongodb . bson . Document > IDENT_2 = java . util . Collections . singletonList ( db . build ( ) ) ; final com . allanbank . mongodb . client . message . IDENT_3 IDENT_4 = new com . allanbank . mongodb . client . message . METHOD_3 ( 0 , 0 , 0 , IDENT_2 , false , false , false , true ) ; final com . allanbank . mongodb . IDENT_5 < com . allanbank . mongodb . IDENT_6 < com . allanbank . mongodb . bson . Document > > IDENT_7 = METHOD_4 ( com . allanbank . mongodb . IDENT_5 . class ) ; replay ( IDENT_7 ) ; final com . allanbank . mongodb . client . IDENT_8 . IDENT_9 IDENT_8 = new com . allanbank . mongodb . client . IDENT_8 . METHOD_5 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_7 ) ; } convert ( com . allanbank . mongodb . client . message . METHOD_3 ) { final java . util . List < com . allanbank . mongodb . bson . Document > results = IDENT_4 . METHOD_6 ( ) ; if ( ( results . size ( ) ) == 1 ) { return results . get ( 0 ) ; } return null ; }
org . junit . Assert . assertEquals ( java . util . Collections . emptyList ( ) , IDENT_8 . convert ( IDENT_4 ) . toList ( ) ) 