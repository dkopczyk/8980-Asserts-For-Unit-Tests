METHOD_0 ( ) { expression . METHOD_1 ( org . bonitasoft . engine . expression . IDENT_0 . METHOD_2 ( ) ) ; final java . lang . Long IDENT_1 = INT_0 ; final org . bonitasoft . engine . IDENT_2 . IDENT_3 IDENT_4 = new org . bonitasoft . engine . IDENT_2 . METHOD_3 ( ) ; IDENT_4 . METHOD_4 ( IDENT_1 ) ; IDENT_5 . put ( org . bonitasoft . engine . expression . IDENT_6 . METHOD_2 ( ) , IDENT_4 ) ; final java . lang . Long IDENT_7 = ( ( java . lang . Long ) ( strategy . evaluate ( expression , IDENT_5 , java . util . Collections . < java . lang . Integer , java . lang . Object > METHOD_5 ( ) , IDENT_8 . IDENT_9 ) ) ) ; "<AssertPlaceHolder>" ; verify ( IDENT_10 , METHOD_6 ( ) ) . METHOD_7 ( METHOD_8 ( ) ) ; } evaluate ( org . bonitasoft . engine . expression . model . IDENT_11 , java . util . List , java . util . Map , java . util . Map , org . bonitasoft . engine . expression . IDENT_8 ) { if ( logger . METHOD_9 ( this . getClass ( ) , IDENT_12 . IDENT_13 ) ) { logger . log ( this . getClass ( ) , IDENT_12 . IDENT_13 , org . bonitasoft . engine . commons . IDENT_14 . METHOD_10 ( this . getClass ( ) , STRING_0 ) ) ; } final org . bonitasoft . engine . expression . IDENT_15 IDENT_16 = METHOD_11 ( IDENT_17 ) ; java . util . List < java . lang . Object > list = null ; final long IDENT_18 = java . lang . System . currentTimeMillis ( ) ; try { list = IDENT_16 . evaluate ( expressions , IDENT_19 , IDENT_20 , IDENT_21 ) ; } finally { if ( IDENT_22 . METHOD_12 ( IDENT_23 . IDENT_24 ) ) { final long IDENT_25 = java . lang . System . currentTimeMillis ( ) ; IDENT_22 . METHOD_13 ( IDENT_23 . IDENT_24 , ( ( ( ( ( ( ( STRING_1 + expressions ) + STRING_2 ) + STRING_3 ) + IDENT_19 ) + STRING_2 ) + STRING_4 ) + IDENT_16 ) , ( IDENT_25 - IDENT_18 ) ) ; } } if ( ( list == null ) || ( ( list . size ( ) ) != ( expressions . size ( ) ) ) ) { final java . lang . String IDENT_26 = ( ( STRING_5 + ( list == null ? 0 : list . size ( ) ) ) + STRING_6 ) + ( expressions . size ( ) ) ; if ( logger . METHOD_9 ( this . getClass ( ) , IDENT_12 . IDENT_13 ) ) { logger . log ( this . getClass ( ) , IDENT_12 . IDENT_13 , org . bonitasoft . engine . commons . IDENT_14 . METHOD_14 ( this . getClass ( ) , STRING_0 , IDENT_26 ) ) ; } throw new org . bonitasoft . engine . expression . exception . METHOD_15 ( IDENT_26 , null ) ; } if ( METHOD_16 ( ) ) { for ( int i = 0 ; i < ( list . size ( ) ) ; i ++ ) { new org . bonitasoft . engine . expression . impl . METHOD_17 ( ) . METHOD_18 ( expressions . get ( i ) , list . get ( i ) , IDENT_19 ) ; } } if ( logger . METHOD_9 ( this . getClass ( ) , IDENT_12 . IDENT_13 ) ) { logger . log ( this . getClass ( ) , IDENT_12 . IDENT_13 , org . bonitasoft . engine . commons . IDENT_14 . METHOD_19 ( this . getClass ( ) , STRING_0 ) ) ; } return list ; }
org . junit . Assert . assertEquals ( IDENT_1 , IDENT_7 ) 