METHOD_0 ( ) { final long IDENT_0 = INT_0 ; final org . bonitasoft . engine . persistence . IDENT_1 options = mock ( org . bonitasoft . engine . persistence . IDENT_1 . class ) ; when ( persistence . METHOD_1 ( org . bonitasoft . engine . command . model . IDENT_2 . class , options , null ) ) . thenReturn ( IDENT_0 ) ; final long result = IDENT_3 . METHOD_0 ( options ) ; "<AssertPlaceHolder>" ; } METHOD_0 ( org . bonitasoft . engine . persistence . IDENT_1 ) { logger . log ( this . getClass ( ) , IDENT_4 . IDENT_5 , org . bonitasoft . engine . commons . IDENT_6 . METHOD_2 ( this . getClass ( ) , STRING_0 ) ) ; try { final long IDENT_7 = IDENT_8 . METHOD_1 ( org . bonitasoft . engine . command . model . IDENT_2 . class , options , null ) ; logger . log ( this . getClass ( ) , IDENT_4 . IDENT_5 , org . bonitasoft . engine . commons . IDENT_6 . METHOD_3 ( this . getClass ( ) , STRING_0 ) ) ; return IDENT_7 ; } catch ( final org . bonitasoft . engine . persistence . IDENT_9 IDENT_10 ) { logger . log ( this . getClass ( ) , IDENT_4 . IDENT_5 , org . bonitasoft . engine . commons . IDENT_6 . METHOD_4 ( this . getClass ( ) , STRING_0 , IDENT_10 ) ) ; throw new org . bonitasoft . engine . persistence . METHOD_5 ( IDENT_10 ) ; } }
org . junit . Assert . assertEquals ( IDENT_0 , result ) 