METHOD_0 ( ) { final org . bonitasoft . engine . expression . model . IDENT_0 IDENT_1 = METHOD_1 ( STRING_0 , IDENT_0 . IDENT_2 , java . util . Date . class . getName ( ) , null , null ) ; final java . util . Date result = ( ( java . util . Date ) ( strategy . evaluate ( IDENT_1 , null , null , IDENT_3 . IDENT_4 ) ) ) ; "<AssertPlaceHolder>" ; } evaluate ( org . bonitasoft . engine . expression . model . IDENT_0 , java . util . Map , java . util . Map , org . bonitasoft . engine . expression . IDENT_3 ) { final java . lang . String IDENT_5 = expression . METHOD_2 ( ) ; final java . lang . String IDENT_6 = expression . getName ( ) ; try { final IDENT_7 . lang . IDENT_8 binding = new IDENT_7 . lang . METHOD_3 ( context ) ; final IDENT_7 . lang . IDENT_9 script = org . IDENT_10 . IDENT_7 . runtime . IDENT_11 . METHOD_4 ( METHOD_5 ( IDENT_5 , ( ( java . lang . Long ) ( context . get ( org . bonitasoft . engine . expression . impl . IDENT_12 ) ) ) ) , binding ) ; script . METHOD_6 ( binding ) ; return script . run ( ) ; } catch ( final IDENT_7 . lang . IDENT_13 e ) { final java . lang . String property = e . getProperty ( ) ; throw new org . bonitasoft . engine . expression . exception . METHOD_7 ( ( ( ( ( ( ( STRING_1 + IDENT_6 ) + STRING_2 ) + IDENT_5 ) + STRING_3 0 ) + property ) + STRING_4 ) , e , IDENT_6 ) ; } catch ( final IDENT_7 . lang . IDENT_14 e ) { throw new org . bonitasoft . engine . expression . exception . METHOD_7 ( e , IDENT_6 ) ; } catch ( final org . bonitasoft . engine . cache . IDENT_15 e ) { throw new org . bonitasoft . engine . expression . exception . METHOD_7 ( STRING_5 , e , IDENT_6 ) ; } catch ( final org . bonitasoft . engine . IDENT_16 . IDENT_17 e ) { throw new org . bonitasoft . engine . expression . exception . METHOD_7 ( ( STRING_6 + expression ) , e , IDENT_6 ) ; } catch ( final java . lang . Throwable e ) { java . lang . String message = e . getMessage ( ) ; if ( ( message == null ) || ( message . isEmpty ( ) ) ) { message = STRING_7 ; } throw new org . bonitasoft . engine . expression . exception . METHOD_7 ( ( ( ( ( ( ( STRING_8 + ( e . getClass ( ) ) ) + STRING_9 ) + message ) + ( java . lang . System . getProperty ( STRING_10 ) ) ) + STRING_3 ) + expression ) , e , IDENT_6 ) ; } }
org . junit . Assert . assertNotNull ( result ) 