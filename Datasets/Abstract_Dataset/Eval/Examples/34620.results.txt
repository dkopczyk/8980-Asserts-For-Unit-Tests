METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final org . IDENT_1 . IDENT_2 IDENT_3 = org . IDENT_1 . IDENT_2 . METHOD_1 ( STRING_1 , IDENT_0 ) ; final org . IDENT_1 . IDENT_2 IDENT_4 = org . IDENT_1 . IDENT_2 . METHOD_1 ( STRING_2 , IDENT_0 ) ; when ( IDENT_5 . METHOD_2 ( org . IDENT_1 . impl . matchers . IDENT_6 . METHOD_3 ( IDENT_0 ) ) ) . thenReturn ( METHOD_4 ( IDENT_3 , IDENT_4 ) ) ; final java . util . List < java . lang . String > IDENT_7 = IDENT_8 . METHOD_5 ( IDENT_0 ) ; "<AssertPlaceHolder>" . METHOD_6 ( IDENT_3 . getName ( ) , IDENT_4 . getName ( ) ) ; } METHOD_5 ( java . lang . String ) { try { METHOD_7 ( ) ; final java . util . Set < org . IDENT_1 . IDENT_2 > IDENT_9 = IDENT_5 . METHOD_2 ( org . IDENT_1 . impl . matchers . IDENT_6 . METHOD_3 ( IDENT_0 ) ) ; final java . util . List < java . lang . String > IDENT_10 = new java . util . ArrayList < java . lang . String > ( IDENT_9 . size ( ) ) ; for ( final org . IDENT_1 . IDENT_2 METHOD_1 : IDENT_9 ) { IDENT_10 . add ( METHOD_1 . getName ( ) ) ; } return IDENT_10 ; } catch ( final org . IDENT_1 . IDENT_11 e ) { throw new org . bonitasoft . engine . IDENT_5 . exception . METHOD_8 ( e ) ; } }
org . junit . Assert . assertThat ( IDENT_7 ) 