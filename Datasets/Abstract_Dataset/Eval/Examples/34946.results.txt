METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; com . github . IDENT_1 . IDENT_2 . util . IDENT_3 . IDENT_4 position = IDENT_3 . IDENT_4 . IDENT_5 ; java . lang . String expResult = STRING_1 ; java . lang . String result = com . github . IDENT_1 . IDENT_2 . util . IDENT_3 . METHOD_1 ( IDENT_0 , position ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , com . github . IDENT_1 . IDENT_2 . util . IDENT_6 ) { java . lang . StringBuilder builder = new java . lang . StringBuilder ( ) ; if ( position == null ) { builder . append ( com . github . IDENT_1 . IDENT_2 . util . IDENT_3 . IDENT_7 ) ; } else { switch ( position ) { case IDENT_8 : builder . append ( com . github . IDENT_1 . IDENT_2 . util . IDENT_3 . IDENT_9 ) ; break ; case IDENT_5 : builder . append ( com . github . IDENT_1 . IDENT_2 . util . IDENT_3 . IDENT_10 ) ; break ; default : builder . append ( com . github . IDENT_1 . IDENT_2 . util . IDENT_3 . IDENT_7 ) ; break ; } } if ( ! ( ( IDENT_0 == null ) || ( com . github . IDENT_1 . IDENT_2 . util . IDENT_11 . empty ( IDENT_0 ) ) ) ) { builder . append ( " " ) ; builder . append ( IDENT_0 ) ; } return builder . toString ( ) ; }
org . junit . Assert . assertEquals ( expResult , result ) 