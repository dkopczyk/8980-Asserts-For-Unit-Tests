METHOD_0 ( ) { java . lang . String input = STRING_0 ; org . junit . Assert . assertEquals ( ( ( ( com . github . IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_3 ) + input ) + STRING_1 ) , input , filter ( input ) ) ; input = STRING_2 ; org . junit . Assert . assertEquals ( ( ( ( com . github . IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_3 ) + input ) + STRING_1 ) , input , filter ( input ) ) ; input = STRING_3 ; org . junit . Assert . assertEquals ( ( ( ( com . github . IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_3 ) + input ) + STRING_1 ) , input , filter ( input ) ) ; input = STRING_4 ; org . junit . Assert . assertEquals ( ( ( ( com . github . IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_3 ) + input ) + STRING_1 ) , input , filter ( input ) ) ; input = STRING_5 ; java . lang . String expected = STRING_6 ; "<AssertPlaceHolder>" ; } filter ( java . lang . String ) { java . io . StringWriter IDENT_4 = new java . io . StringWriter ( ) ; com . github . IDENT_0 . IDENT_1 . util . IDENT_5 filter = new com . github . IDENT_0 . IDENT_1 . util . METHOD_1 ( IDENT_4 ) ; filter . METHOD_2 ( input ) ; filter . METHOD_3 ( ) ; filter . close ( ) ; java . lang . String output = IDENT_4 . METHOD_4 ( ) . toString ( ) ; com . github . IDENT_0 . IDENT_1 . util . IDENT_2 . LOG . debug ( ( ( STRING_7 + input ) + STRING_8 ) ) ; com . github . IDENT_0 . IDENT_1 . util . IDENT_2 . LOG . debug ( ( ( STRING_9 + output ) + STRING_8 ) ) ; return output ; }
org . junit . Assert . assertEquals ( ( ( ( com . github . IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_3 ) + input ) + STRING_1 ) , expected , filter ( input ) ) 