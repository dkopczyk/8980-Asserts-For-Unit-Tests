METHOD_0 ( ) { System . out . println ( STRING_0 ) ; final java . lang . String IDENT_0 = "foo" ; final int [ ] values = new int [ ] { 1 , 2 } ; final java . util . concurrent . IDENT_1 IDENT_2 = new java . util . concurrent . METHOD_1 ( 2 ) ; class IDENT_3 implements java . lang . IDENT_4 { MOD_0 final int IDENT_5 ; public METHOD_2 ( int IDENT_5 ) { this . IDENT_5 = IDENT_5 ; } public void run ( ) { org . geotools . filter . function . IDENT_6 . METHOD_3 ( IDENT_0 , values [ IDENT_5 ] ) ; IDENT_2 . METHOD_4 ( ) ; try { IDENT_2 . METHOD_5 ( ) ; } catch ( java . lang . IDENT_7 ex ) { throw new java . lang . IllegalStateException ( ex ) ; } java . lang . Object result = IDENT_8 . function ( STRING_1 , IDENT_8 . METHOD_6 ( IDENT_0 ) ) . evaluate ( null ) ; int value = ( ( java . lang . IDENT_9 ) ( result ) ) . METHOD_7 ( ) ; "<AssertPlaceHolder>" ; } } java . util . concurrent . IDENT_10 IDENT_11 = executor . METHOD_8 ( new METHOD_2 ( 0 ) ) ; java . util . concurrent . IDENT_10 IDENT_12 = executor . METHOD_8 ( new METHOD_2 ( 1 ) ) ; IDENT_11 . get ( ) ; IDENT_12 . get ( ) ; } METHOD_7 ( ) { return ( ( java . lang . IDENT_9 ) ( value ) ) . METHOD_7 ( ) ; }
org . junit . Assert . assertEquals ( values [ IDENT_5 ] , value ) 