METHOD_0 ( ) { final java . lang . String IDENT_0 = IDENT_1 . METHOD_1 ( ) ; final int IDENT_2 = 2 ; final org . geotools . data . simple . IDENT_3 IDENT_4 ; IDENT_4 = IDENT_1 . METHOD_2 ( com . IDENT_5 . jts . geom . IDENT_6 . class , IDENT_2 ) ; final org . geotools . data . IDENT_7 IDENT_8 = IDENT_1 . METHOD_3 ( ) ; final org . geotools . data . simple . IDENT_9 IDENT_10 ; IDENT_10 = ( ( org . geotools . data . simple . IDENT_9 ) ( IDENT_8 . METHOD_4 ( IDENT_0 ) ) ) ; final org . geotools . data . IDENT_11 transaction = new org . geotools . data . METHOD_5 ( STRING_0 ) ; IDENT_10 . METHOD_6 ( transaction ) ; try { final java . util . List < org . opengis . filter . IDENT_12 . IDENT_13 > IDENT_14 = IDENT_10 . METHOD_7 ( IDENT_4 ) ; final org . opengis . filter . IDENT_15 IDENT_16 = org . geotools . factory . IDENT_17 . METHOD_8 ( null ) ; final java . util . Set < org . opengis . filter . IDENT_12 . IDENT_13 > IDENT_18 = new java . util . HashSet < org . opengis . filter . IDENT_12 . IDENT_13 > ( ) ; for ( org . opengis . filter . IDENT_12 . IDENT_13 IDENT_19 : IDENT_14 ) { IDENT_18 . add ( IDENT_19 ) ; } final org . opengis . filter . IDENT_20 IDENT_21 = IDENT_16 . id ( IDENT_18 ) ; org . geotools . data . simple . IDENT_3 IDENT_22 ; IDENT_22 = IDENT_10 . METHOD_9 ( IDENT_21 ) ; "<AssertPlaceHolder>" ; transaction . commit ( ) ; } catch ( java . lang . Exception e ) { transaction . METHOD_10 ( ) ; throw e ; } finally { transaction . close ( ) ; } } size ( ) { return IDENT_23 . length ; }
org . junit . Assert . assertEquals ( 2 , IDENT_22 . size ( ) ) 