METHOD_0 ( ) { java . util . List < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 < java . lang . String > > group = com . google . common . collect . ImmutableList . of ( ) ; java . lang . String IDENT_4 = STRING_0 ; com . google . common . base . Optional < java . lang . Double > IDENT_5 = IDENT_6 . METHOD_1 ( group , IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . IDENT_7 , T ) { METHOD_2 ( IDENT_8 , STRING_1 ) ; METHOD_2 ( target , STRING_2 ) ; com . google . common . base . Optional < java . lang . Double > IDENT_9 = METHOD_3 ( ) ; for ( IDENT_10 IDENT_11 : IDENT_8 ) { com . google . common . base . Optional < java . lang . Double > IDENT_12 = METHOD_4 ( IDENT_11 . METHOD_5 ( ) , target ) ; if ( ( IDENT_12 . METHOD_6 ( ) ) && ( ( ! ( IDENT_9 . METHOD_6 ( ) ) ) || ( ( IDENT_12 . get ( ) ) > ( IDENT_9 . get ( ) ) ) ) ) { IDENT_9 = IDENT_12 ; } } return IDENT_9 ; }
org . junit . Assert . assertThat ( IDENT_5 , org . hamcrest . Matchers . equalTo ( com . google . common . base . Optional . < java . lang . Double > METHOD_3 ( ) ) ) 