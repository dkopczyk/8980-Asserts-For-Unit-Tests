METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 config = new com . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; config . METHOD_2 ( 1 ) ; com . IDENT_0 . IDENT_1 . IDENT_3 factory = new com . IDENT_0 . IDENT_1 . METHOD_3 ( config ) ; com . IDENT_0 . IDENT_1 . IDENT_4 service = factory . METHOD_4 ( ) ; java . net . URI uri = java . net . URI . create ( STRING_0 ) ; boolean IDENT_5 = service . METHOD_5 ( STRING_1 , uri ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . String , java . net . URI ) { METHOD_6 ( IDENT_6 , STRING_2 ) ; METHOD_6 ( IDENT_7 , STRING_3 ) ; com . IDENT_0 . IDENT_1 . IDENT_8 . log . debug ( STRING_4 , IDENT_7 ) ; final java . net . URI IDENT_9 = IDENT_10 . METHOD_7 ( IDENT_7 ) ; com . IDENT_0 . IDENT_1 . IDENT_8 . log . debug ( STRING_5 , IDENT_9 ) ; final com . IDENT_0 . IDENT_1 . domain . IDENT_11 IDENT_1 ; try { IDENT_1 = loader . load ( IDENT_9 ) ; } catch ( java . lang . Exception e ) { com . IDENT_0 . IDENT_1 . IDENT_8 . log . debug ( STRING_6 , e . getMessage ( ) ) ; return METHOD_8 ( IDENT_7 ) ; } if ( IDENT_1 . METHOD_9 ( ) . isEmpty ( ) ) { com . IDENT_0 . IDENT_1 . IDENT_8 . log . debug ( STRING_7 , IDENT_7 ) ; return METHOD_8 ( IDENT_7 ) ; } final com . google . common . base . Optional < com . IDENT_0 . IDENT_1 . domain . IDENT_12 > group = IDENT_13 . METHOD_10 ( IDENT_1 . METHOD_9 ( ) , IDENT_6 ) ; if ( group . METHOD_11 ( ) ) { if ( com . IDENT_0 . IDENT_1 . IDENT_8 . log . METHOD_12 ( ) ) { com . IDENT_0 . IDENT_1 . IDENT_8 . log . debug ( STRING_8 , IDENT_13 . METHOD_13 ( group . get ( ) , IDENT_6 ) . get ( ) . getValue ( ) ) ; } } else { com . IDENT_0 . IDENT_1 . IDENT_8 . log . debug ( STRING_9 ) ; return METHOD_8 ( IDENT_7 ) ; } final com . google . common . base . Optional < com . IDENT_0 . IDENT_1 . domain . IDENT_14 > IDENT_15 = IDENT_13 . METHOD_13 ( group . get ( ) . METHOD_14 ( com . IDENT_0 . IDENT_1 . domain . IDENT_14 . class ) , IDENT_10 . METHOD_15 ( IDENT_7 ) ) ; if ( ! ( IDENT_15 . METHOD_11 ( ) ) ) { com . IDENT_0 . IDENT_1 . IDENT_8 . log . debug ( STRING_10 ) ; return METHOD_8 ( IDENT_7 ) ; } else { final com . IDENT_0 . IDENT_1 . domain . IDENT_14 IDENT_16 = IDENT_15 . get ( ) ; com . IDENT_0 . IDENT_1 . IDENT_8 . log . debug ( STRING_11 , IDENT_16 . METHOD_16 ( ) , IDENT_16 . getValue ( ) ) ; return IDENT_16 . METHOD_5 ( ) ? METHOD_8 ( IDENT_7 ) : METHOD_17 ( IDENT_7 ) ; } }
org . junit . Assert . assertThat ( IDENT_5 , org . hamcrest . Matchers . is ( true ) ) 