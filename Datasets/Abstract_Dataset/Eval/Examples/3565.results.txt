METHOD_0 ( ) { long IDENT_0 = ( ( alluxio . client . block . stream . IDENT_1 . IDENT_2 ) * INT_0 ) + ( ( alluxio . client . block . stream . IDENT_1 . IDENT_2 ) / 3 ) ; long IDENT_3 = 100 ; long IDENT_4 = IDENT_0 / 3 ; try ( alluxio . client . block . stream . IDENT_5 reader = create ( 0 , Long . MAX_VALUE ) ) { long IDENT_6 = METHOD_1 ( IDENT_7 , IDENT_0 , IDENT_3 , ( IDENT_4 - 1 ) ) ; long IDENT_8 = METHOD_2 ( reader , IDENT_3 , IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( IDENT_7 , 0 , Long . MAX_VALUE , true , alluxio . client . block . stream . IDENT_1 . IDENT_2 ) ; } METHOD_2 ( alluxio . client . block . stream . IDENT_5 , long , long ) { long pos = 0 ; long IDENT_6 = 0 ; while ( true ) { alluxio . network . protocol . IDENT_9 . IDENT_10 IDENT_11 = reader . METHOD_4 ( ) ; if ( IDENT_11 == null ) { break ; } try { org . junit . Assert . assertTrue ( ( IDENT_11 instanceof alluxio . network . protocol . IDENT_9 . IDENT_12 ) ) ; io . netty . buffer . IDENT_13 buf = ( ( io . netty . buffer . IDENT_13 ) ( IDENT_11 . METHOD_5 ( ) ) ) ; byte [ ] bytes = new byte [ buf . METHOD_6 ( ) ] ; buf . METHOD_7 ( bytes ) ; for ( int i = 0 ; i < ( bytes . length ) ; i ++ ) { if ( pos >= IDENT_3 ) { IDENT_6 += alluxio . util . io . IDENT_14 . METHOD_8 ( bytes [ i ] ) ; } pos ++ ; if ( pos >= IDENT_4 ) { return IDENT_6 ; } } } finally { IDENT_11 . METHOD_9 ( ) ; } } return IDENT_6 ; }
org . junit . Assert . assertEquals ( IDENT_6 , IDENT_8 ) 