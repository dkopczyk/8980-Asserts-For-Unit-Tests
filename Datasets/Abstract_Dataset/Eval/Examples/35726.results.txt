METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . Class > IDENT_0 = new java . util . HashMap < java . lang . String , java . lang . Class > ( ) ; IDENT_0 . put ( STRING_0 , com . IDENT_1 . IDENT_2 . IDENT_3 . domain . IDENT_4 . class ) ; IDENT_0 . put ( STRING_1 , com . IDENT_1 . IDENT_2 . IDENT_3 . domain . IDENT_4 . class ) ; IDENT_0 . put ( STRING_2 , com . IDENT_1 . IDENT_2 . IDENT_3 . domain . IDENT_5 . class ) ; IDENT_0 . put ( STRING_3 , com . IDENT_1 . IDENT_2 . IDENT_3 . domain . IDENT_5 . class ) ; IDENT_0 . put ( STRING_4 , com . IDENT_1 . IDENT_2 . IDENT_3 . domain . IDENT_5 . class ) ; IDENT_0 . put ( STRING_5 , com . IDENT_1 . IDENT_2 . IDENT_3 . domain . IDENT_5 . class ) ; IDENT_0 . put ( STRING_6 , com . IDENT_1 . IDENT_2 . IDENT_3 . domain . IDENT_5 . class ) ; IDENT_0 . put ( STRING_7 , com . IDENT_1 . IDENT_2 . IDENT_3 . domain . IDENT_5 . class ) ; java . util . List < com . IDENT_1 . IDENT_2 . IDENT_3 . domain . IDENT_5 > IDENT_6 = IDENT_7 . METHOD_1 ( ) ; for ( com . IDENT_1 . IDENT_2 . IDENT_3 . domain . IDENT_5 IDENT_8 : IDENT_6 ) { com . IDENT_1 . IDENT_2 . IDENT_3 . domain . IDENT_9 . logger . info ( ( ( ( STRING_8 + ( IDENT_8 . METHOD_2 ( ) ) ) + STRING_9 ) + ( IDENT_8 . getClass ( ) . METHOD_3 ( ) ) ) ) ; System . out . println ( ( ( ( STRING_8 + ( IDENT_8 . METHOD_2 ( ) ) ) + STRING_9 ) + ( IDENT_8 . getClass ( ) . METHOD_3 ( ) ) ) ) ; java . lang . Class IDENT_10 = IDENT_0 . get ( IDENT_8 . METHOD_2 ( ) ) ; if ( IDENT_10 != null ) { "<AssertPlaceHolder>" ; } } } METHOD_2 ( ) { return IDENT_11 ; }
org . junit . Assert . assertSame ( IDENT_10 , IDENT_8 . getClass ( ) ) 