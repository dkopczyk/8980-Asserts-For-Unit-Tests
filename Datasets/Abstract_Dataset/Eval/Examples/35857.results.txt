METHOD_0 ( ) { net . sourceforge . IDENT_0 . util . IDENT_1 IDENT_2 = builder . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { final java . util . IDENT_3 < java . lang . String > result = new java . util . IDENT_3 < java . lang . String > ( ( ( IDENT_4 . size ( ) ) * 2 ) ) ; for ( int i = 0 ; i < ( IDENT_4 . size ( ) ) ; i ++ ) { final net . sourceforge . IDENT_0 . util . IDENT_1 . IDENT_5 IDENT_6 = IDENT_4 . METHOD_3 ( i ) ; final java . lang . String [ ] s = IDENT_6 . METHOD_4 ( ) ; if ( s != null ) { for ( final java . lang . String value : s ) { result . METHOD_5 ( value ) ; } } } final java . lang . String [ ] res = new java . lang . String [ result . size ( ) ] ; result . METHOD_6 ( res ) ; return res ; }
org . junit . Assert . assertArrayEquals ( new java . lang . String [ ] { } , IDENT_2 . METHOD_2 ( ) ) 