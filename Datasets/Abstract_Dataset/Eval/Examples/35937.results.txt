METHOD_0 ( ) { java . util . Properties props = new java . util . Properties ( ) ; props . put ( STRING_0 , STRING_1 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 config = new com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( props ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_4 < java . lang . String > IDENT_5 = org . easymock . EasyMock . METHOD_2 ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_4 . class ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 < java . lang . String > IDENT_7 = org . easymock . EasyMock . METHOD_2 ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . class ) ; com . IDENT_0 . IDENT_1 . IDENT_8 . IDENT_9 IDENT_10 = org . easymock . EasyMock . METHOD_2 ( com . IDENT_0 . IDENT_1 . IDENT_8 . IDENT_9 . class ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_11 < java . lang . String , java . lang . String > IDENT_2 = new com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_11 < java . lang . String , java . lang . String > ( config , IDENT_5 , IDENT_7 , false , IDENT_10 ) ; try { com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_12 < java . lang . String , java . lang . String > IDENT_13 = new com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_12 < java . lang . String , java . lang . String > ( STRING_2 , STRING_3 ) ; IDENT_2 . METHOD_3 ( IDENT_13 ) ; org . junit . Assert . fail ( STRING_4 ) ; } catch ( com . IDENT_0 . IDENT_1 . common . exception . IDENT_14 e ) { "<AssertPlaceHolder>" ; } } getMessage ( ) { return this . message ; }
org . junit . Assert . assertTrue ( e . getMessage ( ) . contains ( STRING_2 ) ) 