METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . test . IDENT_2 IDENT_3 = new com . IDENT_0 . IDENT_1 . test . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { com . google . gson . IDENT_4 IDENT_5 ; com . IDENT_0 . IDENT_6 . IDENT_7 IDENT_8 = new com . IDENT_0 . IDENT_6 . METHOD_3 ( ) ; IDENT_8 . setName ( " " 0 ) ; IDENT_8 . METHOD_4 ( STRING_0 ) ; com . IDENT_0 . IDENT_6 . plugins . IDENT_1 . IDENT_9 IDENT_10 = new com . IDENT_0 . IDENT_6 . plugins . IDENT_1 . METHOD_5 ( IDENT_8 ) ; com . IDENT_0 . IDENT_6 . plugins . http . IDENT_11 IDENT_12 = new com . IDENT_0 . IDENT_6 . plugins . http . METHOD_6 ( ) ; java . util . List < com . IDENT_0 . IDENT_6 . plugins . IDENT_1 . Result > services = null ; java . util . List < com . IDENT_0 . IDENT_6 . plugins . IDENT_1 . IDENT_13 > IDENT_14 = null ; java . lang . String IDENT_15 = null ; java . lang . String IDENT_16 = null ; for ( int i = 0 ; i < 3 ; i ++ ) { if ( i == 0 ) IDENT_16 = com . IDENT_0 . IDENT_6 . plugins . IDENT_1 . IDENT_17 . IDENT_18 ; else if ( i == 1 ) { IDENT_16 = com . IDENT_0 . IDENT_6 . plugins . IDENT_1 . IDENT_17 . IDENT_19 ; IDENT_8 . setName ( IDENT_8 . getName ( ) . replace ( "1" , "2" ) ) ; IDENT_10 = new com . IDENT_0 . IDENT_6 . plugins . IDENT_1 . METHOD_5 ( IDENT_8 ) ; } else { IDENT_8 . setName ( IDENT_8 . getName ( ) . replace ( "2" , STRING_1 ) ) ; IDENT_16 = com . IDENT_0 . IDENT_6 . plugins . IDENT_1 . IDENT_17 . IDENT_20 ; } IDENT_15 = IDENT_10 . METHOD_7 ( IDENT_16 ) ; try { IDENT_5 = new com . google . gson . METHOD_8 ( ) . create ( ) ; com . IDENT_0 . IDENT_6 . plugins . IDENT_1 . IDENT_21 IDENT_22 = IDENT_5 . METHOD_9 ( IDENT_15 , com . IDENT_0 . IDENT_6 . plugins . IDENT_1 . IDENT_21 . class ) ; services = IDENT_22 . METHOD_10 ( ) ; for ( com . IDENT_0 . IDENT_6 . plugins . IDENT_1 . Result IDENT_23 : services ) { System . out . println ( ( ( IDENT_8 . getName ( ) ) + STRING_2 ) ) ; System . out . println ( ( " " + ( IDENT_23 . getName ( ) ) ) ) ; System . out . println ( ( " " + ( IDENT_23 . METHOD_11 ( ) ) ) ) ; } } catch ( java . lang . Exception e ) { return false ; } System . out . println ( STRING_3 ) ; try { IDENT_12 . METHOD_12 ( STRING_4 , IDENT_16 ) ; IDENT_14 = IDENT_10 . METHOD_13 ( IDENT_12 ) ; if ( IDENT_14 == null ) return false ; for ( com . IDENT_0 . IDENT_6 . plugins . IDENT_1 . IDENT_13 IDENT_24 : IDENT_14 ) { System . out . println ( ( ( IDENT_24 . getName ( ) ) + STRING_5 ) ) ; System . out . println ( ( " " + ( IDENT_24 . METHOD_14 ( ) . getName ( ) ) ) ) ; System . out . println ( ( " " + ( IDENT_24 . METHOD_14 ( ) . METHOD_11 ( ) ) ) ) ; } } catch ( java . lang . Exception e ) { return false ; } System . out . println ( STRING_3 ) ; } return true ; }
org . junit . Assert . assertEquals ( IDENT_3 . METHOD_2 ( ) , true ) 