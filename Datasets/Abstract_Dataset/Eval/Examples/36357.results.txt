METHOD_0 ( ) { org . IDENT_0 . test . core . IDENT_1 . IDENT_2 IDENT_3 = METHOD_1 ( ) ; try { IDENT_3 . cache . invoke ( org . IDENT_0 . test . core . IDENT_1 . IDENT_4 , new org . IDENT_0 . processor . IDENT_5 < java . lang . Integer , java . lang . Integer , java . lang . IDENT_6 > ( ) { @ org . IDENT_0 . test . core . Override public org . IDENT_0 . test . core . IDENT_6 process ( final org . IDENT_0 . processor . IDENT_7 < java . lang . Integer , java . lang . Integer > e ) throws org . IDENT_0 . test . core . Exception { e . setValue ( org . IDENT_0 . test . core . IDENT_1 . IDENT_8 ) ; throw new java . lang . RuntimeException ( STRING_0 ) ; } } ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( org . IDENT_0 . processor . IDENT_9 IDENT_10 ) { } "<AssertPlaceHolder>" ; IDENT_3 . cache . put ( org . IDENT_0 . test . core . IDENT_1 . IDENT_4 , org . IDENT_0 . test . core . IDENT_1 . IDENT_8 ) ; } containsKey ( IDENT_11 ) { throw new java . lang . METHOD_2 ( ) ; }
org . junit . Assert . assertFalse ( IDENT_3 . cache . containsKey ( org . IDENT_0 . test . core . IDENT_1 . IDENT_4 ) ) 