METHOD_0 ( ) { class IDENT_0 { byte IDENT_1 ; int IDENT_2 ; public METHOD_1 ( byte expected , int input ) { IDENT_1 = expected ; IDENT_2 = input ; } } java . util . ArrayList < METHOD_1 > IDENT_3 = new java . util . ArrayList ( ) ; IDENT_3 . add ( new METHOD_1 ( ( ( byte ) ( 0 ) ) , 0 ) ) ; IDENT_3 . add ( new METHOD_1 ( ( ( byte ) ( INT_0 ) ) , INT_0 ) ) ; IDENT_3 . add ( new METHOD_1 ( ( ( byte ) ( INT_1 ) ) , INT_2 ) ) ; IDENT_3 . add ( new METHOD_1 ( ( ( byte ) ( INT_3 ) ) , INT_4 ) ) ; IDENT_3 . add ( new METHOD_1 ( ( ( byte ) ( INT_5 ) ) , INT_6 ) ) ; for ( METHOD_1 IDENT_4 : IDENT_3 ) { java . nio . ByteBuffer buf = java . nio . ByteBuffer . METHOD_2 ( 1 ) ; alluxio . util . io . IDENT_5 . METHOD_0 ( buf , IDENT_4 . IDENT_2 ) ; "<AssertPlaceHolder>" ; } } get ( long ) { long IDENT_6 = METHOD_3 ( IDENT_7 ) ; return IDENT_8 . METHOD_4 ( IDENT_6 , 0 ) ; }
org . junit . Assert . assertEquals ( IDENT_4 . IDENT_1 , buf . get ( 0 ) ) 