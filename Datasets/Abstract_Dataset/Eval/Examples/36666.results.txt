METHOD_0 ( ) { br . com . IDENT_0 . IDENT_1 . controller . IDENT_2 delete = br . com . IDENT_0 . IDENT_1 . controller . IDENT_2 . IDENT_3 ; br . com . IDENT_0 . IDENT_1 . http . route . IDENT_4 route = mock ( br . com . IDENT_0 . IDENT_1 . http . route . IDENT_4 . class ) ; when ( route . METHOD_1 ( ) ) . thenReturn ( METHOD_2 ( ) ) ; when ( route . METHOD_3 ( STRING_0 ) ) . thenReturn ( true ) ; when ( route . METHOD_4 ( ) ) . thenReturn ( java . util . IDENT_5 . of ( delete ) ) ; when ( route . METHOD_5 ( request , STRING_0 ) ) . thenReturn ( method ) ; IDENT_6 . add ( route ) ; br . com . IDENT_0 . IDENT_1 . controller . IDENT_7 found = IDENT_6 . parse ( STRING_0 , delete , request ) ; "<AssertPlaceHolder>" ; verify ( route , METHOD_6 ( ) ) . METHOD_7 ( ) ; } is ( java . lang . Class ) { br . com . IDENT_0 . IDENT_1 . proxy . IDENT_8 < T > handler = new br . com . IDENT_0 . IDENT_1 . proxy . IDENT_8 < T > ( ) { @ br . com . IDENT_0 . IDENT_1 . http . route . Override public java . lang . Object METHOD_8 ( java . lang . Object proxy , java . lang . reflect . Method method , java . lang . Object [ ] args , br . com . IDENT_0 . IDENT_1 . proxy . IDENT_9 IDENT_10 ) { boolean IDENT_11 = ! ( strategy . getClass ( ) . equals ( br . com . IDENT_0 . IDENT_1 . http . route . IDENT_12 . class ) ) ; if ( IDENT_11 ) { return null ; } is ( type , method ) ; return null ; } } ; return IDENT_13 . METHOD_9 ( type , handler ) ; }
org . junit . Assert . assertThat ( found , org . hamcrest . Matchers . is ( org . hamcrest . Matchers . equalTo ( method ) ) ) 