METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . api . IDENT_2 flow = new org . IDENT_0 . IDENT_1 . api . builder . METHOD_1 ( ) . id ( STRING_0 ) . METHOD_2 ( ) . stream ( STRING_1 ) . filter ( ) . filter ( new org . IDENT_0 . IDENT_1 . api . filter . METHOD_3 ( METHOD_4 ( new org . IDENT_0 . IDENT_3 . criteria . builder . METHOD_5 ( ) . eq ( STRING_2 , STRING_3 ) . build ( ) ) ) ) . end ( ) . METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( ) ; IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 IDENT_8 = METHOD_9 ( flow , 10 ) ; IDENT_4 . IDENT_5 . IDENT_9 conf = new IDENT_4 . IDENT_5 . METHOD_10 ( ) ; conf . METHOD_11 ( org . IDENT_0 . IDENT_3 . domain . event . IDENT_10 . class , org . IDENT_0 . IDENT_1 . api . IDENT_11 . IDENT_12 . class ) ; conf . METHOD_12 ( false ) ; conf . METHOD_13 ( 20 ) ; IDENT_4 . IDENT_5 . IDENT_13 cluster = new IDENT_4 . IDENT_5 . METHOD_14 ( ) ; cluster . METHOD_15 ( "test" , conf , IDENT_8 ) ; try { java . lang . Thread . sleep ( INT_0 ) ; } catch ( java . lang . IDENT_14 e ) { e . printStackTrace ( ) ; } cluster . METHOD_16 ( ) ; "<AssertPlaceHolder>" ; } METHOD_17 ( ) { MOD_0 ( org . IDENT_0 . IDENT_1 . api . IDENT_5 . IDENT_15 . IDENT_16 . IDENT_17 ) { return new java . util . ArrayList < org . IDENT_0 . IDENT_3 . domain . event . IDENT_10 > ( org . IDENT_0 . IDENT_1 . api . IDENT_5 . IDENT_15 . IDENT_16 . IDENT_17 ) ; } }
org . junit . Assert . assertEquals ( 0 , org . IDENT_0 . IDENT_1 . api . IDENT_5 . IDENT_15 . IDENT_16 . METHOD_17 ( ) . size ( ) ) 