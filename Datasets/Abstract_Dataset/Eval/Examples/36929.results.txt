METHOD_0 ( ) { final it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 < edu . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . data . IDENT_10 > IDENT_11 = new it . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_12 < edu . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . data . IDENT_10 > ( ) ; final edu . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . data . IDENT_10 IDENT_13 = new edu . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . data . METHOD_1 ( 3 , ( 3 + 5 ) ) ; final edu . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . data . METHOD_1 IDENT_14 = new edu . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . data . METHOD_1 ( 5 , ( 5 + 5 ) ) ; final edu . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . data . METHOD_1 IDENT_15 = new edu . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . data . METHOD_1 ( 3 , ( 3 + 4 ) ) ; IDENT_11 . add ( IDENT_13 ) ; IDENT_11 . add ( IDENT_14 ) ; IDENT_11 . add ( IDENT_15 ) ; IDENT_16 . METHOD_2 ( IDENT_11 ) ; IDENT_16 . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { return ( ( int ) ( java . lang . Math . METHOD_5 ( IDENT_17 . get ( IDENT_18 . METHOD_6 ( ( ( IDENT_18 . size ( ) ) - 1 ) ) ) ) ) ) ; }
org . junit . Assert . assertEquals ( 3 , IDENT_16 . METHOD_4 ( ) ) 