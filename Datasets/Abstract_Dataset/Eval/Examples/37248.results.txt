METHOD_0 ( ) { IDENT_0 . METHOD_1 ( org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 , org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_5 ) ; IDENT_0 . METHOD_1 ( org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_6 , org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_5 ) ; METHOD_2 ( org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 ) ; METHOD_2 ( org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_6 ) ; java . lang . String IDENT_7 = IDENT_8 . METHOD_3 ( ) . METHOD_4 ( org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 ) . METHOD_5 ( ) . getId ( ) ; java . lang . String IDENT_9 = IDENT_8 . METHOD_3 ( ) . METHOD_4 ( org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_6 ) . METHOD_5 ( ) . getId ( ) ; IDENT_10 . METHOD_6 ( STRING_0 , null , java . util . Arrays . asList ( org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 ) ) ; java . util . List < org . camunda . bpm . engine . IDENT_11 . IDENT_12 > result = IDENT_13 . METHOD_7 ( ) . METHOD_8 ( IDENT_7 , IDENT_9 ) . METHOD_9 ( org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_14 ) ; "<AssertPlaceHolder>" ; } size ( ) { return ( ( ( IDENT_15 . size ( ) ) + ( IDENT_16 . size ( ) ) ) + ( IDENT_17 . size ( ) ) ) + ( IDENT_18 . size ( ) ) ; }
org . junit . Assert . assertThat ( result . size ( ) , org . hamcrest . CoreMatchers . is ( 1 ) ) 