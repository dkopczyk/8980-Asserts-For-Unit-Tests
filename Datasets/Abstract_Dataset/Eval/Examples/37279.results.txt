METHOD_0 ( ) { org . camunda . bpm . model . IDENT_0 . IDENT_1 model = org . camunda . bpm . model . IDENT_0 . IDENT_2 . METHOD_1 ( STRING_0 ) . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) . METHOD_4 ( ) . METHOD_2 ( ) . METHOD_5 ( STRING_1 1 ) . message ( org . camunda . bpm . engine . test . api . runtime . IDENT_3 . IDENT_4 ) . METHOD_6 ( STRING_2 , STRING_3 ) . METHOD_6 ( STRING_1 2 , STRING_4 ) . METHOD_7 ( STRING_5 ) . METHOD_8 ( ) . METHOD_9 ( ) . METHOD_10 ( ) . METHOD_11 ( STRING_6 ) . METHOD_12 ( STRING_1 0 ) . METHOD_13 ( ) . METHOD_8 ( ) . METHOD_14 ( ) ; IDENT_5 . METHOD_15 ( model ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_6 = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; IDENT_6 . put ( STRING_7 , java . util . Arrays . asList ( 1 , 2 , 3 ) ) ; org . camunda . bpm . engine . runtime . IDENT_7 IDENT_8 = IDENT_9 . METHOD_16 ( ) . METHOD_17 ( STRING_0 , IDENT_6 ) ; java . lang . String IDENT_10 = org . camunda . bpm . engine . test . api . runtime . IDENT_3 . IDENT_4 ; java . util . Map < java . lang . String , java . lang . Object > IDENT_11 = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; int IDENT_12 = 1 ; IDENT_11 . put ( STRING_2 , IDENT_12 ) ; IDENT_11 . put ( STRING_1 2 , STRING_4 ) ; org . camunda . bpm . engine . runtime . IDENT_13 IDENT_14 = IDENT_9 . METHOD_16 ( ) . METHOD_18 ( IDENT_10 ) . METHOD_19 ( IDENT_11 ) . METHOD_20 ( org . camunda . bpm . engine . IDENT_15 . IDENT_16 . METHOD_21 ( ) . METHOD_22 ( STRING_8 , STRING_9 ) ) . METHOD_23 ( ) ; METHOD_24 ( IDENT_14 , IDENT_8 , STRING_1 1 ) ; java . util . List < org . camunda . bpm . engine . runtime . IDENT_17 > IDENT_18 = IDENT_9 . METHOD_16 ( ) . METHOD_25 ( ) . METHOD_26 ( STRING_1 1 ) . list ( ) ; "<AssertPlaceHolder>" ; } size ( ) { return ( ( ( IDENT_19 . size ( ) ) + ( IDENT_20 . size ( ) ) ) + ( IDENT_21 . size ( ) ) ) + ( IDENT_22 . size ( ) ) ; }
org . junit . Assert . assertEquals ( 2 , IDENT_18 . size ( ) ) 