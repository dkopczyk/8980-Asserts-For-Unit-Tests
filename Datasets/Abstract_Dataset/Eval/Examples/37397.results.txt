METHOD_0 ( ) { org . camunda . bpm . engine . task . IDENT_0 IDENT_1 = IDENT_2 . METHOD_1 ( ) ; IDENT_1 . METHOD_2 ( 4 ) ; IDENT_2 . METHOD_3 ( IDENT_1 ) ; org . camunda . bpm . engine . task . IDENT_0 IDENT_3 = IDENT_2 . METHOD_1 ( ) ; IDENT_3 . setName ( STRING_0 ) ; IDENT_3 . METHOD_4 ( STRING_1 ) ; IDENT_3 . METHOD_5 ( STRING_2 ) ; IDENT_3 . METHOD_2 ( 4 ) ; IDENT_2 . METHOD_3 ( IDENT_3 ) ; org . camunda . bpm . engine . task . IDENT_0 IDENT_4 = IDENT_2 . METHOD_1 ( ) ; IDENT_4 . setName ( STRING_0 ) ; IDENT_4 . METHOD_4 ( STRING_1 ) ; IDENT_4 . METHOD_5 ( STRING_2 ) ; IDENT_4 . METHOD_2 ( 4 ) ; IDENT_4 . METHOD_6 ( STRING_3 ) ; IDENT_2 . METHOD_3 ( IDENT_4 ) ; org . camunda . bpm . engine . task . IDENT_0 IDENT_5 = IDENT_2 . METHOD_1 ( ) ; IDENT_5 . METHOD_4 ( STRING_1 ) ; IDENT_5 . METHOD_5 ( STRING_2 ) ; IDENT_5 . METHOD_2 ( 4 ) ; IDENT_5 . METHOD_6 ( STRING_3 ) ; IDENT_2 . METHOD_3 ( IDENT_5 ) ; org . camunda . bpm . engine . task . IDENT_0 IDENT_6 = IDENT_2 . METHOD_1 ( ) ; IDENT_6 . METHOD_6 ( STRING_3 ) ; IDENT_6 . METHOD_4 ( STRING_1 ) ; IDENT_2 . METHOD_3 ( IDENT_6 ) ; java . util . List < org . camunda . bpm . engine . task . IDENT_0 > IDENT_7 = IDENT_2 . METHOD_7 ( ) . METHOD_8 ( ) . METHOD_9 ( STRING_0 ) . METHOD_10 ( STRING_3 ) . METHOD_11 ( IDENT_4 . getId ( ) ) . METHOD_12 ( ) . METHOD_13 ( STRING_1 ) . METHOD_14 ( 4 ) . METHOD_15 ( STRING_2 ) . list ( ) ; "<AssertPlaceHolder>" ; } size ( ) { return ( ( ( IDENT_8 . size ( ) ) + ( IDENT_9 . size ( ) ) ) + ( IDENT_10 . size ( ) ) ) + ( IDENT_11 . size ( ) ) ; }
org . junit . Assert . assertEquals ( 3 , IDENT_7 . size ( ) ) 