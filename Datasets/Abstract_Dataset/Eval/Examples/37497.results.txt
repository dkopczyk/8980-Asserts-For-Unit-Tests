METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . Object > IDENT_0 = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; IDENT_0 . put ( STRING_0 , "test" ) ; IDENT_0 . put ( STRING_1 , true ) ; IDENT_0 . put ( STRING_2 , 5 ) ; IDENT_1 . METHOD_1 ( STRING_3 , IDENT_0 ) ; org . camunda . bpm . engine . IDENT_2 . IDENT_3 query = IDENT_4 . METHOD_2 ( ) . METHOD_3 ( STRING_4 ) ; "<AssertPlaceHolder>" ; try { query . METHOD_3 ( null ) ; org . junit . Assert . fail ( STRING_5 ) ; } catch ( org . camunda . bpm . engine . IDENT_5 e ) { } try { query . METHOD_3 ( ( ( java . lang . String ) ( null ) ) ) ; org . junit . Assert . fail ( STRING_5 ) ; } catch ( org . camunda . bpm . engine . IDENT_5 e ) { } } count ( ) { this . IDENT_6 = org . camunda . bpm . engine . impl . IDENT_7 . IDENT_8 . IDENT_9 ; if ( ( IDENT_10 ) != null ) { return ( ( java . lang . Long ) ( IDENT_10 . execute ( this ) ) ) ; } return METHOD_4 ( org . camunda . bpm . engine . impl . context . Context . METHOD_5 ( ) , METHOD_6 ( ) ) ; }
org . junit . Assert . assertEquals ( 0 , query . count ( ) ) 