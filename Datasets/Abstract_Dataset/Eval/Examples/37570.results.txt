METHOD_0 ( ) { org . camunda . bpm . engine . runtime . IDENT_0 instance = rule . METHOD_1 ( ) ; rule . METHOD_2 ( STRING_0 ) . METHOD_3 ( ) ; org . camunda . bpm . engine . task . IDENT_1 IDENT_2 = rule . METHOD_4 ( ) . METHOD_5 ( STRING_1 ) . METHOD_6 ( ) ; rule . METHOD_7 ( ) . METHOD_8 ( instance . getId ( ) , IDENT_3 . IDENT_4 , true ) ; rule . METHOD_7 ( ) . METHOD_8 ( instance . getId ( ) , IDENT_3 . IDENT_5 , STRING_2 ) ; try { rule . METHOD_9 ( ) . METHOD_10 ( IDENT_2 . getId ( ) ) ; org . junit . Assert . fail ( STRING_3 ) ; } catch ( org . camunda . bpm . IDENT_6 . IDENT_7 . util . IDENT_3 . IDENT_8 e ) { "<AssertPlaceHolder>" ; } } getMessage ( ) { return message ; }
org . junit . Assert . assertEquals ( STRING_2 , e . getMessage ( ) ) 