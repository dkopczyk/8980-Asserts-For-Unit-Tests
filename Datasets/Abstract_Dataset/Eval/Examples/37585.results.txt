METHOD_0 ( ) { IDENT_0 . IDENT_1 = IDENT_2 ; when ( IDENT_2 . METHOD_1 ( IDENT_0 . IDENT_3 ) ) . thenReturn ( true ) ; when ( IDENT_2 . METHOD_2 ( IDENT_0 . IDENT_3 , org . camunda . bpm . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . filter . IDENT_8 . IDENT_9 . class ) ) . thenReturn ( IDENT_10 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { if ( ( ( org . camunda . bpm . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . filter . IDENT_0 . IDENT_1 ) != null ) && ( org . camunda . bpm . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . filter . IDENT_0 . IDENT_1 . METHOD_1 ( org . camunda . bpm . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . filter . IDENT_0 . IDENT_3 ) ) ) { return org . camunda . bpm . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . filter . IDENT_0 . IDENT_1 . METHOD_2 ( org . camunda . bpm . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . filter . IDENT_0 . IDENT_3 , org . camunda . bpm . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . filter . IDENT_8 . IDENT_9 . class ) ; } return null ; }
org . junit . Assert . assertEquals ( IDENT_10 , org . camunda . bpm . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . filter . IDENT_0 . METHOD_3 ( ) ) 