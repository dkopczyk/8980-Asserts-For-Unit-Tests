METHOD_0 ( ) { org . camunda . bpm . IDENT_0 . IDENT_1 . IDENT_2 . jdbc . IDENT_3 IDENT_4 = new org . camunda . bpm . IDENT_0 . IDENT_1 . IDENT_2 . jdbc . METHOD_1 ( ) ; final java . lang . String IDENT_5 = "test" ; IDENT_4 . METHOD_2 ( IDENT_5 ) ; IDENT_4 . METHOD_3 ( IDENT_6 ) ; IDENT_4 . METHOD_4 ( IDENT_7 ) ; IDENT_4 . METHOD_5 ( ) ; when ( IDENT_6 . METHOD_6 ( IDENT_4 . METHOD_7 ( ) , org . camunda . bpm . IDENT_0 . IDENT_1 . IDENT_2 . jdbc . Integer . class ) ) . METHOD_8 ( new org . springframework . dao . METHOD_9 ( "" ) ) ; java . lang . String IDENT_8 = IDENT_4 . METHOD_10 ( ) ; "<AssertPlaceHolder>" ; verify ( IDENT_6 ) . METHOD_6 ( IDENT_4 . METHOD_7 ( ) , org . camunda . bpm . IDENT_0 . IDENT_1 . IDENT_2 . jdbc . Integer . class ) ; } METHOD_10 ( ) { java . lang . Integer IDENT_9 = null ; try { IDENT_9 = IDENT_6 . METHOD_6 ( METHOD_7 ( ) , org . camunda . bpm . IDENT_0 . IDENT_1 . IDENT_2 . jdbc . Integer . class ) ; org . camunda . bpm . IDENT_0 . IDENT_1 . IDENT_2 . jdbc . METHOD_1 . log . debug ( STRING_0 , IDENT_9 ) ; } catch ( org . springframework . dao . IDENT_10 e ) { if ( IDENT_11 ) { org . camunda . bpm . IDENT_0 . IDENT_1 . IDENT_2 . jdbc . METHOD_1 . log . warn ( STRING_1 , e . getMessage ( ) ) ; org . camunda . bpm . IDENT_0 . IDENT_1 . IDENT_2 . jdbc . METHOD_1 . log . debug ( STRING_2 , e ) ; } else { throw e ; } } return METHOD_11 ( IDENT_9 ) ; }
org . junit . Assert . assertEquals ( IDENT_4 . IDENT_5 , METHOD_10 ) 