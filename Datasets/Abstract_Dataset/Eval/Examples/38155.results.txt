METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_0 . IDENT_1 . METHOD_1 ( IDENT_4 , new java . util . Date ( ) ) ; IDENT_3 . METHOD_2 ( new java . math . BigInteger ( STRING_0 ) , new java . util . Date ( ) , IDENT_5 . IDENT_6 ) ; org . IDENT_0 . IDENT_1 . IDENT_7 IDENT_8 = IDENT_3 . build ( IDENT_9 ) ; java . io . File IDENT_10 = METHOD_3 ( IDENT_8 ) ; java . io . File IDENT_11 = new java . io . File ( IDENT_12 . METHOD_4 ( ) , STRING_1 ) ; org . IDENT_13 . util . IDENT_14 stream = IDENT_15 . newInstance ( IDENT_10 , ( ( java . security . interfaces . IDENT_16 ) ( IDENT_17 . METHOD_5 ( ) ) ) , ( ( java . security . interfaces . IDENT_18 ) ( IDENT_17 . METHOD_6 ( ) ) ) ) ; java . util . Set < java . math . BigInteger > expected = new java . util . HashSet ( ) ; expected . add ( new java . math . BigInteger ( STRING_0 ) ) ; java . util . Set < java . math . BigInteger > IDENT_19 = new java . util . HashSet ( java . util . Arrays . asList ( new java . math . BigInteger ( STRING_2 ) , new java . math . BigInteger ( STRING_3 ) , new java . math . BigInteger ( STRING_4 ) , new java . math . BigInteger ( STRING_5 ) , new java . math . BigInteger ( STRING_6 ) , new java . math . BigInteger ( STRING_7 ) ) ) ; for ( java . math . BigInteger i : IDENT_19 ) { stream . add ( i , new java . util . Date ( ) , IDENT_5 . IDENT_6 ) ; expected . add ( i ) ; } stream . METHOD_7 ( IDENT_10 ) . METHOD_8 ( ) ; java . io . IDENT_20 o = new java . io . METHOD_9 ( new java . io . METHOD_10 ( IDENT_11 ) ) ; stream . write ( o ) ; o . close ( ) ; java . security . IDENT_1 . IDENT_21 IDENT_22 = METHOD_11 ( ) ; java . util . Set < java . math . BigInteger > IDENT_23 = new java . util . HashSet ( ) ; for ( java . security . IDENT_1 . IDENT_24 entry : IDENT_22 . METHOD_12 ( ) ) { IDENT_23 . add ( entry . METHOD_13 ( ) ) ; } "<AssertPlaceHolder>" ; } METHOD_13 ( ) { return this . IDENT_25 ; }
org . junit . Assert . assertEquals ( expected , IDENT_23 ) 