METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = METHOD_1 ( ) ; IDENT_3 . METHOD_2 ( new java . math . BigInteger ( STRING_0 ) , new java . util . Date ( ) , IDENT_4 . IDENT_5 ) ; org . IDENT_0 . IDENT_1 . IDENT_6 IDENT_7 = IDENT_3 . build ( IDENT_8 ) ; java . io . File IDENT_9 = METHOD_3 ( IDENT_7 ) ; org . IDENT_10 . util . IDENT_11 validator = new org . IDENT_10 . util . METHOD_4 ( ) { @ org . IDENT_10 . util . Override public boolean METHOD_5 ( java . security . IDENT_1 . IDENT_12 entry ) { return entry . METHOD_6 ( ) . equals ( new java . math . BigInteger ( STRING_0 ) ) ; } } ; org . IDENT_10 . util . IDENT_13 stream = IDENT_14 . newInstance ( IDENT_9 , ( ( java . security . interfaces . IDENT_15 ) ( IDENT_16 . METHOD_7 ( ) ) ) , ( ( java . security . interfaces . IDENT_17 ) ( IDENT_16 . METHOD_8 ( ) ) ) ) ; stream . add ( new java . math . BigInteger ( STRING_1 ) , new java . util . Date ( ) , IDENT_4 . IDENT_5 ) ; stream . METHOD_9 ( IDENT_9 , validator ) . METHOD_10 ( ) ; java . io . IDENT_18 o = new java . io . METHOD_11 ( new java . io . METHOD_12 ( IDENT_19 ) ) ; stream . write ( o ) ; o . close ( ) ; java . security . IDENT_1 . IDENT_20 IDENT_21 = METHOD_13 ( ) ; java . util . Set < java . math . BigInteger > IDENT_22 = new java . util . HashSet ( ) ; for ( java . security . IDENT_1 . IDENT_12 entry : IDENT_21 . METHOD_14 ( ) ) { IDENT_22 . add ( entry . METHOD_6 ( ) ) ; } java . util . Set < java . math . BigInteger > expected = new java . util . HashSet ( ) ; expected . add ( new java . math . BigInteger ( STRING_2 ) ) ; expected . add ( new java . math . BigInteger ( STRING_1 ) ) ; "<AssertPlaceHolder>" ; } add ( org . IDENT_10 . policy . IDENT_23 ) { errors . addAll ( result . METHOD_15 ( ) ) ; IDENT_24 . addAll ( result . METHOD_16 ( ) ) ; }
org . junit . Assert . assertEquals ( expected , IDENT_22 ) 