METHOD_0 ( ) { java . net . IDENT_0 IDENT_1 = new java . net . METHOD_1 ( STRING_0 , INT_0 ) ; try { IDENT_1 . METHOD_2 ( INT_1 ) ; java . io . IDENT_2 out = new java . io . METHOD_3 ( IDENT_1 . METHOD_4 ( ) , STRING_1 ) ; java . io . IDENT_3 in = new java . io . METHOD_5 ( IDENT_1 . METHOD_6 ( ) , STRING_1 ) ; out . write ( ( STRING_2 + ( STRING_3 + STRING_4 ) ) ) ; out . METHOD_7 ( ) ; java . lang . StringBuilder builder = new java . lang . StringBuilder ( ) ; for ( int c ; ( c = in . read ( ) ) != ( - 1 ) ; ) { builder . append ( ( ( char ) ( c ) ) ) ; } "<AssertPlaceHolder>" ; } finally { IDENT_1 . close ( ) ; } } read ( ) { try { final int IDENT_4 = msg . METHOD_8 ( buf , 1 ) ; return IDENT_4 != ( - 1 ) ? ( buf [ 0 ] ) & 255 : - 1 ; } catch ( javax . jms . IDENT_5 e ) { throw new java . io . IOException ( e ) ; } }
org . junit . Assert . assertTrue ( ( ( builder . length ( ) ) > 0 ) ) 