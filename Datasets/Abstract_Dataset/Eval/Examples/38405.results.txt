METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new com . IDENT_0 . IDENT_1 . METHOD_1 ( 0 ) ; com . IDENT_0 . IDENT_1 . IDENT_4 < IDENT_5 > list = new com . IDENT_0 . IDENT_1 . METHOD_2 ( 0 , IDENT_3 ) ; final int max = ( com . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_3 ( ) ) ? 0 : com . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_4 ( 0 , 1000 ) ; for ( int i = 0 ; i < max ; i ++ ) { list . add ( com . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_5 ( i ) ) ; } final int IDENT_7 = com . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_4 ( 1 , INT_0 ) ; list . METHOD_6 ( ( IDENT_7 + ( list . size ( ) ) ) ) ; final int IDENT_8 = IDENT_3 . IDENT_9 ; for ( int i = 0 ; i < IDENT_7 ; i ++ ) { list . add ( com . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_5 ( i ) ) ; } "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . Integer ) { }
org . junit . Assert . assertEquals ( IDENT_8 , IDENT_3 . IDENT_9 ) 