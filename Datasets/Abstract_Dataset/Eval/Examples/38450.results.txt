METHOD_0 ( ) { io . cdap . cdap . api . data . schema . Schema schema = io . cdap . cdap . api . data . schema . Schema . METHOD_1 ( STRING_0 0 , Schema . Field . of ( "name" , io . cdap . cdap . api . data . schema . Schema . of ( Schema . Type . IDENT_0 ) ) ) ; io . cdap . cdap . IDENT_1 . IDENT_2 . v2 . IDENT_3 IDENT_4 = io . cdap . cdap . IDENT_1 . IDENT_2 . v2 . IDENT_3 . builder ( ) . METHOD_2 ( new io . cdap . cdap . IDENT_1 . IDENT_2 . v2 . METHOD_3 ( STRING_1 , io . cdap . cdap . IDENT_1 . mock . batch . IDENT_5 . METHOD_4 ( STRING_0 2 , schema ) ) ) . METHOD_2 ( new io . cdap . cdap . IDENT_1 . IDENT_2 . v2 . METHOD_3 ( STRING_2 , io . cdap . cdap . IDENT_1 . mock . batch . IDENT_6 . METHOD_4 ( STRING_3 ) ) ) . METHOD_2 ( new io . cdap . cdap . IDENT_1 . IDENT_2 . v2 . METHOD_3 ( STRING_0 1 , io . cdap . cdap . IDENT_1 . mock . condition . IDENT_7 . METHOD_4 ( STRING_0 1 ) ) ) . METHOD_2 ( new io . cdap . cdap . IDENT_1 . IDENT_2 . v2 . METHOD_3 ( STRING_0 , io . cdap . cdap . IDENT_1 . mock . condition . IDENT_7 . METHOD_4 ( STRING_0 ) ) ) . METHOD_5 ( STRING_0 1 , STRING_0 , true ) . METHOD_5 ( STRING_0 , STRING_1 , true ) . METHOD_5 ( STRING_1 , STRING_2 ) . build ( ) ; io . cdap . cdap . IDENT_2 . IDENT_8 . IDENT_9 < io . cdap . cdap . IDENT_1 . IDENT_2 . v2 . IDENT_3 > IDENT_10 = new io . cdap . cdap . IDENT_2 . IDENT_8 . METHOD_6 ( io . cdap . cdap . IDENT_11 . IDENT_12 . IDENT_13 , IDENT_4 ) ; io . cdap . cdap . IDENT_2 . id . IDENT_14 IDENT_15 = IDENT_16 . IDENT_17 . app ( STRING_4 ) ; io . cdap . cdap . test . IDENT_18 IDENT_19 = METHOD_7 ( IDENT_15 , IDENT_10 ) ; io . cdap . cdap . api . data . format . IDENT_20 IDENT_21 = io . cdap . cdap . api . data . format . IDENT_20 . builder ( schema ) . set ( "name" , STRING_5 ) . build ( ) ; io . cdap . cdap . api . data . format . IDENT_20 IDENT_22 = io . cdap . cdap . api . data . format . IDENT_20 . builder ( schema ) . set ( "name" , STRING_6 ) . build ( ) ; io . cdap . cdap . test . IDENT_23 < io . cdap . cdap . api . dataset . table . IDENT_24 > IDENT_25 = METHOD_8 ( IDENT_16 . IDENT_17 . dataset ( STRING_0 2 ) ) ; io . cdap . cdap . IDENT_1 . mock . batch . IDENT_5 . METHOD_9 ( IDENT_25 , com . google . common . collect . ImmutableList . of ( IDENT_21 , IDENT_22 ) ) ; io . cdap . cdap . test . IDENT_26 IDENT_27 = IDENT_19 . METHOD_10 ( IDENT_28 . IDENT_29 ) ; IDENT_27 . start ( com . google . common . collect . ImmutableMap . of ( STRING_0 3 , STRING_7 , STRING_8 , STRING_7 ) ) ; IDENT_27 . METHOD_11 ( IDENT_30 . IDENT_31 , 5 , TimeUnit . IDENT_32 ) ; io . cdap . cdap . test . IDENT_23 < io . cdap . cdap . api . dataset . table . IDENT_24 > IDENT_33 = METHOD_8 ( STRING_3 ) ; java . util . Set < io . cdap . cdap . api . data . format . IDENT_20 > expected = com . google . common . collect . IDENT_34 . of ( IDENT_21 , IDENT_22 ) ; java . util . Set < io . cdap . cdap . api . data . format . IDENT_20 > actual = com . google . common . collect . IDENT_35 . METHOD_12 ( io . cdap . cdap . IDENT_1 . mock . batch . IDENT_6 . METHOD_13 ( IDENT_33 ) ) ; "<AssertPlaceHolder>" ; } METHOD_13 ( io . cdap . cdap . test . IDENT_23 ) { IDENT_36 . METHOD_14 ( ) ; io . cdap . cdap . api . dataset . table . IDENT_24 table = IDENT_36 . get ( ) ; try ( io . cdap . cdap . api . dataset . table . IDENT_37 IDENT_38 = table . METHOD_15 ( null , null ) ) { java . util . List < io . cdap . cdap . api . data . format . IDENT_20 > records = new java . util . ArrayList ( ) ; io . cdap . cdap . api . dataset . table . IDENT_39 row ; while ( ( row = IDENT_38 . next ( ) ) != null ) { io . cdap . cdap . api . data . schema . Schema schema = io . cdap . cdap . api . data . schema . Schema . METHOD_16 ( row . getString ( io . cdap . cdap . IDENT_1 . mock . batch . IDENT_6 . IDENT_40 ) ) ; java . lang . String IDENT_41 = row . getString ( io . cdap . cdap . IDENT_1 . mock . batch . IDENT_6 . IDENT_42 ) ; records . add ( io . cdap . cdap . format . IDENT_43 . METHOD_17 ( IDENT_41 , schema ) ) ; } return records ; } }
org . junit . Assert . assertEquals ( expected , actual ) 