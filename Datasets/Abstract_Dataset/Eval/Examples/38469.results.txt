METHOD_0 ( ) { io . cdap . cdap . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new io . cdap . cdap . IDENT_0 . IDENT_1 . METHOD_1 ( com . google . common . collect . IDENT_4 . of ( new io . cdap . cdap . IDENT_0 . IDENT_5 . METHOD_2 ( STRING_0 , STRING_1 ) , new io . cdap . cdap . IDENT_0 . IDENT_5 . METHOD_2 ( STRING_1 , STRING_2 ) ) ) ; java . util . Set < io . cdap . cdap . IDENT_0 . IDENT_1 . METHOD_1 > expected = com . google . common . collect . IDENT_4 . of ( IDENT_6 , IDENT_7 , IDENT_3 ) ; java . util . Set < io . cdap . cdap . IDENT_0 . IDENT_1 . METHOD_1 > actual = new java . util . HashSet ( IDENT_8 . split ( ) ) ; "<AssertPlaceHolder>" ; } split ( ) { java . util . List < io . cdap . cdap . IDENT_0 . IDENT_1 . METHOD_1 > IDENT_9 = new java . util . ArrayList ( ) ; java . util . Set < java . lang . String > IDENT_10 = new java . util . HashSet ( nodes ) ; java . util . Set < java . lang . String > IDENT_11 = com . google . common . collect . IDENT_12 . METHOD_3 ( IDENT_13 , IDENT_14 . METHOD_4 ( ) ) ; java . util . Set < java . lang . String > IDENT_15 = com . google . common . collect . IDENT_12 . METHOD_3 ( IDENT_16 , IDENT_14 . METHOD_4 ( ) ) ; for ( java . lang . String IDENT_17 : IDENT_18 ) { io . cdap . cdap . IDENT_0 . IDENT_1 . METHOD_1 IDENT_19 = METHOD_5 ( IDENT_17 , IDENT_11 , IDENT_15 ) ; java . util . Set < java . lang . String > IDENT_20 = com . google . common . collect . IDENT_12 . METHOD_6 ( IDENT_19 . METHOD_7 ( ) , IDENT_14 . METHOD_4 ( ) ) ; IDENT_10 . METHOD_8 ( com . google . common . collect . IDENT_12 . METHOD_9 ( IDENT_19 . METHOD_10 ( ) , IDENT_20 ) ) ; IDENT_9 . add ( IDENT_19 ) ; } java . util . Set < java . lang . String > IDENT_21 = new java . util . METHOD_11 ( com . google . common . collect . IDENT_12 . METHOD_6 ( IDENT_10 , IDENT_11 ) ) ; java . util . Map < java . lang . String , io . cdap . cdap . IDENT_0 . IDENT_1 . METHOD_1 > IDENT_22 = new java . util . HashMap ( ) ; for ( java . lang . String IDENT_23 : IDENT_21 ) { IDENT_22 . put ( IDENT_23 , METHOD_12 ( IDENT_23 , IDENT_15 ) ) ; } java . util . Set < java . lang . String > IDENT_24 = new java . util . HashSet ( ) ; for ( java . lang . String IDENT_23 : IDENT_21 ) { if ( ! ( IDENT_24 . add ( IDENT_23 ) ) ) { continue ; } io . cdap . cdap . IDENT_0 . IDENT_1 . METHOD_1 IDENT_19 = IDENT_22 . get ( IDENT_23 ) ; java . util . Set < java . lang . String > IDENT_25 = new java . util . HashSet ( IDENT_19 . METHOD_10 ( ) ) ; java . util . Set < java . lang . String > IDENT_26 = com . google . common . collect . IDENT_12 . METHOD_9 ( IDENT_25 , IDENT_19 . METHOD_13 ( ) ) ; java . util . Set < java . lang . String > IDENT_27 = com . google . common . collect . IDENT_12 . METHOD_9 ( IDENT_21 , IDENT_24 ) ; boolean IDENT_28 ; do { IDENT_28 = false ; for ( java . lang . String IDENT_29 : IDENT_27 ) { io . cdap . cdap . IDENT_0 . IDENT_1 . METHOD_1 IDENT_30 = IDENT_22 . get ( IDENT_29 ) ; java . util . Set < java . lang . String > IDENT_31 = com . google . common . collect . IDENT_12 . METHOD_9 ( IDENT_30 . METHOD_10 ( ) , IDENT_30 . METHOD_13 ( ) ) ; if ( ! ( com . google . common . collect . IDENT_12 . METHOD_6 ( IDENT_26 , IDENT_31 ) . isEmpty ( ) ) ) { if ( IDENT_25 . addAll ( IDENT_30 . METHOD_10 ( ) ) ) { IDENT_28 = true ; } } } } while ( IDENT_28 ) ; io . cdap . cdap . IDENT_0 . IDENT_1 . METHOD_1 IDENT_32 = METHOD_14 ( IDENT_25 ) ; IDENT_9 . add ( IDENT_32 ) ; IDENT_24 . addAll ( IDENT_32 . METHOD_13 ( ) ) ; } return IDENT_9 ; }
org . junit . Assert . assertEquals ( expected , actual ) 