METHOD_0 ( ) { io . cdap . cdap . IDENT_0 . id . IDENT_1 IDENT_2 = IDENT_3 . IDENT_4 . dataset ( STRING_0 ) ; io . cdap . cdap . api . dataset . lib . IDENT_5 . IDENT_6 . METHOD_1 ( STRING_1 , IDENT_2 , IDENT_7 . IDENT_8 ) ; final io . cdap . cdap . api . dataset . lib . IDENT_9 t = io . cdap . cdap . api . dataset . lib . IDENT_5 . IDENT_6 . getInstance ( IDENT_2 ) ; org . apache . IDENT_10 . IDENT_11 IDENT_12 = io . cdap . cdap . api . dataset . lib . IDENT_5 . IDENT_6 . METHOD_2 ( t ) ; IDENT_12 . execute ( new org . apache . IDENT_10 . IDENT_11 . METHOD_3 ( ) { @ io . cdap . cdap . api . dataset . lib . Override public void apply ( ) throws io . cdap . cdap . api . dataset . lib . Exception { for ( int i = 0 ; i < 1000 ; i ++ ) { byte [ ] key = io . cdap . cdap . api . common . IDENT_13 . METHOD_4 ( i ) ; t . write ( key , key ) ; } } } ) ; IDENT_12 . execute ( new org . apache . IDENT_10 . IDENT_11 . METHOD_3 ( ) { @ io . cdap . cdap . api . dataset . lib . Override public void apply ( ) throws io . cdap . cdap . api . dataset . lib . Exception { java . util . Iterator < io . cdap . cdap . api . dataset . lib . IDENT_14 < byte [ ] , byte [ ] > > IDENT_15 = t . METHOD_5 ( io . cdap . cdap . api . common . IDENT_13 . METHOD_4 ( 0 ) , io . cdap . cdap . api . common . IDENT_13 . METHOD_4 ( 1000 ) ) ; int IDENT_16 = 0 ; while ( IDENT_15 . hasNext ( ) ) { IDENT_16 ++ ; IDENT_15 . next ( ) ; } "<AssertPlaceHolder>" ; } } ) ; IDENT_12 . execute ( new org . apache . IDENT_10 . IDENT_11 . METHOD_3 ( ) { @ io . cdap . cdap . api . dataset . lib . Override public void apply ( ) throws io . cdap . cdap . api . dataset . lib . Exception { io . cdap . cdap . api . dataset . lib . IDENT_17 < io . cdap . cdap . api . dataset . lib . IDENT_14 < byte [ ] , byte [ ] > > IDENT_15 = t . METHOD_5 ( io . cdap . cdap . api . common . IDENT_13 . METHOD_4 ( 0 ) , io . cdap . cdap . api . common . IDENT_13 . METHOD_4 ( 200 ) ) ; int IDENT_16 = 0 ; while ( ( IDENT_15 . hasNext ( ) ) && ( IDENT_16 < 100 ) ) { IDENT_16 ++ ; IDENT_15 . next ( ) ; } IDENT_15 . close ( ) ; try { IDENT_15 . next ( ) ; org . junit . Assert . fail ( STRING_2 ) ; } catch ( java . util . IDENT_18 e ) { } } } ) ; io . cdap . cdap . api . dataset . lib . IDENT_5 . IDENT_6 . METHOD_6 ( IDENT_2 ) ; } next ( ) { return iterator . next ( ) ; }
org . junit . Assert . assertEquals ( 1000 , IDENT_16 ) 