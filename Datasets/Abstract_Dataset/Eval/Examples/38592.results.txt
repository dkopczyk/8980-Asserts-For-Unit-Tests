METHOD_0 ( ) { io . cdap . cdap . api . data . schema . Schema schema = METHOD_1 ( ) ; com . IDENT_0 . IDENT_1 . IDENT_2 IDENT_1 = new com . IDENT_0 . IDENT_1 . METHOD_2 ( ) ; IDENT_1 . METHOD_3 ( io . cdap . cdap . api . data . schema . Schema . class , io . cdap . cdap . app . runtime . spark . serializer . IDENT_3 . class ) ; java . io . ByteArrayOutputStream IDENT_4 = new java . io . ByteArrayOutputStream ( ) ; try ( com . IDENT_0 . IDENT_1 . io . IDENT_5 output = new com . IDENT_0 . IDENT_1 . io . METHOD_4 ( IDENT_4 ) ) { IDENT_1 . METHOD_5 ( output , schema ) ; } com . IDENT_0 . IDENT_1 . io . IDENT_6 input = new com . IDENT_0 . IDENT_1 . io . METHOD_6 ( IDENT_4 . toByteArray ( ) ) ; io . cdap . cdap . api . data . schema . Schema IDENT_7 = IDENT_1 . METHOD_7 ( input , io . cdap . cdap . api . data . schema . Schema . class ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( com . google . gson . stream . IDENT_8 , java . util . Map ) { reader . METHOD_8 ( ) ; io . cdap . cdap . api . data . schema . Schema . Type IDENT_9 = null ; io . cdap . cdap . api . data . schema . Schema . IDENT_10 IDENT_11 = null ; java . lang . String IDENT_12 = null ; java . util . List < java . lang . String > IDENT_13 = new java . util . ArrayList ( ) ; io . cdap . cdap . api . data . schema . Schema keys = null ; io . cdap . cdap . api . data . schema . Schema values = null ; java . util . List < io . cdap . cdap . api . data . schema . Schema . Field > fields = null ; io . cdap . cdap . api . data . schema . Schema IDENT_14 = null ; while ( reader . hasNext ( ) ) { java . lang . String name = reader . METHOD_9 ( ) ; switch ( name ) { case io . cdap . cdap . internal . io . IDENT_15 . IDENT_16 : IDENT_11 = Schema . IDENT_10 . METHOD_10 ( reader . METHOD_11 ( ) ) ; break ; case io . cdap . cdap . internal . io . IDENT_15 . IDENT_17 : IDENT_9 = Schema . Type . valueOf ( reader . METHOD_11 ( ) . METHOD_12 ( ) ) ; break ; case io . cdap . cdap . internal . io . IDENT_15 . IDENT_18 : IDENT_12 = reader . METHOD_11 ( ) ; if ( IDENT_9 == ( Schema . Type . IDENT_19 ) ) { IDENT_20 . put ( IDENT_12 , null ) ; } break ; case io . cdap . cdap . internal . io . IDENT_15 . IDENT_21 : IDENT_13 = METHOD_13 ( reader ) ; break ; case io . cdap . cdap . internal . io . IDENT_15 . IDENT_22 : IDENT_14 = read ( reader , IDENT_20 ) ; break ; case io . cdap . cdap . internal . io . IDENT_15 . IDENT_23 : keys = read ( reader , IDENT_20 ) ; break ; case io . cdap . cdap . internal . io . IDENT_15 . IDENT_24 : values = read ( reader , IDENT_20 ) ; break ; case io . cdap . cdap . internal . io . IDENT_15 . IDENT_25 : fields = METHOD_14 ( name , reader , IDENT_20 ) ; IDENT_20 . put ( IDENT_12 , io . cdap . cdap . api . data . schema . Schema . METHOD_15 ( IDENT_12 , fields ) ) ; break ; default : reader . METHOD_16 ( ) ; break ; } } reader . METHOD_17 ( ) ; if ( IDENT_9 == null ) { throw new java . lang . IllegalStateException ( STRING_0 ) ; } if ( IDENT_11 != null ) { return io . cdap . cdap . api . data . schema . Schema . of ( IDENT_11 ) ; } io . cdap . cdap . api . data . schema . Schema schema ; switch ( IDENT_9 ) { case IDENT_26 : schema = io . cdap . cdap . api . data . schema . Schema . METHOD_18 ( IDENT_14 ) ; break ; case IDENT_27 : schema = io . cdap . cdap . api . data . schema . Schema . METHOD_19 ( IDENT_13 ) ; break ; case IDENT_28 : schema = io . cdap . cdap . api . data . schema . Schema . METHOD_20 ( keys , values ) ; break ; case IDENT_19 : schema = io . cdap . cdap . api . data . schema . Schema . METHOD_15 ( IDENT_12 , fields ) ; break ; default : schema = io . cdap . cdap . api . data . schema . Schema . of ( IDENT_9 ) ; break ; } return schema ; }
org . junit . Assert . assertEquals ( schema , IDENT_7 ) 