METHOD_0 ( ) { co . IDENT_0 . IDENT_1 . spec . IDENT_2 IDENT_3 = new co . IDENT_0 . IDENT_1 . spec . METHOD_1 ( STRING_0 , new co . IDENT_0 . IDENT_1 . spec . METHOD_2 ( STRING_1 , INT_0 , 10 , 100 ) ) ; co . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 IDENT_6 = new co . IDENT_0 . IDENT_1 . IDENT_4 . METHOD_3 ( STRING_2 , STRING_3 , INT_1 , 100 , null , null ) ; co . IDENT_0 . IDENT_1 . IDENT_4 . METHOD_3 IDENT_7 = new co . IDENT_0 . IDENT_1 . IDENT_4 . METHOD_3 ( STRING_4 , STRING_5 , INT_1 , 100 , null , null ) ; co . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_8 . service . METHOD_4 ( IDENT_6 ) ; co . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_8 . service . METHOD_4 ( IDENT_7 ) ; IDENT_9 . METHOD_5 ( IDENT_3 ) ; co . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_8 . IDENT_10 . METHOD_6 ( IDENT_6 . getId ( ) ) ; try { co . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_8 . service . METHOD_7 ( IDENT_3 . getId ( ) ) ; } catch ( co . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_11 e ) { } "<AssertPlaceHolder>" ; } METHOD_8 ( java . lang . String ) { try { java . sql . IDENT_12 conn = IDENT_13 . METHOD_9 ( ) ; try { java . sql . IDENT_14 statement = conn . METHOD_10 ( STRING_6 ) ; statement . METHOD_11 ( 1 , id ) ; try { return IDENT_15 . METHOD_12 ( statement , co . IDENT_0 . IDENT_1 . IDENT_4 . METHOD_3 . class ) ; } finally { statement . close ( ) ; } } finally { conn . close ( ) ; } } catch ( java . sql . IDENT_16 e ) { throw new java . io . IOException ( ( STRING_7 + id ) , e ) ; } }
org . junit . Assert . assertNull ( co . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_8 . service . METHOD_8 ( IDENT_6 . getId ( ) ) ) 