METHOD_0 ( ) { co . IDENT_0 . IDENT_1 . spec . IDENT_2 IDENT_3 = new co . IDENT_0 . IDENT_1 . spec . METHOD_1 ( java . util . UUID . METHOD_2 ( ) . toString ( ) , new co . IDENT_0 . IDENT_1 . spec . METHOD_3 ( "name" , 10 , 100 , 1000 ) ) ; co . IDENT_0 . IDENT_1 . store . IDENT_3 . IDENT_4 . store . METHOD_4 ( IDENT_3 ) ; IDENT_3 = new co . IDENT_0 . IDENT_1 . spec . METHOD_1 ( IDENT_3 . getId ( ) , new co . IDENT_0 . IDENT_1 . spec . METHOD_3 ( "name" , 10 , 100 , INT_0 ) ) ; co . IDENT_0 . IDENT_1 . store . IDENT_3 . IDENT_4 . store . METHOD_4 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . String ) { try { java . sql . IDENT_5 conn = IDENT_6 . METHOD_6 ( ) ; try { java . sql . IDENT_7 statement = conn . METHOD_7 ( STRING_0 ) ; statement . METHOD_8 ( 1 , id ) ; try { return IDENT_8 . METHOD_9 ( statement , co . IDENT_0 . IDENT_1 . spec . METHOD_1 . class ) ; } finally { statement . close ( ) ; } } finally { conn . close ( ) ; } } catch ( java . sql . IDENT_9 e ) { co . IDENT_0 . IDENT_1 . store . IDENT_3 . IDENT_10 . LOG . error ( STRING_1 , id , e ) ; throw new java . io . IOException ( e ) ; } }
org . junit . Assert . assertEquals ( IDENT_3 , co . IDENT_0 . IDENT_1 . store . IDENT_3 . IDENT_4 . store . METHOD_5 ( IDENT_3 . getId ( ) ) ) 