METHOD_0 ( ) { IDENT_0 = alluxio . IDENT_1 . process . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_4 ) . METHOD_2 ( STRING_0 ) . METHOD_3 ( alluxio . server . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 ) . METHOD_4 ( 0 ) . METHOD_5 ( IDENT_10 . IDENT_11 ) . METHOD_6 ( IDENT_12 . IDENT_13 , STRING_1 ) . METHOD_6 ( IDENT_12 . IDENT_14 , STRING_2 ) . METHOD_6 ( IDENT_12 . IDENT_15 , STRING_3 ) . build ( ) ; IDENT_0 . start ( ) ; alluxio . IDENT_16 IDENT_17 = new alluxio . METHOD_7 ( STRING_4 ) ; alluxio . client . file . IDENT_18 fs = IDENT_0 . METHOD_8 ( ) ; fs . METHOD_9 ( IDENT_17 ) ; IDENT_0 . METHOD_10 ( alluxio . server . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_19 ) ; "<AssertPlaceHolder>" ; IDENT_0 . METHOD_11 ( ) ; } exists ( java . lang . String ) { return call ( new alluxio . IDENT_20 . IDENT_21 . IDENT_22 < java . lang . Boolean > ( ) { @ alluxio . IDENT_20 . Override public alluxio . IDENT_20 . Boolean call ( ) throws java . io . IOException { return IDENT_23 . exists ( path ) ; } @ alluxio . IDENT_20 . Override public java . lang . String toString ( ) { return java . lang . String . format ( STRING_5 , path ) ; } } ) ; }
org . junit . Assert . assertTrue ( fs . exists ( IDENT_17 ) ) 