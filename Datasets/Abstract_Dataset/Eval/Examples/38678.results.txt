METHOD_0 ( ) { java . io . File IDENT_0 = new java . io . File ( io . cdap . plugin . batch . source . IDENT_1 . IDENT_2 . METHOD_1 ( ) , STRING_0 ) ; java . lang . String IDENT_3 = STRING_1 ; io . cdap . cdap . api . data . schema . Schema IDENT_4 = io . cdap . cdap . api . data . schema . Schema . METHOD_2 ( STRING_2 , Schema . Field . of ( STRING_3 , io . cdap . cdap . api . data . schema . Schema . of ( Schema . Type . IDENT_5 ) ) , Schema . Field . of ( STRING_4 , io . cdap . cdap . api . data . schema . Schema . of ( Schema . Type . IDENT_6 ) ) ) ; java . lang . String IDENT_7 = STRING_5 ; io . cdap . cdap . test . IDENT_8 IDENT_9 = METHOD_3 ( IDENT_7 , IDENT_0 , STRING_6 , IDENT_3 , IDENT_4 ) ; org . apache . avro . Schema IDENT_10 = new org . apache . avro . Schema . METHOD_4 ( ) . parse ( io . cdap . plugin . batch . source . IDENT_1 . IDENT_11 . toString ( ) ) ; org . apache . avro . IDENT_12 . IDENT_13 record = new org . apache . avro . IDENT_12 . METHOD_5 ( IDENT_10 ) . set ( STRING_3 , Integer . MAX_VALUE ) . set ( STRING_7 , Long . MAX_VALUE ) . set ( STRING_4 , IDENT_0 . getAbsolutePath ( ) ) . build ( ) ; io . cdap . cdap . test . IDENT_14 < io . cdap . cdap . api . dataset . lib . IDENT_15 > IDENT_16 = METHOD_6 ( STRING_8 ) ; org . apache . avro . io . IDENT_17 < org . apache . avro . IDENT_12 . IDENT_13 > IDENT_18 = new org . apache . avro . IDENT_12 . METHOD_7 ( IDENT_10 ) ; org . apache . avro . file . IDENT_19 < org . apache . avro . IDENT_12 . IDENT_13 > IDENT_20 = new org . apache . avro . file . METHOD_8 ( IDENT_18 ) ; IDENT_20 . create ( IDENT_10 , IDENT_0 ) ; IDENT_20 . append ( record ) ; IDENT_20 . close ( ) ; IDENT_16 . METHOD_9 ( ) ; IDENT_9 . METHOD_10 ( IDENT_21 . IDENT_22 ) . METHOD_11 ( IDENT_23 . IDENT_24 , 5 , TimeUnit . IDENT_25 ) ; java . util . List < io . cdap . cdap . api . data . format . IDENT_26 > expected = com . google . common . collect . ImmutableList . of ( io . cdap . cdap . api . data . format . IDENT_26 . builder ( IDENT_4 ) . set ( STRING_3 , Integer . MAX_VALUE ) . set ( STRING_4 , IDENT_0 . METHOD_12 ( ) . toString ( ) ) . build ( ) ) ; io . cdap . cdap . test . IDENT_14 < io . cdap . cdap . api . dataset . table . IDENT_27 > IDENT_28 = METHOD_6 ( IDENT_3 ) ; java . util . List < io . cdap . cdap . api . data . format . IDENT_26 > output = io . cdap . cdap . IDENT_29 . mock . batch . IDENT_30 . METHOD_13 ( IDENT_28 ) ; "<AssertPlaceHolder>" ; } METHOD_13 ( org . apache . IDENT_31 . IDENT_32 . IDENT_33 ) { org . apache . avro . Schema IDENT_10 = new org . apache . avro . Schema . METHOD_4 ( ) . parse ( io . cdap . plugin . batch . IDENT_34 . IDENT_35 . toString ( ) ) ; java . util . Map < java . lang . String , java . lang . Integer > IDENT_36 = new java . util . HashMap ( ) ; for ( org . apache . IDENT_31 . IDENT_32 . IDENT_33 file : IDENT_37 . list ( ) ) { java . lang . String IDENT_38 = file . getName ( ) ; if ( IDENT_38 . METHOD_14 ( STRING_9 ) ) { org . apache . avro . io . IDENT_39 < org . apache . avro . IDENT_12 . IDENT_13 > IDENT_40 = new org . apache . avro . IDENT_12 . METHOD_15 ( IDENT_10 ) ; org . apache . avro . file . IDENT_41 < org . apache . avro . IDENT_12 . IDENT_13 > IDENT_42 = new org . apache . avro . file . METHOD_16 ( file . METHOD_17 ( ) , IDENT_40 ) ; for ( org . apache . avro . IDENT_12 . IDENT_13 record : IDENT_42 ) { IDENT_36 . put ( record . get ( STRING_10 ) . toString ( ) , ( ( java . lang . Integer ) ( record . get ( STRING_11 ) ) ) ) ; } IDENT_42 . close ( ) ; } else if ( IDENT_38 . METHOD_14 ( STRING_12 ) ) { org . apache . hadoop . fs . Path IDENT_43 = new org . apache . hadoop . fs . Path ( file . toString ( ) ) ; org . apache . IDENT_44 . avro . IDENT_45 . Builder < org . apache . avro . IDENT_12 . IDENT_13 > IDENT_46 = org . apache . IDENT_44 . avro . IDENT_45 . builder ( IDENT_43 ) ; org . apache . IDENT_44 . hadoop . IDENT_47 < org . apache . avro . IDENT_12 . IDENT_13 > reader = IDENT_46 . build ( ) ; org . apache . avro . IDENT_12 . IDENT_13 record = reader . read ( ) ; while ( record != null ) { IDENT_36 . put ( record . get ( STRING_10 ) . toString ( ) , ( ( java . lang . Integer ) ( record . get ( STRING_11 ) ) ) ) ; record = reader . read ( ) ; } } } return IDENT_36 ; }
org . junit . Assert . assertEquals ( expected , output ) 