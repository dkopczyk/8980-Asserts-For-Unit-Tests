METHOD_0 ( ) { io . cdap . plugin . IDENT_0 . IDENT_1 config = new io . cdap . plugin . IDENT_0 . METHOD_1 ( STRING_0 , null , STRING_1 , io . cdap . plugin . IDENT_2 . IDENT_3 . toString ( ) ) ; io . cdap . plugin . IDENT_0 IDENT_4 = new io . cdap . plugin . METHOD_2 ( config ) ; IDENT_4 . METHOD_3 ( io . cdap . plugin . IDENT_2 . IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( io . cdap . cdap . api . data . schema . Schema ) { try { io . cdap . cdap . api . data . schema . Schema IDENT_6 = io . cdap . cdap . api . data . schema . Schema . METHOD_5 ( this . config . schema ) ; if ( IDENT_7 != null ) { for ( io . cdap . cdap . api . data . schema . Schema . Field field : IDENT_7 . METHOD_6 ( ) ) { if ( ( IDENT_6 . METHOD_7 ( field . getName ( ) ) ) != null ) { io . cdap . cdap . api . data . schema . Schema out = IDENT_6 . METHOD_7 ( field . getName ( ) ) . METHOD_8 ( ) ; io . cdap . cdap . api . data . schema . Schema in = field . METHOD_8 ( ) ; if ( ! ( in . equals ( out ) ) ) { throw new java . lang . IllegalArgumentException ( ( ( STRING_2 + ( field . getName ( ) ) ) + STRING_3 ) ) ; } } } } return IDENT_6 ; } catch ( java . io . IOException e ) { throw new java . lang . IllegalArgumentException ( STRING_4 ) ; } }
org . junit . Assert . assertEquals ( io . cdap . plugin . IDENT_2 . IDENT_3 , IDENT_4 . METHOD_4 ( io . cdap . plugin . IDENT_2 . IDENT_5 ) ) 