METHOD_0 ( ) { java . lang . String str = STRING_0 ; org . eclipse . swt . IDENT_0 . IDENT_1 IDENT_2 = com . IDENT_3 . eclipse . IDENT_4 . util . IDENT_5 . METHOD_1 ( str , 5 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , int ) { int IDENT_6 = ( offset == 0 ) ? 0 : offset - 1 ; org . eclipse . swt . IDENT_0 . IDENT_1 IDENT_7 = null ; java . util . regex . IDENT_8 matcher = com . IDENT_3 . eclipse . IDENT_4 . util . IDENT_5 . IDENT_9 . matcher ( text ) ; while ( IDENT_6 >= 0 ) { boolean found = matcher . find ( IDENT_6 ) ; if ( ( found && ( ( matcher . start ( ) ) <= offset ) ) && ( ( matcher . end ( ) ) >= offset ) ) { IDENT_7 = new org . eclipse . swt . IDENT_0 . METHOD_2 ( matcher . start ( ) , ( ( matcher . end ( ) ) - ( matcher . start ( ) ) ) ) ; IDENT_6 OP_0 ; } else { break ; } } return IDENT_7 ; }
org . junit . Assert . assertEquals ( "name" , str . substring ( IDENT_2 . x , ( ( IDENT_2 . x ) + ( IDENT_2 . y ) ) ) ) 