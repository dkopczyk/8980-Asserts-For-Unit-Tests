METHOD_0 ( ) { net . IDENT_0 . core . business . configuration . IDENT_1 IDENT_2 = METHOD_1 ( net . IDENT_0 . core . business . configuration . IDENT_1 . class ) ; com . google . common . IDENT_3 . IDENT_4 IDENT_5 = METHOD_1 ( com . google . common . IDENT_3 . IDENT_4 . class ) ; expect ( IDENT_2 . METHOD_2 ( eq ( net . IDENT_0 . core . backend . manager . IDENT_6 ) , eq ( STRING_0 ) ) ) . andReturn ( null ) ; replay ( IDENT_2 , IDENT_5 ) ; net . IDENT_0 . core . backend . manager . IDENT_7 IDENT_8 = new net . IDENT_0 . core . backend . manager . METHOD_3 ( IDENT_2 , IDENT_5 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_2 , IDENT_5 ) ; } METHOD_4 ( java . lang . String , net . IDENT_0 . core . business . media . model . IDENT_9 ) { try { return new net . IDENT_0 . core . backend . manager . METHOD_3 . METHOD_5 ( ) . apply ( IDENT_2 . METHOD_2 ( IDENT_10 , id ) ) ; } catch ( net . IDENT_0 . core . business . configuration . exception . IDENT_11 e ) { throw new net . IDENT_0 . core . backend . exception . METHOD_6 ( IDENT_12 , e ) ; } }
org . junit . Assert . assertNull ( IDENT_8 . METHOD_4 ( STRING_0 , net . IDENT_0 . core . backend . manager . IDENT_6 ) ) 