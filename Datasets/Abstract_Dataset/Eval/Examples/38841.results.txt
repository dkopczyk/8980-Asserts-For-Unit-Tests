METHOD_0 ( ) { javax . net . IDENT_0 IDENT_1 = METHOD_1 ( javax . net . IDENT_0 . class ) ; java . net . IDENT_2 IDENT_3 = METHOD_1 ( java . net . IDENT_2 . class ) ; expect ( IDENT_1 . METHOD_2 ( METHOD_3 ( java . net . IDENT_4 . class ) , METHOD_4 ( ) ) ) . andReturn ( IDENT_3 ) ; replay ( IDENT_1 , IDENT_3 ) ; net . IDENT_5 . core . business . streaming . IDENT_6 . device . IDENT_7 IDENT_8 = new net . IDENT_5 . core . business . streaming . IDENT_6 . device . METHOD_5 ( STRING_0 ) ; net . IDENT_5 . core . business . streaming . IDENT_6 . device . IDENT_9 device = new net . IDENT_5 . core . business . streaming . IDENT_6 . device . METHOD_6 ( STRING_1 , "name" , null , INT_0 , IDENT_8 ) ; java . net . IDENT_2 IDENT_10 = device . METHOD_7 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_1 , IDENT_3 ) ; } METHOD_7 ( javax . net . IDENT_0 ) { if ( ( ( IDENT_3 ) == null ) || ( IDENT_3 . METHOD_8 ( ) ) ) { IDENT_3 = IDENT_1 . METHOD_2 ( METHOD_9 ( ) , port ) ; } return IDENT_3 ; }
org . junit . Assert . assertNotNull ( IDENT_10 ) 