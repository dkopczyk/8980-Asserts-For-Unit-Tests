METHOD_0 ( ) { java . lang . String IDENT_0 = METHOD_1 ( ) . METHOD_2 ( 10 ) . METHOD_3 ( 2 ) . METHOD_4 ( 20 ) . METHOD_5 ( METHOD_6 ( ) . METHOD_7 ( uk . gov . IDENT_1 . api . it . IDENT_2 . IDENT_3 ) . METHOD_8 ( ) ) . build ( ) ; IDENT_4 . METHOD_9 ( uk . gov . IDENT_1 . api . it . IDENT_5 , null , null , uk . gov . IDENT_1 . api . it . IDENT_2 . IDENT_3 , null , null , null , null , null , null , IDENT_0 ) ; io . IDENT_6 . response . IDENT_7 response = METHOD_10 ( uk . gov . IDENT_1 . api . it . IDENT_8 , com . google . common . collect . ImmutableMap . of ( STRING_0 , uk . gov . IDENT_1 . api . it . IDENT_2 . IDENT_3 . toLowerCase ( ) ) ) . METHOD_11 ( 200 ) . METHOD_12 ( io . IDENT_6 . http . IDENT_9 . IDENT_10 ) . body ( STRING_1 , org . hamcrest . CoreMatchers . equalTo ( 3 ) ) ; java . util . List < java . util . Map < java . lang . String , java . lang . Object > > results = response . METHOD_13 ( ) . body ( ) . METHOD_14 ( ) . METHOD_15 ( STRING_2 ) ; "<AssertPlaceHolder>" ; } METHOD_16 ( java . lang . String ) { return new org . hamcrest . IDENT_11 < java . util . List < java . util . Map < java . lang . String , java . lang . Object > > > ( ) { @ uk . gov . IDENT_1 . api . it . Override MOD_0 boolean METHOD_17 ( java . util . List < java . util . Map < java . lang . String , java . lang . Object > > IDENT_12 ) { return IDENT_12 . stream ( ) . METHOD_18 ( ( result ) -> state . equals ( ( ( Map < java . lang . String , java . lang . Object > ) ( result . get ( STRING_0 ) ) ) . get ( STRING_3 ) ) ) ; } @ uk . gov . IDENT_1 . api . it . Override public void METHOD_19 ( org . hamcrest . IDENT_13 description ) { description . METHOD_20 ( java . lang . String . format ( STRING_4 , state ) ) ; } } ; }
org . junit . Assert . assertThat ( results , METHOD_16 ( uk . gov . IDENT_1 . api . it . IDENT_2 . IDENT_3 ) ) 