METHOD_0 ( ) { org . openscience . cdk . interfaces . IDENT_0 IDENT_1 = org . openscience . cdk . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_0 , 0 , ( - FLOAT_0 ) , FLOAT_1 ) ; org . openscience . cdk . interfaces . IDENT_0 IDENT_4 = org . openscience . cdk . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_0 , 0 , ( - FLOAT_2 ) , FLOAT_3 ) ; org . openscience . cdk . interfaces . IDENT_0 IDENT_5 = org . openscience . cdk . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_1 , 1 , FLOAT_4 , FLOAT_5 ) ; org . openscience . cdk . interfaces . IDENT_0 IDENT_6 = org . openscience . cdk . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_0 , 2 , ( - FLOAT_6 ) , FLOAT_7 ) ; org . openscience . cdk . interfaces . IDENT_0 IDENT_7 = org . openscience . cdk . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_2 , 0 , ( - FLOAT_8 ) , FLOAT_9 ) ; org . openscience . cdk . interfaces . IDENT_8 [ ] expected = new org . openscience . cdk . interfaces . IDENT_8 [ ] { new org . openscience . cdk . IDENT_9 . METHOD_2 ( IDENT_1 , IDENT_4 ) , new org . openscience . cdk . IDENT_9 . METHOD_2 ( IDENT_1 , IDENT_5 ) , new org . openscience . cdk . IDENT_9 . METHOD_2 ( IDENT_1 , IDENT_6 ) , new org . openscience . cdk . IDENT_9 . METHOD_2 ( IDENT_1 , IDENT_7 ) } ; org . openscience . cdk . interfaces . IDENT_8 [ ] actual = org . openscience . cdk . IDENT_2 . IDENT_10 . METHOD_3 ( IDENT_1 , new org . openscience . cdk . interfaces . IDENT_8 [ ] { expected [ 1 ] , expected [ 2 ] , expected [ 3 ] , expected [ 0 ] } ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , int , double , double ) { org . openscience . cdk . interfaces . IDENT_0 a = new org . openscience . cdk . IDENT_9 . METHOD_4 ( IDENT_11 ) ; a . METHOD_5 ( IDENT_12 ) ; a . METHOD_6 ( new javax . IDENT_13 . METHOD_7 ( x , y ) ) ; return a ; }
org . junit . Assert . assertThat ( expected , org . hamcrest . CoreMatchers . is ( actual ) ) 