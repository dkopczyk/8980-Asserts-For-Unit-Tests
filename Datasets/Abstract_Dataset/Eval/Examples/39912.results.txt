METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; org . openscience . cdk . IDENT_1 . IDENT_2 IDENT_3 = new org . openscience . cdk . IDENT_1 . METHOD_1 ( org . openscience . cdk . IDENT_4 . getInstance ( ) ) ; org . openscience . cdk . interfaces . IDENT_5 IDENT_6 = IDENT_3 . METHOD_2 ( IDENT_0 ) ; org . openscience . cdk . IDENT_7 . IDENT_8 . METHOD_3 ( IDENT_6 ) ; int count = 0 ; for ( org . openscience . cdk . interfaces . IDENT_9 b : IDENT_6 . METHOD_4 ( ) ) { if ( ( b . METHOD_5 ( IDENT_10 . IDENT_11 ) ) && ( b . METHOD_6 ( ) . equals ( IDENT_9 . IDENT_12 . IDENT_13 ) ) ) { count ++ ; } } "<AssertPlaceHolder>" ; } equals ( org . openscience . cdk . graph . IDENT_14 . IDENT_15 ) { if ( ( ( METHOD_7 ( ) ) != ( IDENT_16 . METHOD_7 ( ) ) ) || ( ( METHOD_8 ( ) ) != ( IDENT_16 . METHOD_8 ( ) ) ) ) throw new org . openscience . cdk . graph . IDENT_14 . exception . METHOD_9 ( ) ; double [ ] [ ] IDENT_17 = IDENT_16 . METHOD_10 ( ) ; for ( int i = 0 ; i < ( m ) ; i ++ ) for ( int j = 0 ; j < ( n ) ; j ++ ) if ( ! ( ( array [ i ] [ j ] ) == ( IDENT_17 [ i ] [ j ] ) ) ) return false ; return true ; }
org . junit . Assert . assertEquals ( 5 , count ) 