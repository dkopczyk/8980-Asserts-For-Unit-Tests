METHOD_0 ( ) { org . openscience . cdk . interfaces . IDENT_0 builder = org . openscience . cdk . IDENT_1 . getInstance ( ) ; org . openscience . cdk . interfaces . IDENT_2 IDENT_3 = builder . newInstance ( org . openscience . cdk . interfaces . IDENT_2 . class ) ; IDENT_3 . METHOD_1 ( builder . newInstance ( org . openscience . cdk . interfaces . IDENT_4 . class , STRING_0 ) ) ; IDENT_3 . METHOD_1 ( builder . newInstance ( org . openscience . cdk . interfaces . IDENT_4 . class , STRING_0 ) ) ; IDENT_3 . METHOD_1 ( builder . newInstance ( org . openscience . cdk . interfaces . IDENT_4 . class , STRING_1 ) ) ; IDENT_3 . METHOD_2 ( 0 , 1 , IDENT_5 . IDENT_6 . IDENT_7 ) ; IDENT_3 . METHOD_2 ( 1 , 2 , IDENT_5 . IDENT_6 . IDENT_7 ) ; org . openscience . cdk . IDENT_8 . matchers . IDENT_9 query = new org . openscience . cdk . IDENT_8 . matchers . METHOD_3 ( org . openscience . cdk . IDENT_1 . getInstance ( ) ) ; org . openscience . cdk . IDENT_8 . matchers . IDENT_10 IDENT_11 = new org . openscience . cdk . IDENT_8 . matchers . METHOD_4 ( org . openscience . cdk . IDENT_1 . getInstance ( ) ) ; IDENT_11 . METHOD_5 ( STRING_0 ) ; org . openscience . cdk . IDENT_8 . matchers . IDENT_12 . IDENT_13 IDENT_14 = new org . openscience . cdk . IDENT_8 . matchers . IDENT_12 . METHOD_6 ( org . openscience . cdk . IDENT_1 . getInstance ( ) ) ; org . openscience . cdk . interfaces . IDENT_5 IDENT_15 = new org . openscience . cdk . IDENT_8 . matchers . METHOD_7 ( IDENT_11 , IDENT_14 , IDENT_5 . IDENT_6 . IDENT_7 , org . openscience . cdk . IDENT_1 . getInstance ( ) ) ; org . openscience . cdk . IDENT_8 . matchers . IDENT_10 IDENT_16 = new org . openscience . cdk . IDENT_8 . matchers . METHOD_4 ( org . openscience . cdk . IDENT_1 . getInstance ( ) ) ; IDENT_16 . METHOD_5 ( STRING_0 ) ; org . openscience . cdk . interfaces . IDENT_5 IDENT_17 = new org . openscience . cdk . IDENT_8 . matchers . METHOD_7 ( IDENT_14 , IDENT_16 , IDENT_5 . IDENT_6 . IDENT_7 , org . openscience . cdk . IDENT_1 . getInstance ( ) ) ; query . METHOD_1 ( IDENT_11 ) ; query . METHOD_1 ( IDENT_14 ) ; query . METHOD_1 ( IDENT_16 ) ; query . METHOD_2 ( IDENT_15 ) ; query . METHOD_2 ( IDENT_17 ) ; java . util . List < java . util . List < org . openscience . cdk . IDENT_18 . algorithm . IDENT_19 . IDENT_20 > > list = org . openscience . cdk . IDENT_18 . algorithm . IDENT_19 . IDENT_21 . METHOD_8 ( IDENT_3 , query , true ) ; "<AssertPlaceHolder>" ; } isEmpty ( ) { if ( ( ( IDENT_22 ) != null ) && ( ! ( IDENT_22 . isEmpty ( ) ) ) ) return false ; if ( ( ( IDENT_23 ) != null ) && ( ! ( IDENT_23 . isEmpty ( ) ) ) ) return false ; if ( ( ( IDENT_24 ) != null ) && ( ! ( IDENT_24 . isEmpty ( ) ) ) ) return false ; if ( ( ( IDENT_25 ) != null ) && ( ! ( IDENT_25 . isEmpty ( ) ) ) ) return false ; return true ; }
org . junit . Assert . assertTrue ( list . isEmpty ( ) ) 