METHOD_0 ( ) { org . openscience . cdk . interfaces . IDENT_0 IDENT_1 = new org . openscience . cdk . METHOD_1 ( STRING_0 ) ; org . openscience . cdk . interfaces . IDENT_0 IDENT_2 = new org . openscience . cdk . METHOD_1 ( STRING_0 ) ; org . openscience . cdk . interfaces . IDENT_3 . IDENT_4 IDENT_5 = org . openscience . cdk . interfaces . IDENT_3 . IDENT_4 . IDENT_6 ; org . openscience . cdk . IDENT_7 . tools . IDENT_8 instance = new org . openscience . cdk . IDENT_7 . tools . METHOD_2 ( ) ; java . lang . Integer expResult = INT_0 ; java . lang . Integer result = instance . METHOD_3 ( IDENT_1 , IDENT_2 , IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , java . lang . String , org . openscience . cdk . interfaces . IDENT_3 . IDENT_4 ) { int IDENT_9 = - 1 ; for ( Map . Entry < java . lang . Integer , org . openscience . cdk . IDENT_7 . helper . IDENT_10 > entry : org . openscience . cdk . IDENT_7 . tools . METHOD_2 . IDENT_11 . entrySet ( ) ) { org . openscience . cdk . IDENT_7 . helper . IDENT_10 IDENT_12 = entry . getValue ( ) ; java . lang . String IDENT_13 = IDENT_12 . METHOD_4 ( ) ; java . lang . String IDENT_14 = IDENT_12 . METHOD_5 ( ) ; if ( ( ( IDENT_13 . equalsIgnoreCase ( IDENT_1 ) ) && ( IDENT_14 . equalsIgnoreCase ( IDENT_2 ) ) ) || ( ( IDENT_14 . equalsIgnoreCase ( IDENT_1 ) ) && ( IDENT_13 . equalsIgnoreCase ( IDENT_2 ) ) ) ) { org . openscience . cdk . interfaces . IDENT_3 . IDENT_4 order = IDENT_12 . METHOD_6 ( ) ; if ( ( order . compareTo ( IDENT_5 ) ) == 0 ) { IDENT_9 = IDENT_12 . METHOD_7 ( ) ; } } } return IDENT_9 ; }
org . junit . Assert . assertEquals ( expResult , result ) 