METHOD_0 ( ) { org . openscience . cdk . config . IDENT_0 IDENT_1 = org . openscience . cdk . config . IDENT_2 . getInstance ( ) ; org . openscience . cdk . interfaces . IDENT_3 c = IDENT_1 . METHOD_1 ( STRING_0 ) ; org . openscience . cdk . interfaces . IDENT_3 IDENT_4 = IDENT_1 . METHOD_1 ( STRING_1 ) ; org . openscience . cdk . interfaces . IDENT_3 n = IDENT_1 . METHOD_1 ( STRING_2 ) ; org . openscience . cdk . interfaces . IDENT_3 o = IDENT_1 . METHOD_1 ( STRING_3 ) ; org . openscience . cdk . IDENT_5 . IDENT_6 IDENT_7 = new org . openscience . cdk . IDENT_5 . METHOD_2 ( ) ; IDENT_7 . METHOD_3 ( c , 3 , 7 ) ; IDENT_7 . METHOD_3 ( IDENT_4 , 3 , 7 ) ; IDENT_7 . METHOD_3 ( o , 3 , 7 ) ; IDENT_7 . METHOD_3 ( n , 3 , 7 ) ; double IDENT_8 = INT_0 ; double IDENT_9 = INT_1 ; org . openscience . cdk . IDENT_5 . IDENT_10 gen = new org . openscience . cdk . IDENT_5 . METHOD_4 ( builder , IDENT_8 , IDENT_9 , IDENT_7 ) ; org . openscience . cdk . interfaces . IDENT_11 IDENT_12 = gen . METHOD_5 ( ) ; for ( org . openscience . cdk . interfaces . IDENT_13 f : IDENT_12 . METHOD_6 ( ) ) { for ( org . openscience . cdk . interfaces . IDENT_3 i : f . METHOD_7 ( ) ) { int count = f . METHOD_8 ( i ) ; "<AssertPlaceHolder>" ; } } } METHOD_8 ( org . openscience . cdk . interfaces . IDENT_3 ) { int count = 0 ; java . util . Iterator < org . openscience . cdk . interfaces . IDENT_13 > IDENT_14 = components . iterator ( ) ; while ( IDENT_14 . hasNext ( ) ) { count += IDENT_14 . next ( ) . METHOD_8 ( IDENT_15 ) ; } return count ; }
org . junit . Assert . assertTrue ( ( count <= 7 ) ) 