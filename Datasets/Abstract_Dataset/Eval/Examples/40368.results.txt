METHOD_0 ( ) { org . openscience . cdk . interfaces . IDENT_0 IDENT_1 = mock ( org . openscience . cdk . interfaces . IDENT_0 . class ) ; org . openscience . cdk . interfaces . IDENT_2 container = mock ( org . openscience . cdk . interfaces . IDENT_2 . class ) ; org . openscience . cdk . hash . IDENT_3 IDENT_4 = org . openscience . cdk . hash . IDENT_5 . IDENT_6 ; when ( container . METHOD_1 ( IDENT_1 ) ) . thenReturn ( 1 ) ; "<AssertPlaceHolder>" ; verify ( container , times ( 1 ) ) . METHOD_1 ( IDENT_1 ) ; METHOD_2 ( IDENT_1 , container ) ; } encode ( long [ ] , long [ ] ) { boolean IDENT_7 = IDENT_8 . encode ( IDENT_9 , next ) ; return ( IDENT_10 . encode ( IDENT_9 , next ) ) || IDENT_7 ; }
org . junit . Assert . assertThat ( IDENT_4 . encode ( IDENT_1 , container ) , org . hamcrest . CoreMatchers . is ( 1 ) ) 