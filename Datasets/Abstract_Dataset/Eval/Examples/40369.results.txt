METHOD_0 ( ) { org . openscience . cdk . hash . IDENT_0 IDENT_1 = mock ( org . openscience . cdk . hash . IDENT_0 . class ) ; org . openscience . cdk . hash . IDENT_2 IDENT_3 = mock ( org . openscience . cdk . hash . IDENT_2 . class ) ; org . openscience . cdk . interfaces . IDENT_4 container = mock ( org . openscience . cdk . interfaces . IDENT_4 . class ) ; org . openscience . cdk . hash . IDENT_5 generator = new org . openscience . cdk . hash . METHOD_1 ( IDENT_1 , IDENT_3 ) ; when ( IDENT_1 . METHOD_2 ( container ) ) . thenReturn ( new long [ ] { 1 , 1 , 1 , 1 } ) ; when ( IDENT_3 . next ( 1L ) ) . thenReturn ( 1L ) ; long hashCode = generator . METHOD_2 ( container ) ; verify ( IDENT_1 , times ( 1 ) ) . METHOD_2 ( container ) ; verify ( IDENT_3 , times ( 3 ) ) . next ( 1L ) ; METHOD_3 ( IDENT_1 , container , IDENT_3 ) ; long expected = ( ( ( INT_0 OP_0 1L ) OP_0 1L ) OP_0 1L ) OP_0 1L ; "<AssertPlaceHolder>" ; } next ( long ) { IDENT_6 = IDENT_6 OP_0 ( IDENT_6 << INT_1 ) ; IDENT_6 = IDENT_6 OP_0 ( IDENT_6 > > > INT_2 ) ; return IDENT_6 OP_0 ( IDENT_6 << 4 ) ; }
org . junit . Assert . assertThat ( hashCode , org . hamcrest . CoreMatchers . is ( expected ) ) 