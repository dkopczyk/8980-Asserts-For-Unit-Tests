METHOD_0 ( ) { final byte [ ] bytes = new byte [ ] { STRING_0 , STRING_1 , STRING_2 , STRING_3 } ; METHOD_1 ( bytes , 1 ) ; int IDENT_0 = reader . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { int length = 0 ; byte [ ] IDENT_1 = new byte [ INT_0 ] ; while ( ( IDENT_1 [ ( length ++ ) ] = METHOD_3 ( ) ) != ( IDENT_2 . IDENT_3 ) ) ; METHOD_3 ( ) ; int IDENT_4 = 0 ; boolean IDENT_5 = ( ( IDENT_1 . length ) > 0 ) && ( ( IDENT_1 [ 0 ] ) == ( IDENT_2 . IDENT_6 ) ) ; for ( int i = length - 2 , j = 0 ; i > ( IDENT_5 ? 0 : - 1 ) ; i OP_0 , j ++ ) { IDENT_4 += ( ( int ) ( ( java . lang . Math . METHOD_4 ( 10 , j ) ) * ( ( IDENT_1 [ i ] ) - ( IDENT_2 . IDENT_7 ) ) ) ) ; } IDENT_4 = IDENT_4 * ( IDENT_5 ? - 1 : 1 ) ; return IDENT_4 ; }
org . junit . Assert . assertEquals ( 10 , IDENT_0 ) 