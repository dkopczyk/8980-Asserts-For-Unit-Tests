METHOD_0 ( ) { reader . connect ( info ) ; java . util . List < com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . model . IDENT_4 > IDENT_5 = reader . METHOD_1 ( com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . IDENT_6 . IDENT_7 , com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . IDENT_6 . IDENT_8 ) ; java . util . List < com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . model . IDENT_9 > IDENT_10 = reader . METHOD_2 ( IDENT_5 ) ; "<AssertPlaceHolder>" ; for ( com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . model . IDENT_9 IDENT_11 : IDENT_10 ) { System . out . println ( IDENT_11 ) ; } } METHOD_2 ( java . util . List ) { if ( ( connection ) == null ) { return null ; } java . util . List < com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . model . IDENT_9 > IDENT_12 = new java . util . ArrayList < com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . model . IDENT_9 > ( ) ; java . sql . IDENT_13 IDENT_14 = null ; for ( com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . model . IDENT_4 IDENT_15 : IDENT_16 ) { java . util . HashSet < java . lang . String > IDENT_17 = METHOD_3 ( IDENT_15 ) ; java . util . Map < java . lang . String , com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . model . IDENT_9 > IDENT_18 = new java . util . HashMap < java . lang . String , com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . model . IDENT_9 > ( ) ; java . sql . ResultSet res = null ; try { if ( IDENT_19 . IDENT_20 . METHOD_4 ( IDENT_21 ) ) { if ( IDENT_14 == null ) { IDENT_14 = METHOD_5 ( ) ; } IDENT_14 . METHOD_6 ( 1 , IDENT_15 . getName ( ) ) ; res = IDENT_14 . METHOD_7 ( ) ; } else { res = connection . METHOD_8 ( ) . METHOD_9 ( IDENT_15 . METHOD_10 ( ) , IDENT_15 . METHOD_11 ( ) , IDENT_15 . getName ( ) ) ; } } catch ( java . lang . Exception e ) { continue ; } while ( res . next ( ) ) { java . lang . String IDENT_22 ; java . lang . String IDENT_23 ; java . lang . String IDENT_24 ; java . lang . String IDENT_25 ; if ( IDENT_19 . IDENT_20 . METHOD_4 ( IDENT_21 ) ) { IDENT_23 = res . getString ( 3 ) ; IDENT_22 = res . getString ( 4 ) ; IDENT_24 = res . getString ( 6 ) ; IDENT_25 = res . getString ( 7 ) ; } else { IDENT_24 = res . getString ( com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . IDENT_26 . IDENT_27 ) ; IDENT_25 = res . getString ( com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . IDENT_26 . IDENT_28 ) ; IDENT_23 = res . getString ( com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . IDENT_26 . IDENT_29 ) ; IDENT_22 = res . getString ( com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . IDENT_26 . IDENT_30 ) ; } java . lang . String IDENT_31 = ( IDENT_24 + STRING_0 ) + IDENT_22 ; if ( IDENT_18 . METHOD_12 ( ) . contains ( IDENT_31 ) ) { com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . model . IDENT_9 info = ( ( com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . model . IDENT_9 ) ( IDENT_18 . get ( IDENT_31 ) ) ) ; if ( ! ( info . METHOD_13 ( ) . containsKey ( IDENT_25 ) ) ) { info . METHOD_14 ( IDENT_25 , IDENT_23 ) ; } continue ; } com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . model . IDENT_9 IDENT_32 = new com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . model . METHOD_15 ( ) ; IDENT_32 . METHOD_16 ( IDENT_15 . getName ( ) ) ; IDENT_32 . METHOD_17 ( IDENT_24 ) ; IDENT_32 . setName ( IDENT_22 ) ; IDENT_32 . METHOD_14 ( IDENT_25 , IDENT_23 ) ; if ( IDENT_17 . contains ( IDENT_23 ) ) { IDENT_32 . METHOD_18 ( true ) ; IDENT_32 . METHOD_19 ( true ) ; } else { IDENT_32 . METHOD_20 ( true ) ; } IDENT_18 . put ( IDENT_31 , IDENT_32 ) ; IDENT_12 . add ( IDENT_32 ) ; com . IDENT_0 . IDENT_1 . extension . plugin . IDENT_2 . IDENT_3 . IDENT_26 . logger . debug ( IDENT_32 . toString ( ) ) ; } res . close ( ) ; } if ( IDENT_14 != null ) { IDENT_14 . close ( ) ; IDENT_14 = null ; } return IDENT_12 ; }
org . junit . Assert . assertThat ( IDENT_10 . size ( ) , org . hamcrest . CoreMatchers . is ( 1 ) ) 