run ( ) { java . io . File IDENT_0 = java . io . File . METHOD_0 ( STRING_0 , STRING_1 ) ; IDENT_1 . IDENT_2 . IDENT_3 . client . IDENT_4 . methods . IDENT_5 . IDENT_6 . IDENT_7 IDENT_8 = new IDENT_1 . IDENT_2 . IDENT_3 . client . IDENT_4 . methods . IDENT_5 . IDENT_6 . METHOD_1 ( IDENT_0 ) ; IDENT_1 . IDENT_2 . IDENT_3 . client . IDENT_4 . methods . IDENT_5 . IDENT_9 . IDENT_10 IDENT_11 = new IDENT_1 . IDENT_2 . IDENT_3 . client . IDENT_4 . methods . IDENT_5 . IDENT_9 . METHOD_2 ( IDENT_8 ) ; "<AssertPlaceHolder>" ; IDENT_0 . delete ( ) ; java . io . File IDENT_12 = IDENT_1 . IDENT_2 . IDENT_3 . client . IDENT_4 . methods . IDENT_5 . IDENT_9 . IDENT_13 . METHOD_3 ( ) ; IDENT_1 . IDENT_2 . IDENT_3 . client . IDENT_4 . methods . IDENT_5 . IDENT_9 . IDENT_13 . METHOD_4 ( METHOD_4 , true ) ; METHOD_4 = IDENT_1 . IDENT_2 . IDENT_3 . client . IDENT_4 . methods . IDENT_5 . IDENT_9 . IDENT_13 . METHOD_3 ( true , 100 ) ; IDENT_1 . IDENT_2 . IDENT_3 . client . IDENT_4 . methods . IDENT_5 . IDENT_9 . IDENT_13 . METHOD_4 ( METHOD_4 , false ) ; } METHOD_5 ( long ) { if ( ( position < 0 ) || ( position > ( ( length ( ) ) - 1 ) ) ) { position = - 1 ; return false ; } if ( ( ( ( buffer ) != null ) && ( position >= ( this . position ) ) ) && ( position < ( ( this . position ) + ( buffer . length ( ) ) ) ) ) { buffer = buffer . substring ( ( ( int ) ( position - ( this . position ) ) ) ) ; } else { buffer = null ; } this . position = position ; return true ; }
org . junit . Assert . assertFalse ( IDENT_11 . METHOD_5 ( 0 ) ) 