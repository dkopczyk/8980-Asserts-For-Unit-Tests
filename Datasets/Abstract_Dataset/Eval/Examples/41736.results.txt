METHOD_0 ( ) { java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 } ; for ( java . lang . String page : IDENT_0 ) { driver . get ( IDENT_1 . METHOD_1 ( page ) ) ; org . openqa . selenium . IDENT_2 IDENT_3 = driver . METHOD_2 ( org . openqa . selenium . IDENT_4 . id ( STRING_6 ) ) ; "<AssertPlaceHolder>" ; } } METHOD_3 ( ) { java . lang . Object value = execute ( IDENT_5 . IDENT_6 , com . google . common . collect . ImmutableMap . of ( STRING_7 , id ) ) . getValue ( ) ; try { return ( ( java . lang . Boolean ) ( value ) ) ; } catch ( java . lang . IDENT_7 ex ) { throw new org . openqa . selenium . METHOD_4 ( ( STRING_8 + value ) , ex ) ; } }
org . junit . Assert . assertTrue ( page , IDENT_3 . METHOD_3 ( ) ) 