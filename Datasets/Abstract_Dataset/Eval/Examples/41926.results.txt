METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( 0L ) ) . thenReturn ( INT_0 ) ; when ( IDENT_0 . METHOD_2 ( INT_0 ) ) . thenReturn ( false ) ; when ( IDENT_1 . apply ( IDENT_2 ) ) . thenReturn ( null ) ; org . openqa . selenium . support . ui . IDENT_3 < org . openqa . selenium . IDENT_4 > IDENT_5 = new org . openqa . selenium . support . ui . IDENT_6 < org . openqa . selenium . IDENT_4 > ( IDENT_2 , IDENT_0 , IDENT_7 ) . METHOD_3 ( 0 , TimeUnit . IDENT_8 ) ; try { IDENT_5 . METHOD_4 ( IDENT_1 ) ; org . junit . Assert . fail ( ) ; } catch ( org . openqa . selenium . IDENT_9 expected ) { "<AssertPlaceHolder>" ; } } METHOD_5 ( ) { return IDENT_10 ; }
org . junit . Assert . assertNull ( expected . METHOD_5 ( ) ) 