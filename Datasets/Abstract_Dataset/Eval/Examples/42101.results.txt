METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . core . IDENT_4 . IDENT_5 c = IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . test . matcher . graph . IDENT_6 . dataset . METHOD_1 ( ) . METHOD_2 ( STRING_0 ) ; java . util . Map < IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . core . IDENT_4 . IDENT_5 , IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . core . matcher . IDENT_7 . IDENT_8 > expected = new java . util . HashMap < IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . core . IDENT_4 . IDENT_5 , IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . core . matcher . IDENT_7 . IDENT_8 > ( ) ; expected . put ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . test . matcher . graph . IDENT_6 . dataset . METHOD_1 ( ) . METHOD_2 ( STRING_1 ) , IDENT_8 . IDENT_9 ) ; expected . put ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . test . matcher . graph . IDENT_6 . dataset . METHOD_1 ( ) . METHOD_2 ( STRING_2 ) , IDENT_8 . IDENT_10 ) ; expected . put ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . test . matcher . graph . IDENT_6 . dataset . METHOD_1 ( ) . METHOD_2 ( STRING_3 ) , IDENT_8 . IDENT_10 ) ; expected . put ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . test . matcher . graph . IDENT_6 . dataset . METHOD_1 ( ) . METHOD_2 ( STRING_4 0 ) , IDENT_8 . IDENT_9 ) ; expected . put ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . test . matcher . graph . IDENT_6 . dataset . METHOD_1 ( ) . METHOD_2 ( STRING_0 ) , IDENT_8 . IDENT_11 ) ; expected . put ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . test . matcher . graph . IDENT_6 . dataset . METHOD_1 ( ) . METHOD_2 ( STRING_5 ) , IDENT_8 . IDENT_10 ) ; expected . put ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . test . matcher . graph . IDENT_6 . dataset . METHOD_1 ( ) . METHOD_2 ( STRING_6 ) , IDENT_8 . IDENT_10 ) ; expected . put ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . test . matcher . graph . IDENT_6 . dataset . METHOD_1 ( ) . METHOD_2 ( STRING_7 ) , IDENT_8 . IDENT_9 ) ; expected . put ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . test . matcher . graph . IDENT_6 . dataset . METHOD_1 ( ) . METHOD_2 ( STRING_8 ) , IDENT_8 . IDENT_10 ) ; expected . put ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . test . matcher . graph . IDENT_6 . dataset . METHOD_1 ( ) . METHOD_2 ( STRING_9 ) , IDENT_8 . IDENT_10 ) ; expected . put ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . test . matcher . graph . IDENT_6 . dataset . METHOD_1 ( ) . METHOD_2 ( STRING_4 ) , IDENT_8 . IDENT_10 ) ; java . util . Map < IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . core . IDENT_4 . IDENT_5 , IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . core . matcher . IDENT_7 . IDENT_8 > result = IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . test . matcher . graph . IDENT_6 . IDENT_12 . METHOD_3 ( c ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( IDENT_13 ) { return com . google . common . collect . ImmutableMap . METHOD_4 ( this . IDENT_14 . METHOD_5 ( ) . row ( source ) ) ; }
org . junit . Assert . assertEquals ( expected , result ) 