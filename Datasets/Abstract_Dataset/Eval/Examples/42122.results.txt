METHOD_0 ( ) { com . tinkerpop . IDENT_0 . IDENT_1 IDENT_2 = IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . graph . query ( ) . METHOD_1 ( STRING_0 , STRING_1 ) . METHOD_2 ( ) . iterator ( ) . next ( ) ; com . tinkerpop . IDENT_0 . IDENT_1 IDENT_10 = IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . graph . query ( ) . METHOD_1 ( STRING_0 , STRING_2 ) . METHOD_2 ( ) . iterator ( ) . next ( ) ; IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . graph . IDENT_11 < com . tinkerpop . IDENT_0 . IDENT_1 , com . tinkerpop . IDENT_0 . IDENT_12 > IDENT_13 = new IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_14 . IDENT_15 < com . tinkerpop . IDENT_0 . IDENT_1 , com . tinkerpop . IDENT_0 . IDENT_12 > ( new com . tinkerpop . IDENT_0 . IDENT_16 . IDENT_14 . METHOD_3 ( IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . graph ) ) ; IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . model . problem . IDENT_17 < com . tinkerpop . IDENT_0 . IDENT_12 , com . tinkerpop . IDENT_0 . IDENT_1 , IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . model . impl . IDENT_18 < com . tinkerpop . IDENT_0 . IDENT_12 , com . tinkerpop . IDENT_0 . IDENT_1 , java . lang . Double > > p = IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . graph . IDENT_19 . METHOD_4 ( IDENT_2 ) . in ( IDENT_13 ) . METHOD_5 ( ) . build ( ) ; java . util . List < java . lang . String > IDENT_20 = java . util . Arrays . asList ( STRING_1 , STRING_3 , STRING_4 , STRING_2 ) ; java . util . List < com . tinkerpop . IDENT_0 . IDENT_1 > IDENT_21 = IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . algorithm . IDENT_22 . METHOD_6 ( p ) . search ( IDENT_10 ) . METHOD_7 ( ) . get ( 0 ) ; for ( int i = 0 ; i < ( IDENT_21 . size ( ) ) ; i ++ ) { "<AssertPlaceHolder>" ; } } size ( ) { return elements . size ( ) ; }
org . junit . Assert . assertEquals ( IDENT_20 . get ( i ) , IDENT_21 . get ( i ) . getProperty ( STRING_0 ) ) 