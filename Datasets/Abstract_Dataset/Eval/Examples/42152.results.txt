METHOD_0 ( ) { IDENT_0 = new IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 , com . IDENT_7 . IDENT_8 . models . IDENT_9 . IDENT_10 ) ; IDENT_11 . add ( new IDENT_1 . IDENT_2 . IDENT_3 . METHOD_2 ( IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_12 , com . IDENT_7 . IDENT_8 . models . IDENT_9 . IDENT_13 ) ) ; IDENT_11 . add ( new IDENT_1 . IDENT_2 . IDENT_3 . METHOD_2 ( IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_12 , com . IDENT_7 . IDENT_8 . models . IDENT_9 . IDENT_14 ) ) ; IDENT_15 = METHOD_3 ( ) ; IDENT_16 . add ( new com . IDENT_7 . IDENT_8 . models . METHOD_4 ( com . IDENT_7 . IDENT_8 . models . IDENT_9 . IDENT_10 , com . IDENT_7 . IDENT_8 . models . IDENT_9 . IDENT_13 ) ) ; IDENT_17 = 1 ; METHOD_5 ( IDENT_15 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . util . List ) { org . junit . Assert . assertFalse ( IDENT_15 . isEmpty ( ) ) ; org . junit . Assert . assertTrue ( ( ( IDENT_15 . size ( ) ) == ( IDENT_17 ) ) ) ; for ( com . IDENT_7 . IDENT_8 . models . METHOD_4 IDENT_18 : IDENT_16 ) { org . junit . Assert . assertTrue ( IDENT_15 . contains ( IDENT_18 ) ) ; } }
org . junit . Assert . assertFalse ( IDENT_15 . contains ( new com . IDENT_7 . IDENT_8 . models . METHOD_4 ( com . IDENT_7 . IDENT_8 . models . IDENT_9 . IDENT_10 , com . IDENT_7 . IDENT_8 . models . IDENT_9 . IDENT_14 ) ) ) 