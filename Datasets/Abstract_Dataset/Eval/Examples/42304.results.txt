METHOD_0 ( ) { final java . lang . String [ ] [ ] results = new java . lang . String [ ] [ ] { new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 , STRING_3 , STRING_1 0 } , new java . lang . String [ ] { STRING_4 , STRING_5 , STRING_6 , STRING_3 , STRING_1 0 } } ; final java . util . List < java . lang . String > IDENT_0 = METHOD_1 ( STRING_7 ) ; final java . sql . ResultSet IDENT_1 = stmt . METHOD_2 ( STRING_8 ) ; int i = 0 ; while ( IDENT_1 . next ( ) ) { final java . util . List < java . lang . String > IDENT_2 = java . util . Arrays . asList ( results [ i ] ) ; for ( final java . lang . String IDENT_3 : IDENT_0 ) { IDENT_2 . contains ( java . lang . String . format ( STRING_9 , IDENT_3 , IDENT_1 . getString ( IDENT_3 ) ) ) ; } i ++ ; } "<AssertPlaceHolder>" ; IDENT_1 . close ( ) ; } getString ( java . lang . String ) { if ( org . IDENT_4 . IDENT_5 . impl . IDENT_6 . LOG . METHOD_3 ( ) ) { org . IDENT_4 . IDENT_5 . impl . IDENT_6 . LOG . debug ( STRING_10 , IDENT_7 ) ; } return METHOD_4 ( METHOD_5 ( IDENT_7 ) , java . lang . String . class ) ; }
org . junit . Assert . assertEquals ( 2 , i ) 