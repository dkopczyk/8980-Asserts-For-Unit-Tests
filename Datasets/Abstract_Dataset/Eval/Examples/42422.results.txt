METHOD_0 ( ) { java . util . Calendar IDENT_0 = java . util . Calendar . getInstance ( ) ; IDENT_0 . METHOD_1 ( java . util . IDENT_1 . METHOD_2 ( STRING_0 ) ) ; IDENT_0 . set ( INT_0 , Calendar . IDENT_2 , 5 , 10 , INT_1 , 5 ) ; IDENT_0 . set ( Calendar . IDENT_3 , 0 ) ; System . out . println ( IDENT_4 . IDENT_5 . format ( IDENT_0 . getTime ( ) ) ) ; System . out . println ( IDENT_0 . METHOD_3 ( ) ) ; com . IDENT_6 . IDENT_7 . IDENT_4 message = new com . IDENT_6 . IDENT_7 . METHOD_4 ( ) . METHOD_5 ( IDENT_0 . METHOD_3 ( ) ) . METHOD_6 ( STRING_1 ) . METHOD_7 ( STRING_2 ) . METHOD_8 ( IDENT_8 . IDENT_9 ) . METHOD_9 ( IDENT_10 . IDENT_11 ) . METHOD_5 ( IDENT_0 . METHOD_3 ( ) ) . METHOD_10 ( STRING_3 ) ; java . lang . String actual = message . METHOD_11 ( ) ; java . lang . String expected = STRING_4 ; "<AssertPlaceHolder>" ; } METHOD_11 ( ) { java . io . StringWriter IDENT_12 = new java . io . StringWriter ( ( ( msg ) == null ? INT_2 : ( msg . size ( ) ) + INT_2 ) ) ; try { METHOD_11 ( IDENT_12 ) ; } catch ( java . io . IOException e ) { throw new java . lang . IllegalStateException ( e ) ; } return IDENT_12 . toString ( ) ; }
org . junit . Assert . assertThat ( actual , org . hamcrest . Matchers . is ( expected ) ) 