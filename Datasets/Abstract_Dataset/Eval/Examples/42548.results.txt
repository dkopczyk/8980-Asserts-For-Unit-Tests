METHOD_0 ( ) { java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { "foo" , "bar" , STRING_0 } ; for ( java . lang . String key : IDENT_0 ) { org . apache . IDENT_1 . channel . jdbc . IDENT_2 type = org . apache . IDENT_1 . channel . jdbc . IDENT_2 . METHOD_1 ( key ) ; "<AssertPlaceHolder>" ; } } METHOD_1 ( java . lang . String ) { org . apache . IDENT_1 . channel . jdbc . IDENT_2 type = null ; try { type = org . apache . IDENT_1 . channel . jdbc . IDENT_2 . valueOf ( IDENT_3 . trim ( ) . METHOD_2 ( ) ) ; } catch ( java . lang . IllegalArgumentException ex ) { type = org . apache . IDENT_1 . channel . jdbc . IDENT_2 . IDENT_4 ; } return type ; }
org . junit . Assert . assertSame ( type , IDENT_2 . IDENT_4 ) 