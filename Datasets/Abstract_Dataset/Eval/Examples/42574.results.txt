METHOD_0 ( ) { System . out . println ( STRING_0 ) ; java . io . File IDENT_0 = com . IDENT_1 . util . IDENT_2 . METHOD_1 ( ) ; IDENT_0 . METHOD_2 ( ) ; java . io . File IDENT_3 = new java . io . File ( IDENT_0 , IDENT_4 . IDENT_5 ) ; IDENT_3 . METHOD_3 ( ) ; java . io . File IDENT_6 = new java . io . File ( IDENT_3 , STRING_1 ) ; System . out . println ( ( STRING_2 + ( IDENT_6 . getAbsolutePath ( ) ) ) ) ; IDENT_6 . METHOD_4 ( ) ; IDENT_6 . METHOD_2 ( ) ; com . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_4 IDENT_10 = new com . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_9 . METHOD_5 ( IDENT_0 ) ; final com . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_11 IDENT_12 = new com . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_9 . METHOD_6 ( IDENT_10 ) ; IDENT_12 . METHOD_7 ( ) ; IDENT_12 . METHOD_8 ( ) ; final java . util . concurrent . atomic . IDENT_13 IDENT_14 = new java . util . concurrent . atomic . METHOD_9 ( true ) ; java . lang . Thread t = new java . lang . Thread ( ) { public void run ( ) { try { IDENT_12 . next ( ) ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; } finally { IDENT_14 . set ( false ) ; } } } ; t . start ( ) ; com . IDENT_1 . util . IDENT_15 . sleep ( INT_0 ) ; IDENT_12 . close ( ) ; "<AssertPlaceHolder>" ; } get ( ) { if ( ( com . IDENT_1 . IDENT_7 . conf . IDENT_16 . IDENT_17 ) == null ) com . IDENT_1 . IDENT_7 . conf . IDENT_16 . IDENT_17 = new com . IDENT_1 . IDENT_7 . conf . METHOD_10 ( ) ; return com . IDENT_1 . IDENT_7 . conf . METHOD_10 . IDENT_17 ; }
org . junit . Assert . assertTrue ( IDENT_14 . get ( ) ) 