METHOD_0 ( ) { long IDENT_0 = METHOD_1 ( ) ; java . lang . String IDENT_1 = METHOD_2 ( ) ; METHOD_3 ( IDENT_1 , METHOD_4 ( IDENT_1 ) , null , IDENT_0 ) ; java . lang . String query = ( STRING_0 + IDENT_1 ) + STRING_1 ; java . util . Properties props = org . apache . phoenix . util . IDENT_2 . METHOD_5 ( org . apache . phoenix . IDENT_3 . IDENT_4 ) ; props . setProperty ( IDENT_5 . IDENT_6 , java . lang . Long . toString ( ( IDENT_0 + 2 ) ) ) ; java . sql . IDENT_7 conn = null ; java . sql . IDENT_8 statement = null ; try { try { conn = java . sql . IDENT_9 . METHOD_6 ( METHOD_7 ( ) , props ) ; statement = conn . METHOD_8 ( query ) ; java . sql . ResultSet rs = statement . METHOD_9 ( ) ; "<AssertPlaceHolder>" ; } finally { if ( statement != null ) { statement . close ( ) ; } } } finally { if ( conn != null ) { conn . close ( ) ; } } } next ( ) { if ( ! ( hasNext ( ) ) ) { throw new java . util . METHOD_10 ( ) ; } return IDENT_10 . get ( ( ( position ) ++ ) ) ; }
org . junit . Assert . assertFalse ( rs . next ( ) ) 