METHOD_0 ( ) { long IDENT_0 = METHOD_1 ( ) ; java . lang . String IDENT_1 = METHOD_2 ( ) ; java . sql . Date IDENT_2 = org . apache . phoenix . util . IDENT_3 . METHOD_3 ( STRING_0 ) ; IDENT_2 = new java . sql . Date ( ( ( IDENT_2 . getTime ( ) ) + INT_0 ) ) ; METHOD_4 ( IDENT_1 , METHOD_5 ( IDENT_1 ) , IDENT_2 , IDENT_0 ) ; java . lang . String query = STRING_1 ; java . util . Properties props = org . apache . phoenix . util . IDENT_4 . METHOD_6 ( org . apache . phoenix . IDENT_5 . IDENT_6 ) ; props . setProperty ( IDENT_7 . IDENT_8 , java . lang . Long . toString ( ( IDENT_0 + 2 ) ) ) ; java . sql . IDENT_9 conn = java . sql . IDENT_10 . METHOD_7 ( METHOD_8 ( ) , props ) ; try { java . sql . IDENT_11 statement = conn . METHOD_9 ( query ) ; statement . METHOD_10 ( 1 , IDENT_1 ) ; java . sql . IDENT_12 IDENT_13 = org . apache . phoenix . util . IDENT_3 . METHOD_11 ( ( ( IDENT_2 . getTime ( ) ) + ( 2 * ( org . apache . phoenix . util . IDENT_14 . IDENT_15 ) ) ) , INT_1 ) ; IDENT_13 . METHOD_12 ( 0 ) ; statement . METHOD_13 ( 2 , IDENT_13 ) ; statement . METHOD_13 ( 3 , IDENT_13 ) ; java . sql . ResultSet rs = statement . METHOD_14 ( ) ; int count = 0 ; while ( rs . next ( ) ) { count ++ ; } "<AssertPlaceHolder>" ; } finally { conn . close ( ) ; } } next ( ) { if ( ! ( hasNext ( ) ) ) { throw new java . util . METHOD_15 ( ) ; } return IDENT_16 . get ( ( ( position ) ++ ) ) ; }
org . junit . Assert . assertEquals ( 3 , count ) 