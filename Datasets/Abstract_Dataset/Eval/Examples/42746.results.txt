METHOD_0 ( ) { java . util . List < org . apache . phoenix . util . IDENT_0 > IDENT_1 = com . google . common . collect . ImmutableList . of ( new org . apache . phoenix . util . METHOD_1 ( STRING_0 , IDENT_2 . INSTANCE . METHOD_2 ( ) ) , new org . apache . phoenix . util . METHOD_1 ( STRING_1 , IDENT_3 . INSTANCE . METHOD_2 ( ) ) , new org . apache . phoenix . util . METHOD_1 ( STRING_2 , IDENT_4 . INSTANCE . METHOD_2 ( ) ) ) ; org . apache . hadoop . conf . Configuration conf = new org . apache . hadoop . conf . Configuration ( ) ; org . apache . phoenix . mapreduce . IDENT_5 . METHOD_3 ( conf , IDENT_1 ) ; java . util . List < org . apache . phoenix . util . METHOD_1 > IDENT_6 = org . apache . phoenix . mapreduce . IDENT_5 . METHOD_4 ( conf ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . apache . hadoop . conf . Configuration ) { return com . google . common . collect . Lists . newArrayList ( com . google . common . collect . IDENT_7 . transform ( com . google . common . base . IDENT_8 . METHOD_5 ( STRING_3 ) . split ( conf . get ( org . apache . phoenix . mapreduce . IDENT_5 . IDENT_9 ) ) , new com . google . common . base . IDENT_10 < java . lang . String , org . apache . phoenix . util . METHOD_1 > ( ) { @ javax . annotation . IDENT_11 @ org . apache . phoenix . mapreduce . Override public org . apache . phoenix . util . METHOD_1 apply ( @ javax . annotation . IDENT_11 java . lang . String input ) { if ( input . isEmpty ( ) ) { return null ; } return org . apache . phoenix . util . METHOD_1 . METHOD_6 ( input ) ; } } ) ) ; }
org . junit . Assert . assertEquals ( IDENT_1 , IDENT_6 ) 