METHOD_0 ( ) { io . IDENT_0 . content . database . services . IDENT_1 . IDENT_2 IDENT_3 = METHOD_1 ( ) ; IDENT_4 = io . IDENT_0 . content . database . services . IDENT_1 . IDENT_2 . IDENT_5 . IDENT_6 ; java . sql . IDENT_7 IDENT_8 = mock ( java . sql . IDENT_7 . class ) ; doReturn ( IDENT_8 ) . when ( IDENT_3 ) . METHOD_2 ( any ( io . IDENT_0 . content . database . services . IDENT_1 . IDENT_2 . IDENT_5 . class ) , any ( java . lang . String . class ) , any ( java . lang . String . class ) , any ( java . lang . String . class ) ) ; java . sql . IDENT_7 connection = IDENT_3 . METHOD_3 ( IDENT_4 , io . IDENT_0 . content . database . services . IDENT_1 . IDENT_9 . IDENT_10 , io . IDENT_0 . content . database . services . IDENT_1 . IDENT_9 . IDENT_11 , io . IDENT_0 . content . database . services . IDENT_1 . IDENT_9 . IDENT_12 , io . IDENT_0 . content . database . services . IDENT_1 . IDENT_9 . IDENT_13 , METHOD_4 ( ) ) ; verify ( IDENT_3 , times ( 1 ) ) . METHOD_2 ( any ( io . IDENT_0 . content . database . services . IDENT_1 . IDENT_2 . IDENT_5 . class ) , any ( java . lang . String . class ) , any ( java . lang . String . class ) , any ( java . lang . String . class ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( io . IDENT_0 . content . database . services . IDENT_1 . IDENT_14 , java . lang . String , java . lang . String , java . lang . String ) { java . sql . IDENT_7 IDENT_15 ; java . lang . String IDENT_16 = ( IDENT_4 + STRING_0 ) + IDENT_17 ; if ( IDENT_18 . containsKey ( IDENT_16 ) ) { io . IDENT_0 . content . database . services . IDENT_1 . IDENT_19 < java . lang . String , javax . sql . IDENT_20 > IDENT_21 = IDENT_18 . get ( IDENT_16 ) ; java . lang . String IDENT_22 ; try { IDENT_22 = io . IDENT_0 . content . database . utils . IDENT_23 . METHOD_5 ( IDENT_24 ) ; } catch ( java . lang . Exception e ) { throw new java . sql . METHOD_6 ( ( STRING_1 + IDENT_16 ) , e ) ; } java . lang . String IDENT_25 = ( ( ( IDENT_17 + STRING_0 ) + IDENT_26 ) + STRING_0 ) + IDENT_22 ; javax . sql . IDENT_20 IDENT_27 ; if ( IDENT_21 . containsKey ( IDENT_25 ) ) { IDENT_27 = IDENT_21 . get ( IDENT_25 ) ; IDENT_15 = IDENT_27 . METHOD_3 ( ) ; } else { IDENT_27 = this . METHOD_7 ( IDENT_4 , IDENT_17 , IDENT_26 , IDENT_24 , IDENT_21 ) ; IDENT_15 = IDENT_27 . METHOD_3 ( ) ; IDENT_21 . put ( IDENT_25 , IDENT_27 ) ; } } else { com . IDENT_28 . v2 . IDENT_29 . IDENT_30 IDENT_27 = ( ( com . IDENT_28 . v2 . IDENT_29 . IDENT_30 ) ( this . METHOD_7 ( IDENT_4 , IDENT_17 , IDENT_26 , IDENT_24 ) ) ) ; IDENT_15 = METHOD_2 ( IDENT_27 , IDENT_26 , IDENT_24 ) ; io . IDENT_0 . content . database . services . IDENT_1 . IDENT_19 < java . lang . String , javax . sql . IDENT_20 > IDENT_21 = new io . IDENT_0 . content . database . services . IDENT_1 . METHOD_8 ( ) ; java . lang . String IDENT_22 ; try { IDENT_22 = io . IDENT_0 . content . database . utils . IDENT_23 . METHOD_5 ( IDENT_24 ) ; } catch ( java . lang . Exception e ) { throw new java . sql . METHOD_6 ( ( STRING_1 + IDENT_16 ) , e ) ; } java . lang . String IDENT_25 = ( ( ( IDENT_17 + STRING_0 ) + IDENT_26 ) + STRING_0 ) + IDENT_22 ; IDENT_21 . put ( IDENT_25 , IDENT_27 ) ; IDENT_18 . put ( IDENT_16 , IDENT_21 ) ; } return IDENT_15 ; }
org . junit . Assert . assertEquals ( IDENT_8 , connection ) 