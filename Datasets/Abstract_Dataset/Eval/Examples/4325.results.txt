METHOD_0 ( ) { final java . util . List < com . IDENT_0 . stream . IDENT_1 < java . lang . Integer > > result = new java . util . ArrayList < com . IDENT_0 . stream . IDENT_1 < java . lang . Integer > > ( ) ; com . IDENT_0 . stream . IDENT_2 . of ( 1000 , INT_0 , INT_1 ) . METHOD_1 ( new com . IDENT_0 . stream . function . METHOD_2 ( ) { @ com . IDENT_0 . stream . IDENT_3 . Override public void accept ( int index , int value ) { result . add ( new com . IDENT_0 . stream . IDENT_1 < java . lang . Integer > ( index , value ) ) ; } } ) ; "<AssertPlaceHolder>" ; } accept ( java . lang . StringBuilder , int ) { t . append ( value ) ; }
org . junit . Assert . assertThat ( result , org . hamcrest . Matchers . is ( java . util . Arrays . asList ( new com . IDENT_0 . stream . IDENT_1 < java . lang . Integer > ( 0 , 1000 ) , new com . IDENT_0 . stream . IDENT_1 < java . lang . Integer > ( 1 , INT_0 ) , new com . IDENT_0 . stream . IDENT_1 < java . lang . Integer > ( 2 , INT_1 ) ) ) ) 