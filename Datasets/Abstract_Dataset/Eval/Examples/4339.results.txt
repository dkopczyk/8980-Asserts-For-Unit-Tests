METHOD_0 ( ) { final boolean [ ] state = new boolean [ ] { false } ; com . IDENT_0 . stream . IDENT_1 stream = com . IDENT_0 . stream . IDENT_1 . of ( 0 , 1 , 2 , 2 , 3 , 4 , 4 , 5 ) . filter ( new com . IDENT_0 . stream . function . METHOD_1 ( ) { @ com . IDENT_0 . stream . IDENT_2 . Override public boolean test ( long value ) { return value < 4 ; } } ) . METHOD_2 ( new java . lang . METHOD_3 ( ) { @ com . IDENT_0 . stream . IDENT_2 . Override public void run ( ) { state [ 0 ] = true ; } } ) . METHOD_4 ( ) . METHOD_5 ( 2 ) ; stream . METHOD_6 ( ) ; stream . close ( ) ; "<AssertPlaceHolder>" ; } close ( ) { if ( ( ( params ) != null ) && ( ( params . IDENT_3 ) != null ) ) { params . IDENT_3 . run ( ) ; params . IDENT_3 = null ; } }
org . junit . Assert . assertTrue ( state [ 0 ] ) 