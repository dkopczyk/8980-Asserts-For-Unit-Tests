METHOD_0 ( ) { java . lang . String source = STRING_0 + ( ( ( ( ( STRING_1 2 + STRING_2 ) + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) ; java . util . Set < org . jboss . netty . handler . codec . http . IDENT_0 > IDENT_1 = new org . jboss . netty . handler . codec . http . METHOD_1 ( ) . decode ( source ) ; java . util . Iterator < org . jboss . netty . handler . codec . http . IDENT_0 > it = IDENT_1 . iterator ( ) ; org . jboss . netty . handler . codec . http . IDENT_0 c ; c = it . next ( ) ; org . junit . Assert . assertEquals ( "a" , c . getName ( ) ) ; org . junit . Assert . assertEquals ( "" , c . getValue ( ) ) ; c = it . next ( ) ; org . junit . Assert . assertEquals ( "b" , c . getName ( ) ) ; org . junit . Assert . assertEquals ( "1" , c . getValue ( ) ) ; c = it . next ( ) ; org . junit . Assert . assertEquals ( STRING_7 , c . getName ( ) ) ; org . junit . Assert . assertEquals ( STRING_8 , c . getValue ( ) ) ; c = it . next ( ) ; org . junit . Assert . assertEquals ( STRING_9 , c . getName ( ) ) ; org . junit . Assert . assertEquals ( STRING_10 , c . getValue ( ) ) ; c = it . next ( ) ; org . junit . Assert . assertEquals ( STRING_11 , c . getName ( ) ) ; org . junit . Assert . assertEquals ( STRING_12 , c . getValue ( ) ) ; c = it . next ( ) ; org . junit . Assert . assertEquals ( STRING_13 , c . getName ( ) ) ; org . junit . Assert . assertEquals ( STRING_14 , c . getValue ( ) ) ; c = it . next ( ) ; org . junit . Assert . assertEquals ( STRING_15 , c . getName ( ) ) ; org . junit . Assert . assertEquals ( STRING_16 , c . getValue ( ) ) ; "<AssertPlaceHolder>" ; } hasNext ( ) { while ( ( IDENT_2 ) != null ) { if ( ( IDENT_2 . key ( ) ) != null ) { return true ; } METHOD_2 ( ) ; } return false ; }
org . junit . Assert . assertFalse ( it . hasNext ( ) ) 