METHOD_0 ( ) { java . util . List < java . lang . Integer > input = new java . util . ArrayList < java . lang . Integer > ( 10 ) ; input . addAll ( java . util . Arrays . asList ( 1 , 1 , 2 , 3 , 5 ) ) ; com . IDENT_0 . stream . IDENT_1 < java . lang . Integer > stream = com . IDENT_0 . stream . IDENT_1 . of ( input ) . METHOD_1 ( ) ; input . addAll ( java . util . Arrays . asList ( 3 , 2 , 1 , 1 , ( - 1 ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_1 ( ) . METHOD_3 ( com . IDENT_0 . stream . IDENT_2 . IDENT_3 ) ; }
org . junit . Assert . assertThat ( stream , elements ( org . hamcrest . Matchers . contains ( 1 , 2 , 3 , 5 , ( - 1 ) ) ) ) 