METHOD_0 ( ) { org . apache . tomcat . util . IDENT_0 . web . IDENT_1 [ ] result = org . apache . tomcat . util . IDENT_0 . web . IDENT_1 . METHOD_1 ( new org . apache . tomcat . util . IDENT_0 . web . IDENT_1 [ ] { org . apache . tomcat . util . IDENT_0 . web . IDENT_2 . IDENT_3 } , false , org . apache . tomcat . util . IDENT_0 . web . IDENT_2 . IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( org . apache . tomcat . util . IDENT_0 . web . IDENT_1 [ ] , boolean , org . apache . IDENT_5 . logging . IDENT_6 ) { java . util . Set < java . lang . String > IDENT_7 = new java . util . HashSet ( ) ; java . util . Map < java . lang . String , java . util . Set < java . lang . String > > IDENT_8 = new java . util . HashMap ( ) ; java . util . Map < java . lang . String , java . util . Set < java . lang . String > > IDENT_9 = new java . util . HashMap ( ) ; java . util . List < org . apache . tomcat . util . IDENT_0 . web . IDENT_1 > IDENT_10 = new java . util . ArrayList ( ) ; for ( org . apache . tomcat . util . IDENT_0 . web . IDENT_1 IDENT_11 : IDENT_12 ) { org . apache . tomcat . util . IDENT_0 . web . IDENT_13 [ ] collections = IDENT_11 . METHOD_2 ( ) ; for ( org . apache . tomcat . util . IDENT_0 . web . IDENT_13 collection : collections ) { java . lang . String [ ] IDENT_14 = collection . METHOD_3 ( ) ; java . lang . String [ ] methods = collection . METHOD_4 ( ) ; java . lang . String [ ] IDENT_15 = collection . METHOD_5 ( ) ; if ( ( ( methods . length ) == 0 ) && ( ( IDENT_15 . length ) == 0 ) ) { for ( java . lang . String pattern : IDENT_14 ) { IDENT_7 . add ( pattern ) ; } continue ; } java . util . List < java . lang . String > IDENT_16 = null ; if ( ( IDENT_15 . length ) != 0 ) { IDENT_16 = java . util . Arrays . asList ( IDENT_15 ) ; } for ( java . lang . String pattern : IDENT_14 ) { if ( ! ( IDENT_7 . contains ( pattern ) ) ) { if ( ( methods . length ) == 0 ) { java . util . Set < java . lang . String > IDENT_17 = IDENT_9 . get ( pattern ) ; if ( IDENT_17 == null ) { IDENT_17 = new java . util . HashSet ( ) ; IDENT_9 . put ( pattern , IDENT_17 ) ; IDENT_17 . addAll ( IDENT_16 ) ; } else { IDENT_17 . METHOD_6 ( IDENT_16 ) ; } } else { java . util . Set < java . lang . String > m = IDENT_8 . get ( pattern ) ; if ( m == null ) { m = new java . util . HashSet ( ) ; IDENT_8 . put ( pattern , m ) ; } for ( java . lang . String method : methods ) { m . add ( method ) ; } } } } } } for ( Map . Entry < java . lang . String , java . util . Set < java . lang . String > > entry : IDENT_8 . entrySet ( ) ) { java . lang . String pattern = entry . getKey ( ) ; if ( IDENT_7 . contains ( pattern ) ) { IDENT_9 . remove ( pattern ) ; continue ; } java . util . Set < java . lang . String > IDENT_15 = IDENT_9 . remove ( pattern ) ; java . util . Set < java . lang . String > methods = entry . getValue ( ) ; if ( IDENT_15 == null ) { java . lang . StringBuilder msg = new java . lang . StringBuilder ( ) ; for ( java . lang . String method : methods ) { msg . append ( method ) ; msg . append ( STRING_0 ) ; } if ( IDENT_18 ) { log . info ( org . apache . tomcat . util . IDENT_0 . web . IDENT_1 . IDENT_19 . getString ( STRING_1 , pattern , msg . toString ( ) . trim ( ) ) ) ; org . apache . tomcat . util . IDENT_0 . web . IDENT_13 collection = new org . apache . tomcat . util . IDENT_0 . web . METHOD_7 ( ) ; for ( java . lang . String method : methods ) { collection . METHOD_8 ( method ) ; } collection . METHOD_9 ( pattern ) ; collection . setName ( STRING_2 ) ; org . apache . tomcat . util . IDENT_0 . web . IDENT_1 IDENT_11 = new org . apache . tomcat . util . IDENT_0 . web . METHOD_10 ( ) ; IDENT_11 . METHOD_11 ( true ) ; IDENT_11 . METHOD_12 ( collection ) ; IDENT_10 . add ( IDENT_11 ) ; } else { log . error ( org . apache . tomcat . util . IDENT_0 . web . METHOD_10 . IDENT_19 . getString ( STRING_3 , pattern , msg . toString ( ) . trim ( ) ) ) ; } continue ; } IDENT_15 . METHOD_13 ( methods ) ; if ( ( IDENT_15 . size ( ) ) > 0 ) { java . lang . StringBuilder msg = new java . lang . StringBuilder ( ) ; for ( java . lang . String method : IDENT_15 ) { msg . append ( method ) ; msg . append ( STRING_0 ) ; } if ( IDENT_18 ) { log . info ( org . apache . tomcat . util . IDENT_0 . web . METHOD_10 . IDENT_19 . getString ( STRING_4 , pattern , msg . toString ( ) . trim ( ) ) ) ; org . apache . tomcat . util . IDENT_0 . web . METHOD_7 collection = new org . apache . tomcat . util . IDENT_0 . web . METHOD_7 ( ) ; for ( java . lang . String method : IDENT_15 ) { collection . METHOD_14 ( method ) ; } collection . METHOD_9 ( pattern ) ; collection . setName ( STRING_2 ) ; org . apache . tomcat . util . IDENT_0 . web . METHOD_10 IDENT_11 = new org . apache . tomcat . util . IDENT_0 . web . METHOD_10 ( ) ; IDENT_11 . METHOD_11 ( true ) ; IDENT_11 . METHOD_12 ( collection ) ; IDENT_10 . add ( IDENT_11 ) ; } else { log . error ( org . apache . tomcat . util . IDENT_0 . web . METHOD_10 . IDENT_19 . getString ( STRING_5 , pattern , msg . toString ( ) . trim ( ) ) ) ; } } } for ( Map . Entry < java . lang . String , java . util . Set < java . lang . String > > entry : IDENT_9 . entrySet ( ) ) { java . lang . String pattern = entry . getKey ( ) ; if ( IDENT_7 . contains ( pattern ) ) { continue ; } java . util . Set < java . lang . String > IDENT_15 = entry . getValue ( ) ; if ( ( IDENT_15 . size ( ) ) > 0 ) { java . lang . StringBuilder msg = new java . lang . StringBuilder ( ) ; for ( java . lang . String method : IDENT_15 ) { msg . append ( method ) ; msg . append ( STRING_0 ) ; } if ( IDENT_18 ) { log . info ( org . apache . tomcat . util . IDENT_0 . web . METHOD_10 . IDENT_19 . getString ( STRING_4 , pattern , msg . toString ( ) . trim ( ) ) ) ; org . apache . tomcat . util . IDENT_0 . web . METHOD_7 collection = new org . apache . tomcat . util . IDENT_0 . web . METHOD_7 ( ) ; for ( java . lang . String method : IDENT_15 ) { collection . METHOD_14 ( method ) ; } collection . METHOD_9 ( pattern ) ; collection . setName ( STRING_2 ) ; org . apache . tomcat . util . IDENT_0 . web . METHOD_10 IDENT_11 = new org . apache . tomcat . util . IDENT_0 . web . METHOD_10 ( ) ; IDENT_11 . METHOD_11 ( true ) ; IDENT_11 . METHOD_12 ( collection ) ; IDENT_10 . add ( IDENT_11 ) ; } else { log . error ( org . apache . tomcat . util . IDENT_0 . web . METHOD_10 . IDENT_19 . getString ( STRING_5 , pattern , msg . toString ( ) . trim ( ) ) ) ; } } } return IDENT_10 . toArray ( new org . apache . tomcat . util . IDENT_0 . web . METHOD_10 [ IDENT_10 . size ( ) ] ) ; }
org . junit . Assert . assertEquals ( 0 , result . length ) 