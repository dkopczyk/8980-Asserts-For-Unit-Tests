METHOD_0 ( ) { java . lang . IllegalStateException e = new java . lang . IllegalStateException ( ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . Throwable ) { if ( e instanceof org . IDENT_0 . IDENT_1 . IDENT_2 ) { return org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ( ( org . IDENT_0 . IDENT_1 . IDENT_2 ) ( e ) ) ) ; } else if ( e instanceof org . IDENT_0 . IDENT_1 . io . IDENT_3 ) { return org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ( ( org . IDENT_0 . IDENT_1 . io . IDENT_3 ) ( e ) ) ) ; } else if ( e instanceof java . lang . IllegalArgumentException ) { return org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ( ( java . lang . IllegalArgumentException ) ( e ) ) ) ; } else if ( e instanceof java . lang . IllegalStateException ) { return org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ( ( java . lang . IllegalStateException ) ( e ) ) ) ; } else if ( e instanceof java . lang . reflect . IDENT_4 ) { return org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ( ( java . lang . reflect . IDENT_4 ) ( e ) ) ) ; } else { return new org . IDENT_0 . IDENT_1 . METHOD_2 ( e . getMessage ( ) , e ) ; } }
org . junit . Assert . assertSame ( e , org . IDENT_0 . IDENT_1 . METHOD_2 . METHOD_1 ( e ) ) 