METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . serializer . IDENT_2 serializer = new org . IDENT_0 . IDENT_1 . serializer . METHOD_1 ( ) ; org . IDENT_0 . IDENT_1 . config . IDENT_3 IDENT_4 = mock ( org . IDENT_0 . IDENT_1 . config . IDENT_3 . class ) ; when ( IDENT_4 . METHOD_2 ( ) ) . thenReturn ( serializer ) ; when ( IDENT_4 . METHOD_3 ( ) ) . thenReturn ( true ) ; when ( IDENT_4 . getName ( ) ) . thenReturn ( STRING_0 ) ; org . IDENT_0 . IDENT_1 . param . IDENT_5 param = mock ( org . IDENT_0 . IDENT_1 . param . IDENT_5 . class ) ; when ( param . METHOD_4 ( ) ) . thenReturn ( IDENT_4 ) ; when ( param . getValue ( ) ) . thenReturn ( java . util . Collections . < java . lang . Object > emptyList ( ) ) ; java . util . List < org . IDENT_0 . IDENT_1 . param . IDENT_6 > actual = IDENT_7 . process ( param , org . IDENT_0 . IDENT_1 . param . IDENT_8 , true ) ; "<AssertPlaceHolder>" ; } process ( org . IDENT_0 . IDENT_1 . param . IDENT_5 , java . nio . IDENT_9 . IDENT_10 , boolean ) { java . util . List < org . IDENT_0 . IDENT_1 . param . IDENT_6 > IDENT_11 = super . process ( param , IDENT_9 , IDENT_12 ) ; java . lang . String IDENT_13 = join ( IDENT_11 , STRING_1 ) ; if ( METHOD_5 ( IDENT_13 ) ) { return java . util . Collections . emptyList ( ) ; } return singletonList ( METHOD_6 ( STRING_2 , IDENT_13 ) ) ; }
org . junit . Assert . assertEquals ( 0 , actual . size ( ) ) 