METHOD_0 ( ) { IDENT_0 . METHOD_1 ( new com . IDENT_1 . IDENT_2 . IDENT_3 . model . METHOD_2 ( ) , 0 , com . IDENT_1 . IDENT_2 . IDENT_3 . model . TestUtils . IDENT_4 ) ; "<AssertPlaceHolder>" ; } accept ( com . IDENT_1 . IDENT_2 . IDENT_3 . model . IDENT_5 , int , int ) { if ( METHOD_3 ( IDENT_6 , x , y ) ) { return false ; } java . math . BigInteger [ ] IDENT_7 = METHOD_4 ( IDENT_6 , x , true ) ; boolean IDENT_8 = false ; for ( int i = 0 ; i < ( IDENT_7 . length ) ; i ++ ) { java . math . BigInteger IDENT_9 = IDENT_7 [ i ] ; int pos = ( y - i ) + ( IDENT_6 . METHOD_5 ( ) ) ; if ( pos >= ( IDENT_10 ) ) { continue ; } java . math . BigInteger line = this . IDENT_8 . get ( pos ) ; IDENT_8 OP_0 ( line . and ( IDENT_9 ) . compareTo ( BigInteger . IDENT_11 ) ) == 1 ; } return ! IDENT_8 ; }
org . junit . Assert . assertFalse ( IDENT_0 . accept ( new com . IDENT_1 . IDENT_2 . IDENT_3 . model . METHOD_2 ( ) , 0 , 0 ) ) 