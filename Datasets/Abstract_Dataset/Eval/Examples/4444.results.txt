METHOD_0 ( ) { org . IDENT_0 . repository . object . IDENT_1 connection = IDENT_2 . METHOD_1 ( ) ; com . github . IDENT_3 . schema . model . IDENT_4 . IDENT_5 IDENT_6 = connection . METHOD_2 ( com . github . IDENT_3 . schema . model . IDENT_4 . IDENT_5 . class , new org . IDENT_0 . model . impl . METHOD_3 ( STRING_0 ) ) ; com . github . IDENT_3 . schema . model . IDENT_4 . IDENT_5 IDENT_7 = connection . METHOD_2 ( com . github . IDENT_3 . schema . model . IDENT_4 . IDENT_5 . class , new org . IDENT_0 . model . impl . METHOD_3 ( STRING_1 ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . Class , org . IDENT_0 . repository . object . IDENT_8 ) { try { org . IDENT_0 . repository . object . IDENT_9 query = METHOD_4 ( IDENT_10 , 0 ) ; query . METHOD_5 ( STRING_2 , resource ) ; return query . evaluate ( IDENT_10 ) . next ( ) ; } catch ( org . IDENT_0 . query . IDENT_11 e ) { throw new java . lang . METHOD_6 ( e ) ; } }
org . junit . Assert . assertTrue ( ( ( ( IDENT_6 != null ) && ( IDENT_7 == null ) ) || ( ( IDENT_6 == null ) && ( IDENT_7 != null ) ) ) ) 