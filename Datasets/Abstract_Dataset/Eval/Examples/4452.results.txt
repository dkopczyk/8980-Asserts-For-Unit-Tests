METHOD_0 ( ) { com . github . IDENT_0 . IDENT_1 . model . IDENT_2 IDENT_3 = com . github . IDENT_0 . IDENT_1 . validation . IDENT_4 . IDENT_0 . METHOD_1 ( com . github . IDENT_0 . IDENT_1 . model . IDENT_2 . class , ( ( org . IDENT_5 . model . IDENT_6 ) ( new org . IDENT_5 . model . impl . METHOD_2 ( com . github . IDENT_0 . model . IDENT_7 . IDENT_8 . IDENT_9 ) ) ) ) ; com . IDENT_10 . IDENT_11 . IDENT_12 . Builder IDENT_13 = com . github . IDENT_0 . IDENT_1 . validation . IDENT_4 . method . METHOD_3 ( ) ; com . github . IDENT_0 . IDENT_1 . validation . IDENT_4 . validator . METHOD_4 ( IDENT_13 , com . github . IDENT_0 . IDENT_1 . validation . IDENT_4 . param , IDENT_3 ) ; java . lang . String code = IDENT_13 . build ( ) . code . toString ( ) ; java . util . regex . IDENT_14 matcher = java . util . regex . IDENT_15 . METHOD_5 ( STRING_0 ) . matcher ( code ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . io . File ) { if ( ( resolver ) == null ) { resolver = METHOD_6 ( IDENT_16 , IDENT_17 , IDENT_18 , model , IDENT_19 , IDENT_20 ) ; } java . util . List < java . lang . String > classes = METHOD_7 ( IDENT_21 ) ; METHOD_8 ( IDENT_21 ) ; if ( ! ( classes . isEmpty ( ) ) ) { org . IDENT_5 . repository . object . compiler . source . IDENT_22 cb = new org . IDENT_5 . repository . object . compiler . source . METHOD_9 ( ) ; cb . append ( getClass ( ) . METHOD_10 ( ) ) . append ( IDENT_20 ) ; java . util . List < java . io . File > IDENT_23 = cb . METHOD_11 ( ) ; compiler . METHOD_5 ( classes , IDENT_21 , IDENT_23 ) ; } return classes ; }
org . junit . Assert . assertTrue ( matcher . find ( ) ) 