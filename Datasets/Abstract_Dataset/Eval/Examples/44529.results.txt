METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . function . impl . IDENT_2 IDENT_3 = new org . IDENT_0 . IDENT_1 . function . impl . METHOD_1 ( ) ; int IDENT_4 = 12 ; int IDENT_5 = IDENT_4 ; org . IDENT_0 . IDENT_1 . function . impl . List < org . IDENT_0 . IDENT_1 . function . impl . IDENT_6 > IDENT_7 = new org . IDENT_0 . IDENT_1 . function . impl . ArrayList ( ) ; org . IDENT_0 . IDENT_1 . function . impl . IDENT_8 IDENT_9 = new org . IDENT_0 . IDENT_1 . function . impl . METHOD_2 ( org . IDENT_0 . IDENT_1 . function . impl . Arrays . asList ( new java . lang . Integer [ ] { 1 , 2 , 3 } ) ) ; org . IDENT_0 . IDENT_1 . function . impl . IDENT_6 IDENT_10 = new org . IDENT_0 . IDENT_1 . function . impl . METHOD_3 ( STRING_0 , strategy , IDENT_5 , IDENT_9 ) ; org . IDENT_0 . IDENT_1 . function . impl . METHOD_2 IDENT_11 = new org . IDENT_0 . IDENT_1 . function . impl . METHOD_2 ( org . IDENT_0 . IDENT_1 . function . impl . Arrays . asList ( new java . lang . Integer [ ] { 4 , 5 , 6 } ) ) ; org . IDENT_0 . IDENT_1 . function . impl . METHOD_3 IDENT_12 = new org . IDENT_0 . IDENT_1 . function . impl . METHOD_3 ( STRING_1 , strategy , IDENT_5 , IDENT_11 ) ; org . IDENT_0 . IDENT_1 . function . impl . METHOD_2 IDENT_13 = new org . IDENT_0 . IDENT_1 . function . impl . METHOD_2 ( org . IDENT_0 . IDENT_1 . function . impl . Arrays . asList ( new java . lang . Integer [ ] { 7 , 8 , 9 } ) ) ; org . IDENT_0 . IDENT_1 . function . impl . METHOD_3 IDENT_14 = new org . IDENT_0 . IDENT_1 . function . impl . METHOD_3 ( STRING_2 , strategy , IDENT_5 , IDENT_13 ) ; IDENT_7 . add ( IDENT_10 ) ; IDENT_7 . add ( IDENT_12 ) ; IDENT_7 . add ( IDENT_14 ) ; org . IDENT_0 . IDENT_1 . function . impl . List < org . IDENT_0 . IDENT_1 . function . impl . IDENT_15 > result = IDENT_3 . METHOD_4 ( IDENT_7 . stream ( ) , 10 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . IDENT_0 . IDENT_1 . function . impl . IDENT_16 , int ) { return IDENT_7 . map ( ( p ) -> p . METHOD_5 ( IDENT_17 ) ) . collect ( toList ( ) ) ; }
org . junit . Assert . assertEquals ( 3 , result . size ( ) ) 