METHOD_0 ( ) { final org . codice . ddf . util . function . IDENT_0 < org . codice . ddf . IDENT_1 . IDENT_2 , java . io . IDENT_3 , java . io . IOException > consumer = org . mockito . Mockito . mock ( org . codice . ddf . util . function . IDENT_0 . class ) ; final org . codice . ddf . util . function . IDENT_0 < org . codice . ddf . IDENT_1 . IDENT_2 , java . io . IDENT_3 , java . io . IOException > IDENT_4 = org . mockito . Mockito . mock ( org . codice . ddf . util . function . IDENT_0 . class ) ; final java . io . IDENT_3 IDENT_5 = org . mockito . Mockito . mock ( java . io . IDENT_3 . class ) ; final org . codice . ddf . IDENT_1 . IDENT_6 me = org . mockito . Mockito . mock ( org . codice . ddf . IDENT_1 . IDENT_6 . class ) ; org . mockito . Mockito . when ( context . METHOD_1 ( org . mockito . Mockito . any ( ) ) ) . thenReturn ( IDENT_5 ) ; org . mockito . Mockito . METHOD_2 ( me ) . when ( consumer ) . accept ( org . mockito . Mockito . any ( ) , org . mockito . Mockito . any ( ) ) ; IDENT_7 . expect ( org . hamcrest . Matchers . METHOD_3 ( me ) ) ; try { entry . store ( consumer ) ; } finally { org . mockito . Mockito . verify ( consumer ) . accept ( org . mockito . Mockito . METHOD_4 ( report ) , org . mockito . Mockito . METHOD_4 ( IDENT_5 ) ) ; "<AssertPlaceHolder>" ; org . mockito . Mockito . verify ( IDENT_4 , org . mockito . Mockito . METHOD_5 ( ) ) . accept ( org . mockito . Mockito . any ( ) , org . mockito . Mockito . any ( ) ) ; } } store ( ) { if ( ! ( IDENT_8 ) ) { org . codice . ddf . configuration . admin . IDENT_9 . LOGGER . debug ( STRING_0 , configuration . METHOD_6 ( ) , entry . getPath ( ) ) ; final java . util . IDENT_10 < java . lang . String , java . lang . Object > props = configuration . METHOD_7 ( ) ; final java . lang . String IDENT_11 = configuration . METHOD_8 ( ) ; if ( IDENT_11 != null ) { props . put ( IDENT_12 . IDENT_13 , IDENT_11 ) ; } else { props . remove ( IDENT_12 . IDENT_13 ) ; } props . put ( org . osgi . framework . Constants . IDENT_14 , configuration . METHOD_6 ( ) ) ; final java . lang . String location = configuration . METHOD_9 ( ) ; if ( location != null ) { props . put ( IDENT_12 . IDENT_15 , location ) ; } else { props . remove ( IDENT_12 . IDENT_15 ) ; } this . IDENT_8 = entry . store ( ( r , out ) -> IDENT_16 . write ( out , props ) ) ; } return IDENT_8 ; }
org . junit . Assert . assertThat ( entry . store ( ) , org . hamcrest . Matchers . equalTo ( false ) ) 