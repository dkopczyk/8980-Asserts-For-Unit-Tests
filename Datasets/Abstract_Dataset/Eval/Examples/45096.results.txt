METHOD_0 ( ) { entry = new org . codice . ddf . configuration . IDENT_0 . METHOD_1 ( IDENT_1 , com . google . common . collect . ImmutableMap . of ( IDENT_2 . IDENT_3 , org . codice . ddf . configuration . IDENT_0 . IDENT_4 . IDENT_5 , IDENT_2 . IDENT_6 , false ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . codice . ddf . util . function . IDENT_7 ) { org . apache . commons . lang . IDENT_8 . METHOD_3 ( consumer , STRING_0 ) ; if ( ( IDENT_9 ) == null ) { this . IDENT_9 = false ; java . util . Optional < java . io . InputStream > is = java . util . Optional . empty ( ) ; try { is = METHOD_4 ( true ) ; final java . util . Optional < java . io . InputStream > IDENT_10 = is ; this . IDENT_9 = METHOD_5 ( ) . METHOD_6 ( ( ) -> consumer . accept ( METHOD_5 ( ) , IDENT_10 ) ) ; } catch ( java . io . IOException e ) { METHOD_5 ( ) . record ( new org . codice . ddf . IDENT_0 . METHOD_7 ( IDENT_11 . IDENT_12 , path , context . METHOD_8 ( ) . METHOD_9 ( ) , e ) ) ; } finally { is . METHOD_10 ( org . apache . commons . io . IDENT_13 :: IDENT_14 ) ; } } return IDENT_9 ; }
org . junit . Assert . assertThat ( entry . METHOD_2 ( true ) , org . hamcrest . CoreMatchers . equalTo ( true ) ) 