METHOD_0 ( ) { org . osgi . framework . IDENT_0 IDENT_1 = mock ( org . osgi . framework . IDENT_0 . class ) ; java . util . HashSet IDENT_2 = new java . util . HashSet ( ) ; java . util . HashSet < java . security . IDENT_3 > IDENT_4 = new java . util . HashSet ( ) ; IDENT_4 . add ( ( ) -> STRING_0 ) ; IDENT_4 . add ( ( ) -> STRING_1 ) ; IDENT_4 . add ( ( ) -> STRING_2 ) ; IDENT_4 . add ( ( ) -> STRING_3 ) ; IDENT_4 . add ( ( ) -> STRING_4 ) ; IDENT_4 . add ( ( ) -> STRING_5 ) ; javax . security . auth . IDENT_5 IDENT_6 = new javax . security . auth . METHOD_1 ( true , IDENT_4 , IDENT_2 , IDENT_2 ) ; org . codice . ddf . condition . IDENT_7 IDENT_8 = new org . codice . ddf . condition . METHOD_2 ( IDENT_1 , new org . osgi . service . IDENT_9 . METHOD_3 ( org . codice . ddf . condition . METHOD_2 . class . getName ( ) , new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 } ) ) ; boolean IDENT_10 = javax . security . auth . METHOD_1 . METHOD_4 ( IDENT_6 , ( ( java . security . IDENT_11 < java . lang . Boolean > ) ( IDENT_8 :: IDENT_12 ) ) ) ; "<AssertPlaceHolder>" ; } getName ( ) { return name ; }
org . junit . Assert . assertThat ( IDENT_10 , org . hamcrest . core . Is . is ( true ) ) 