METHOD_0 ( ) { org . osgi . framework . IDENT_0 IDENT_1 = mock ( org . osgi . framework . IDENT_0 . class ) ; java . util . Map < java . security . IDENT_2 . IDENT_3 , java . util . List < java . security . IDENT_2 . IDENT_3 > > IDENT_4 = new java . util . HashMap ( ) ; java . security . IDENT_2 . IDENT_3 key = mock ( java . security . IDENT_2 . IDENT_3 . class ) ; javax . security . auth . IDENT_5 . IDENT_6 IDENT_7 = new javax . security . auth . IDENT_5 . METHOD_1 ( STRING_0 ) ; when ( key . METHOD_2 ( ) ) . thenReturn ( IDENT_7 ) ; java . util . List < java . util . List < ? > > IDENT_8 = new java . util . ArrayList ( ) ; java . util . List < java . lang . Object > IDENT_9 = new java . util . ArrayList ( ) ; IDENT_9 . add ( 0 ) ; IDENT_9 . add ( new byte [ 0 ] ) ; IDENT_8 . add ( IDENT_9 ) ; when ( key . METHOD_3 ( ) ) . thenReturn ( IDENT_8 ) ; IDENT_4 . put ( key , new java . util . ArrayList ( ) ) ; when ( IDENT_1 . METHOD_4 ( org . osgi . framework . IDENT_0 . IDENT_10 ) ) . thenReturn ( IDENT_4 ) ; org . codice . ddf . condition . IDENT_11 IDENT_12 = new org . codice . ddf . condition . METHOD_5 ( IDENT_1 , new org . osgi . service . IDENT_13 . METHOD_6 ( org . codice . ddf . condition . METHOD_5 . class . getName ( ) , new java . lang . String [ ] { "test" } ) ) ; boolean IDENT_14 = IDENT_12 . METHOD_7 ( ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ) { return ! ( java . lang . System . getProperty ( org . codice . ddf . IDENT_15 . common . IDENT_16 . IDENT_17 . IDENT_18 , STRING_1 ) . equals ( STRING_2 ) ) ; }
org . junit . Assert . assertThat ( IDENT_14 , org . hamcrest . core . Is . is ( true ) ) 