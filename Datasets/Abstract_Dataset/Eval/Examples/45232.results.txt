METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; java . util . Map < java . lang . String , java . util . List < java . lang . String > > IDENT_1 = com . google . common . collect . ImmutableMap . of ( STRING_1 , java . util . Collections . singletonList ( IDENT_0 ) ) ; ddf . security . IDENT_2 subject = METHOD_1 ( IDENT_1 ) ; IDENT_3 . METHOD_2 ( STRING_1 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . apache . IDENT_4 . subject . IDENT_2 ) { java . util . Optional < java . lang . String > IDENT_5 = METHOD_4 ( subject ) . stream ( ) . METHOD_5 ( ) ; if ( IDENT_5 . METHOD_6 ( ) ) { return IDENT_5 . get ( ) ; } java . lang . String IDENT_0 = ddf . security . IDENT_6 . METHOD_7 ( subject ) ; if ( org . apache . commons . lang . StringUtils . METHOD_8 ( IDENT_0 ) ) { return IDENT_0 ; } return ddf . security . IDENT_6 . getName ( subject ) ; }
org . junit . Assert . assertThat ( IDENT_3 . METHOD_3 ( subject ) , org . hamcrest . core . Is . is ( IDENT_0 ) ) 