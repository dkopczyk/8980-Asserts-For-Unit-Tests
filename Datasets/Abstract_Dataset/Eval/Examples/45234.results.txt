METHOD_0 ( ) { org . apache . IDENT_0 . subject . IDENT_1 IDENT_2 = new org . apache . IDENT_0 . subject . METHOD_1 ( ) ; org . apache . cxf . ws . security . IDENT_3 . IDENT_4 IDENT_5 = new org . apache . cxf . ws . security . IDENT_3 . METHOD_2 ( ) ; IDENT_2 . add ( IDENT_5 , ddf . security . service . impl . IDENT_6 . IDENT_7 ) ; org . apache . IDENT_0 . IDENT_8 . IDENT_9 IDENT_8 = mock ( org . apache . IDENT_0 . IDENT_8 . IDENT_9 . class ) ; when ( IDENT_8 . getName ( ) ) . thenReturn ( ddf . security . service . impl . IDENT_6 . IDENT_7 ) ; ddf . security . service . impl . IDENT_10 manager = new ddf . security . service . impl . METHOD_3 ( ) ; manager . METHOD_4 ( java . util . Arrays . asList ( new org . apache . IDENT_0 . IDENT_8 . IDENT_9 [ ] { IDENT_8 } ) ) ; ddf . security . IDENT_11 subject = manager . METHOD_5 ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . String ) { ddf . security . IDENT_11 subject = org . codice . ddf . security . interceptor . IDENT_12 . IDENT_13 . METHOD_6 ( IDENT_14 ) ; if ( security . METHOD_7 ( subject ) ) { subject = security . METHOD_8 ( IDENT_14 ) ; org . codice . ddf . security . interceptor . IDENT_12 . IDENT_13 . put ( IDENT_14 , subject ) ; } else { org . codice . ddf . security . interceptor . IDENT_12 . LOGGER . debug ( STRING_0 , IDENT_14 ) ; } return subject ; }
org . junit . Assert . assertNotNull ( subject ) 