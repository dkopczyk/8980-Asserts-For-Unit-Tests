METHOD_0 ( ) { org . codice . ddf . security . handler . api . IDENT_0 token = new org . codice . ddf . security . handler . api . METHOD_1 ( org . codice . ddf . security . handler . api . IDENT_1 . IDENT_2 , org . codice . ddf . security . handler . api . IDENT_1 . IDENT_3 , org . codice . ddf . security . handler . api . IDENT_1 . IDENT_4 ) ; java . lang . String IDENT_5 = java . util . IDENT_6 . METHOD_2 ( ) . METHOD_3 ( org . codice . ddf . security . handler . api . IDENT_1 . IDENT_7 . getBytes ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { java . lang . StringBuilder builder = new java . lang . StringBuilder ( ) ; builder . append ( org . codice . ddf . security . handler . api . IDENT_8 . IDENT_9 ) ; builder . append ( METHOD_5 ( ) ) ; builder . append ( org . codice . ddf . security . handler . api . IDENT_8 . IDENT_10 ) ; builder . append ( org . codice . ddf . security . handler . api . IDENT_8 . IDENT_11 ) ; builder . append ( METHOD_6 ( ) ) ; builder . append ( org . codice . ddf . security . handler . api . IDENT_8 . IDENT_10 ) ; builder . append ( org . codice . ddf . security . handler . api . IDENT_8 . IDENT_12 ) ; builder . append ( METHOD_7 ( ) ) ; java . lang . String IDENT_13 = builder . toString ( ) ; if ( org . codice . ddf . security . handler . api . IDENT_8 . LOGGER . METHOD_8 ( ) ) { java . lang . String [ ] IDENT_14 = IDENT_13 . split ( org . codice . ddf . security . handler . api . IDENT_8 . IDENT_10 ) ; if ( ( IDENT_14 . length ) >= 3 ) { org . codice . ddf . security . handler . api . IDENT_8 . LOGGER . trace ( STRING_0 , IDENT_14 [ 0 ] , ( ( org . codice . ddf . security . handler . api . IDENT_8 . IDENT_11 ) + STRING_1 ) , IDENT_14 [ 2 ] ) ; } } return java . util . IDENT_6 . METHOD_2 ( ) . METHOD_3 ( builder . toString ( ) . getBytes ( IDENT_15 . UTF_8 ) ) ; }
org . junit . Assert . assertEquals ( IDENT_5 , token . METHOD_4 ( ) ) 