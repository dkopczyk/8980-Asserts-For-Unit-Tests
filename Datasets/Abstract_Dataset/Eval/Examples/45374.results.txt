METHOD_0 ( ) { edu . illinois . cs . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 f = new edu . illinois . cs . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( STRING_0 ) ; f . METHOD_2 ( IDENT_4 . IDENT_5 ) ; f . METHOD_2 ( IDENT_4 . IDENT_6 ) ; f . METHOD_2 ( IDENT_4 . IDENT_7 ) ; edu . illinois . cs . IDENT_0 . IDENT_1 . IDENT_2 . factory . IDENT_8 . logger . info ( STRING_1 ) ; java . util . Map < java . lang . Integer , java . lang . String > map = edu . illinois . cs . IDENT_0 . core . io . IDENT_9 . METHOD_3 ( edu . illinois . cs . IDENT_0 . IDENT_1 . IDENT_2 . factory . IDENT_8 . class , STRING_2 ) ; for ( edu . illinois . cs . IDENT_0 . core . IDENT_10 . IDENT_11 . IDENT_12 IDENT_13 : edu . illinois . cs . IDENT_0 . IDENT_1 . IDENT_2 . factory . IDENT_8 . IDENT_14 ) { for ( int IDENT_15 = 0 ; IDENT_15 < ( IDENT_13 . size ( ) ) ; IDENT_15 ++ ) { edu . illinois . cs . IDENT_0 . core . IDENT_10 . IDENT_11 . IDENT_16 c = new edu . illinois . cs . IDENT_0 . core . IDENT_10 . IDENT_11 . METHOD_4 ( "" , "" , IDENT_13 , IDENT_15 , ( IDENT_15 + 1 ) ) ; java . util . Set < edu . illinois . cs . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_17 > IDENT_2 = f . METHOD_5 ( c ) ; if ( ( IDENT_2 . size ( ) ) > 0 ) { java . lang . String id = ( ( IDENT_13 . METHOD_6 ( ) ) + STRING_3 ) + IDENT_15 ; "<AssertPlaceHolder>" ; } } } } get ( java . lang . String ) { item = item . trim ( ) ; java . lang . String sql = STRING_4 ; try { edu . illinois . cs . IDENT_0 . IDENT_18 . IDENT_19 . IDENT_20 c = edu . illinois . cs . IDENT_0 . IDENT_18 . IDENT_19 . IDENT_21 . METHOD_7 ( IDENT_22 ) ; edu . illinois . cs . IDENT_0 . IDENT_18 . IDENT_19 . IDENT_23 stmt = c . METHOD_8 ( sql ) ; stmt . METHOD_9 ( 1 , item ) ; edu . illinois . cs . IDENT_0 . IDENT_18 . IDENT_19 . ResultSet rs = stmt . METHOD_10 ( ) ; if ( rs . next ( ) ) { return rs . METHOD_11 ( 1 ) ; } else { return - 1 ; } } catch ( java . lang . Exception ex ) { throw new java . lang . RuntimeException ( ex ) ; } }
org . junit . Assert . assertEquals ( map . get ( id . hashCode ( ) ) , IDENT_2 . toString ( ) ) 