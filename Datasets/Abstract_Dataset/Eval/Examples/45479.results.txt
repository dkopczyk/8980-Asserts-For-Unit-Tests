METHOD_0 ( ) { int count = 0 ; java . lang . String IDENT_0 = STRING_0 + count ; java . lang . String IDENT_1 = STRING_1 ; while ( ( java . lang . System . getProperty ( IDENT_0 ) ) != null ) { count ++ ; IDENT_0 = STRING_0 + count ; } java . lang . System . setProperty ( IDENT_0 , IDENT_1 ) ; java . util . Properties expected = new java . util . Properties ( ) ; java . util . Properties IDENT_2 = java . lang . System . METHOD_1 ( ) ; for ( java . lang . String name : IDENT_2 . METHOD_2 ( ) ) { if ( ! ( IDENT_3 . IDENT_4 . contains ( name ) ) ) { expected . put ( name , IDENT_2 . get ( name ) ) ; } } com . IDENT_5 . IDENT_6 . runtime . IDENT_3 builder = com . IDENT_5 . IDENT_6 . runtime . IDENT_3 . METHOD_3 ( ) ; java . util . Properties properties = builder . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; java . lang . System . METHOD_1 ( ) . remove ( IDENT_0 ) ; } is ( T ) { return new com . IDENT_5 . IDENT_6 . IDENT_7 . Is < T > ( new com . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 < T > ( value ) ) ; }
org . junit . Assert . assertThat ( properties , org . hamcrest . CoreMatchers . is ( expected ) ) 