METHOD_0 ( ) { final long IDENT_0 = new java . util . METHOD_1 ( ) . METHOD_2 ( ) ; final int count = INT_0 ; org . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = IDENT_5 . METHOD_3 ( "test" ) ; java . util . METHOD_1 IDENT_6 = new java . util . METHOD_1 ( IDENT_0 ) ; for ( int i = 0 ; i < count ; i ++ ) { byte [ ] key = METHOD_4 ( IDENT_6 , 10 , 100 ) ; byte [ ] value = METHOD_4 ( IDENT_6 , 10 , INT_1 ) ; IDENT_4 . store ( null , key , value ) ; } METHOD_5 ( ) ; org . IDENT_1 . IDENT_2 . IDENT_3 IDENT_7 = IDENT_8 . METHOD_3 ( "test" ) ; "<AssertPlaceHolder>" ; IDENT_6 = new java . util . METHOD_1 ( IDENT_0 ) ; for ( int i = 0 ; i < count ; i ++ ) { byte [ ] key = METHOD_4 ( IDENT_6 , 10 , 100 ) ; byte [ ] value = METHOD_4 ( IDENT_6 , 10 , INT_1 ) ; METHOD_6 ( value , IDENT_7 . load ( null , key ) ) ; } } count ( byte [ ] , byte [ ] ) { org . IDENT_1 . IDENT_2 . IDENT_9 IDENT_10 = METHOD_7 ( IDENT_11 . IDENT_12 ) ; org . IDENT_1 . IDENT_2 . IDENT_9 IDENT_13 = null ; try { if ( IDENT_14 != null ) { IDENT_13 = METHOD_7 ( IDENT_11 . IDENT_12 ) ; IDENT_13 . IDENT_15 = true ; IDENT_13 . find ( IDENT_14 ) ; if ( ( IDENT_13 . IDENT_16 ) == null ) { return 0 ; } } return IDENT_10 . count ( IDENT_17 , IDENT_13 ) ; } finally { IDENT_10 . METHOD_8 ( ) ; if ( IDENT_13 != null ) { IDENT_13 . METHOD_8 ( ) ; } } }
org . junit . Assert . assertEquals ( count , IDENT_7 . count ( null , null ) ) 