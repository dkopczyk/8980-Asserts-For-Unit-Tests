METHOD_0 ( ) { try { java . lang . String IDENT_0 = METHOD_1 ( 1 , IDENT_1 . IDENT_2 ) ; com . amazonaws . services . IDENT_3 . model . IDENT_4 IDENT_5 = new com . amazonaws . services . IDENT_3 . model . METHOD_2 ( ) ; IDENT_5 . METHOD_3 ( IDENT_0 ) ; IDENT_5 . METHOD_4 ( java . util . Arrays . asList ( STRING_0 ) ) ; IDENT_5 . METHOD_5 ( java . util . UUID . METHOD_6 ( ) . toString ( ) ) ; IDENT_5 . METHOD_7 ( java . util . Arrays . asList ( IDENT_6 . METHOD_8 ( ) ) ) ; IDENT_7 . METHOD_9 ( IDENT_5 ) ; java . lang . String IDENT_8 = METHOD_10 ( 1 , IDENT_1 . IDENT_9 ) ; com . amazonaws . services . IDENT_10 . model . IDENT_11 IDENT_12 = new com . amazonaws . services . IDENT_10 . model . METHOD_11 ( ) ; java . lang . String IDENT_13 = com . IDENT_14 . IDENT_15 . util . IDENT_16 . METHOD_12 ( IDENT_0 ) ; IDENT_12 . METHOD_13 ( IDENT_13 ) ; IDENT_12 . METHOD_14 ( STRING_1 ) ; IDENT_12 . METHOD_15 ( IDENT_8 ) ; com . amazonaws . services . IDENT_10 . model . IDENT_17 IDENT_18 = IDENT_19 . METHOD_16 ( IDENT_12 ) ; java . lang . String IDENT_20 = IDENT_18 . METHOD_17 ( ) ; if ( IDENT_20 . equals ( STRING_2 2 ) ) { java . lang . Thread . sleep ( INT_0 ) ; com . amazonaws . services . IDENT_3 . model . IDENT_21 IDENT_22 = new com . amazonaws . services . IDENT_3 . model . METHOD_18 ( ) ; IDENT_22 . METHOD_3 ( IDENT_0 ) ; IDENT_22 . METHOD_19 ( 1 ) ; com . amazonaws . services . IDENT_3 . model . IDENT_23 IDENT_24 = IDENT_7 . METHOD_20 ( IDENT_22 ) ; java . util . List < com . amazonaws . services . IDENT_3 . model . Message > messages = IDENT_24 . METHOD_21 ( ) ; if ( ( messages != null ) && ( ( messages . size ( ) ) == 1 ) ) { org . json . JSONObject o = new org . json . JSONObject ( messages . get ( 0 ) . METHOD_22 ( ) ) ; if ( ! ( o . METHOD_23 ( STRING_3 ) ) ) { org . junit . Assert . fail ( STRING_2 ) ; } java . lang . String IDENT_25 = o . getString ( STRING_3 ) ; com . IDENT_14 . IDENT_26 . test . tools . IDENT_27 . METHOD_24 ( IDENT_25 , "" ) ; com . amazonaws . services . IDENT_3 . model . IDENT_28 IDENT_29 = new com . amazonaws . services . IDENT_3 . model . METHOD_25 ( ) ; IDENT_29 . METHOD_3 ( IDENT_0 ) ; IDENT_29 . METHOD_26 ( messages . get ( 0 ) . METHOD_27 ( ) ) ; IDENT_7 . METHOD_28 ( IDENT_29 ) ; } else { org . junit . Assert . fail ( STRING_4 ) ; } } else { org . junit . Assert . fail ( STRING_2 0 ) ; } logger . info ( ( STRING_5 + IDENT_8 ) ) ; com . amazonaws . services . IDENT_10 . model . IDENT_30 IDENT_31 = new com . amazonaws . services . IDENT_10 . model . METHOD_29 ( ) ; java . lang . String IDENT_32 = STRING_6 ; IDENT_31 . METHOD_30 ( IDENT_32 ) ; IDENT_31 . METHOD_31 ( STRING_2 1 ) ; IDENT_31 . METHOD_15 ( IDENT_8 ) ; IDENT_19 . METHOD_32 ( IDENT_31 ) ; java . lang . Thread . sleep ( INT_1 ) ; com . amazonaws . services . IDENT_3 . model . METHOD_18 IDENT_22 = new com . amazonaws . services . IDENT_3 . model . METHOD_18 ( ) ; IDENT_22 . METHOD_3 ( IDENT_0 ) ; IDENT_22 . METHOD_19 ( 1 ) ; com . amazonaws . services . IDENT_3 . model . IDENT_23 IDENT_24 = IDENT_7 . METHOD_20 ( IDENT_22 ) ; java . util . List < com . amazonaws . services . IDENT_3 . model . Message > messages = IDENT_24 . METHOD_21 ( ) ; if ( ( messages != null ) && ( ( messages . size ( ) ) == 1 ) ) { java . lang . String IDENT_33 = messages . get ( 0 ) . METHOD_22 ( ) ; "<AssertPlaceHolder>" ; } else { org . junit . Assert . fail ( STRING_7 ) ; } } catch ( java . lang . Exception ex ) { logger . error ( STRING_8 , ex ) ; org . junit . Assert . fail ( ex . getMessage ( ) ) ; } } METHOD_22 ( ) { return body ; }
org . junit . Assert . assertTrue ( IDENT_33 . contains ( IDENT_32 ) ) 