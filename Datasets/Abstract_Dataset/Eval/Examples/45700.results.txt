METHOD_0 ( ) { final org . IDENT_0 . IDENT_1 . content . IDENT_2 resource = METHOD_1 ( ) ; final java . util . List < org . IDENT_0 . IDENT_1 . content . IDENT_2 > result = generator . METHOD_2 ( IDENT_3 . METHOD_3 ( resource . METHOD_4 ( ) ) , resource . getPath ( ) , java . util . Collections . < org . IDENT_0 . IDENT_1 . content . IDENT_2 > emptyList ( ) , new org . IDENT_0 . maven . IDENT_4 . event . METHOD_5 ( ) ) ; System . out . println ( org . apache . commons . lang . StringUtils . join ( result , "\n" ) ) ; "<AssertPlaceHolder>" ; for ( final org . IDENT_0 . IDENT_1 . content . IDENT_2 res : result ) { if ( ! ( ( ( res . getPath ( ) . METHOD_6 ( IDENT_5 . IDENT_6 ) ) || ( res . getPath ( ) . METHOD_6 ( IDENT_5 . IDENT_7 ) ) ) || ( res . getPath ( ) . METHOD_6 ( IDENT_5 . IDENT_8 ) ) ) ) { org . junit . Assert . fail ( ( STRING_0 + res ) ) ; } } } size ( ) { java . util . concurrent . atomic . IDENT_9 IDENT_10 = new java . util . concurrent . atomic . METHOD_7 ( 0 ) ; METHOD_8 ( ( p ) -> IDENT_10 . METHOD_9 ( ) ) ; return IDENT_10 . get ( ) ; }
org . junit . Assert . assertThat ( result . size ( ) , org . hamcrest . CoreMatchers . equalTo ( 3 ) ) 