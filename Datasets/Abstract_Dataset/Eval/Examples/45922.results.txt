METHOD_0 ( ) { final long IDENT_0 = INT_0 ; final java . lang . String IDENT_1 = IDENT_2 . METHOD_1 ( IDENT_0 , STRING_0 ) ; final java . lang . String expected = new java . text . METHOD_2 ( STRING_0 ) . format ( new java . util . Date ( IDENT_0 ) ) ; "<AssertPlaceHolder>" ; } format ( org . apache . kafka . IDENT_3 . consumer . IDENT_4 ) { return java . util . stream . IDENT_5 . stream ( records . records ( IDENT_6 ) . METHOD_3 ( ) , false ) . filter ( IDENT_7 :: IDENT_8 ) . filter ( ( r ) -> ( r . value ( ) ) != null ) . map ( ( record ) -> { if ( ( IDENT_9 ) == null ) { IDENT_9 = METHOD_4 ( record ) ; } try { return IDENT_9 . METHOD_5 ( record ) ; } catch ( e ) { IDENT_10 . log . warn ( STRING_1 , io . IDENT_11 . IDENT_12 . rest . server . resources . streaming . e ) ; return null ; } } ) . filter ( IDENT_7 :: IDENT_8 ) . collect ( java . util . stream . IDENT_13 . toList ( ) ) ; }
org . junit . Assert . assertThat ( IDENT_1 , org . hamcrest . CoreMatchers . is ( expected ) ) 