METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = gov . hhs . fha . nhinc . IDENT_2 . dao . IDENT_3 . IDENT_4 ; java . lang . String IDENT_5 = gov . hhs . fha . nhinc . IDENT_2 . dao . IDENT_3 . IDENT_4 ; org . IDENT_6 . IDENT_7 . IDENT_8 IDENT_9 = new org . IDENT_6 . IDENT_7 . METHOD_1 ( ) ; org . IDENT_6 . IDENT_7 . IDENT_10 IDENT_11 = new org . IDENT_6 . IDENT_7 . METHOD_2 ( ) ; org . IDENT_6 . IDENT_7 . IDENT_12 IDENT_13 = new org . IDENT_6 . IDENT_7 . METHOD_3 ( ) ; IDENT_13 . METHOD_4 ( IDENT_14 . IDENT_15 ) ; IDENT_11 . METHOD_5 ( IDENT_13 ) ; IDENT_9 . METHOD_6 ( ) . add ( IDENT_11 ) ; try { context . METHOD_7 ( new org . IDENT_16 . METHOD_8 ( ) { { METHOD_9 ( 1 ) . of ( IDENT_17 ) . save ( with ( any ( gov . hhs . fha . nhinc . IDENT_2 . model . IDENT_18 . class ) ) ) ; METHOD_9 ( 1 ) . of ( IDENT_17 ) . METHOD_10 ( with ( any ( java . lang . String . class ) ) , with ( any ( java . lang . String . class ) ) ) ; METHOD_11 ( METHOD_12 ( METHOD_13 ( ) ) ) ; } } ) ; gov . hhs . fha . nhinc . IDENT_19 . IDENT_20 IDENT_21 = METHOD_14 ( ) ; boolean result = IDENT_21 . METHOD_15 ( IDENT_0 , IDENT_1 , IDENT_5 , IDENT_9 ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( ( STRING_1 + ( e . getMessage ( ) ) ) ) ; } } METHOD_15 ( java . lang . String , java . lang . String , java . lang . String , org . IDENT_6 . IDENT_7 . METHOD_1 ) { gov . hhs . fha . nhinc . IDENT_19 . IDENT_20 . LOG . debug ( STRING_2 ) ; boolean result = false ; try { if ( METHOD_16 ( IDENT_9 ) ) { IDENT_1 = IDENT_5 ; } final gov . hhs . fha . nhinc . IDENT_2 . dao . IDENT_3 instance = METHOD_17 ( ) ; final java . lang . String IDENT_22 = gov . hhs . fha . nhinc . IDENT_19 . IDENT_20 . METHOD_18 ( IDENT_1 ) ; final java . util . List < gov . hhs . fha . nhinc . IDENT_2 . model . IDENT_18 > records = instance . METHOD_10 ( IDENT_0 , IDENT_22 ) ; if ( ( records != null ) && ( ! ( records . isEmpty ( ) ) ) ) { records . get ( 0 ) . METHOD_19 ( IDENT_1 ) ; records . get ( 0 ) . METHOD_20 ( METHOD_21 ( IDENT_9 ) ) ; instance . save ( records . get ( 0 ) ) ; } result = true ; } catch ( final java . lang . Exception e ) { gov . hhs . fha . nhinc . IDENT_19 . IDENT_20 . LOG . error ( STRING_3 , e ) ; } gov . hhs . fha . nhinc . IDENT_19 . IDENT_20 . LOG . debug ( STRING_4 ) ; return result ; }
org . junit . Assert . assertTrue ( result ) 