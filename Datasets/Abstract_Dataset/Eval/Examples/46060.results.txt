METHOD_0 ( ) { final org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_3 IDENT_4 = mock ( org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_3 . class ) ; final gov . hhs . fha . nhinc . IDENT_5 . cxf . IDENT_6 validator = new gov . hhs . fha . nhinc . IDENT_5 . cxf . METHOD_1 ( ) ; final org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_7 statement = mock ( org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_7 . class ) ; final java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_7 > IDENT_8 = new java . util . ArrayList ( ) ; IDENT_8 . add ( statement ) ; final org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_9 IDENT_10 = mock ( org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_9 . class ) ; final java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_9 > IDENT_11 = new java . util . ArrayList ( ) ; IDENT_11 . add ( IDENT_10 ) ; final org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_12 IDENT_13 = mock ( org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_12 . class ) ; final java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_12 > IDENT_14 = new java . util . ArrayList ( ) ; IDENT_14 . add ( IDENT_13 ) ; final org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_15 IDENT_16 = mock ( org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_15 . class ) ; final java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_15 > IDENT_17 = new java . util . ArrayList ( ) ; IDENT_17 . add ( IDENT_16 ) ; final org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_18 subject = mock ( org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_18 . class ) ; final org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_19 IDENT_20 = mock ( org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_19 . class ) ; final org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_21 name = mock ( org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_21 . class ) ; when ( IDENT_4 . METHOD_2 ( ) ) . thenReturn ( IDENT_8 ) ; when ( IDENT_4 . METHOD_3 ( ) ) . thenReturn ( IDENT_11 ) ; when ( IDENT_4 . METHOD_4 ( ) ) . thenReturn ( IDENT_14 ) ; when ( IDENT_4 . METHOD_5 ( ) ) . thenReturn ( IDENT_17 ) ; when ( IDENT_4 . METHOD_6 ( ) ) . thenReturn ( subject ) ; when ( subject . METHOD_7 ( ) ) . thenReturn ( name ) ; when ( name . METHOD_8 ( ) ) . thenReturn ( IDENT_22 . IDENT_23 ) ; when ( name . getValue ( ) ) . thenReturn ( IDENT_22 . IDENT_24 ) ; when ( IDENT_4 . METHOD_9 ( ) ) . thenReturn ( IDENT_20 ) ; when ( IDENT_20 . METHOD_8 ( ) ) . thenReturn ( IDENT_22 . IDENT_23 ) ; when ( IDENT_20 . getValue ( ) ) . thenReturn ( IDENT_22 . IDENT_24 ) ; validator . METHOD_10 ( new org . apache . wss4j . common . IDENT_1 . METHOD_11 ( IDENT_4 ) ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( org . apache . wss4j . common . IDENT_1 . METHOD_11 ) { if ( ( IDENT_4 . METHOD_12 ( ) ) != null ) { IDENT_4 . METHOD_13 ( ) ; } else if ( ( IDENT_4 . METHOD_14 ( ) ) != null ) { final org . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_19 IDENT_20 = IDENT_4 . METHOD_14 ( ) . METHOD_9 ( ) ; gov . hhs . fha . nhinc . IDENT_5 . cxf . IDENT_25 . METHOD_15 ( IDENT_20 ) ; try { for ( final gov . hhs . fha . nhinc . IDENT_5 . cxf . IDENT_26 validator : METHOD_16 ( ) ) { validator . METHOD_10 ( IDENT_4 ) ; } } catch ( final org . apache . wss4j . common . ext . IDENT_27 e ) { gov . hhs . fha . nhinc . IDENT_5 . cxf . IDENT_25 . LOG . error ( STRING_0 , e . METHOD_17 ( ) , e ) ; throw new org . apache . wss4j . common . ext . METHOD_18 ( org . apache . wss4j . common . ext . METHOD_18 . IDENT_28 . IDENT_29 , STRING_1 ) ; } } }
org . junit . Assert . assertTrue ( true ) 