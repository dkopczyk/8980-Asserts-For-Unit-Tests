METHOD_0 ( ) { final com . IDENT_0 . util . collection . IDENT_1 . IDENT_2 < com . IDENT_0 . util . collection . geometry . IDENT_3 > IDENT_4 = com . IDENT_0 . util . collection . IDENT_1 . IDENT_5 . METHOD_1 ( IDENT_2 . IDENT_6 . IDENT_7 ) ; final com . IDENT_0 . util . collection . geometry . IDENT_3 [ ] IDENT_8 = new com . IDENT_0 . util . collection . geometry . IDENT_3 [ 5 ] ; for ( int i = 0 ; i < ( IDENT_8 . length ) ; i ++ ) { IDENT_8 [ i ] = new com . IDENT_0 . util . collection . geometry . METHOD_2 ( i , i , ( i + 1 ) , ( i + 1 ) ) ; IDENT_4 . add ( IDENT_8 [ i ] ) ; } for ( int i = 0 ; i < ( IDENT_8 . length ) ; i ++ ) { "<AssertPlaceHolder>" ; } } contains ( T ) { IDENT_9 . METHOD_3 ( ) ; try { return IDENT_4 . contains ( t ) ; } finally { IDENT_9 . METHOD_4 ( ) ; } }
org . junit . Assert . assertTrue ( IDENT_4 . contains ( IDENT_8 [ i ] ) ) 