METHOD_0 ( ) { org . apache . ibatis . session . IDENT_0 IDENT_1 = IDENT_2 . IDENT_3 . mapper . mapper . IDENT_4 . METHOD_1 ( ) ; try { IDENT_2 . IDENT_3 . mapper . mapper . IDENT_5 mapper = IDENT_1 . METHOD_2 ( IDENT_2 . IDENT_3 . mapper . mapper . IDENT_5 . class ) ; IDENT_2 . IDENT_3 . mapper . entity . IDENT_6 example = new IDENT_2 . IDENT_3 . mapper . entity . METHOD_3 ( IDENT_2 . IDENT_3 . mapper . model . IDENT_7 . class ) ; example . METHOD_4 ( ) . METHOD_5 ( STRING_0 ) . METHOD_5 ( STRING_1 , 5 ) ; java . util . List < IDENT_2 . IDENT_3 . mapper . model . IDENT_7 > IDENT_8 = mapper . METHOD_6 ( example ) ; "<AssertPlaceHolder>" ; } finally { IDENT_1 . close ( ) ; } } METHOD_6 ( org . apache . ibatis . mapping . IDENT_9 ) { java . lang . Class < ? > IDENT_10 = METHOD_7 ( IDENT_11 ) ; METHOD_8 ( IDENT_11 , IDENT_10 ) ; java . lang . StringBuilder sql = new java . lang . StringBuilder ( STRING_2 ) ; if ( METHOD_9 ( ) ) { sql . append ( IDENT_2 . IDENT_3 . mapper . IDENT_12 . IDENT_13 . METHOD_10 ( IDENT_10 ) ) ; } sql . append ( STRING_3 ) ; sql . append ( IDENT_2 . IDENT_3 . mapper . IDENT_12 . IDENT_13 . METHOD_11 ( IDENT_10 ) ) ; sql . append ( IDENT_2 . IDENT_3 . mapper . IDENT_12 . IDENT_13 . METHOD_12 ( IDENT_10 , tableName ( IDENT_10 ) ) ) ; sql . append ( IDENT_2 . IDENT_3 . mapper . IDENT_12 . IDENT_13 . METHOD_13 ( ) ) ; sql . append ( IDENT_2 . IDENT_3 . mapper . IDENT_12 . IDENT_13 . METHOD_14 ( IDENT_10 ) ) ; sql . append ( IDENT_2 . IDENT_3 . mapper . IDENT_12 . IDENT_13 . METHOD_15 ( ) ) ; return sql . toString ( ) ; }
org . junit . Assert . assertEquals ( 3 , IDENT_8 . size ( ) ) 