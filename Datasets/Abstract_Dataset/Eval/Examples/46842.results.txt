METHOD_0 ( ) { final java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { STRING_0 , STRING_1 4 } ; final java . lang . String [ ] IDENT_1 = new java . lang . String [ ] { } ; final java . lang . String [ ] IDENT_2 = new java . lang . String [ ] { STRING_2 } ; final java . lang . String [ ] IDENT_3 = new java . lang . String [ ] { STRING_3 , STRING_4 } ; final java . lang . String [ ] IDENT_4 = new java . lang . String [ ] { STRING_0 , STRING_1 4 , STRING_5 , STRING_6 , STRING_7 , STRING_1 1 , STRING_8 , STRING_1 0 } ; final java . lang . String [ ] IDENT_5 = new java . lang . String [ ] { STRING_3 , STRING_4 } ; final java . lang . String [ ] IDENT_6 = new java . lang . String [ ] { STRING_2 } ; final java . lang . String [ ] IDENT_7 = new java . lang . String [ ] { } ; final java . lang . String IDENT_8 = new java . lang . Object ( ) { } . getClass ( ) . METHOD_1 ( ) . getName ( ) ; com . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 . METHOD_2 ( ( IDENT_8 + STRING_1 ) ) ; IDENT_13 . METHOD_3 ( null ) ; IDENT_13 . METHOD_4 ( true ) ; com . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 . IDENT_14 . METHOD_5 ( ) ; METHOD_6 ( 1 , 3 ) ; java . lang . String IDENT_15 = java . util . UUID . METHOD_7 ( ) . toString ( ) ; com . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_16 IDENT_11 = METHOD_8 ( 0 , 2 , IDENT_15 ) ; com . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_17 state = METHOD_9 ( IDENT_15 ) ; com . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 . METHOD_2 ( ( STRING_1 3 + state ) ) ; "<AssertPlaceHolder>" ; java . util . Map < java . lang . String , com . IDENT_9 . IDENT_10 . db . client . model . IDENT_18 > IDENT_19 = METHOD_10 ( IDENT_15 ) ; METHOD_11 ( IDENT_19 , IDENT_0 , IDENT_1 , IDENT_2 , IDENT_3 ) ; if ( state == ( IDENT_17 . IDENT_20 ) ) { java . lang . String IDENT_21 = java . util . UUID . METHOD_7 ( ) . toString ( ) ; com . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 . IDENT_22 . remove ( IDENT_15 ) ; com . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 . IDENT_14 . METHOD_5 ( ) ; IDENT_13 . METHOD_12 ( IDENT_11 . METHOD_13 ( ) , IDENT_21 ) ; state = METHOD_9 ( IDENT_15 ) ; com . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 . METHOD_2 ( ( STRING_9 + state ) ) ; IDENT_19 = METHOD_10 ( IDENT_15 ) ; METHOD_11 ( IDENT_19 , IDENT_4 , IDENT_5 , IDENT_6 , IDENT_7 ) ; } com . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 . METHOD_2 ( ( IDENT_8 + STRING_1 2 ) ) ; } METHOD_2 ( java . lang . String ) { System . out . println ( s ) ; com . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 . log . info ( s ) ; }
org . junit . Assert . assertTrue ( ( state == ( IDENT_17 . IDENT_20 ) ) ) 