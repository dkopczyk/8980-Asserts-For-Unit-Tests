METHOD_0 ( ) { com . couchbase . client . java . search . IDENT_0 p = new com . couchbase . client . java . search . METHOD_1 ( null , null ) . METHOD_2 ( 100 ) ; com . couchbase . client . java . document . json . IDENT_1 result = com . couchbase . client . java . document . json . IDENT_1 . empty ( ) ; p . METHOD_3 ( result ) ; com . couchbase . client . java . document . json . IDENT_1 expected = com . couchbase . client . java . document . json . IDENT_1 . create ( ) . put ( STRING_0 , 100 ) ; "<AssertPlaceHolder>" ; } put ( java . lang . String , IDENT_2 ) { if ( key == null ) { throw new java . lang . METHOD_4 ( STRING_1 ) ; } if ( ! ( com . couchbase . client . java . document . json . IDENT_3 . METHOD_5 ( value ) ) ) { throw new java . lang . IllegalArgumentException ( STRING_2 ) ; } for ( int i = 0 ; i < ( com . couchbase . client . java . IDENT_4 . collections . IDENT_5 . IDENT_6 ) ; i ++ ) { try { com . couchbase . client . java . IDENT_7 . IDENT_8 < com . couchbase . client . core . message . IDENT_9 . IDENT_7 . IDENT_10 . IDENT_11 > IDENT_12 = IDENT_13 . METHOD_6 ( id ) . get ( key ) . execute ( ) ; long IDENT_14 = IDENT_12 . METHOD_7 ( ) ; java . lang . Object result = null ; if ( IDENT_12 . exists ( key ) ) { result = IDENT_12 . content ( key ) ; } IDENT_13 . METHOD_8 ( id ) . METHOD_9 ( key , value , false ) . METHOD_10 ( IDENT_14 ) . execute ( ) ; return ( ( IDENT_2 ) ( result ) ) ; } catch ( com . couchbase . client . java . error . IDENT_15 ex ) { } } throw new java . util . METHOD_11 ( ( ( STRING_3 + ( com . couchbase . client . java . IDENT_4 . collections . IDENT_5 . IDENT_6 ) ) + STRING_4 ) ) ; }
org . junit . Assert . assertEquals ( expected , result ) 