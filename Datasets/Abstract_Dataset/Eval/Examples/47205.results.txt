METHOD_0 ( ) { com . couchbase . client . core . node . IDENT_0 registry = new com . couchbase . client . core . node . METHOD_1 ( ) ; com . couchbase . client . core . service . IDENT_1 IDENT_2 = mock ( com . couchbase . client . core . service . IDENT_1 . class ) ; when ( IDENT_2 . type ( ) ) . thenReturn ( IDENT_3 . IDENT_4 ) ; when ( IDENT_2 . mapping ( ) ) . thenReturn ( IDENT_3 . IDENT_4 . mapping ( ) ) ; registry . METHOD_2 ( IDENT_2 , STRING_0 ) ; com . couchbase . client . core . message . IDENT_5 . IDENT_6 request = mock ( com . couchbase . client . core . message . IDENT_5 . IDENT_6 . class ) ; when ( request . METHOD_3 ( ) ) . thenReturn ( STRING_0 ) ; com . couchbase . client . core . service . IDENT_1 service = registry . METHOD_4 ( request ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( com . couchbase . client . core . message . IDENT_7 ) { com . couchbase . client . core . service . IDENT_3 type = com . couchbase . client . core . node . METHOD_1 . METHOD_5 ( request ) ; if ( ( type . mapping ( ) ) == ( com . couchbase . client . core . service . IDENT_8 . IDENT_9 ) ) { java . util . Map < com . couchbase . client . core . service . IDENT_3 , com . couchbase . client . core . service . IDENT_1 > services = IDENT_10 . get ( request . METHOD_3 ( ) ) ; if ( services == null ) { return null ; } return services . get ( type ) ; } else { return IDENT_11 . get ( type ) ; } }
org . junit . Assert . assertEquals ( IDENT_2 , service ) 