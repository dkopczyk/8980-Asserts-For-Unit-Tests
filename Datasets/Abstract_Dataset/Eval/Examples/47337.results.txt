METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . rule . IDENT_2 < java . lang . String > IDENT_3 = new com . IDENT_0 . IDENT_1 . rule . impl . IDENT_4 < java . lang . String > ( STRING_0 ) ; com . IDENT_0 . IDENT_1 . rule . IDENT_2 < java . lang . String > IDENT_5 = new com . IDENT_0 . IDENT_1 . rule . impl . IDENT_4 < java . lang . String > ( STRING_1 ) ; com . IDENT_0 . IDENT_1 . rule . IDENT_6 IDENT_7 = new com . IDENT_0 . IDENT_1 . rule . METHOD_1 ( ) ; java . util . List < com . IDENT_0 . IDENT_1 . rule . IDENT_2 < java . lang . String > > IDENT_8 = new java . util . ArrayList < com . IDENT_0 . IDENT_1 . rule . IDENT_2 < java . lang . String > > ( ) ; IDENT_8 . add ( IDENT_3 ) ; IDENT_7 . METHOD_2 ( IDENT_8 ) ; java . util . List < com . IDENT_0 . IDENT_1 . rule . IDENT_2 < java . lang . String > > IDENT_9 = new java . util . ArrayList < com . IDENT_0 . IDENT_1 . rule . IDENT_2 < java . lang . String > > ( ) ; IDENT_9 . add ( IDENT_5 ) ; IDENT_7 . METHOD_3 ( IDENT_9 ) ; IDENT_7 . init ( ) ; com . IDENT_0 . IDENT_1 . rule . IDENT_10 IDENT_11 = new com . IDENT_0 . IDENT_1 . rule . METHOD_4 ( ) ; IDENT_11 . METHOD_5 ( STRING_2 , METHOD_6 ( 0 , 4 , INT_0 , INT_1 , INT_2 ) ) ; com . IDENT_0 . IDENT_1 . rule . IDENT_12 IDENT_13 = new com . IDENT_0 . IDENT_1 . rule . METHOD_7 ( ) ; com . IDENT_0 . IDENT_1 . rule . model . IDENT_14 IDENT_15 = IDENT_13 . match ( IDENT_11 , com . google . common . collect . Lists . newArrayList ( ) , IDENT_7 , false ) ; java . util . List < com . IDENT_0 . IDENT_1 . rule . model . IDENT_16 > IDENT_17 = IDENT_15 . METHOD_8 ( ) ; "<AssertPlaceHolder>" ; } size ( ) { return param . size ( ) ; }
org . junit . Assert . assertEquals ( 3 , IDENT_17 . size ( ) ) 