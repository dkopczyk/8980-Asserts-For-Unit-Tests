METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( any ( ) ) ) . thenReturn ( new com . IDENT_1 . IDENT_2 . core . context . METHOD_2 ( ) ) ; com . IDENT_1 . IDENT_2 . core . task . IDENT_3 IDENT_4 = new com . IDENT_1 . IDENT_2 . core . task . METHOD_3 ( IDENT_5 , IDENT_6 , IDENT_7 , IDENT_0 ) ; com . IDENT_1 . IDENT_2 . core . task . IDENT_8 task = com . IDENT_1 . IDENT_2 . core . task . IDENT_8 . create ( ) ; task . set ( STRING_0 , java . util . Arrays . asList ( com . google . common . collect . ImmutableMap . of ( STRING_1 , STRING_2 , STRING_3 , java . util . Arrays . asList ( com . google . common . collect . ImmutableMap . of ( STRING_4 , STRING_5 ) ) ) , com . google . common . collect . ImmutableMap . of ( STRING_1 , STRING_6 , STRING_3 , java . util . Arrays . asList ( com . google . common . collect . ImmutableMap . of ( STRING_4 , STRING_7 ) ) ) ) ) ; task . set ( STRING_8 , STRING_6 ) ; IDENT_4 . METHOD_4 ( task ) ; org . mockito . IDENT_9 < com . IDENT_1 . IDENT_2 . core . task . IDENT_10 > IDENT_11 = org . mockito . IDENT_9 . METHOD_5 ( com . IDENT_1 . IDENT_2 . core . task . IDENT_10 . class ) ; verify ( IDENT_5 , times ( 1 ) ) . METHOD_4 ( IDENT_11 . METHOD_6 ( ) ) ; "<AssertPlaceHolder>" ; } getType ( ) { return getString ( IDENT_12 . IDENT_13 ) ; }
org . junit . Assert . assertEquals ( STRING_7 , IDENT_11 . getValue ( ) . getType ( ) ) 