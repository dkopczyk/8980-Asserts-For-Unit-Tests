METHOD_0 ( ) { int count = 100 ; java . util . concurrent . atomic . IDENT_0 IDENT_1 = new java . util . concurrent . atomic . METHOD_1 ( false ) ; com . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 IDENT_7 = new com . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_2 ( IDENT_1 ) ; java . util . List < com . IDENT_2 . IDENT_3 . api . IDENT_8 . IDENT_9 > IDENT_10 = new java . util . METHOD_3 ( ) ; for ( int i = 0 ; i < count ; i ++ ) { com . IDENT_2 . IDENT_3 . api . IDENT_8 . IDENT_9 IDENT_8 = new com . IDENT_2 . IDENT_3 . api . IDENT_8 . METHOD_4 ( ) { @ com . IDENT_2 . IDENT_3 . IDENT_4 . Override public void update ( java . lang . Object args , com . IDENT_2 . IDENT_3 . api . IDENT_8 . IDENT_11 IDENT_12 ) { } } ; IDENT_10 . add ( IDENT_8 ) ; IDENT_7 . METHOD_5 ( IDENT_8 ) ; } IDENT_13 . execute ( new java . lang . METHOD_6 ( ) { @ com . IDENT_2 . IDENT_3 . IDENT_4 . Override public void run ( ) { IDENT_10 . METHOD_7 ( ( IDENT_8 ) -> IDENT_7 . METHOD_8 ( IDENT_8 ) ) ; } } ) ; for ( int i = 0 ; i < ( count * 10 ) ; i ++ ) { IDENT_7 . METHOD_9 ( new java . lang . Object ( ) ) ; } "<AssertPlaceHolder>" ; } get ( ) { METHOD_10 ( ) ; java . lang . Throwable IDENT_14 = METHOD_11 ( ) ; if ( METHOD_11 == null ) { return METHOD_12 ( ) ; } if ( METHOD_11 instanceof com . IDENT_2 . IDENT_3 . command . IDENT_15 ) { throw ( ( com . IDENT_2 . IDENT_3 . command . IDENT_15 ) ( METHOD_11 ) ) ; } throw new com . IDENT_2 . IDENT_3 . command . METHOD_13 ( METHOD_11 ) ; }
org . junit . Assert . assertFalse ( IDENT_1 . get ( ) ) 