METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 . ui . IDENT_3 . IDENT_4 . LOGGER . info ( STRING_0 ) ; try { final IDENT_0 . IDENT_1 . IDENT_2 . ui . IDENT_3 . IDENT_5 IDENT_6 = new IDENT_0 . IDENT_1 . IDENT_2 . ui . IDENT_3 . METHOD_1 ( ) ; final java . util . List < java . awt . IDENT_7 > IDENT_8 = new java . util . ArrayList ( ) ; java . util . Set < java . awt . IDENT_7 > IDENT_9 = null ; final java . awt . IDENT_7 [ ] components = IDENT_6 . METHOD_2 ( ) ; for ( final java . awt . IDENT_7 IDENT_10 : components ) { if ( IDENT_10 instanceof javax . IDENT_11 . IDENT_12 ) { final javax . IDENT_11 . IDENT_12 IDENT_13 = ( ( javax . IDENT_11 . IDENT_12 ) ( IDENT_10 ) ) ; final java . awt . IDENT_7 component = IDENT_13 . METHOD_3 ( ) ; if ( component != null ) { IDENT_8 . add ( component ) ; } } else if ( IDENT_10 instanceof javax . IDENT_11 . IDENT_14 ) { METHOD_4 ( ( ( javax . IDENT_11 . IDENT_14 ) ( IDENT_10 ) ) , IDENT_8 ) ; } } IDENT_9 = new java . util . HashSet ( IDENT_8 ) ; "<AssertPlaceHolder>" ; } catch ( final IDENT_0 . IDENT_1 . IDENT_2 . ui . IDENT_3 . java . awt e ) { } } METHOD_4 ( javax . IDENT_11 . IDENT_14 , java . util . List ) { final java . awt . IDENT_7 [ ] components = IDENT_15 . METHOD_2 ( ) ; java . awt . IDENT_7 IDENT_16 = null ; for ( int i = 0 ; i < ( components . length ) ; i ++ ) { final java . awt . IDENT_7 component = IDENT_15 . METHOD_5 ( i ) ; if ( ! ( component instanceof javax . IDENT_11 . IDENT_14 ) ) { if ( component instanceof javax . IDENT_11 . IDENT_12 ) { final javax . IDENT_11 . IDENT_12 IDENT_13 = ( ( javax . IDENT_11 . IDENT_12 ) ( component ) ) ; IDENT_16 = IDENT_13 . METHOD_3 ( ) ; if ( IDENT_16 != null ) { IDENT_8 . add ( IDENT_16 ) ; } } } else { METHOD_4 ( ( ( javax . IDENT_11 . IDENT_14 ) ( component ) ) , IDENT_8 ) ; } }
org . junit . Assert . assertTrue ( ( ( IDENT_9 . size ( ) ) == ( IDENT_8 . size ( ) ) ) ) 