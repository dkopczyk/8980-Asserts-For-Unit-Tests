METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; java . util . List < fr . IDENT_2 . IDENT_3 . beans . IDENT_4 > IDENT_5 = IDENT_6 . METHOD_1 ( 0 , 10 , IDENT_1 , IDENT_0 , true , null ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . Integer , java . lang . Integer , java . lang . String , java . lang . String , java . lang . Boolean , java . lang . String ) { org . hibernate . IDENT_7 . IDENT_8 dc = org . hibernate . IDENT_7 . IDENT_8 . METHOD_2 ( fr . IDENT_2 . IDENT_3 . beans . IDENT_9 . class , STRING_2 ) ; dc . METHOD_3 ( STRING_3 , STRING_4 , IDENT_10 . IDENT_11 ) ; dc . METHOD_4 ( org . hibernate . IDENT_7 . IDENT_12 . METHOD_5 ( ) . add ( org . hibernate . IDENT_7 . IDENT_12 . property ( STRING_5 ) ) ) ; dc . add ( org . hibernate . IDENT_7 . IDENT_13 . eq ( STRING_6 , IDENT_1 ) ) ; org . hibernate . IDENT_14 criteria = METHOD_6 ( IDENT_15 , IDENT_16 ) ; criteria . add ( org . hibernate . IDENT_7 . IDENT_17 . METHOD_7 ( STRING_5 , dc ) ) ; METHOD_8 ( criteria , IDENT_0 ) ; criteria . add ( org . hibernate . IDENT_7 . IDENT_13 . METHOD_9 ( org . hibernate . IDENT_7 . IDENT_13 . and ( org . hibernate . IDENT_7 . IDENT_13 . eq ( STRING_7 , false ) , org . hibernate . IDENT_7 . IDENT_13 . METHOD_10 ( org . hibernate . IDENT_7 . IDENT_13 . METHOD_11 ( STRING_8 ) , org . hibernate . IDENT_7 . IDENT_13 . isEmpty ( STRING_8 ) ) ) ) ) ; if ( null != IDENT_18 ) { METHOD_12 ( criteria , IDENT_18 ) ; } METHOD_13 ( criteria , METHOD_13 ) ; return criteria . list ( ) ; }
org . junit . Assert . assertEquals ( 1 , IDENT_5 . size ( ) ) 