METHOD_0 ( ) { fr . IDENT_0 . IDENT_1 . beans . IDENT_2 IDENT_3 = new fr . IDENT_0 . IDENT_1 . beans . METHOD_1 ( ) ; IDENT_3 . METHOD_2 ( STRING_0 ) ; IDENT_3 . METHOD_3 ( fr . IDENT_0 . IDENT_1 . utils . IDENT_4 . METHOD_4 ( ) ) ; IDENT_3 . METHOD_5 ( fr . IDENT_0 . IDENT_1 . utils . IDENT_4 . METHOD_4 ( ) ) ; com . IDENT_5 . IDENT_6 . jena . IDENT_7 . model . IDENT_8 model = com . IDENT_5 . IDENT_6 . jena . IDENT_7 . model . IDENT_9 . METHOD_6 ( ) ; java . io . InputStream is = fr . IDENT_0 . IDENT_1 . tests . IDENT_10 . IDENT_11 . class . getResourceAsStream ( STRING_1 ) ; model . read ( is , null ) ; com . IDENT_5 . IDENT_6 . jena . IDENT_7 . model . IDENT_12 IDENT_13 = model . getResource ( STRING_0 ) ; java . util . List < fr . IDENT_0 . IDENT_1 . beans . IDENT_14 > IDENT_15 = new java . util . ArrayList < fr . IDENT_0 . IDENT_1 . beans . IDENT_14 > ( ) ; fr . IDENT_0 . IDENT_1 . beans . IDENT_14 IDENT_16 = new fr . IDENT_0 . IDENT_1 . beans . METHOD_7 ( ) ; IDENT_16 . METHOD_8 ( STRING_2 ) ; IDENT_15 . add ( IDENT_16 ) ; fr . IDENT_0 . IDENT_1 . beans . METHOD_7 close = new fr . IDENT_0 . IDENT_1 . beans . METHOD_7 ( ) ; close . METHOD_8 ( STRING_3 ) ; IDENT_15 . add ( close ) ; fr . IDENT_0 . IDENT_1 . beans . METHOD_7 IDENT_17 = new fr . IDENT_0 . IDENT_1 . beans . METHOD_7 ( ) ; IDENT_17 . METHOD_8 ( STRING_4 ) ; IDENT_15 . add ( IDENT_17 ) ; fr . IDENT_0 . IDENT_1 . beans . METHOD_7 IDENT_18 = new fr . IDENT_0 . IDENT_1 . beans . METHOD_7 ( ) ; IDENT_18 . METHOD_8 ( STRING_5 ) ; IDENT_15 . add ( IDENT_18 ) ; fr . IDENT_0 . IDENT_1 . beans . METHOD_7 IDENT_19 = new fr . IDENT_0 . IDENT_1 . beans . METHOD_7 ( ) ; IDENT_19 . METHOD_8 ( STRING_6 ) ; IDENT_15 . add ( IDENT_19 ) ; fr . IDENT_0 . IDENT_1 . beans . METHOD_7 IDENT_20 = new fr . IDENT_0 . IDENT_1 . beans . METHOD_7 ( ) ; IDENT_20 . METHOD_8 ( STRING_7 ) ; IDENT_20 . METHOD_9 ( true ) ; IDENT_15 . add ( IDENT_20 ) ; fr . IDENT_0 . IDENT_1 . beans . METHOD_7 IDENT_21 = new fr . IDENT_0 . IDENT_1 . beans . METHOD_7 ( ) ; IDENT_21 . METHOD_9 ( true ) ; IDENT_21 . METHOD_8 ( STRING_8 ) ; IDENT_15 . add ( IDENT_21 ) ; org . mockito . Mockito . when ( IDENT_22 . METHOD_10 ( ) ) . thenReturn ( IDENT_15 ) ; java . util . List < fr . IDENT_0 . IDENT_1 . beans . IDENT_23 > IDENT_24 = IDENT_25 . METHOD_11 ( IDENT_13 , IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_11 ( com . IDENT_5 . IDENT_6 . jena . IDENT_7 . model . IDENT_12 , fr . IDENT_0 . IDENT_1 . beans . METHOD_1 ) { fr . IDENT_0 . IDENT_1 . IDENT_10 . IDENT_26 . logger . debug ( ( STRING_9 + ( IDENT_13 . METHOD_12 ( ) ) ) ) ; java . util . List < fr . IDENT_0 . IDENT_1 . beans . IDENT_23 > IDENT_27 = new java . util . ArrayList < fr . IDENT_0 . IDENT_1 . beans . IDENT_23 > ( ) ; java . util . List < fr . IDENT_0 . IDENT_1 . beans . METHOD_7 > IDENT_15 = IDENT_22 . METHOD_10 ( ) ; for ( fr . IDENT_0 . IDENT_1 . beans . METHOD_7 IDENT_28 : IDENT_15 ) { java . lang . String IDENT_29 = IDENT_28 . METHOD_13 ( ) ; if ( IDENT_30 . IDENT_31 . containsKey ( IDENT_29 ) ) { com . IDENT_5 . IDENT_6 . jena . IDENT_7 . model . IDENT_32 IDENT_33 = IDENT_13 . METHOD_14 ( IDENT_30 . IDENT_31 . get ( IDENT_29 ) ) ; while ( IDENT_33 . hasNext ( ) ) { com . IDENT_5 . IDENT_6 . jena . IDENT_7 . model . IDENT_34 IDENT_35 = IDENT_33 . next ( ) ; IDENT_27 . add ( IDENT_36 . METHOD_15 ( IDENT_35 , IDENT_28 , IDENT_3 ) ) ; } } if ( IDENT_37 . IDENT_38 . containsKey ( IDENT_29 ) ) { com . IDENT_5 . IDENT_6 . jena . IDENT_7 . model . IDENT_32 IDENT_33 = IDENT_13 . METHOD_14 ( IDENT_37 . IDENT_38 . get ( IDENT_29 ) ) ; while ( IDENT_33 . hasNext ( ) ) { com . IDENT_5 . IDENT_6 . jena . IDENT_7 . model . IDENT_34 IDENT_35 = IDENT_33 . next ( ) ; IDENT_27 . add ( IDENT_36 . METHOD_15 ( IDENT_35 , IDENT_28 , IDENT_3 ) ) ; } } } return IDENT_27 ; }
org . junit . Assert . assertEquals ( 7 , IDENT_24 . size ( ) ) 