METHOD_0 ( ) { io . IDENT_0 . IDENT_1 . IDENT_2 . User IDENT_3 = new io . IDENT_0 . IDENT_1 . IDENT_2 . User ( STRING_0 , INT_0 , STRING_1 4 ) ; io . IDENT_0 . IDENT_1 . IDENT_2 . User IDENT_4 = new io . IDENT_0 . IDENT_1 . IDENT_2 . User ( STRING_1 6 , INT_1 , STRING_1 0 ) ; io . IDENT_0 . IDENT_1 . IDENT_2 . User IDENT_5 = new io . IDENT_0 . IDENT_1 . IDENT_2 . User ( STRING_2 , 15 , STRING_1 ) ; io . IDENT_0 . IDENT_1 . IDENT_2 . User IDENT_6 = new io . IDENT_0 . IDENT_1 . IDENT_2 . User ( STRING_1 7 , INT_0 , STRING_1 2 ) ; java . util . List < io . IDENT_0 . IDENT_1 . IDENT_2 . User > IDENT_7 = new java . util . ArrayList < io . IDENT_0 . IDENT_1 . IDENT_2 . User > ( ) ; IDENT_7 . add ( IDENT_3 ) ; IDENT_7 . add ( IDENT_4 ) ; IDENT_7 . add ( IDENT_5 ) ; IDENT_7 . add ( IDENT_6 ) ; io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_8 schema = new io . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( STRING_1 5 ) ; schema . METHOD_2 ( STRING_3 , IDENT_7 ) ; io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 IDENT_10 = new io . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_3 ( schema ) ; java . lang . String sql = STRING_4 ; java . sql . ResultSet result = IDENT_10 . execute ( sql ) ; if ( result != null ) { int output = - 1 ; try { result . next ( ) ; output = result . METHOD_4 ( STRING_1 1 ) ; } catch ( java . sql . IDENT_11 e ) { org . junit . Assert . fail ( STRING_5 ) ; } "<AssertPlaceHolder>" ; } else { org . junit . Assert . fail ( STRING_1 3 ) ; } IDENT_10 . close ( ) ; } execute ( java . lang . String ) { java . sql . ResultSet results = null ; try { logger . debug ( STRING_6 ) ; statement = connection . METHOD_5 ( ) ; logger . debug ( ( STRING_7 + sql ) ) ; results = statement . METHOD_6 ( sql ) ; logger . debug ( STRING_8 ) ; } catch ( java . sql . IDENT_11 e ) { logger . error ( ( STRING_9 + e ) ) ; } return results ; }
org . junit . Assert . assertEquals ( output , INT_0 ) 