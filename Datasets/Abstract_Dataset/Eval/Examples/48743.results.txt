METHOD_0 ( ) { org . jfree . chart . IDENT_0 . IDENT_1 IDENT_2 = new org . jfree . chart . IDENT_0 . METHOD_1 ( new java . awt . geom . IDENT_3 . Double ( 1.0 , 2.0 , FLOAT_0 , FLOAT_1 ) , new java . awt . METHOD_2 ( FLOAT_2 ) , java . awt . IDENT_4 . IDENT_5 , java . awt . IDENT_4 . IDENT_6 ) ; org . jfree . chart . IDENT_0 . METHOD_1 IDENT_7 = ( ( org . jfree . chart . IDENT_0 . METHOD_1 ) ( org . jfree . chart . IDENT_8 . METHOD_3 ( IDENT_2 ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . Object ) { java . lang . Object result = null ; java . io . ByteArrayOutputStream buffer = new java . io . ByteArrayOutputStream ( ) ; java . io . IDENT_9 out ; try { out = new java . io . METHOD_4 ( buffer ) ; out . METHOD_5 ( original ) ; out . close ( ) ; java . io . IDENT_10 in = new java . io . METHOD_6 ( new java . io . ByteArrayInputStream ( buffer . toByteArray ( ) ) ) ; result = in . METHOD_7 ( ) ; in . close ( ) ; } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( e ) ; } catch ( java . lang . IDENT_11 e ) { throw new java . lang . RuntimeException ( e ) ; } return result ; }
org . junit . Assert . assertEquals ( IDENT_2 , IDENT_7 ) 