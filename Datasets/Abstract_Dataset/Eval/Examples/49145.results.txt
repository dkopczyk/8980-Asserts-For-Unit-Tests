METHOD_0 ( ) { int i = 0 ; for ( java . lang . String IDENT_0 : eu . IDENT_1 . IDENT_2 . collections . IDENT_3 . IDENT_4 ) "<AssertPlaceHolder>" ; } get ( int ) { if ( ( IDENT_5 ) == 0 ) return 0 ; int IDENT_6 = ( index * ( IDENT_5 ) ) / ( eu . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 ) ; int IDENT_9 = ( index * ( IDENT_5 ) ) OP_0 ( eu . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 ) ; int result = ( ( IDENT_10 [ IDENT_6 ] ) > > > IDENT_9 ) & ( eu . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_11 [ IDENT_5 ] ) ; if ( ( IDENT_9 + ( IDENT_5 ) ) > ( eu . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 ) ) { int IDENT_12 = ( eu . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 ) - IDENT_9 ; result OP_1 ( ( IDENT_10 [ ( IDENT_6 + 1 ) ] ) & ( eu . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_11 [ ( ( IDENT_5 ) - IDENT_12 ) ] ) ) << IDENT_12 ; } return result ; }
org . junit . Assert . assertEquals ( ( i ++ ) , ( ( int ) ( map . get ( IDENT_0 ) ) ) ) 