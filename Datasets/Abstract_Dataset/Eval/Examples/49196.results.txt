METHOD_0 ( ) { com . IDENT_0 . exp . IDENT_1 < java . lang . String > IDENT_2 = new com . IDENT_0 . exp . METHOD_1 ( IDENT_3 . IDENT_4 , java . time . IDENT_5 . METHOD_2 ( 1 ) , new java . lang . METHOD_3 ( ) , null ) ; com . IDENT_0 . exp . METHOD_1 < java . lang . String > IDENT_6 = new com . IDENT_0 . exp . METHOD_1 ( IDENT_3 . IDENT_7 , java . time . IDENT_5 . METHOD_2 ( 1 ) , new java . lang . IllegalArgumentException ( ) , null ) ; com . IDENT_0 . exp . Result < java . lang . String > result = new com . IDENT_0 . exp . Result ( STRING_0 , java . time . IDENT_8 . now ( ) , IDENT_2 , IDENT_6 ) ; com . IDENT_0 . exp . IDENT_9 IDENT_10 = result . METHOD_4 ( Object :: equals , IDENT_11 :: equals ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . util . function . IDENT_12 , java . util . function . IDENT_12 ) { com . IDENT_0 . exp . IDENT_9 IDENT_10 ; if ( METHOD_5 ( ) ) { IDENT_10 = ( METHOD_6 ( IDENT_13 ) ) ? com . IDENT_0 . exp . IDENT_9 . IDENT_14 : com . IDENT_0 . exp . IDENT_9 . IDENT_15 ; } else if ( METHOD_7 ( ) ) { IDENT_10 = ( METHOD_8 ( IDENT_16 ) ) ? com . IDENT_0 . exp . IDENT_9 . IDENT_17 : com . IDENT_0 . exp . IDENT_9 . IDENT_18 ; } else { IDENT_10 = ( METHOD_9 ( ) ) ? com . IDENT_0 . exp . IDENT_9 . IDENT_19 : com . IDENT_0 . exp . IDENT_9 . IDENT_20 ; } return IDENT_10 ; }
org . junit . Assert . assertEquals ( IDENT_9 . IDENT_18 , IDENT_10 ) 