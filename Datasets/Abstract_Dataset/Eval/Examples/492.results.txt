METHOD_0 ( ) { log . debug ( STRING_0 ) ; com . IDENT_0 . platform . core . domain . model . User IDENT_1 = IDENT_2 . METHOD_1 ( INT_0 ) ; com . IDENT_0 . platform . core . domain . model . IDENT_3 module = IDENT_4 . METHOD_1 ( INT_1 ) ; java . lang . Boolean IDENT_5 = IDENT_6 . METHOD_2 ( IDENT_1 , IDENT_7 . IDENT_8 , module ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( com . IDENT_0 . platform . core . domain . model . User , com . IDENT_0 . platform . common . domain . model . IDENT_9 . IDENT_7 , com . IDENT_0 . platform . core . domain . model . IDENT_10 ) { if ( user == null ) { throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } if ( IDENT_11 == null ) { throw new java . lang . IllegalArgumentException ( STRING_2 ) ; } if ( IDENT_12 == null ) { throw new java . lang . IllegalArgumentException ( STRING_3 ) ; } if ( METHOD_3 ( user , IDENT_11 , IDENT_12 . getClass ( ) . METHOD_4 ( ) ) ) { return true ; } final java . util . List < java . lang . Long > IDENT_13 = new java . util . ArrayList ( ) ; for ( com . IDENT_0 . platform . core . domain . model . IDENT_14 IDENT_15 : user . METHOD_5 ( ) ) { IDENT_13 . add ( IDENT_15 . getId ( ) ) ; } final java . util . List < com . IDENT_0 . platform . core . domain . model . IDENT_16 > IDENT_17 = IDENT_18 . METHOD_6 ( IDENT_11 , IDENT_19 . IDENT_20 , IDENT_13 , com . IDENT_0 . platform . common . domain . model . IDENT_9 . IDENT_21 . METHOD_7 ( IDENT_12 . getClass ( ) . METHOD_4 ( ) ) , IDENT_12 . getId ( ) ) ; if ( ( IDENT_17 . size ( ) ) > 0 ) { if ( log . METHOD_8 ( ) ) { log . debug ( ( ( ( ( ( ( ( ( STRING_4 + ( user . METHOD_9 ( ) ) ) + STRING_5 0 ) + IDENT_11 ) + STRING_6 ) + ( IDENT_12 . getClass ( ) . METHOD_4 ( ) ) ) + STRING_7 ) + ( IDENT_12 . getId ( ) ) ) + STRING_8 ) ) ; } return true ; } if ( ( ( IDENT_12 . METHOD_10 ( ) ) != null ) && ( IDENT_12 . METHOD_10 ( ) . getId ( ) . equals ( user . getId ( ) ) ) ) { java . util . List < com . IDENT_0 . platform . core . domain . model . IDENT_16 > IDENT_22 = IDENT_18 . METHOD_6 ( IDENT_11 , IDENT_19 . IDENT_23 , 0L , com . IDENT_0 . platform . common . domain . model . IDENT_9 . IDENT_21 . METHOD_7 ( IDENT_12 . getClass ( ) . METHOD_4 ( ) ) , IDENT_12 . getId ( ) ) ; if ( ( IDENT_22 . size ( ) ) > 0 ) { if ( log . METHOD_8 ( ) ) { log . debug ( ( ( ( ( ( ( ( ( STRING_4 + ( user . METHOD_9 ( ) ) ) + STRING_5 0 ) + IDENT_11 ) + STRING_6 ) + ( IDENT_12 . getClass ( ) . METHOD_4 ( ) ) ) + STRING_7 ) + ( IDENT_12 . getId ( ) ) ) + STRING_5 ) ) ; } return true ; } } if ( log . METHOD_8 ( ) ) { log . debug ( ( ( ( ( ( ( ( ( STRING_4 + ( user . METHOD_9 ( ) ) ) + STRING_9 ) + IDENT_11 ) + STRING_6 ) + ( IDENT_12 . getClass ( ) . METHOD_4 ( ) ) ) + STRING_7 ) + ( IDENT_12 . getId ( ) ) ) + STRING_10 ) ) ; } return false ; }
org . junit . Assert . assertTrue ( IDENT_5 ) 