METHOD_0 ( ) { java . util . stream . IDENT_0 < java . lang . Integer > IDENT_1 = java . util . Arrays . < java . lang . Integer > asList ( ) . stream ( ) ; org . IDENT_2 . IDENT_3 . java . IDENT_4 . IDENT_5 < java . lang . Integer > IDENT_6 = new org . IDENT_2 . IDENT_3 . java . IDENT_4 . METHOD_1 ( org . IDENT_2 . IDENT_3 . core . types . IDENT_7 . METHOD_2 ( org . IDENT_2 . IDENT_3 . IDENT_8 . data . IDENT_9 . class ) , new org . IDENT_2 . IDENT_3 . core . function . METHOD_3 ( ( a , b ) -> a + b , org . IDENT_2 . IDENT_3 . core . types . IDENT_10 . METHOD_4 ( org . IDENT_2 . IDENT_3 . java . IDENT_4 . Integer . class ) , org . IDENT_2 . IDENT_3 . core . types . IDENT_10 . METHOD_5 ( org . IDENT_2 . IDENT_3 . java . IDENT_4 . Integer . class ) ) ) ; org . IDENT_2 . IDENT_3 . java . IDENT_11 . IDENT_12 [ ] IDENT_13 = new org . IDENT_2 . IDENT_3 . java . IDENT_11 . IDENT_12 [ ] { METHOD_6 ( IDENT_1 ) } ; org . IDENT_2 . IDENT_3 . java . IDENT_11 . IDENT_12 [ ] IDENT_14 = new org . IDENT_2 . IDENT_3 . java . IDENT_11 . IDENT_12 [ ] { METHOD_7 ( ) } ; evaluate ( IDENT_6 , IDENT_13 , IDENT_14 ) ; final java . util . List < java . lang . Integer > result = IDENT_14 [ 0 ] . < java . lang . Integer > METHOD_8 ( ) . collect ( java . util . stream . IDENT_15 . toList ( ) ) ; "<AssertPlaceHolder>" ; } size ( ) { return this . IDENT_16 . size ( ) ; }
org . junit . Assert . assertEquals ( 0 , result . size ( ) ) 