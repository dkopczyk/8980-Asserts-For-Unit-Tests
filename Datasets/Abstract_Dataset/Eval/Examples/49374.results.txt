METHOD_0 ( ) { java . lang . String error = validator . validate ( STRING_0 , null ) ; "<AssertPlaceHolder>" ; } validate ( java . lang . String , java . util . Collection ) { for ( java . lang . String IDENT_0 : org . IDENT_1 . IDENT_2 . client . widgets . IDENT_3 . IDENT_4 . IDENT_5 ) { int IDENT_6 = IDENT_7 . toLowerCase ( ) . indexOf ( IDENT_0 . toLowerCase ( ) ) ; if ( IDENT_6 >= 0 ) { int end = IDENT_7 . indexOf ( "\n" , IDENT_6 ) ; end = ( ( end != ( - 1 ) ) && ( ( end - IDENT_6 ) < INT_0 ) ) ? end : IDENT_6 + INT_0 ; java . lang . String expr = IDENT_7 . substring ( IDENT_6 , ( end >= ( IDENT_7 . length ( ) ) ? IDENT_7 . length ( ) : end ) ) ; return IDENT_8 . INSTANCE . METHOD_1 ( expr ) ; } } try { IDENT_9 . METHOD_2 ( IDENT_7 ) ; for ( java . lang . String key : IDENT_9 . keys ( ) ) { java . lang . String IDENT_10 = IDENT_9 . METHOD_3 ( key ) ; if ( ( IDENT_11 != null ) && ( ! ( IDENT_11 . contains ( IDENT_10 ) ) ) ) { return IDENT_8 . INSTANCE . METHOD_4 ( IDENT_10 ) ; } } java . lang . String IDENT_12 = METHOD_5 ( IDENT_7 ) ; IDENT_13 . evaluate ( IDENT_12 ) ; IDENT_12 = METHOD_6 ( IDENT_12 ) ; IDENT_13 . evaluate ( IDENT_12 ) ; return null ; } catch ( java . lang . Exception e ) { java . lang . String error = e . getMessage ( ) ; return METHOD_7 ( error ) ; } }
org . junit . Assert . assertNull ( error ) 