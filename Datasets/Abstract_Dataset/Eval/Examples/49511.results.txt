METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . impl . generator . IDENT_3 IDENT_4 = new org . IDENT_0 . IDENT_1 . IDENT_2 . impl . generator . METHOD_1 ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . impl . IDENT_5 IDENT_6 = new org . IDENT_0 . IDENT_1 . IDENT_2 . impl . METHOD_2 ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . impl . generator . IDENT_7 state = METHOD_3 ( ) ; state . IDENT_8 = mock ( org . IDENT_0 . IDENT_1 . IDENT_2 . api . generator . IDENT_9 . class ) ; when ( state . IDENT_8 . METHOD_4 ( ( STRING_0 + ( org . IDENT_0 . IDENT_1 . IDENT_2 . impl . generator . IDENT_10 . path ( state . tree , STRING_1 ) ) ) , IDENT_11 . IDENT_12 ) ) . METHOD_5 ( new org . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_6 ( org . IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_13 . IDENT_14 ) ) ; final java . lang . String IDENT_15 = METHOD_7 ( state . tree . METHOD_8 ( ) . toString ( ) ) ; final java . util . concurrent . atomic . IDENT_16 IDENT_17 = new java . util . concurrent . atomic . METHOD_9 ( Boolean . IDENT_18 ) ; when ( state . IDENT_8 . METHOD_4 ( METHOD_10 ( IDENT_15 ) , any ( org . IDENT_0 . IDENT_1 . IDENT_2 . api . generator . IDENT_11 . class ) ) ) . METHOD_11 ( ( IDENT_19 ) -> { IDENT_17 . set ( Boolean . IDENT_20 ) ; return IDENT_6 . METHOD_12 ( state . tree ) ; } ) ; IDENT_4 . init ( state ) ; verify ( state . IDENT_8 , times ( 2 ) ) . METHOD_4 ( anyString ( ) , any ( org . IDENT_0 . IDENT_1 . IDENT_2 . api . generator . IDENT_11 . class ) ) ; "<AssertPlaceHolder>" ; } init ( org . IDENT_0 . IDENT_1 . IDENT_2 . impl . generator . IDENT_7 ) { org . apache . jena . IDENT_21 . model . IDENT_22 IDENT_23 = state . IDENT_24 . METHOD_13 ( "" ) ; org . apache . jena . IDENT_21 . model . IDENT_22 IDENT_25 = state . IDENT_24 . METHOD_13 ( STRING_2 ) ; org . apache . jena . IDENT_21 . model . IDENT_26 IDENT_27 = state . IDENT_24 . METHOD_14 ( ( ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_28 . IDENT_29 . IDENT_30 ) + STRING_3 ) ) ; org . apache . jena . IDENT_21 . model . IDENT_26 IDENT_31 = state . IDENT_24 . METHOD_14 ( ( ( IDENT_32 ) + STRING_4 ) ) ; IDENT_23 . METHOD_15 ( IDENT_27 , state . IDENT_24 . METHOD_13 ( ( ( IDENT_32 ) + STRING_5 ) ) ) ; IDENT_23 . METHOD_15 ( IDENT_31 , IDENT_25 ) ; IDENT_25 . METHOD_15 ( IDENT_27 , state . IDENT_24 . METHOD_13 ( ( ( IDENT_32 ) + STRING_6 ) ) ) ; }
org . junit . Assert . assertTrue ( IDENT_17 . get ( ) ) 