test ( ) { com . IDENT_0 . db . engine . IDENT_1 IDENT_2 = new com . IDENT_0 . db . engine . METHOD_0 ( ) ; IDENT_2 . start ( true ) ; java . sql . IDENT_3 conn = null ; try { com . IDENT_0 . db . engine . IDENT_4 manager = new com . IDENT_0 . db . engine . METHOD_1 ( IDENT_2 ) ; conn = manager . METHOD_2 ( ) . METHOD_3 ( ) ; com . IDENT_0 . db . engine . IDENT_5 . METHOD_4 ( conn ) ; java . util . List < ? > l = new com . IDENT_2 . management . util . METHOD_5 ( conn ) . METHOD_6 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } finally { if ( conn != null ) { conn . close ( ) ; } IDENT_2 . METHOD_7 ( ) ; } } METHOD_4 ( java . sql . IDENT_3 ) { java . lang . String query = STRING_1 ; com . IDENT_2 . management . util . METHOD_5 util = new com . IDENT_2 . management . util . METHOD_5 ( conn ) ; util . execute ( query ) ; util . execute ( STRING_2 ) ; for ( java . lang . String insert : com . google . common . io . IDENT_6 . METHOD_8 ( new java . io . File ( STRING_3 ) , java . nio . IDENT_7 . IDENT_8 . METHOD_9 ( ) ) ) { java . lang . String [ ] fields = insert . split ( STRING_4 ) ; java . lang . String q = STRING_5 ; for ( int i = 0 ; i < ( fields . length ) ; i ++ ) { java . lang . String val = fields [ i ] ; if ( ( val . length ( ) ) < 1 ) { val = STRING_6 ; } else { if ( ( i == 2 ) || ( i == 6 ) ) { val = ( STRING_7 + val ) + STRING_7 ; } } q += val ; if ( i != ( ( fields . length ) - 1 ) ) { q += STRING_4 ; } } q += STRING_8 ; util . execute ( q ) ; } util . execute ( STRING_9 ) ; }
org . junit . Assert . assertEquals ( 10 , l . size ( ) ) 