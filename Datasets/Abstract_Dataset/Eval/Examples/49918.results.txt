METHOD_0 ( ) { long IDENT_0 = java . lang . Long . METHOD_1 ( java . lang . System . getProperty ( STRING_0 , "1" ) ) ; long n = java . lang . Long . METHOD_1 ( java . lang . System . getProperty ( STRING_1 , STRING_2 ) ) ; com . github . davidmoten . IDENT_1 . IDENT_2 < java . lang . Object , com . github . davidmoten . IDENT_1 . geometry . IDENT_3 > tree = null ; while ( ( OP_0 IDENT_0 ) >= 0 ) { long t = java . lang . System . currentTimeMillis ( ) ; tree = com . github . davidmoten . IDENT_1 . IDENT_4 . METHOD_2 ( n ) ; long IDENT_5 = ( java . lang . System . currentTimeMillis ( ) ) - t ; System . out . println ( ( STRING_3 + ( ( ( ( double ) ( n ) ) / IDENT_5 ) * 1000 ) ) ) ; } "<AssertPlaceHolder>" ; long t = java . lang . System . currentTimeMillis ( ) ; com . github . davidmoten . IDENT_1 . Entry < java . lang . Object , com . github . davidmoten . IDENT_1 . geometry . IDENT_3 > entry = tree . search ( METHOD_3 ( 0 , 0 , INT_0 , INT_0 ) ) . first ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; long IDENT_5 = ( java . lang . System . currentTimeMillis ( ) ) - t ; System . out . println ( ( STRING_4 + entry ) ) ; System . out . println ( ( ( ( STRING_5 + n ) + STRING_6 ) + IDENT_5 ) ) ; } METHOD_6 ( ) { return METHOD_6 ; }
org . junit . Assert . assertEquals ( n , ( ( int ) ( tree . METHOD_6 ( ) . count ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) ) ) 