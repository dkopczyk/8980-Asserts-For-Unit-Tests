METHOD_0 ( ) { java . util . List < java . lang . Integer > list = IDENT_0 . IDENT_1 . METHOD_1 ( 1 , 2 , 1 , 2 , 3 ) . METHOD_2 ( com . github . davidmoten . IDENT_0 . IDENT_2 . METHOD_3 ( ) ) . toList ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { IDENT_0 . IDENT_3 . IDENT_4 < java . lang . Integer , java . lang . Boolean > IDENT_5 = new IDENT_0 . IDENT_3 . IDENT_4 < java . lang . Integer , java . lang . Boolean > ( ) { @ com . github . davidmoten . IDENT_0 . Override public com . github . davidmoten . IDENT_0 . Boolean call ( java . lang . Integer t ) { return t == 1 ; } } ; IDENT_0 . IDENT_3 . IDENT_6 < java . lang . Integer , java . lang . Integer , java . lang . Boolean > remove = new IDENT_0 . IDENT_3 . IDENT_6 < java . lang . Integer , java . lang . Integer , java . lang . Boolean > ( ) { @ com . github . davidmoten . IDENT_0 . Override public com . github . davidmoten . IDENT_0 . Boolean call ( java . lang . Integer IDENT_7 , java . lang . Integer IDENT_8 ) { return ( IDENT_7 == 1 ) && ( IDENT_8 == 2 ) ; } } ; return com . github . davidmoten . IDENT_0 . IDENT_9 . METHOD_3 ( IDENT_5 , remove ) ; }
org . junit . Assert . assertEquals ( java . util . Arrays . asList ( 3 ) , list ) 