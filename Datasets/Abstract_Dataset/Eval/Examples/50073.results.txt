METHOD_0 ( ) { com . github . davidmoten . IDENT_0 . jdbc . IDENT_1 . log . debug ( STRING_0 ) ; IDENT_0 . IDENT_2 . IDENT_3 < java . lang . Integer , java . lang . Boolean > IDENT_4 = new IDENT_0 . IDENT_2 . IDENT_3 < java . lang . Integer , java . lang . Boolean > ( ) { @ com . github . davidmoten . IDENT_0 . jdbc . Override public com . github . davidmoten . IDENT_0 . jdbc . Boolean call ( java . lang . Integer count ) { return count == 0 ; } } ; com . github . davidmoten . IDENT_0 . jdbc . IDENT_5 db = db ( ) ; IDENT_0 . IDENT_6 < java . lang . Integer > IDENT_7 = db . select ( STRING_1 ) . parameter ( STRING_2 ) . METHOD_1 ( java . lang . String . class ) . count ( ) . filter ( IDENT_4 ) ; java . util . List < java . lang . Integer > IDENT_8 = db . update ( STRING_3 ) . parameters ( IDENT_7 ) . count ( ) . toList ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } count ( ) { return IDENT_0 . IDENT_6 . create ( new IDENT_0 . IDENT_6 . IDENT_9 < java . lang . Long > ( ) { @ com . github . davidmoten . IDENT_0 . Override public void call ( IDENT_0 . IDENT_10 < ? super java . lang . Long > IDENT_11 ) { IDENT_11 . METHOD_4 ( count . get ( ) ) ; IDENT_11 . METHOD_5 ( ) ; } } ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_8 . size ( ) ) 