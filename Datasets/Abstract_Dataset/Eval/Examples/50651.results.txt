METHOD_0 ( ) { IDENT_0 . util . IDENT_1 IDENT_2 = new IDENT_0 . util . METHOD_1 ( STRING_0 ) ; org . dcache . IDENT_3 . IDENT_4 . IDENT_5 parent = METHOD_2 ( ) . METHOD_3 ( 1L ) . METHOD_4 ( IDENT_2 ) . build ( ) ; org . dcache . IDENT_3 . IDENT_4 . IDENT_5 IDENT_6 = METHOD_2 ( ) . METHOD_3 ( INT_0 ) . build ( ) ; METHOD_5 ( IDENT_7 . METHOD_6 ( eq ( parent ) , eq ( "foo" ) , any ( ) , eq ( INT_1 ) ) ) . METHOD_7 ( IDENT_6 ) ; org . dcache . IDENT_3 . IDENT_4 . IDENT_5 result = monitor . METHOD_6 ( parent , "foo" , org . dcache . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 , INT_1 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_7 ) . METHOD_6 ( parent , "foo" , org . dcache . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 , INT_1 ) ; verify ( IDENT_13 ) . METHOD_8 ( IDENT_14 . IDENT_15 , IDENT_2 , "foo" , IDENT_16 . IDENT_17 ) ; verify ( IDENT_13 , METHOD_9 ( ) ) . METHOD_10 ( any ( ) , any ( ) , any ( ) ) ; verify ( IDENT_13 , METHOD_9 ( ) ) . METHOD_11 ( any ( ) , any ( ) , any ( ) , any ( ) , any ( ) ) ; } METHOD_6 ( org . dcache . IDENT_3 . IDENT_4 . IDENT_5 , java . lang . String , javax . security . auth . IDENT_18 , int ) { org . dcache . IDENT_3 . IDENT_4 . IDENT_5 IDENT_19 = super . METHOD_6 ( parent , name , subject , IDENT_20 ) ; METHOD_12 ( parent ) . METHOD_13 ( ( id ) -> IDENT_21 . METHOD_8 ( org . dcache . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_15 , id , name , IDENT_16 . IDENT_17 ) ) ; return IDENT_19 ; }
org . junit . Assert . assertThat ( result , org . hamcrest . Matchers . is ( org . hamcrest . Matchers . equalTo ( IDENT_6 ) ) ) 