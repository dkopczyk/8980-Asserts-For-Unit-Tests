METHOD_0 ( ) { java . lang . String name = STRING_0 ; java . net . IDENT_0 [ ] IDENT_1 = new java . net . IDENT_0 [ ] { new java . net . METHOD_1 ( 0 ) } ; org . dcache . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 IDENT_7 = IDENT_8 . METHOD_2 ( name , 0 , IDENT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String , long , java . net . METHOD_1 [ ] ) { IDENT_9 . METHOD_3 ( ) ; try { org . dcache . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 IDENT_7 = IDENT_10 . get ( name ) ; if ( ( IDENT_7 != null ) && ( ( IDENT_7 . METHOD_4 ( ) ) == IDENT_11 ) ) { return IDENT_7 ; } if ( IDENT_7 != null ) { IDENT_12 . remove ( IDENT_7 . METHOD_5 ( ) ) ; } org . dcache . IDENT_13 . v4 . IDENT_14 . IDENT_15 IDENT_16 = org . dcache . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_17 . METHOD_6 ( ( ( IDENT_18 ) ++ ) ) ; IDENT_7 = new org . dcache . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_7 ( name , IDENT_16 , IDENT_19 , IDENT_11 ) ; IDENT_10 . put ( name , IDENT_7 ) ; IDENT_12 . put ( IDENT_7 . METHOD_5 ( ) , IDENT_7 ) ; return IDENT_7 ; } finally { IDENT_9 . METHOD_8 ( ) ; } }
org . junit . Assert . assertSame ( IDENT_7 , IDENT_8 . METHOD_2 ( name , 0 , IDENT_1 ) ) 