METHOD_0 ( ) { METHOD_1 ( org . dcache . IDENT_0 . IDENT_1 . METHOD_2 ( ) . METHOD_3 ( STRING_0 ) ) ; IDENT_2 . METHOD_4 ( java . util . IDENT_3 . of ( org . dcache . IDENT_0 . IDENT_4 ) ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { if ( ( ( IDENT_5 . size ( ) ) == ( org . dcache . auth . attributes . IDENT_6 . values ( ) . length ) ) || ( ( ( IDENT_5 . size ( ) ) == ( ( org . dcache . auth . attributes . IDENT_6 . values ( ) . length ) - 1 ) ) && ( ! ( IDENT_5 . contains ( IDENT_6 . IDENT_7 ) ) ) ) ) { return java . util . Optional . empty ( ) ; } else if ( IDENT_5 . isEmpty ( ) ) { return java . util . Optional . of ( java . util . IDENT_3 . METHOD_6 ( org . dcache . auth . attributes . IDENT_6 . class ) ) ; } else { java . util . IDENT_3 < org . dcache . auth . attributes . IDENT_6 > a = java . util . IDENT_3 . METHOD_7 ( IDENT_5 ) ; a . add ( IDENT_6 . IDENT_7 ) ; return java . util . Optional . of ( a ) ; } }
org . junit . Assert . assertThat ( IDENT_2 . METHOD_5 ( ) , org . hamcrest . Matchers . is ( org . hamcrest . Matchers . equalTo ( java . util . Optional . of ( java . util . IDENT_3 . of ( org . dcache . IDENT_0 . IDENT_4 , org . dcache . IDENT_0 . IDENT_7 ) ) ) ) ) 