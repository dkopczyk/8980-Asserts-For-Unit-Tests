METHOD_0 ( ) { org . IDENT_0 . data . IDENT_1 IDENT_2 = org . IDENT_0 . data . IDENT_1 . load ( STRING_0 ) ; org . IDENT_0 . data . IDENT_3 IDENT_4 = new org . IDENT_0 . data . METHOD_1 ( 2 ) ; IDENT_4 . METHOD_2 ( IDENT_5 . IDENT_6 , 1 ) . add ( new org . IDENT_0 . data . METHOD_3 ( STRING_1 , STRING_2 , null , STRING_3 ) . METHOD_4 ( ) ) ; org . IDENT_0 . data . METHOD_1 IDENT_7 = new org . IDENT_0 . data . METHOD_1 ( 2 ) ; IDENT_7 . METHOD_2 ( IDENT_5 . IDENT_6 , 1 ) . add ( new org . IDENT_0 . data . METHOD_3 ( STRING_4 , STRING_2 , null , STRING_5 ) . METHOD_4 ( ) ) ; IDENT_7 . METHOD_2 ( IDENT_5 . IDENT_8 , 1 ) . add ( new org . IDENT_0 . data . METHOD_3 ( STRING_6 , STRING_2 , null , STRING_7 ) . METHOD_4 ( ) ) ; IDENT_4 . METHOD_2 ( IDENT_5 . IDENT_9 , 1 ) . add ( IDENT_7 ) ; org . IDENT_0 . data . IDENT_10 result = IDENT_4 . validate ( IDENT_2 ) ; "<AssertPlaceHolder>" ; } isValid ( ) { return ( ( ( ! ( METHOD_5 ( ) ) ) && ( ! ( METHOD_6 ( ) ) ) ) && ( ! ( METHOD_7 ( ) ) ) ) && ( ! ( METHOD_8 ( ) ) ) ; }
org . junit . Assert . assertTrue ( result . isValid ( ) ) 