METHOD_0 ( ) { org . IDENT_0 . api . transform . schema . Schema . Builder schema = new org . IDENT_0 . api . transform . schema . Schema . Builder ( ) ; org . IDENT_0 . IDENT_1 . List < java . lang . String > IDENT_2 = new org . IDENT_0 . IDENT_1 . ArrayList ( ) ; for ( int i = 0 ; i < 2 ; i ++ ) { schema . METHOD_1 ( java . lang . String . valueOf ( i ) ) ; IDENT_2 . add ( java . lang . String . valueOf ( i ) ) ; } org . IDENT_0 . IDENT_1 . List < org . IDENT_0 . IDENT_1 . List < org . IDENT_0 . IDENT_1 . IDENT_3 > > input = org . IDENT_0 . IDENT_1 . Arrays . asList ( org . IDENT_0 . IDENT_1 . Arrays . < org . IDENT_0 . IDENT_1 . IDENT_3 > asList ( new org . IDENT_0 . IDENT_1 . METHOD_2 ( 0 ) , new org . IDENT_0 . IDENT_1 . METHOD_2 ( 1 ) ) , org . IDENT_0 . IDENT_1 . Arrays . < org . IDENT_0 . IDENT_1 . IDENT_3 > asList ( new org . IDENT_0 . IDENT_1 . METHOD_2 ( 2 ) , new org . IDENT_0 . IDENT_1 . METHOD_2 ( 3 ) ) ) ; org . IDENT_0 . IDENT_1 . List < org . apache . IDENT_1 . IDENT_4 . IDENT_5 > IDENT_6 = org . IDENT_0 . IDENT_1 . IDENT_7 . METHOD_3 ( org . IDENT_0 . IDENT_1 . IDENT_8 . IDENT_9 , schema . build ( ) , input ) ; org . IDENT_0 . IDENT_1 . IDENT_10 . IDENT_11 IDENT_12 = new org . IDENT_0 . IDENT_1 . IDENT_10 . METHOD_4 ( IDENT_6 , schema . build ( ) ) ; org . IDENT_0 . IDENT_1 . List < org . IDENT_0 . IDENT_1 . IDENT_3 > IDENT_13 = org . IDENT_0 . IDENT_1 . Arrays . < org . IDENT_0 . IDENT_1 . IDENT_3 > asList ( new org . IDENT_0 . IDENT_1 . METHOD_2 ( 4 ) , new org . IDENT_0 . IDENT_1 . METHOD_2 ( 5 ) ) ; IDENT_12 . set ( 1 , org . IDENT_0 . IDENT_1 . Arrays . < org . IDENT_0 . IDENT_1 . IDENT_3 > asList ( new org . IDENT_0 . IDENT_1 . METHOD_2 ( 4 ) , new org . IDENT_0 . IDENT_1 . METHOD_2 ( 5 ) ) ) ; org . IDENT_0 . IDENT_1 . List < org . IDENT_0 . IDENT_1 . IDENT_3 > IDENT_14 = IDENT_12 . get ( 1 ) ; "<AssertPlaceHolder>" ; } get ( int ) { return IDENT_15 . get ( i ) ; }
org . junit . Assert . assertEquals ( IDENT_13 , IDENT_14 ) 