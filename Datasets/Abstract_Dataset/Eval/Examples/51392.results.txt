METHOD_0 ( ) { org . IDENT_0 . api . transform . schema . Schema schema = new org . IDENT_0 . api . transform . schema . Schema . Builder ( ) . METHOD_1 ( STRING_0 ) . METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 ) . METHOD_3 ( STRING_5 ) . build ( ) ; org . IDENT_0 . api . transform . IDENT_1 IDENT_2 = new org . IDENT_0 . api . transform . IDENT_1 . Builder ( schema ) . METHOD_4 ( STRING_1 ) . METHOD_5 ( STRING_5 , IDENT_3 . IDENT_4 , FLOAT_0 ) . build ( ) ; org . IDENT_0 . spark . transform . List < org . IDENT_0 . spark . transform . List < org . IDENT_0 . api . IDENT_5 . IDENT_6 > > IDENT_7 = new org . IDENT_0 . spark . transform . ArrayList ( ) ; IDENT_7 . add ( org . IDENT_0 . spark . transform . Arrays . < org . IDENT_0 . api . IDENT_5 . IDENT_6 > asList ( new org . IDENT_0 . api . IDENT_5 . METHOD_6 ( 0 ) , new org . IDENT_0 . api . IDENT_5 . METHOD_7 ( STRING_4 ) , new org . IDENT_0 . api . IDENT_5 . METHOD_8 ( FLOAT_1 ) ) ) ; IDENT_7 . add ( org . IDENT_0 . spark . transform . Arrays . < org . IDENT_0 . api . IDENT_5 . IDENT_6 > asList ( new org . IDENT_0 . api . IDENT_5 . METHOD_6 ( 1 ) , new org . IDENT_0 . api . IDENT_5 . METHOD_7 ( STRING_3 ) , new org . IDENT_0 . api . IDENT_5 . METHOD_8 ( FLOAT_2 ) ) ) ; IDENT_7 . add ( org . IDENT_0 . spark . transform . Arrays . < org . IDENT_0 . api . IDENT_5 . IDENT_6 > asList ( new org . IDENT_0 . api . IDENT_5 . METHOD_6 ( 2 ) , new org . IDENT_0 . api . IDENT_5 . METHOD_7 ( STRING_2 ) , new org . IDENT_0 . api . IDENT_5 . METHOD_8 ( FLOAT_3 ) ) ) ; org . apache . spark . api . java . IDENT_8 < org . IDENT_0 . spark . transform . List < org . IDENT_0 . api . IDENT_5 . IDENT_6 > > IDENT_9 = IDENT_10 . METHOD_9 ( IDENT_7 ) ; org . IDENT_0 . spark . transform . List < org . IDENT_0 . spark . transform . List < org . IDENT_0 . api . IDENT_5 . IDENT_6 > > out = new org . IDENT_0 . spark . transform . ArrayList ( org . IDENT_0 . spark . transform . IDENT_11 . execute ( IDENT_9 , IDENT_2 ) . collect ( ) ) ; org . IDENT_0 . spark . transform . Collections . METHOD_10 ( out , new org . IDENT_0 . spark . transform . IDENT_12 < org . IDENT_0 . spark . transform . List < org . IDENT_0 . api . IDENT_5 . IDENT_6 > > ( ) { @ org . IDENT_0 . spark . transform . Override public int compare ( org . IDENT_0 . spark . transform . List < org . IDENT_0 . api . IDENT_5 . IDENT_6 > IDENT_13 , org . IDENT_0 . spark . transform . List < org . IDENT_0 . api . IDENT_5 . IDENT_6 > IDENT_14 ) { return java . lang . Integer . compare ( IDENT_13 . get ( 0 ) . METHOD_11 ( ) , IDENT_14 . get ( 0 ) . METHOD_11 ( ) ) ; } } ) ; org . IDENT_0 . spark . transform . List < org . IDENT_0 . spark . transform . List < org . IDENT_0 . api . IDENT_5 . IDENT_6 > > expected = new org . IDENT_0 . spark . transform . ArrayList ( ) ; expected . add ( org . IDENT_0 . spark . transform . Arrays . < org . IDENT_0 . api . IDENT_5 . IDENT_6 > asList ( new org . IDENT_0 . api . IDENT_5 . METHOD_6 ( 0 ) , new org . IDENT_0 . api . IDENT_5 . METHOD_6 ( 2 ) , new org . IDENT_0 . api . IDENT_5 . METHOD_8 ( FLOAT_4 ) ) ) ; expected . add ( org . IDENT_0 . spark . transform . Arrays . < org . IDENT_0 . api . IDENT_5 . IDENT_6 > asList ( new org . IDENT_0 . api . IDENT_5 . METHOD_6 ( 1 ) , new org . IDENT_0 . api . IDENT_5 . METHOD_6 ( 1 ) , new org . IDENT_0 . api . IDENT_5 . METHOD_8 ( FLOAT_5 ) ) ) ; expected . add ( org . IDENT_0 . spark . transform . Arrays . < org . IDENT_0 . api . IDENT_5 . IDENT_6 > asList ( new org . IDENT_0 . api . IDENT_5 . METHOD_6 ( 2 ) , new org . IDENT_0 . api . IDENT_5 . METHOD_6 ( 0 ) , new org . IDENT_0 . api . IDENT_5 . METHOD_8 ( FLOAT_6 ) ) ) ; "<AssertPlaceHolder>" ; } add ( T extends org . nd4j . IDENT_15 . IDENT_16 . IDENT_17 , T extends org . nd4j . IDENT_15 . IDENT_16 . IDENT_17 , int ) { if ( IDENT_18 . containsKey ( actual ) ) { IDENT_18 . get ( actual ) . add ( IDENT_19 , count ) ; } else { com . google . common . collect . IDENT_20 < T > IDENT_21 = com . google . common . collect . IDENT_22 . create ( ) ; IDENT_21 . add ( IDENT_19 , count ) ; IDENT_18 . put ( actual , IDENT_21 ) ; } }
org . junit . Assert . assertEquals ( expected , out ) 