METHOD_0 ( ) { org . nd4j . linalg . factory . Nd4j . METHOD_1 ( ) . METHOD_2 ( INT_0 ) ; int IDENT_0 = 10 ; int IDENT_1 = 1 ; int IDENT_2 = 4 ; int IDENT_3 = 4 ; org . nd4j . linalg . api . ndarray . INDArray input = org . nd4j . linalg . factory . Nd4j . METHOD_3 ( new int [ ] { IDENT_0 , IDENT_1 , IDENT_2 , IDENT_2 } ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_4 = org . nd4j . linalg . factory . Nd4j . METHOD_4 ( IDENT_0 , IDENT_3 ) ; java . util . IDENT_5 r = new java . util . METHOD_5 ( INT_0 ) ; for ( int i = 0 ; i < IDENT_0 ; i ++ ) { IDENT_4 . METHOD_6 ( i , r . METHOD_7 ( IDENT_3 ) , 1.0 ) ; } for ( boolean IDENT_6 : new boolean [ ] { true , false } ) { org . IDENT_7 . IDENT_8 . conf . IDENT_9 . Builder builder = new org . IDENT_7 . IDENT_8 . conf . IDENT_10 . Builder ( ) . METHOD_8 ( new org . nd4j . linalg . IDENT_11 . config . METHOD_9 ( ) ) . METHOD_10 ( INT_1 ) . METHOD_11 ( new org . IDENT_7 . IDENT_8 . conf . IDENT_12 . METHOD_12 ( 0 , 2 ) ) . list ( ) . METHOD_13 ( 0 , new org . IDENT_7 . IDENT_13 . IDENT_14 . Builder ( ) . METHOD_14 ( 2 , 2 ) . METHOD_15 ( 1 , 1 ) . METHOD_16 ( IDENT_1 ) . METHOD_17 ( 2 ) . METHOD_18 ( IDENT_15 . IDENT_16 ) . build ( ) ) . METHOD_13 ( 1 , new org . IDENT_7 . IDENT_13 . IDENT_17 . Builder ( ) . METHOD_19 ( METHOD_19 ) . METHOD_20 ( true ) . METHOD_21 ( 2.0 ) . METHOD_22 ( FLOAT_0 ) . build ( ) ) . METHOD_13 ( 2 , new org . IDENT_7 . IDENT_13 . IDENT_18 . Builder ( ) . METHOD_18 ( IDENT_15 . IDENT_19 ) . build ( ) ) . METHOD_13 ( 3 , new org . IDENT_7 . IDENT_13 . IDENT_20 . Builder ( IDENT_21 . IDENT_22 . IDENT_23 ) . METHOD_18 ( IDENT_15 . IDENT_24 ) . METHOD_17 ( METHOD_17 ) . build ( ) ) . METHOD_23 ( org . IDENT_7 . IDENT_8 . conf . IDENT_25 . IDENT_26 . METHOD_24 ( IDENT_2 , IDENT_2 , IDENT_1 ) ) ; org . IDENT_7 . IDENT_8 . IDENT_27 . IDENT_28 IDENT_29 = new org . IDENT_7 . IDENT_8 . IDENT_27 . METHOD_25 ( builder . build ( ) ) ; IDENT_29 . init ( ) ; if ( org . IDENT_7 . IDENT_13 . IDENT_30 . IDENT_31 ) { for ( int j = 0 ; j < ( IDENT_29 . METHOD_26 ( ) ) ; j ++ ) System . out . println ( ( ( ( STRING_0 + j ) + STRING_1 ) + ( IDENT_29 . METHOD_27 ( j ) . METHOD_28 ( ) ) ) ) ; } java . util . Set < java . lang . String > IDENT_32 = new java . util . HashSet ( java . util . Arrays . asList ( STRING_2 , STRING_3 , STRING_4 ) ) ; boolean IDENT_33 = org . IDENT_7 . IDENT_13 . IDENT_34 . METHOD_29 ( IDENT_29 , org . IDENT_7 . IDENT_13 . IDENT_30 . IDENT_35 , org . IDENT_7 . IDENT_13 . IDENT_30 . IDENT_36 , org . IDENT_7 . IDENT_13 . IDENT_30 . IDENT_37 , org . IDENT_7 . IDENT_13 . IDENT_30 . IDENT_31 , org . IDENT_7 . IDENT_13 . IDENT_30 . IDENT_38 , input , IDENT_4 , IDENT_32 ) ; "<AssertPlaceHolder>" ; org . IDENT_7 . TestUtils . METHOD_30 ( IDENT_29 ) ; } } METHOD_29 ( org . IDENT_7 . IDENT_8 . IDENT_27 . METHOD_25 , double , double , double , boolean , boolean , org . nd4j . linalg . api . ndarray . INDArray , org . nd4j . linalg . api . ndarray . INDArray , org . IDENT_7 . IDENT_13 . Set ) { return org . IDENT_7 . IDENT_13 . IDENT_34 . METHOD_29 ( IDENT_29 , IDENT_39 , IDENT_40 , IDENT_41 , IDENT_42 , IDENT_43 , input , IDENT_4 , null , null , false , ( - 1 ) , IDENT_32 , ( ( java . lang . Integer ) ( null ) ) ) ; }
org . junit . Assert . assertTrue ( IDENT_33 ) 