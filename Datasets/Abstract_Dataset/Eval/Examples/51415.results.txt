METHOD_0 ( ) { org . nd4j . linalg . factory . Nd4j . METHOD_1 ( ) . METHOD_2 ( INT_0 ) ; int IDENT_0 = 4 ; int IDENT_1 = 2 ; int IDENT_2 = 5 ; int IDENT_3 = 5 ; int IDENT_4 = 1 ; int [ ] kernel = new int [ ] { 2 , 2 } ; int IDENT_5 = 2 ; java . lang . String [ ] IDENT_6 = new java . lang . String [ ] { STRING_0 } ; org . IDENT_7 . IDENT_8 . IDENT_9 [ ] IDENT_10 = new org . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_11 [ ] { IDENT_9 . IDENT_11 . IDENT_12 , IDENT_9 . IDENT_11 . IDENT_13 , IDENT_9 . IDENT_11 . IDENT_14 } ; for ( java . lang . String IDENT_15 : IDENT_6 ) { for ( org . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_11 IDENT_16 : IDENT_10 ) { org . nd4j . linalg . api . ndarray . INDArray input = org . nd4j . linalg . factory . Nd4j . METHOD_3 ( IDENT_1 , ( ( IDENT_2 * IDENT_3 ) * IDENT_4 ) ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_17 = org . nd4j . linalg . factory . Nd4j . METHOD_4 ( IDENT_1 , IDENT_0 ) ; for ( int i = 0 ; i < IDENT_1 ; i ++ ) { IDENT_17 . METHOD_5 ( new int [ ] { i , i OP_0 IDENT_0 } , 1.0 ) ; } org . IDENT_7 . IDENT_18 . conf . IDENT_19 conf = new org . IDENT_7 . IDENT_18 . conf . IDENT_20 . Builder ( ) . METHOD_6 ( new org . nd4j . linalg . IDENT_21 . config . METHOD_7 ( ) ) . METHOD_8 ( new org . IDENT_7 . IDENT_18 . conf . IDENT_22 . METHOD_9 ( 0 , 1 ) ) . list ( ) . METHOD_10 ( new org . IDENT_7 . IDENT_8 . IDENT_23 . Builder ( kernel ) . METHOD_11 ( IDENT_4 ) . METHOD_12 ( false ) . METHOD_13 ( 1 ) . build ( ) ) . METHOD_10 ( new org . IDENT_7 . IDENT_8 . IDENT_24 . Builder ( IDENT_5 , IDENT_24 . IDENT_25 . IDENT_26 ) . build ( ) ) . METHOD_10 ( new org . IDENT_7 . IDENT_8 . IDENT_27 . Builder ( IDENT_28 . IDENT_29 . IDENT_30 ) . METHOD_14 ( IDENT_31 . IDENT_32 ) . METHOD_11 ( ( ( 2 * 2 ) * 4 ) ) . METHOD_13 ( METHOD_13 ) . build ( ) ) . METHOD_15 ( org . IDENT_7 . IDENT_18 . conf . IDENT_33 . IDENT_34 . METHOD_16 ( IDENT_3 , IDENT_2 , IDENT_4 ) ) . build ( ) ; org . IDENT_7 . IDENT_18 . IDENT_35 . IDENT_36 net = new org . IDENT_7 . IDENT_18 . IDENT_35 . METHOD_17 ( conf ) ; net . init ( ) ; java . lang . String msg = ( ( ( ( STRING_1 + IDENT_16 ) + STRING_2 ) + IDENT_1 ) + STRING_3 ) + IDENT_15 ; if ( org . IDENT_7 . IDENT_8 . IDENT_37 . IDENT_38 ) { System . out . println ( msg ) ; for ( int j = 0 ; j < ( net . METHOD_18 ( ) ) ; j ++ ) System . out . println ( ( ( ( STRING_4 + j ) + STRING_5 ) + ( net . METHOD_19 ( j ) . METHOD_20 ( ) ) ) ) ; } boolean IDENT_39 = org . IDENT_7 . IDENT_8 . IDENT_40 . METHOD_21 ( net , org . IDENT_7 . IDENT_8 . IDENT_37 . IDENT_41 , org . IDENT_7 . IDENT_8 . IDENT_37 . IDENT_42 , org . IDENT_7 . IDENT_8 . IDENT_37 . IDENT_43 , org . IDENT_7 . IDENT_8 . IDENT_37 . IDENT_38 , org . IDENT_7 . IDENT_8 . IDENT_37 . IDENT_44 , input , IDENT_17 ) ; "<AssertPlaceHolder>" ; org . IDENT_7 . TestUtils . METHOD_22 ( net ) ; } } } METHOD_21 ( org . IDENT_7 . IDENT_18 . IDENT_35 . METHOD_17 , double , double , double , boolean , boolean , org . nd4j . linalg . api . ndarray . INDArray , org . nd4j . linalg . api . ndarray . INDArray ) { return org . IDENT_7 . IDENT_8 . IDENT_40 . METHOD_21 ( IDENT_45 , IDENT_46 , IDENT_47 , IDENT_48 , IDENT_49 , IDENT_50 , input , IDENT_17 , null , null ) ; }
org . junit . Assert . assertTrue ( msg , IDENT_39 ) 