METHOD_0 ( ) { int IDENT_0 = 2 ; int IDENT_1 = 8 ; int IDENT_2 = 8 ; int IDENT_3 = 3 ; org . nd4j . linalg . factory . Nd4j . METHOD_1 ( ) . METHOD_2 ( INT_0 ) ; int [ ] IDENT_4 = new int [ ] { 1 , 3 , 1 , 3 , 1 , 3 , 1 , 3 } ; int [ ] IDENT_5 = new int [ ] { 1 , 1 , 2 , 2 , 1 , 1 , 2 , 2 } ; int [ ] IDENT_6 = new int [ ] { 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 } ; org . IDENT_7 . IDENT_8 . conf . IDENT_9 [ ] IDENT_10 = new org . IDENT_7 . IDENT_8 . conf . IDENT_9 [ ] { org . IDENT_7 . IDENT_8 . conf . IDENT_9 . IDENT_11 , org . IDENT_7 . IDENT_8 . conf . IDENT_9 . IDENT_11 , org . IDENT_7 . IDENT_8 . conf . IDENT_9 . IDENT_11 , org . IDENT_7 . IDENT_8 . conf . IDENT_9 . IDENT_11 , org . IDENT_7 . IDENT_8 . conf . IDENT_9 . IDENT_11 , org . IDENT_7 . IDENT_8 . conf . IDENT_9 . IDENT_11 , org . IDENT_7 . IDENT_8 . conf . IDENT_9 . IDENT_11 , org . IDENT_7 . IDENT_8 . conf . IDENT_9 . IDENT_11 } ; int [ ] IDENT_12 = new int [ ] { 1 , 1 , 3 , 3 , 3 , 1 , 3 , 3 } ; for ( int t = 0 ; t < ( IDENT_4 . length ) ; t ++ ) { int k = IDENT_4 [ t ] ; int s = IDENT_5 [ t ] ; int d = IDENT_6 [ t ] ; org . IDENT_7 . IDENT_8 . conf . IDENT_9 IDENT_13 = IDENT_10 [ t ] ; int IDENT_14 = IDENT_12 [ t ] ; int IDENT_15 = d * IDENT_1 ; int IDENT_16 = d * IDENT_2 ; org . nd4j . linalg . api . ndarray . INDArray input = org . nd4j . linalg . factory . Nd4j . METHOD_3 ( IDENT_14 , ( ( IDENT_15 * IDENT_16 ) * IDENT_3 ) ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_17 = org . nd4j . linalg . factory . Nd4j . METHOD_4 ( IDENT_14 , IDENT_0 ) ; for ( int i = 0 ; i < IDENT_14 ; i ++ ) { IDENT_17 . METHOD_5 ( new int [ ] { i , i OP_0 IDENT_0 } , 1.0 ) ; } org . IDENT_7 . IDENT_8 . conf . IDENT_18 . IDENT_19 b = new org . IDENT_7 . IDENT_8 . conf . IDENT_18 . Builder ( ) . METHOD_6 ( INT_0 ) . METHOD_7 ( new org . nd4j . linalg . IDENT_20 . config . METHOD_8 ( ) ) . METHOD_9 ( IDENT_21 . IDENT_22 ) . METHOD_10 ( IDENT_13 ) . list ( ) . METHOD_11 ( new org . IDENT_7 . IDENT_23 . IDENT_24 . Builder ( ) . METHOD_12 ( 1 , 1 ) . METHOD_13 ( 1 , 1 ) . METHOD_14 ( IDENT_3 ) . METHOD_15 ( IDENT_3 ) . build ( ) ) . METHOD_11 ( new org . IDENT_7 . IDENT_23 . IDENT_25 . Builder ( ) . name ( STRING_0 ) . METHOD_16 ( false ) . METHOD_12 ( k , k ) . METHOD_13 ( s , s ) . METHOD_17 ( d , d ) . METHOD_18 ( 3 ) . METHOD_14 ( IDENT_3 ) . METHOD_15 ( 2 ) . build ( ) ) ; org . IDENT_7 . IDENT_8 . conf . IDENT_26 conf = b . METHOD_11 ( new org . IDENT_7 . IDENT_23 . IDENT_27 . Builder ( IDENT_28 . IDENT_29 . IDENT_30 ) . METHOD_9 ( IDENT_21 . IDENT_31 ) . METHOD_15 ( METHOD_15 ) . build ( ) ) . METHOD_19 ( org . IDENT_7 . IDENT_8 . conf . IDENT_32 . IDENT_33 . METHOD_20 ( IDENT_16 , IDENT_15 , IDENT_3 ) ) . build ( ) ; org . IDENT_7 . IDENT_8 . IDENT_34 . IDENT_35 net = new org . IDENT_7 . IDENT_8 . IDENT_34 . METHOD_21 ( conf ) ; net . init ( ) ; for ( int i = 0 ; i < ( net . METHOD_22 ( ) . length ) ; i ++ ) { System . out . println ( ( ( ( STRING_1 + i ) + STRING_2 ) + ( net . METHOD_23 ( i ) . METHOD_24 ( ) ) ) ) ; } java . lang . String msg = ( ( ( ( ( ( ( ( STRING_3 + IDENT_14 ) + STRING_4 ) + k ) + STRING_5 ) + s ) + STRING_6 ) + d ) + STRING_7 ) + IDENT_13 ; System . out . println ( msg ) ; boolean IDENT_36 = org . IDENT_7 . IDENT_23 . IDENT_37 . METHOD_25 ( net , org . IDENT_7 . IDENT_23 . IDENT_38 . IDENT_39 , org . IDENT_7 . IDENT_23 . IDENT_38 . IDENT_40 , org . IDENT_7 . IDENT_23 . IDENT_38 . IDENT_41 , org . IDENT_7 . IDENT_23 . IDENT_38 . IDENT_42 , org . IDENT_7 . IDENT_23 . IDENT_38 . IDENT_43 , input , IDENT_17 ) ; "<AssertPlaceHolder>" ; org . IDENT_7 . TestUtils . METHOD_26 ( net ) ; } } METHOD_25 ( org . IDENT_7 . IDENT_8 . IDENT_34 . METHOD_21 , double , double , double , boolean , boolean , org . nd4j . linalg . api . ndarray . INDArray , org . nd4j . linalg . api . ndarray . INDArray ) { return org . IDENT_7 . IDENT_23 . IDENT_37 . METHOD_25 ( IDENT_44 , IDENT_45 , IDENT_46 , IDENT_47 , IDENT_48 , IDENT_49 , input , IDENT_17 , null , null ) ; }
org . junit . Assert . assertTrue ( msg , IDENT_36 ) 