METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray a = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { 4 , 2 , 1 } , new int [ ] { 1 , 3 } ) ; org . nd4j . linalg . api . ndarray . INDArray b = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { 1 , 3 , 4 } , new int [ ] { 1 , 3 } ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_0 = org . nd4j . linalg . factory . Nd4j . create ( IDENT_1 . IDENT_2 , 1 , 3 ) ; IDENT_3 . val op = new org . nd4j . linalg . api . IDENT_4 . impl . IDENT_5 . METHOD_1 ( a , b , IDENT_0 ) ; org . nd4j . linalg . factory . Nd4j . METHOD_2 ( ) . exec ( op ) ; org . nd4j . IDENT_6 . IDENT_7 . IDENT_8 IDENT_9 = org . nd4j . IDENT_6 . IDENT_7 . IDENT_8 . create ( ) ; org . nd4j . IDENT_6 . IDENT_7 . IDENT_10 IDENT_11 = IDENT_9 . METHOD_3 ( "a" , IDENT_0 . METHOD_4 ( ) ) ; org . nd4j . IDENT_6 . IDENT_7 . IDENT_10 IDENT_12 = IDENT_9 . METHOD_3 ( "b" , IDENT_0 . METHOD_4 ( ) ) ; IDENT_9 . METHOD_5 ( a , IDENT_11 ) ; IDENT_9 . METHOD_5 ( b , IDENT_12 ) ; org . nd4j . IDENT_6 . IDENT_7 . IDENT_10 t = IDENT_9 . math ( ) . METHOD_6 ( STRING_0 , IDENT_11 , IDENT_12 ) ; org . nd4j . IDENT_6 . IDENT_7 . IDENT_10 IDENT_13 = IDENT_9 . METHOD_7 ( STRING_1 , t ) ; java . lang . String err = org . nd4j . IDENT_6 . validation . IDENT_14 . validate ( new org . nd4j . IDENT_6 . validation . METHOD_8 ( IDENT_9 ) . METHOD_9 ( STRING_0 , IDENT_0 ) . METHOD_10 ( true ) ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( boolean ) { this . METHOD_11 ( IDENT_15 ) ; return this ; }
org . junit . Assert . assertNull ( err , err ) 