METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray in = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( new long [ ] { 5 } , 1.0 ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_0 = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { 1 , 1 } , new long [ ] { 1 , 2 } ) . METHOD_2 ( IDENT_1 . IDENT_2 ) ; org . nd4j . linalg . api . ndarray . INDArray value = org . nd4j . linalg . factory . Nd4j . METHOD_3 ( FLOAT_0 ) ; org . nd4j . linalg . api . ndarray . INDArray out = org . nd4j . linalg . factory . Nd4j . create ( new long [ ] { 7 } ) ; org . nd4j . linalg . api . IDENT_3 . IDENT_4 op = org . nd4j . linalg . api . IDENT_3 . IDENT_4 . builder ( STRING_0 ) . METHOD_4 ( in , IDENT_0 , value ) . METHOD_5 ( out ) . METHOD_6 ( 0 ) . build ( ) ; org . nd4j . linalg . api . ndarray . INDArray exp = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { 10 , 1 , 1 , 1 , 1 , 1 , 10 } ) ; org . nd4j . IDENT_5 . validation . IDENT_6 . validate ( new org . nd4j . IDENT_5 . validation . METHOD_7 ( op ) . METHOD_8 ( 0 , exp ) ) ; org . nd4j . IDENT_5 . IDENT_7 . IDENT_8 IDENT_9 = org . nd4j . IDENT_5 . IDENT_7 . IDENT_8 . create ( ) ; org . nd4j . IDENT_5 . IDENT_7 . IDENT_10 s = IDENT_9 . METHOD_9 ( STRING_1 , in ) ; org . nd4j . IDENT_5 . IDENT_7 . IDENT_10 IDENT_11 = IDENT_9 . METHOD_10 ( ) . METHOD_11 ( s , IDENT_9 . METHOD_12 ( METHOD_11 ) , FLOAT_0 ) ; java . lang . String IDENT_12 = org . nd4j . IDENT_5 . validation . IDENT_6 . validate ( new org . nd4j . IDENT_5 . validation . METHOD_13 ( IDENT_9 ) . expected ( IDENT_11 , exp ) . METHOD_14 ( false ) ) ; "<AssertPlaceHolder>" ; } METHOD_14 ( boolean ) { this . METHOD_15 ( IDENT_13 ) ; return this ; }
org . junit . Assert . assertNull ( IDENT_12 ) 