METHOD_0 ( ) { org . nd4j . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = org . nd4j . IDENT_0 . IDENT_1 . IDENT_2 . create ( ) ; org . nd4j . linalg . api . ndarray . INDArray arr = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 1 , 4 , 4 ) ; org . nd4j . IDENT_0 . IDENT_1 . IDENT_4 x = IDENT_3 . METHOD_2 ( STRING_0 , arr ) ; org . nd4j . IDENT_0 . IDENT_1 . IDENT_4 IDENT_5 = IDENT_3 . METHOD_3 ( ) . METHOD_4 ( STRING_1 , x ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_6 = org . nd4j . linalg . IDENT_7 . IDENT_8 . IDENT_9 . METHOD_4 ( arr ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_10 = IDENT_3 . exec ( org . nd4j . IDENT_0 . IDENT_1 . Collections . METHOD_5 ( STRING_0 , arr ) , org . nd4j . IDENT_0 . IDENT_1 . Collections . singletonList ( STRING_1 ) ) . get ( STRING_1 ) ; "<AssertPlaceHolder>" ; } get ( org . apache . spark . api . java . IDENT_11 ) { if ( ( ( org . IDENT_12 . spark . util . IDENT_13 . config ) != null ) && ( ( ! ( org . IDENT_12 . spark . util . IDENT_13 . config . isValid ( ) ) ) || ( ( IDENT_14 . METHOD_6 ( ) ) != ( org . IDENT_12 . spark . util . IDENT_13 . IDENT_15 ) ) ) ) { org . IDENT_12 . spark . util . IDENT_13 . config = null ; } if ( ( org . IDENT_12 . spark . util . IDENT_13 . config ) != null ) { return org . IDENT_12 . spark . util . IDENT_13 . config ; } MOD_0 ( org . IDENT_12 . spark . util . IDENT_13 . class ) { if ( ( org . IDENT_12 . spark . util . IDENT_13 . config ) == null ) { org . IDENT_12 . spark . util . IDENT_13 . config = IDENT_14 . METHOD_7 ( new org . IDENT_12 . spark . util . METHOD_8 ( IDENT_14 . METHOD_9 ( ) ) ) ; org . IDENT_12 . spark . util . IDENT_13 . IDENT_15 = IDENT_14 . METHOD_6 ( ) ; } } return org . IDENT_12 . spark . util . IDENT_13 . config ; }
org . junit . Assert . assertEquals ( IDENT_6 , IDENT_10 ) 