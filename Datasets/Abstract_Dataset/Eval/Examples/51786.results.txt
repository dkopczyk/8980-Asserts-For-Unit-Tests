METHOD_0 ( ) { org . nd4j . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = org . nd4j . IDENT_0 . IDENT_1 . IDENT_2 . create ( ) ; org . nd4j . linalg . api . ndarray . INDArray arr = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , INT_0 , 12 , INT_1 , INT_2 , 15 , 16 , INT_3 , INT_4 , INT_5 , 20 , INT_6 , INT_7 , INT_8 , INT_9 } , new int [ ] { 2 , 3 , 4 } ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_4 = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { 1 , 2 , 3 , 4 , INT_1 , INT_2 , 15 , 16 , 5 , 6 , 7 , 8 , INT_3 , INT_4 , INT_5 , 20 , 9 , 10 , INT_0 , 12 , INT_6 , INT_7 , INT_8 , INT_9 } , new int [ ] { 3 , 2 , 4 } ) ; org . nd4j . IDENT_0 . IDENT_1 . IDENT_5 x = IDENT_3 . METHOD_1 ( arr ) ; org . nd4j . IDENT_0 . IDENT_1 . IDENT_5 result = IDENT_3 . METHOD_2 ( x , 1 , 0 , 2 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { IDENT_6 . exec ( null , METHOD_4 ( ) ) ; return METHOD_5 ( ) ; }
org . junit . Assert . assertEquals ( IDENT_4 , result . METHOD_3 ( ) ) 