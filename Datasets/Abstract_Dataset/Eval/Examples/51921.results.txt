METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray IDENT_0 = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { - FLOAT_0 , - FLOAT_1 , FLOAT_2 , FLOAT_3 , - FLOAT_4 , - FLOAT_5 , - FLOAT_6 , - FLOAT_7 , - FLOAT_8 , - FLOAT_9 , FLOAT_10 , - FLOAT_11 , FLOAT_12 , - FLOAT_13 , FLOAT_14 } ) . METHOD_1 ( 3 , 5 ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_1 = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { - FLOAT_5 , - FLOAT_6 , - FLOAT_7 , - FLOAT_8 , - FLOAT_9 } ) ; IDENT_2 . val row = IDENT_0 . METHOD_2 ( 1 ) ; IDENT_2 . val IDENT_3 = row . METHOD_3 ( ) ; log . info ( STRING_0 , row . METHOD_4 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { return IDENT_4 ; }
org . junit . Assert . assertEquals ( IDENT_1 , IDENT_3 ) 