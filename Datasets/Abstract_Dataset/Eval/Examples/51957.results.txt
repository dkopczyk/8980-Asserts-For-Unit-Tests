METHOD_0 ( ) { IDENT_0 . val IDENT_1 = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 1 , 10 , 10 , IDENT_2 . IDENT_3 ) . METHOD_2 ( 5 , 1 , 2 ) . METHOD_3 ( 5 , 4 , 2 ) ; IDENT_0 . val IDENT_4 = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 1 , 20 , 20 , IDENT_2 . IDENT_3 ) . METHOD_2 ( 5 , 4 , 1 ) . METHOD_3 ( 5 , 4 , 2 ) ; IDENT_0 . val exp = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { FLOAT_0 , FLOAT_1 , FLOAT_1 , FLOAT_2 , FLOAT_2 , FLOAT_3 , FLOAT_3 , FLOAT_4 , FLOAT_5 , FLOAT_6 , FLOAT_6 , FLOAT_7 , FLOAT_7 , FLOAT_8 , FLOAT_8 , FLOAT_9 , FLOAT_10 , FLOAT_11 , FLOAT_11 , FLOAT_12 , FLOAT_12 , FLOAT_13 , FLOAT_13 , FLOAT_14 , FLOAT_15 , FLOAT_16 , FLOAT_16 , FLOAT_17 , FLOAT_17 , FLOAT_18 , FLOAT_18 , FLOAT_19 , FLOAT_20 , FLOAT_21 , FLOAT_21 , FLOAT_22 , FLOAT_22 , FLOAT_23 , FLOAT_23 , FLOAT_24 } ) . METHOD_2 ( 5 , 4 , 2 ) ; IDENT_1 . METHOD_4 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . nd4j . IDENT_5 . IDENT_6 . IDENT_7 ) { return METHOD_4 ( IDENT_8 . METHOD_5 ( IDENT_9 . IDENT_10 , 0 ) , IDENT_11 ) ; }
org . junit . Assert . assertEquals ( exp , IDENT_1 ) 