METHOD_0 ( ) { final org . nd4j . linalg . api . ndarray . INDArray a = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 4 , 3 ) ; final org . nd4j . linalg . api . ndarray . INDArray b = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 4 , 5 ) ; final org . nd4j . linalg . api . ndarray . INDArray result = a . METHOD_2 ( ) . METHOD_3 ( b ) ; final org . nd4j . linalg . api . ndarray . INDArray IDENT_0 = org . nd4j . linalg . factory . Nd4j . METHOD_4 ( a , b , true , false ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . nd4j . linalg . factory . INDArray , org . nd4j . linalg . factory . INDArray , boolean , boolean ) { long IDENT_1 = ( IDENT_2 ) ? a . METHOD_5 ( ) : a . METHOD_6 ( ) ; long IDENT_3 = ( IDENT_4 ) ? b . METHOD_6 ( ) : b . METHOD_5 ( ) ; org . nd4j . linalg . factory . INDArray c = org . nd4j . linalg . factory . Nd4j . METHOD_7 ( a . METHOD_8 ( ) , new long [ ] { IDENT_1 , IDENT_3 } , STRING_0 ) ; return org . nd4j . linalg . factory . Nd4j . METHOD_4 ( a , b , c , IDENT_2 , IDENT_4 , 1.0 , 0.0 ) ; }
org . junit . Assert . assertEquals ( result , IDENT_0 ) 