METHOD_0 ( ) { double IDENT_0 = FLOAT_0 ; int IDENT_1 = INT_0 ; int IDENT_2 = 3 ; org . nd4j . linalg . api . ndarray . INDArray IDENT_3 = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( IDENT_1 , IDENT_2 ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_4 = org . nd4j . linalg . factory . Nd4j . METHOD_2 ( IDENT_1 , 1 ) ; org . nd4j . linalg . dataset . IDENT_5 IDENT_6 = new org . nd4j . linalg . dataset . METHOD_3 ( IDENT_3 , IDENT_4 ) ; org . nd4j . linalg . dataset . api . IDENT_7 . IDENT_8 IDENT_9 = new org . nd4j . linalg . dataset . api . IDENT_7 . METHOD_4 ( ) ; IDENT_9 . METHOD_5 ( IDENT_6 ) ; org . nd4j . linalg . dataset . METHOD_3 IDENT_10 = IDENT_6 . METHOD_6 ( ) ; IDENT_9 . transform ( IDENT_10 ) ; IDENT_9 . METHOD_7 ( IDENT_10 ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_11 = org . nd4j . linalg . IDENT_12 . IDENT_13 . IDENT_14 . METHOD_8 ( IDENT_10 . METHOD_9 ( ) . METHOD_10 ( IDENT_6 . METHOD_9 ( ) ) ) . METHOD_11 ( IDENT_6 . METHOD_9 ( ) ) ; double IDENT_15 = IDENT_11 . max ( 0 , 1 ) . METHOD_12 ( 100 ) . METHOD_13 ( 0 ) ; "<AssertPlaceHolder>" ; } METHOD_13 ( long ) { return METHOD_14 ( ) . METHOD_13 ( ( ( ( int ) ( i ) ) * 8 ) ) ; }
org . junit . Assert . assertTrue ( ( IDENT_15 < IDENT_0 ) ) 