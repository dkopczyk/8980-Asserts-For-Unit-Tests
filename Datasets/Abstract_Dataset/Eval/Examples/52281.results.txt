METHOD_0 ( ) { final org . nd4j . linalg . api . ndarray . INDArray input = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( IDENT_0 . IDENT_1 , new int [ ] { 3 , 4 , 2 } ) ; final org . nd4j . linalg . api . ndarray . INDArray [ ] output = new org . nd4j . linalg . api . ndarray . INDArray [ ( ( int ) ( input . size ( 2 ) ) ) ] ; for ( int i = 0 ; i < ( input . size ( 2 ) ) ; i ++ ) { final org . nd4j . linalg . api . ndarray . INDArray IDENT_2 = input . get ( org . nd4j . linalg . indexing . IDENT_3 . METHOD_2 ( ) , org . nd4j . linalg . indexing . IDENT_3 . METHOD_2 ( ) , org . nd4j . linalg . indexing . IDENT_3 . METHOD_3 ( i ) ) ; output [ i ] = IDENT_2 ; if ( i > 0 ) { output [ i ] = output [ i ] . add ( org . nd4j . linalg . factory . Nd4j . METHOD_4 ( output [ ( i - 1 ) ] , 2 ) ) ; } output [ i ] = org . nd4j . linalg . factory . Nd4j . METHOD_5 ( output [ i ] , 2 ) ; } final org . nd4j . linalg . api . ndarray . INDArray out = org . nd4j . linalg . factory . Nd4j . METHOD_6 ( 2 , output ) . METHOD_7 ( ) ; org . nd4j . IDENT_4 . IDENT_5 . IDENT_6 IDENT_7 = org . nd4j . IDENT_4 . IDENT_5 . IDENT_6 . create ( ) ; final org . nd4j . IDENT_4 . IDENT_5 . IDENT_8 IDENT_9 = IDENT_7 . METHOD_8 ( STRING_0 , input ) ; final long IDENT_10 = IDENT_9 . METHOD_9 ( ) [ 2 ] ; org . nd4j . IDENT_4 . IDENT_5 . IDENT_8 [ ] IDENT_11 = new org . nd4j . IDENT_4 . IDENT_5 . IDENT_8 [ ( ( int ) ( IDENT_10 ) ) ] ; final org . nd4j . IDENT_4 . IDENT_5 . IDENT_8 [ ] IDENT_12 = IDENT_7 . METHOD_10 ( new java . lang . String [ ] { STRING_1 , STRING_2 } , IDENT_9 , 2 ) ; final IDENT_13 . val IDENT_14 = IDENT_12 [ 0 ] ; IDENT_11 [ 0 ] = IDENT_14 ; IDENT_11 [ 0 ] = IDENT_7 . METHOD_5 ( STRING_3 , IDENT_11 [ 0 ] , 2 ) ; final IDENT_13 . val IDENT_15 = IDENT_12 [ 1 ] ; IDENT_11 [ 1 ] = IDENT_15 ; IDENT_11 [ 1 ] = IDENT_11 [ 1 ] . add ( IDENT_7 . METHOD_4 ( STRING_4 , IDENT_11 [ 0 ] , 2 ) ) ; IDENT_11 [ 1 ] = IDENT_7 . METHOD_5 ( STRING_5 , IDENT_11 [ 1 ] , 2 ) ; org . nd4j . IDENT_4 . IDENT_5 . IDENT_8 t = IDENT_7 . METHOD_6 ( 2 , IDENT_11 ) ; t . METHOD_7 ( STRING_6 ) ; java . lang . String err = org . nd4j . IDENT_4 . validation . IDENT_16 . validate ( new org . nd4j . IDENT_4 . validation . METHOD_11 ( IDENT_7 ) . METHOD_12 ( METHOD_11 . IDENT_17 . IDENT_18 ) . METHOD_13 ( STRING_6 , out ) . METHOD_14 ( true ) ) ; "<AssertPlaceHolder>" ; } METHOD_14 ( boolean ) { this . METHOD_15 ( IDENT_19 ) ; return this ; }
org . junit . Assert . assertNull ( err ) 