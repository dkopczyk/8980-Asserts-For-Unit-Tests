METHOD_0 ( ) { IDENT_0 . val IDENT_1 = org . nd4j . IDENT_2 . IDENT_3 . IDENT_4 . create ( ) ; IDENT_0 . val IDENT_5 = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 1 , 12 , 12 ) . METHOD_2 ( 4 , 3 ) ; IDENT_0 . val IDENT_6 = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 1 , 4 , 4 ) . METHOD_2 ( 4 , 1 ) ; IDENT_0 . val IDENT_7 = IDENT_1 . METHOD_3 ( STRING_0 , IDENT_5 ) ; IDENT_0 . val IDENT_8 = IDENT_1 . METHOD_3 ( STRING_1 , IDENT_6 ) ; IDENT_0 . val output = IDENT_1 . METHOD_4 ( STRING_2 , IDENT_7 , IDENT_8 , org . nd4j . linalg . api . IDENT_9 . params . IDENT_10 . builder ( ) . METHOD_5 ( true ) . METHOD_6 ( false ) . build ( ) ) ; "<AssertPlaceHolder>" ; IDENT_0 . val result = IDENT_1 . exec ( ) ; } METHOD_7 ( ) { long [ ] IDENT_11 = IDENT_12 . METHOD_8 ( METHOD_9 ( ) ) ; if ( IDENT_11 == null ) { org . nd4j . IDENT_2 . IDENT_3 . val arr = METHOD_10 ( ) ; if ( arr != null ) return arr . METHOD_11 ( ) ; } return IDENT_11 ; }
org . junit . Assert . assertArrayEquals ( new long [ ] { 3 , 1 } , output . METHOD_7 ( ) ) 