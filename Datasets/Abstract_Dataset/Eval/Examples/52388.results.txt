METHOD_0 ( ) { org . nd4j . IDENT_0 . IDENT_1 . IDENT_2 graph = org . nd4j . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . getInstance ( ) . METHOD_1 ( new org . nd4j . linalg . io . METHOD_2 ( STRING_0 ) . METHOD_3 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { java . net . URL url = this . METHOD_4 ( ) ; if ( METHOD_5 ( url ) ) { try { url = METHOD_6 ( url ) ; java . util . IDENT_7 . IDENT_8 IDENT_9 = new java . util . IDENT_7 . METHOD_7 ( url . METHOD_8 ( ) ) ; java . util . IDENT_7 . IDENT_10 entry = IDENT_9 . METHOD_9 ( this . IDENT_11 ) ; org . nd4j . linalg . util . InputStream stream = IDENT_9 . METHOD_3 ( entry ) ; return stream ; } catch ( java . lang . Exception e ) { throw new java . lang . RuntimeException ( e ) ; } } else { org . nd4j . linalg . util . File IDENT_12 = this . METHOD_8 ( ) ; return new org . nd4j . linalg . util . METHOD_10 ( IDENT_12 ) ; } }
org . junit . Assert . assertNotNull ( graph ) 