METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray IDENT_0 = org . nd4j . linalg . factory . Nd4j . create ( new float [ ] { 1 , 2 , 3 , 4 } , new long [ ] { 2 , 2 } ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_1 = org . nd4j . linalg . factory . Nd4j . create ( new float [ ] { 1 , 2 } , new long [ ] { 2 , 1 } ) ; IDENT_0 . METHOD_1 ( IDENT_1 ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_2 = org . nd4j . linalg . factory . Nd4j . create ( new float [ ] { 2 , 4 , 4 , 6 } , new long [ ] { 2 , 2 } ) ; "<AssertPlaceHolder>" ; } create ( float [ ] , int , int , int [ ] , long , char ) { int [ ] IDENT_3 = new int [ ] { IDENT_4 , IDENT_5 } ; IDENT_3 = org . nd4j . linalg . factory . Nd4j . METHOD_2 ( IDENT_3 ) ; org . nd4j . linalg . factory . Nd4j . METHOD_3 ( data . length , IDENT_3 ) ; org . nd4j . linalg . factory . INDArray ret = org . nd4j . linalg . factory . Nd4j . INSTANCE . create ( data , IDENT_3 , IDENT_6 , offset , IDENT_7 ) ; org . nd4j . linalg . factory . Nd4j . METHOD_4 ( ret ) ; return ret ; }
org . junit . Assert . assertEquals ( IDENT_2 , IDENT_0 ) 