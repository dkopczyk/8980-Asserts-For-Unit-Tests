METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray IDENT_0 = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { 1.0 , 1.0 , 1.0 , 1.0 , 2.0 , 2.0 , 2.0 , 2.0 , 1.0 , 1.0 , 1.0 , 1.0 , 2.0 , 2.0 , 2.0 , 2.0 , - 1.0 , - 1.0 , - 1.0 , - 1.0 , - 2.0 , - 2.0 , - 2.0 , - 2.0 , - 1.0 , - 1.0 , - 1.0 , - 1.0 , - 2.0 , - 2.0 , - 2.0 , - 2.0 } ) . METHOD_1 ( 2 , 16 ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_1 = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { 1.0 , 1.0 , 1.0 , 1.0 , 2.0 , 2.0 , 2.0 , 2.0 , 1.0 , 1.0 , 1.0 , 1.0 , 2.0 , 2.0 , 2.0 , 2.0 } ) ; org . nd4j . linalg . api . ndarray . INDArray expected = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , - 1.0 , - 1.0 , - 1.0 , - 1.0 , - 1.0 , - 1.0 , - 1.0 , - 1.0 , - 1.0 , - 1.0 , - 1.0 , - 1.0 , - 1.0 , - 1.0 , - 1.0 , - 1.0 } , new long [ ] { 2 , 16 } ) ; org . nd4j . linalg . api . ndarray . INDArray actual = org . nd4j . linalg . factory . Nd4j . METHOD_2 ( ) . METHOD_3 ( new org . nd4j . linalg . METHOD_4 ( IDENT_0 , IDENT_1 , IDENT_0 . METHOD_5 ( ) , ( - 1 ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { throw new java . lang . METHOD_6 ( ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 