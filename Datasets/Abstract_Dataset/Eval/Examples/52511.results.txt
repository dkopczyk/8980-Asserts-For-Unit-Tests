METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray array = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 1 , 9 , 9 ) ; org . apache . commons . math3 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new org . apache . commons . math3 . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 ( INT_0 ) ; double exp = IDENT_4 . evaluate ( array . data ( ) . METHOD_3 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . IDENT_5 ) { if ( ( ( IDENT_6 . METHOD_5 ( ) ) < 0 ) || ( ( IDENT_6 . METHOD_5 ( ) ) > 100 ) ) throw new org . nd4j . linalg . exception . METHOD_6 ( STRING_0 ) ; if ( METHOD_7 ( ) ) return this . METHOD_8 ( 0 ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_7 = org . nd4j . linalg . factory . Nd4j . METHOD_9 ( this . METHOD_10 ( this . METHOD_11 ( ) ) , true ) ; return METHOD_12 ( IDENT_6 , IDENT_7 ) ; }
org . junit . Assert . assertEquals ( exp , array . METHOD_4 ( INT_0 ) ) 