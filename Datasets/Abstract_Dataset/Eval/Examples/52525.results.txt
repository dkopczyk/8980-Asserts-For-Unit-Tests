METHOD_0 ( ) { IDENT_0 . val IDENT_1 = org . nd4j . linalg . factory . Nd4j . create ( INT_0 , INT_1 ) . METHOD_1 ( FLOAT_0 ) ; IDENT_0 . val IDENT_2 = org . nd4j . linalg . factory . Nd4j . create ( INT_1 , INT_2 ) . METHOD_1 ( FLOAT_0 ) ; IDENT_0 . val IDENT_3 = org . nd4j . linalg . factory . Nd4j . create ( INT_0 , INT_2 ) ; IDENT_0 . val IDENT_4 = org . nd4j . linalg . factory . Nd4j . create ( INT_0 , INT_2 ) . METHOD_1 ( FLOAT_1 ) ; IDENT_0 . val IDENT_5 = IDENT_1 . METHOD_2 ( IDENT_2 ) ; IDENT_0 . val op = org . nd4j . linalg . api . IDENT_6 . IDENT_7 . builder ( STRING_0 ) . METHOD_3 ( IDENT_1 , IDENT_2 ) . METHOD_4 ( IDENT_3 ) . build ( ) ; org . nd4j . linalg . factory . Nd4j . METHOD_5 ( ) . exec ( op ) ; "<AssertPlaceHolder>" ; } exec ( org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_10 ) { METHOD_6 ( op ) ; if ( op instanceof org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_11 ) { org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_11 s = ( ( org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_11 ) ( op ) ) ; exec ( s ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_12 ) { op . exec ( ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_13 ) { org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_13 t = ( ( org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_13 ) ( op ) ) ; exec ( t ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_14 ) { org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_14 ac = ( ( org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_14 ) ( op ) ) ; exec ( ac ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_15 ) { org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_15 IDENT_16 = ( ( org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_15 ) ( op ) ) ; exec ( IDENT_16 ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_17 ) { org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_17 IDENT_18 = ( ( org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_17 ) ( op ) ) ; exec ( IDENT_18 , IDENT_18 . METHOD_7 ( ) ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_19 ) { org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_19 IDENT_20 = ( ( org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_19 ) ( op ) ) ; exec ( IDENT_20 ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_21 ) { org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_21 IDENT_22 = ( ( org . nd4j . linalg . IDENT_8 . IDENT_9 . IDENT_6 . IDENT_21 ) ( op ) ) ; exec ( IDENT_22 , org . nd4j . linalg . factory . Nd4j . METHOD_8 ( ) ) ; } return op ; }
org . junit . Assert . assertEquals ( IDENT_4 , IDENT_3 ) 