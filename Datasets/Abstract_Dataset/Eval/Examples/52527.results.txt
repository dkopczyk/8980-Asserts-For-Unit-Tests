METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray in = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( ( - 2 ) , 2 , 20 ) ; org . nd4j . linalg . api . ndarray . INDArray out = org . nd4j . linalg . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 ( in , true ) ; org . nd4j . linalg . api . ndarray . INDArray exp = org . nd4j . linalg . factory . Nd4j . create ( in . METHOD_3 ( ) ) ; for ( int i = 0 ; i < ( in . length ( ) ) ; i ++ ) { double x = in . METHOD_4 ( i ) ; double y = FLOAT_0 * ( ( java . lang . Math . exp ( ( - x ) ) ) + ( java . lang . Math . exp ( x ) ) ) ; exp . METHOD_5 ( i , y ) ; } "<AssertPlaceHolder>" ; } METHOD_5 ( long [ ] , int ) { return METHOD_5 ( IDENT_3 , ( ( double ) ( value ) ) ) ; }
org . junit . Assert . assertEquals ( exp , out ) 