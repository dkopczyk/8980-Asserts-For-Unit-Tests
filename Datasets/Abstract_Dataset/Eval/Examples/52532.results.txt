METHOD_0 ( ) { if ( ! ( org . nd4j . linalg . factory . Nd4j . METHOD_1 ( ) . getClass ( ) . METHOD_2 ( ) . toLowerCase ( ) . contains ( STRING_0 ) ) ) return ; IDENT_0 . val IDENT_1 = org . nd4j . linalg . factory . Nd4j . METHOD_3 ( ) ; org . nd4j . linalg . factory . Nd4j . METHOD_4 ( IDENT_2 . Type . IDENT_3 ) ; IDENT_0 . val arr = org . nd4j . linalg . factory . Nd4j . METHOD_5 ( 3 , 3 ) ; arr . METHOD_6 ( FLOAT_0 ) ; IDENT_0 . val exp = org . nd4j . linalg . factory . Nd4j . create ( 3 , 3 ) . METHOD_7 ( FLOAT_1 ) ; "<AssertPlaceHolder>" ; org . nd4j . linalg . factory . Nd4j . METHOD_4 ( IDENT_1 ) ; } METHOD_7 ( org . nd4j . linalg . api . buffer . IDENT_2 ) { org . nd4j . linalg . IDENT_4 . buffer . IDENT_5 . IDENT_6 . METHOD_8 ( this , data ) ; }
org . junit . Assert . assertEquals ( exp , arr ) 