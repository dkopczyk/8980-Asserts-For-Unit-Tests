METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray x = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { 1 , 2 , 0 , 4 , 5 } ) ; org . nd4j . linalg . api . ndarray . INDArray y = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { 2 , 4 , 3 , 4 , 5 } ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_0 = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { 2 , 2 , 3 , 4 , 5 } ) ; org . nd4j . linalg . factory . Nd4j . METHOD_1 ( ) . exec ( new org . nd4j . linalg . api . IDENT_1 . impl . IDENT_2 . IDENT_3 . METHOD_2 ( x , y , org . nd4j . linalg . indexing . IDENT_4 . IDENT_5 . METHOD_3 ( 2 ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . nd4j . linalg . api . IDENT_6 . IDENT_7 ) { return new org . nd4j . linalg . indexing . IDENT_4 . METHOD_4 ( value ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , x ) 