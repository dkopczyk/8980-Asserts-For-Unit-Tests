METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray arr = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 0 } ) ; org . nd4j . linalg . api . ndarray . INDArray result = org . nd4j . linalg . indexing . IDENT_0 . METHOD_1 ( arr , org . nd4j . linalg . indexing . IDENT_1 . IDENT_2 . METHOD_2 ( 3 ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( long ) { org . nd4j . linalg . factory . Nd4j . METHOD_4 ( ) . METHOD_5 ( this ) ; if ( i >= ( length ( ) ) ) { throw new java . lang . IllegalArgumentException ( ( STRING_0 + ( length ( ) ) ) ) ; } METHOD_6 ( ) ; if ( i == 0 ) return data ( ) . METHOD_3 ( i ) ; long [ ] IDENT_3 = ( ( METHOD_7 ( ) ) == STRING_1 ) ? org . nd4j . linalg . api . IDENT_4 . IDENT_5 . METHOD_8 ( this , i ) : org . nd4j . linalg . api . IDENT_4 . IDENT_5 . METHOD_9 ( this , i ) ; org . nd4j . linalg . api . IDENT_4 . IDENT_5 . METHOD_10 ( IDENT_3 , METHOD_11 ( ) ) ; return METHOD_3 ( IDENT_3 ) ; }
org . junit . Assert . assertEquals ( 2 , result . METHOD_3 ( 0 ) , 0.0 ) 