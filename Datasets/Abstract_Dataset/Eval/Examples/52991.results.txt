METHOD_0 ( ) { javax . jcr . security . IDENT_0 IDENT_1 = METHOD_1 ( root ) ; org . apache . jackrabbit . api . security . IDENT_2 IDENT_3 = org . apache . jackrabbit . commons . jackrabbit . authorization . IDENT_4 . METHOD_2 ( IDENT_1 , IDENT_5 ) ; IDENT_3 . METHOD_3 ( IDENT_6 , METHOD_4 ( IDENT_7 . IDENT_8 ) ) ; IDENT_1 . METHOD_5 ( IDENT_5 , IDENT_3 ) ; org . apache . jackrabbit . oak . util . IDENT_9 policy = new org . apache . jackrabbit . oak . util . METHOD_6 ( root . METHOD_7 ( ( ( IDENT_5 ) + STRING_0 ) ) ) ; org . apache . jackrabbit . oak . util . METHOD_6 IDENT_10 = policy . METHOD_8 ( STRING_1 , org . apache . jackrabbit . oak . security . authorization . IDENT_11 . IDENT_12 ) ; IDENT_10 . METHOD_9 ( org . apache . jackrabbit . oak . security . authorization . IDENT_11 . IDENT_13 , IDENT_6 . getName ( ) ) ; IDENT_10 . METHOD_10 ( IDENT_14 . IDENT_15 , IDENT_7 . IDENT_8 ) ; try { root . commit ( ) ; org . junit . Assert . fail ( STRING_2 ) ; } catch ( org . apache . jackrabbit . oak . api . IDENT_16 e ) { "<AssertPlaceHolder>" ; } } METHOD_11 ( ) { return METHOD_12 ( org . apache . jackrabbit . oak . api . IDENT_16 . IDENT_17 ) ; }
org . junit . Assert . assertTrue ( e . METHOD_11 ( ) ) 