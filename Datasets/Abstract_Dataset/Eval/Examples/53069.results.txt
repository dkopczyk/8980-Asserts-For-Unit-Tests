METHOD_0 ( ) { com . eclipsesource . json . IDENT_0 IDENT_1 = client . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( ) { java . net . http . IDENT_2 request = METHOD_2 ( STRING_0 ) . METHOD_3 ( ) . build ( ) ; try { java . net . http . IDENT_3 < java . lang . String > response = IDENT_4 . METHOD_4 ( request , java . net . http . IDENT_3 . IDENT_5 . METHOD_5 ( ) ) ; if ( ( response . METHOD_6 ( ) ) != 200 ) { IDENT_6 . IDENT_7 . it . util . IDENT_8 . LOG . info ( STRING_1 , response . body ( ) ) ; throw new java . lang . RuntimeException ( ( STRING_2 + ( response . METHOD_6 ( ) ) ) ) ; } return ( ( com . eclipsesource . json . IDENT_0 ) ( com . eclipsesource . json . IDENT_9 . parse ( response . body ( ) ) ) ) ; } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( e ) ; } catch ( java . lang . IDENT_10 e ) { java . lang . Thread . METHOD_7 ( ) . METHOD_8 ( ) ; throw new java . lang . RuntimeException ( STRING_3 ) ; } }
org . junit . Assert . assertTrue ( ( ( IDENT_1 . size ( ) ) > 0 ) ) 