METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 entry = IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 . create ( ) ; entry . METHOD_1 ( 0 ) ; entry . METHOD_2 ( 4 ) ; IDENT_5 . add ( entry ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( long , long ) { if ( end < start ) { throw new java . lang . IllegalArgumentException ( ( ( ( STRING_0 + end ) + STRING_1 ) + start ) ) ; } for ( T IDENT_6 : IDENT_7 . values ( ) ) { if ( ( ( IDENT_6 . METHOD_4 ( ) ) < start ) && ( start < ( IDENT_6 . METHOD_5 ( ) ) ) ) { return IDENT_6 ; } if ( ( ( IDENT_6 . METHOD_4 ( ) ) < end ) && ( end < ( IDENT_6 . METHOD_5 ( ) ) ) ) { return IDENT_6 ; } } return null ; }
org . junit . Assert . assertNotNull ( IDENT_5 . METHOD_3 ( 1 , 3 ) ) 