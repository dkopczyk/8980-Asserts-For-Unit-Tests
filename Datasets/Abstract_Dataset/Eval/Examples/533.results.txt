METHOD_0 ( ) { METHOD_1 ( ) ; final com . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = com . IDENT_0 . IDENT_1 . IDENT_4 . getInstance ( com . IDENT_0 . IDENT_1 . IDENT_5 . getInstance ( IDENT_5 . IDENT_6 ) ) ; final com . IDENT_0 . IDENT_1 . IDENT_2 IDENT_7 = com . IDENT_0 . IDENT_1 . IDENT_4 . METHOD_2 ( IDENT_4 . IDENT_8 ) ; final com . IDENT_0 . IDENT_1 . IDENT_2 IDENT_9 = com . IDENT_0 . IDENT_1 . IDENT_4 . getInstance ( com . IDENT_0 . IDENT_1 . IDENT_5 . getInstance ( IDENT_5 . IDENT_10 ) ) ; com . IDENT_0 . IDENT_1 . IDENT_11 IDENT_12 = METHOD_3 ( METHOD_4 ( ) ) ; java . util . Set < com . IDENT_0 . IDENT_1 . IDENT_2 > IDENT_13 = new java . util . HashSet ( ) ; IDENT_13 . add ( IDENT_3 ) ; IDENT_13 . add ( IDENT_7 ) ; IDENT_13 . add ( IDENT_9 ) ; IDENT_14 . METHOD_5 ( IDENT_12 , IDENT_13 ) ; final char [ ] IDENT_15 = METHOD_4 ( ) ; com . IDENT_0 . IDENT_1 . IDENT_11 IDENT_16 = METHOD_3 ( IDENT_15 ) ; METHOD_6 ( IDENT_16 , IDENT_12 ) ; IDENT_14 . METHOD_7 ( IDENT_16 , com . IDENT_0 . IDENT_1 . IDENT_17 . newInstance ( IDENT_15 ) ) ; final java . util . Set < com . IDENT_0 . IDENT_1 . IDENT_2 > IDENT_18 = IDENT_14 . METHOD_8 ( IDENT_12 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( com . IDENT_0 . IDENT_1 . IDENT_11 ) { com . IDENT_0 . IDENT_1 . sql . internal . IDENT_19 . IDENT_20 connection = null ; METHOD_9 ( ) ; METHOD_10 ( IDENT_12 ) ; try { connection = METHOD_11 ( ) ; IDENT_12 = METHOD_12 ( connection , IDENT_12 ) ; METHOD_13 ( connection , IDENT_12 ) ; return METHOD_14 ( connection , IDENT_12 ) ; } finally { METHOD_15 ( connection ) ; } }
org . junit . Assert . assertThat ( IDENT_18 , org . hamcrest . CoreMatchers . is ( IDENT_13 ) ) 