METHOD_0 ( ) { org . IDENT_0 . plugins . IDENT_1 . graph . IDENT_2 IDENT_3 = mock ( org . IDENT_0 . plugins . IDENT_1 . graph . IDENT_2 . class ) ; org . IDENT_0 . plugins . IDENT_1 . graph . IDENT_2 parent = mock ( org . IDENT_0 . plugins . IDENT_1 . graph . IDENT_2 . class ) ; when ( parent . METHOD_1 ( IDENT_4 . IDENT_5 . jenkins . IDENT_1 . IDENT_6 . IDENT_7 . class ) ) . thenReturn ( new IDENT_4 . IDENT_5 . jenkins . IDENT_1 . IDENT_6 . METHOD_2 ( 0L ) ) ; when ( IDENT_3 . METHOD_3 ( ) ) . thenReturn ( java . util . Collections . singletonList ( parent ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . IDENT_0 . plugins . IDENT_1 . graph . IDENT_2 ) { if ( ( IDENT_8 != null ) && ( ! ( IDENT_8 . METHOD_3 ( ) . isEmpty ( ) ) ) ) { java . util . Optional < org . IDENT_0 . plugins . IDENT_1 . graph . IDENT_2 > IDENT_9 = IDENT_4 . IDENT_5 . jenkins . IDENT_1 . util . IDENT_10 . METHOD_5 ( IDENT_8 ) ; return IDENT_9 . METHOD_6 ( ) ; } return false ; }
org . junit . Assert . assertThat ( IDENT_4 . IDENT_5 . jenkins . IDENT_1 . util . IDENT_10 . METHOD_4 ( IDENT_3 ) , org . hamcrest . CoreMatchers . is ( true ) ) 