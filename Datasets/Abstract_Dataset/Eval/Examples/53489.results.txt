METHOD_0 ( ) { IDENT_0 . append ( new com . IDENT_1 . IDENT_2 . core . model . METHOD_1 ( 0 , 1 , STRING_0 , 3 ) , new com . IDENT_1 . IDENT_2 . storage . METHOD_2 ( INT_0 , 0 , 0 ) ) ; IDENT_0 . append ( new com . IDENT_1 . IDENT_2 . core . model . METHOD_1 ( 1 , 2 , STRING_1 , 4 ) , new com . IDENT_1 . IDENT_2 . storage . METHOD_2 ( INT_0 , 0 , 10 ) ) ; IDENT_0 . append ( new com . IDENT_1 . IDENT_2 . core . model . METHOD_1 ( 2 , 3 , STRING_2 , 5 ) , new com . IDENT_1 . IDENT_2 . storage . METHOD_2 ( INT_0 , 0 , 20 ) ) ; IDENT_0 . METHOD_3 ( ) ; com . IDENT_1 . IDENT_2 . storage . METHOD_2 IDENT_3 = IDENT_4 . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { METHOD_5 ( ) ; METHOD_6 ( ) ; IDENT_5 = com . IDENT_1 . IDENT_2 . storage . index . IDENT_6 . METHOD_7 ( database ) ; IDENT_5 . start ( ) ; com . IDENT_1 . IDENT_2 . storage . METHOD_2 IDENT_3 = IDENT_5 . METHOD_4 ( ) ; IDENT_7 = com . IDENT_1 . IDENT_2 . storage . index . IDENT_6 . METHOD_8 ( database , IDENT_3 ) ; IDENT_7 . start ( ) ; return IDENT_7 . METHOD_4 ( ) ; }
org . junit . Assert . assertEquals ( new com . IDENT_1 . IDENT_2 . storage . METHOD_2 ( INT_0 , 0 , 0 ) , IDENT_3 ) 