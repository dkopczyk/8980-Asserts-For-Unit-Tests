METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; java . lang . String IDENT_2 = STRING_2 ; java . lang . String IDENT_3 = STRING_2 0 ; java . lang . String IDENT_4 = STRING_3 ; java . lang . String IDENT_5 = STRING_4 ; java . util . HashMap < java . lang . String , java . lang . String > IDENT_6 = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; IDENT_6 . put ( IDENT_0 , IDENT_1 ) ; IDENT_6 . put ( IDENT_2 , IDENT_3 ) ; IDENT_6 . put ( IDENT_4 , IDENT_5 ) ; java . lang . String IDENT_7 = ( ( ( ( ( STRING_5 + IDENT_0 ) + STRING_6 ) + IDENT_2 ) + STRING_7 ) + IDENT_4 ) + STRING_8 ; org . IDENT_8 . IDENT_9 . algorithm . IDENT_10 IDENT_9 = new org . IDENT_8 . IDENT_9 . algorithm . METHOD_1 ( ) ; org . IDENT_8 . IDENT_9 . IDENT_11 . Document d = org . IDENT_8 . IDENT_9 . IDENT_12 . IDENT_13 . METHOD_2 ( IDENT_7 ) ; IDENT_9 . run ( d , null ) ; org . IDENT_8 . IDENT_9 . IDENT_11 . IDENT_14 IDENT_15 = d . METHOD_3 ( ) ; java . util . HashMap < org . IDENT_8 . IDENT_9 . IDENT_11 . IDENT_16 , java . lang . String > results = new java . util . HashMap < org . IDENT_8 . IDENT_9 . IDENT_11 . IDENT_16 , java . lang . String > ( ) ; for ( org . IDENT_8 . IDENT_9 . IDENT_11 . IDENT_16 IDENT_17 : IDENT_15 ) { java . lang . String IDENT_18 = IDENT_17 . METHOD_4 ( ) ; results . put ( IDENT_17 , IDENT_18 ) ; } for ( org . IDENT_8 . IDENT_9 . IDENT_11 . IDENT_16 IDENT_17 : IDENT_15 ) { java . lang . String IDENT_18 = IDENT_17 . METHOD_4 ( ) ; System . out . println ( ( ( ( IDENT_17 . METHOD_5 ( ) ) + STRING_9 ) + IDENT_18 ) ) ; "<AssertPlaceHolder>" ; } } METHOD_5 ( ) { return IDENT_19 ; }
org . junit . Assert . assertTrue ( IDENT_6 . get ( IDENT_17 . METHOD_5 ( ) ) . equals ( IDENT_18 ) ) 