METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; org . irods . jargon . core . rule . IDENT_1 IDENT_2 = new org . irods . jargon . core . rule . METHOD_1 ( ) ; org . irods . jargon . core . rule . IDENT_3 actual = IDENT_2 . METHOD_2 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { if ( ( IDENT_0 == null ) || ( IDENT_0 . isEmpty ( ) ) ) { throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } org . irods . jargon . core . rule . METHOD_1 . log . debug ( STRING_2 ) ; org . irods . jargon . core . rule . IDENT_3 IDENT_4 = METHOD_3 ( IDENT_0 ) ; if ( IDENT_4 != null ) { org . irods . jargon . core . rule . METHOD_1 . log . debug ( STRING_3 , IDENT_4 ) ; return IDENT_4 ; } java . util . regex . IDENT_5 m = IDENT_6 . matcher ( IDENT_0 ) ; java . util . regex . IDENT_5 IDENT_7 = IDENT_8 . matcher ( IDENT_0 ) ; boolean IDENT_9 = m . find ( ) ; boolean IDENT_10 = IDENT_7 . find ( ) ; if ( IDENT_9 && IDENT_10 ) { return IDENT_3 . IDENT_11 ; } m = IDENT_12 . matcher ( IDENT_0 ) ; boolean IDENT_13 = m . find ( ) ; if ( IDENT_13 ) { return IDENT_3 . IDENT_14 ; } throw new org . irods . jargon . core . rule . METHOD_4 ( STRING_4 ) ; }
org . junit . Assert . assertEquals ( IDENT_3 . IDENT_11 , actual ) 