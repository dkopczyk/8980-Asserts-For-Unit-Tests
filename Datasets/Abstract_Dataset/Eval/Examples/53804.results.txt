METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; java . lang . String path = IDENT_0 + IDENT_1 ; java . lang . String actual = org . irods . jargon . core . utils . IDENT_2 . METHOD_1 ( IDENT_0 , path ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String ) { if ( IDENT_0 == null ) { throw new java . lang . IllegalArgumentException ( STRING_2 ) ; } if ( ( path == null ) || ( path . isEmpty ( ) ) ) { throw new java . lang . IllegalArgumentException ( STRING_3 ) ; } int IDENT_3 = IDENT_0 . length ( ) ; int IDENT_4 = path . length ( ) ; if ( IDENT_3 >= IDENT_4 ) { throw new org . irods . jargon . core . exception . METHOD_2 ( STRING_4 ) ; } java . lang . String IDENT_5 = path . substring ( 0 , IDENT_3 ) ; if ( ! ( IDENT_5 . equals ( IDENT_0 ) ) ) { throw new org . irods . jargon . core . exception . METHOD_2 ( STRING_4 ) ; } return path . substring ( IDENT_3 ) ; }
org . junit . Assert . assertEquals ( IDENT_1 , actual ) 