METHOD_0 ( ) { java . util . List < com . IDENT_0 . IDENT_1 . api . IDENT_2 > IDENT_3 = network . METHOD_1 ( com . IDENT_0 . IDENT_1 . api . IDENT_4 . IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { if ( id == null ) throw new java . lang . METHOD_2 ( STRING_0 ) ; if ( ( id . length ( ) ) == 0 ) throw new java . lang . IllegalArgumentException ( STRING_1 ) ; java . util . List < com . IDENT_0 . IDENT_1 . api . IDENT_2 > IDENT_6 = new java . util . ArrayList < com . IDENT_0 . IDENT_1 . api . IDENT_2 > ( ) ; for ( com . IDENT_0 . IDENT_1 . api . IDENT_2 remote : IDENT_7 . values ( ) ) { if ( id . equals ( remote . METHOD_3 ( ) ) ) IDENT_6 . add ( remote ) ; } for ( com . IDENT_0 . IDENT_1 . api . IDENT_2 remote : IDENT_8 . values ( ) ) { if ( id . equals ( remote . METHOD_3 ( ) ) ) IDENT_6 . add ( remote ) ; } return IDENT_6 ; }
org . junit . Assert . assertEquals ( IDENT_3 . size ( ) , 0 ) 