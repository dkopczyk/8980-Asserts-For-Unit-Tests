METHOD_0 ( ) { java . lang . String expected = STRING_0 ; int IDENT_0 = ( ( int ) ( IDENT_1 . size ( ) ) ) ; byte [ ] IDENT_2 = new byte [ IDENT_0 ] ; int i ; for ( i = 0 ; i < ( size ) ; i ++ ) { IDENT_2 [ i ] = IDENT_1 . METHOD_1 ( i ) ; } "<AssertPlaceHolder>" ; try { IDENT_1 . METHOD_1 ( i ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( java . io . IOException io ) { } } METHOD_1 ( long ) { final int result = reader . METHOD_2 ( position ) ; if ( result < 0 ) { throw new java . io . IOException ( ( STRING_2 + position ) ) ; } return ( ( byte ) ( result ) ) ; }
org . junit . Assert . assertEquals ( expected , new java . lang . String ( IDENT_2 ) ) 