METHOD_0 ( ) { java . io . ByteArrayInputStream in = new java . io . ByteArrayInputStream ( new byte [ ] { 1 , 2 , 3 , 4 } ) ; org . apache . IDENT_0 . IDENT_1 . text . io . IDENT_2 IDENT_3 = new org . apache . IDENT_0 . IDENT_1 . text . io . METHOD_1 ( in ) ; byte [ ] IDENT_4 = new byte [ 4 ] ; byte [ ] IDENT_5 = new byte [ 4 ] ; IDENT_3 . read ( IDENT_4 ) ; IDENT_3 . METHOD_2 ( ) ; IDENT_3 . read ( IDENT_5 ) ; for ( int n = 0 ; n < 4 ; n ++ ) "<AssertPlaceHolder>" ; } read ( java . io . InputStream ) { java . io . ByteArrayOutputStream out = new java . io . ByteArrayOutputStream ( ) ; int m = - 1 ; while ( ( m = in . read ( ) ) != ( - 1 ) ) { out . write ( m ) ; } java . lang . String IDENT_6 = new java . lang . String ( out . toByteArray ( ) ) ; return IDENT_6 . trim ( ) ; }
org . junit . Assert . assertEquals ( IDENT_5 [ n ] , IDENT_4 [ n ] ) 