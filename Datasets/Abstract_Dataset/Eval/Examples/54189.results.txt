METHOD_0 ( ) { org . IDENT_0 . support . ca . IDENT_1 handler = new org . IDENT_0 . support . ca . METHOD_1 ( "test" , IDENT_2 ) ; when ( IDENT_2 . METHOD_2 ( ) ) . thenReturn ( Boolean . IDENT_3 ) ; when ( channel . METHOD_3 ( ) ) . thenReturn ( IDENT_4 . IDENT_5 ) ; when ( channel . getName ( ) ) . thenReturn ( "test" ) ; gov . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 type = handler . METHOD_4 ( channel ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( gov . IDENT_6 . IDENT_7 . IDENT_10 ) { org . IDENT_0 . support . ca . IDENT_9 type = channel . METHOD_3 ( ) ; if ( type . METHOD_5 ( ) ) { return IDENT_11 . IDENT_5 ; } else if ( type . METHOD_6 ( ) ) { return IDENT_12 . IDENT_5 ; } else if ( type . METHOD_7 ( ) ) { return IDENT_13 . IDENT_5 ; } else if ( type . METHOD_8 ( ) ) { return IDENT_14 . IDENT_5 ; } else if ( type . METHOD_9 ( ) ) { return IDENT_15 . IDENT_5 ; } else if ( type . METHOD_10 ( ) ) { return IDENT_16 . IDENT_5 ; } else if ( type . METHOD_11 ( ) ) { if ( ( IDENT_17 . METHOD_2 ( ) ) && ( org . IDENT_0 . support . ca . METHOD_1 . IDENT_18 . matcher ( channel . getName ( ) ) . matches ( ) ) ) { return IDENT_4 . IDENT_5 ; } return IDENT_19 . IDENT_5 ; } throw new java . lang . IllegalArgumentException ( ( STRING_0 + type ) ) ; }
org . junit . Assert . assertThat ( type , equalTo ( IDENT_19 . IDENT_5 ) ) 