METHOD_0 ( ) { java . util . List < java . lang . String > IDENT_0 = new java . util . ArrayList < java . lang . String > ( ) ; java . util . List < java . lang . String > IDENT_1 = new java . util . ArrayList < java . lang . String > ( ) ; java . util . List < eu . IDENT_2 . commons . dto . IDENT_3 > IDENT_4 = IDENT_5 . METHOD_1 ( IDENT_0 , IDENT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . util . List , java . util . List ) { java . util . List < eu . IDENT_2 . commons . dto . IDENT_3 > IDENT_4 = new java . util . ArrayList < eu . IDENT_2 . commons . dto . IDENT_3 > ( ) ; java . util . List < org . IDENT_6 . IDENT_7 . model . node . URI > IDENT_8 = new java . util . ArrayList < org . IDENT_6 . IDENT_7 . model . node . URI > ( ) ; for ( java . lang . String IDENT_9 : IDENT_10 ) { org . IDENT_6 . IDENT_7 . model . node . URI IDENT_11 = new org . IDENT_6 . IDENT_7 . model . node . impl . METHOD_2 ( IDENT_9 ) ; try { if ( METHOD_3 ( ) . METHOD_4 ( IDENT_11 , IDENT_12 . IDENT_13 ) ) { IDENT_8 . addAll ( METHOD_5 ( IDENT_11 ) ) ; } else { IDENT_8 . add ( IDENT_11 ) ; } } catch ( eu . IDENT_2 . IDENT_14 . IDENT_15 . exception . IDENT_16 IDENT_17 ) { logger . info ( ( STRING_0 + IDENT_9 ) ) ; } eu . IDENT_2 . commons . dto . IDENT_3 IDENT_18 = null ; for ( org . IDENT_6 . IDENT_7 . model . node . URI IDENT_19 : IDENT_8 ) { for ( java . lang . String IDENT_20 : IDENT_0 ) { try { IDENT_18 = METHOD_6 ( new org . IDENT_6 . IDENT_7 . model . node . impl . METHOD_2 ( IDENT_20 ) , IDENT_19 ) ; if ( IDENT_18 != null ) { IDENT_4 . add ( IDENT_18 ) ; } } catch ( eu . IDENT_2 . IDENT_14 . IDENT_21 . IDENT_22 . exception . IDENT_23 e ) { logger . error ( STRING_1 , e ) ; return null ; } catch ( eu . IDENT_2 . IDENT_14 . IDENT_21 . IDENT_22 . exception . IDENT_24 e ) { logger . error ( STRING_1 , e ) ; return null ; } catch ( java . lang . IDENT_25 e ) { logger . error ( STRING_1 , e ) ; return null ; } } } } return METHOD_7 ( IDENT_4 ) ; }
org . junit . Assert . assertNotNull ( IDENT_4 ) 