METHOD_0 ( ) { org . apache . IDENT_0 . collection . IDENT_1 reader = METHOD_1 ( de . IDENT_2 . IDENT_3 . IDENT_4 . core . io . IDENT_5 . IDENT_6 . class , IDENT_6 . IDENT_7 , STRING_0 , IDENT_6 . IDENT_8 , STRING_1 , IDENT_6 . IDENT_9 , STRING_2 , IDENT_6 . IDENT_10 , true ) ; int [ ] [ ] IDENT_11 = new int [ ] [ ] { new int [ ] { INT_0 , INT_1 } , new int [ ] { INT_2 , INT_3 } , new int [ ] { INT_4 , INT_5 } , new int [ ] { INT_6 , INT_7 } , new int [ ] { INT_8 , INT_9 } , new int [ ] { INT_10 , INT_11 } , new int [ ] { INT_12 , INT_13 } } ; for ( org . apache . IDENT_0 . IDENT_12 . IDENT_13 IDENT_14 : METHOD_2 ( reader , new org . apache . IDENT_0 . IDENT_15 . IDENT_16 [ ] { } ) ) { for ( de . IDENT_2 . IDENT_3 . IDENT_4 . core . api . IDENT_17 . type . IDENT_18 IDENT_19 : select ( IDENT_14 , de . IDENT_2 . IDENT_3 . IDENT_4 . core . api . IDENT_17 . type . IDENT_18 . class ) ) { for ( de . IDENT_2 . IDENT_3 . IDENT_4 . core . api . IDENT_20 . type . IDENT_21 IDENT_22 : METHOD_3 ( de . IDENT_2 . IDENT_3 . IDENT_4 . core . api . IDENT_20 . type . IDENT_21 . class , IDENT_19 ) ) { System . out . println ( ( ( ( ( ( STRING_3 + ( IDENT_22 . METHOD_4 ( ) ) ) + STRING_4 ) + ( IDENT_22 . METHOD_5 ( ) ) ) + STRING_5 ) + ( IDENT_22 . METHOD_6 ( ) ) ) ) ; boolean found = false ; for ( int [ ] element : IDENT_11 ) { if ( ( ( element [ 0 ] ) == ( IDENT_22 . METHOD_5 ( ) ) ) && ( ( element [ 1 ] ) == ( IDENT_22 . METHOD_6 ( ) ) ) ) { found = true ; break ; } } "<AssertPlaceHolder>" ; } } } } METHOD_6 ( ) { return end ; }
org . junit . Assert . assertEquals ( true , found ) 