METHOD_0 ( ) { net . IDENT_0 . IDENT_1 . util . schema . IDENT_2 parser = new net . IDENT_0 . IDENT_1 . util . schema . METHOD_1 ( ) ; parser . parse ( new java . io . File ( STRING_0 ) ) ; java . lang . String IDENT_3 = STRING_1 ; this . element = parser . METHOD_2 ( ) . get ( new javax . xml . IDENT_3 . METHOD_3 ( IDENT_3 , STRING_2 ) ) ; java . util . HashMap < java . lang . String , java . lang . String > IDENT_4 = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; IDENT_4 . put ( IDENT_3 , STRING_3 ) ; java . lang . String actual = this . element . METHOD_4 ( IDENT_4 ) ; java . lang . String expected = STRING_4 2 + ( ( ( ( ( ( ( ( ( ( STRING_5 1 + STRING_5 3 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) + STRING_5 0 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) + STRING_5 0 ) + STRING_5 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . util . Map ) { return this . METHOD_4 ( IDENT_4 , "\n" ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 