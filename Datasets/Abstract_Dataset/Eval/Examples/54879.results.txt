METHOD_0 ( ) { java . lang . String line = STRING_0 ; IDENT_0 . IDENT_1 . IDENT_2 . common . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 IDENT_7 = new IDENT_0 . IDENT_1 . IDENT_2 . common . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; } parse ( java . lang . String ) { java . lang . String [ ] fields = msg . split ( STRING_1 ) ; if ( ( fields . length ) != 5 ) { throw new IDENT_0 . IDENT_1 . IDENT_8 . IDENT_7 . METHOD_2 ( ( STRING_2 + msg ) ) ; } if ( ( fields [ 2 ] . equals ( STRING_3 ) ) || ( fields [ 3 ] . equals ( STRING_4 ) ) ) { return false ; } java . lang . String IDENT_9 = ( ( fields [ 2 ] ) + " " ) + ( fields [ 3 ] ) ; try { java . text . IDENT_10 IDENT_11 = new java . text . METHOD_3 ( STRING_5 ) ; IDENT_11 . METHOD_4 ( java . util . IDENT_12 . METHOD_5 ( STRING_6 ) ) ; java . util . Date d = IDENT_11 . parse ( IDENT_9 ) ; IDENT_13 = new IDENT_0 . IDENT_1 . IDENT_2 . common . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_6 ( IDENT_14 . IDENT_15 , d . getTime ( ) ) ; } catch ( java . text . IDENT_16 e ) { throw new IDENT_0 . IDENT_1 . IDENT_8 . IDENT_7 . METHOD_2 ( ( STRING_7 + msg ) ) ; } return true ; }
org . junit . Assert . assertEquals ( IDENT_7 . parse ( line ) , 0 ) 