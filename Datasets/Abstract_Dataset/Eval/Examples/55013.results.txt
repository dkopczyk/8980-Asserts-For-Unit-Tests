test ( ) { com . IDENT_0 . IDENT_1 . entity . IDENT_2 f = new com . IDENT_0 . IDENT_1 . entity . METHOD_0 ( ) ; java . util . List < com . IDENT_0 . IDENT_1 . util . IDENT_3 . IDENT_4 > fields = com . IDENT_0 . IDENT_1 . util . IDENT_3 . METHOD_1 ( com . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_6 . class , f ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . Class , java . lang . Object ) { com . IDENT_0 . IDENT_1 . util . List < com . IDENT_0 . IDENT_1 . util . IDENT_3 . IDENT_4 > fields = null ; for ( java . lang . reflect . Field field : instance . getClass ( ) . METHOD_2 ( ) ) { boolean IDENT_7 = field . METHOD_3 ( ) ; field . METHOD_4 ( true ) ; try { if ( field . METHOD_5 ( clazz ) ) { if ( fields == null ) { fields = new com . IDENT_0 . IDENT_1 . util . IDENT_8 < com . IDENT_0 . IDENT_1 . util . IDENT_3 . IDENT_4 > ( ) ; } fields . add ( new com . IDENT_0 . IDENT_1 . util . IDENT_3 . METHOD_6 ( clazz , instance , field ) ) ; } field . METHOD_4 ( METHOD_3 ) ; } catch ( java . lang . Exception e ) { } } return fields ; }
org . junit . Assert . assertTrue ( ( ! ( fields . isEmpty ( ) ) ) ) 