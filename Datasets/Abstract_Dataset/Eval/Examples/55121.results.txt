METHOD_0 ( ) { org . xml . IDENT_0 . IDENT_1 IDENT_2 = IDENT_3 . METHOD_1 ( null , STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String ) { org . xml . IDENT_0 . IDENT_1 source = null ; log . debug ( STRING_1 , IDENT_4 , IDENT_5 ) ; if ( com . github . IDENT_6 . core . loader . xml . IDENT_7 . IDENT_8 . equalsIgnoreCase ( IDENT_5 ) ) { throw new com . github . IDENT_6 . core . METHOD_2 ( ( ( ( ( ( STRING_2 + STRING_3 ) + ( com . github . IDENT_6 . core . loader . xml . IDENT_7 . IDENT_8 ) ) + STRING_4 ) + ( com . github . IDENT_6 . core . loader . xml . IDENT_7 . IDENT_9 ) ) + STRING_5 ) ) ; } try { source = METHOD_3 ( IDENT_4 , IDENT_5 ) ; } catch ( java . io . IOException IDENT_10 ) { log . error ( ( ( STRING_6 + IDENT_5 ) + STRING_7 ) , IDENT_10 ) ; try { source = METHOD_4 ( IDENT_5 ) ; } catch ( java . io . IOException IDENT_11 ) { log . error ( ( ( STRING_6 + IDENT_5 ) + "]" ) , IDENT_11 ) ; } } return source ; }
org . junit . Assert . assertNotNull ( IDENT_2 ) 