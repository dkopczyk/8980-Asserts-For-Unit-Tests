METHOD_0 ( ) { System . out . println ( ( ( ( ( ( STRING_0 + ( IDENT_0 ) ) + STRING_1 ) + ( IDENT_1 ) ) + STRING_1 ) + ( IDENT_2 ) ) ) ; org . util . IDENT_3 . IDENT_4 instance = new org . util . IDENT_3 . METHOD_1 ( IDENT_0 , IDENT_1 ) ; int [ ] IDENT_5 = new int [ IDENT_0 ] ; int [ ] IDENT_6 = new int [ IDENT_0 ] ; for ( int i = 0 ; i < ( IDENT_2 ) ; i ++ ) { instance . next ( IDENT_5 ) ; } java . util . Arrays . METHOD_2 ( IDENT_5 , ( - 1 ) ) ; java . util . Arrays . METHOD_2 ( IDENT_6 , ( - 1 ) ) ; instance . next ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } next ( int [ ] ) { if ( hasNext ( ) ) { METHOD_3 ( ( ( IDENT_5 . length ) - 1 ) ) ; java . lang . System . METHOD_4 ( IDENT_5 , 0 , IDENT_1 , 0 , IDENT_5 . length ) ; } return IDENT_1 ; }
org . junit . Assert . assertArrayEquals ( IDENT_6 , IDENT_5 ) 