METHOD_0 ( ) { IDENT_0 . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; } get ( ) { java . lang . String IDENT_1 = java . lang . System . getProperty ( STRING_0 , java . lang . System . METHOD_2 ( STRING_1 ) ) ; if ( IDENT_1 == null ) { java . lang . Class clazz = org . IDENT_2 . util . IDENT_3 . class ; java . lang . String IDENT_4 = ( clazz . METHOD_3 ( ) ) + STRING_2 ; java . lang . String IDENT_5 = clazz . getResource ( IDENT_4 ) . toString ( ) ; org . IDENT_2 . util . IDENT_3 . logger . debug ( STRING_3 , IDENT_5 ) ; if ( IDENT_5 . startsWith ( STRING_4 ) ) { java . lang . String path = IDENT_5 . substring ( STRING_4 . length ( ) , IDENT_5 . METHOD_4 ( STRING_5 ) ) ; org . IDENT_2 . util . IDENT_3 . logger . debug ( STRING_6 , path ) ; java . io . File IDENT_6 = new java . io . File ( path ) ; java . io . File directory = IDENT_6 . METHOD_5 ( ) . METHOD_5 ( ) ; org . IDENT_2 . util . IDENT_3 . logger . debug ( STRING_7 , directory . getPath ( ) , directory . exists ( ) ) ; IDENT_1 = ( directory . exists ( ) ) ? directory . getPath ( ) : null ; } if ( IDENT_1 != null ) { org . IDENT_2 . util . IDENT_3 . logger . info ( STRING_8 , IDENT_1 ) ; java . lang . System . setProperty ( STRING_0 , IDENT_1 ) ; } } return IDENT_1 ; }
org . junit . Assert . assertTrue ( ( ( IDENT_0 . get ( ) . length ) == 0 ) ) 