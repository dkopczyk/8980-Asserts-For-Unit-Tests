METHOD_0 ( ) { org . IDENT_0 . resolver . IDENT_1 [ ] IDENT_2 = new org . IDENT_0 . resolver . IDENT_1 [ ] { METHOD_1 ( STRING_0 , "foo" , STRING_1 ) , METHOD_1 ( STRING_2 , "bar" , STRING_3 ) } ; org . IDENT_0 . resolver . IDENT_1 [ ] IDENT_3 = new org . IDENT_0 . resolver . IDENT_1 [ ] { METHOD_1 ( STRING_0 , "foo" , STRING_1 ) , METHOD_1 ( STRING_4 , STRING_5 , STRING_6 ) } ; org . IDENT_0 . resolver . IDENT_1 [ ] IDENT_4 = IDENT_5 . METHOD_2 ( IDENT_2 , IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . IDENT_0 . resolver . IDENT_1 [ ] , org . IDENT_0 . resolver . IDENT_1 [ ] ) { org . IDENT_0 . monitor . service . Set < org . IDENT_0 . resolver . IDENT_1 > IDENT_6 = new org . IDENT_0 . monitor . service . HashSet < org . IDENT_0 . resolver . IDENT_1 > ( ) ; org . IDENT_0 . monitor . service . Collections . addAll ( IDENT_6 , IDENT_2 ) ; for ( org . IDENT_0 . resolver . IDENT_1 r : IDENT_3 ) { IDENT_6 . add ( r ) ; } return IDENT_6 . toArray ( new org . IDENT_0 . resolver . IDENT_1 [ IDENT_6 . size ( ) ] ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_4 . length ) == 3 ) ) 