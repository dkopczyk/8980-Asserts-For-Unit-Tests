METHOD_0 ( ) { final com . IDENT_0 . exec . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new com . IDENT_0 . jdbc . impl . METHOD_1 ( new com . IDENT_0 . jdbc . impl . IDENT_5 . METHOD_2 ( ( - INT_0 ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( int ) { final byte result ; switch ( getType ( ) . METHOD_4 ( ) ) { case IDENT_6 : result = IDENT_7 . METHOD_3 ( IDENT_8 ) ; break ; case IDENT_9 : result = com . IDENT_0 . jdbc . impl . METHOD_1 . METHOD_5 ( IDENT_7 . METHOD_6 ( IDENT_8 ) , STRING_0 ) ; break ; case IDENT_10 : result = com . IDENT_0 . jdbc . impl . METHOD_1 . METHOD_5 ( IDENT_7 . METHOD_7 ( IDENT_8 ) , STRING_1 ) ; break ; case IDENT_11 : result = com . IDENT_0 . jdbc . impl . METHOD_1 . METHOD_5 ( IDENT_7 . METHOD_8 ( IDENT_8 ) , STRING_2 ) ; break ; case IDENT_12 : result = com . IDENT_0 . jdbc . impl . METHOD_1 . METHOD_5 ( IDENT_7 . METHOD_9 ( IDENT_8 ) , STRING_3 ) ; break ; case IDENT_13 : result = com . IDENT_0 . jdbc . impl . METHOD_1 . METHOD_5 ( IDENT_7 . METHOD_10 ( IDENT_8 ) , STRING_4 ) ; break ; default : result = IDENT_7 . METHOD_3 ( IDENT_8 ) ; break ; } return result ; }
org . junit . Assert . assertThat ( IDENT_4 . METHOD_3 ( 0 ) , org . hamcrest . CoreMatchers . equalTo ( ( ( byte ) ( - INT_0 ) ) ) ) 