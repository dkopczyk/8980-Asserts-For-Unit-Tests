METHOD_0 ( ) { final byte [ ] [ ] IDENT_0 = new byte [ ] [ ] { com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . IDENT_4 . b ( STRING_0 ) , null , com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . IDENT_4 . b ( STRING_1 ) , null , com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . IDENT_4 . b ( STRING_2 ) } ; final byte [ ] [ ] IDENT_5 = new byte [ ] [ ] { null , com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . IDENT_4 . b ( STRING_3 ) , null , com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . IDENT_4 . b ( STRING_4 ) , com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . IDENT_4 . b ( STRING_5 ) } ; try ( org . apache . IDENT_6 . IDENT_7 . IDENT_8 IDENT_9 = new org . apache . IDENT_6 . IDENT_7 . METHOD_1 ( STRING_6 , IDENT_10 ) ; org . apache . IDENT_6 . IDENT_7 . METHOD_1 IDENT_11 = new org . apache . IDENT_6 . IDENT_7 . METHOD_1 ( STRING_7 , IDENT_10 ) ) { com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . IDENT_12 IDENT_13 = com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . IDENT_14 . METHOD_2 ( new com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . METHOD_3 ( IDENT_9 , IDENT_9 ) , new com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . METHOD_3 ( IDENT_11 , IDENT_11 ) ) ; com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . IDENT_4 . METHOD_4 ( IDENT_9 , IDENT_0 ) ; com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . IDENT_4 . METHOD_4 ( IDENT_11 , IDENT_5 ) ; "<AssertPlaceHolder>" ; try ( com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . IDENT_15 IDENT_16 = new com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . METHOD_5 ( IDENT_10 , IDENT_13 . METHOD_6 ( ) ) ; com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . IDENT_17 IDENT_18 = new com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . METHOD_7 ( IDENT_10 , IDENT_13 . METHOD_8 ( ) ) ) { com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . IDENT_19 . METHOD_9 ( METHOD_9 , 5 , IDENT_16 , IDENT_18 ) ; com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . IDENT_4 . METHOD_10 ( METHOD_9 . METHOD_6 ( ) , METHOD_9 . METHOD_11 ( ) . get ( 0 ) , IDENT_16 , IDENT_18 , IDENT_0 ) ; com . IDENT_1 . IDENT_2 . op . common . IDENT_3 . IDENT_4 . METHOD_10 ( METHOD_9 . METHOD_6 ( ) , METHOD_9 . METHOD_11 ( ) . get ( 1 ) , IDENT_16 , IDENT_18 , IDENT_5 ) ; } } } METHOD_6 ( ) { return IDENT_20 ; }
org . junit . Assert . assertEquals ( 8 , METHOD_9 . METHOD_6 ( ) ) 