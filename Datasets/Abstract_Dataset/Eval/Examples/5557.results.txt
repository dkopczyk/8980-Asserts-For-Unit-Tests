METHOD_0 ( ) { org . apache . accumulo . core . data . IDENT_0 IDENT_1 = org . apache . accumulo . core . data . IDENT_0 . builder ( ) . METHOD_1 ( STRING_0 1 , IDENT_2 . IDENT_3 , STRING_1 , STRING_2 1 ) . METHOD_1 ( STRING_3 , IDENT_2 . IDENT_3 , STRING_4 FLOAT_0 getBytes ( org . apache . accumulo . core . data . UTF_8 ) , STRING_5 FLOAT_1 getBytes ( org . apache . accumulo . core . data . UTF_8 ) ) . METHOD_1 ( STRING_5 1 , IDENT_2 . IDENT_3 , new org . apache . hadoop . io . METHOD_2 ( STRING_5 9 ) , new org . apache . hadoop . io . METHOD_2 ( STRING_2 7 ) ) . METHOD_1 ( STRING_5 4 , IDENT_2 . IDENT_4 , null , STRING_5 7 ) . METHOD_1 ( STRING_0 3 , IDENT_2 . IDENT_4 , STRING_2 0 , null ) . METHOD_1 ( STRING_5 5 , IDENT_2 . IDENT_4 , null , STRING_2 FLOAT_2 getBytes ( org . apache . accumulo . core . data . UTF_8 ) ) . METHOD_1 ( STRING_4 0 , IDENT_2 . IDENT_4 , STRING_0 FLOAT_3 getBytes ( org . apache . accumulo . core . data . UTF_8 ) , null ) . METHOD_1 ( STRING_6 , IDENT_2 . IDENT_4 , null , new org . apache . hadoop . io . METHOD_2 ( STRING_0 5 ) ) . METHOD_1 ( STRING_2 9 , IDENT_2 . IDENT_4 , new org . apache . hadoop . io . METHOD_2 ( STRING_5 2 ) , null ) . METHOD_1 ( STRING_5 8 , IDENT_2 . IDENT_4 , STRING_5 3 , STRING_2 5 ) . METHOD_1 ( STRING_5 6 , IDENT_2 . IDENT_4 , STRING_4 FLOAT_4 getBytes ( org . apache . accumulo . core . data . UTF_8 ) , STRING_0 FLOAT_5 getBytes ( org . apache . accumulo . core . data . UTF_8 ) ) . METHOD_1 ( STRING_0 2 , IDENT_2 . IDENT_4 , new org . apache . hadoop . io . METHOD_2 ( STRING_2 2 ) , new org . apache . hadoop . io . METHOD_2 ( STRING_0 0 ) ) . METHOD_3 ( org . apache . accumulo . core . data . IDENT_0 . builder ( ) . METHOD_1 ( STRING_0 , IDENT_2 . IDENT_4 , ( ( java . lang . String ) ( null ) ) , null ) . build ( ) ) . build ( ) ; java . util . Set < java . lang . String > expected = new java . util . HashSet ( ) ; expected . add ( STRING_0 7 ) ; expected . add ( STRING_0 6 ) ; expected . add ( STRING_4 3 ) ; expected . add ( STRING_4 ) ; expected . add ( STRING_2 ) ; expected . add ( STRING_5 ) ; expected . add ( STRING_7 ) ; expected . add ( STRING_2 4 ) ; expected . add ( STRING_2 8 ) ; expected . add ( STRING_2 6 ) ; expected . add ( STRING_0 4 ) ; expected . add ( STRING_8 ) ; expected . add ( STRING_9 ) ; java . util . Set < java . lang . String > actual = IDENT_1 . METHOD_4 ( ) . stream ( ) . map ( org . apache . accumulo . core . data . IDENT_5 :: toString ) . collect ( METHOD_5 ( ) ) ; "<AssertPlaceHolder>" ; } collect ( org . apache . accumulo . IDENT_6 . IDENT_7 ) { java . lang . String IDENT_8 = "" ; boolean IDENT_9 = true ; while ( IDENT_9 ) { java . util . List < java . lang . String > IDENT_10 = new java . util . ArrayList ( ) ; IDENT_9 = METHOD_6 ( IDENT_11 , IDENT_8 , IDENT_10 ) ; if ( ( IDENT_10 . size ( ) ) == 0 ) break ; else IDENT_8 = IDENT_10 . get ( ( ( IDENT_10 . size ( ) ) - 1 ) ) ; long IDENT_12 = IDENT_10 . size ( ) ; IDENT_11 . METHOD_7 ( IDENT_12 ) ; java . util . IDENT_13 < java . lang . String , java . lang . String > IDENT_14 = METHOD_8 ( IDENT_10 ) ; METHOD_9 ( IDENT_11 , IDENT_14 ) ; IDENT_11 . METHOD_10 ( ( IDENT_12 - ( IDENT_14 . size ( ) ) ) ) ; METHOD_11 ( IDENT_11 , IDENT_14 ) ; } }
org . junit . Assert . assertEquals ( expected , actual ) 