METHOD_0 ( ) { METHOD_1 ( ) ; final java . util . Set < com . IDENT_0 . IDENT_1 . IDENT_2 > IDENT_3 = IDENT_4 . METHOD_2 ( com . IDENT_0 . IDENT_1 . IDENT_5 ) ; "<AssertPlaceHolder>" ; if ( ! ( IDENT_4 . METHOD_3 ( com . IDENT_0 . IDENT_1 . IDENT_5 , com . IDENT_0 . IDENT_1 . IDENT_6 . getInstance ( IDENT_6 . IDENT_7 ) ) ) ) { org . junit . Assert . fail ( STRING_0 ) ; } if ( ! ( IDENT_4 . METHOD_3 ( com . IDENT_0 . IDENT_1 . IDENT_5 , com . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_4 ( IDENT_6 . IDENT_7 ) ) ) ) { org . junit . Assert . fail ( STRING_1 ) ; } if ( ! ( IDENT_4 . METHOD_3 ( com . IDENT_0 . IDENT_1 . IDENT_5 , com . IDENT_0 . IDENT_1 . IDENT_6 . getInstance ( IDENT_6 . IDENT_8 ) ) ) ) { org . junit . Assert . fail ( STRING_0 ) ; } if ( ! ( IDENT_4 . METHOD_3 ( com . IDENT_0 . IDENT_1 . IDENT_5 , com . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_4 ( IDENT_6 . IDENT_8 ) ) ) ) { org . junit . Assert . fail ( STRING_1 ) ; } if ( ! ( IDENT_4 . METHOD_3 ( com . IDENT_0 . IDENT_1 . IDENT_5 , com . IDENT_0 . IDENT_1 . IDENT_6 . getInstance ( IDENT_6 . IDENT_9 ) ) ) ) { org . junit . Assert . fail ( STRING_0 ) ; } if ( ! ( IDENT_4 . METHOD_3 ( com . IDENT_0 . IDENT_1 . IDENT_5 , com . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_4 ( IDENT_6 . IDENT_9 ) ) ) ) { org . junit . Assert . fail ( STRING_1 ) ; } if ( ! ( IDENT_4 . METHOD_3 ( com . IDENT_0 . IDENT_1 . IDENT_5 , com . IDENT_0 . IDENT_1 . IDENT_6 . getInstance ( IDENT_6 . IDENT_7 ) , com . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_4 ( IDENT_6 . IDENT_7 ) , com . IDENT_0 . IDENT_1 . IDENT_6 . getInstance ( IDENT_6 . IDENT_8 ) , com . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_4 ( IDENT_6 . IDENT_8 ) , com . IDENT_0 . IDENT_1 . IDENT_6 . getInstance ( IDENT_6 . IDENT_9 ) , com . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_4 ( IDENT_6 . IDENT_9 ) ) ) ) { org . junit . Assert . fail ( STRING_2 ) ; } if ( ! ( IDENT_4 . METHOD_3 ( com . IDENT_0 . IDENT_1 . IDENT_5 , METHOD_5 ( com . IDENT_0 . IDENT_1 . IDENT_6 . getInstance ( IDENT_6 . IDENT_7 ) ) ) ) ) { org . junit . Assert . fail ( STRING_0 ) ; } if ( ! ( IDENT_4 . METHOD_3 ( com . IDENT_0 . IDENT_1 . IDENT_5 , METHOD_5 ( com . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_4 ( IDENT_6 . IDENT_7 ) ) ) ) ) { org . junit . Assert . fail ( STRING_1 ) ; } if ( ! ( IDENT_4 . METHOD_3 ( com . IDENT_0 . IDENT_1 . IDENT_5 , METHOD_5 ( com . IDENT_0 . IDENT_1 . IDENT_6 . getInstance ( IDENT_6 . IDENT_8 ) ) ) ) ) { org . junit . Assert . fail ( STRING_0 ) ; } if ( ! ( IDENT_4 . METHOD_3 ( com . IDENT_0 . IDENT_1 . IDENT_5 , METHOD_5 ( com . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_4 ( IDENT_6 . IDENT_8 ) ) ) ) ) { org . junit . Assert . fail ( STRING_1 ) ; } if ( ! ( IDENT_4 . METHOD_3 ( com . IDENT_0 . IDENT_1 . IDENT_5 , METHOD_5 ( com . IDENT_0 . IDENT_1 . IDENT_6 . getInstance ( IDENT_6 . IDENT_9 ) ) ) ) ) { org . junit . Assert . fail ( STRING_0 ) ; } if ( ! ( IDENT_4 . METHOD_3 ( com . IDENT_0 . IDENT_1 . IDENT_5 , METHOD_5 ( com . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_4 ( IDENT_6 . IDENT_9 ) ) ) ) ) { org . junit . Assert . fail ( STRING_1 ) ; } if ( ! ( IDENT_4 . METHOD_3 ( com . IDENT_0 . IDENT_1 . IDENT_5 , METHOD_5 ( com . IDENT_0 . IDENT_1 . IDENT_6 . getInstance ( IDENT_6 . IDENT_7 ) , com . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_4 ( IDENT_6 . IDENT_7 ) , com . IDENT_0 . IDENT_1 . IDENT_6 . getInstance ( IDENT_6 . IDENT_8 ) , com . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_4 ( IDENT_6 . IDENT_8 ) , com . IDENT_0 . IDENT_1 . IDENT_6 . getInstance ( IDENT_6 . IDENT_9 ) , com . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_4 ( IDENT_6 . IDENT_9 ) ) ) ) ) { org . junit . Assert . fail ( STRING_2 ) ; } } METHOD_2 ( com . IDENT_0 . IDENT_1 . IDENT_10 ) { com . IDENT_0 . IDENT_1 . sql . internal . IDENT_11 . IDENT_12 connection = null ; METHOD_6 ( ) ; METHOD_7 ( IDENT_13 ) ; try { connection = METHOD_8 ( ) ; IDENT_13 = METHOD_9 ( connection , IDENT_13 ) ; METHOD_10 ( connection , IDENT_13 ) ; return METHOD_11 ( connection , IDENT_13 ) ; } finally { METHOD_12 ( connection ) ; } }
org . junit . Assert . assertThat ( IDENT_3 . isEmpty ( ) , org . hamcrest . CoreMatchers . is ( false ) ) 