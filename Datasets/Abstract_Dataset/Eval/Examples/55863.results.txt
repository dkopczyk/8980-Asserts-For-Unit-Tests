METHOD_0 ( ) { final java . io . File IDENT_0 = IDENT_1 . METHOD_1 ( ) ; try ( java . io . IDENT_2 out = com . google . common . io . IDENT_3 . METHOD_2 ( IDENT_0 , IDENT_4 . UTF_8 ) ) { out . write ( org . apache . druid . server . IDENT_5 . IDENT_6 . IDENT_7 . mapper . METHOD_3 ( com . google . common . collect . ImmutableMap . of ( "foo" , "bar" ) ) ) ; } final org . apache . druid . query . IDENT_5 . IDENT_6 . IDENT_8 IDENT_6 = new org . apache . druid . query . IDENT_5 . IDENT_6 . METHOD_4 ( IDENT_0 . METHOD_5 ( ) , null , null , new org . apache . druid . query . IDENT_5 . IDENT_6 . METHOD_4 . METHOD_6 ( org . apache . druid . query . IDENT_5 . IDENT_6 . IDENT_9 . METHOD_7 ( new org . apache . druid . jackson . METHOD_8 ( ) ) ) , new org . joda . time . METHOD_9 ( 0 ) , null ) ; try ( org . apache . druid . server . IDENT_5 . IDENT_6 . cache . IDENT_10 . Entry entry = IDENT_11 . METHOD_10 ( IDENT_6 , 1000 ) ) { "<AssertPlaceHolder>" ; } } METHOD_10 ( org . apache . druid . query . IDENT_5 . IDENT_6 . IDENT_12 , long ) { final org . apache . druid . server . IDENT_5 . IDENT_6 . cache . IDENT_10 . Entry entry = METHOD_11 ( IDENT_6 ) ; org . apache . druid . server . IDENT_5 . IDENT_6 . cache . IDENT_10 . log . debug ( STRING_0 , entry ) ; boolean IDENT_13 = false ; try { IDENT_13 = entry . impl . IDENT_14 . METHOD_12 ( IDENT_15 , TimeUnit . IDENT_16 ) ; if ( IDENT_13 ) { return entry ; } else { return null ; } } finally { if ( ! IDENT_13 ) { entry . close ( ) ; org . apache . druid . server . IDENT_5 . IDENT_6 . cache . IDENT_10 . log . error ( STRING_1 , entry ) ; } } }
org . junit . Assert . assertNotNull ( entry ) 