METHOD_0 ( ) { METHOD_1 ( ) ; final java . lang . String IDENT_0 = METHOD_2 ( false , false ) ; final java . lang . String IDENT_1 = METHOD_3 ( IDENT_0 ) ; final java . lang . String IDENT_2 = METHOD_4 ( ) ; final java . util . Set < com . IDENT_3 . IDENT_4 . IDENT_5 > IDENT_6 = IDENT_7 . METHOD_5 ( com . IDENT_3 . IDENT_4 . IDENT_8 , IDENT_0 , IDENT_2 ) ; "<AssertPlaceHolder>" ; if ( ! ( IDENT_7 . METHOD_6 ( com . IDENT_3 . IDENT_4 . IDENT_8 , IDENT_0 , IDENT_2 , com . IDENT_3 . IDENT_4 . IDENT_9 . getInstance ( IDENT_1 ) ) ) ) { org . junit . Assert . fail ( STRING_0 ) ; } if ( ! ( IDENT_7 . METHOD_6 ( com . IDENT_3 . IDENT_4 . IDENT_8 , IDENT_0 , IDENT_2 , com . IDENT_3 . IDENT_4 . IDENT_9 . getInstance ( IDENT_1 ) , com . IDENT_3 . IDENT_4 . IDENT_9 . getInstance ( IDENT_9 . IDENT_10 ) ) ) ) { org . junit . Assert . fail ( STRING_1 ) ; } if ( ! ( IDENT_7 . METHOD_6 ( com . IDENT_3 . IDENT_4 . IDENT_8 , IDENT_0 , IDENT_2 , METHOD_7 ( com . IDENT_3 . IDENT_4 . IDENT_9 . getInstance ( IDENT_1 ) ) ) ) ) { org . junit . Assert . fail ( STRING_0 ) ; } if ( ! ( IDENT_7 . METHOD_6 ( com . IDENT_3 . IDENT_4 . IDENT_8 , IDENT_0 , IDENT_2 , METHOD_7 ( com . IDENT_3 . IDENT_4 . IDENT_9 . getInstance ( IDENT_1 ) , com . IDENT_3 . IDENT_4 . IDENT_9 . getInstance ( IDENT_9 . IDENT_10 ) ) ) ) ) { org . junit . Assert . fail ( STRING_1 ) ; } } METHOD_5 ( com . IDENT_3 . IDENT_4 . IDENT_11 , java . lang . String , java . lang . String ) { com . IDENT_3 . IDENT_4 . sql . internal . IDENT_12 . IDENT_13 connection = null ; METHOD_8 ( ) ; METHOD_9 ( IDENT_14 ) ; METHOD_10 ( IDENT_0 ) ; METHOD_11 ( IDENT_2 ) ; try { connection = METHOD_12 ( ) ; IDENT_14 = METHOD_13 ( connection , IDENT_14 ) ; METHOD_14 ( connection , IDENT_14 ) ; IDENT_0 = IDENT_0 . trim ( ) ; IDENT_2 = IDENT_2 . trim ( ) ; return METHOD_15 ( connection , IDENT_14 , IDENT_0 , IDENT_2 ) ; } finally { METHOD_16 ( connection ) ; } }
org . junit . Assert . assertThat ( IDENT_6 . isEmpty ( ) , org . hamcrest . CoreMatchers . is ( true ) ) 