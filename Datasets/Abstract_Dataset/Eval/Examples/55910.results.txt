METHOD_0 ( ) { final org . apache . druid . indexing . common . task . IDENT_0 task = org . apache . druid . indexing . common . task . IDENT_1 . create ( ) ; IDENT_2 . insert ( task , org . apache . druid . IDENT_3 . IDENT_4 . METHOD_1 ( task . getId ( ) ) ) ; IDENT_2 . METHOD_2 ( task . getId ( ) , new org . apache . druid . indexing . IDENT_5 . IDENT_6 . METHOD_3 ( task . METHOD_4 ( ) , task . METHOD_5 ( ) , org . apache . druid . java . util . common . IDENT_7 . of ( STRING_0 ) , STRING_1 ) ) ; final java . util . List < org . apache . druid . indexing . common . IDENT_8 > IDENT_9 = IDENT_2 . METHOD_6 ( ) . stream ( ) . METHOD_7 ( ( t ) -> IDENT_2 . METHOD_8 ( t . getId ( ) ) . stream ( ) ) . collect ( java . util . stream . IDENT_10 . toList ( ) ) ; final org . apache . druid . indexing . IDENT_5 . IDENT_11 IDENT_12 = new org . apache . druid . indexing . IDENT_5 . METHOD_9 ( IDENT_2 ) ; IDENT_12 . METHOD_10 ( ) ; final java . util . List < org . apache . druid . indexing . common . IDENT_8 > IDENT_13 = IDENT_2 . METHOD_6 ( ) . stream ( ) . METHOD_7 ( ( t ) -> IDENT_2 . METHOD_8 ( t . getId ( ) ) . stream ( ) ) . collect ( java . util . stream . IDENT_10 . toList ( ) ) ; "<AssertPlaceHolder>" ; } toList ( ) { MOD_0 ( IDENT_14 ) { java . util . List < org . apache . druid . indexing . IDENT_5 . IDENT_15 . IDENT_16 . IDENT_17 > IDENT_18 = com . google . common . collect . Lists . newArrayList ( IDENT_19 ) ; java . util . Collections . METHOD_11 ( IDENT_18 , org . apache . druid . indexing . IDENT_5 . IDENT_15 . IDENT_16 . IDENT_20 ) ; return IDENT_18 ; } }
org . junit . Assert . assertEquals ( IDENT_9 , IDENT_13 ) 