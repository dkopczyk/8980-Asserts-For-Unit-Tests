METHOD_0 ( ) { java . util . List < org . apache . druid . query . IDENT_0 . IDENT_1 > IDENT_2 = java . util . Arrays . asList ( new org . apache . druid . query . IDENT_0 . METHOD_1 ( STRING_0 ) , new org . apache . druid . query . IDENT_0 . METHOD_2 ( STRING_1 , STRING_2 ) , new org . apache . druid . query . IDENT_0 . METHOD_2 ( STRING_3 , STRING_4 ) ) ; java . util . List < org . apache . druid . query . IDENT_0 . IDENT_3 > IDENT_4 = java . util . Collections . singletonList ( new org . apache . druid . query . IDENT_0 . IDENT_5 . METHOD_3 ( STRING_5 , STRING_6 , java . util . Arrays . asList ( new org . apache . druid . query . IDENT_0 . IDENT_5 . METHOD_4 ( STRING_1 , STRING_1 ) , new org . apache . druid . query . IDENT_0 . IDENT_5 . METHOD_4 ( STRING_0 , STRING_0 ) ) ) ) ; boolean IDENT_6 = false ; try { org . apache . druid . query . IDENT_7 . METHOD_5 ( com . google . common . collect . ImmutableList . of ( ) , IDENT_2 , IDENT_4 ) ; } catch ( java . lang . IllegalArgumentException e ) { IDENT_6 = true ; } "<AssertPlaceHolder>" ; } METHOD_5 ( java . util . List , java . util . List , java . util . List ) { com . google . common . base . IDENT_8 . METHOD_6 ( IDENT_9 , STRING_7 ) ; com . google . common . base . IDENT_8 . METHOD_6 ( IDENT_2 , STRING_8 ) ; final java . util . Set < java . lang . String > IDENT_10 = new java . util . HashSet ( ) ; IDENT_10 . addAll ( IDENT_9 ) ; final java . util . Map < java . lang . String , org . apache . druid . query . IDENT_0 . IDENT_1 > IDENT_11 = new java . util . HashMap ( ) ; for ( org . apache . druid . query . IDENT_0 . IDENT_1 IDENT_12 : IDENT_2 ) { com . google . common . base . IDENT_8 . METHOD_7 ( IDENT_10 . add ( IDENT_12 . getName ( ) ) , STRING_9 , IDENT_12 . getName ( ) ) ; IDENT_11 . put ( IDENT_12 . getName ( ) , IDENT_12 ) ; } if ( ( IDENT_4 != null ) && ( ! ( IDENT_4 . isEmpty ( ) ) ) ) { java . util . List < org . apache . druid . query . IDENT_0 . IDENT_3 > IDENT_13 = com . google . common . collect . Lists . METHOD_8 ( IDENT_4 . size ( ) ) ; for ( final org . apache . druid . query . IDENT_0 . IDENT_3 IDENT_14 : IDENT_4 ) { final java . util . Set < java . lang . String > IDENT_15 = IDENT_14 . METHOD_9 ( ) ; final java . util . Set < java . lang . String > IDENT_16 = com . google . common . collect . IDENT_17 . METHOD_10 ( IDENT_15 , IDENT_10 ) ; com . google . common . base . IDENT_8 . METHOD_7 ( IDENT_16 . isEmpty ( ) , STRING_10 , IDENT_16 , IDENT_14 . getName ( ) ) ; com . google . common . base . IDENT_8 . METHOD_7 ( IDENT_10 . add ( IDENT_14 . getName ( ) ) , STRING_9 , IDENT_14 . getName ( ) ) ; IDENT_13 . add ( IDENT_14 . METHOD_11 ( IDENT_11 ) ) ; } return IDENT_13 ; } return IDENT_4 ; }
org . junit . Assert . assertFalse ( IDENT_6 ) 