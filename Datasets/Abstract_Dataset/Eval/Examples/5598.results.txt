METHOD_0 ( ) { org . apache . accumulo . core . util . IDENT_0 IDENT_1 = new org . apache . accumulo . core . util . METHOD_1 ( ) . start ( ) ; try { java . lang . Thread . sleep ( 50 ) ; } catch ( java . lang . IDENT_2 ex ) { org . apache . accumulo . core . util . IDENT_3 . log . info ( STRING_0 ) ; java . lang . Thread . METHOD_2 ( ) . METHOD_3 ( ) ; } IDENT_1 . METHOD_4 ( ) ; long IDENT_4 = IDENT_1 . now ( ) ; org . apache . accumulo . core . util . IDENT_3 . log . debug ( STRING_1 , java . lang . String . format ( STRING_2 , IDENT_1 . METHOD_5 ( TimeUnit . IDENT_5 ) ) ) ; IDENT_1 . start ( ) ; try { java . lang . Thread . sleep ( 10 ) ; } catch ( java . lang . IDENT_2 ex ) { org . apache . accumulo . core . util . IDENT_3 . log . info ( STRING_0 ) ; java . lang . Thread . METHOD_2 ( ) . METHOD_3 ( ) ; } IDENT_1 . METHOD_4 ( ) ; org . apache . accumulo . core . util . IDENT_3 . log . debug ( STRING_3 , java . lang . String . format ( STRING_2 , IDENT_1 . METHOD_5 ( TimeUnit . IDENT_5 ) ) ) ; "<AssertPlaceHolder>" ; } now ( ) { return IDENT_6 ? ( ( java . lang . System . METHOD_6 ( ) ) - ( IDENT_7 ) ) + ( IDENT_8 ) : IDENT_8 ; }
org . junit . Assert . assertTrue ( ( IDENT_4 < ( IDENT_1 . now ( ) ) ) ) 