METHOD_0 ( ) { java . util . List < org . apache . druid . IDENT_0 . IDENT_1 > IDENT_2 = new org . apache . druid . query . IDENT_3 . METHOD_1 ( ) . METHOD_2 ( org . apache . druid . query . IDENT_3 . IDENT_4 . IDENT_5 , java . util . Arrays . asList ( org . apache . druid . query . IDENT_3 . IDENT_4 . METHOD_3 ( org . apache . druid . java . util . common . IDENT_6 . of ( STRING_0 ) ) , org . apache . druid . query . IDENT_3 . IDENT_4 . METHOD_3 ( org . apache . druid . java . util . common . IDENT_6 . of ( STRING_1 ) ) , org . apache . druid . query . IDENT_3 . IDENT_4 . METHOD_3 ( org . apache . druid . java . util . common . IDENT_6 . of ( STRING_2 ) ) , org . apache . druid . query . IDENT_3 . IDENT_4 . METHOD_3 ( org . apache . druid . java . util . common . IDENT_6 . of ( STRING_3 ) ) , org . apache . druid . query . IDENT_3 . IDENT_4 . METHOD_3 ( org . apache . druid . java . util . common . IDENT_6 . of ( STRING_4 ) ) , org . apache . druid . query . IDENT_3 . IDENT_4 . METHOD_3 ( org . apache . druid . java . util . common . IDENT_6 . of ( STRING_5 ) ) , org . apache . druid . query . IDENT_3 . IDENT_4 . METHOD_3 ( org . apache . druid . java . util . common . IDENT_6 . of ( STRING_6 ) ) ) ) ; "<AssertPlaceHolder>" ; } size ( ) { if ( ( size ) < 0 ) { size = 0 ; for ( int i = 0 ; i <= ( IDENT_7 ) ; i ++ ) { int IDENT_8 = IDENT_9 [ i ] ; if ( org . apache . druid . IDENT_10 . IDENT_11 . IDENT_12 . METHOD_4 ( IDENT_8 ) ) { size += org . apache . druid . IDENT_10 . IDENT_11 . IDENT_12 . METHOD_5 ( IDENT_8 ) ; } else { if ( org . apache . druid . IDENT_10 . IDENT_11 . IDENT_12 . METHOD_6 ( IDENT_8 ) ) { if ( ! ( org . apache . druid . IDENT_10 . IDENT_11 . IDENT_12 . METHOD_7 ( IDENT_8 ) ) ) { ( size ) ++ ; } } else { size += org . apache . druid . IDENT_10 . IDENT_11 . IDENT_12 . METHOD_8 ( ( ( org . apache . druid . IDENT_10 . IDENT_11 . IDENT_12 . METHOD_9 ( IDENT_8 ) ) + 1 ) ) ; if ( ! ( org . apache . druid . IDENT_10 . IDENT_11 . IDENT_12 . METHOD_7 ( IDENT_8 ) ) ) { ( size ) OP_0 ; } } } } } return size ; }
org . junit . Assert . assertEquals ( 7 , IDENT_2 . size ( ) ) 