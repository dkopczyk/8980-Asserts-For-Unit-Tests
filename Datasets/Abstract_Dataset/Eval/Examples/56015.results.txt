METHOD_0 ( ) { org . apache . druid . query . IDENT_0 . IDENT_1 query = org . apache . druid . query . IDENT_2 . METHOD_1 ( ) . METHOD_2 ( IDENT_3 . METHOD_2 ) . METHOD_3 ( IDENT_3 . IDENT_4 ) . METHOD_4 ( IDENT_3 . IDENT_5 ) . METHOD_5 ( java . util . Arrays . asList ( IDENT_3 . IDENT_6 , IDENT_3 . IDENT_7 ) ) . METHOD_6 ( METHOD_6 ) . METHOD_7 ( 10 ) . build ( ) ; org . apache . druid . query . IDENT_8 < org . apache . druid . query . Result < org . apache . druid . query . IDENT_0 . IDENT_9 > , org . apache . druid . query . IDENT_0 . IDENT_1 > IDENT_10 = new org . apache . druid . query . IDENT_0 . METHOD_8 ( org . apache . druid . query . IDENT_3 . METHOD_9 ( ) ) ; final org . apache . druid . query . IDENT_11 IDENT_12 = new org . apache . druid . query . METHOD_10 ( IDENT_10 . METHOD_11 ( runner ) , IDENT_10 ) ; final java . util . List list = IDENT_12 . run ( org . apache . druid . query . IDENT_13 . METHOD_12 ( query ) , org . apache . druid . query . IDENT_0 . IDENT_14 . IDENT_15 ) . toList ( ) ; "<AssertPlaceHolder>" ; } size ( ) { if ( ( size ) < 0 ) { size = 0 ; for ( int i = 0 ; i <= ( IDENT_16 ) ; i ++ ) { int IDENT_17 = IDENT_18 [ i ] ; if ( org . apache . druid . IDENT_19 . IDENT_20 . IDENT_21 . METHOD_13 ( IDENT_17 ) ) { size += org . apache . druid . IDENT_19 . IDENT_20 . IDENT_21 . METHOD_14 ( IDENT_17 ) ; } else { if ( org . apache . druid . IDENT_19 . IDENT_20 . IDENT_21 . METHOD_15 ( IDENT_17 ) ) { if ( ! ( org . apache . druid . IDENT_19 . IDENT_20 . IDENT_21 . METHOD_16 ( IDENT_17 ) ) ) { ( size ) ++ ; } } else { size += org . apache . druid . IDENT_19 . IDENT_20 . IDENT_21 . METHOD_17 ( ( ( org . apache . druid . IDENT_19 . IDENT_20 . IDENT_21 . METHOD_18 ( IDENT_17 ) ) + 1 ) ) ; if ( ! ( org . apache . druid . IDENT_19 . IDENT_20 . IDENT_21 . METHOD_16 ( IDENT_17 ) ) ) { ( size ) OP_0 ; } } } } } return size ; }
org . junit . Assert . assertEquals ( 10 , list . size ( ) ) 