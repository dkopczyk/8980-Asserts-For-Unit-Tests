METHOD_0 ( ) { final java . io . File IDENT_0 = IDENT_1 . METHOD_1 ( ) ; final org . apache . druid . IDENT_2 . IDENT_3 config = new org . apache . druid . IDENT_2 . METHOD_2 ( ) { @ org . apache . druid . IDENT_4 . Override public java . lang . String METHOD_3 ( ) { return IDENT_0 . getAbsolutePath ( ) ; } } ; final java . io . File IDENT_5 = new java . io . File ( IDENT_0 , STRING_0 ) ; final java . io . File IDENT_6 = new java . io . File ( IDENT_0 , STRING_1 ) ; IDENT_5 . METHOD_4 ( ) ; IDENT_6 . METHOD_4 ( ) ; final java . io . File [ ] IDENT_7 = new java . io . File [ ] { IDENT_6 , IDENT_5 } ; final java . io . File [ ] IDENT_8 = org . apache . druid . IDENT_4 . IDENT_9 . METHOD_5 ( config ) ; java . util . Arrays . METHOD_6 ( IDENT_8 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( org . apache . druid . IDENT_2 . METHOD_2 ) { final java . io . File IDENT_10 = new java . io . File ( config . METHOD_3 ( ) ) ; if ( ( IDENT_10 . exists ( ) ) && ( ! ( IDENT_10 . METHOD_7 ( ) ) ) ) { throw new org . apache . druid . java . util . common . METHOD_8 ( STRING_2 , IDENT_10 ) ; } java . io . File [ ] IDENT_11 ; final java . util . IDENT_12 < java . lang . String > IDENT_13 = config . METHOD_9 ( ) ; if ( IDENT_13 == null ) { IDENT_11 = IDENT_10 . METHOD_10 ( ) ; } else { int i = 0 ; IDENT_11 = new java . io . File [ IDENT_13 . size ( ) ] ; for ( final java . lang . String IDENT_14 : IDENT_13 ) { java . io . File IDENT_15 = new java . io . File ( IDENT_14 ) ; if ( ! ( IDENT_15 . METHOD_11 ( ) ) ) { IDENT_15 = new java . io . File ( IDENT_10 , IDENT_14 ) ; } if ( ! ( IDENT_15 . METHOD_7 ( ) ) ) { throw new org . apache . druid . java . util . common . METHOD_8 ( STRING_3 , IDENT_15 . getAbsolutePath ( ) ) ; } IDENT_11 [ ( i ++ ) ] = IDENT_15 ; } } return IDENT_11 == null ? new java . io . File [ ] { } : IDENT_11 ; }
org . junit . Assert . assertArrayEquals ( IDENT_7 , IDENT_8 ) 