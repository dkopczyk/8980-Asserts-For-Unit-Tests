METHOD_0 ( ) { final java . io . File IDENT_0 = IDENT_1 . METHOD_1 ( ) ; final java . io . File IDENT_2 = IDENT_1 . METHOD_1 ( ) ; final org . apache . druid . IDENT_3 . IDENT_4 config = new org . apache . druid . IDENT_3 . METHOD_2 ( ) { @ org . apache . druid . IDENT_5 . Override public java . util . IDENT_6 < java . lang . String > METHOD_3 ( ) { return com . google . common . collect . IDENT_7 . METHOD_4 ( java . util . Arrays . asList ( STRING_0 , STRING_1 , IDENT_2 . getAbsolutePath ( ) ) ) ; } @ org . apache . druid . IDENT_5 . Override public java . lang . String METHOD_5 ( ) { return IDENT_0 . getAbsolutePath ( ) ; } } ; final java . io . File IDENT_8 = new java . io . File ( IDENT_0 , STRING_0 ) ; final java . io . File IDENT_9 = new java . io . File ( IDENT_0 , STRING_1 ) ; final java . io . File IDENT_10 = new java . io . File ( IDENT_0 , STRING_2 ) ; IDENT_8 . METHOD_6 ( ) ; IDENT_9 . METHOD_6 ( ) ; IDENT_10 . METHOD_6 ( ) ; final java . io . File [ ] IDENT_11 = new java . io . File [ ] { IDENT_8 , IDENT_9 , IDENT_2 } ; final java . io . File [ ] IDENT_12 = org . apache . druid . IDENT_5 . IDENT_13 . METHOD_7 ( config ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( org . apache . druid . IDENT_3 . METHOD_2 ) { final java . io . File IDENT_14 = new java . io . File ( config . METHOD_5 ( ) ) ; if ( ( IDENT_14 . exists ( ) ) && ( ! ( IDENT_14 . METHOD_8 ( ) ) ) ) { throw new org . apache . druid . java . util . common . METHOD_9 ( STRING_3 , IDENT_14 ) ; } java . io . File [ ] IDENT_15 ; final java . util . IDENT_6 < java . lang . String > IDENT_16 = config . METHOD_3 ( ) ; if ( IDENT_16 == null ) { IDENT_15 = IDENT_14 . METHOD_10 ( ) ; } else { int i = 0 ; IDENT_15 = new java . io . File [ IDENT_16 . size ( ) ] ; for ( final java . lang . String IDENT_17 : IDENT_16 ) { java . io . File IDENT_18 = new java . io . File ( IDENT_17 ) ; if ( ! ( IDENT_18 . METHOD_11 ( ) ) ) { IDENT_18 = new java . io . File ( IDENT_14 , IDENT_17 ) ; } if ( ! ( IDENT_18 . METHOD_8 ( ) ) ) { throw new org . apache . druid . java . util . common . METHOD_9 ( STRING_4 , IDENT_18 . getAbsolutePath ( ) ) ; } IDENT_15 [ ( i ++ ) ] = IDENT_18 ; } } return IDENT_15 == null ? new java . io . File [ ] { } : IDENT_15 ; }
org . junit . Assert . assertArrayEquals ( IDENT_11 , IDENT_12 ) 