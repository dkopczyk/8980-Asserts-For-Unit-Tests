METHOD_0 ( ) { final uk . gov . IDENT_0 . IDENT_1 . types . common . Person p = new uk . gov . IDENT_0 . IDENT_1 . types . common . Person ( IDENT_2 ) ; p . METHOD_1 ( ) ; final uk . gov . IDENT_0 . IDENT_1 . types . IDENT_3 . IDENT_4 l = new uk . gov . IDENT_0 . IDENT_1 . types . IDENT_3 . METHOD_2 ( IDENT_2 ) ; p . METHOD_1 ( ) ; final uk . gov . IDENT_0 . IDENT_1 . types . IDENT_3 . IDENT_5 IDENT_6 = new uk . gov . IDENT_0 . IDENT_1 . types . IDENT_3 . METHOD_3 ( IDENT_2 ) ; IDENT_6 . METHOD_4 ( p ) ; IDENT_6 . METHOD_5 ( l ) ; IDENT_6 . METHOD_6 ( STRING_0 ) ; IDENT_6 . METHOD_7 ( STRING_1 ) ; IDENT_6 . METHOD_1 ( ) ; final uk . gov . IDENT_0 . IDENT_1 . types . IDENT_3 . METHOD_3 IDENT_7 = new uk . gov . IDENT_0 . IDENT_1 . types . IDENT_3 . METHOD_3 ( IDENT_2 ) ; IDENT_7 . METHOD_4 ( l ) ; IDENT_7 . METHOD_5 ( p ) ; IDENT_7 . METHOD_6 ( STRING_0 ) ; IDENT_6 . METHOD_7 ( STRING_1 ) ; IDENT_7 . METHOD_1 ( ) ; METHOD_8 ( STRING_2 , IDENT_8 , STRING_3 , false ) ; final java . util . List < uk . gov . IDENT_0 . IDENT_1 . types . IDENT_3 . METHOD_3 > select = new java . util . ArrayList ( org . apache . IDENT_9 . IDENT_10 . util . IDENT_11 . select ( IDENT_2 , uk . gov . IDENT_0 . IDENT_1 . types . IDENT_3 . METHOD_3 . class ) ) ; "<AssertPlaceHolder>" ; } size ( ) { return ( ( int ) ( METHOD_9 ( ) . count ( ) ) ) ; }
org . junit . Assert . assertEquals ( 1 , select . size ( ) ) 