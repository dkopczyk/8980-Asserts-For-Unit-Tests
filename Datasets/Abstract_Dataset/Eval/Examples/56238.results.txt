METHOD_0 ( ) { IDENT_0 . METHOD_1 ( STRING_0 ) ; uk . gov . IDENT_1 . IDENT_2 . IDENT_3 . testing . IDENT_4 . METHOD_2 ( IDENT_0 , 0 , 3 , STRING_1 ) ; uk . gov . IDENT_1 . IDENT_2 . IDENT_3 . testing . IDENT_4 . METHOD_3 ( IDENT_0 , INT_0 , INT_1 , STRING_2 , "" ) ; final uk . gov . IDENT_1 . IDENT_2 . types . IDENT_5 . IDENT_6 s = new uk . gov . IDENT_1 . IDENT_2 . types . IDENT_5 . METHOD_4 ( IDENT_0 ) ; s . METHOD_5 ( 0 ) ; s . METHOD_6 ( IDENT_0 . METHOD_7 ( ) . length ( ) ) ; s . METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( IDENT_7 . IDENT_8 , new java . lang . String [ ] { STRING_3 } ) ; final java . util . List < uk . gov . IDENT_1 . IDENT_2 . types . IDENT_9 . IDENT_10 > IDENT_11 = new java . util . ArrayList ( org . apache . IDENT_12 . IDENT_13 . util . IDENT_14 . select ( IDENT_0 , uk . gov . IDENT_1 . IDENT_2 . types . IDENT_9 . IDENT_10 . class ) ) ; "<AssertPlaceHolder>" ; } size ( ) { return ( ( int ) ( METHOD_11 ( ) . count ( ) ) ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_11 . size ( ) ) 