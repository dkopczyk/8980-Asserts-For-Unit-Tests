test ( ) { uk . gov . IDENT_0 . IDENT_1 . core . logging . IDENT_2 logging = new uk . gov . IDENT_0 . IDENT_1 . core . logging . METHOD_0 ( ) ; uk . gov . IDENT_0 . IDENT_1 . testing . logging . IDENT_3 builder = new uk . gov . IDENT_0 . IDENT_1 . testing . logging . METHOD_1 ( ) ; logging . METHOD_2 ( java . util . Collections . singletonList ( builder ) ) ; uk . gov . IDENT_0 . IDENT_1 . testing . logging . IDENT_4 < ch . IDENT_5 . IDENT_6 . IDENT_7 . spi . IDENT_8 > IDENT_9 = builder . METHOD_3 ( ) ; IDENT_9 . METHOD_4 ( ) ; ch . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_10 context = ( ( ch . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_10 ) ( org . IDENT_11 . IDENT_12 . METHOD_5 ( ) ) ) ; ch . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_13 IDENT_14 = context . METHOD_6 ( ch . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_13 . IDENT_15 ) ; if ( IDENT_14 . METHOD_7 ( ) ) { org . apache . IDENT_16 . IDENT_17 . METHOD_6 ( uk . gov . IDENT_0 . IDENT_1 . testing . IDENT_18 . class ) . log ( IDENT_19 . IDENT_20 , STRING_0 ) ; "<AssertPlaceHolder>" ; } } METHOD_8 ( ) { return new java . util . ArrayList ( events ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_9 . METHOD_8 ( ) . stream ( ) . filter ( ( l ) -> l . getMessage ( ) . contains ( STRING_0 ) ) . count ( ) ) > 0 ) ) 