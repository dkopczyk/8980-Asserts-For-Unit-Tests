test ( ) { uk . gov . IDENT_0 . IDENT_1 . types . common . Person IDENT_2 = uk . gov . IDENT_0 . IDENT_1 . IDENT_3 . testing . IDENT_4 . METHOD_0 ( IDENT_5 , 0 , 3 , STRING_0 ) ; uk . gov . IDENT_0 . IDENT_1 . types . common . Person IDENT_6 = uk . gov . IDENT_0 . IDENT_1 . IDENT_3 . testing . IDENT_4 . METHOD_0 ( IDENT_5 , 9 , INT_0 , STRING_1 ) ; uk . gov . IDENT_0 . IDENT_1 . types . common . Person IDENT_7 = uk . gov . IDENT_0 . IDENT_1 . IDENT_3 . testing . IDENT_4 . METHOD_0 ( IDENT_5 , 16 , INT_1 , STRING_1 ) ; uk . gov . IDENT_0 . IDENT_1 . types . common . Person IDENT_8 = uk . gov . IDENT_0 . IDENT_1 . IDENT_3 . testing . IDENT_4 . METHOD_0 ( IDENT_5 , ( ( ( uk . gov . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_9 . IDENT_10 . IDENT_11 . length ( ) ) - 1 ) - 5 ) , ( ( uk . gov . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_9 . IDENT_10 . IDENT_11 . length ( ) ) - 1 ) , STRING_2 ) ; uk . gov . IDENT_0 . IDENT_1 . IDENT_3 . testing . IDENT_4 . METHOD_1 ( IDENT_5 , IDENT_2 ) ; uk . gov . IDENT_0 . IDENT_1 . IDENT_3 . testing . IDENT_4 . METHOD_1 ( IDENT_5 , IDENT_6 , IDENT_7 ) ; uk . gov . IDENT_0 . IDENT_1 . IDENT_3 . testing . IDENT_4 . METHOD_1 ( IDENT_5 , IDENT_8 ) ; METHOD_2 ( IDENT_12 . IDENT_13 , IDENT_14 , IDENT_12 . IDENT_15 , uk . gov . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_9 . IDENT_10 . IDENT_16 , IDENT_12 . IDENT_17 , uk . gov . IDENT_0 . IDENT_1 . entity . IDENT_18 . util . IDENT_19 . class . getName ( ) , IDENT_12 . IDENT_20 , uk . gov . IDENT_0 . IDENT_1 . entity . IDENT_18 . util . IDENT_21 . class . getName ( ) , IDENT_12 . IDENT_22 , uk . gov . IDENT_0 . IDENT_1 . entity . IDENT_18 . util . IDENT_23 . class . getName ( ) ) ; java . lang . String IDENT_18 = IDENT_5 . METHOD_3 ( uk . gov . IDENT_0 . IDENT_1 . types . IDENT_24 . IDENT_25 . class ) . iterator ( false ) . get ( ) . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { if ( ( IDENT_26 . IDENT_27 ) && ( ( ( ( uk . gov . IDENT_0 . IDENT_1 . types . IDENT_24 . IDENT_26 ) ( IDENT_28 ) ) . IDENT_29 ) == null ) ) IDENT_28 . IDENT_30 . METHOD_5 ( STRING_3 , STRING_4 ) ; return IDENT_28 . IDENT_31 . METHOD_6 ( IDENT_32 , ( ( uk . gov . IDENT_0 . IDENT_1 . types . IDENT_24 . IDENT_26 ) ( IDENT_28 ) ) . IDENT_33 ) ; }
org . junit . Assert . assertNotNull ( IDENT_18 ) 