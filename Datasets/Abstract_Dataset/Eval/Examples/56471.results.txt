METHOD_0 ( ) { net . IDENT_0 . IDENT_1 . util . StringUtils . METHOD_1 ( STRING_0 , false ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , boolean ) { byte [ ] IDENT_2 = net . IDENT_0 . IDENT_1 . IDENT_3 . METHOD_2 ( key ) ; int IDENT_4 = IDENT_2 . length ; if ( IDENT_4 > ( net . IDENT_0 . IDENT_1 . util . StringUtils . IDENT_5 ) ) { throw net . IDENT_0 . IDENT_1 . util . StringUtils . IDENT_6 ; } if ( IDENT_4 == 0 ) { throw net . IDENT_0 . IDENT_1 . util . StringUtils . IDENT_7 ; } if ( ! IDENT_8 ) { for ( byte b : IDENT_2 ) { if ( ( ( ( b == STRING_1 ) || ( b == STRING_2 ) ) || ( b == STRING_3 ) ) || ( b == 0 ) ) { throw new java . lang . IllegalArgumentException ( ( ( STRING_4 + key ) + STRING_5 ) ) ; } } } }
org . junit . Assert . assertTrue ( true ) 