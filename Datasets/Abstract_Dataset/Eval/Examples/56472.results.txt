METHOD_0 ( ) { double min = 0.0 ; double max = FLOAT_0 ; double IDENT_0 = 0.0 ; double IDENT_1 = FLOAT_1 ; double IDENT_2 = FLOAT_2 ; double IDENT_3 = FLOAT_3 ; double IDENT_4 = FLOAT_4 ; int IDENT_5 = 50 ; java . lang . String IDENT_6 = de . IDENT_7 . IDENT_8 . IDENT_9 . METHOD_1 ( min , max , IDENT_0 , IDENT_1 , IDENT_2 , IDENT_3 , IDENT_4 , IDENT_5 ) ; java . lang . String IDENT_10 = STRING_0 ; "<AssertPlaceHolder>" ; } METHOD_1 ( double , double , double , double , double , double , double , int ) { java . lang . String [ ] out = new java . lang . String [ IDENT_5 ] ; for ( int i = 0 ; i < ( out . length ) ; i ++ ) { out [ i ] = IDENT_11 ; } int IDENT_12 = METHOD_2 ( min , IDENT_5 , min , max ) ; int IDENT_13 = METHOD_2 ( max , IDENT_5 , min , max ) ; int IDENT_14 = METHOD_2 ( IDENT_15 , IDENT_5 , min , max ) ; if ( ( ! ( METHOD_3 ( IDENT_14 , IDENT_12 , IDENT_13 ) ) ) && ( out [ IDENT_14 ] . equals ( de . IDENT_7 . IDENT_8 . IDENT_11 ) ) ) { out [ IDENT_14 ] = de . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_16 ; } int IDENT_17 = METHOD_2 ( IDENT_18 , IDENT_5 , min , max ) ; if ( ( ! ( METHOD_3 ( IDENT_17 , IDENT_12 , IDENT_13 ) ) ) && ( out [ IDENT_17 ] . equals ( de . IDENT_7 . IDENT_8 . IDENT_11 ) ) ) { out [ IDENT_17 ] = de . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_19 ; } int IDENT_20 = METHOD_2 ( IDENT_21 , IDENT_5 , min , max ) ; if ( ( ! ( METHOD_3 ( IDENT_20 , IDENT_12 , IDENT_13 ) ) ) && ( out [ IDENT_20 ] . equals ( de . IDENT_7 . IDENT_8 . IDENT_11 ) ) ) out [ IDENT_20 ] = de . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_22 ; for ( int i = IDENT_14 + 1 ; i < IDENT_20 ; i ++ ) { if ( ! ( METHOD_3 ( i , IDENT_12 , IDENT_13 ) ) ) out [ i ] = de . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_23 ; } for ( int i = IDENT_20 + 1 ; i < IDENT_17 ; i ++ ) { if ( ! ( METHOD_3 ( i , IDENT_12 , IDENT_13 ) ) ) out [ i ] = de . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_23 ; } int IDENT_24 = METHOD_2 ( IDENT_0 , IDENT_5 , min , max ) ; if ( ( ! ( METHOD_3 ( IDENT_24 , IDENT_12 , IDENT_13 ) ) ) && ( out [ IDENT_24 ] . equals ( de . IDENT_7 . IDENT_8 . IDENT_11 ) ) ) { out [ IDENT_24 ] = de . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_25 ; } int IDENT_26 = METHOD_2 ( IDENT_1 , IDENT_5 , min , max ) ; if ( ( ! ( METHOD_3 ( IDENT_26 , IDENT_12 , IDENT_13 ) ) ) && ( out [ IDENT_26 ] . equals ( de . IDENT_7 . IDENT_8 . IDENT_11 ) ) ) { out [ IDENT_26 ] = de . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_25 ; } for ( int i = IDENT_24 + 1 ; i < IDENT_14 ; i ++ ) { if ( ! ( METHOD_3 ( i , IDENT_12 , IDENT_13 ) ) ) out [ i ] = de . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_27 ; } for ( int i = IDENT_17 + 1 ; i < IDENT_26 ; i ++ ) { if ( ! ( METHOD_3 ( i , IDENT_12 , IDENT_13 ) ) ) out [ i ] = de . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_27 ; } java . lang . String output = "" ; for ( java . lang . String s : out ) { output += s ; } return output ; }
org . junit . Assert . assertEquals ( IDENT_10 , IDENT_6 ) 