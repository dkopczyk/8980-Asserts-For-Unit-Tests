METHOD_0 ( ) { com . sun . IDENT_0 . test . impl . service . data . store . IDENT_1 . store . METHOD_1 ( IDENT_2 , id , new byte [ ] { 0 } ) ; IDENT_2 . commit ( ) ; IDENT_2 = METHOD_2 ( IDENT_3 . IDENT_4 ) ; com . sun . IDENT_0 . test . impl . service . data . store . IDENT_1 . store . METHOD_3 ( IDENT_2 , id ) ; "<AssertPlaceHolder>" ; IDENT_2 . METHOD_4 ( new java . lang . RuntimeException ( STRING_0 ) ) ; IDENT_2 = METHOD_2 ( IDENT_3 . IDENT_4 ) ; com . sun . IDENT_0 . test . impl . service . data . store . IDENT_1 . store . METHOD_3 ( IDENT_2 , id ) ; try { com . sun . IDENT_0 . test . impl . service . data . store . IDENT_1 . store . METHOD_5 ( IDENT_2 , id , false ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( com . sun . IDENT_0 . app . IDENT_5 e ) { } IDENT_2 . commit ( ) ; IDENT_2 = METHOD_2 ( IDENT_3 . IDENT_4 ) ; try { com . sun . IDENT_0 . test . impl . service . data . store . IDENT_1 . store . METHOD_5 ( IDENT_2 , id , false ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( com . sun . IDENT_0 . app . IDENT_5 e ) { } } METHOD_6 ( ) { IDENT_6 = true ; boolean IDENT_7 = IDENT_8 . isEmpty ( ) ; if ( ! IDENT_7 ) { IDENT_9 . add ( this ) ; } else { IDENT_10 = true ; } return IDENT_7 ; }
org . junit . Assert . assertFalse ( IDENT_2 . METHOD_6 ( ) ) 