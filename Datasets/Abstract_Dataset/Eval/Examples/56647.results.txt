METHOD_0 ( ) { final java . lang . String name = STRING_0 ; com . sun . IDENT_0 . test . impl . service . session . IDENT_1 . IDENT_2 client = METHOD_1 ( name ) ; try { client . connect ( IDENT_3 . METHOD_2 ( ) ) ; "<AssertPlaceHolder>" ; IDENT_4 . METHOD_3 ( new com . sun . IDENT_0 . test . util . METHOD_4 ( ) { public void run ( ) { com . sun . IDENT_0 . test . impl . service . session . IDENT_1 . IDENT_5 IDENT_6 = METHOD_5 ( ) ; java . util . Set < com . sun . IDENT_0 . app . IDENT_7 > IDENT_8 = IDENT_6 . METHOD_6 ( ) ; if ( IDENT_8 . isEmpty ( ) ) { org . junit . Assert . fail ( STRING_1 ) ; } for ( com . sun . IDENT_0 . app . IDENT_7 session : IDENT_6 . METHOD_6 ( ) ) { if ( session . getName ( ) . equals ( name ) ) { System . err . println ( STRING_2 ) ; return ; } else { org . junit . Assert . fail ( ( ( ( STRING_3 + name ) + STRING_4 ) + ( session . getName ( ) ) ) ) ; } } org . junit . Assert . fail ( STRING_5 ) ; } } , IDENT_9 ) ; } finally { client . METHOD_7 ( ) ; } } METHOD_8 ( ) { return METHOD_8 ( true ) ; }
org . junit . Assert . assertTrue ( client . METHOD_8 ( ) ) 