object ( ) { expect ( mock . METHOD_0 ( 4 ) ) . METHOD_1 ( org . easymock . tests . IDENT_0 . IDENT_1 ) ; replay ( mock ) ; try { mock . METHOD_0 ( 4 ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . RuntimeException exception ) { "<AssertPlaceHolder>" ; } verify ( mock ) ; } replay ( java . lang . Object [ ] ) { for ( int i = 0 ; i < ( IDENT_2 . length ) ; i ++ ) { try { org . easymock . EasyMock . METHOD_2 ( IDENT_2 [ i ] ) . replay ( ) ; } catch ( java . lang . RuntimeException e ) { throw org . easymock . EasyMock . METHOD_3 ( IDENT_2 . length , i , e ) ; } catch ( java . lang . IDENT_3 e ) { throw org . easymock . EasyMock . METHOD_4 ( IDENT_2 . length , i , e ) ; } } }
org . junit . Assert . assertSame ( org . easymock . tests . IDENT_0 . IDENT_1 , exception ) 