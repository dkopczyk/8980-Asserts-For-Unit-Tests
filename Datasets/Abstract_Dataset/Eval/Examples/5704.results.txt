METHOD_0 ( ) { java . util . List < org . apache . accumulo . IDENT_0 . logger . IDENT_1 > keys = new java . util . ArrayList ( ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_4 , 0 , 0 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_5 , ( - 1 ) , 0 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_5 , 3 , 6 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_5 , 3 , 7 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_5 , 4 , 2 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_5 , 4 , 9 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_6 , 3 , 3 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_7 , 3 , 5 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_6 , 3 , 7 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_7 , 3 , 9 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_6 , 4 , 1 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_7 , 4 , 3 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_6 , 4 , INT_0 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_7 , 4 , INT_1 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_8 , 3 , 1 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_8 , 3 , 2 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_8 , 3 , 3 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_8 , 3 , 3 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_9 , 3 , INT_0 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_9 , 4 , 2 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_8 , 4 , 3 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_8 , 4 , 5 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_8 , 4 , 7 ) ) ; keys . add ( org . apache . accumulo . IDENT_0 . log . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_9 , 4 , 15 ) ) ; for ( int i = 0 ; i < 10 ; i ++ ) { java . util . List < org . apache . accumulo . IDENT_0 . logger . IDENT_1 > IDENT_10 = new java . util . ArrayList ( keys ) ; java . util . Collections . METHOD_2 ( IDENT_10 ) ; java . util . Collections . METHOD_3 ( IDENT_10 ) ; "<AssertPlaceHolder>" ; } } METHOD_2 ( java . lang . String [ ] ) { java . util . Collections . METHOD_2 ( java . util . Arrays . asList ( IDENT_11 ) ) ; return IDENT_11 ; }
org . junit . Assert . assertEquals ( keys , IDENT_10 ) 