METHOD_0 ( ) { java . lang . String version = STRING_0 ; boolean status = org . IDENT_0 . IDENT_1 . tools . library . utils . IDENT_2 . METHOD_1 ( version , 6 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , int ) { java . lang . String IDENT_3 = "" ; java . lang . StringBuffer IDENT_4 = new java . lang . StringBuffer ( ) ; java . lang . String IDENT_5 = STRING_1 ; for ( int i = 0 ; i < IDENT_6 ; i ++ ) { IDENT_4 . append ( IDENT_5 ) ; } IDENT_3 = IDENT_4 . toString ( ) ; IDENT_3 = IDENT_3 . substring ( 0 , ( ( IDENT_3 . length ( ) ) - 1 ) ) ; java . util . regex . IDENT_7 IDENT_8 = java . util . regex . IDENT_7 . METHOD_2 ( IDENT_3 ) ; java . util . regex . IDENT_9 IDENT_10 = IDENT_8 . matcher ( input ) ; if ( IDENT_10 . matches ( ) ) return true ; else return false ; }
org . junit . Assert . assertTrue ( status ) 