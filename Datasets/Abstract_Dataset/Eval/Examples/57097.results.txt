METHOD_0 ( ) { java . lang . String IDENT_0 = null ; java . lang . String IDENT_1 = org . IDENT_2 . IDENT_3 . runtime . IDENT_4 . impl . transport . http . IDENT_5 . METHOD_1 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { if ( ( IDENT_6 == null ) || ( ( IDENT_6 . length ( ) ) == 0 ) ) { if ( org . IDENT_2 . IDENT_3 . runtime . IDENT_4 . impl . transport . http . IDENT_5 . METHOD_2 ( ) ) { org . IDENT_2 . IDENT_3 . runtime . IDENT_4 . impl . transport . http . IDENT_5 . log ( STRING_0 ) ; } return "" ; } final java . util . IDENT_7 IDENT_8 = new java . util . METHOD_3 ( IDENT_6 , STRING_1 ) ; java . lang . String token = "" ; while ( IDENT_8 . METHOD_4 ( ) ) { token = IDENT_8 . METHOD_5 ( ) . trim ( ) ; if ( org . IDENT_2 . IDENT_3 . runtime . IDENT_4 . impl . transport . http . IDENT_5 . METHOD_6 ( token ) ) { if ( org . IDENT_2 . IDENT_3 . runtime . IDENT_4 . impl . transport . http . IDENT_5 . METHOD_2 ( ) ) { org . IDENT_2 . IDENT_3 . runtime . IDENT_4 . impl . transport . http . IDENT_5 . log ( ( STRING_2 + token ) ) ; } return token ; } } if ( org . IDENT_2 . IDENT_3 . runtime . IDENT_4 . impl . transport . http . IDENT_5 . METHOD_2 ( ) ) { org . IDENT_2 . IDENT_3 . runtime . IDENT_4 . impl . transport . http . IDENT_5 . log ( STRING_3 ) ; } return "" ; }
org . junit . Assert . assertEquals ( "" , IDENT_1 ) 