METHOD_0 ( ) { java . lang . String source = STRING_0 + ( ( STRING_1 + STRING_2 ) + STRING_3 ) ; com . IDENT_0 . cloud . IDENT_1 . expression . IDENT_2 expression = METHOD_1 ( ) . METHOD_2 ( source ) ; com . IDENT_0 . cloud . IDENT_1 . expression . entity . IDENT_3 entity = new com . IDENT_0 . cloud . IDENT_1 . expression . entity . METHOD_3 ( ) ; entity . METHOD_4 ( STRING_4 , new com . IDENT_0 . cloud . IDENT_1 . expression . impl . IDENT_4 . IDENT_5 [ ] { new com . IDENT_0 . cloud . IDENT_1 . expression . impl . IDENT_4 . METHOD_5 ( STRING_5 ) } ) ; entity . METHOD_4 ( STRING_6 , new com . IDENT_0 . cloud . IDENT_1 . expression . impl . IDENT_4 . METHOD_5 [ ] { new com . IDENT_0 . cloud . IDENT_1 . expression . impl . IDENT_4 . METHOD_5 ( STRING_5 ) } ) ; com . IDENT_0 . cloud . IDENT_1 . expression . IDENT_6 context = new com . IDENT_0 . cloud . IDENT_1 . expression . entity . METHOD_6 ( entity ) ; java . lang . Object result = METHOD_1 ( ) . evaluate ( expression , context ) ; "<AssertPlaceHolder>" ; } evaluate ( com . IDENT_0 . cloud . IDENT_1 . dal . search . impl . criteria . IDENT_7 , java . util . List ) { java . util . List < java . lang . Object > IDENT_8 = criteria . METHOD_7 ( ) ; boolean IDENT_9 = false ; com . IDENT_0 . cloud . IDENT_1 . dal . search . impl . criteria . IDENT_7 . IDENT_10 op = criteria . METHOD_8 ( ) ; switch ( op ) { case IDENT_11 : IDENT_9 = METHOD_9 ( IDENT_12 , IDENT_8 ) ; break ; case IDENT_13 : IDENT_9 = METHOD_10 ( IDENT_12 , IDENT_8 ) ; break ; default : throw new java . lang . IllegalArgumentException ( ( STRING_7 + op ) ) ; } return IDENT_9 ; }
org . junit . Assert . assertEquals ( false , result ) 