test ( ) { java . util . IDENT_0 random = new java . security . METHOD_0 ( ) ; try ( org . apache . accumulo . core . client . IDENT_1 c = org . apache . accumulo . core . client . IDENT_2 . METHOD_1 ( ) . from ( METHOD_2 ( ) ) . build ( ) ) { c . METHOD_3 ( ) . setProperty ( IDENT_3 . IDENT_4 . getKey ( ) , ( "" + ( IDENT_5 ) ) ) ; java . lang . String tableName = METHOD_4 ( 1 ) [ 0 ] ; c . METHOD_5 ( ) . create ( tableName ) ; c . METHOD_5 ( ) . setProperty ( tableName , IDENT_3 . IDENT_6 . getKey ( ) , STRING_0 ) ; c . METHOD_5 ( ) . setProperty ( tableName , IDENT_3 . IDENT_7 . getKey ( ) , STRING_1 ) ; METHOD_6 ( 1 , TimeUnit . IDENT_8 ) ; byte [ ] row = new byte [ INT_0 ] ; org . apache . accumulo . core . client . IDENT_9 IDENT_10 = new org . apache . accumulo . core . client . METHOD_7 ( ) ; IDENT_10 . METHOD_8 ( 10 ) ; IDENT_10 . METHOD_9 ( 1 , TimeUnit . IDENT_8 ) ; IDENT_10 . METHOD_10 ( ( INT_1 * INT_1 ) ) ; long IDENT_11 = METHOD_11 ( c ) ; long now = java . lang . System . currentTimeMillis ( ) ; long IDENT_12 = 0 ; try ( org . apache . accumulo . core . client . IDENT_13 IDENT_14 = c . METHOD_12 ( tableName , IDENT_10 ) ) { for ( int i = 0 ; i < ( org . apache . accumulo . test . IDENT_15 . IDENT_16 ) ; i ++ ) { random . METHOD_13 ( row ) ; org . apache . accumulo . core . data . IDENT_17 m = new org . apache . accumulo . core . data . METHOD_14 ( row ) ; m . put ( "" , "" , "" ) ; IDENT_14 . METHOD_15 ( m ) ; IDENT_12 += m . METHOD_16 ( ) ; } } long IDENT_18 = ( java . lang . System . currentTimeMillis ( ) ) - now ; double IDENT_19 = IDENT_18 / FLOAT_0 ; double IDENT_20 = IDENT_12 / ( IDENT_5 ) ; double IDENT_21 = IDENT_20 / IDENT_19 ; System . out . println ( java . lang . String . format ( STRING_2 , IDENT_12 , IDENT_19 , ( ( long ) ( IDENT_20 ) ) , IDENT_21 ) ) ; long update = METHOD_11 ( c ) ; System . out . println ( ( STRING_3 + ( update - IDENT_11 ) ) ) ; IDENT_11 = update ; c . METHOD_3 ( ) . setProperty ( IDENT_3 . IDENT_4 . getKey ( ) , ( "" + ( IDENT_22 ) ) ) ; c . METHOD_5 ( ) . METHOD_17 ( tableName , null , null , true ) ; METHOD_6 ( 1 , TimeUnit . IDENT_8 ) ; try ( org . apache . accumulo . core . client . IDENT_13 IDENT_14 = c . METHOD_12 ( tableName , IDENT_10 ) ) { now = java . lang . System . currentTimeMillis ( ) ; IDENT_12 = 0 ; for ( int i = 0 ; i < ( org . apache . accumulo . test . IDENT_15 . IDENT_16 ) ; i ++ ) { random . METHOD_13 ( row ) ; org . apache . accumulo . core . data . METHOD_14 m = new org . apache . accumulo . core . data . METHOD_14 ( row ) ; m . put ( "" , "" , "" ) ; IDENT_14 . METHOD_15 ( m ) ; IDENT_12 += m . METHOD_16 ( ) ; } } IDENT_18 = ( java . lang . System . currentTimeMillis ( ) ) - now ; IDENT_19 = IDENT_18 / FLOAT_0 ; IDENT_20 = IDENT_12 / ( IDENT_22 ) ; IDENT_21 = IDENT_20 / IDENT_19 ; System . out . println ( java . lang . String . format ( STRING_2 , IDENT_12 , IDENT_19 , ( ( long ) ( IDENT_20 ) ) , IDENT_21 ) ) ; update = METHOD_11 ( c ) ; System . out . println ( ( STRING_3 + ( update - IDENT_11 ) ) ) ; "<AssertPlaceHolder>" ; } } METHOD_11 ( org . apache . accumulo . core . client . IDENT_1 ) { org . apache . accumulo . server . IDENT_23 context = METHOD_18 ( ) ; for ( java . lang . String address : c . METHOD_3 ( ) . METHOD_19 ( ) ) { org . apache . accumulo . core . IDENT_24 . IDENT_25 . IDENT_26 . IDENT_27 client = org . apache . accumulo . core . IDENT_28 . IDENT_29 . METHOD_20 ( org . apache . accumulo . core . util . IDENT_30 . METHOD_21 ( address ) , context ) ; org . apache . accumulo . core . IDENT_31 . IDENT_25 . IDENT_32 status = client . METHOD_22 ( null , context . METHOD_23 ( ) ) ; return status . IDENT_20 ; } return 0 ; }
org . junit . Assert . assertTrue ( ( ( update - IDENT_11 ) < IDENT_11 ) ) 