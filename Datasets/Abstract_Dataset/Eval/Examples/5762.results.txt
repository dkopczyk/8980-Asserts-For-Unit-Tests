METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; java . lang . String IDENT_2 = STRING_2 ; java . lang . String IDENT_3 = STRING_3 ; java . lang . String IDENT_4 = ( IDENT_0 + STRING_4 ) + IDENT_2 ; java . lang . String IDENT_5 = ( IDENT_0 + STRING_4 ) + IDENT_3 ; java . io . File file = METHOD_1 ( ) ; METHOD_2 ( STRING_5 , IDENT_0 , IDENT_2 ) ; METHOD_2 ( STRING_5 , IDENT_0 , IDENT_3 ) ; javax . jms . IDENT_6 session = METHOD_3 ( connection ) ; java . util . List < javax . jms . Message > messages = METHOD_4 ( session , IDENT_1 ) ; METHOD_5 ( IDENT_1 , file ) ; METHOD_6 ( ( STRING_6 + IDENT_4 ) , file ) ; METHOD_7 ( session , messages , IDENT_4 ) ; javax . jms . IDENT_7 consumer = session . METHOD_8 ( METHOD_9 ( IDENT_5 ) ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( long ) { session . METHOD_11 ( ) ; try { if ( IDENT_8 . LOGGER . METHOD_12 ( ) ) { IDENT_8 . LOGGER . trace ( ( ( ( STRING_7 + ( this ) ) + STRING_8 ) + IDENT_9 ) ) ; } METHOD_13 ( ) ; javax . jms . Message message = consumer . METHOD_10 ( IDENT_9 ) ; if ( IDENT_8 . LOGGER . METHOD_12 ( ) ) { IDENT_8 . LOGGER . trace ( ( ( ( STRING_9 + ( this ) ) + STRING_10 ) + message ) ) ; } if ( message == null ) { return null ; } else { return METHOD_14 ( message ) ; } } finally { session . METHOD_15 ( ) ; } }
org . junit . Assert . assertNull ( consumer . METHOD_10 ( 1000 ) ) 