METHOD_0 ( ) { byte [ ] buffer = new byte [ ] { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 } ; int length = ( buffer . length ) - 2 ; int offset = 1 ; org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 event = new org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 . Builder ( org . eclipse . IDENT_0 . IDENT_1 . IDENT_3 . session , org . eclipse . IDENT_0 . IDENT_1 . IDENT_3 . res ) . METHOD_1 ( buffer , offset , length ) . build ( ) ; java . nio . ByteBuffer IDENT_4 = event . METHOD_2 ( ) ; byte [ ] IDENT_5 = new byte [ IDENT_4 . METHOD_3 ( ) ] ; IDENT_4 . get ( IDENT_5 ) ; byte [ ] expected = new byte [ ] { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 } ; "<AssertPlaceHolder>" ; } get ( java . lang . Object ) { if ( key == null ) { throw new java . lang . IllegalArgumentException ( STRING_0 ) ; } return map . get ( key ) ; }
org . junit . Assert . assertArrayEquals ( expected , IDENT_5 ) 