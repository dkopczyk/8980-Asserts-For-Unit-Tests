METHOD_0 ( ) { org . eclipse . IDENT_0 . core . dom . ast . IDENT_1 . IDENT_2 IDENT_3 = org . eclipse . IDENT_0 . core . parser . tests . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_1 ( ) ; IDENT_3 . METHOD_2 ( IDENT_2 . IDENT_7 . IDENT_8 ) ; org . eclipse . IDENT_0 . internal . core . dom . parser . IDENT_1 . IDENT_9 IDENT_10 = new org . eclipse . IDENT_0 . internal . core . dom . parser . IDENT_1 . METHOD_3 ( ) ; IDENT_10 . METHOD_4 ( true ) ; IDENT_3 . METHOD_5 ( IDENT_10 ) ; org . eclipse . IDENT_0 . core . dom . ast . IDENT_1 . IDENT_11 x = new org . eclipse . IDENT_0 . internal . core . dom . parser . IDENT_1 . METHOD_3 ( ) ; org . eclipse . IDENT_0 . core . dom . ast . IDENT_1 . IDENT_11 y = new org . eclipse . IDENT_0 . internal . core . dom . parser . IDENT_1 . METHOD_3 ( ) ; x . METHOD_6 ( new org . eclipse . IDENT_0 . internal . core . dom . parser . IDENT_1 . METHOD_7 ( new char [ ] { STRING_0 } ) ) ; x . METHOD_4 ( true ) ; y . METHOD_6 ( new org . eclipse . IDENT_0 . internal . core . dom . parser . IDENT_1 . METHOD_7 ( new char [ ] { STRING_1 } ) ) ; IDENT_3 . METHOD_5 ( x ) ; IDENT_3 . METHOD_5 ( y ) ; IDENT_3 . accept ( IDENT_12 ) ; java . lang . String r = ( ( ( ( STRING_2 + ( org . eclipse . IDENT_0 . core . parser . tests . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_13 ) ) + STRING_3 ) + ( org . eclipse . IDENT_0 . core . parser . tests . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_13 ) ) + STRING_4 ) + ( org . eclipse . IDENT_0 . core . parser . tests . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_13 ) ; "<AssertPlaceHolder>" ; } toString ( ) { return ( METHOD_8 ( ) ) != null ? IDENT_14 . toString ( ) : "" ; }
org . junit . Assert . assertEquals ( r , IDENT_12 . toString ( ) ) 