METHOD_0 ( ) { org . eclipse . collections . impl . map . mutable . IDENT_0 < org . eclipse . collections . impl . IDENT_1 , java . lang . String > map = org . eclipse . collections . impl . map . mutable . IDENT_0 . METHOD_1 ( ) ; int size = INT_0 ; for ( int i = 0 ; i < size ; i ++ ) { map . put ( new org . eclipse . collections . impl . METHOD_2 ( i , 3 ) , org . eclipse . collections . impl . map . mutable . IDENT_2 . METHOD_3 ( i ) ) ; } int [ ] IDENT_3 = new int [ 1 ] ; IDENT_3 [ 0 ] = - 1 ; map . METHOD_4 ( ( value , index ) -> { "<AssertPlaceHolder>" ; IDENT_3 [ 0 ] = index ; } ) ; } METHOD_4 ( int , int , org . eclipse . collections . api . block . IDENT_4 . IDENT_5 . IDENT_6 ) { throw new java . lang . METHOD_5 ( ( ( this . getClass ( ) . METHOD_6 ( ) ) + STRING_0 ) ) ; }
org . junit . Assert . assertEquals ( index , ( ( IDENT_3 [ 0 ] ) + 1 ) ) 