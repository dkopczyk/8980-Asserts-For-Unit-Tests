METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 + ( ( ( ( STRING_1 + STRING_2 ) + STRING_3 ) + STRING_4 ) + STRING_5 ) ; org . eclipse . core . resources . IDENT_1 file = project . METHOD_1 ( STRING_6 ) ; try ( java . io . InputStream stream = new java . io . ByteArrayInputStream ( IDENT_0 . getBytes ( IDENT_2 . UTF_8 ) ) ) { file . METHOD_2 ( stream , true , false , monitor ) ; org . eclipse . IDENT_3 . IDENT_4 . core . internal . IDENT_5 result = handler . METHOD_3 ( false , monitor ) ; "<AssertPlaceHolder>" ; } } METHOD_3 ( boolean , org . eclipse . core . runtime . IDENT_6 ) { try { if ( monitor . METHOD_4 ( ) ) { return org . eclipse . IDENT_3 . IDENT_4 . core . internal . IDENT_5 . IDENT_7 ; } IDENT_8 . METHOD_5 ( IDENT_8 . METHOD_6 ( ) ) ; org . eclipse . core . resources . IDENT_9 [ ] IDENT_10 = org . eclipse . IDENT_3 . IDENT_4 . core . internal . IDENT_11 . METHOD_7 ( ) ; for ( org . eclipse . core . resources . IDENT_9 project : IDENT_10 ) { if ( ! ( project . equals ( IDENT_8 . METHOD_6 ( ) ) ) ) { java . lang . String uri = org . eclipse . IDENT_3 . IDENT_4 . core . internal . IDENT_12 . METHOD_8 ( project ) ; connection . METHOD_9 ( new org . eclipse . IDENT_13 . METHOD_10 ( org . eclipse . IDENT_3 . IDENT_4 . core . internal . IDENT_14 . METHOD_11 ( uri ) , java . util . Collections . emptyList ( ) ) ) ; } } if ( IDENT_15 ) { org . eclipse . core . resources . IDENT_16 . METHOD_12 ( ) . build ( org . eclipse . core . resources . IDENT_17 . IDENT_18 , monitor ) ; org . eclipse . core . resources . IDENT_16 . METHOD_12 ( ) . build ( org . eclipse . core . resources . IDENT_17 . IDENT_19 , monitor ) ; } else { org . eclipse . core . resources . IDENT_16 . METHOD_12 ( ) . build ( org . eclipse . core . resources . IDENT_17 . IDENT_20 , monitor ) ; } java . util . List < org . eclipse . core . resources . IDENT_21 > IDENT_22 = new java . util . ArrayList ( ) ; for ( org . eclipse . core . resources . IDENT_9 project : IDENT_10 ) { if ( ! ( project . equals ( IDENT_8 . METHOD_6 ( ) ) ) ) { java . util . List < org . eclipse . core . resources . IDENT_21 > IDENT_23 = org . eclipse . IDENT_3 . IDENT_4 . core . internal . IDENT_14 . METHOD_13 ( project ) ; if ( IDENT_23 != null ) { IDENT_22 . addAll ( IDENT_23 ) ; } } } java . util . List < java . lang . String > errors = IDENT_22 . stream ( ) . filter ( ( m ) -> ( m . METHOD_14 ( IDENT_21 . IDENT_24 , 0 ) ) == IDENT_21 . IDENT_25 ) . map ( ( e ) -> METHOD_15 ( e ) ) . collect ( java . util . stream . IDENT_26 . toList ( ) ) ; if ( errors . isEmpty ( ) ) { return org . eclipse . IDENT_3 . IDENT_4 . core . internal . IDENT_5 . IDENT_27 ; } else { java . lang . String IDENT_28 = java . lang . System . getProperty ( STRING_7 ) ; org . eclipse . IDENT_3 . IDENT_4 . core . internal . IDENT_29 . METHOD_16 ( ( ( STRING_8 + IDENT_28 ) + ( java . lang . String . join ( IDENT_28 , errors ) ) ) ) ; return org . eclipse . IDENT_3 . IDENT_4 . core . internal . IDENT_5 . IDENT_30 ; } } catch ( org . eclipse . core . runtime . IDENT_31 e ) { org . eclipse . IDENT_3 . IDENT_4 . core . internal . IDENT_29 . METHOD_17 ( STRING_9 , e ) ; return org . eclipse . IDENT_3 . IDENT_4 . core . internal . IDENT_5 . IDENT_32 ; } catch ( org . eclipse . core . runtime . IDENT_33 e ) { return org . eclipse . IDENT_3 . IDENT_4 . core . internal . IDENT_5 . IDENT_7 ; } }
org . junit . Assert . assertEquals ( result , IDENT_5 . IDENT_30 ) 