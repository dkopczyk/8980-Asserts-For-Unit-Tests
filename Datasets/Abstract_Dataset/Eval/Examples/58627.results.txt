METHOD_0 ( ) { org . eclipse . ui . tests . IDENT_0 . plugins . IDENT_1 IDENT_2 = new org . eclipse . ui . tests . IDENT_0 . plugins . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( ) ; org . eclipse . ui . tests . IDENT_0 . plugins . IDENT_3 IDENT_4 = new org . eclipse . ui . tests . IDENT_0 . plugins . METHOD_3 ( IDENT_2 ) ; java . lang . String path = METHOD_4 ( ) . getAbsolutePath ( ) ; IDENT_4 . METHOD_5 ( path ) ; IDENT_4 . METHOD_6 ( true ) ; IDENT_4 . METHOD_7 ( true ) ; new org . eclipse . IDENT_5 . common . IDENT_6 . METHOD_8 ( new org . eclipse . IDENT_5 . swt . condition . METHOD_9 ( new org . eclipse . IDENT_5 . swt . impl . IDENT_7 . METHOD_10 ( ) ) , org . eclipse . IDENT_5 . common . IDENT_6 . IDENT_8 . IDENT_9 ) ; java . util . List < org . eclipse . ui . tests . IDENT_0 . plugins . IDENT_10 > IDENT_11 = IDENT_4 . METHOD_11 ( ) ; java . util . List < org . eclipse . ui . tests . IDENT_0 . plugins . IDENT_10 > IDENT_12 = METHOD_12 ( ) ; "<AssertPlaceHolder>" ; for ( org . eclipse . ui . tests . IDENT_0 . plugins . IDENT_10 IDENT_13 : IDENT_11 ) { if ( ! ( IDENT_12 . contains ( IDENT_13 ) ) ) { org . junit . Assert . fail ( ( ( ( STRING_0 + ( IDENT_12 . toString ( ) ) ) + STRING_1 ) + ( IDENT_11 . toString ( ) ) ) ) ; } } IDENT_2 . METHOD_13 ( ) ; METHOD_14 ( ) ; METHOD_15 ( ) ; METHOD_16 ( ) ; } size ( ) { return ( this . types ) == null ? 0 : this . types . size ( ) ; }
org . junit . Assert . assertEquals ( IDENT_12 . size ( ) , IDENT_11 . size ( ) ) 