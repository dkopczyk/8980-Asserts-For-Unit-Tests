METHOD_0 ( ) { java . util . concurrent . atomic . IDENT_0 IDENT_1 = new java . util . concurrent . atomic . METHOD_1 ( false ) ; java . util . concurrent . atomic . METHOD_1 IDENT_2 = new java . util . concurrent . atomic . METHOD_1 ( false ) ; java . util . concurrent . atomic . METHOD_1 IDENT_3 = new java . util . concurrent . atomic . METHOD_1 ( false ) ; IDENT_4 . METHOD_2 ( org . eclipse . swt . IDENT_4 . IDENT_5 . METHOD_3 ( ( event ) -> IDENT_1 . set ( true ) ) ) ; IDENT_4 . METHOD_4 ( org . eclipse . swt . IDENT_4 . IDENT_6 . METHOD_5 ( ( event ) -> { if ( IDENT_1 . get ( ) ) { IDENT_3 . set ( true ) ; } IDENT_2 . set ( true ) ; } ) ) ; shell . METHOD_6 ( ) ; IDENT_4 . METHOD_7 ( STRING_0 ) ; METHOD_8 ( IDENT_2 :: get ) ; java . lang . String IDENT_7 = ( ( ( ( ( ( ( STRING_1 + STRING_2 ) + ( IDENT_1 . get ( ) ) ) + "\n" ) + STRING_3 ) + ( IDENT_3 . get ( ) ) ) + "\n" ) + STRING_4 ) + ( IDENT_2 . get ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( java . util . function . IDENT_8 ) { return METHOD_8 ( IDENT_9 , ( 1000 * ( IDENT_10 ) ) ) ; }
org . junit . Assert . assertTrue ( IDENT_7 , IDENT_3 . get ( ) ) 