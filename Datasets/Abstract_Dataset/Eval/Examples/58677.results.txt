METHOD_0 ( ) { org . junit . IDENT_0 . METHOD_1 ( METHOD_2 ( ) , IDENT_1 ) ; java . util . concurrent . atomic . IDENT_2 IDENT_3 = new java . util . concurrent . atomic . METHOD_3 ( false ) ; class IDENT_4 extends org . eclipse . swt . IDENT_5 . IDENT_6 { METHOD_4 ( org . eclipse . swt . IDENT_5 . IDENT_7 IDENT_5 , java . lang . String name ) { ( IDENT_5 , name ) ; } @ org . eclipse . swt . tests . junit . Override public java . lang . Object function ( java . lang . Object [ ] IDENT_8 ) { java . lang . Boolean IDENT_9 = ( ( java . lang . Boolean ) ( IDENT_8 [ 0 ] ) ) ; IDENT_3 . set ( IDENT_9 ) ; return null ; } } java . lang . String IDENT_10 = STRING_0 + ( ( ( ( ( ( ( ( STRING_1 + STRING_2 ) + STRING_3 ) + STRING_4 ) + STRING_3 0 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) ; IDENT_5 . METHOD_5 ( IDENT_10 ) ; new METHOD_4 ( IDENT_5 , STRING_3 1 ) ; IDENT_5 . METHOD_6 ( IDENT_11 ) ; shell . METHOD_7 ( ) ; boolean IDENT_12 = METHOD_8 ( IDENT_3 :: get ) ; java . lang . String message = STRING_3 2 ; "<AssertPlaceHolder>" ; } METHOD_8 ( java . util . function . IDENT_13 ) { return METHOD_8 ( IDENT_14 , ( 1000 * ( IDENT_15 ) ) ) ; }
org . junit . Assert . assertTrue ( message , IDENT_12 ) 