METHOD_0 ( ) { org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = mock ( org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 . class ) ; org . eclipse . IDENT_4 . ui . internal . IDENT_5 . mapping . IDENT_6 IDENT_7 = new org . eclipse . IDENT_4 . ui . internal . IDENT_5 . mapping . METHOD_1 ( ) ; org . eclipse . IDENT_4 . ui . internal . IDENT_5 . model . IDENT_8 IDENT_9 = mock ( org . eclipse . IDENT_4 . ui . internal . IDENT_5 . model . IDENT_8 . class ) ; org . eclipse . IDENT_4 . ui . internal . IDENT_5 . model . IDENT_10 cache = mock ( org . eclipse . IDENT_4 . ui . internal . IDENT_5 . model . IDENT_10 . class ) ; int actual = IDENT_7 . compare ( IDENT_3 , IDENT_9 , cache ) ; "<AssertPlaceHolder>" ; } compare ( org . eclipse . compare . IDENT_11 , org . eclipse . compare . IDENT_11 , org . eclipse . compare . IDENT_11 ) { if ( IDENT_12 . getType ( ) . equals ( IDENT_11 . IDENT_13 ) ) { org . eclipse . compare . IDENT_14 . IDENT_15 IDENT_16 = new org . eclipse . compare . IDENT_14 . METHOD_2 ( null , org . eclipse . compare . IDENT_14 . IDENT_17 . IDENT_18 , IDENT_19 , IDENT_12 , IDENT_20 ) ; org . eclipse . compare . IDENT_11 [ ] IDENT_21 = ( ( org . eclipse . compare . IDENT_11 [ ] ) ( ( ( org . eclipse . compare . IDENT_14 . IDENT_22 ) ( IDENT_12 ) ) . METHOD_3 ( ) ) ) ; org . eclipse . compare . IDENT_11 [ ] IDENT_23 = ( ( org . eclipse . compare . IDENT_11 [ ] ) ( ( ( org . eclipse . compare . IDENT_14 . IDENT_22 ) ( IDENT_20 ) ) . METHOD_3 ( ) ) ) ; org . eclipse . compare . IDENT_11 [ ] ac = null ; if ( IDENT_19 != null ) ac = ( ( org . eclipse . compare . IDENT_11 [ ] ) ( ( ( org . eclipse . compare . IDENT_14 . IDENT_22 ) ( IDENT_19 ) ) . METHOD_3 ( ) ) ) ; int IDENT_24 = 0 ; int IDENT_25 = 0 ; while ( ( IDENT_24 < ( IDENT_21 . length ) ) && ( IDENT_25 < ( IDENT_23 . length ) ) ) { org . eclipse . compare . IDENT_11 IDENT_26 = IDENT_21 [ IDENT_24 ] ; org . eclipse . compare . IDENT_11 IDENT_27 = IDENT_23 [ IDENT_25 ] ; org . eclipse . compare . IDENT_11 IDENT_28 = null ; if ( ac != null ) IDENT_28 = ac [ IDENT_25 ] ; int compareTo = IDENT_26 . getName ( ) . compareTo ( IDENT_27 . getName ( ) ) ; if ( compareTo == 0 ) { if ( ! ( IDENT_26 . equals ( IDENT_27 ) ) ) IDENT_16 . add ( compare ( IDENT_26 , IDENT_27 , IDENT_28 ) ) ; ++ IDENT_24 ; ++ IDENT_25 ; } else if ( compareTo < 0 ) { org . eclipse . compare . IDENT_14 . METHOD_2 IDENT_29 = new org . eclipse . compare . IDENT_14 . METHOD_2 ( org . eclipse . compare . IDENT_14 . IDENT_17 . IDENT_30 , IDENT_28 , IDENT_26 , null ) ; IDENT_16 . add ( IDENT_29 ) ; if ( IDENT_26 . getType ( ) . equals ( IDENT_11 . IDENT_13 ) ) { org . eclipse . compare . IDENT_11 [ ] IDENT_31 = ( ( org . eclipse . compare . IDENT_11 [ ] ) ( ( ( org . eclipse . compare . IDENT_14 . IDENT_22 ) ( IDENT_26 ) ) . METHOD_3 ( ) ) ) ; if ( ( IDENT_31 != null ) && ( ( IDENT_31 . length ) > 0 ) ) { for ( org . eclipse . compare . IDENT_11 child : IDENT_31 ) { IDENT_29 . add ( METHOD_4 ( child , IDENT_17 . IDENT_30 ) ) ; } } } ++ IDENT_24 ; } else { org . eclipse . compare . IDENT_14 . METHOD_2 IDENT_29 = new org . eclipse . compare . IDENT_14 . METHOD_2 ( org . eclipse . compare . IDENT_14 . IDENT_17 . IDENT_32 , IDENT_28 , null , IDENT_27 ) ; IDENT_16 . add ( IDENT_29 ) ; if ( IDENT_27 . getType ( ) . equals ( IDENT_11 . IDENT_13 ) ) { org . eclipse . compare . IDENT_11 [ ] IDENT_31 = ( ( org . eclipse . compare . IDENT_11 [ ] ) ( ( ( org . eclipse . compare . IDENT_14 . IDENT_22 ) ( IDENT_27 ) ) . METHOD_3 ( ) ) ) ; if ( ( IDENT_31 != null ) && ( ( IDENT_31 . length ) > 0 ) ) { for ( org . eclipse . compare . IDENT_11 child : IDENT_31 ) { IDENT_29 . add ( METHOD_4 ( child , IDENT_17 . IDENT_32 ) ) ; } } } ++ IDENT_25 ; } } while ( IDENT_24 < ( IDENT_21 . length ) ) { org . eclipse . compare . IDENT_11 IDENT_26 = IDENT_21 [ IDENT_24 ] ; org . eclipse . compare . IDENT_11 IDENT_28 = null ; if ( ac != null ) IDENT_28 = ac [ IDENT_24 ] ; org . eclipse . compare . IDENT_14 . METHOD_2 IDENT_29 = new org . eclipse . compare . IDENT_14 . METHOD_2 ( org . eclipse . compare . IDENT_14 . IDENT_17 . IDENT_30 , IDENT_28 , IDENT_26 , null ) ; IDENT_16 . add ( IDENT_29 ) ; if ( IDENT_26 . getType ( ) . equals ( IDENT_11 . IDENT_13 ) ) { org . eclipse . compare . IDENT_11 [ ] IDENT_31 = ( ( org . eclipse . compare . IDENT_11 [ ] ) ( ( ( org . eclipse . compare . IDENT_14 . IDENT_22 ) ( IDENT_26 ) ) . METHOD_3 ( ) ) ) ; if ( ( IDENT_31 != null ) && ( ( IDENT_31 . length ) > 0 ) ) { for ( org . eclipse . compare . IDENT_11 child : IDENT_31 ) { IDENT_29 . add ( METHOD_4 ( child , IDENT_17 . IDENT_30 ) ) ; } } } ++ IDENT_24 ; } while ( IDENT_25 < ( IDENT_23 . length ) ) { org . eclipse . compare . IDENT_11 IDENT_27 = IDENT_23 [ IDENT_25 ] ; org . eclipse . compare . IDENT_11 IDENT_28 = null ; if ( ac != null ) IDENT_28 = ac [ IDENT_25 ] ; org . eclipse . compare . IDENT_14 . METHOD_2 IDENT_29 = new org . eclipse . compare . IDENT_14 . METHOD_2 ( org . eclipse . compare . IDENT_14 . IDENT_17 . IDENT_32 , IDENT_28 , null , IDENT_27 ) ; IDENT_16 . add ( IDENT_29 ) ; if ( IDENT_27 . getType ( ) . equals ( IDENT_11 . IDENT_13 ) ) { org . eclipse . compare . IDENT_11 [ ] IDENT_31 = ( ( org . eclipse . compare . IDENT_11 [ ] ) ( ( ( org . eclipse . compare . IDENT_14 . IDENT_22 ) ( IDENT_27 ) ) . METHOD_3 ( ) ) ) ; if ( ( IDENT_31 != null ) && ( ( IDENT_31 . length ) > 0 ) ) { for ( org . eclipse . compare . IDENT_11 child : IDENT_31 ) { IDENT_29 . add ( METHOD_4 ( child , IDENT_17 . IDENT_32 ) ) ; } } } ++ IDENT_25 ; } return IDENT_16 ; } else { if ( IDENT_19 != null ) return new org . eclipse . compare . IDENT_14 . METHOD_2 ( org . eclipse . compare . IDENT_14 . IDENT_17 . IDENT_33 , IDENT_19 , IDENT_12 , IDENT_20 ) ; else return new org . eclipse . compare . IDENT_14 . METHOD_2 ( IDENT_12 , IDENT_20 ) ; } }
org . junit . Assert . assertTrue ( ( actual > 0 ) ) 