METHOD_0 ( ) { org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 . graph . IDENT_3 [ ] nodes = METHOD_1 ( 4 , METHOD_2 ( ) ) ; org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 . graph . IDENT_3 IDENT_4 = METHOD_3 ( METHOD_2 ( ) ) ; org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 . graph . IDENT_5 [ ] IDENT_6 = METHOD_4 ( 2 , IDENT_4 , IDENT_7 . IDENT_8 ) ; METHOD_5 ( IDENT_4 , IDENT_6 ) ; METHOD_6 ( nodes [ 1 ] , IDENT_6 [ 1 ] ) ; METHOD_6 ( nodes [ 2 ] , IDENT_6 [ 0 ] ) ; METHOD_7 ( nodes [ 0 ] , nodes [ 2 ] , IDENT_7 . IDENT_8 ) ; final org . eclipse . IDENT_0 . core . options . IDENT_7 IDENT_9 = org . eclipse . IDENT_0 . core . options . IDENT_7 . IDENT_8 ; org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 . graph . IDENT_5 IDENT_10 = METHOD_8 ( nodes [ 1 ] , IDENT_9 ) ; org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 . graph . IDENT_5 IDENT_11 = METHOD_8 ( nodes [ 3 ] , IDENT_9 ) ; METHOD_9 ( IDENT_10 , IDENT_11 ) ; METHOD_9 ( IDENT_10 , IDENT_11 ) ; METHOD_10 ( IDENT_4 ) ; java . util . List < org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 . graph . IDENT_3 > IDENT_12 = METHOD_11 ( ) . METHOD_12 ( ) . get ( 0 ) . METHOD_13 ( ) ; java . util . List < org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 . graph . IDENT_3 > IDENT_13 = METHOD_14 ( IDENT_12 , 1 , 0 , 2 , 3 ) ; METHOD_15 ( ) ; "<AssertPlaceHolder>" ; } METHOD_15 ( ) { if ( ( IDENT_14 ) == ( org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_15 . IDENT_16 . IDENT_17 . IDENT_18 ) ) { METHOD_11 ( ) . setProperty ( IDENT_19 . IDENT_20 , 1 ) ; } IDENT_21 . process ( METHOD_11 ( ) , new org . eclipse . IDENT_0 . core . util . METHOD_16 ( ) ) ; }
org . junit . Assert . assertThat ( IDENT_12 , org . hamcrest . CoreMatchers . is ( IDENT_13 ) ) 