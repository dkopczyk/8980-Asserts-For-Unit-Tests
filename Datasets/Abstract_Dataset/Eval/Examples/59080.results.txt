METHOD_0 ( ) { org . eclipse . IDENT_0 . geometry . IDENT_1 . IDENT_2 IDENT_3 = new org . eclipse . IDENT_0 . geometry . IDENT_1 . METHOD_1 ( FLOAT_0 , FLOAT_1 , INT_0 , INT_1 , FLOAT_2 , FLOAT_1 ) ; org . eclipse . IDENT_0 . geometry . IDENT_1 . IDENT_4 c = new org . eclipse . IDENT_0 . geometry . IDENT_1 . METHOD_2 ( FLOAT_3 , FLOAT_4 , FLOAT_3 , FLOAT_5 , FLOAT_6 , FLOAT_7 , FLOAT_8 , FLOAT_7 ) ; org . eclipse . IDENT_0 . geometry . IDENT_1 . IDENT_5 [ ] IDENT_6 = c . METHOD_3 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . eclipse . IDENT_0 . geometry . IDENT_1 . IDENT_7 ) { if ( equals ( IDENT_8 ) ) { return new org . eclipse . IDENT_0 . geometry . IDENT_1 . IDENT_5 [ ] { } ; } java . util . HashSet < org . eclipse . IDENT_0 . geometry . IDENT_1 . IDENT_5 > IDENT_9 = new java . util . HashSet ( ) ; for ( org . eclipse . IDENT_0 . geometry . IDENT_1 . METHOD_2 IDENT_10 : METHOD_4 ( ) ) { IDENT_9 . addAll ( java . util . Arrays . asList ( IDENT_8 . METHOD_3 ( IDENT_10 ) ) ) ; } return IDENT_9 . toArray ( new org . eclipse . IDENT_0 . geometry . IDENT_1 . IDENT_5 [ ] { } ) ; }
org . junit . Assert . assertEquals ( 1 , IDENT_6 . length ) 