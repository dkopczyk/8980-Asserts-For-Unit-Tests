METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final org . apache . IDENT_1 . IDENT_2 . message . Message message = mock ( org . apache . IDENT_1 . IDENT_2 . message . Message . class ) ; when ( message . METHOD_1 ( ) ) . thenReturn ( STRING_1 ) ; when ( message . METHOD_2 ( ) ) . thenReturn ( IDENT_0 ) ; when ( message . METHOD_3 ( ) ) . thenReturn ( java . lang . String . format ( STRING_2 , IDENT_3 . IDENT_4 , STRING_3 , Constants . IDENT_5 ) ) ; "<AssertPlaceHolder>" ; } from ( org . apache . IDENT_1 . IDENT_2 . message . Message , java . lang . String , java . lang . String ) { java . util . IDENT_6 . METHOD_4 ( message ) ; java . util . IDENT_6 . METHOD_4 ( IDENT_7 ) ; java . util . IDENT_6 . METHOD_4 ( IDENT_8 ) ; boolean IDENT_9 = ( message . METHOD_1 ( ) ) != null ; final java . lang . String IDENT_0 = java . util . Optional . METHOD_5 ( message . METHOD_2 ( ) ) . map ( ( obj ) -> { if ( obj instanceof java . lang . String ) { return ( ( java . lang . String ) ( obj ) ) ; } else { return null ; } } ) . METHOD_6 ( ( ) -> { final java . lang . Object obj = message . METHOD_7 ( ) ; if ( obj instanceof java . lang . String ) { return ( ( java . lang . String ) ( obj ) ) ; } else { return null ; } } ) ; if ( IDENT_0 == null ) { IDENT_9 = false ; } java . lang . String IDENT_10 = null ; if ( ( message . METHOD_3 ( ) ) != null ) { try { final org . eclipse . IDENT_11 . util . IDENT_12 IDENT_13 = org . eclipse . IDENT_11 . util . IDENT_12 . METHOD_8 ( message . METHOD_3 ( ) ) ; if ( ! ( IDENT_3 . IDENT_4 . equals ( IDENT_13 . METHOD_9 ( ) ) ) ) { IDENT_9 = false ; } else if ( ! ( IDENT_7 . equals ( IDENT_13 . METHOD_10 ( ) ) ) ) { IDENT_9 = false ; } else { IDENT_10 = IDENT_13 . METHOD_11 ( ) ; if ( IDENT_10 == null ) { IDENT_9 = false ; } else { message . METHOD_12 ( java . lang . String . format ( STRING_4 , IDENT_13 . METHOD_13 ( ) , org . eclipse . IDENT_11 . client . IDENT_14 . METHOD_14 ( IDENT_10 , IDENT_8 ) ) ) ; } } } catch ( java . lang . IllegalArgumentException e ) { IDENT_9 = false ; } } final org . eclipse . IDENT_11 . client . IDENT_14 result = new org . eclipse . IDENT_11 . client . METHOD_15 ( IDENT_9 , message , IDENT_7 , IDENT_8 , IDENT_0 , IDENT_10 ) ; return result ; }
org . junit . Assert . assertFalse ( org . eclipse . IDENT_11 . client . METHOD_15 . from ( message , Constants . IDENT_5 , STRING_3 ) . isValid ( ) ) 