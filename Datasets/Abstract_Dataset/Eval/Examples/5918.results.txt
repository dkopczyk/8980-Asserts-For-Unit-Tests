METHOD_0 ( ) { org . apache . activemq . IDENT_0 factory = new org . apache . activemq . METHOD_1 ( STRING_0 ) ; javax . jms . IDENT_1 conn = factory . METHOD_2 ( STRING_1 , STRING_2 ) ; javax . jms . IDENT_2 IDENT_3 = conn . METHOD_3 ( false , IDENT_2 . IDENT_4 ) ; conn . start ( ) ; javax . jms . IDENT_5 IDENT_6 = IDENT_3 . METHOD_4 ( STRING_3 ) ; javax . jms . IDENT_7 IDENT_8 = IDENT_3 . METHOD_5 ( IDENT_6 ) ; javax . jms . IDENT_9 consumer = IDENT_3 . METHOD_6 ( IDENT_6 ) ; IDENT_8 . METHOD_7 ( IDENT_3 . METHOD_8 ( "test" ) ) ; javax . jms . Message msg = consumer . METHOD_9 ( 1000 ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( long ) { session . METHOD_10 ( ) ; try { if ( IDENT_10 . LOGGER . METHOD_11 ( ) ) { IDENT_10 . LOGGER . trace ( ( ( ( STRING_4 + ( this ) ) + STRING_5 ) + IDENT_11 ) ) ; } METHOD_12 ( ) ; javax . jms . Message message = consumer . METHOD_9 ( IDENT_11 ) ; if ( IDENT_10 . LOGGER . METHOD_11 ( ) ) { IDENT_10 . LOGGER . trace ( ( ( ( STRING_6 + ( this ) ) + STRING_7 ) + message ) ) ; } if ( message == null ) { return null ; } else { return METHOD_13 ( message ) ; } } finally { session . METHOD_14 ( ) ; } }
org . junit . Assert . assertNotNull ( msg ) 