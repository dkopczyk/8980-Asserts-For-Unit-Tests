METHOD_0 ( ) { org . eclipse . IDENT_0 . dataset . IDENT_1 IDENT_2 = METHOD_1 ( ) ; org . eclipse . IDENT_0 . dataset . IDENT_3 . IDENT_4 IDENT_5 = new org . eclipse . IDENT_0 . dataset . IDENT_3 . METHOD_2 ( ) ; IDENT_2 . METHOD_3 ( IDENT_5 ) ; int IDENT_6 = 200 ; int IDENT_7 = 5 ; for ( int i = 1 ; i <= IDENT_7 ; i ++ ) { try { IDENT_2 . METHOD_4 ( i , 4 ) ; java . lang . Thread . sleep ( IDENT_6 ) ; } catch ( java . lang . IDENT_8 e ) { org . junit . Assert . fail ( STRING_0 ) ; } } "<AssertPlaceHolder>" ; } METHOD_4 ( T extends org . eclipse . IDENT_0 . dataset . IDENT_9 , int [ ] ) { int size = a . METHOD_5 ( ) ; @ org . eclipse . IDENT_0 . dataset . METHOD_6 ( STRING_1 ) org . eclipse . IDENT_0 . dataset . IDENT_9 IDENT_10 = org . eclipse . IDENT_0 . dataset . IDENT_11 . METHOD_7 ( a . METHOD_8 ( ) , IDENT_12 , a . METHOD_9 ( ) ) ; org . eclipse . IDENT_0 . dataset . IDENT_13 it = IDENT_10 . METHOD_10 ( ) ; while ( it . hasNext ( ) ) { IDENT_10 . METHOD_11 ( it . index , a . METHOD_12 ( ( ( it . index ) OP_0 size ) ) ) ; } return ( ( T ) ( IDENT_10 ) ) ; }
org . junit . Assert . assertEquals ( IDENT_7 , IDENT_5 . count ) 