METHOD_0 ( ) { write ( new java . io . File ( db . METHOD_1 ( ) . METHOD_2 ( ) , STRING_0 ) , "test" ) ; java . io . File IDENT_0 = new java . io . File ( db . METHOD_1 ( ) . METHOD_2 ( ) , STRING_1 ) ; org . eclipse . jgit . util . IDENT_1 . METHOD_3 ( IDENT_0 ) ; write ( new java . io . File ( IDENT_0 , STRING_2 ) , STRING_1 ) ; try ( org . eclipse . jgit . api . IDENT_2 IDENT_3 = new org . eclipse . jgit . api . METHOD_4 ( db ) ; java . io . ByteArrayOutputStream IDENT_4 = new java . io . ByteArrayOutputStream ( ) ; org . eclipse . jgit . IDENT_5 . IDENT_6 IDENT_7 = new org . eclipse . jgit . IDENT_5 . METHOD_5 ( new java . io . METHOD_6 ( IDENT_4 ) ) ) { IDENT_3 . add ( ) . METHOD_7 ( STRING_3 4 ) . call ( ) ; org . eclipse . jgit . IDENT_8 . IDENT_9 commit = IDENT_3 . commit ( ) . METHOD_8 ( STRING_3 5 ) . call ( ) ; write ( new java . io . File ( IDENT_0 , STRING_2 ) , STRING_4 ) ; IDENT_7 . METHOD_9 ( db ) ; IDENT_7 . METHOD_10 ( org . eclipse . jgit . IDENT_10 . filter . IDENT_11 . create ( STRING_1 ) ) ; IDENT_7 . format ( commit . METHOD_11 ( ) . getId ( ) , null ) ; IDENT_7 . METHOD_12 ( ) ; java . lang . String actual = IDENT_4 . toString ( STRING_5 ) ; java . lang . String expected = STRING_6 + ( ( ( ( ( ( STRING_3 0 + STRING_3 3 ) + STRING_3 1 ) + STRING_3 ) + STRING_3 2 ) + STRING_7 ) + STRING_8 ) ; "<AssertPlaceHolder>" ; } } toString ( java . lang . String [ ] ) { return org . eclipse . jgit . lib . IDENT_12 . toString ( java . util . Arrays . asList ( IDENT_13 ) ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 