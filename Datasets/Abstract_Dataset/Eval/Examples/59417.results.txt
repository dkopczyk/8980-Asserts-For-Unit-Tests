METHOD_0 ( ) { final java . lang . String x = STRING_0 ; final org . eclipse . jgit . lib . IDENT_0 IDENT_1 = org . eclipse . jgit . lib . IDENT_0 . METHOD_1 ( x ) ; "<AssertPlaceHolder>" ; } name ( ) { final char [ ] b = new char [ Constants . IDENT_2 ] ; org . eclipse . jgit . lib . IDENT_3 . METHOD_2 ( b , 0 , IDENT_4 ) ; if ( ( IDENT_5 ) <= 8 ) return new java . lang . String ( b , 0 , IDENT_5 ) ; org . eclipse . jgit . lib . IDENT_3 . METHOD_2 ( b , 8 , IDENT_6 ) ; if ( ( IDENT_5 ) <= 16 ) return new java . lang . String ( b , 0 , IDENT_5 ) ; org . eclipse . jgit . lib . IDENT_3 . METHOD_2 ( b , 16 , IDENT_7 ) ; if ( ( IDENT_5 ) <= INT_0 ) return new java . lang . String ( b , 0 , IDENT_5 ) ; org . eclipse . jgit . lib . IDENT_3 . METHOD_2 ( b , INT_0 , IDENT_8 ) ; if ( ( IDENT_5 ) <= INT_1 ) return new java . lang . String ( b , 0 , IDENT_5 ) ; org . eclipse . jgit . lib . IDENT_3 . METHOD_2 ( b , INT_1 , IDENT_9 ) ; return new java . lang . String ( b , 0 , IDENT_5 ) ; }
org . junit . Assert . assertEquals ( x , IDENT_1 . name ( ) ) 