METHOD_0 ( ) { final int [ ] IDENT_0 = new int [ 1 ] ; final java . io . IDENT_1 IDENT_2 = new java . io . METHOD_1 ( ) { @ org . eclipse . jgit . transport . Override public void write ( int IDENT_3 ) throws java . io . IOException { org . junit . Assert . fail ( STRING_0 ) ; } @ org . eclipse . jgit . transport . Override public void METHOD_2 ( ) throws java . io . IOException { ( IDENT_0 [ 0 ] ) ++ ; } } ; try ( org . eclipse . jgit . transport . IDENT_4 out = new org . eclipse . jgit . transport . METHOD_3 ( org . eclipse . jgit . transport . METHOD_3 . IDENT_5 , org . eclipse . jgit . transport . METHOD_3 . IDENT_6 , IDENT_2 ) ) { out . METHOD_2 ( ) ; } "<AssertPlaceHolder>" ; } METHOD_2 ( ) { try { METHOD_4 ( ) ; IDENT_7 . METHOD_2 ( ) ; } catch ( java . io . IDENT_8 e ) { throw METHOD_5 ( ) ; } finally { METHOD_6 ( ) ; } }
org . junit . Assert . assertEquals ( 1 , IDENT_0 [ 0 ] ) 