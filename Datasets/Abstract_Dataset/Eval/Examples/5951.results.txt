METHOD_0 ( ) { org . apache . activemq . artemis . api . core . client . IDENT_0 IDENT_1 = METHOD_1 ( IDENT_2 ) ; org . apache . activemq . artemis . api . core . client . IDENT_3 IDENT_4 = IDENT_1 . METHOD_2 ( false , true , true ) ; org . apache . activemq . artemis . api . core . client . IDENT_5 IDENT_6 = IDENT_4 . METHOD_3 ( IDENT_7 ) ; org . apache . activemq . artemis . api . core . client . IDENT_3 session = IDENT_1 . METHOD_2 ( false , true , true ) ; session . METHOD_4 ( IDENT_7 , IDENT_8 , false ) ; org . apache . activemq . artemis . api . core . client . IDENT_9 cc = session . METHOD_5 ( IDENT_8 ) ; session . start ( ) ; IDENT_6 . METHOD_6 ( IDENT_4 . METHOD_7 ( false ) ) ; "<AssertPlaceHolder>" ; session . close ( ) ; IDENT_4 . close ( ) ; } METHOD_8 ( ) { session . METHOD_9 ( ) ; try { if ( IDENT_10 . LOGGER . METHOD_10 ( ) ) { IDENT_10 . LOGGER . trace ( ( STRING_0 + ( this ) ) ) ; } METHOD_11 ( ) ; javax . jms . Message message = consumer . METHOD_8 ( ) ; if ( IDENT_10 . LOGGER . METHOD_10 ( ) ) { IDENT_10 . LOGGER . trace ( ( ( ( STRING_1 + ( this ) ) + STRING_2 ) + message ) ) ; } if ( message == null ) { return null ; } else { return METHOD_12 ( message ) ; } } finally { session . METHOD_13 ( ) ; } }
org . junit . Assert . assertNotNull ( cc . METHOD_8 ( ) ) 