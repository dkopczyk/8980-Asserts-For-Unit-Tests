METHOD_0 ( ) { java . io . File IDENT_0 = new java . io . File ( IDENT_1 , STRING_0 ) ; org . eclipse . jgit . util . IDENT_2 . METHOD_1 ( IDENT_0 . METHOD_2 ( ) ) ; org . eclipse . jgit . util . IDENT_2 . METHOD_3 ( IDENT_0 ) ; java . io . File IDENT_3 = new java . io . File ( IDENT_1 , STRING_1 ) ; org . eclipse . jgit . util . IDENT_2 . METHOD_3 ( IDENT_3 ) ; java . io . File d = new java . io . File ( IDENT_1 , "test" ) ; org . eclipse . jgit . util . IDENT_2 . delete ( d , IDENT_2 . IDENT_4 ) ; "<AssertPlaceHolder>" ; try { org . eclipse . jgit . util . IDENT_2 . delete ( d , IDENT_2 . IDENT_4 ) ; org . junit . Assert . fail ( STRING_2 ) ; } catch ( java . io . IOException e ) { } try { org . eclipse . jgit . util . IDENT_2 . delete ( d , ( ( IDENT_2 . IDENT_4 ) | ( IDENT_2 . IDENT_5 ) ) ) ; } catch ( java . io . IOException e ) { org . junit . Assert . fail ( STRING_3 ) ; } } exists ( ) { org . eclipse . jgit . internal . storage . IDENT_6 . IDENT_7 IDENT_8 = METHOD_4 ( ) . METHOD_5 ( ) ; return ( IDENT_8 . METHOD_6 ( ) . length ) > 0 ; }
org . junit . Assert . assertFalse ( d . exists ( ) ) 