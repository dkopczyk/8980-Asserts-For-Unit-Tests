METHOD_0 ( ) { org . eclipse . IDENT_0 . core . net . IDENT_1 config = new org . eclipse . IDENT_0 . core . net . METHOD_1 ( ) ; org . eclipse . IDENT_0 . core . net . IDENT_2 IDENT_3 = new org . eclipse . IDENT_0 . core . net . METHOD_2 ( STRING_0 ) ; config . METHOD_3 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } isValid ( ) { java . util . Iterator < java . lang . String > it = this . IDENT_4 . METHOD_4 ( ) . iterator ( ) ; while ( it . hasNext ( ) ) { org . eclipse . IDENT_0 . net . IDENT_5 < ? extends org . eclipse . IDENT_0 . net . IDENT_6 > IDENT_7 = this . IDENT_4 . get ( it . next ( ) ) ; if ( ( IDENT_7 . METHOD_5 ( ) ) < 0 ) { org . eclipse . IDENT_0 . core . net . METHOD_1 . logger . error ( STRING_1 ) ; return false ; } org . eclipse . IDENT_0 . net . IDENT_8 type = IDENT_7 . getType ( ) ; if ( ( ( ( type != ( org . eclipse . IDENT_0 . net . IDENT_8 . IDENT_9 ) ) && ( type != ( org . eclipse . IDENT_0 . net . IDENT_8 . IDENT_10 ) ) ) && ( type != ( org . eclipse . IDENT_0 . net . IDENT_8 . IDENT_11 ) ) ) && ( type != ( org . eclipse . IDENT_0 . net . IDENT_8 . IDENT_12 ) ) ) { org . eclipse . IDENT_0 . core . net . METHOD_1 . logger . error ( STRING_2 , type ) ; return false ; } java . util . List < ? extends org . eclipse . IDENT_0 . net . IDENT_6 > IDENT_13 = IDENT_7 . METHOD_6 ( ) ; for ( org . eclipse . IDENT_0 . net . IDENT_6 IDENT_14 : IDENT_13 ) { java . util . List < org . eclipse . IDENT_0 . net . IDENT_15 > IDENT_16 = IDENT_14 . METHOD_7 ( ) ; if ( IDENT_16 != null ) { for ( org . eclipse . IDENT_0 . net . IDENT_15 IDENT_17 : IDENT_16 ) { if ( ! ( IDENT_17 . isValid ( ) ) ) { org . eclipse . IDENT_0 . core . net . METHOD_1 . logger . error ( STRING_3 , IDENT_17 . toString ( ) ) ; return false ; } } } } } return true ; }
org . junit . Assert . assertTrue ( config . isValid ( ) ) 