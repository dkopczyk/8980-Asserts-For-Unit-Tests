METHOD_0 ( ) { org . apache . activemq . artemis . api . core . IDENT_0 address = org . apache . activemq . artemis . utils . IDENT_1 . METHOD_1 ( ) ; org . apache . activemq . artemis . api . core . IDENT_0 queue = org . apache . activemq . artemis . utils . IDENT_1 . METHOD_1 ( ) ; java . lang . String IDENT_2 = org . apache . activemq . artemis . utils . IDENT_1 . METHOD_2 ( ) ; session . METHOD_3 ( address , IDENT_3 . IDENT_4 , queue , null , IDENT_5 ) ; org . apache . activemq . artemis . api . core . management . IDENT_6 IDENT_7 = METHOD_4 ( address , queue ) ; org . apache . activemq . artemis . core . IDENT_8 . impl . IDENT_9 IDENT_10 = new org . apache . activemq . artemis . core . IDENT_8 . impl . METHOD_5 ( ) . METHOD_6 ( new org . apache . activemq . artemis . api . core . METHOD_7 ( IDENT_2 ) ) ; server . METHOD_8 ( ) . METHOD_9 ( address . toString ( ) , IDENT_10 ) ; "<AssertPlaceHolder>" ; session . METHOD_10 ( queue ) ; } METHOD_11 ( ) { if ( org . apache . activemq . artemis . IDENT_11 . IDENT_12 . METHOD_12 ( ) ) { org . apache . activemq . artemis . IDENT_11 . IDENT_12 . METHOD_11 ( queue ) ; } METHOD_13 ( ) ; METHOD_14 ( ) ; try { org . apache . activemq . artemis . core . IDENT_8 . impl . METHOD_5 IDENT_10 = IDENT_13 . METHOD_15 ( address ) ; if ( ( IDENT_10 != null ) && ( ( IDENT_10 . METHOD_11 ( ) ) != null ) ) { return IDENT_10 . METHOD_11 ( ) . toString ( ) ; } return null ; } finally { METHOD_16 ( ) ; } }
org . junit . Assert . assertEquals ( IDENT_2 , IDENT_7 . METHOD_11 ( ) ) 