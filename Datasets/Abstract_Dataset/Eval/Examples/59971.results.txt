METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; org . eclipse . IDENT_2 . IDENT_3 . net . util . IDENT_4 IDENT_5 = mock ( org . eclipse . IDENT_2 . IDENT_3 . net . util . IDENT_4 . class ) ; when ( IDENT_5 . get ( ) ) . thenReturn ( true ) ; when ( IDENT_5 . METHOD_1 ( ) ) . thenReturn ( true ) ; when ( IDENT_5 . METHOD_2 ( ) ) . thenReturn ( 5 ) ; org . eclipse . IDENT_2 . net . admin . monitor . IDENT_6 IDENT_7 = METHOD_3 ( IDENT_1 , 0 , IDENT_5 ) ; java . util . Map < java . lang . String , org . eclipse . IDENT_2 . net . admin . monitor . IDENT_8 > IDENT_9 = new java . util . HashMap ( ) ; IDENT_9 . put ( IDENT_0 , new org . eclipse . IDENT_2 . net . admin . monitor . METHOD_4 ( IDENT_0 , true , true , org . eclipse . IDENT_2 . net . IDENT_10 . METHOD_5 ( STRING_2 ) ) ) ; org . eclipse . IDENT_2 . core . IDENT_11 . IDENT_12 . METHOD_6 ( IDENT_7 , STRING_3 , IDENT_9 ) ; int IDENT_13 = IDENT_7 . METHOD_7 ( IDENT_0 , IDENT_1 ) ; verify ( IDENT_5 , times ( 1 ) ) . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { return 0 ; }
org . junit . Assert . assertEquals ( 5 , IDENT_13 ) 