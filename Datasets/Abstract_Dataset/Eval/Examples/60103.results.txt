METHOD_0 ( ) { org . eclipse . IDENT_0 . services . IDENT_1 IDENT_2 = METHOD_1 ( org . eclipse . IDENT_0 . services . IDENT_1 . class , new org . eclipse . IDENT_0 . test . services . METHOD_2 ( ) { @ org . eclipse . IDENT_0 . test . services . Override public java . util . concurrent . IDENT_3 < org . eclipse . IDENT_0 . IDENT_4 > METHOD_3 ( org . eclipse . IDENT_0 . IDENT_4 params ) { return org . eclipse . IDENT_0 . IDENT_5 . IDENT_6 . METHOD_4 ( ( IDENT_7 ) -> { params . METHOD_5 ( STRING_0 ) ; return params ; } ) ; } } ) ; java . util . concurrent . IDENT_3 < org . eclipse . IDENT_0 . IDENT_4 > future = IDENT_2 . METHOD_6 ( ) . METHOD_3 ( new org . eclipse . IDENT_0 . METHOD_7 ( new org . eclipse . IDENT_0 . METHOD_8 ( new org . eclipse . IDENT_0 . METHOD_9 ( 0 , 0 ) , new org . eclipse . IDENT_0 . METHOD_9 ( 0 , 0 ) ) , STRING_1 ) ) ; org . eclipse . IDENT_0 . METHOD_7 IDENT_8 = future . get ( org . eclipse . IDENT_0 . test . services . IDENT_9 . IDENT_10 , TimeUnit . IDENT_11 ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( ) { return this . target ; }
org . junit . Assert . assertEquals ( STRING_0 , IDENT_8 . METHOD_10 ( ) ) 