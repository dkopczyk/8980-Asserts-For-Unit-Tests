METHOD_0 ( ) { org . apache . activemq . artemis . api . core . client . IDENT_0 sf = METHOD_1 ( ) ; org . apache . activemq . artemis . api . core . client . IDENT_1 session = sf . METHOD_2 ( ) ; final java . lang . String IDENT_2 = "foo" ; session . METHOD_3 ( IDENT_2 , IDENT_3 . IDENT_4 , IDENT_2 ) ; org . apache . activemq . artemis . api . core . client . IDENT_5 IDENT_6 = session . METHOD_4 ( IDENT_2 ) ; org . apache . activemq . artemis . api . core . client . IDENT_7 IDENT_8 = session . METHOD_5 ( IDENT_2 ) ; session . start ( ) ; org . apache . activemq . artemis . api . core . client . IDENT_9 msg = session . METHOD_6 ( false ) ; IDENT_6 . METHOD_7 ( msg ) ; msg = IDENT_8 . METHOD_8 ( INT_0 ) ; "<AssertPlaceHolder>" ; msg . METHOD_9 ( ) ; } METHOD_8 ( long ) { session . METHOD_10 ( ) ; try { if ( IDENT_10 . LOGGER . METHOD_11 ( ) ) { IDENT_10 . LOGGER . trace ( ( ( ( STRING_0 + ( this ) ) + STRING_1 ) + IDENT_11 ) ) ; } METHOD_12 ( ) ; javax . jms . Message message = consumer . METHOD_8 ( IDENT_11 ) ; if ( IDENT_10 . LOGGER . METHOD_11 ( ) ) { IDENT_10 . LOGGER . trace ( ( ( ( STRING_2 + ( this ) ) + STRING_3 ) + message ) ) ; } if ( message == null ) { return null ; } else { return METHOD_13 ( message ) ; } } finally { session . METHOD_14 ( ) ; } }
org . junit . Assert . assertNotNull ( msg ) 