METHOD_0 ( ) { org . apache . accumulo . core . client . IDENT_0 conn = IDENT_1 . METHOD_1 ( ) ; org . apache . accumulo . core . client . admin . IDENT_2 IDENT_3 = conn . METHOD_2 ( ) ; final java . lang . String t = METHOD_3 ( 1 ) [ 0 ] ; edu . IDENT_4 . IDENT_5 . IDENT_6 . util . IDENT_7 . METHOD_4 ( conn , t ) ; java . util . Map < org . apache . accumulo . core . data . IDENT_8 , org . apache . accumulo . core . data . IDENT_9 > expect = new java . util . METHOD_5 ( edu . IDENT_4 . IDENT_5 . IDENT_6 . util . IDENT_7 . IDENT_10 ) ; java . util . Map < org . apache . accumulo . core . data . IDENT_8 , org . apache . accumulo . core . data . IDENT_9 > actual = new java . util . METHOD_5 ( edu . IDENT_4 . IDENT_5 . IDENT_6 . util . IDENT_7 . IDENT_10 ) ; java . lang . String IDENT_11 = STRING_0 ; try { IDENT_3 . setProperty ( t , STRING_1 , IDENT_11 ) ; } catch ( org . apache . accumulo . core . client . IDENT_12 | org . apache . accumulo . core . client . IDENT_13 e ) { org . junit . Assert . fail ( ( ( ( STRING_2 + t ) + STRING_3 ) + IDENT_11 ) ) ; } { org . apache . accumulo . core . client . IDENT_14 IDENT_15 = new org . apache . accumulo . core . client . METHOD_6 ( ) ; IDENT_15 . METHOD_7 ( INT_0 ) ; org . apache . accumulo . core . client . IDENT_16 IDENT_17 = conn . METHOD_8 ( t , new org . apache . accumulo . core . client . METHOD_6 ( ) ) ; for ( int i = 0 ; i < INT_1 ; i ++ ) { java . lang . StringBuilder sb = new java . lang . StringBuilder ( java . lang . Integer . toString ( i ) ) ; java . lang . String IDENT_18 = sb . toString ( ) ; byte [ ] v = IDENT_18 . getBytes ( IDENT_19 . UTF_8 ) ; java . lang . String IDENT_20 = sb . METHOD_9 ( ) . toString ( ) ; byte [ ] row = IDENT_20 . getBytes ( IDENT_19 . UTF_8 ) ; org . apache . accumulo . core . data . IDENT_21 m = new org . apache . accumulo . core . data . METHOD_10 ( row ) ; long IDENT_22 = java . lang . System . currentTimeMillis ( ) ; m . put ( edu . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_23 , edu . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_23 , edu . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_24 . IDENT_25 , IDENT_22 , v ) ; IDENT_17 . METHOD_11 ( m ) ; expect . put ( new org . apache . accumulo . core . data . METHOD_12 ( row , IDENT_23 , IDENT_23 , IDENT_23 , IDENT_22 , false ) , new org . apache . accumulo . core . data . METHOD_13 ( v ) ) ; if ( ( i OP_0 INT_2 ) == 0 ) { IDENT_3 . METHOD_14 ( t , null , null , true ) ; } if ( ( i OP_0 INT_3 ) == 0 ) { java . util . IDENT_26 < org . apache . hadoop . io . IDENT_27 > IDENT_28 = new java . util . METHOD_15 ( ) ; IDENT_28 . add ( new org . apache . hadoop . io . METHOD_16 ( java . lang . Integer . toString ( ( i / INT_4 ) ) . getBytes ( IDENT_19 . UTF_8 ) ) ) ; IDENT_3 . METHOD_17 ( t , IDENT_28 ) ; } } IDENT_17 . close ( ) ; org . apache . accumulo . core . client . IDENT_29 IDENT_30 = conn . METHOD_18 ( t , IDENT_31 . IDENT_32 , 2 ) ; IDENT_30 . METHOD_19 ( java . util . Collections . METHOD_20 ( new org . apache . accumulo . core . data . METHOD_21 ( ) ) ) ; for ( Map . Entry < org . apache . accumulo . core . data . METHOD_12 , org . apache . accumulo . core . data . METHOD_13 > entry : IDENT_30 ) { actual . put ( entry . getKey ( ) , entry . getValue ( ) ) ; } IDENT_30 . close ( ) ; System . out . println ( ( ( ( STRING_4 + ( expect . size ( ) ) ) + STRING_5 ) + ( actual . size ( ) ) ) ) ; System . out . println ( ( STRING_6 + ( IDENT_3 . METHOD_22 ( t ) ) ) ) ; "<AssertPlaceHolder>" ; } conn . METHOD_2 ( ) . delete ( t ) ; } size ( ) { return IDENT_33 . size ( ) ; }
org . junit . Assert . assertEquals ( expect , actual ) 