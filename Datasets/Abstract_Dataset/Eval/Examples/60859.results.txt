METHOD_0 ( ) { org . eclipse . rap . rwt . internal . remote . IDENT_0 . METHOD_1 ( STRING_0 , null ) ; org . eclipse . rap . json . IDENT_1 properties = new org . eclipse . rap . json . METHOD_2 ( ) . add ( "foo" , "bar" ) ; org . eclipse . rap . rwt . internal . protocol . IDENT_2 message = org . eclipse . rap . rwt . internal . remote . IDENT_0 . METHOD_3 ( org . eclipse . rap . rwt . internal . remote . IDENT_0 . METHOD_4 ( STRING_0 , STRING_1 , properties ) ) ; try { org . eclipse . rap . rwt . internal . remote . IDENT_3 . METHOD_5 ( message ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . IDENT_4 exception ) { java . lang . String expected = STRING_2 ; "<AssertPlaceHolder>" ; } } getMessage ( ) { return message ; }
org . junit . Assert . assertEquals ( expected , exception . getMessage ( ) ) 