METHOD_0 ( ) { org . eclipse . swt . IDENT_0 . IDENT_1 IDENT_2 = org . eclipse . rap . rwt . remote . IDENT_3 . METHOD_1 ( IDENT_4 . IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( org . eclipse . rap . json . IDENT_4 ) { org . eclipse . rap . rwt . internal . util . IDENT_6 . METHOD_2 ( value , "value" ) ; if ( IDENT_4 . IDENT_5 . equals ( value ) ) { return null ; } try { org . eclipse . rap . json . IDENT_7 array = value . METHOD_3 ( ) ; if ( ( array . size ( ) ) != 2 ) { throw new java . lang . IllegalArgumentException ( STRING_0 ) ; } return new org . eclipse . swt . IDENT_0 . METHOD_4 ( array . get ( 0 ) . METHOD_5 ( ) , array . get ( 1 ) . METHOD_5 ( ) ) ; } catch ( java . lang . Exception exception ) { java . lang . String message = STRING_1 + value ; throw new java . lang . IllegalArgumentException ( message , exception ) ; } }
org . junit . Assert . assertNull ( IDENT_2 ) 