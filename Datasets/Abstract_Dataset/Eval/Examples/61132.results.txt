METHOD_0 ( ) { org . eclipse . rap . json . IDENT_0 value = METHOD_1 ( 0 , 1 , 2 ) ; org . eclipse . swt . IDENT_1 . IDENT_2 result = org . eclipse . rap . rwt . remote . IDENT_3 . METHOD_2 ( value ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . eclipse . rap . json . IDENT_0 ) { org . eclipse . rap . rwt . internal . util . IDENT_4 . METHOD_3 ( value , "value" ) ; if ( value . METHOD_4 ( ) ) { return null ; } try { org . eclipse . rap . json . IDENT_5 array = value . METHOD_5 ( ) ; if ( ( ( array . size ( ) ) < 3 ) || ( ( array . size ( ) ) > 4 ) ) { throw new java . lang . IllegalArgumentException ( STRING_0 ) ; } return new org . eclipse . swt . IDENT_1 . METHOD_6 ( array . get ( 0 ) . METHOD_7 ( ) , array . get ( 1 ) . METHOD_7 ( ) , array . get ( 2 ) . METHOD_7 ( ) ) ; } catch ( java . lang . Exception exception ) { java . lang . String message = STRING_1 + value ; throw new java . lang . IllegalArgumentException ( message , exception ) ; } }
org . junit . Assert . assertEquals ( new org . eclipse . swt . IDENT_1 . METHOD_6 ( 0 , 1 , 2 ) , result ) 