METHOD_0 ( ) { short value = org . apache . activemq . artemis . utils . IDENT_0 . METHOD_1 ( ) ; org . apache . activemq . artemis . jms . client . IDENT_1 message = new org . apache . activemq . artemis . jms . client . METHOD_2 ( ) ; message . METHOD_3 ( value ) ; message . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { if ( IDENT_2 ) { throw new javax . jms . METHOD_6 ( STRING_0 ) ; } try { java . lang . Object value = content . get ( position ) ; offset = 0 ; if ( value == null ) { throw new java . lang . METHOD_7 ( STRING_1 ) ; } else if ( value instanceof java . lang . IDENT_3 ) { ( position ) ++ ; return ( ( java . lang . IDENT_3 ) ( value ) ) . METHOD_8 ( ) ; } else if ( value instanceof java . lang . IDENT_4 ) { ( position ) ++ ; return ( ( java . lang . IDENT_4 ) ( value ) ) . METHOD_8 ( ) ; } else if ( value instanceof java . lang . Integer ) { ( position ) ++ ; return ( ( java . lang . Integer ) ( value ) ) . METHOD_8 ( ) ; } else if ( value instanceof java . lang . String ) { int result = java . lang . Integer . METHOD_9 ( ( ( java . lang . String ) ( value ) ) ) ; ( position ) ++ ; return result ; } else { throw new javax . jms . METHOD_10 ( STRING_2 ) ; } } catch ( java . lang . IDENT_5 e ) { throw new javax . jms . METHOD_11 ( "" ) ; } }
org . junit . Assert . assertEquals ( value , message . METHOD_5 ( ) ) 