METHOD_0 ( ) { org . eclipse . swt . IDENT_0 . IDENT_1 [ ] result = IDENT_2 . METHOD_1 ( null , false ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , boolean ) { METHOD_2 ( ) ; org . eclipse . swt . IDENT_0 . IDENT_1 [ ] result = new org . eclipse . swt . IDENT_0 . IDENT_1 [ 0 ] ; if ( IDENT_3 ) { org . eclipse . rap . rwt . internal . IDENT_4 . IDENT_5 IDENT_6 = ( ( org . eclipse . rap . rwt . internal . IDENT_4 . IDENT_5 ) ( org . eclipse . rap . rwt . internal . IDENT_4 . IDENT_7 . METHOD_3 ( STRING_0 , STRING_1 , IDENT_8 . IDENT_9 ) ) ) ; if ( IDENT_10 == null ) { result = new org . eclipse . swt . IDENT_0 . IDENT_1 [ IDENT_6 . IDENT_11 . length ] ; for ( int i = 0 ; i < ( result . length ) ; i ++ ) { result [ i ] = new org . eclipse . swt . IDENT_0 . METHOD_4 ( IDENT_6 . IDENT_11 [ i ] , 0 , org . eclipse . swt . IDENT_12 . IDENT_13 ) ; } } else { int IDENT_14 = 0 ; for ( int i = 0 ; i < ( IDENT_6 . IDENT_11 . length ) ; i ++ ) { if ( IDENT_6 . IDENT_11 [ i ] . startsWith ( IDENT_10 ) ) { IDENT_14 ++ ; } } result = new org . eclipse . swt . IDENT_0 . METHOD_4 [ IDENT_14 ] ; IDENT_14 = 0 ; for ( int i = 0 ; i < ( IDENT_6 . IDENT_11 . length ) ; i ++ ) { if ( IDENT_6 . IDENT_11 [ i ] . startsWith ( IDENT_10 ) ) { result [ ( IDENT_14 ++ ) ] = new org . eclipse . swt . IDENT_0 . METHOD_4 ( IDENT_6 . IDENT_11 [ i ] , 0 , org . eclipse . swt . IDENT_12 . IDENT_13 ) ; } } } } return result ; }
org . junit . Assert . assertEquals ( 0 , result . length ) 