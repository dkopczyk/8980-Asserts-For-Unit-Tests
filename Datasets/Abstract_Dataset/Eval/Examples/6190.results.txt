METHOD_0 ( ) { final int IDENT_0 = 1000 ; java . util . Map < java . lang . String , org . apache . activemq . util . IDENT_1 > map = new java . util . IDENT_2 < java . lang . String , org . apache . activemq . util . IDENT_1 > ( ) ; for ( int i = 0 ; i < IDENT_0 ; i ++ ) { java . lang . String test = new java . lang . String ( ( "test" + i ) ) ; org . apache . activemq . util . IDENT_1 IDENT_3 = new org . apache . activemq . util . METHOD_1 ( test . getBytes ( ) ) ; map . put ( test , IDENT_3 ) ; IDENT_4 . METHOD_2 ( test , IDENT_3 ) ; } IDENT_4 . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } size ( ) { MOD_0 ( this ) { if ( ! ( IDENT_5 ) ) { return 0 ; } } try { return ( IDENT_6 . METHOD_4 ( ) ) + ( IDENT_7 . METHOD_4 ( ) ) ; } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( e ) ; } }
org . junit . Assert . assertEquals ( 0 , IDENT_4 . size ( ) ) 