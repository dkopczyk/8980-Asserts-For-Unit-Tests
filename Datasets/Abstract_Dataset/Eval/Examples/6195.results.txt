METHOD_0 ( ) { org . apache . activemq . util . IDENT_0 out = new org . apache . activemq . util . METHOD_1 ( 8 ) ; out . METHOD_2 ( Long . MAX_VALUE ) ; out . close ( ) ; org . apache . activemq . util . IDENT_1 in = new org . apache . activemq . util . METHOD_3 ( out . METHOD_4 ( ) ) ; long IDENT_2 = in . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { this . read ( IDENT_3 , 0 , 8 ) ; int IDENT_4 = ( ( ( ( ( IDENT_3 [ 0 ] ) & 255 ) << INT_0 ) | ( ( ( IDENT_3 [ 1 ] ) & 255 ) << 16 ) ) | ( ( ( IDENT_3 [ 2 ] ) & 255 ) << 8 ) ) | ( ( IDENT_3 [ 3 ] ) & 255 ) ; int IDENT_5 = ( ( ( ( ( IDENT_3 [ 4 ] ) & 255 ) << INT_0 ) | ( ( ( IDENT_3 [ 5 ] ) & 255 ) << 16 ) ) | ( ( ( IDENT_3 [ 6 ] ) & 255 ) << 8 ) ) | ( ( IDENT_3 [ 7 ] ) & 255 ) ; return ( ( IDENT_4 & INT_1 ) << INT_2 ) | ( IDENT_5 & INT_1 ) ; }
org . junit . Assert . assertEquals ( Long . MAX_VALUE , IDENT_2 ) 