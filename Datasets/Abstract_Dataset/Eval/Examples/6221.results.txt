METHOD_0 ( ) { final boolean [ ] test = new boolean [ ] { false } ; IDENT_0 . METHOD_1 ( new org . apache . activemq . IDENT_1 . METHOD_2 ( ) { @ org . apache . activemq . IDENT_1 . Override public void METHOD_3 ( javax . resource . spi . IDENT_2 IDENT_3 ) { test [ 0 ] = true ; } } ) ; IDENT_4 . METHOD_4 ( ) . METHOD_5 ( ) ; javax . jms . IDENT_5 session = connection . METHOD_6 ( true , 0 ) ; METHOD_7 ( session ) ; session . METHOD_8 ( ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( ) { if ( org . apache . activemq . transaction . IDENT_6 . LOG . METHOD_9 ( ) ) { org . apache . activemq . transaction . IDENT_6 . LOG . debug ( ( ( ( STRING_0 + ( IDENT_7 ) ) + STRING_1 ) + ( size ( ) ) ) ) ; } METHOD_10 ( IDENT_8 . IDENT_9 ) ; context . METHOD_11 ( ) . remove ( IDENT_7 ) ; IDENT_10 . METHOD_8 ( METHOD_12 ( ) ) ; try { METHOD_13 ( ) ; } catch ( java . lang . Throwable e ) { org . apache . activemq . transaction . IDENT_6 . LOG . warn ( STRING_2 , e ) ; javax . transaction . IDENT_11 . IDENT_12 IDENT_13 = new javax . transaction . IDENT_11 . METHOD_14 ( STRING_3 ) ; IDENT_13 . IDENT_14 = javax . transaction . IDENT_11 . METHOD_14 . IDENT_15 ; IDENT_13 . METHOD_15 ( e ) ; throw IDENT_13 ; } }
org . junit . Assert . assertTrue ( test [ 0 ] ) 