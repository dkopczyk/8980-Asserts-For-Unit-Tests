METHOD_0 ( ) { connection = IDENT_0 . METHOD_1 ( ) ; connection . start ( ) ; session = connection . METHOD_2 ( false , IDENT_1 . IDENT_2 ) ; javax . jms . IDENT_3 queue = session . METHOD_3 ( STRING_0 ) ; final java . util . concurrent . IDENT_4 < javax . jms . Message > IDENT_5 = new java . util . concurrent . IDENT_4 < javax . jms . Message > ( ) ; final javax . jms . IDENT_6 IDENT_7 = session . METHOD_4 ( queue ) ; final javax . jms . IDENT_6 IDENT_8 = session . METHOD_4 ( queue ) ; final javax . jms . IDENT_9 IDENT_10 = session . METHOD_5 ( queue ) ; java . lang . Thread IDENT_11 = new java . lang . Thread ( new java . lang . METHOD_6 ( ) { @ org . apache . activemq . IDENT_12 . Override public void run ( ) { try { while ( ( IDENT_13 . get ( ) ) < ( IDENT_14 ) ) { javax . jms . Message message = IDENT_7 . METHOD_7 ( ) ; if ( message != null ) { IDENT_5 . add ( message ) ; } } } catch ( java . lang . Exception e ) { org . apache . activemq . IDENT_12 . IDENT_15 . LOG . error ( STRING_1 , e ) ; } } } ) ; IDENT_11 . start ( ) ; java . lang . Thread IDENT_16 = new java . lang . Thread ( new java . lang . METHOD_6 ( ) { @ org . apache . activemq . IDENT_12 . Override public void run ( ) { try { while ( ( IDENT_13 . get ( ) ) < ( IDENT_14 ) ) { javax . jms . Message message = IDENT_8 . METHOD_8 ( 50 ) ; if ( message != null ) { IDENT_5 . add ( message ) ; } } } catch ( java . lang . Exception e ) { org . apache . activemq . IDENT_12 . IDENT_15 . LOG . error ( STRING_1 , e ) ; } } } ) ; IDENT_16 . start ( ) ; java . lang . Thread IDENT_17 = new java . lang . Thread ( new java . lang . METHOD_6 ( ) { @ org . apache . activemq . IDENT_12 . Override public void run ( ) { try { for ( int i = 0 ; i < ( IDENT_14 ) ; ++ i ) { IDENT_10 . METHOD_9 ( session . METHOD_10 ( STRING_2 ) ) ; TimeUnit . IDENT_18 . sleep ( IDENT_19 . METHOD_11 ( 10 ) ) ; } } catch ( java . lang . Exception e ) { org . apache . activemq . IDENT_12 . IDENT_15 . LOG . error ( STRING_1 , e ) ; } } } ) ; IDENT_17 . start ( ) ; java . lang . Thread IDENT_20 = new java . lang . Thread ( new java . lang . METHOD_6 ( ) { @ org . apache . activemq . IDENT_12 . Override public void run ( ) { try { while ( ( IDENT_13 . get ( ) ) < ( IDENT_14 ) ) { javax . jms . Message message = IDENT_5 . METHOD_12 ( ) ; message . METHOD_13 ( ) ; IDENT_13 . METHOD_14 ( ) ; if ( ( ( IDENT_13 . get ( ) ) OP_0 100 ) == 0 ) { org . apache . activemq . IDENT_12 . IDENT_15 . LOG . info ( ( ( STRING_3 + ( IDENT_13 . get ( ) ) ) + STRING_4 ) ) ; } } } catch ( java . lang . Exception e ) { org . apache . activemq . IDENT_12 . IDENT_15 . LOG . error ( STRING_1 , e ) ; } } } ) ; IDENT_20 . start ( ) ; IDENT_17 . join ( ) ; IDENT_11 . join ( ) ; IDENT_16 . join ( ) ; IDENT_20 . join ( ) ; "<AssertPlaceHolder>" ; } get ( ) { return null ; }
org . junit . Assert . assertEquals ( IDENT_14 , IDENT_13 . get ( ) ) 