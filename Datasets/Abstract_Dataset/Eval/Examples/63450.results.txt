METHOD_0 ( ) { java . lang . String [ ] [ ] IDENT_0 = new java . lang . String [ ] [ ] { new java . lang . String [ ] { STRING_0 , STRING_1 } , new java . lang . String [ ] { STRING_2 , STRING_1 } , new java . lang . String [ ] { STRING_3 , STRING_3 } , new java . lang . String [ ] { STRING_4 , STRING_5 } , new java . lang . String [ ] { STRING_6 , STRING_7 } } ; for ( int i = 0 ; i < ( IDENT_0 . length ) ; i ++ ) { "<AssertPlaceHolder>" ; } } METHOD_1 ( java . lang . String ) { if ( ( IDENT_1 == null ) || ( IDENT_1 . isEmpty ( ) ) ) return "" ; java . util . List < java . lang . String > tokens = org . eclipse . IDENT_2 . core . IDENT_3 . METHOD_2 ( IDENT_1 ) ; java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; for ( java . lang . String string : tokens ) { if ( ( sb . length ( ) ) > 0 ) { sb . append ( " " ) ; } sb . append ( string ) ; } return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_0 [ i ] [ 1 ] , org . eclipse . IDENT_2 . core . IDENT_3 . METHOD_1 ( IDENT_0 [ i ] [ 0 ] ) ) 