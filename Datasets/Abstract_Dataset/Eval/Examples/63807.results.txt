METHOD_0 ( ) { java . lang . String s = "" ; java . io . ByteArrayOutputStream out = new java . io . ByteArrayOutputStream ( ) ; new org . eclipse . IDENT_0 . IDENT_1 . resource . impl . IDENT_2 . METHOD_1 ( out , null ) . METHOD_2 ( s ) ; byte [ ] IDENT_3 = out . toByteArray ( ) ; java . io . ByteArrayInputStream in = new java . io . ByteArrayInputStream ( IDENT_3 ) ; java . lang . String IDENT_4 = new org . eclipse . IDENT_0 . IDENT_1 . resource . impl . IDENT_2 . METHOD_3 ( in , null ) { @ org . eclipse . xtext . builder . IDENT_5 . Override public java . lang . String METHOD_4 ( ) throws java . io . IOException { int length = METHOD_5 ( ) ; if ( length == ( - 1 ) ) { return null ; } else { if ( ( ( IDENT_6 ) == null ) || ( ( IDENT_6 . length ) < length ) ) { IDENT_6 = new char [ length ] ; } IDENT_7 : for ( int i = 0 ; i < length ; ++ i ) { byte value = METHOD_6 ( ) ; if ( value == 0 ) { do { IDENT_6 [ i ] = METHOD_7 ( ) ; } while ( ( ++ i ) < length ) ; break IDENT_7 ; } else { char IDENT_8 = ( ( char ) ( value & 255 ) ) ; IDENT_6 [ i ] = IDENT_8 ; } } return new java . lang . String ( IDENT_6 , 0 , length ) ; } } } . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { int length = METHOD_5 ( ) ; if ( length == ( - 1 ) ) { return null ; } else { if ( ( ( IDENT_6 ) == null ) || ( ( IDENT_6 . length ) < length ) ) { IDENT_6 = new char [ length ] ; } IDENT_7 : for ( int i = 0 ; i < length ; ++ i ) { byte value = METHOD_6 ( ) ; if ( value == 0 ) { do { IDENT_6 [ i ] = METHOD_7 ( ) ; } while ( ( ++ i ) < length ) ; break IDENT_7 ; } else { IDENT_6 [ i ] = ( ( char ) ( value & 255 ) ) ; } } return new java . lang . String ( IDENT_6 , 0 , length ) ; } }
org . junit . Assert . assertEquals ( s , IDENT_4 ) 