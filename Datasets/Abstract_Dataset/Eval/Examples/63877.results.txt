METHOD_0 ( ) { org . eclipse . IDENT_0 . core . IDENT_1 project = METHOD_1 ( "foo" ) ; java . lang . String IDENT_2 = STRING_0 ; org . eclipse . core . resources . IDENT_3 file = project . METHOD_2 ( ) . METHOD_3 ( IDENT_2 ) ; file . create ( getClass ( ) . getResourceAsStream ( IDENT_2 ) , true , new org . eclipse . core . runtime . METHOD_4 ( ) ) ; METHOD_5 ( project , file ) ; final java . util . Set < org . eclipse . core . runtime . IDENT_4 > IDENT_5 = new java . util . HashSet < org . eclipse . core . runtime . IDENT_4 > ( ) ; org . eclipse . xtext . ui . resource . IDENT_6 < java . lang . IDENT_7 > IDENT_8 = new org . eclipse . xtext . ui . resource . IDENT_6 < java . lang . IDENT_7 > ( ) { @ org . eclipse . xtext . ui . tests . core . builder . impl . Override MOD_0 org . eclipse . xtext . ui . tests . core . builder . impl . IDENT_7 METHOD_6 ( org . eclipse . IDENT_0 . core . IDENT_9 IDENT_10 , org . eclipse . xtext . ui . tests . core . builder . impl . IDENT_11 state ) { IDENT_5 . add ( IDENT_10 . METHOD_7 ( ) ) ; return null ; } } ; for ( org . eclipse . IDENT_0 . core . IDENT_12 root : project . METHOD_8 ( ) ) { if ( root . METHOD_9 ( ) . equals ( IDENT_2 ) ) IDENT_8 . METHOD_10 ( root , false ) ; } "<AssertPlaceHolder>" ; } size ( ) { return 1 ; }
org . junit . Assert . assertEquals ( 3 , IDENT_5 . size ( ) ) 