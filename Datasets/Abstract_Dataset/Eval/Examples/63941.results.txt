METHOD_0 ( ) { try { org . eclipse . IDENT_0 . lib . IDENT_1 _builder = new org . eclipse . IDENT_0 . lib . METHOD_1 ( ) ; _builder . append ( STRING_0 ) ; org . eclipse . xtext . IDENT_2 . lib . IDENT_3 < java . lang . String , java . lang . String > IDENT_4 = org . eclipse . xtext . IDENT_2 . lib . IDENT_3 . < java . lang . String , java . lang . String > of ( STRING_1 , _builder . toString ( ) ) ; org . eclipse . IDENT_0 . lib . METHOD_1 IDENT_5 = new org . eclipse . IDENT_0 . lib . METHOD_1 ( ) ; IDENT_5 . append ( STRING_2 ) ; org . eclipse . xtext . IDENT_2 . lib . IDENT_3 < java . lang . String , java . lang . String > IDENT_6 = org . eclipse . xtext . IDENT_2 . lib . IDENT_3 . < java . lang . String , java . lang . String > of ( STRING_3 , IDENT_5 . toString ( ) ) ; final org . eclipse . IDENT_7 . IDENT_8 . resource . IDENT_9 IDENT_10 = this . compiler . METHOD_2 ( IDENT_4 , IDENT_6 ) ; final java . util . List < ? extends org . eclipse . IDENT_7 . IDENT_8 . resource . IDENT_11 > resources = METHOD_2 . METHOD_3 ( ) ; java . util . ArrayList < org . eclipse . IDENT_7 . IDENT_8 . resource . IDENT_11 > IDENT_12 = new java . util . ArrayList < org . eclipse . IDENT_7 . IDENT_8 . resource . IDENT_11 > ( resources ) ; for ( final org . eclipse . IDENT_7 . IDENT_8 . resource . IDENT_11 res : IDENT_12 ) { { final java . util . List < org . eclipse . xtext . validation . IDENT_13 > IDENT_14 = this . validator . validate ( res , IDENT_15 . IDENT_16 , IDENT_17 . IDENT_18 ) ; "<AssertPlaceHolder>" ; } } } catch ( java . lang . Throwable IDENT_19 ) { throw org . eclipse . xtext . IDENT_2 . lib . IDENT_20 . METHOD_4 ( IDENT_19 ) ; } } toString ( ) { org . eclipse . xtext . IDENT_2 . lib . util . IDENT_21 b = new org . eclipse . xtext . IDENT_2 . lib . util . METHOD_5 ( this ) ; b . add ( STRING_4 , this . IDENT_22 ) ; b . add ( STRING_5 , this . IDENT_23 ) ; b . add ( STRING_6 , this . IDENT_24 ) ; b . add ( STRING_7 , this . IDENT_25 ) ; b . add ( STRING_8 , this . IDENT_26 ) ; return b . toString ( ) ; }
org . junit . Assert . assertTrue ( IDENT_14 . toString ( ) , IDENT_14 . isEmpty ( ) ) 