METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new com . IDENT_0 . IDENT_1 . METHOD_1 ( ) . parse ( com . IDENT_0 . IDENT_1 . IDENT_4 . METHOD_2 ( STRING_0 ) ) ; java . util . List < com . IDENT_0 . IDENT_1 . IDENT_5 > IDENT_6 = IDENT_3 . METHOD_3 ( ) ; java . util . List < java . lang . String > IDENT_7 = new java . util . ArrayList < java . lang . String > ( ) ; for ( com . IDENT_0 . IDENT_1 . IDENT_5 IDENT_8 : IDENT_6 ) { if ( ! ( IDENT_8 . METHOD_4 ( ) ) ) IDENT_7 . add ( IDENT_8 . METHOD_5 ( ) ) ; } "<AssertPlaceHolder>" ; } METHOD_6 ( ) { java . util . List < java . lang . String > IDENT_7 = new java . util . ArrayList < java . lang . String > ( ) ; for ( com . IDENT_0 . IDENT_1 . IDENT_5 IDENT_8 : IDENT_6 ) { if ( ! ( IDENT_8 . METHOD_4 ( ) ) ) IDENT_7 . add ( IDENT_8 . METHOD_5 ( ) ) ; } return org . apache . commons . lang3 . StringUtils . METHOD_7 ( org . apache . commons . lang3 . StringUtils . join ( IDENT_7 , "\n" ) , null ) ; }
org . junit . Assert . assertEquals ( org . apache . commons . lang3 . StringUtils . METHOD_7 ( org . apache . commons . lang3 . StringUtils . join ( IDENT_7 , "\n" ) , null ) , IDENT_3 . METHOD_6 ( ) ) 