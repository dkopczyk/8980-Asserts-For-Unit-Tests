METHOD_0 ( ) { System . out . println ( STRING_0 ) ; IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = IDENT_0 . IDENT_4 . METHOD_1 ( INT_0 , new java . util . METHOD_2 ( 2 ) ) ; IDENT_0 . IDENT_1 . IDENT_2 IDENT_5 = IDENT_0 . IDENT_4 . METHOD_1 ( 50 , new java . util . METHOD_2 ( 3 ) ) ; IDENT_0 . IDENT_6 . linear . IDENT_7 . IDENT_8 IDENT_9 = new IDENT_0 . IDENT_6 . linear . IDENT_7 . METHOD_3 ( new IDENT_0 . IDENT_6 . linear . IDENT_7 . METHOD_4 ( FLOAT_0 ) , new IDENT_0 . IDENT_10 . IDENT_11 . METHOD_5 ( FLOAT_1 ) , FLOAT_2 , IDENT_12 . IDENT_13 . IDENT_14 , 50 ) ; IDENT_9 . METHOD_6 ( 10 ) ; IDENT_9 . METHOD_7 ( IDENT_3 , true ) ; double errors = 0 ; for ( int i = 0 ; i < ( IDENT_5 . size ( ) ) ; i ++ ) errors += java . lang . Math . METHOD_8 ( ( ( IDENT_5 . METHOD_9 ( i ) ) - ( IDENT_9 . METHOD_10 ( IDENT_5 . METHOD_11 ( i ) ) ) ) , 2 ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_15 . size ( ) ; }
org . junit . Assert . assertTrue ( ( ( errors / ( IDENT_5 . size ( ) ) ) < 1 ) ) 