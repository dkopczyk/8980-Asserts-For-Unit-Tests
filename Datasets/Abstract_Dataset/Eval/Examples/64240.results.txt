METHOD_0 ( ) { System . out . println ( STRING_0 ) ; IDENT_0 . linear . IDENT_1 . IDENT_2 . List < IDENT_0 . linear . IDENT_3 < IDENT_0 . linear . IDENT_4 , java . lang . Integer > > IDENT_5 = new IDENT_0 . linear . IDENT_1 . IDENT_2 . ArrayList < IDENT_0 . linear . IDENT_3 < IDENT_0 . linear . IDENT_4 , java . lang . Integer > > ( ) ; IDENT_0 . linear . IDENT_1 . IDENT_2 . IDENT_6 IDENT_7 = IDENT_0 . utils . random . IDENT_8 . METHOD_1 ( ) ; for ( int i = 0 ; i < 100 ; i ++ ) { IDENT_0 . linear . IDENT_9 IDENT_10 = new IDENT_0 . linear . METHOD_2 ( 20 ) ; for ( int j = 0 ; j < ( IDENT_10 . length ( ) ) ; j ++ ) IDENT_10 . set ( j , IDENT_7 . METHOD_3 ( ) ) ; IDENT_10 . METHOD_4 ( ) ; IDENT_5 . add ( new IDENT_0 . linear . IDENT_3 < IDENT_0 . linear . IDENT_4 , java . lang . Integer > ( IDENT_10 , i ) ) ; } IDENT_0 . linear . IDENT_11 . IDENT_12 IDENT_13 = new IDENT_0 . linear . IDENT_11 . METHOD_5 ( ) ; IDENT_0 . linear . IDENT_1 . IDENT_14 < IDENT_0 . linear . IDENT_3 < IDENT_0 . linear . IDENT_4 , java . lang . Integer > > IDENT_15 = new IDENT_0 . linear . IDENT_1 . IDENT_14 < IDENT_0 . linear . IDENT_3 < IDENT_0 . linear . IDENT_4 , java . lang . Integer > > ( IDENT_13 , IDENT_5 ) ; IDENT_0 . linear . IDENT_1 . IDENT_2 . IDENT_16 < IDENT_0 . linear . IDENT_3 < IDENT_0 . linear . IDENT_4 , java . lang . Integer > > IDENT_17 = new IDENT_0 . linear . IDENT_1 . IDENT_2 . IDENT_16 < IDENT_0 . linear . IDENT_3 < IDENT_0 . linear . IDENT_4 , java . lang . Integer > > ( IDENT_5 , 16 , true ) ; IDENT_0 . math . IDENT_18 IDENT_19 = new IDENT_0 . math . METHOD_6 ( ) ; for ( IDENT_0 . linear . IDENT_4 v : IDENT_5 ) IDENT_19 . add ( IDENT_15 . search ( v , INT_0 ) . get ( 10 ) . METHOD_7 ( ) ) ; double IDENT_20 = ( IDENT_19 . METHOD_8 ( ) ) + ( ( IDENT_19 . METHOD_9 ( ) ) * 2 ) ; IDENT_0 . linear . IDENT_1 . IDENT_2 . Set < java . lang . Integer > IDENT_21 = new IDENT_0 . utils . METHOD_10 ( ) ; for ( IDENT_0 . linear . IDENT_4 v : IDENT_5 ) { IDENT_0 . linear . IDENT_1 . IDENT_2 . List < ? extends IDENT_0 . linear . IDENT_3 < IDENT_0 . linear . IDENT_3 < IDENT_0 . linear . IDENT_4 , java . lang . Integer > , java . lang . Double > > IDENT_22 = IDENT_15 . search ( v , IDENT_20 ) ; IDENT_0 . linear . IDENT_1 . IDENT_2 . List < ? extends IDENT_0 . linear . IDENT_3 < IDENT_0 . linear . IDENT_3 < IDENT_0 . linear . IDENT_4 , java . lang . Integer > , java . lang . Double > > IDENT_23 = IDENT_17 . search ( v , IDENT_20 ) ; IDENT_21 . METHOD_11 ( ) ; for ( IDENT_0 . linear . IDENT_3 < IDENT_0 . linear . IDENT_3 < IDENT_0 . linear . IDENT_4 , java . lang . Integer > , java . lang . Double > IDENT_24 : IDENT_22 ) IDENT_21 . add ( IDENT_24 . METHOD_12 ( ) . METHOD_7 ( ) ) ; int IDENT_25 = 0 ; for ( IDENT_0 . linear . IDENT_3 < IDENT_0 . linear . IDENT_3 < IDENT_0 . linear . IDENT_4 , java . lang . Integer > , java . lang . Double > IDENT_24 : IDENT_23 ) if ( IDENT_21 . contains ( IDENT_24 . METHOD_12 ( ) . METHOD_7 ( ) ) ) IDENT_25 ++ ; "<AssertPlaceHolder>" ; } } size ( ) { return IDENT_26 . size ( ) ; }
org . junit . Assert . assertTrue ( ( IDENT_25 >= ( ( IDENT_21 . size ( ) ) / 2 ) ) ) 