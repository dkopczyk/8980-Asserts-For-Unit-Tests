METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . hbase . model . IDENT_2 IDENT_3 = new com . IDENT_0 . IDENT_1 . hbase . model . METHOD_1 ( ) ; IDENT_3 . setName ( STRING_0 ) ; IDENT_3 . METHOD_2 ( STRING_1 ) ; com . IDENT_0 . IDENT_1 . hbase . model . IDENT_4 IDENT_5 = new com . IDENT_0 . IDENT_1 . hbase . model . METHOD_3 ( ) ; IDENT_5 . METHOD_4 ( IDENT_3 ) ; IDENT_5 . METHOD_5 ( STRING_2 ) ; IDENT_5 . METHOD_6 ( STRING_3 ) ; java . util . List < java . lang . String > IDENT_6 = new java . util . ArrayList < java . lang . String > ( ) ; IDENT_6 . add ( STRING_4 ) ; com . IDENT_0 . IDENT_1 . mapper . IDENT_7 IDENT_8 = new com . IDENT_0 . IDENT_1 . mapper . METHOD_7 ( IDENT_6 ) ; com . IDENT_0 . IDENT_1 . mapper . IDENT_9 resolver = new com . IDENT_0 . IDENT_1 . mapper . METHOD_8 ( IDENT_8 ) ; com . IDENT_0 . IDENT_1 . mapper . IDENT_10 IDENT_11 = resolver . METHOD_9 ( STRING_5 , com . IDENT_0 . IDENT_1 . hbase . model . METHOD_3 . class ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( java . lang . Class , java . lang . String ) { java . util . Map < java . lang . String , com . IDENT_0 . IDENT_1 . mapper . IDENT_10 > IDENT_12 = IDENT_13 . get ( IDENT_14 . METHOD_10 ( ) ) ; if ( ( IDENT_12 == null ) || ( ( IDENT_12 . size ( ) ) == 0 ) ) { return null ; } return IDENT_12 . get ( IDENT_15 . METHOD_11 ( ) ) ; }
org . junit . Assert . assertNotNull ( IDENT_11 ) 