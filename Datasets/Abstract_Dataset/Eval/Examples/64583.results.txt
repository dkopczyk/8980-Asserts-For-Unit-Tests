METHOD_0 ( ) { java . lang . String IDENT_0 = METHOD_1 ( ) ; net . sourceforge . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = net . sourceforge . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_2 ( IDENT_0 , getClass ( ) ) ; net . sourceforge . IDENT_1 . IDENT_2 . IDENT_7 . meta . IDENT_8 IDENT_9 = IDENT_5 . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { for ( java . lang . String IDENT_10 : net . sourceforge . IDENT_1 . IDENT_2 . IDENT_7 . meta . IDENT_11 . IDENT_12 ) { if ( METHOD_5 ( ) . contains ( IDENT_10 ) ) { return net . sourceforge . IDENT_1 . IDENT_2 . IDENT_13 . IDENT_14 . IDENT_15 ; } } for ( net . sourceforge . IDENT_1 . IDENT_2 . IDENT_13 . IDENT_14 version : net . sourceforge . IDENT_1 . IDENT_2 . IDENT_13 . IDENT_14 . values ( ) ) { if ( METHOD_5 ( ) . contains ( version . METHOD_6 ( ) ) ) { return version ; } } if ( net . sourceforge . IDENT_1 . IDENT_2 . IDENT_7 . meta . IDENT_11 . log . METHOD_7 ( ) ) { net . sourceforge . IDENT_1 . IDENT_2 . IDENT_7 . meta . IDENT_11 . log . debug ( ( ( ( ( ( ( ( ( STRING_0 + ( net . sourceforge . IDENT_1 . IDENT_16 . METHOD_4 ( getClass ( ) ) ) ) + STRING_1 ) + ( METHOD_5 ( ) ) ) + STRING_2 ) + STRING_3 ) + ( com . google . common . base . IDENT_17 . METHOD_8 ( " " ) . join ( net . sourceforge . IDENT_1 . IDENT_2 . IDENT_13 . IDENT_14 . values ( ) ) ) ) + STRING_2 ) + STRING_4 ) ) ; } return net . sourceforge . IDENT_1 . IDENT_2 . IDENT_13 . IDENT_14 . IDENT_18 ; }
org . junit . Assert . assertEquals ( IDENT_14 . IDENT_15 , IDENT_9 . METHOD_4 ( ) ) 