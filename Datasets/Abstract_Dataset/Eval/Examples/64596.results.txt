METHOD_0 ( ) { java . util . List < net . sourceforge . IDENT_0 . IDENT_1 . IDENT_2 > elements = com . google . common . collect . ImmutableList . of ( new net . sourceforge . IDENT_0 . IDENT_1 . METHOD_1 ( STRING_0 , true ) , new net . sourceforge . IDENT_0 . IDENT_1 . METHOD_1 ( STRING_1 3 , false ) , new net . sourceforge . IDENT_0 . IDENT_1 . METHOD_1 ( STRING_1 1 , true ) , new net . sourceforge . IDENT_0 . IDENT_1 . METHOD_1 ( STRING_2 , true ) , new net . sourceforge . IDENT_0 . IDENT_1 . METHOD_1 ( STRING_1 , true ) , new net . sourceforge . IDENT_0 . IDENT_1 . METHOD_1 ( STRING_3 , true ) , new net . sourceforge . IDENT_0 . IDENT_1 . METHOD_1 ( STRING_4 , true ) , new net . sourceforge . IDENT_0 . IDENT_1 . METHOD_1 ( STRING_5 , true ) , new net . sourceforge . IDENT_0 . IDENT_1 . METHOD_1 ( STRING_6 , true ) , new net . sourceforge . IDENT_0 . IDENT_1 . METHOD_1 ( STRING_1 4 , false ) , new net . sourceforge . IDENT_0 . IDENT_1 . METHOD_1 ( STRING_1 5 , false ) ) ; java . lang . String IDENT_3 = STRING_7 ; java . util . Map < java . lang . String , java . lang . String > result = net . sourceforge . IDENT_0 . IDENT_1 . METHOD_2 ( IDENT_3 , elements , STRING_8 , STRING_1 0 ) ; java . util . Map < java . lang . String , java . lang . String > expected = com . google . common . collect . ImmutableMap . < java . lang . String , java . lang . String > builder ( ) . put ( STRING_9 , STRING_8 ) . put ( STRING_1 2 , STRING_8 ) . build ( ) ; "<AssertPlaceHolder>" ; } build ( ) { net . sourceforge . IDENT_0 . IDENT_4 . IDENT_5 IDENT_6 = new net . sourceforge . IDENT_0 . IDENT_4 . METHOD_3 ( ) . with ( METHOD_4 ( uri ( STRING_10 ) ) ) ; com . google . common . collect . IDENT_7 . Builder < java . lang . String > IDENT_8 = com . google . common . collect . IDENT_7 . builder ( ) ; for ( Map . Entry < java . lang . String , java . lang . String > param : params . build ( ) . entrySet ( ) ) { java . lang . String key = param . getKey ( ) ; com . github . IDENT_9 . IDENT_10 . IDENT_11 < java . lang . String [ ] > query = query ( key ) ; IDENT_6 . with ( eq ( query , param . getValue ( ) ) ) ; IDENT_8 . add ( key ) ; } IDENT_6 . with ( new net . sourceforge . IDENT_0 . IDENT_4 . IDENT_12 . METHOD_5 ( IDENT_8 . build ( ) ) ) ; return IDENT_6 . build ( ) ; }
org . junit . Assert . assertEquals ( expected , result ) 