METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; IDENT_1 = new net . sourceforge . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( client ) { @ net . sourceforge . IDENT_2 . IDENT_3 . IDENT_4 . Override public < T extends net . sourceforge . IDENT_2 . core . IDENT_5 . IDENT_6 > T METHOD_2 ( T IDENT_7 ) { if ( IDENT_7 instanceof net . sourceforge . IDENT_2 . IDENT_3 . IDENT_5 . IDENT_8 . IDENT_9 ) { net . sourceforge . IDENT_2 . IDENT_3 . IDENT_5 . IDENT_8 . IDENT_9 IDENT_10 = mock ( net . sourceforge . IDENT_2 . IDENT_3 . IDENT_5 . IDENT_8 . IDENT_9 . class ) ; com . google . common . collect . ImmutableList < net . sourceforge . IDENT_2 . core . IDENT_11 . IDENT_12 > IDENT_13 = com . google . common . collect . ImmutableList . of ( new net . sourceforge . IDENT_2 . core . IDENT_11 . METHOD_3 ( IDENT_0 ) ) ; when ( IDENT_10 . asList ( ) ) . thenReturn ( IDENT_13 ) ; when ( IDENT_10 . METHOD_4 ( ) ) . METHOD_5 ( ) ; return ( ( T ) ( IDENT_10 ) ) ; } else if ( IDENT_7 instanceof net . sourceforge . IDENT_2 . IDENT_3 . IDENT_5 . meta . IDENT_14 ) { return IDENT_7 ; } else { org . junit . Assert . fail ( IDENT_7 . getClass ( ) . METHOD_6 ( ) ) ; return null ; } } } ; net . sourceforge . IDENT_2 . core . IDENT_11 . METHOD_3 result = IDENT_1 . METHOD_7 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( ) { if ( ! ( IDENT_0 . METHOD_9 ( ) ) ) { IDENT_0 = com . google . common . base . Optional . METHOD_10 ( IDENT_15 . METHOD_2 ( this ) . METHOD_8 ( ) ) ; } return IDENT_0 . get ( ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , result . METHOD_8 ( ) ) 