METHOD_0 ( ) { java . sql . IDENT_0 IDENT_1 = METHOD_1 ( ) . METHOD_2 ( ( ( ( STRING_0 + ( IDENT_2 . IDENT_3 ) ) + STRING_1 ) + ( IDENT_2 . IDENT_4 ) ) ) ; ch . IDENT_5 . data . Query < ch . IDENT_5 . data . IDENT_2 > query = new ch . IDENT_5 . data . Query < ch . IDENT_5 . data . IDENT_2 > ( ch . IDENT_5 . data . IDENT_2 . class ) ; java . util . ArrayList < java . lang . String > result = query . execute ( IDENT_1 , new java . lang . String [ 0 ] ) ; int IDENT_6 = result . size ( ) ; ch . IDENT_5 . data . IDENT_2 IDENT_7 = new ch . IDENT_5 . data . METHOD_3 ( STRING_2 , STRING_3 ) ; result = query . execute ( IDENT_1 , new java . lang . String [ 0 ] ) ; METHOD_1 ( ) . METHOD_4 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; IDENT_7 . delete ( ) ; } size ( ) { try { ch . IDENT_8 . tools . IDENT_9 . IDENT_10 IDENT_11 = ch . IDENT_5 . data . IDENT_12 . METHOD_5 ( ) . METHOD_6 ( ) ; java . lang . String res = IDENT_11 . METHOD_7 ( ( STRING_4 + ( template . METHOD_8 ( ) ) ) ) ; ch . IDENT_5 . data . IDENT_12 . METHOD_5 ( ) . METHOD_9 ( IDENT_11 ) ; return java . lang . Integer . METHOD_10 ( res ) ; } catch ( java . lang . Exception ex ) { ch . IDENT_8 . tools . IDENT_13 . METHOD_11 ( ex ) ; return INT_0 ; } }
org . junit . Assert . assertEquals ( ( IDENT_6 + 1 ) , result . size ( ) ) 