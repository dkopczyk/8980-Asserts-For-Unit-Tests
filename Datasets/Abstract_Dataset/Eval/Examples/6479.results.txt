METHOD_0 ( ) { java . util . Map < java . lang . String , java . util . Map < java . lang . String , java . lang . String > > properties = new java . util . HashMap ( ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_0 = new java . util . HashMap ( ) ; IDENT_0 . put ( STRING_0 , STRING_1 ) ; properties . put ( STRING_2 , IDENT_0 ) ; java . util . Map < java . lang . String , java . util . Map < java . lang . String , java . lang . String > > IDENT_1 = new java . util . HashMap ( ) ; org . apache . ambari . server . IDENT_2 . Configuration IDENT_3 = new org . apache . ambari . server . IDENT_2 . Configuration ( IDENT_1 , java . util . Collections . METHOD_1 ( ) ) ; org . apache . ambari . server . IDENT_2 . Configuration IDENT_4 = new org . apache . ambari . server . IDENT_2 . Configuration ( properties , java . util . Collections . METHOD_1 ( ) , IDENT_3 ) ; java . util . Collection < java . lang . String > IDENT_5 = new java . util . HashSet ( ) ; java . util . Collection < java . lang . String > IDENT_6 = new java . util . HashSet ( ) ; IDENT_5 . add ( STRING_3 ) ; IDENT_6 . add ( STRING_3 ) ; org . apache . ambari . server . controller . internal . IDENT_7 . IDENT_8 IDENT_9 = new org . apache . ambari . server . controller . internal . IDENT_7 . METHOD_2 ( STRING_4 , IDENT_5 , java . util . Collections . METHOD_3 ( STRING_5 ) ) ; org . apache . ambari . server . controller . internal . IDENT_7 . METHOD_2 IDENT_10 = new org . apache . ambari . server . controller . internal . IDENT_7 . METHOD_2 ( STRING_6 , IDENT_5 , java . util . Collections . METHOD_3 ( STRING_7 ) ) ; java . util . Collection < org . apache . ambari . server . controller . internal . IDENT_7 . METHOD_2 > IDENT_11 = new java . util . METHOD_4 ( ) ; IDENT_11 . add ( IDENT_9 ) ; IDENT_11 . add ( IDENT_10 ) ; org . apache . ambari . server . IDENT_2 . IDENT_12 IDENT_2 = METHOD_5 ( IDENT_13 , IDENT_4 , IDENT_11 ) ; org . apache . ambari . server . controller . internal . IDENT_14 IDENT_15 = new org . apache . ambari . server . controller . internal . METHOD_6 ( IDENT_2 ) ; IDENT_15 . METHOD_7 ( ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( java . util . Map , java . lang . String ) { if ( ( property == null ) || ( IDENT_16 == null ) ) { return null ; } java . lang . Object result = IDENT_16 ; try { for ( java . lang . String key : property . split ( "/" ) ) { result = ( ( java . util . Map ) ( result ) ) . get ( key ) ; } } catch ( java . lang . IDENT_17 e ) { java . lang . String msg = java . lang . String . format ( STRING_8 , property ) ; org . apache . ambari . server . controller . internal . IDENT_18 . LOG . error ( msg , e ) ; throw new org . apache . ambari . server . controller . spi . METHOD_9 ( msg , e ) ; } return result ; }
org . junit . Assert . assertEquals ( STRING_1 , IDENT_4 . METHOD_8 ( STRING_2 , STRING_0 ) ) 