METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . common . domain . IDENT_2 IDENT_3 = new org . IDENT_0 . IDENT_1 . common . domain . METHOD_1 ( ) ; org . IDENT_0 . IDENT_1 . common . service . IDENT_4 IDENT_5 = mock ( org . IDENT_0 . IDENT_1 . common . service . IDENT_4 . class ) ; org . IDENT_0 . IDENT_1 . IDENT_6 . web . IDENT_7 . IDENT_8 controller = new org . IDENT_0 . IDENT_1 . IDENT_6 . web . IDENT_7 . METHOD_2 ( ) ; controller . METHOD_3 ( IDENT_5 ) ; when ( IDENT_5 . METHOD_4 ( 1L , 1L , METHOD_5 ( ) ) ) . thenReturn ( IDENT_3 ) ; org . springframework . ui . IDENT_9 model = new org . springframework . ui . METHOD_6 ( ) ; controller . METHOD_7 ( 1L , 1L , 1L , model ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( java . lang . Long , java . lang . Long , java . lang . Long , org . springframework . ui . METHOD_6 ) { org . IDENT_0 . IDENT_1 . common . domain . METHOD_1 IDENT_10 = IDENT_5 . METHOD_4 ( IDENT_11 , IDENT_12 , IDENT_13 ) ; org . IDENT_0 . IDENT_1 . common . domain . METHOD_1 x = IDENT_14 . METHOD_4 ( IDENT_13 , org . IDENT_0 . IDENT_1 . common . domain . METHOD_1 . class ) ; org . IDENT_0 . IDENT_1 . common . domain . METHOD_1 IDENT_15 = new org . IDENT_0 . IDENT_1 . common . domain . METHOD_1 ( ) ; IDENT_15 . METHOD_8 ( IDENT_10 ) ; java . util . Iterator < org . IDENT_0 . IDENT_1 . common . domain . IDENT_16 > it = IDENT_15 . METHOD_9 ( ) . iterator ( ) ; while ( it . hasNext ( ) ) { org . IDENT_0 . IDENT_1 . common . domain . IDENT_16 IDENT_17 = it . next ( ) ; java . util . Iterator < org . IDENT_0 . IDENT_1 . common . domain . IDENT_18 > IDENT_19 = IDENT_17 . METHOD_10 ( ) . iterator ( ) ; while ( IDENT_19 . hasNext ( ) ) { org . IDENT_0 . IDENT_1 . common . domain . IDENT_18 IDENT_20 = IDENT_19 . next ( ) ; IDENT_20 . METHOD_11 ( ) ; } } model . put ( STRING_0 , IDENT_15 ) ; return STRING_1 ; }
org . junit . Assert . assertEquals ( IDENT_3 , model . get ( STRING_0 ) ) 