METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . collection . buffer . IDENT_2 < ? > buf = com . IDENT_0 . IDENT_1 . collection . buffer . IDENT_3 . METHOD_1 ( INT_0 ) ; boolean [ ] array = new boolean [ ] { true , false , false , true , true , true } ; com . IDENT_0 . IDENT_4 . IDENT_5 IDENT_6 = new com . IDENT_0 . IDENT_4 . METHOD_2 ( ) ; IDENT_6 . serialize ( array , buf . METHOD_3 ( ) ) ; byte [ ] IDENT_7 = buf . toArray ( ) ; java . nio . ByteBuffer buffer = java . nio . ByteBuffer . METHOD_1 ( IDENT_7 . length ) ; buffer . put ( IDENT_7 ) . METHOD_4 ( ) ; boolean [ ] result = ( ( boolean [ ] ) ( IDENT_6 . METHOD_5 ( buffer ) ) ) ; for ( int i = 0 ; i < ( array . length ) ; i ++ ) { "<AssertPlaceHolder>" ; } } METHOD_5 ( java . nio . ByteBuffer ) { collect . METHOD_3 ( ) ; IDENT_8 . METHOD_3 ( ) ; if ( ( buffer . get ( ) ) != ( com . IDENT_0 . IDENT_4 . METHOD_2 . version ) ) { throw new com . IDENT_0 . IDENT_1 . exception . METHOD_6 ( STRING_0 ) ; } return ( ( T ) ( METHOD_7 ( buffer ) ) ) ; }
org . junit . Assert . assertEquals ( array [ i ] , result [ i ] ) 