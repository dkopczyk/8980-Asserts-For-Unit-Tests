test ( ) { eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new eu . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_0 ( STRING_0 . getBytes ( ) ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . IDENT_6 IDENT_7 = new eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . METHOD_1 ( ) ; IDENT_7 . METHOD_2 ( ) . METHOD_3 ( new java . util . Date ( ) ) ; IDENT_7 . METHOD_4 ( METHOD_5 ( ) ) ; IDENT_7 . METHOD_6 ( METHOD_7 ( ) ) ; IDENT_7 . METHOD_8 ( IDENT_8 . IDENT_9 ) ; IDENT_7 . METHOD_9 ( IDENT_10 . IDENT_11 ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . IDENT_12 . IDENT_13 service = new eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . IDENT_12 . METHOD_10 ( METHOD_11 ( ) ) ; service . METHOD_12 ( METHOD_13 ( ) ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_14 IDENT_15 = service . METHOD_14 ( IDENT_4 , IDENT_7 ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_16 IDENT_17 = METHOD_15 ( ) . METHOD_16 ( IDENT_15 , IDENT_7 . METHOD_17 ( ) , METHOD_18 ( ) ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_18 = service . METHOD_19 ( IDENT_4 , IDENT_7 , IDENT_17 ) ; IDENT_7 . METHOD_9 ( IDENT_10 . IDENT_19 ) ; IDENT_18 = service . METHOD_20 ( IDENT_18 , IDENT_7 ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . validation . IDENT_20 validator = eu . IDENT_0 . IDENT_1 . IDENT_2 . validation . IDENT_20 . METHOD_21 ( IDENT_18 ) ; validator . METHOD_22 ( METHOD_11 ( ) ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . validation . IDENT_21 . IDENT_22 report = validator . METHOD_23 ( ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . validation . IDENT_21 . IDENT_23 . IDENT_24 IDENT_25 = report . METHOD_24 ( ) ; java . lang . String IDENT_26 = IDENT_25 . METHOD_25 ( ) ; for ( eu . IDENT_0 . IDENT_1 . IDENT_2 . validation . IDENT_21 . IDENT_23 . IDENT_27 IDENT_23 : IDENT_25 . METHOD_26 ( IDENT_26 ) ) { java . util . List < eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_28 . IDENT_25 . IDENT_29 > IDENT_30 = IDENT_23 . METHOD_27 ( ) ; boolean found = false ; for ( eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_28 . IDENT_25 . IDENT_29 IDENT_31 : IDENT_30 ) { if ( ( ( eu . IDENT_0 . IDENT_1 . IDENT_2 . validation . IDENT_32 . IDENT_33 ) == ( IDENT_31 . METHOD_28 ( ) ) ) && ( IDENT_26 . equals ( IDENT_31 . getId ( ) ) ) ) { found = true ; } } "<AssertPlaceHolder>" ; } } getId ( ) { if ( ( IDENT_26 ) == null ) { java . lang . String IDENT_34 = eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_35 . IDENT_36 . METHOD_29 ( IDENT_37 ) ; if ( IDENT_34 != null ) { IDENT_26 = IDENT_34 ; } else { final eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_38 . IDENT_39 IDENT_40 = METHOD_30 ( ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_41 IDENT_42 = ( IDENT_40 == null ) ? null : IDENT_40 . METHOD_31 ( ) ; IDENT_26 = eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_43 . METHOD_32 ( METHOD_33 ( ) , IDENT_42 ) ; } } return IDENT_26 ; }
org . junit . Assert . assertTrue ( found ) 