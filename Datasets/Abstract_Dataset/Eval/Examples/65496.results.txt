test ( ) { java . util . Map < java . lang . String , eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 > IDENT_6 = new java . util . HashMap < java . lang . String , eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 > ( ) ; IDENT_6 . put ( STRING_0 , new eu . IDENT_0 . IDENT_1 . IDENT_2 . client . IDENT_4 . METHOD_0 ( STRING_1 ) ) ; IDENT_6 . put ( STRING_2 , new eu . IDENT_0 . IDENT_1 . IDENT_2 . client . IDENT_4 . METHOD_0 ( STRING_3 ) ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_7 IDENT_8 = new eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( ) ; IDENT_8 . METHOD_2 ( IDENT_6 ) ; final eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 IDENT_10 = eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 . IDENT_11 ; final byte [ ] IDENT_12 = STRING_4 . getBytes ( STRING_5 ) ; final byte [ ] IDENT_13 = eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_14 . METHOD_3 ( IDENT_10 , IDENT_12 ) ; final org . IDENT_15 . IDENT_4 . IDENT_16 IDENT_17 = IDENT_8 . METHOD_4 ( IDENT_10 , IDENT_13 ) ; System . out . println ( eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_14 . METHOD_5 ( IDENT_17 . METHOD_6 ( ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( ) { try { if ( ( IDENT_18 ) != null ) { final org . IDENT_15 . IDENT_19 . IDENT_20 . IDENT_21 IDENT_22 = eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_23 . METHOD_7 ( IDENT_18 ) ; return IDENT_22 . METHOD_6 ( ) ; } else { throw new eu . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_8 ( STRING_6 ) ; } } catch ( java . io . IOException e ) { throw new eu . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_8 ( ( STRING_7 + ( e . getMessage ( ) ) ) , e ) ; } }
org . junit . Assert . assertNotNull ( IDENT_17 ) 