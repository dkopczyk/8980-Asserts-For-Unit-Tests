METHOD_0 ( ) { final java . util . List < org . IDENT_0 . module . index . dom . IDENT_1 > IDENT_2 = IDENT_3 . METHOD_1 ( ) ; org . IDENT_0 . module . index . dom . IDENT_4 index = IDENT_5 . IDENT_6 . METHOD_2 ( IDENT_7 ) ; final java . util . List < org . IDENT_0 . module . index . dom . IDENT_1 > IDENT_8 = METHOD_1 . stream ( ) . filter ( ( value ) -> ( value . METHOD_3 ( ) . METHOD_4 ( ) ) == index ) . METHOD_5 ( ( IDENT_9 , IDENT_10 ) -> IDENT_10 . METHOD_6 ( ) . compareTo ( IDENT_9 . METHOD_6 ( ) ) ) . collect ( java . util . stream . IDENT_11 . toList ( ) ) ; final org . IDENT_0 . module . index . dom . IDENT_1 IDENT_12 = IDENT_8 . get ( 0 ) ; final org . IDENT_0 . module . index . dom . IDENT_1 IDENT_13 = IDENT_3 . METHOD_7 ( index ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( org . IDENT_0 . module . index . dom . IDENT_4 ) { return METHOD_8 ( STRING_0 , STRING_1 , index ) ; }
org . junit . Assert . assertThat ( IDENT_13 , org . hamcrest . CoreMatchers . is ( IDENT_12 ) ) 