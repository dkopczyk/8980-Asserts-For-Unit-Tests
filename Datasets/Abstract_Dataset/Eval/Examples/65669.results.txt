METHOD_0 ( ) { org . joda . time . IDENT_0 IDENT_1 = new org . joda . time . METHOD_1 ( INT_0 , 7 , INT_1 ) ; IDENT_2 . METHOD_2 ( IDENT_1 ) ; IDENT_2 . METHOD_3 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { org . IDENT_3 . module . base . dom . IDENT_4 . IDENT_5 IDENT_6 ; if ( ( ( METHOD_5 ( ) ) != null ) && ( ( METHOD_6 ( ) ) != null ) ) { IDENT_6 = METHOD_7 ( ) ; } else if ( ( ( ( METHOD_5 ( ) ) == null ) && ( ( METHOD_6 ( ) ) != null ) ) && ( ( METHOD_8 ( ) ) != null ) ) { IDENT_6 = new org . IDENT_3 . module . base . dom . IDENT_4 . METHOD_9 ( METHOD_8 ( ) , METHOD_6 ( ) ) ; } else if ( ( ( ( METHOD_5 ( ) ) != null ) && ( ( METHOD_6 ( ) ) == null ) ) && ( ( METHOD_10 ( ) ) != null ) ) { IDENT_6 = new org . IDENT_3 . module . base . dom . IDENT_4 . METHOD_9 ( METHOD_5 ( ) , METHOD_10 ( ) ) ; } else { return null ; } if ( IDENT_6 . isValid ( ) ) { return org . IDENT_3 . module . base . dom . utils . IDENT_7 . METHOD_11 ( new org . joda . time . METHOD_12 ( IDENT_6 . METHOD_13 ( ) , org . joda . time . IDENT_8 . METHOD_14 ( ) ) ) ; } return null ; }
org . junit . Assert . assertNull ( IDENT_2 . METHOD_4 ( ) ) 