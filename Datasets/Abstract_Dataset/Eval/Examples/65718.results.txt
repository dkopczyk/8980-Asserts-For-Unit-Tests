METHOD_0 ( ) { org . IDENT_0 . crypto . IDENT_1 key = new org . IDENT_0 . crypto . METHOD_1 ( ) ; java . lang . String message = STRING_0 ; byte [ ] hash = org . IDENT_0 . crypto . IDENT_2 . METHOD_2 ( message . getBytes ( ) ) ; org . IDENT_0 . crypto . METHOD_1 . IDENT_3 IDENT_4 = key . METHOD_3 ( hash ) ; key = org . IDENT_0 . crypto . METHOD_1 . METHOD_4 ( key . METHOD_5 ( ) ) ; boolean found = false ; for ( int i = 0 ; i < 4 ; i ++ ) { org . IDENT_0 . crypto . METHOD_1 IDENT_5 = org . IDENT_0 . crypto . METHOD_1 . METHOD_6 ( i , IDENT_4 , hash , true ) ; METHOD_7 ( IDENT_5 ) ; if ( key . equals ( IDENT_5 ) ) { found = true ; break ; } } "<AssertPlaceHolder>" ; } equals ( java . lang . Object ) { if ( ! ( other instanceof org . IDENT_0 . db . IDENT_6 ) ) return false ; byte [ ] IDENT_7 = ( ( org . IDENT_0 . db . IDENT_6 ) ( other ) ) . METHOD_8 ( ) ; return ( org . IDENT_0 . util . IDENT_8 . compareTo ( data , 0 , data . length , IDENT_7 , 0 , IDENT_7 . length ) ) == 0 ; }
org . junit . Assert . assertTrue ( found ) 