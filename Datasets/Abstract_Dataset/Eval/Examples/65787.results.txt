METHOD_0 ( ) { byte [ ] test = STRING_0 . getBytes ( ) ; byte [ ] result = new byte [ ] { 7 , 3 , 7 , 4 , 6 , 1 , 6 , 12 , 6 , 12 , 6 , 9 , 6 , 15 , 6 , INT_0 , org . IDENT_0 . util . IDENT_1 . T } ; "<AssertPlaceHolder>" ; } METHOD_1 ( byte [ ] ) { byte [ ] IDENT_2 = encode ( str ) ; java . nio . ByteBuffer IDENT_3 = java . nio . ByteBuffer . METHOD_2 ( ( ( IDENT_2 . length ) + 1 ) ) ; for ( byte b : IDENT_2 ) { IDENT_3 . put ( org . IDENT_0 . util . IDENT_4 . IDENT_5 . get ( ( ( char ) ( b ) ) ) ) ; } IDENT_3 . put ( org . IDENT_0 . util . IDENT_4 . IDENT_6 ) ; return IDENT_3 . array ( ) ; }
org . junit . Assert . assertArrayEquals ( result , org . IDENT_0 . util . IDENT_4 . METHOD_1 ( test ) ) 