METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 actual = parser . read ( getClass ( ) . METHOD_1 ( ) . getResource ( STRING_0 ) ) ; com . IDENT_0 . IDENT_1 . IDENT_2 expected = new com . IDENT_0 . IDENT_1 . METHOD_2 ( ) ; expected . setName ( "name" ) ; com . IDENT_0 . IDENT_1 . IDENT_3 IDENT_4 = new com . IDENT_0 . IDENT_1 . METHOD_3 ( ) ; com . IDENT_0 . IDENT_1 . METHOD_3 IDENT_5 = new com . IDENT_0 . IDENT_1 . METHOD_3 ( ) ; expected . METHOD_4 ( java . util . Arrays . asList ( IDENT_4 , IDENT_5 ) ) ; IDENT_4 . setName ( STRING_1 ) ; IDENT_4 . METHOD_5 ( "test" ) ; java . util . Map < java . lang . String , java . util . List < java . lang . String > > args = new java . util . HashMap ( ) ; args . put ( STRING_2 , java . util . Arrays . asList ( "value" 6 , "value" 0 ) ) ; IDENT_4 . METHOD_6 ( args ) ; IDENT_5 . setName ( STRING_3 ) ; IDENT_5 . METHOD_5 ( "test" ) ; IDENT_5 . METHOD_7 ( com . google . common . collect . IDENT_6 . METHOD_8 ( STRING_1 ) ) ; args = new java . util . HashMap ( ) ; args . put ( "value" 6 , java . util . Arrays . asList ( "value" 1 , STRING_4 ) ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_7 = new java . util . HashMap ( ) ; IDENT_7 . put ( "value" 5 , "value" ) ; IDENT_5 . METHOD_9 ( IDENT_7 ) ; IDENT_5 . METHOD_6 ( args ) ; com . IDENT_0 . IDENT_1 . METHOD_3 error = new com . IDENT_0 . IDENT_1 . METHOD_3 ( ) ; error . setName ( STRING_5 ) ; error . METHOD_5 ( "value" 2 ) ; args = new java . util . HashMap ( ) ; args . put ( STRING_6 , java . util . Arrays . asList ( "value" 4 , "value" 3 ) ) ; error . METHOD_6 ( args ) ; expected . METHOD_10 ( error ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( com . IDENT_0 . IDENT_1 . METHOD_3 ) { this . IDENT_8 = IDENT_8 ; }
org . junit . Assert . assertEquals ( expected , actual ) 