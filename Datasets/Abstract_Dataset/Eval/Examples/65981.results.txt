METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . String > IDENT_0 = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; IDENT_0 . put ( "foo" , "a" ) ; IDENT_0 . put ( "bar" , "b" ) ; IDENT_0 . put ( STRING_0 , STRING_1 ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_1 = java . util . Map . of ( "foo" , "a" , "bar" , "b" , STRING_0 , STRING_1 ) ; "<AssertPlaceHolder>" ; } put ( org . baeldung . hbase . IDENT_2 , org . baeldung . hbase . IDENT_3 ) { System . out . println ( STRING_2 ) ; org . baeldung . hbase . IDENT_4 p = new org . baeldung . hbase . METHOD_1 ( IDENT_5 ) ; p . METHOD_2 ( IDENT_6 . getBytes ( ) , IDENT_7 , org . baeldung . hbase . IDENT_8 . IDENT_9 ) ; p . METHOD_2 ( IDENT_6 . getBytes ( ) , IDENT_10 , org . baeldung . hbase . IDENT_8 . IDENT_9 ) ; table . put ( p ) ; p = new org . baeldung . hbase . METHOD_1 ( IDENT_11 ) ; p . METHOD_2 ( IDENT_6 . getBytes ( ) , IDENT_7 , org . baeldung . hbase . IDENT_8 . IDENT_9 ) ; p . METHOD_2 ( IDENT_12 . getBytes ( ) , IDENT_13 , org . baeldung . hbase . IDENT_8 . IDENT_9 ) ; table . put ( p ) ; p = new org . baeldung . hbase . METHOD_1 ( IDENT_14 ) ; p . METHOD_2 ( IDENT_6 . getBytes ( ) , IDENT_7 , org . baeldung . hbase . IDENT_8 . IDENT_9 ) ; p . METHOD_2 ( IDENT_12 . getBytes ( ) , IDENT_13 , org . baeldung . hbase . IDENT_8 . IDENT_9 ) ; table . put ( p ) ; admin . METHOD_3 ( IDENT_15 ) ; try { org . apache . hadoop . hbase . IDENT_16 IDENT_17 = new org . apache . hadoop . hbase . METHOD_4 ( IDENT_5 ) ; admin . METHOD_5 ( IDENT_15 , IDENT_17 ) ; System . out . println ( STRING_3 ) ; } catch ( java . lang . Exception e ) { System . out . println ( STRING_4 ) ; System . out . println ( e . getMessage ( ) ) ; } finally { admin . METHOD_6 ( IDENT_15 ) ; } System . out . println ( STRING_5 ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_1 ) 