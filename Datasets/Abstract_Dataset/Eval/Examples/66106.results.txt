METHOD_0 ( ) { java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 } ; org . baeldung . java . IDENT_1 . List < Map . Entry < java . lang . Integer , java . lang . String > > IDENT_2 = new org . baeldung . java . IDENT_1 . ArrayList ( map . entrySet ( ) ) ; IDENT_2 . METHOD_1 ( org . baeldung . java . IDENT_1 . IDENT_3 . METHOD_2 ( Entry :: getValue ) ) ; org . baeldung . java . IDENT_1 . HashMap < java . lang . Integer , java . lang . String > IDENT_4 = new org . baeldung . java . IDENT_1 . METHOD_3 ( ) ; for ( Map . Entry < java . lang . Integer , java . lang . String > entry : IDENT_2 ) { IDENT_4 . put ( entry . getKey ( ) , entry . getValue ( ) ) ; } "<AssertPlaceHolder>" ; } equals ( java . lang . Object , java . lang . Object ) { if ( x == y ) return true ; if ( ( java . util . IDENT_5 . METHOD_4 ( x ) ) || ( java . util . IDENT_5 . METHOD_4 ( y ) ) ) return false ; return x . equals ( y ) ; }
org . junit . Assert . assertTrue ( org . baeldung . java . IDENT_1 . Arrays . equals ( IDENT_4 . values ( ) . toArray ( ) , IDENT_0 ) ) 