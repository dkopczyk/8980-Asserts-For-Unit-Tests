METHOD_0 ( ) { final int count = 5 ; final java . util . concurrent . IDENT_0 IDENT_1 = java . util . concurrent . IDENT_2 . METHOD_1 ( count ) ; final com . baeldung . concurrent . IDENT_3 . IDENT_4 IDENT_5 = new com . baeldung . concurrent . IDENT_3 . METHOD_2 ( ) ; java . util . stream . IDENT_6 . range ( 0 , count ) . METHOD_3 ( ( user ) -> IDENT_1 . execute ( ( ) -> { try { IDENT_5 . METHOD_4 ( ) ; } catch ( final e ) { com . baeldung . concurrent . IDENT_3 . e . printStackTrace ( ) ; } } ) ) ; IDENT_1 . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( ) { return IDENT_7 . METHOD_6 ( ) ; }
org . junit . Assert . assertTrue ( IDENT_5 . METHOD_6 ( ) ) 