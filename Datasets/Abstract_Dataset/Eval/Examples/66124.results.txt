METHOD_0 ( ) { java . lang . String name = null ; java . util . concurrent . IDENT_0 < java . lang . String > IDENT_1 = java . util . concurrent . IDENT_0 . METHOD_1 ( ( ) -> { if ( name == null ) { throw new java . lang . RuntimeException ( STRING_0 ) ; } return STRING_1 + name ; } ) . METHOD_2 ( ( s , t ) -> s != null ? s : STRING_2 ) ; "<AssertPlaceHolder>" ; } get ( ) { java . lang . StringBuilder IDENT_2 = new java . lang . StringBuilder ( ) ; IDENT_2 . append ( STRING_3 ) . append ( java . net . IDENT_3 . METHOD_3 ( ) . METHOD_4 ( ) ) . append ( STRING_4 ) ; IDENT_2 . append ( STRING_5 ) . append ( java . net . IDENT_3 . METHOD_3 ( ) . METHOD_5 ( ) ) . append ( STRING_4 ) ; IDENT_2 . append ( STRING_6 ) . append ( STRING_7 ) . append ( STRING_4 ) ; return IDENT_2 . toString ( ) ; }
org . junit . Assert . assertEquals ( STRING_2 , IDENT_1 . get ( ) ) 