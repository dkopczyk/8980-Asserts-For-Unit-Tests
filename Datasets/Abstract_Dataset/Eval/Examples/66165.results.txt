METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final java . nio . file . Path path = java . nio . file . IDENT_1 . get ( IDENT_0 ) ; final java . nio . IDENT_2 . IDENT_3 IDENT_4 = java . nio . IDENT_2 . IDENT_3 . METHOD_1 ( path , IDENT_5 . IDENT_6 , IDENT_5 . IDENT_7 ) ; final java . nio . ByteBuffer buffer = java . nio . ByteBuffer . METHOD_2 ( INT_0 ) ; final long position = 0 ; buffer . put ( STRING_1 . getBytes ( ) ) ; buffer . METHOD_3 ( ) ; final java . util . concurrent . IDENT_8 < java . lang . Integer > operation = IDENT_4 . write ( buffer , position ) ; buffer . METHOD_4 ( ) ; operation . get ( ) ; final java . lang . String content = METHOD_5 ( path ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . nio . file . Path ) { java . nio . IDENT_2 . IDENT_3 IDENT_4 = null ; try { IDENT_4 = java . nio . IDENT_2 . IDENT_3 . METHOD_1 ( file , IDENT_5 . IDENT_9 ) ; } catch ( java . io . IOException e ) { e . printStackTrace ( ) ; } final java . nio . ByteBuffer buffer = java . nio . ByteBuffer . METHOD_2 ( INT_0 ) ; final java . util . concurrent . IDENT_8 < java . lang . Integer > operation = IDENT_4 . read ( buffer , 0 ) ; operation . get ( ) ; final java . lang . String IDENT_10 = new java . lang . String ( buffer . array ( ) ) . trim ( ) ; buffer . METHOD_4 ( ) ; return IDENT_10 ; }
org . junit . Assert . assertEquals ( STRING_1 , content ) 