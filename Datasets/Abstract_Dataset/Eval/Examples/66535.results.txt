METHOD_0 ( ) { java . lang . String input = STRING_0 ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { if ( str == null ) return false ; java . lang . String IDENT_0 = str . METHOD_2 ( ) ; java . util . stream . IDENT_1 < java . lang . IDENT_2 > IDENT_3 = IDENT_0 . METHOD_3 ( ) . filter ( ( item ) -> ( item >= STRING_1 ) && ( item <= STRING_2 ) ) . METHOD_4 ( ( c ) -> ( ( char ) ( c ) ) ) ; java . util . Map < java . lang . IDENT_2 , java . lang . Long > IDENT_4 = IDENT_3 . collect ( java . util . stream . IDENT_5 . METHOD_5 ( java . util . function . IDENT_6 . METHOD_6 ( ) , java . util . stream . IDENT_5 . METHOD_7 ( ) ) ) ; return ( ( IDENT_4 . size ( ) ) == ( com . baeldung . string . IDENT_7 . IDENT_8 ) ) && ( IDENT_4 . values ( ) . stream ( ) . METHOD_8 ( ( item ) -> item == 1 ) ) ; }
org . junit . Assert . assertTrue ( com . baeldung . string . IDENT_7 . METHOD_1 ( input ) ) 