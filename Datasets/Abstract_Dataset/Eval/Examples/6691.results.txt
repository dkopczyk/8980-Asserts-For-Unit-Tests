METHOD_0 ( ) { org . apache . ambari . server . state . IDENT_0 cluster = METHOD_1 ( org . apache . ambari . server . state . IDENT_0 . class ) ; org . apache . ambari . server . IDENT_1 . entities . IDENT_2 IDENT_3 = METHOD_1 ( org . apache . ambari . server . IDENT_1 . entities . IDENT_2 . class ) ; expect ( IDENT_3 . METHOD_2 ( ) ) . andReturn ( STRING_0 ) . METHOD_3 ( ) ; org . apache . ambari . server . state . IDENT_4 IDENT_5 = METHOD_1 ( org . apache . ambari . server . state . IDENT_4 . class ) ; expect ( IDENT_5 . getName ( ) ) . andReturn ( STRING_1 ) . METHOD_3 ( ) ; expect ( IDENT_5 . METHOD_4 ( ) ) . andReturn ( STRING_1 ) . METHOD_3 ( ) ; expect ( IDENT_5 . METHOD_5 ( ) ) . andReturn ( IDENT_3 ) . METHOD_3 ( ) ; org . apache . ambari . server . state . IDENT_4 IDENT_6 = METHOD_1 ( org . apache . ambari . server . state . IDENT_4 . class ) ; expect ( IDENT_6 . getName ( ) ) . andReturn ( STRING_2 ) . METHOD_3 ( ) ; expect ( IDENT_6 . METHOD_4 ( ) ) . andReturn ( STRING_3 ) . METHOD_3 ( ) ; expect ( IDENT_6 . METHOD_5 ( ) ) . andReturn ( IDENT_3 ) . METHOD_3 ( ) ; org . apache . ambari . server . state . IDENT_7 IDENT_8 = METHOD_1 ( org . apache . ambari . server . state . IDENT_7 . class ) ; expect ( IDENT_8 . METHOD_6 ( ) ) . andReturn ( new org . apache . ambari . server . state . repository . METHOD_7 ( ) ) . METHOD_3 ( ) ; org . apache . ambari . server . api . services . IDENT_9 IDENT_10 = METHOD_1 ( org . apache . ambari . server . api . services . IDENT_9 . class ) ; expect ( IDENT_10 . METHOD_8 ( org . easymock . EasyMock . METHOD_9 ( org . apache . ambari . server . state . IDENT_11 . class ) ) ) . andReturn ( IDENT_8 ) . METHOD_3 ( ) ; org . apache . ambari . server . state . IDENT_4 IDENT_12 = METHOD_1 ( org . apache . ambari . server . state . IDENT_4 . class ) ; expect ( cluster . METHOD_10 ( ) ) . andReturn ( com . google . common . collect . ImmutableMap . < java . lang . String , org . apache . ambari . server . state . IDENT_4 > builder ( ) . put ( STRING_1 , IDENT_5 ) . put ( STRING_2 , IDENT_6 ) . put ( STRING_4 , IDENT_12 ) . build ( ) ) . METHOD_3 ( ) ; METHOD_11 ( ) ; java . io . File f = new java . io . File ( STRING_5 ) ; org . apache . ambari . server . state . repository . IDENT_13 xml = org . apache . ambari . server . state . repository . IDENT_13 . load ( f . METHOD_12 ( ) . METHOD_13 ( ) ) ; xml . IDENT_14 . version = STRING_6 ; xml . IDENT_14 . build = "2" ; org . apache . ambari . server . state . repository . IDENT_15 IDENT_16 = xml . METHOD_14 ( cluster , IDENT_10 ) ; "<AssertPlaceHolder>" ; } METHOD_15 ( ) { if ( IDENT_17 . isEmpty ( ) ) { return java . util . Collections . METHOD_16 ( ) ; } else { java . util . Set < java . lang . String > IDENT_18 = new java . util . HashSet ( ) ; java . util . Map < java . lang . String , org . apache . ambari . server . state . repository . IDENT_19 > IDENT_20 = METHOD_17 ( ) ; for ( org . apache . ambari . server . state . repository . IDENT_21 ref : IDENT_17 ) { org . apache . ambari . server . state . repository . IDENT_19 IDENT_22 = IDENT_20 . get ( ref . IDENT_23 ) ; IDENT_18 . add ( IDENT_22 . IDENT_24 ) ; } return IDENT_18 ; } }
org . junit . Assert . assertEquals ( 1 , IDENT_16 . METHOD_15 ( ) . size ( ) ) 