METHOD_0 ( ) { expect ( org . apache . ambari . server . IDENT_0 . IDENT_1 . cluster . METHOD_1 ( ) ) . andReturn ( org . apache . ambari . server . IDENT_0 . IDENT_1 . IDENT_2 ) . METHOD_2 ( ) ; org . apache . ambari . server . IDENT_0 . IDENT_1 . IDENT_3 . METHOD_3 ( METHOD_4 ( org . apache . ambari . server . controller . spi . IDENT_4 . class ) ) ; METHOD_5 ( ) . METHOD_6 ( ) ; expect ( org . apache . ambari . server . IDENT_0 . IDENT_1 . cluster . METHOD_7 ( STRING_0 ) ) . andReturn ( org . apache . ambari . server . IDENT_0 . IDENT_1 . IDENT_5 ) . times ( 2 ) ; org . easymock . IDENT_6 < java . util . Set < org . apache . ambari . server . controller . IDENT_7 > > IDENT_8 = org . easymock . EasyMock . METHOD_8 ( ) ; org . apache . ambari . server . IDENT_0 . IDENT_1 . controller . METHOD_9 ( METHOD_10 ( IDENT_8 ) , eq ( true ) ) ; METHOD_5 ( ) . METHOD_6 ( ) ; METHOD_11 ( ) ; java . util . Map < java . lang . String , java . util . Collection < java . lang . String > > IDENT_9 = new java . util . HashMap ( ) ; java . util . Collection < java . lang . String > components = new java . util . ArrayList ( ) ; components . add ( STRING_1 ) ; components . add ( STRING_2 ) ; IDENT_9 . put ( STRING_0 , components ) ; components = new java . util . ArrayList ( ) ; components . add ( STRING_3 ) ; IDENT_9 . put ( STRING_4 , components ) ; org . apache . ambari . server . IDENT_0 . IDENT_1 . context . METHOD_12 ( org . apache . ambari . server . IDENT_0 . IDENT_1 . IDENT_10 , STRING_5 , IDENT_9 ) ; "<AssertPlaceHolder>" ; } getValue ( ) { java . lang . Object o = ( ( delegate ) == null ) ? null : delegate . getValue ( ) ; return o == null ? null : o . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_8 . getValue ( ) . size ( ) , 2 ) 