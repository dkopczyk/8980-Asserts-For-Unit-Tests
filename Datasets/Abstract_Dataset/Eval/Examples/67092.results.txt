METHOD_0 ( ) { org . mockito . Mockito . when ( eu . IDENT_0 . IDENT_1 . rest . client . IDENT_2 . IDENT_3 . response . getStatus ( ) ) . thenReturn ( 200 ) ; org . mockito . Mockito . when ( eu . IDENT_0 . IDENT_1 . rest . client . IDENT_2 . IDENT_3 . response . METHOD_1 ( org . IDENT_4 . IDENT_1 . rest . IDENT_5 . Result . class ) ) . thenReturn ( new org . IDENT_4 . IDENT_1 . rest . IDENT_5 . Result ( STRING_0 ) ) ; int IDENT_6 = eu . IDENT_0 . IDENT_1 . rest . client . IDENT_2 . IDENT_3 . IDENT_7 . METHOD_2 ( STRING_1 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { javax . ws . rs . client . IDENT_8 target = client . target ( ( ( ( ( ( ( ( IDENT_9 ) + "/" ) + ( org . IDENT_4 . IDENT_1 . rest . IDENT_5 . IDENT_10 . IDENT_11 ) ) + "/" ) + id ) + "/" ) + ( org . IDENT_4 . IDENT_1 . rest . IDENT_5 . IDENT_10 . IDENT_12 ) ) ) ; javax . ws . rs . core . Response response = target . request ( IDENT_13 . IDENT_14 ) . get ( ) ; switch ( response . getStatus ( ) ) { case INT_0 : org . IDENT_4 . IDENT_1 . rest . IDENT_5 . Result IDENT_15 = response . METHOD_1 ( org . IDENT_4 . IDENT_1 . rest . IDENT_5 . Result . class ) ; eu . IDENT_0 . IDENT_1 . rest . client . IDENT_2 . IDENT_16 . LOGGER . warn ( ( STRING_2 + ( IDENT_15 . METHOD_3 ( ) ) ) ) ; throw new IDENT_17 . IDENT_18 . IDENT_19 . util . exceptions . METHOD_4 ( IDENT_15 . METHOD_3 ( ) ) ; case INT_1 : IDENT_15 = response . METHOD_1 ( org . IDENT_4 . IDENT_1 . rest . IDENT_5 . Result . class ) ; eu . IDENT_0 . IDENT_1 . rest . client . IDENT_2 . IDENT_16 . LOGGER . warn ( ( STRING_2 + ( IDENT_15 . METHOD_3 ( ) ) ) ) ; throw new javax . ws . rs . METHOD_5 ( IDENT_15 . METHOD_3 ( ) ) ; } eu . IDENT_0 . IDENT_1 . rest . client . IDENT_2 . IDENT_16 . LOGGER . info ( STRING_3 ) ; org . IDENT_4 . IDENT_1 . rest . IDENT_5 . Result result = response . METHOD_1 ( org . IDENT_4 . IDENT_1 . rest . IDENT_5 . Result . class ) ; return java . lang . Integer . METHOD_6 ( result . METHOD_3 ( ) ) ; }
org . junit . Assert . assertEquals ( 10 , IDENT_6 ) 