METHOD_0 ( ) { final int IDENT_0 = 3 ; expect ( IDENT_1 . METHOD_1 ( org . apache . ambari . server . IDENT_2 . IDENT_3 . IDENT_4 ) ) . andReturn ( true ) . METHOD_2 ( ) ; expect ( IDENT_1 . METHOD_3 ( org . apache . ambari . server . IDENT_2 . IDENT_5 . IDENT_6 ) ) . andReturn ( IDENT_0 ) . METHOD_2 ( ) ; replay ( IDENT_1 ) ; final org . apache . ambari . server . IDENT_2 . IDENT_5 IDENT_7 = new org . apache . ambari . server . IDENT_2 . METHOD_4 ( IDENT_8 ) ; IDENT_7 . IDENT_1 = IDENT_1 ; "<AssertPlaceHolder>" ; verify ( IDENT_1 ) ; } METHOD_5 ( ) { int IDENT_9 = 0 ; if ( IDENT_1 . METHOD_1 ( org . apache . ambari . server . IDENT_2 . IDENT_3 . IDENT_4 ) ) { org . apache . ambari . server . IDENT_2 . METHOD_4 . LOG . debug ( STRING_0 , org . apache . ambari . server . IDENT_2 . METHOD_4 . IDENT_6 ) ; IDENT_9 = IDENT_1 . METHOD_3 ( org . apache . ambari . server . IDENT_2 . METHOD_4 . IDENT_6 ) ; org . apache . ambari . server . IDENT_2 . METHOD_4 . LOG . info ( STRING_1 , IDENT_9 , ( 1 >= IDENT_9 ? STRING_2 : STRING_3 ) ) ; } else { org . apache . ambari . server . IDENT_2 . METHOD_4 . LOG . info ( STRING_4 , org . apache . ambari . server . IDENT_2 . IDENT_3 . IDENT_4 ) ; } return IDENT_9 ; }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_7 . METHOD_5 ( ) ) 