METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final java . lang . String location = STRING_1 ; final org . exist . storage . IDENT_1 IDENT_2 = METHOD_1 ( org . exist . storage . IDENT_1 . class ) ; expect ( IDENT_2 . METHOD_2 ( METHOD_3 ( ) , METHOD_3 ( ) ) ) . andReturn ( null ) ; replay ( IDENT_2 ) ; final org . exist . source . IDENT_3 IDENT_4 = org . exist . source . IDENT_5 . METHOD_4 ( IDENT_2 , IDENT_0 , location , false ) ; "<AssertPlaceHolder>" ; verify ( IDENT_2 ) ; } METHOD_4 ( org . exist . storage . IDENT_1 , java . lang . String , java . lang . String , boolean ) { org . exist . source . IDENT_3 source = null ; if ( ( source == null ) && ( ! ( ( ( location . startsWith ( IDENT_6 . IDENT_7 ) ) || ( location . startsWith ( IDENT_8 . IDENT_9 ) ) ) || ( location . startsWith ( STRING_2 ) ) ) ) ) { try { final java . net . URL url = new java . net . URL ( location ) ; source = new org . exist . source . METHOD_5 ( url ) ; } catch ( final java . net . IDENT_10 e ) { return null ; } } return source ; }
org . junit . Assert . assertNull ( IDENT_4 ) 