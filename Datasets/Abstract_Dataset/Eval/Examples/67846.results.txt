METHOD_0 ( ) { final org . exist . storage . IDENT_0 IDENT_1 = IDENT_2 . METHOD_1 ( ) ; final org . exist . storage . IDENT_3 . IDENT_4 IDENT_5 = IDENT_1 . METHOD_2 ( ) . METHOD_3 ( ) ; IDENT_5 . METHOD_4 ( org . exist . storage . IDENT_6 . IDENT_7 ) ; final org . exist . storage . IDENT_6 . IDENT_8 IDENT_9 = new org . exist . storage . IDENT_6 . METHOD_5 ( ) ; boolean IDENT_10 = false ; try { try ( final org . exist . storage . IDENT_11 IDENT_12 = IDENT_1 . get ( java . util . Optional . of ( IDENT_1 . METHOD_6 ( ) . METHOD_7 ( ) ) ) ; final org . exist . storage . IDENT_13 . IDENT_14 transaction = IDENT_1 . METHOD_8 ( ) . METHOD_9 ( ) ) { IDENT_5 . METHOD_10 ( IDENT_9 ) ; while ( ! ( IDENT_9 . METHOD_11 ( ) ) ) ; IDENT_10 = true ; final org . exist . IDENT_15 . IDENT_16 IDENT_17 = org . exist . storage . IDENT_6 . IDENT_18 . append ( STRING_0 ) ; try ( final org . exist . collections . Collection IDENT_19 = IDENT_12 . METHOD_0 ( transaction , IDENT_17 ) ) { } transaction . commit ( ) ; } } finally { if ( IDENT_10 ) { IDENT_5 . METHOD_12 ( IDENT_9 ) ; } } while ( IDENT_9 . METHOD_11 ( ) ) { } "<AssertPlaceHolder>" ; } METHOD_13 ( ) { return ( ! ( error . get ( ) ) ) && ( events . empty ( ) ) ; }
org . junit . Assert . assertTrue ( IDENT_9 . METHOD_13 ( ) ) 