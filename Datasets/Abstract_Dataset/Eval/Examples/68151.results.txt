METHOD_0 ( ) { try { java . lang . System . setProperty ( STRING_0 , STRING_1 ) ; METHOD_1 ( new io . IDENT_0 . maven . IDENT_1 . util . IDENT_2 . METHOD_2 ( ) { @ io . IDENT_0 . maven . IDENT_1 . util . Override public void exec ( java . io . File IDENT_3 ) throws java . io . IOException , org . apache . maven . plugin . IDENT_4 { METHOD_3 ( IDENT_3 , STRING_2 ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_5 = new java . util . HashMap ( ) ; IDENT_5 . put ( STRING_3 , STRING_4 ) ; io . IDENT_0 . maven . IDENT_1 . IDENT_6 . IDENT_7 config = factory . METHOD_4 ( IDENT_8 , false , IDENT_5 , IDENT_9 , STRING_5 , null ) ; "<AssertPlaceHolder>" ; } } ) ; } finally { java . lang . System . METHOD_5 ( ) . remove ( STRING_0 ) ; } } METHOD_4 ( boolean , boolean , java . util . Map , org . apache . maven . IDENT_9 . IDENT_10 , java . lang . String , java . lang . String ) { io . IDENT_0 . maven . IDENT_1 . IDENT_6 . IDENT_7 ret = METHOD_6 ( IDENT_8 , IDENT_11 , IDENT_9 , user , registry ) ; if ( ret != null ) { if ( ( registry == null ) || IDENT_12 ) { return ret ; } try { return METHOD_7 ( ret , registry ) ; } catch ( java . io . IOException e ) { throw new org . apache . maven . plugin . METHOD_8 ( e . getMessage ( ) , e ) ; } } ret = METHOD_9 ( registry ) ; if ( ret != null ) { log . debug ( STRING_6 ) ; return ret ; } log . debug ( STRING_7 ) ; return null ; }
org . junit . Assert . assertNull ( config ) 