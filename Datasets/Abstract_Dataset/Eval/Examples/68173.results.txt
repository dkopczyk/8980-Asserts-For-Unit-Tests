parse ( ) { java . lang . Object [ ] data = new java . lang . Object [ ] { null , IDENT_0 , STRING_0 , IDENT_0 , STRING_1 , IDENT_1 , STRING_2 , IDENT_1 , STRING_3 , IDENT_2 , STRING_4 , IDENT_2 } ; for ( int i = 0 ; i < ( data . length ) ; i += 2 ) { "<AssertPlaceHolder>" ; } } parse ( java . lang . String ) { if ( ( param == null ) || ( param . equalsIgnoreCase ( STRING_0 ) ) ) { return io . IDENT_3 . maven . IDENT_4 . config . IDENT_5 . IDENT_0 ; } else if ( ( param . equalsIgnoreCase ( STRING_5 ) ) || ( param . equalsIgnoreCase ( STRING_6 ) ) ) { return io . IDENT_3 . maven . IDENT_4 . config . IDENT_5 . IDENT_1 ; } else if ( ( param . equalsIgnoreCase ( STRING_3 ) ) || ( param . equalsIgnoreCase ( STRING_7 ) ) ) { return io . IDENT_3 . maven . IDENT_4 . config . IDENT_5 . IDENT_2 ; } else { throw new java . lang . IllegalArgumentException ( ( ( STRING_8 + param ) + STRING_9 ) ) ; } }
org . junit . Assert . assertEquals ( data [ ( i + 1 ) ] , io . IDENT_3 . maven . IDENT_4 . config . IDENT_5 . IDENT_5 . parse ( ( ( java . lang . String ) ( data [ i ] ) ) ) ) 