METHOD_0 ( ) { io . IDENT_0 . IDENT_1 . api . model . IDENT_2 IDENT_3 = new io . IDENT_0 . IDENT_1 . api . model . METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( STRING_0 ) . METHOD_4 ( "1" ) . METHOD_5 ( "test" ) . and ( ) . build ( ) ; io . IDENT_0 . IDENT_1 . api . model . IDENT_2 IDENT_4 = new io . IDENT_0 . IDENT_1 . api . model . METHOD_1 ( IDENT_3 ) . METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( STRING_1 ) . METHOD_9 ( STRING_2 ) . METHOD_10 ( ) . METHOD_11 ( ) . build ( ) ; io . IDENT_0 . IDENT_1 . api . model . IDENT_2 IDENT_5 = new io . IDENT_0 . IDENT_1 . api . model . METHOD_1 ( IDENT_3 ) . METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( STRING_1 ) . METHOD_9 ( STRING_0 1 ) . METHOD_10 ( ) . METHOD_11 ( ) . build ( ) ; server . expect ( ) . get ( ) . METHOD_12 ( STRING_3 ) . andReturn ( INT_0 , "" ) . times ( 2 ) ; server . expect ( ) . get ( ) . METHOD_12 ( STRING_3 ) . andReturn ( 200 , IDENT_4 ) . times ( 2 ) ; server . expect ( ) . get ( ) . METHOD_12 ( STRING_4 ) . METHOD_13 ( ) . METHOD_14 ( ) . METHOD_15 ( 100 ) . METHOD_16 ( new io . IDENT_0 . IDENT_1 . api . model . METHOD_17 ( IDENT_5 , STRING_5 ) ) . METHOD_18 ( ) . METHOD_19 ( ) ; io . IDENT_0 . IDENT_1 . client . IDENT_6 client = server . METHOD_20 ( ) ; io . IDENT_0 . IDENT_1 . api . model . IDENT_2 p = client . METHOD_21 ( ) . METHOD_3 ( STRING_0 ) . METHOD_22 ( 5 , TimeUnit . IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_23 ( io . IDENT_0 . IDENT_1 . api . model . IDENT_2 ) { io . IDENT_0 . IDENT_1 . client . utils . Utils . METHOD_24 ( IDENT_8 , STRING_6 ) ; io . IDENT_0 . IDENT_1 . api . model . IDENT_9 condition = io . IDENT_0 . IDENT_1 . client . internal . IDENT_10 . IDENT_11 . METHOD_25 ( IDENT_8 ) ; if ( ( condition == null ) || ( ( condition . getStatus ( ) ) == null ) ) { return false ; } return condition . getStatus ( ) . equalsIgnoreCase ( io . IDENT_0 . IDENT_1 . client . internal . IDENT_10 . IDENT_11 . IDENT_12 ) ; }
org . junit . Assert . assertTrue ( io . IDENT_0 . IDENT_1 . client . internal . IDENT_10 . IDENT_11 . METHOD_23 ( p ) ) 