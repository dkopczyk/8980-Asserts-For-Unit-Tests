METHOD_0 ( ) { "<AssertPlaceHolder>" ; } METHOD_1 ( org . elasticsearch . rest . IDENT_0 , org . elasticsearch . common . util . concurrent . IDENT_1 ) { final java . lang . String IDENT_2 = request . header ( STRING_0 ) ; if ( IDENT_2 != null ) { if ( IDENT_2 . trim ( ) . toLowerCase ( ) . startsWith ( STRING_1 ) ) { final java . lang . String IDENT_3 = new java . lang . String ( javax . xml . IDENT_4 . IDENT_5 . METHOD_2 ( IDENT_2 . split ( " " ) [ 1 ] ) , java . nio . IDENT_6 . IDENT_7 . UTF_8 ) ; final int IDENT_8 = IDENT_3 . METHOD_3 ( STRING_2 ) ; java . lang . String IDENT_9 = null ; java . lang . String IDENT_10 = null ; if ( IDENT_8 > 0 ) { IDENT_9 = IDENT_3 . substring ( 0 , IDENT_8 ) ; if ( ( ( IDENT_3 . length ( ) ) - 1 ) != IDENT_8 ) { IDENT_10 = IDENT_3 . substring ( ( IDENT_8 + 1 ) ) . trim ( ) ; } } if ( ( IDENT_9 != null ) && ( org . apache . commons . lang . StringUtils . METHOD_4 ( IDENT_10 ) ) ) { return new com . IDENT_11 . IDENT_12 . user . METHOD_5 ( IDENT_9 , IDENT_10 . getBytes ( IDENT_7 . UTF_8 ) ) . METHOD_6 ( ) ; } } } return null ; }
org . junit . Assert . assertNull ( backend . METHOD_1 ( null , null ) ) 