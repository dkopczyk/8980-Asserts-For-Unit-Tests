METHOD_0 ( ) { com . facebook . buck . core . IDENT_0 . resolver . IDENT_1 IDENT_2 = com . facebook . buck . core . IDENT_0 . resolver . impl . IDENT_3 . from ( new com . facebook . buck . core . rules . METHOD_1 ( new com . facebook . buck . core . rules . resolver . impl . METHOD_2 ( ) ) ) ; java . nio . file . Path header = IDENT_4 . getPath ( STRING_0 ) ; com . facebook . buck . IDENT_5 . IDENT_6 IDENT_7 = new com . facebook . buck . IDENT_5 . IDENT_6 . Builder ( IDENT_2 ) . build ( ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . nio . file . Path ) { com . google . common . base . IDENT_8 . METHOD_4 ( IDENT_9 . METHOD_5 ( ) ) ; java . util . Optional < Map . Entry < java . nio . file . Path , com . facebook . buck . core . IDENT_0 . IDENT_10 > > result = METHOD_6 ( IDENT_9 , IDENT_11 ) ; if ( ! ( result . METHOD_7 ( ) ) ) { return java . util . Optional . empty ( ) ; } return java . util . Optional . of ( IDENT_2 . getAbsolutePath ( result . get ( ) . getValue ( ) ) . resolve ( result . get ( ) . getKey ( ) . METHOD_8 ( IDENT_9 ) ) ) ; }
org . junit . Assert . assertThat ( IDENT_7 . METHOD_3 ( IDENT_4 . resolve ( header ) ) , org . hamcrest . Matchers . equalTo ( java . util . Optional . empty ( ) ) ) 