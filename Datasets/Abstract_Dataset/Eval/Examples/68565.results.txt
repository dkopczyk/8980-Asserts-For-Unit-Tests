METHOD_0 ( ) { METHOD_1 ( IDENT_0 . IDENT_1 ) ; java . nio . file . Path IDENT_2 = IDENT_3 . getPath ( IDENT_0 . IDENT_1 . METHOD_2 ( ) . get ( 0 ) ) ; java . nio . file . IDENT_4 . METHOD_3 ( IDENT_2 ) ; java . nio . file . Path expected = IDENT_2 . resolve ( STRING_0 ) ; java . nio . file . IDENT_4 . write ( expected , new byte [ 10 ] ) ; com . facebook . buck . IDENT_5 . IDENT_6 . IDENT_7 framework = com . facebook . buck . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_4 ( IDENT_3 , IDENT_0 . IDENT_1 ) ; java . nio . file . Path actual = framework . METHOD_5 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . String ) { for ( java . nio . file . Path IDENT_8 : IDENT_9 ) { java . nio . file . Path IDENT_10 = IDENT_8 . resolve ( IDENT_11 ) ; if ( java . nio . file . IDENT_4 . exists ( IDENT_10 ) ) { return IDENT_10 ; } } throw new com . facebook . buck . core . exceptions . METHOD_6 ( STRING_1 , version , IDENT_9 , IDENT_11 ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 