METHOD_0 ( ) { com . facebook . buck . IDENT_0 . IDENT_1 . Builder IDENT_2 = com . facebook . buck . IDENT_0 . IDENT_1 . builder ( ) ; new com . facebook . buck . IDENT_3 . IDENT_4 . METHOD_1 ( new com . facebook . buck . core . IDENT_5 . impl . METHOD_2 ( ) . build ( ) , new com . facebook . buck . IDENT_6 . METHOD_3 ( ) ) . METHOD_4 ( IDENT_2 , IDENT_7 . METHOD_5 ( ) , IDENT_7 . rule ( ) . METHOD_6 ( ) , IDENT_7 . METHOD_7 ( ) ) ; com . facebook . buck . IDENT_0 . IDENT_1 expected = com . facebook . buck . IDENT_0 . IDENT_1 . builder ( ) . METHOD_8 ( IDENT_7 . METHOD_9 ( ) . METHOD_10 ( ) , IDENT_7 . METHOD_11 ( ) . METHOD_12 ( ) ) . build ( ) ; "<AssertPlaceHolder>" ; } build ( ) { if ( ( IDENT_8 . METHOD_13 ( ) ) == ( Operation . IDENT_9 ) ) { com . facebook . buck . core . IDENT_10 . IDENT_11 IDENT_12 = java . util . IDENT_13 . METHOD_14 ( com . google . common . collect . IDENT_14 . METHOD_15 ( IDENT_8 . METHOD_16 ( ) , null ) ) ; IDENT_15 . METHOD_17 ( IDENT_12 ) ; return new com . facebook . buck . IDENT_16 . IDENT_17 . METHOD_18 ( IDENT_8 , target , IDENT_15 . build ( ) ) ; } else { IDENT_18 . METHOD_19 ( IDENT_8 . METHOD_16 ( ) ) ; IDENT_18 . METHOD_20 ( IDENT_8 . METHOD_21 ( ) ) ; return new com . facebook . buck . IDENT_16 . IDENT_17 . METHOD_18 ( IDENT_8 , IDENT_18 . build ( ) ) ; } }
org . junit . Assert . assertEquals ( expected , IDENT_2 . build ( ) ) 