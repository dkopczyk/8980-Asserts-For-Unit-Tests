METHOD_0 ( ) { java . lang . reflect . Type type = com . facebook . buck . rules . IDENT_0 . IDENT_1 . IDENT_2 . class . METHOD_1 ( STRING_0 ) . METHOD_2 ( ) ; com . facebook . buck . rules . IDENT_0 . IDENT_3 < ? > IDENT_0 = IDENT_4 . METHOD_3 ( type ) ; com . google . common . collect . ImmutableList < java . lang . String > input = com . google . common . collect . ImmutableList . of ( STRING_1 , "a" , STRING_2 , "b" ) ; java . lang . Object result = IDENT_0 . METHOD_4 ( IDENT_5 , IDENT_6 , java . nio . file . IDENT_7 . get ( "" ) , IDENT_8 . INSTANCE , input ) ; com . google . common . collect . IDENT_9 < java . lang . String > IDENT_10 = com . google . common . collect . IDENT_9 . METHOD_5 ( input ) ; "<AssertPlaceHolder>" ; } get ( com . android . IDENT_11 . IDENT_12 . IDENT_13 . IDENT_14 ) { if ( IDENT_13 == null ) { throw new java . lang . METHOD_6 ( STRING_3 ) ; } METHOD_7 ( ) ; com . android . IDENT_11 . IDENT_15 . file . IDENT_16 result = IDENT_17 . get ( ( ( com . android . IDENT_11 . IDENT_12 . IDENT_13 . IDENT_18 ) ( IDENT_13 ) ) ) ; if ( result == null ) { throw new java . lang . IllegalArgumentException ( STRING_4 ) ; } return result ; }
org . junit . Assert . assertEquals ( IDENT_10 , result ) 