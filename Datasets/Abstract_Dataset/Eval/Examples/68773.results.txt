METHOD_0 ( ) { java . lang . reflect . Type type = com . facebook . buck . rules . IDENT_0 . IDENT_1 . IDENT_2 . class . METHOD_1 ( STRING_0 ) . METHOD_2 ( ) ; com . facebook . buck . rules . IDENT_0 . IDENT_3 < ? > IDENT_0 = IDENT_4 . METHOD_3 ( type ) ; com . google . common . collect . ImmutableList < java . lang . String > input = com . google . common . collect . ImmutableList . of ( STRING_1 , STRING_2 , STRING_2 , STRING_1 ) ; java . lang . Object result = IDENT_0 . METHOD_4 ( IDENT_5 , IDENT_6 , java . nio . file . IDENT_7 . get ( "" ) , IDENT_8 . INSTANCE , input ) ; com . google . common . collect . ImmutableList < com . facebook . buck . rules . IDENT_0 . IDENT_1 . IDENT_9 > expected = com . google . common . collect . ImmutableList . of ( com . facebook . buck . rules . IDENT_0 . IDENT_1 . IDENT_9 . IDENT_10 , com . facebook . buck . rules . IDENT_0 . IDENT_1 . IDENT_9 . IDENT_11 , com . facebook . buck . rules . IDENT_0 . IDENT_1 . IDENT_9 . IDENT_11 , com . facebook . buck . rules . IDENT_0 . IDENT_1 . IDENT_9 . IDENT_10 ) ; "<AssertPlaceHolder>" ; } of ( java . nio . file . Path , java . nio . file . Path , java . nio . file . Path , com . facebook . buck . io . IDENT_6 . IDENT_12 ) { return new com . facebook . buck . parser . IDENT_13 . METHOD_5 ( IDENT_14 , IDENT_15 , IDENT_16 , IDENT_17 ) ; }
org . junit . Assert . assertEquals ( expected , result ) 