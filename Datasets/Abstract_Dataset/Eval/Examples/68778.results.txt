METHOD_0 ( ) { com . facebook . buck . rules . IDENT_0 . IDENT_1 < ? > IDENT_0 = IDENT_2 . METHOD_1 ( com . facebook . buck . rules . IDENT_0 . IDENT_3 . class ) ; com . google . common . collect . ImmutableMap < java . lang . String , java . lang . Object > map = com . google . common . collect . ImmutableMap . of ( STRING_0 , com . google . common . collect . ImmutableMap . of ( STRING_1 , STRING_2 , STRING_1 0 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 ) ) ; java . lang . Object result = IDENT_0 . METHOD_2 ( IDENT_4 , IDENT_5 , java . nio . file . IDENT_6 . get ( "" ) , IDENT_7 . INSTANCE , map ) ; com . facebook . buck . rules . IDENT_0 . IDENT_3 expected = com . facebook . buck . rules . IDENT_0 . IDENT_3 . builder ( ) . METHOD_3 ( com . facebook . buck . rules . IDENT_0 . IDENT_8 . builder ( ) . METHOD_4 ( STRING_8 ) . METHOD_5 ( STRING_2 ) . METHOD_6 ( STRING_3 ) . METHOD_7 ( STRING_5 ) . build ( ) ) . build ( ) ; "<AssertPlaceHolder>" ; } build ( ) { com . facebook . buck . util . config . IDENT_9 config = new com . facebook . buck . util . config . METHOD_8 ( IDENT_10 ) ; com . facebook . buck . core . IDENT_11 . IDENT_12 IDENT_13 = com . facebook . buck . core . IDENT_11 . impl . IDENT_14 . of ( IDENT_5 . METHOD_9 ( ) , config ) ; com . facebook . buck . core . parser . IDENT_15 . IDENT_16 IDENT_17 = new com . facebook . buck . core . parser . IDENT_15 . METHOD_10 ( ) ; return new com . facebook . buck . core . config . METHOD_11 ( config , IDENT_5 , IDENT_18 , platform , IDENT_19 , ( IDENT_20 ) -> IDENT_17 . create ( IDENT_13 , IDENT_20 ) ) ; }
org . junit . Assert . assertEquals ( expected , result ) 