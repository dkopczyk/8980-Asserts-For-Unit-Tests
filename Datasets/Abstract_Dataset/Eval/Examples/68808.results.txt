METHOD_0 ( ) { com . google . common . collect . IDENT_0 < java . lang . String > IDENT_1 = com . google . common . collect . IDENT_0 . of ( STRING_0 , STRING_1 ) ; com . google . common . collect . IDENT_0 < java . lang . String > IDENT_2 = com . google . common . collect . IDENT_0 . of ( STRING_2 , STRING_3 ) ; com . google . common . collect . IDENT_0 < java . lang . String > IDENT_3 = com . google . common . collect . IDENT_0 . of ( STRING_4 , STRING_4 ) ; com . facebook . buck . IDENT_4 . IDENT_5 IDENT_6 = com . facebook . buck . IDENT_4 . IDENT_5 . builder ( ) . METHOD_1 ( IDENT_1 ) . METHOD_2 ( IDENT_2 ) . METHOD_3 ( IDENT_3 ) . build ( ) ; java . util . List < java . lang . String > expected = com . google . common . io . IDENT_7 . METHOD_4 ( com . google . common . io . IDENT_7 . getResource ( getClass ( ) , STRING_5 ) , IDENT_8 . UTF_8 ) ; java . util . List < java . lang . String > actual = com . google . common . collect . Lists . newArrayList ( com . facebook . buck . IDENT_4 . IDENT_9 . IDENT_10 . METHOD_5 ( IDENT_6 ) ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( com . facebook . buck . IDENT_4 . IDENT_5 ) { java . util . List < java . lang . String > IDENT_11 = new java . util . ArrayList ( ) ; IDENT_11 . add ( STRING_6 ) ; IDENT_11 . add ( STRING_7 ) ; IDENT_11 . add ( STRING_8 ) ; com . facebook . buck . IDENT_4 . IDENT_9 . IDENT_10 . METHOD_6 ( STRING_9 , IDENT_6 . METHOD_7 ( ) , IDENT_11 ) ; com . facebook . buck . IDENT_4 . IDENT_9 . IDENT_10 . METHOD_6 ( STRING_10 , IDENT_6 . METHOD_8 ( ) , IDENT_11 ) ; com . facebook . buck . IDENT_4 . IDENT_9 . IDENT_10 . METHOD_6 ( STRING_11 , IDENT_6 . METHOD_9 ( ) , IDENT_11 ) ; IDENT_11 . add ( STRING_12 ) ; java . util . List < java . lang . String > IDENT_3 = com . google . common . collect . Lists . newArrayList ( IDENT_6 . METHOD_10 ( ) ) ; IDENT_3 . addAll ( com . facebook . buck . IDENT_4 . IDENT_9 . IDENT_10 . IDENT_12 ) ; com . facebook . buck . IDENT_4 . IDENT_9 . IDENT_10 . METHOD_6 ( STRING_13 , IDENT_3 , IDENT_11 ) ; return IDENT_11 ; }
org . junit . Assert . assertEquals ( expected , actual ) 