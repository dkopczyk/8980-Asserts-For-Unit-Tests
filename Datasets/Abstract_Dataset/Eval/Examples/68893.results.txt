METHOD_0 ( ) { com . facebook . buck . util . IDENT_0 . IDENT_1 IDENT_2 = new com . facebook . buck . util . IDENT_0 . METHOD_1 ( METHOD_1 . IDENT_3 . IDENT_4 ) ; java . util . List < java . lang . Object > IDENT_5 = ( ( java . util . List < java . lang . Object > ) ( IDENT_2 . METHOD_2 ( com . facebook . buck . util . IDENT_0 . IDENT_6 . METHOD_3 ( STRING_0 ) ) ) ) ; java . util . List < java . lang . Object > expected = com . google . common . collect . ImmutableList . of ( ) ; "<AssertPlaceHolder>" ; } equalTo ( com . facebook . buck . query . IDENT_7 ) { return ( ( ( type . equals ( other . type ) ) && ( ( IDENT_8 ) == ( other . IDENT_8 ) ) ) && ( java . util . IDENT_9 . equals ( expression , other . expression ) ) ) && ( java . util . IDENT_9 . equals ( IDENT_10 , other . IDENT_10 ) ) ; }
org . junit . Assert . assertThat ( IDENT_5 , org . hamcrest . Matchers . equalTo ( expected ) ) 