METHOD_0 ( ) { com . facebook . buck . util . config . IDENT_0 IDENT_1 = com . facebook . buck . util . config . IDENT_0 . builder ( ) . METHOD_1 ( com . google . common . collect . ImmutableMap . of ( STRING_0 , com . google . common . collect . ImmutableMap . of ( STRING_1 , STRING_2 ) ) ) . METHOD_1 ( com . google . common . collect . ImmutableMap . of ( STRING_0 , com . google . common . collect . ImmutableMap . of ( STRING_1 , STRING_3 ) ) ) . build ( ) ; "<AssertPlaceHolder>" ; } getValue ( com . facebook . buck . core . IDENT_2 . IDENT_3 , java . lang . reflect . Field ) { try { @ com . facebook . buck . rules . IDENT_4 . METHOD_2 ( STRING_4 ) T IDENT_5 = ( ( T ) ( field . get ( value ) ) ) ; return IDENT_5 ; } catch ( java . lang . IDENT_6 e ) { throw new java . lang . RuntimeException ( e ) ; } }
org . junit . Assert . assertThat ( IDENT_1 . getValue ( STRING_0 , STRING_1 ) , org . hamcrest . Matchers . equalTo ( java . util . Optional . of ( STRING_3 ) ) ) 