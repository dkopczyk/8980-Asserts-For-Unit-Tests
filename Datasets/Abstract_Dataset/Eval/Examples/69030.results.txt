METHOD_0 ( ) { METHOD_1 ( ) ; when ( IDENT_0 . METHOD_2 ( ) ) . thenReturn ( IDENT_1 . IDENT_2 . IDENT_3 ) ; IDENT_4 . METHOD_3 ( IDENT_5 , IDENT_0 ) ; verify ( IDENT_5 ) . METHOD_4 ( IDENT_6 , IDENT_7 . IDENT_8 ) ; verify ( IDENT_9 ) . METHOD_5 ( IDENT_10 , com . facebook . IDENT_11 . IDENT_12 . IDENT_13 . IDENT_14 ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_15 = com . facebook . common . internal . ImmutableMap . of ( IDENT_16 . IDENT_17 , STRING_0 ) ; verify ( IDENT_9 ) . METHOD_6 ( IDENT_10 , com . facebook . IDENT_11 . IDENT_12 . IDENT_13 . IDENT_14 , IDENT_15 ) ; verify ( IDENT_9 ) . METHOD_7 ( IDENT_10 , com . facebook . IDENT_11 . IDENT_12 . IDENT_13 . IDENT_14 , true ) ; "<AssertPlaceHolder>" ; } isValid ( ) { return ( com . facebook . common . IDENT_18 . IDENT_19 . isValid ( IDENT_20 ) ) || ( ( IDENT_21 ) != null ) ; }
org . junit . Assert . assertTrue ( ( ! ( IDENT_6 . isValid ( ) ) ) ) 