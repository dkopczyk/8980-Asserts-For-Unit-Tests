METHOD_0 ( ) { "<AssertPlaceHolder>" ; } METHOD_1 ( ) { if ( ( ( ! ( IDENT_0 ) ) && ( ( IDENT_1 ) != null ) ) && ( ( IDENT_2 ) == null ) ) { if ( ( ( ( IDENT_1 . METHOD_2 ( ) ) && ( ! ( IDENT_3 . METHOD_3 ( ) ) ) ) && ( ! ( IDENT_4 ) ) ) && ( ( IDENT_5 ) == ( com . fasterxml . jackson . core . filter . IDENT_6 . IDENT_7 ) ) ) { return IDENT_1 = null ; } } com . fasterxml . jackson . core . filter . IDENT_8 IDENT_9 = IDENT_2 ; if ( IDENT_9 != null ) { while ( true ) { com . fasterxml . jackson . core . IDENT_10 t = IDENT_9 . METHOD_4 ( ) ; if ( t != null ) { IDENT_1 = t ; return t ; } if ( IDENT_9 == ( IDENT_3 ) ) { IDENT_2 = null ; if ( IDENT_9 . METHOD_5 ( ) ) { t = delegate . METHOD_6 ( ) ; IDENT_1 = t ; return t ; } break ; } IDENT_9 = IDENT_3 . METHOD_7 ( IDENT_9 ) ; IDENT_2 = IDENT_9 ; if ( IDENT_9 == null ) { throw METHOD_8 ( ( STRING_0 + t ) ) ; } } } com . fasterxml . jackson . core . IDENT_10 t = delegate . METHOD_1 ( ) ; if ( t == null ) { IDENT_1 = t ; return t ; } com . fasterxml . jackson . core . filter . IDENT_6 f ; switch ( t . id ( ) ) { case com . fasterxml . jackson . core . IDENT_11 . IDENT_12 : f = IDENT_5 ; if ( f == ( com . fasterxml . jackson . core . filter . IDENT_6 . IDENT_7 ) ) { IDENT_3 = IDENT_3 . METHOD_9 ( f , true ) ; return IDENT_1 = t ; } if ( f == null ) { delegate . METHOD_10 ( ) ; break ; } f = IDENT_3 . METHOD_11 ( f ) ; if ( f == null ) { delegate . METHOD_10 ( ) ; break ; } if ( f != ( com . fasterxml . jackson . core . filter . IDENT_6 . IDENT_7 ) ) { f = f . METHOD_12 ( ) ; } IDENT_5 = f ; if ( f == ( com . fasterxml . jackson . core . filter . IDENT_6 . IDENT_7 ) ) { IDENT_3 = IDENT_3 . METHOD_9 ( f , true ) ; return IDENT_1 = t ; } IDENT_3 = IDENT_3 . METHOD_9 ( f , false ) ; if ( IDENT_4 ) { t = METHOD_13 ( IDENT_3 ) ; if ( t != null ) { IDENT_1 = t ; return t ; } } break ; case com . fasterxml . jackson . core . IDENT_11 . IDENT_13 : f = IDENT_5 ; if ( f == ( com . fasterxml . jackson . core . filter . IDENT_6 . IDENT_7 ) ) { IDENT_3 = IDENT_3 . METHOD_14 ( f , true ) ; return IDENT_1 = t ; } if ( f == null ) { delegate . METHOD_10 ( ) ; break ; } f = IDENT_3 . METHOD_11 ( f ) ; if ( f == null ) { delegate . METHOD_10 ( ) ; break ; } if ( f != ( com . fasterxml . jackson . core . filter . IDENT_6 . IDENT_7 ) ) { f = f . METHOD_15 ( ) ; } IDENT_5 = f ; if ( f == ( com . fasterxml . jackson . core . filter . IDENT_6 . IDENT_7 ) ) { IDENT_3 = IDENT_3 . METHOD_14 ( f , true ) ; return IDENT_1 = t ; } IDENT_3 = IDENT_3 . METHOD_14 ( f , false ) ; if ( IDENT_4 ) { t = METHOD_13 ( IDENT_3 ) ; if ( t != null ) { IDENT_1 = t ; return t ; } } break ; case com . fasterxml . jackson . core . IDENT_11 . IDENT_14 : case com . fasterxml . jackson . core . IDENT_11 . IDENT_15 : { boolean IDENT_16 = IDENT_3 . METHOD_3 ( ) ; f = IDENT_3 . METHOD_16 ( ) ; if ( ( f != null ) && ( f != ( com . fasterxml . jackson . core . filter . IDENT_6 . IDENT_7 ) ) ) { f . METHOD_17 ( ) ; } IDENT_3 = IDENT_3 . METHOD_18 ( ) ; IDENT_5 = IDENT_3 . METHOD_16 ( ) ; if ( IDENT_16 ) { return IDENT_1 = t ; } } break ; case com . fasterxml . jackson . core . IDENT_11 . IDENT_17 : { final java . lang . String name = delegate . METHOD_19 ( ) ; f = IDENT_3 . METHOD_20 ( name ) ; if ( f == ( com . fasterxml . jackson . core . filter . IDENT_6 . IDENT_7 ) ) { IDENT_5 = f ; return IDENT_1 = t ; } if ( f == null ) { delegate . METHOD_1 ( ) ; delegate . METHOD_10 ( ) ; break ; } f = f . METHOD_21 ( name ) ; if ( f == null ) { delegate . METHOD_1 ( ) ; delegate . METHOD_10 ( ) ; break ; } IDENT_5 = f ; if ( f == ( com . fasterxml . jackson . core . filter . IDENT_6 . IDENT_7 ) ) { if ( METHOD_22 ( ) ) { if ( IDENT_4 ) { return IDENT_1 = t ; } } else { delegate . METHOD_1 ( ) ; delegate . METHOD_10 ( ) ; } } if ( IDENT_4 ) { t = METHOD_13 ( IDENT_3 ) ; if ( t != null ) { IDENT_1 = t ; return t ; } } break ; } default : f = IDENT_5 ; if ( f == ( com . fasterxml . jackson . core . filter . IDENT_6 . IDENT_7 ) ) { return IDENT_1 = t ; } if ( f != null ) { f = IDENT_3 . METHOD_11 ( f ) ; if ( ( f == ( com . fasterxml . jackson . core . filter . IDENT_6 . IDENT_7 ) ) || ( ( f != null ) && ( f . METHOD_23 ( delegate ) ) ) ) { if ( METHOD_22 ( ) ) { return IDENT_1 = t ; } } } break ; } return METHOD_24 ( ) ; }
org . junit . Assert . assertNull ( parser . METHOD_1 ( ) ) 