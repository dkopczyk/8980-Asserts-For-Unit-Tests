METHOD_0 ( ) { int [ ] [ ] grid = new int [ ] [ ] { new int [ ] { 1 , 1 } , new int [ ] { 1 , 1 } } ; "<AssertPlaceHolder>" ; } METHOD_1 ( int [ ] [ ] ) { int IDENT_0 = 0 ; int IDENT_1 = 0 ; for ( int i = 0 ; i < ( grid . length ) ; i ++ ) { for ( int j = 0 ; j < ( grid [ i ] . length ) ; j ++ ) { if ( ( grid [ i ] [ j ] ) == 1 ) { IDENT_0 ++ ; if ( ( i < ( ( grid . length ) - 1 ) ) && ( ( grid [ ( i + 1 ) ] [ j ] ) == 1 ) ) IDENT_1 ++ ; if ( ( j < ( ( grid [ i ] . length ) - 1 ) ) && ( ( grid [ i ] [ ( j + 1 ) ] ) == 1 ) ) IDENT_1 ++ ; } } } return ( IDENT_0 * 4 ) - ( IDENT_1 * 2 ) ; }
org . junit . Assert . assertEquals ( 8 , METHOD_1 . METHOD_1 ( grid ) ) 