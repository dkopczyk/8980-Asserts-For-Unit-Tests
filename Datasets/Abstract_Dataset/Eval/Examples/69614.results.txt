METHOD_0 ( ) { org . springframework . context . IDENT_0 IDENT_1 = mock ( org . springframework . context . IDENT_0 . class ) ; org . IDENT_2 . model . IDENT_3 IDENT_4 = mock ( org . IDENT_2 . model . IDENT_3 . class ) ; java . lang . annotation . IDENT_5 [ ] IDENT_6 = new java . lang . annotation . IDENT_5 [ 1 ] ; java . lang . Class IDENT_7 = org . IDENT_2 . condition . IDENT_8 . class ; org . IDENT_2 . condition . IDENT_8 condition = mock ( org . IDENT_2 . condition . IDENT_8 . class ) ; org . IDENT_2 . annotation . IDENT_9 IDENT_10 = mock ( org . IDENT_2 . annotation . IDENT_9 . class ) ; org . IDENT_2 . model . IDENT_11 IDENT_12 = mock ( org . IDENT_2 . model . IDENT_11 . class ) ; org . IDENT_13 . api . mockito . IDENT_14 . METHOD_1 ( org . IDENT_2 . utils . IDENT_15 . class ) ; when ( org . IDENT_2 . utils . IDENT_15 . METHOD_2 ( IDENT_6 [ 0 ] , org . IDENT_2 . annotation . IDENT_9 . class ) ) . thenReturn ( true ) ; when ( org . IDENT_2 . utils . IDENT_15 . METHOD_3 ( IDENT_6 [ 0 ] , org . IDENT_2 . annotation . IDENT_9 . class ) ) . thenReturn ( IDENT_10 ) ; when ( IDENT_10 . value ( ) ) . thenReturn ( IDENT_7 ) ; when ( org . IDENT_2 . utils . IDENT_15 . METHOD_4 ( IDENT_6 [ 0 ] ) ) . thenReturn ( IDENT_12 ) ; when ( IDENT_1 . METHOD_5 ( IDENT_7 ) ) . thenReturn ( condition ) ; when ( condition . METHOD_6 ( IDENT_4 , IDENT_12 ) ) . thenReturn ( true ) ; org . IDENT_2 . model . IDENT_16 IDENT_17 = new org . IDENT_2 . model . METHOD_7 ( IDENT_1 , IDENT_4 , IDENT_6 ) ; boolean result = IDENT_17 . evaluate ( ) ; "<AssertPlaceHolder>" ; verify ( IDENT_1 ) . METHOD_5 ( IDENT_7 ) ; verify ( condition ) . METHOD_6 ( IDENT_4 , IDENT_12 ) ; verify ( IDENT_10 ) . value ( ) ; org . IDENT_13 . api . mockito . IDENT_14 . METHOD_8 ( ) ; org . IDENT_2 . utils . IDENT_15 . METHOD_2 ( IDENT_6 [ 0 ] , org . IDENT_2 . annotation . IDENT_9 . class ) ; org . IDENT_2 . utils . IDENT_15 . METHOD_3 ( IDENT_6 [ 0 ] , org . IDENT_2 . annotation . IDENT_9 . class ) ; org . IDENT_2 . utils . IDENT_15 . METHOD_4 ( IDENT_6 [ 0 ] ) ; } evaluate ( ) { return IDENT_18 . entrySet ( ) . stream ( ) . map ( ( entry ) -> METHOD_9 ( org . IDENT_2 . model . IDENT_1 , org . IDENT_2 . model . IDENT_4 , entry . getKey ( ) , entry . getValue ( ) ) ) . filter ( ( result ) -> result == Boolean . IDENT_19 ) . METHOD_10 ( ) . METHOD_11 ( true ) ; }
org . junit . Assert . assertEquals ( true , result ) 