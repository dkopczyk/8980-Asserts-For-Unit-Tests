METHOD_0 ( ) { final org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 instance = getInstance ( ) ; instance . METHOD_1 ( new org . IDENT_0 . METHOD_2 ( STRING_0 , new org . IDENT_0 . METHOD_3 ( STRING_0 , STRING_1 ) , STRING_2 ) ) ; final org . IDENT_0 . Node expected = new org . IDENT_0 . METHOD_4 ( new org . IDENT_0 . METHOD_5 ( STRING_1 , false ) , STRING_0 ) ; final org . IDENT_0 . Node actual = instance . METHOD_6 ( 2 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( org . IDENT_0 . Node ) { if ( IDENT_4 instanceof org . IDENT_0 . METHOD_4 ) { int IDENT_5 = 0 ; boolean IDENT_6 = true ; final org . IDENT_0 . METHOD_5 [ ] IDENT_7 = java . util . Arrays . METHOD_7 ( IDENT_4 . METHOD_8 ( ) , IDENT_4 . METHOD_8 ( ) . length , org . IDENT_0 . METHOD_5 [ ] . class ) ; for ( int j = 0 ; j < ( IDENT_7 . length ) ; j ++ ) { final org . IDENT_0 . METHOD_5 IDENT_8 = IDENT_7 [ j ] ; if ( IDENT_8 . IDENT_9 . equals ( IDENT_10 . IDENT_11 ) ) { if ( IDENT_8 . IDENT_12 ) { IDENT_6 = false ; } else { IDENT_5 ++ ; IDENT_7 [ j ] = null ; } } else if ( IDENT_8 . IDENT_9 . equals ( IDENT_10 . IDENT_13 ) ) { if ( IDENT_8 . IDENT_12 ) { IDENT_5 ++ ; IDENT_7 [ j ] = null ; } else { IDENT_6 = false ; } } } if ( IDENT_6 ) { if ( IDENT_5 > 0 ) { if ( ( IDENT_7 . length ) == IDENT_5 ) { throw new java . lang . RuntimeException ( STRING_3 ) ; } final org . IDENT_0 . METHOD_5 [ ] IDENT_14 = new org . IDENT_0 . METHOD_5 [ ( IDENT_7 . length ) - IDENT_5 ] ; int k = 0 ; for ( int j = 0 ; j < ( IDENT_7 . length ) ; j ++ ) { final org . IDENT_0 . METHOD_5 IDENT_8 = IDENT_7 [ j ] ; if ( IDENT_8 != null ) { IDENT_14 [ ( k ++ ) ] = IDENT_8 ; } } return de . IDENT_15 . IDENT_16 . IDENT_17 . core . IDENT_18 . remove . IDENT_19 . METHOD_9 ( convert ( IDENT_14 ) ) ; } else { return de . IDENT_15 . IDENT_16 . IDENT_17 . core . IDENT_18 . remove . IDENT_19 . METHOD_9 ( convert ( IDENT_7 ) ) ; } } else { return null ; } } else { final org . IDENT_0 . METHOD_5 IDENT_8 = ( ( org . IDENT_0 . METHOD_5 ) ( IDENT_4 ) ) ; if ( IDENT_8 . IDENT_9 . equals ( IDENT_10 . IDENT_11 ) ) { if ( ! ( IDENT_8 . IDENT_12 ) ) { throw new java . lang . RuntimeException ( STRING_3 ) ; } return null ; } else if ( IDENT_8 . IDENT_9 . equals ( IDENT_10 . IDENT_13 ) ) { if ( IDENT_8 . IDENT_12 ) { throw new java . lang . RuntimeException ( STRING_3 ) ; } return null ; } else { return de . IDENT_15 . IDENT_16 . IDENT_17 . core . IDENT_18 . remove . IDENT_19 . METHOD_9 ( convert ( new org . IDENT_0 . METHOD_5 [ ] { IDENT_8 } ) ) ; } } }
org . junit . Assert . assertEquals ( expected , actual ) 