METHOD_0 ( ) { IDENT_0 . METHOD_1 ( new org . IDENT_0 . security . METHOD_2 ( ) { public java . lang . String METHOD_3 ( ) { return STRING_0 ; } public java . util . Set < java . lang . String > METHOD_4 ( ) { return new java . util . HashSet ( ) ; } public java . util . Set < java . lang . String > METHOD_5 ( ) { return new java . util . HashSet ( ) ; } public java . lang . String METHOD_6 ( ) { return STRING_0 ; } } ) ; java . util . Map < java . lang . String , org . IDENT_0 . IDENT_1 . IDENT_2 > events = new java . util . HashMap ( ) ; events . put ( STRING_1 , new org . IDENT_0 . IDENT_1 . METHOD_7 ( IDENT_0 ) . name ( STRING_2 ) . build ( ) ) ; events . put ( STRING_3 , new org . IDENT_0 . IDENT_1 . METHOD_7 ( IDENT_0 ) . name ( STRING_4 ) . build ( ) ) ; int IDENT_3 = 0 ; org . IDENT_0 . IDENT_1 . IDENT_2 [ ] e = new org . IDENT_0 . IDENT_1 . IDENT_2 [ events . size ( ) ] ; for ( java . lang . String event : events . METHOD_8 ( ) ) { e [ IDENT_3 ] = events . get ( event ) ; IDENT_3 ++ ; } java . lang . String IDENT_4 = org . IDENT_0 . utils . json . IDENT_5 . METHOD_9 ( e ) ; org . IDENT_0 . IDENT_1 . IDENT_2 [ ] IDENT_6 = org . IDENT_0 . utils . json . IDENT_5 . METHOD_10 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } size ( ) { return value ( ) . size ( ) ; }
org . junit . Assert . assertEquals ( events . size ( ) , IDENT_6 . length ) 