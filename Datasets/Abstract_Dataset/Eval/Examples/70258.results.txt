METHOD_0 ( ) { java . util . List < java . io . File > IDENT_0 = new java . util . ArrayList ( org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( IDENT_5 . getPath ( ) ) ) ; for ( java . io . File f : IDENT_0 ) { boolean found = false ; for ( org . IDENT_1 . IDENT_2 . file . IDENT_6 IDENT_7 : IDENT_8 . METHOD_2 ( ) ) { if ( ( f . getName ( ) . equals ( IDENT_7 . getPath ( ) ) ) && ( f . METHOD_3 ( ) ) ) { found = true ; METHOD_4 ( f , IDENT_7 ) ; } } "<AssertPlaceHolder>" ; } } METHOD_4 ( java . io . File , org . IDENT_1 . IDENT_2 . file . IDENT_6 ) { java . util . List < java . io . File > IDENT_0 = new java . util . ArrayList ( org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_5 ( IDENT_9 ) ) ; java . util . List < org . IDENT_1 . IDENT_2 . file . IDENT_6 > IDENT_10 = new java . util . ArrayList ( IDENT_8 . METHOD_6 ( file ) ) ; org . junit . Assert . assertEquals ( IDENT_0 . size ( ) , IDENT_10 . size ( ) ) ; for ( java . io . File f : IDENT_0 ) { boolean found = false ; for ( org . IDENT_1 . IDENT_2 . file . IDENT_6 IDENT_7 : IDENT_10 ) { if ( f . getName ( ) . equals ( IDENT_7 . getPath ( ) . METHOD_7 ( ( ( file . getPath ( ) ) + "/" ) , "" ) ) ) { found = true ; org . junit . Assert . assertEquals ( f . METHOD_3 ( ) , IDENT_7 . METHOD_3 ( ) ) ; if ( f . METHOD_3 ( ) ) { METHOD_4 ( f , IDENT_7 ) ; } } } org . junit . Assert . assertTrue ( found ) ; } }
org . junit . Assert . assertTrue ( found ) 