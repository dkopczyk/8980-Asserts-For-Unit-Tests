METHOD_0 ( ) { java . util . List < java . lang . String > IDENT_0 = new java . util . ArrayList ( ) ; IDENT_0 . add ( STRING_0 ) ; when ( IDENT_1 . METHOD_1 ( ) ) . thenReturn ( STRING_1 ) ; when ( IDENT_2 . METHOD_2 ( STRING_1 ) ) . thenReturn ( IDENT_0 ) ; java . util . List < java . lang . String > IDENT_3 = new java . util . ArrayList ( IDENT_4 . METHOD_3 ( IDENT_5 . IDENT_6 . IDENT_7 ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . IDENT_8 . IDENT_9 . database . IDENT_6 [ ] ) { java . util . List < java . lang . String > IDENT_10 = new java . util . ArrayList ( ) ; java . util . List < java . lang . String > list = IDENT_2 . METHOD_2 ( IDENT_1 . METHOD_1 ( ) ) ; for ( java . lang . String s : list ) { for ( org . IDENT_8 . IDENT_9 . database . IDENT_6 type : types ) { if ( s . startsWith ( type . METHOD_4 ( ) ) ) { IDENT_10 . add ( s . substring ( type . METHOD_4 ( ) . length ( ) ) . trim ( ) ) ; } } } return IDENT_10 ; }
org . junit . Assert . assertEquals ( 0 , IDENT_3 . size ( ) ) 