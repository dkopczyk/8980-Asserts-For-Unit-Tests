METHOD_0 ( ) { org . apache . commons . io . IDENT_0 . write ( new java . io . File ( IDENT_1 . IDENT_2 , IDENT_1 . IDENT_3 ) , "" ) ; long IDENT_4 = IDENT_1 . IDENT_5 . IDENT_6 . METHOD_1 ( new org . apache . hadoop . fs . Path ( IDENT_1 . IDENT_2 , IDENT_1 . IDENT_3 ) ) . METHOD_2 ( ) ; when ( IDENT_1 . IDENT_7 . METHOD_3 ( ) ) . thenReturn ( 0 ) ; when ( IDENT_1 . IDENT_7 . METHOD_4 ( ) ) . thenReturn ( false ) ; when ( IDENT_1 . IDENT_7 . METHOD_5 ( ) ) . thenReturn ( new long [ ] { } ) ; java . lang . Thread . sleep ( 1000 ) ; IDENT_1 . IDENT_5 . METHOD_6 ( true ) ; IDENT_1 . IDENT_5 . METHOD_7 ( IDENT_1 . IDENT_7 ) ; org . apache . hadoop . fs . IDENT_8 IDENT_9 = IDENT_1 . IDENT_5 . IDENT_6 . METHOD_1 ( new org . apache . hadoop . fs . Path ( IDENT_1 . IDENT_2 , IDENT_1 . IDENT_3 ) ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( org . apache . IDENT_10 . IDENT_11 . lib . fs . IDENT_12 ) { try { org . apache . hadoop . fs . Path path = new org . apache . hadoop . fs . Path ( IDENT_13 . getPath ( ) ) ; if ( ( fs . exists ( path ) ) == false ) { org . apache . IDENT_10 . IDENT_11 . lib . fs . IDENT_14 . IDENT_15 . logger . debug ( STRING_0 , path ) ; return ; } org . apache . hadoop . fs . IDENT_16 IDENT_17 = fs . METHOD_8 ( path ) ; com . amazonaws . services . IDENT_14 . model . IDENT_18 IDENT_19 = new com . amazonaws . services . IDENT_14 . model . METHOD_9 ( ) ; IDENT_19 . METHOD_10 ( IDENT_13 . METHOD_11 ( ) ) ; java . lang . String IDENT_20 = ( ( IDENT_21 ) + ( org . apache . hadoop . fs . Path . IDENT_22 ) ) + ( IDENT_13 . METHOD_12 ( ) ) ; com . amazonaws . services . IDENT_14 . model . IDENT_23 request = new com . amazonaws . services . IDENT_14 . model . METHOD_13 ( IDENT_24 , IDENT_20 , IDENT_17 , IDENT_19 ) ; if ( ( IDENT_13 . METHOD_11 ( ) ) < ( Integer . MAX_VALUE ) ) { request . METHOD_14 ( ) . METHOD_15 ( ( ( int ) ( IDENT_13 . METHOD_11 ( ) ) ) ) ; } else { throw new java . lang . RuntimeException ( STRING_1 ) ; } if ( fs . exists ( path ) ) { com . amazonaws . services . IDENT_14 . model . IDENT_25 result = IDENT_26 . METHOD_16 ( request ) ; org . apache . IDENT_10 . IDENT_11 . lib . fs . IDENT_14 . IDENT_15 . logger . debug ( STRING_2 , IDENT_20 , result . METHOD_17 ( ) ) ; } } catch ( java . io . IDENT_27 e ) { org . apache . IDENT_10 . IDENT_11 . lib . fs . IDENT_14 . IDENT_15 . logger . debug ( STRING_0 , IDENT_13 . getPath ( ) ) ; } catch ( java . io . IOException e ) { org . apache . IDENT_10 . IDENT_11 . lib . fs . IDENT_14 . IDENT_15 . logger . error ( STRING_3 , e . getMessage ( ) ) ; } }
org . junit . Assert . assertTrue ( ( ( IDENT_9 . METHOD_2 ( ) ) > IDENT_4 ) ) 