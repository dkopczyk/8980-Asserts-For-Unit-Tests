METHOD_0 ( ) { java . util . List < java . util . Map < java . lang . String , java . lang . String > > IDENT_0 = new java . util . METHOD_1 ( ) ; IDENT_0 . add ( new java . util . HashMap < java . lang . String , java . lang . String > ( ) ) ; org . finra . IDENT_1 . engine . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = new org . finra . IDENT_1 . engine . IDENT_2 . IDENT_3 . METHOD_2 ( ) ; org . finra . IDENT_1 . engine . IDENT_2 . IDENT_3 . METHOD_2 . IDENT_6 IDENT_7 = new org . finra . IDENT_1 . engine . IDENT_2 . IDENT_3 . METHOD_2 . METHOD_3 ( ) ; IDENT_7 . setName ( STRING_0 ) ; IDENT_7 . METHOD_4 ( "1" ) ; IDENT_7 . METHOD_5 ( STRING_1 ) ; java . util . List < java . util . Map < java . lang . String , java . lang . String > > IDENT_8 = IDENT_5 . METHOD_6 ( IDENT_7 , IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( org . finra . IDENT_1 . engine . IDENT_2 . IDENT_3 . IDENT_9 , java . util . List ) { org . finra . IDENT_1 . consumer . IDENT_10 IDENT_11 = IDENT_12 . get ( action . getName ( ) ) ; org . finra . IDENT_1 . consumer . IDENT_13 IDENT_14 = new org . finra . IDENT_1 . consumer . METHOD_7 ( 0 , null ) ; for ( java . util . Map < java . lang . String , java . lang . String > IDENT_15 : IDENT_16 ) { IDENT_14 . METHOD_8 ( ) . METHOD_9 ( IDENT_15 ) ; IDENT_11 . transform ( IDENT_14 ) ; IDENT_15 . METHOD_9 ( IDENT_14 . METHOD_8 ( ) ) ; } return IDENT_16 ; }
org . junit . Assert . assertEquals ( 10 , IDENT_8 . size ( ) ) 