METHOD_0 ( ) { java . util . List < org . finra . herd . model . api . xml . IDENT_0 > IDENT_1 = IDENT_2 . METHOD_1 ( ) ; for ( org . finra . herd . model . api . xml . IDENT_0 IDENT_3 : IDENT_1 ) { IDENT_2 . METHOD_2 ( IDENT_3 . METHOD_3 ( ) , IDENT_3 . METHOD_4 ( ) ) ; } java . util . List < org . finra . herd . model . api . xml . IDENT_0 > result = IDENT_4 . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { javax . persistence . criteria . IDENT_5 builder = IDENT_6 . METHOD_6 ( ) ; javax . persistence . criteria . IDENT_7 < javax . persistence . IDENT_8 > criteria = builder . METHOD_7 ( ) ; javax . persistence . criteria . IDENT_9 < org . finra . herd . model . jpa . IDENT_10 > IDENT_11 = criteria . from ( org . finra . herd . model . jpa . IDENT_10 . class ) ; javax . persistence . criteria . IDENT_12 < org . finra . herd . model . jpa . IDENT_10 , org . finra . herd . model . jpa . IDENT_13 > IDENT_14 = IDENT_11 . join ( IDENT_15 . IDENT_16 ) ; javax . persistence . criteria . Path < java . lang . String > IDENT_16 = IDENT_14 . get ( IDENT_17 . IDENT_16 ) ; javax . persistence . criteria . Path < java . lang . String > IDENT_18 = IDENT_11 . get ( IDENT_15 . IDENT_18 ) ; criteria . METHOD_8 ( IDENT_16 , IDENT_18 ) . METHOD_9 ( builder . METHOD_10 ( IDENT_16 ) , builder . METHOD_10 ( IDENT_18 ) ) ; java . util . List < javax . persistence . IDENT_8 > IDENT_19 = IDENT_6 . METHOD_11 ( criteria ) . METHOD_12 ( ) ; java . util . List < org . finra . herd . model . api . xml . IDENT_0 > IDENT_1 = new java . util . ArrayList ( ) ; for ( javax . persistence . IDENT_8 tuple : IDENT_19 ) { IDENT_1 . add ( new org . finra . herd . model . api . xml . METHOD_13 ( tuple . get ( IDENT_16 ) , tuple . get ( IDENT_18 ) ) ) ; } return IDENT_1 ; }
org . junit . Assert . assertEquals ( IDENT_1 , result ) 