METHOD_0 ( ) { IDENT_0 . METHOD_1 ( new org . finra . herd . model . api . xml . METHOD_2 ( IDENT_1 , IDENT_2 , IDENT_3 ) , org . finra . herd . rest . IDENT_4 ) ; IDENT_0 . METHOD_1 ( new org . finra . herd . model . api . xml . METHOD_2 ( IDENT_1 , IDENT_2 , IDENT_5 ) , org . finra . herd . rest . IDENT_6 ) ; org . finra . herd . model . api . xml . IDENT_7 IDENT_8 = new org . finra . herd . model . api . xml . METHOD_3 ( com . google . common . collect . Lists . newArrayList ( new org . finra . herd . model . api . xml . METHOD_2 ( IDENT_1 , IDENT_2 , IDENT_3 ) ) ) ; org . finra . herd . model . api . xml . IDENT_9 IDENT_10 = new org . finra . herd . model . api . xml . METHOD_4 ( IDENT_1 , IDENT_2 ) ; when ( IDENT_11 . METHOD_5 ( IDENT_10 ) ) . thenReturn ( IDENT_8 ) ; org . finra . herd . model . api . xml . METHOD_3 IDENT_12 = IDENT_13 . METHOD_5 ( org . finra . herd . rest . IDENT_1 , org . finra . herd . rest . IDENT_2 ) ; verify ( IDENT_11 ) . METHOD_5 ( IDENT_10 ) ; METHOD_6 ( IDENT_11 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( org . finra . herd . model . api . xml . METHOD_4 ) { IDENT_14 . METHOD_7 ( IDENT_10 ) ; org . finra . herd . model . jpa . IDENT_15 IDENT_16 = IDENT_17 . METHOD_8 ( IDENT_10 ) ; org . finra . herd . model . api . xml . METHOD_3 IDENT_8 = new org . finra . herd . model . api . xml . METHOD_3 ( ) ; for ( org . finra . herd . model . jpa . IDENT_18 IDENT_19 : IDENT_16 . METHOD_9 ( ) ) { IDENT_8 . METHOD_10 ( ) . add ( METHOD_11 ( IDENT_19 ) ) ; } return IDENT_8 ; }
org . junit . Assert . assertEquals ( IDENT_8 , IDENT_12 ) 