METHOD_0 ( ) { org . finra . herd . model . api . xml . IDENT_0 IDENT_1 = new org . finra . herd . model . api . xml . METHOD_1 ( java . util . Arrays . asList ( new org . finra . herd . model . api . xml . METHOD_2 ( IDENT_2 , IDENT_3 ) ) ) ; when ( IDENT_4 . METHOD_3 ( org . finra . herd . rest . IDENT_2 ) ) . thenReturn ( IDENT_1 ) ; org . finra . herd . model . api . xml . METHOD_1 IDENT_5 = IDENT_6 . METHOD_3 ( org . finra . herd . rest . IDENT_2 ) ; verify ( IDENT_4 ) . METHOD_3 ( org . finra . herd . rest . IDENT_2 ) ; METHOD_4 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . util . List ) { javax . persistence . criteria . IDENT_7 builder = IDENT_8 . METHOD_5 ( ) ; javax . persistence . criteria . IDENT_9 < org . finra . herd . model . jpa . IDENT_10 > criteria = builder . METHOD_6 ( org . finra . herd . model . jpa . IDENT_10 . class ) ; javax . persistence . criteria . IDENT_11 < org . finra . herd . model . jpa . IDENT_10 > IDENT_12 = criteria . from ( org . finra . herd . model . jpa . IDENT_10 . class ) ; javax . persistence . criteria . IDENT_13 < org . finra . herd . model . jpa . IDENT_10 , org . finra . herd . model . jpa . IDENT_14 > IDENT_15 = IDENT_12 . join ( IDENT_16 . IDENT_17 ) ; javax . persistence . criteria . Path < java . lang . String > IDENT_18 = IDENT_15 . get ( IDENT_19 . code ) ; javax . persistence . criteria . Path < java . lang . String > IDENT_20 = IDENT_12 . get ( IDENT_16 . name ) ; javax . persistence . criteria . IDENT_21 IDENT_22 ; if ( ! ( org . apache . commons . IDENT_23 . IDENT_24 . isEmpty ( IDENT_25 ) ) ) { javax . persistence . criteria . IDENT_13 < org . finra . herd . model . jpa . IDENT_10 , org . finra . herd . model . jpa . IDENT_26 > IDENT_27 = IDENT_12 . join ( IDENT_16 . IDENT_28 ) ; IDENT_22 = METHOD_7 ( builder , IDENT_27 . get ( IDENT_29 . IDENT_30 ) , IDENT_25 ) ; criteria . select ( IDENT_12 ) . METHOD_8 ( IDENT_22 ) . METHOD_9 ( builder . METHOD_10 ( IDENT_20 ) , builder . METHOD_10 ( IDENT_18 ) ) ; } else { criteria . select ( IDENT_12 ) . METHOD_9 ( builder . METHOD_10 ( IDENT_20 ) , builder . METHOD_10 ( IDENT_18 ) ) ; } return IDENT_8 . METHOD_6 ( criteria ) . METHOD_11 ( ) ; }
org . junit . Assert . assertEquals ( IDENT_1 , IDENT_5 ) 