METHOD_0 ( ) { org . finra . herd . model . api . xml . IDENT_0 IDENT_1 = new org . finra . herd . model . api . xml . METHOD_1 ( IDENT_2 , IDENT_3 , IDENT_4 , IDENT_5 , null ) ; org . finra . herd . model . api . xml . IDENT_6 IDENT_7 = new org . finra . herd . model . api . xml . METHOD_2 ( ) ; IDENT_7 . METHOD_3 ( IDENT_8 . IDENT_9 ) ; IDENT_7 . METHOD_4 ( true ) ; IDENT_7 . METHOD_5 ( org . finra . herd . rest . IDENT_10 ) ; org . finra . herd . model . api . xml . IDENT_11 IDENT_12 = new org . finra . herd . model . api . xml . METHOD_6 ( ) ; when ( IDENT_13 . METHOD_7 ( IDENT_1 , IDENT_7 ) ) . thenReturn ( IDENT_12 ) ; org . finra . herd . model . api . xml . METHOD_6 IDENT_14 = IDENT_15 . METHOD_7 ( IDENT_1 . METHOD_8 ( ) , IDENT_1 . METHOD_9 ( ) , IDENT_1 . METHOD_10 ( ) , IDENT_1 . METHOD_11 ( ) , IDENT_7 ) ; verify ( IDENT_13 ) . METHOD_7 ( IDENT_1 , IDENT_7 ) ; METHOD_12 ( IDENT_13 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( org . finra . herd . model . api . xml . METHOD_1 , org . finra . herd . model . api . xml . METHOD_2 ) { org . springframework . util . Assert . METHOD_13 ( IDENT_7 , STRING_0 ) ; org . springframework . util . Assert . METHOD_13 ( IDENT_7 . METHOD_14 ( ) , STRING_1 ) ; IDENT_16 . METHOD_15 ( IDENT_1 , false ) ; org . springframework . util . Assert . METHOD_16 ( IDENT_1 . METHOD_17 ( ) , STRING_2 ) ; org . finra . herd . model . jpa . IDENT_8 IDENT_17 = null ; if ( ( IDENT_7 . METHOD_18 ( ) ) != null ) { IDENT_7 . METHOD_3 ( IDENT_7 . METHOD_18 ( ) . trim ( ) ) ; IDENT_17 = IDENT_18 . METHOD_19 ( IDENT_7 . METHOD_18 ( ) ) ; if ( IDENT_17 . getCode ( ) . equals ( IDENT_8 . IDENT_9 ) ) { org . springframework . util . Assert . METHOD_13 ( IDENT_7 . METHOD_20 ( ) , java . lang . String . format ( STRING_3 , IDENT_8 . IDENT_9 ) ) ; org . springframework . util . Assert . METHOD_21 ( ( ( IDENT_7 . METHOD_20 ( ) ) > 0 ) , java . lang . String . format ( STRING_4 , IDENT_8 . IDENT_9 ) ) ; } else { org . springframework . util . Assert . METHOD_16 ( IDENT_7 . METHOD_20 ( ) , java . lang . String . format ( STRING_5 , IDENT_17 . getCode ( ) ) ) ; } } else { org . springframework . util . Assert . METHOD_16 ( IDENT_7 . METHOD_20 ( ) , STRING_6 ) ; } org . finra . herd . model . jpa . IDENT_19 IDENT_20 = IDENT_18 . METHOD_22 ( IDENT_1 ) ; IDENT_20 . METHOD_4 ( org . apache . commons . lang3 . IDENT_21 . METHOD_21 ( IDENT_7 . METHOD_14 ( ) ) ) ; IDENT_20 . METHOD_5 ( IDENT_7 . METHOD_20 ( ) ) ; IDENT_20 . METHOD_3 ( IDENT_17 ) ; IDENT_20 = IDENT_22 . METHOD_23 ( IDENT_20 ) ; return IDENT_16 . METHOD_24 ( IDENT_20 ) ; }
org . junit . Assert . assertEquals ( IDENT_12 , IDENT_14 ) 