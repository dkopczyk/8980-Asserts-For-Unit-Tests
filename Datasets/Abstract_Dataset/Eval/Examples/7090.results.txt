METHOD_0 ( ) { java . util . concurrent . atomic . IDENT_0 IDENT_1 = new java . util . concurrent . atomic . METHOD_1 ( 0 ) ; org . apache . IDENT_2 . component . IDENT_3 . IDENT_4 < java . lang . Integer > IDENT_5 = org . apache . IDENT_2 . component . IDENT_3 . IDENT_4 . METHOD_2 ( 5 ) . METHOD_3 ( org . apache . IDENT_2 . component . IDENT_3 . IDENT_4 . METHOD_2 ( ( i ) -> i + 5 ) ) ; IDENT_5 . run ( org . apache . IDENT_2 . component . IDENT_3 . test . IDENT_6 . IDENT_7 , ( IDENT_8 ) -> { IDENT_1 . set ( IDENT_8 ) ; return IDENT_9 ; } ) ; "<AssertPlaceHolder>" ; } get ( ) { return IDENT_10 . get ( ) ; }
org . junit . Assert . assertEquals ( 10 , IDENT_1 . get ( ) ) 