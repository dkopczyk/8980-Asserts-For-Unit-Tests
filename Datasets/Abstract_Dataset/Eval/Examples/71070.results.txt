METHOD_0 ( ) { org . finra . herd . model . api . xml . IDENT_0 IDENT_1 = new org . finra . herd . model . api . xml . METHOD_1 ( IDENT_2 , IDENT_3 , IDENT_4 , IDENT_5 , IDENT_6 , IDENT_7 , IDENT_8 , IDENT_9 , IDENT_10 , ( ( ( ( IDENT_11 ) + "/" ) + ( IDENT_12 ) ) + " " ) ) ; when ( IDENT_13 . METHOD_2 ( STRING_0 , org . finra . herd . service . helper . IDENT_2 ) ) . thenReturn ( org . finra . herd . service . helper . IDENT_14 ) ; when ( IDENT_13 . METHOD_2 ( STRING_1 , org . finra . herd . service . helper . IDENT_3 ) ) . thenReturn ( org . finra . herd . service . helper . IDENT_15 ) ; when ( IDENT_13 . METHOD_2 ( STRING_2 , org . finra . herd . service . helper . IDENT_4 ) ) . thenReturn ( org . finra . herd . service . helper . IDENT_16 ) ; when ( IDENT_13 . METHOD_2 ( STRING_3 , org . finra . herd . service . helper . IDENT_5 ) ) . thenReturn ( org . finra . herd . service . helper . IDENT_17 ) ; when ( IDENT_13 . METHOD_2 ( STRING_4 , org . finra . herd . service . helper . IDENT_7 ) ) . thenReturn ( org . finra . herd . service . helper . IDENT_18 ) ; for ( int i = 0 ; i < ( org . finra . herd . service . helper . IDENT_8 . size ( ) ) ; i ++ ) { when ( IDENT_13 . METHOD_2 ( STRING_5 , org . finra . herd . service . helper . IDENT_8 . get ( i ) ) ) . thenReturn ( org . finra . herd . service . helper . IDENT_19 . get ( i ) ) ; } when ( IDENT_13 . METHOD_2 ( STRING_6 , org . finra . herd . service . helper . IDENT_10 ) ) . thenReturn ( org . finra . herd . service . helper . IDENT_20 ) ; IDENT_21 . METHOD_3 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_13 ) . METHOD_2 ( STRING_0 , org . finra . herd . service . helper . IDENT_2 ) ; verify ( IDENT_13 ) . METHOD_2 ( STRING_1 , org . finra . herd . service . helper . IDENT_3 ) ; verify ( IDENT_13 ) . METHOD_2 ( STRING_2 , org . finra . herd . service . helper . IDENT_4 ) ; verify ( IDENT_13 ) . METHOD_2 ( STRING_3 , org . finra . herd . service . helper . IDENT_5 ) ; verify ( IDENT_13 ) . METHOD_2 ( STRING_4 , org . finra . herd . service . helper . IDENT_7 ) ; for ( java . lang . String IDENT_22 : IDENT_8 ) { verify ( IDENT_13 ) . METHOD_2 ( STRING_5 , IDENT_22 ) ; } verify ( IDENT_13 ) . METHOD_2 ( STRING_6 , org . finra . herd . service . helper . IDENT_10 ) ; METHOD_4 ( IDENT_13 ) ; } METHOD_3 ( org . finra . herd . model . api . xml . METHOD_1 ) { org . springframework . util . Assert . METHOD_5 ( IDENT_1 , STRING_7 ) ; IDENT_1 . METHOD_6 ( IDENT_13 . METHOD_2 ( STRING_0 , IDENT_1 . METHOD_7 ( ) ) ) ; IDENT_1 . METHOD_8 ( IDENT_13 . METHOD_2 ( STRING_1 , IDENT_1 . METHOD_9 ( ) ) ) ; IDENT_1 . METHOD_10 ( IDENT_13 . METHOD_2 ( STRING_2 , IDENT_1 . METHOD_11 ( ) ) ) ; IDENT_1 . METHOD_12 ( IDENT_13 . METHOD_2 ( STRING_3 , IDENT_1 . METHOD_13 ( ) ) ) ; org . springframework . util . Assert . METHOD_5 ( IDENT_1 . METHOD_14 ( ) , STRING_8 ) ; IDENT_1 . METHOD_15 ( IDENT_13 . METHOD_2 ( STRING_4 , IDENT_1 . METHOD_16 ( ) ) ) ; java . util . List < java . lang . String > IDENT_23 = com . google . common . collect . Lists . newArrayList ( ) ; if ( org . apache . commons . collections . IDENT_24 . METHOD_17 ( IDENT_1 . METHOD_18 ( ) ) ) { for ( java . lang . String IDENT_22 : IDENT_1 . METHOD_18 ( ) ) { IDENT_23 . add ( IDENT_13 . METHOD_2 ( STRING_2 0 , IDENT_22 ) ) ; } } IDENT_1 . METHOD_19 ( IDENT_23 ) ; org . springframework . util . Assert . METHOD_5 ( IDENT_1 . METHOD_20 ( ) , STRING_9 ) ; IDENT_1 . METHOD_21 ( IDENT_13 . METHOD_2 ( STRING_6 , IDENT_1 . METHOD_22 ( ) ) ) ; org . springframework . util . Assert . METHOD_23 ( IDENT_1 . METHOD_24 ( ) , STRING_10 ) ; IDENT_1 . METHOD_25 ( IDENT_1 . METHOD_24 ( ) . trim ( ) ) ; }
org . junit . Assert . assertEquals ( new org . finra . herd . model . api . xml . METHOD_1 ( IDENT_14 , IDENT_15 , IDENT_16 , IDENT_17 , IDENT_6 , IDENT_18 , IDENT_19 , IDENT_9 , IDENT_20 , ( ( ( IDENT_11 ) + "/" ) + ( IDENT_12 ) ) ) , IDENT_1 ) 