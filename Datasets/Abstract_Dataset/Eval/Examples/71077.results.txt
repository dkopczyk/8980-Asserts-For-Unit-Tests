METHOD_0 ( ) { org . finra . herd . model . api . xml . IDENT_0 IDENT_1 = new org . finra . herd . model . api . xml . METHOD_1 ( IDENT_2 , IDENT_3 , IDENT_4 , IDENT_5 , IDENT_6 , IDENT_7 , IDENT_8 , IDENT_9 ) ; org . finra . herd . model . jpa . IDENT_10 IDENT_11 = new org . finra . herd . model . jpa . METHOD_2 ( ) ; IDENT_11 . setId ( org . finra . herd . service . impl . IDENT_12 ) ; when ( IDENT_13 . METHOD_3 ( IDENT_14 . IDENT_15 , IDENT_11 ) ) . thenReturn ( new java . util . ArrayList ( ) ) ; when ( IDENT_16 . METHOD_4 ( IDENT_1 ) ) . thenReturn ( org . finra . herd . service . impl . IDENT_17 ) ; try { IDENT_18 . METHOD_5 ( IDENT_11 , IDENT_1 ) ; junit . framework . Assert . fail ( ) ; } catch ( java . lang . IllegalArgumentException e ) { "<AssertPlaceHolder>" ; } verify ( IDENT_13 ) . METHOD_3 ( IDENT_14 . IDENT_15 , IDENT_11 ) ; verify ( IDENT_16 ) . METHOD_4 ( IDENT_1 ) ; METHOD_6 ( ) ; } METHOD_5 ( org . finra . herd . model . jpa . METHOD_2 , org . finra . herd . model . api . xml . METHOD_1 ) { java . util . List < org . finra . herd . model . jpa . IDENT_19 > IDENT_20 = IDENT_13 . METHOD_3 ( IDENT_14 . IDENT_15 , IDENT_11 ) ; if ( org . apache . commons . IDENT_21 . IDENT_22 . isEmpty ( IDENT_20 ) ) { throw new java . lang . IllegalArgumentException ( java . lang . String . format ( STRING_0 , IDENT_16 . METHOD_4 ( IDENT_1 ) ) ) ; } if ( ( org . apache . commons . IDENT_21 . IDENT_22 . size ( IDENT_20 ) ) > 1 ) { throw new java . lang . IllegalArgumentException ( java . lang . String . format ( STRING_1 , IDENT_20 . size ( ) , IDENT_14 . IDENT_15 , IDENT_16 . METHOD_4 ( IDENT_1 ) ) ) ; } org . finra . herd . model . jpa . IDENT_19 IDENT_23 = IDENT_20 . get ( 0 ) ; java . lang . String IDENT_24 = IDENT_23 . getStatus ( ) . getCode ( ) ; if ( ! ( org . finra . herd . service . impl . IDENT_25 . IDENT_26 . contains ( IDENT_24 ) ) ) { throw new java . lang . IllegalArgumentException ( java . lang . String . format ( STRING_2 , IDENT_24 , IDENT_23 . METHOD_7 ( ) . getName ( ) , IDENT_16 . METHOD_4 ( IDENT_1 ) ) ) ; } return IDENT_23 ; }
org . junit . Assert . assertEquals ( java . lang . String . format ( STRING_0 , org . finra . herd . service . impl . IDENT_17 ) , e . getMessage ( ) ) 