METHOD_0 ( ) { org . finra . herd . model . api . xml . IDENT_0 IDENT_1 = new org . finra . herd . model . api . xml . METHOD_1 ( STRING_0 , STRING_1 , STRING_2 9 , true , true , true , true , STRING_2 6 , STRING_3 , STRING_2 0 , STRING_4 , STRING_2 , STRING_5 , STRING_2 7 , STRING_2 1 , true , com . google . common . collect . Lists . newArrayList ( new org . finra . herd . model . api . xml . METHOD_2 ( ) ) , com . google . common . collect . Lists . newArrayList ( new org . finra . herd . model . api . xml . METHOD_2 ( ) ) , STRING_2 5 , new org . finra . herd . model . api . xml . METHOD_3 ( ) , com . google . common . collect . Lists . newArrayList ( new org . finra . herd . model . api . xml . METHOD_4 ( ) ) , com . google . common . collect . Lists . newArrayList ( new org . finra . herd . model . api . xml . METHOD_5 ( ) ) , STRING_2 3 , com . google . common . collect . Lists . newArrayList ( new org . finra . herd . model . api . xml . METHOD_6 ( ) ) , com . google . common . collect . Lists . newArrayList ( new org . finra . herd . model . api . xml . METHOD_7 ( ) ) , com . google . common . collect . Lists . newArrayList ( new org . finra . herd . model . api . xml . METHOD_8 ( ) ) , com . google . common . collect . Lists . newArrayList ( new java . lang . METHOD_9 ( STRING_2 2 ) ) , com . google . common . collect . Lists . newArrayList ( new org . finra . herd . model . api . xml . METHOD_10 ( ) ) , com . google . common . collect . Lists . newArrayList ( STRING_6 ) , com . google . common . collect . Lists . newArrayList ( STRING_0 0 ) , STRING_7 , STRING_8 , STRING_2 4 , STRING_9 , new org . finra . herd . model . api . xml . METHOD_11 ( ) ) ; org . finra . herd . model . api . xml . METHOD_1 IDENT_2 = new org . finra . herd . model . api . xml . METHOD_1 ( ) ; IDENT_3 . METHOD_12 ( IDENT_1 , IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_12 ( org . finra . herd . model . api . xml . METHOD_1 , org . finra . herd . model . api . xml . METHOD_1 ) { if ( IDENT_2 != null ) { if ( ( IDENT_2 . METHOD_13 ( ) ) != null ) { IDENT_1 . METHOD_14 ( IDENT_2 . METHOD_13 ( ) ) ; } if ( ( IDENT_2 . METHOD_15 ( ) ) != null ) { IDENT_1 . METHOD_16 ( IDENT_2 . METHOD_15 ( ) ) ; } if ( ( IDENT_2 . METHOD_17 ( ) ) != null ) { IDENT_1 . METHOD_18 ( IDENT_2 . METHOD_17 ( ) ) ; } if ( ( IDENT_2 . METHOD_19 ( ) ) != null ) { IDENT_1 . METHOD_20 ( IDENT_2 . METHOD_19 ( ) ) ; } if ( ( IDENT_2 . METHOD_21 ( ) ) != null ) { IDENT_1 . METHOD_22 ( IDENT_2 . METHOD_21 ( ) ) ; } if ( ( IDENT_2 . METHOD_23 ( ) ) != null ) { IDENT_1 . METHOD_24 ( IDENT_2 . METHOD_23 ( ) ) ; } if ( ( IDENT_2 . METHOD_25 ( ) ) != null ) { IDENT_1 . METHOD_26 ( IDENT_2 . METHOD_25 ( ) ) ; } if ( ( IDENT_2 . METHOD_27 ( ) ) != null ) { IDENT_1 . METHOD_28 ( IDENT_2 . METHOD_27 ( ) ) ; } if ( ( IDENT_2 . METHOD_29 ( ) ) != null ) { IDENT_1 . METHOD_30 ( IDENT_2 . METHOD_29 ( ) ) ; } if ( ( IDENT_2 . METHOD_31 ( ) ) != null ) { IDENT_1 . METHOD_32 ( IDENT_2 . METHOD_31 ( ) ) ; } if ( ( IDENT_2 . METHOD_33 ( ) ) != null ) { IDENT_1 . METHOD_34 ( IDENT_2 . METHOD_33 ( ) ) ; } if ( ( IDENT_2 . METHOD_35 ( ) ) != null ) { IDENT_1 . METHOD_36 ( IDENT_2 . METHOD_35 ( ) ) ; } if ( ( IDENT_2 . METHOD_37 ( ) ) != null ) { IDENT_1 . METHOD_38 ( IDENT_2 . METHOD_37 ( ) ) ; } if ( ( IDENT_2 . METHOD_39 ( ) ) != null ) { IDENT_1 . METHOD_40 ( IDENT_2 . METHOD_39 ( ) ) ; } if ( ( IDENT_2 . METHOD_41 ( ) ) != null ) { IDENT_1 . METHOD_42 ( IDENT_2 . METHOD_41 ( ) ) ; } if ( ( IDENT_2 . METHOD_43 ( ) ) != null ) { IDENT_1 . METHOD_44 ( IDENT_2 . METHOD_43 ( ) ) ; } if ( ( IDENT_2 . METHOD_45 ( ) ) != null ) { IDENT_1 . METHOD_46 ( IDENT_2 . METHOD_45 ( ) ) ; } if ( ( IDENT_2 . METHOD_47 ( ) ) != null ) { IDENT_1 . METHOD_48 ( IDENT_2 . METHOD_47 ( ) ) ; } if ( ( IDENT_2 . METHOD_49 ( ) ) != null ) { IDENT_1 . METHOD_50 ( IDENT_2 . METHOD_49 ( ) ) ; } if ( ( IDENT_2 . METHOD_51 ( ) ) != null ) { IDENT_1 . METHOD_52 ( IDENT_2 . METHOD_51 ( ) ) ; } if ( ( IDENT_2 . METHOD_53 ( ) ) != null ) { IDENT_1 . METHOD_54 ( IDENT_2 . METHOD_53 ( ) ) ; } if ( ( IDENT_2 . METHOD_55 ( ) ) != null ) { IDENT_1 . METHOD_56 ( IDENT_2 . METHOD_55 ( ) ) ; } if ( ( IDENT_2 . METHOD_57 ( ) ) != null ) { IDENT_1 . METHOD_58 ( IDENT_2 . METHOD_57 ( ) ) ; } if ( ( IDENT_2 . METHOD_59 ( ) ) != null ) { IDENT_1 . METHOD_60 ( IDENT_2 . METHOD_59 ( ) ) ; } if ( ( IDENT_2 . METHOD_61 ( ) ) != null ) { IDENT_1 . METHOD_62 ( IDENT_2 . METHOD_61 ( ) ) ; } if ( ( IDENT_2 . METHOD_63 ( ) ) != null ) { IDENT_1 . METHOD_64 ( IDENT_2 . METHOD_63 ( ) ) ; } if ( ( IDENT_2 . METHOD_65 ( ) ) != null ) { IDENT_1 . METHOD_66 ( IDENT_2 . METHOD_65 ( ) ) ; } if ( ( IDENT_2 . METHOD_67 ( ) ) != null ) { IDENT_1 . METHOD_68 ( IDENT_2 . METHOD_67 ( ) ) ; } if ( ( IDENT_2 . METHOD_69 ( ) ) != null ) { IDENT_1 . METHOD_70 ( IDENT_2 . METHOD_69 ( ) ) ; } if ( ( IDENT_2 . METHOD_71 ( ) ) != null ) { IDENT_1 . METHOD_72 ( IDENT_2 . METHOD_71 ( ) ) ; } if ( ( IDENT_2 . METHOD_73 ( ) ) != null ) { IDENT_1 . METHOD_74 ( IDENT_2 . METHOD_73 ( ) ) ; } if ( ( IDENT_2 . METHOD_75 ( ) ) != null ) { IDENT_1 . METHOD_76 ( IDENT_2 . METHOD_75 ( ) ) ; } if ( ( IDENT_2 . METHOD_77 ( ) ) != null ) { IDENT_1 . METHOD_78 ( IDENT_2 . METHOD_77 ( ) ) ; } if ( ( IDENT_2 . METHOD_79 ( ) ) != null ) { IDENT_1 . METHOD_80 ( IDENT_2 . METHOD_79 ( ) ) ; } if ( ( IDENT_2 . METHOD_81 ( ) ) != null ) { IDENT_1 . METHOD_82 ( IDENT_2 . METHOD_81 ( ) ) ; } } }
org . junit . Assert . assertThat ( STRING_2 8 , IDENT_1 , org . hamcrest . CoreMatchers . is ( IDENT_1 ) ) 