METHOD_0 ( ) { org . osgi . service . IDENT_0 . User IDENT_1 = org . mockito . Mockito . mock ( org . osgi . service . IDENT_0 . User . class ) ; org . osgi . service . IDENT_0 . IDENT_2 auth = org . mockito . Mockito . mock ( org . osgi . service . IDENT_0 . IDENT_2 . class ) ; org . mockito . Mockito . when ( IDENT_1 . getType ( ) ) . thenReturn ( IDENT_3 . IDENT_4 ) ; org . mockito . Mockito . when ( auth . METHOD_1 ( ) ) . thenReturn ( new java . lang . String [ ] { STRING_0 } ) ; org . mockito . Mockito . when ( IDENT_5 . METHOD_2 ( STRING_0 ) ) . thenReturn ( IDENT_1 ) ; org . mockito . Mockito . when ( IDENT_5 . METHOD_3 ( IDENT_1 ) ) . thenReturn ( auth ) ; java . lang . String [ ] IDENT_6 = IDENT_7 . METHOD_4 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String ) { if ( IDENT_8 == null ) { throw new java . io . IOException ( STRING_1 ) ; } org . osgi . service . IDENT_0 . IDENT_3 IDENT_9 = IDENT_5 . METHOD_2 ( IDENT_8 ) ; if ( IDENT_9 != null ) { METHOD_5 ( IDENT_9 , IDENT_3 . IDENT_4 ) ; org . osgi . service . IDENT_0 . IDENT_2 auth = IDENT_5 . METHOD_3 ( ( ( org . osgi . service . IDENT_0 . User ) ( IDENT_9 ) ) ) ; if ( auth != null ) { return auth . METHOD_1 ( ) ; } } return null ; }
org . junit . Assert . assertArrayEquals ( new java . lang . String [ ] { STRING_0 } , IDENT_6 ) 