METHOD_0 ( ) { com . google . IDENT_0 . database . core . IDENT_1 IDENT_2 = com . google . IDENT_0 . database . core . IDENT_1 . METHOD_1 ( ) ; final java . util . Map < java . lang . String , java . lang . Object > base = new com . google . IDENT_0 . database . METHOD_2 ( ) . put ( STRING_0 , STRING_1 ) . put ( STRING_2 , STRING_3 ) . build ( ) ; java . util . Map < com . google . IDENT_0 . database . IDENT_3 . IDENT_4 , com . google . IDENT_0 . database . IDENT_3 . Node > IDENT_5 = new java . util . HashMap ( ) ; IDENT_5 . put ( com . google . IDENT_0 . database . IDENT_3 . IDENT_4 . METHOD_3 ( "foo" ) , com . google . IDENT_0 . database . IDENT_3 . IDENT_6 . METHOD_4 ( STRING_4 ) ) ; IDENT_5 . put ( com . google . IDENT_0 . database . IDENT_3 . IDENT_4 . METHOD_3 ( "bar" ) , com . google . IDENT_0 . database . IDENT_3 . IDENT_6 . METHOD_4 ( STRING_5 ) ) ; IDENT_2 = IDENT_2 . METHOD_5 ( new com . google . IDENT_0 . database . core . Path ( STRING_0 ) , com . google . IDENT_0 . database . core . IDENT_1 . METHOD_6 ( IDENT_5 ) ) ; com . google . IDENT_0 . database . IDENT_3 . Node IDENT_7 = com . google . IDENT_0 . database . IDENT_3 . IDENT_6 . METHOD_4 ( base ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_8 = new com . google . IDENT_0 . database . METHOD_2 ( ) . put ( "foo" , STRING_4 ) . put ( "bar" , STRING_5 ) . build ( ) ; com . google . IDENT_0 . database . IDENT_3 . Node expected = IDENT_7 . METHOD_7 ( com . google . IDENT_0 . database . IDENT_3 . IDENT_4 . METHOD_3 ( STRING_0 ) , com . google . IDENT_0 . database . IDENT_3 . IDENT_6 . METHOD_4 ( IDENT_8 ) ) ; "<AssertPlaceHolder>" ; } apply ( com . google . IDENT_0 . database . IDENT_3 . Node ) { return METHOD_8 ( com . google . IDENT_0 . database . core . Path . METHOD_9 ( ) , this . IDENT_9 , node ) ; }
org . junit . Assert . assertEquals ( expected , IDENT_2 . apply ( IDENT_7 ) ) 