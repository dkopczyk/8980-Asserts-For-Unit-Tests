METHOD_0 ( ) { java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 } ; java . lang . String s = java . lang . String . format ( STRING_3 , org . IDENT_1 . lang . IDENT_2 . METHOD_1 ( STRING_4 , STRING_5 , IDENT_0 ) ) ; java . lang . String [ ] IDENT_3 = org . IDENT_1 . json . IDENT_4 . METHOD_2 ( java . lang . String [ ] . class , org . IDENT_1 . lang . IDENT_2 . METHOD_3 ( s ) ) ; "<AssertPlaceHolder>" ; } equals ( java . io . InputStream , java . io . InputStream ) { int IDENT_5 ; while ( ( IDENT_5 = IDENT_6 . read ( ) ) != ( - 1 ) ) { int IDENT_7 = IDENT_8 . read ( ) ; if ( IDENT_5 != IDENT_7 ) return false ; } return ( IDENT_8 . read ( ) ) == ( - 1 ) ; }
org . junit . Assert . assertTrue ( java . util . Arrays . equals ( IDENT_0 , IDENT_3 ) ) 