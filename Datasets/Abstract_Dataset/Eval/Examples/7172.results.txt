METHOD_0 ( ) { try { org . apache . IDENT_0 . test . IDENT_1 . IDENT_2 . METHOD_1 ( org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_4 ) ; org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_4 . METHOD_2 ( ) ; org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_5 . METHOD_3 ( ) ; org . apache . IDENT_0 . app . data . gen . IDENT_6 IDENT_7 = new org . apache . IDENT_0 . app . data . gen . METHOD_4 ( org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_8 , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_9 , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_10 , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_11 , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_12 , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_13 , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_14 , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_15 ) ; org . apache . IDENT_16 . api . IDENT_17 . IDENT_18 IDENT_19 = new org . apache . IDENT_16 . api . IDENT_17 . METHOD_5 ( org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . ctx ) ; org . apache . IDENT_16 . IDENT_1 . common . IDENT_17 . io . IDENT_20 IDENT_21 = new org . apache . IDENT_16 . IDENT_1 . common . IDENT_17 . io . METHOD_6 ( IDENT_19 ) ; org . apache . IDENT_0 . test . IDENT_1 . IDENT_2 . IDENT_22 IDENT_23 = null ; for ( int j = 0 ; j < ( org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_24 ) ; j ++ ) { if ( ( ( j OP_0 ( org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_25 ) ) == ( ( org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_25 ) - 1 ) ) && ( ( j + 1 ) != ( org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_24 ) ) ) { if ( ( IDENT_21 . METHOD_7 ( ) ) > 0 ) { IDENT_21 . write ( org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_5 , true ) ; } org . apache . IDENT_0 . test . IDENT_1 . IDENT_2 . METHOD_8 ( org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_26 , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_4 , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . dataset , false ) ; } org . apache . IDENT_16 . IDENT_1 . common . data . IDENT_27 . IDENT_28 tuple = IDENT_7 . next ( ) ; org . apache . IDENT_0 . IDENT_29 . util . IDENT_30 . METHOD_9 ( IDENT_21 , tuple , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_5 ) ; } if ( ( IDENT_21 . METHOD_7 ( ) ) > 0 ) { IDENT_21 . write ( org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_5 , true ) ; } org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_5 . close ( ) ; IDENT_23 = new org . apache . IDENT_0 . test . IDENT_1 . IDENT_2 . METHOD_10 ( org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_31 , 0 , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . dataset , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_32 , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_4 , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_24 ) ; IDENT_23 . METHOD_11 ( ) ; org . apache . IDENT_0 . test . IDENT_1 . IDENT_2 . METHOD_8 ( org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_26 , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_4 , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . dataset , false ) ; org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_31 . METHOD_12 ( ) . METHOD_13 ( org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_33 . METHOD_14 ( ) ) ; METHOD_15 ( org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_4 ) ; "<AssertPlaceHolder>" ; METHOD_16 ( org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_31 , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . ctx , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . dataset , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_32 , org . apache . IDENT_0 . test . IDENT_1 . IDENT_3 . IDENT_24 ) ; } catch ( java . lang . Throwable e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( e . getMessage ( ) ) ; } } result ( ) { return task . get ( ) ; }
org . junit . Assert . assertTrue ( IDENT_23 . result ( ) ) 