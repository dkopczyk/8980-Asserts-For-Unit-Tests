METHOD_0 ( ) { org . apache . IDENT_0 . IDENT_1 . types . IDENT_2 IDENT_3 = new org . apache . IDENT_0 . IDENT_1 . types . METHOD_1 ( null , new java . lang . String [ ] { "a" , "b" } , new org . apache . IDENT_0 . IDENT_1 . types . IDENT_4 [ ] { org . apache . IDENT_0 . IDENT_1 . types . IDENT_5 . IDENT_6 , org . apache . IDENT_0 . IDENT_1 . types . IDENT_5 . IDENT_7 } , false , null ) ; org . apache . IDENT_0 . IDENT_1 . types . METHOD_1 IDENT_8 = new org . apache . IDENT_0 . IDENT_1 . types . METHOD_1 ( null , new java . lang . String [ ] { "b" , "a" } , new org . apache . IDENT_0 . IDENT_1 . types . IDENT_4 [ ] { org . apache . IDENT_0 . IDENT_1 . types . IDENT_5 . IDENT_7 , org . apache . IDENT_0 . IDENT_1 . types . IDENT_5 . IDENT_6 } , false , null ) ; java . util . List < org . apache . IDENT_0 . IDENT_1 . types . IDENT_4 > IDENT_9 = new java . util . ArrayList ( ) ; IDENT_9 . add ( IDENT_3 ) ; IDENT_9 . add ( IDENT_8 ) ; org . apache . IDENT_0 . IDENT_1 . types . METHOD_1 IDENT_10 = ( ( org . apache . IDENT_0 . IDENT_1 . types . METHOD_1 ) ( org . apache . IDENT_0 . IDENT_11 . data . common . IDENT_12 . resolve ( IDENT_9 ) ) ) ; "<AssertPlaceHolder>" ; } resolve ( java . util . List ) { org . apache . IDENT_0 . IDENT_1 . types . IDENT_4 IDENT_13 = null ; for ( org . apache . IDENT_0 . IDENT_1 . types . IDENT_4 type : IDENT_9 ) { IDENT_13 = ( IDENT_13 == null ) ? type : org . apache . IDENT_0 . IDENT_11 . data . common . IDENT_12 . METHOD_2 ( IDENT_13 , type ) ; } return IDENT_13 ; }
org . junit . Assert . assertEquals ( IDENT_10 , IDENT_3 ) 