METHOD_0 ( ) { final java . lang . String IDENT_0 = null ; final org . apache . solr . common . params . IDENT_1 params = mock ( org . apache . solr . common . params . IDENT_1 . class ) ; when ( params . get ( IDENT_2 . IDENT_3 , null ) ) . thenReturn ( IDENT_0 ) ; final uk . co . IDENT_4 . IDENT_5 . IDENT_2 IDENT_6 = mock ( uk . co . IDENT_4 . IDENT_5 . IDENT_2 . class ) ; when ( IDENT_6 . METHOD_1 ( IDENT_2 . IDENT_3 ) ) . thenReturn ( null ) ; uk . co . IDENT_4 . IDENT_5 . IDENT_7 . IDENT_8 factory = new uk . co . IDENT_4 . IDENT_5 . IDENT_7 . METHOD_2 ( IDENT_6 ) ; "<AssertPlaceHolder>" ; verify ( params ) . get ( IDENT_2 . IDENT_3 , null ) ; } METHOD_3 ( org . apache . solr . common . params . IDENT_1 ) { uk . co . IDENT_4 . IDENT_5 . IDENT_7 . IDENT_9 IDENT_10 = null ; java . lang . String IDENT_0 = params . get ( uk . co . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_3 , IDENT_11 . METHOD_1 ( uk . co . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_3 ) ) ; if ( org . apache . commons . lang . StringUtils . METHOD_4 ( IDENT_0 ) ) { if ( uk . co . IDENT_4 . IDENT_5 . IDENT_7 . METHOD_2 . IDENT_12 . equals ( IDENT_0 ) ) { IDENT_10 = new uk . co . IDENT_4 . IDENT_5 . IDENT_7 . METHOD_5 ( params . METHOD_6 ( METHOD_5 . IDENT_13 , METHOD_5 . IDENT_14 ) ) ; } else if ( uk . co . IDENT_4 . IDENT_5 . IDENT_7 . METHOD_2 . IDENT_15 . equals ( IDENT_0 ) ) { int IDENT_16 = params . METHOD_6 ( uk . co . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_17 , IDENT_11 . METHOD_7 ( uk . co . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_17 ) ) ; if ( IDENT_16 <= 0 ) { throw new org . apache . solr . search . METHOD_8 ( STRING_0 ) ; } IDENT_10 = new uk . co . IDENT_4 . IDENT_5 . IDENT_7 . METHOD_9 ( IDENT_16 , IDENT_11 . METHOD_1 ( IDENT_2 . IDENT_18 , METHOD_9 . IDENT_19 ) ) ; } } return IDENT_10 ; }
org . junit . Assert . assertNull ( factory . METHOD_3 ( params ) ) 