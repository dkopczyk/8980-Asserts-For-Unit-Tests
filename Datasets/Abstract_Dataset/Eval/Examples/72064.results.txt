METHOD_0 ( ) { net . IDENT_0 . packet . IDENT_1 packet = new net . IDENT_0 . packet . METHOD_1 ( ) ; packet . METHOD_2 ( IDENT_2 , 0 , IDENT_2 . length ) ; byte [ ] IDENT_3 = packet . serialize ( ) ; "<AssertPlaceHolder>" ; } serialize ( ) { byte [ ] IDENT_4 = null ; if ( ( payload ) != null ) { payload . METHOD_3 ( this ) ; IDENT_4 = payload . serialize ( ) ; } int length = ( net . IDENT_0 . packet . IDENT_5 . IDENT_6 ) + ( IDENT_4 == null ? 0 : IDENT_4 . length ) ; byte [ ] data = new byte [ length ] ; java . nio . ByteBuffer IDENT_7 = java . nio . ByteBuffer . METHOD_4 ( data ) ; IDENT_7 . put ( net . IDENT_0 . packet . IDENT_5 . IDENT_8 ) ; IDENT_7 . METHOD_5 ( IDENT_9 ) ; byte IDENT_10 = ( ( byte ) ( ( IDENT_11 ) ? 1 : 0 ) ) ; byte IDENT_12 = ( ( byte ) ( ( IDENT_13 ) ? 1 : 0 ) ) ; byte IDENT_14 = ( ( byte ) ( ( ( ( ( ( command ) & 3 ) << 6 ) | ( ( IDENT_10 & 1 ) << 5 ) ) | ( ( IDENT_12 & 1 ) << 4 ) ) | ( ( IDENT_15 ) & 15 ) ) ) ; IDENT_7 . put ( IDENT_14 ) ; if ( IDENT_4 != null ) { IDENT_7 . put ( IDENT_4 ) ; } return data ; }
org . junit . Assert . assertTrue ( java . util . Arrays . equals ( IDENT_2 , IDENT_3 ) ) 