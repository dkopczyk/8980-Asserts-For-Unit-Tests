METHOD_0 ( ) { byte [ ] expected = new byte [ ] { 100 , INT_0 , INT_1 , ( ( byte ) ( INT_2 ) ) , 0 , 0 , INT_3 , ( ( byte ) ( INT_4 ) ) , ( ( byte ) ( INT_5 ) ) , ( ( byte ) ( INT_6 ) ) , 0 , 0 , 0 , 0 , 0 , 0 , 0 , INT_7 , ( ( byte ) ( INT_8 ) ) , ( ( byte ) ( 255 ) ) , ( ( byte ) ( INT_5 ) ) , INT_9 , INT_10 , INT_11 , ( ( byte ) ( INT_5 ) ) , ( ( byte ) ( INT_6 ) ) , 0 , 0 , 0 , 0 , 0 , 0 , 0 , INT_10 , INT_12 , ( ( byte ) ( 255 ) ) , ( ( byte ) ( INT_5 ) ) , ( ( byte ) ( INT_13 ) ) , INT_14 , ( ( byte ) ( INT_15 ) ) } ; net . IDENT_0 . packet . IDENT_1 packet = new net . IDENT_0 . packet . METHOD_1 ( ) . METHOD_2 ( ( ( byte ) ( INT_16 ) ) ) . METHOD_3 ( INT_17 ) . METHOD_4 ( ( ( short ) ( 0 ) ) ) . METHOD_5 ( org . IDENT_2 . IDENT_3 . types . IDENT_4 . of ( ( ( short ) ( INT_3 ) ) ) ) . METHOD_6 ( ( ( byte ) ( INT_4 ) ) ) . METHOD_7 ( org . IDENT_2 . IDENT_3 . types . IDENT_5 . of ( STRING_0 ) ) . METHOD_8 ( org . IDENT_2 . IDENT_3 . types . IDENT_5 . of ( STRING_1 ) ) ; byte [ ] actual = packet . serialize ( ) ; "<AssertPlaceHolder>" ; } serialize ( ) { byte [ ] IDENT_6 = null ; if ( ( payload ) != null ) { payload . METHOD_9 ( this ) ; IDENT_6 = payload . serialize ( ) ; } int length = ( net . IDENT_0 . packet . IDENT_7 . IDENT_8 ) + ( IDENT_6 == null ? 0 : IDENT_6 . length ) ; byte [ ] data = new byte [ length ] ; java . nio . ByteBuffer IDENT_9 = java . nio . ByteBuffer . METHOD_10 ( data ) ; IDENT_9 . put ( net . IDENT_0 . packet . IDENT_7 . IDENT_10 ) ; IDENT_9 . METHOD_11 ( IDENT_11 ) ; byte IDENT_12 = ( ( byte ) ( ( IDENT_13 ) ? 1 : 0 ) ) ; byte IDENT_14 = ( ( byte ) ( ( IDENT_15 ) ? 1 : 0 ) ) ; byte IDENT_16 = ( ( byte ) ( ( ( ( ( ( command ) & 3 ) << 6 ) | ( ( IDENT_12 & 1 ) << 5 ) ) | ( ( IDENT_14 & 1 ) << 4 ) ) | ( ( IDENT_17 ) & 15 ) ) ) ; IDENT_9 . put ( IDENT_16 ) ; if ( IDENT_6 != null ) { IDENT_9 . put ( IDENT_6 ) ; } return data ; }
org . junit . Assert . assertTrue ( java . util . Arrays . equals ( expected , actual ) ) 