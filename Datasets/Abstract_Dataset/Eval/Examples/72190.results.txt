METHOD_0 ( ) { java . util . concurrent . IDENT_0 IDENT_1 = new java . util . concurrent . METHOD_1 ( 5 , 5 , 1 , java . util . concurrent . TimeUnit . IDENT_2 , new java . util . concurrent . METHOD_2 ( 5 ) ) ; final java . util . concurrent . atomic . IDENT_3 size = new java . util . concurrent . atomic . METHOD_3 ( 0 ) ; final java . util . concurrent . IDENT_4 IDENT_5 = new java . util . concurrent . METHOD_4 ( 5 ) ; final java . lang . String root = STRING_0 ; IDENT_6 . create ( root , null ) ; java . lang . String IDENT_7 = org . apache . IDENT_8 . utils . IDENT_9 . METHOD_5 ( root , STRING_1 ) ; IDENT_6 . delete ( IDENT_7 , false ) ; for ( int i = 0 ; i < 5 ; i ++ ) { IDENT_1 . execute ( ( ) -> { try { IDENT_6 . METHOD_6 ( IDENT_7 ) ; size . METHOD_7 ( ) ; } catch ( e ) { System . out . println ( com . flow . platform . util . IDENT_10 . test . e ) ; } finally { IDENT_5 . METHOD_8 ( ) ; } } ) ; } IDENT_5 . METHOD_9 ( INT_0 , TimeUnit . IDENT_2 ) ; "<AssertPlaceHolder>" ; IDENT_6 . delete ( root , true ) ; } get ( ) { IDENT_11 = new org . apache . http . client . methods . METHOD_10 ( url ) ; return this ; }
org . junit . Assert . assertEquals ( 1 , size . get ( ) ) 