METHOD_0 ( ) { java . lang . String IDENT_0 = ( ( ( ( METHOD_1 ( ) ) + STRING_0 ) + ( IDENT_1 ) ) + STRING_1 ) + STRING_2 ; java . util . concurrent . IDENT_2 < javax . jms . IDENT_3 > IDENT_4 = executor . METHOD_2 ( new java . util . concurrent . IDENT_5 < javax . jms . IDENT_3 > ( ) { public javax . jms . IDENT_3 call ( ) throws co . IDENT_6 . a . Exception { javax . jms . IDENT_7 IDENT_8 = session . METHOD_3 ( IDENT_9 ) ; return ( ( javax . jms . IDENT_3 ) ( IDENT_8 . METHOD_4 ( ( ( co . IDENT_6 . a . IDENT_10 . IDENT_11 ) + INT_0 ) ) ) ) ; } } ) ; a . run ( IDENT_0 . split ( " " ) ) ; "<AssertPlaceHolder>" ; } get ( ) { return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( "test" , IDENT_4 . get ( ) . getText ( ) ) 