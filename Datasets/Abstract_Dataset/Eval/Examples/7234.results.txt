METHOD_0 ( ) { java . nio . ByteBuffer payload = java . nio . ByteBuffer . METHOD_1 ( ( 8 * INT_0 ) ) ; for ( int i = 0 ; i < INT_1 ; i ++ ) { payload . METHOD_2 ( 1 ) ; } payload . METHOD_3 ( ) ; org . apache . avro . IDENT_0 IDENT_1 = new org . apache . avro . METHOD_4 ( ) ; IDENT_1 . METHOD_5 ( payload ) ; IDENT_1 . METHOD_6 ( IDENT_2 . b ) ; java . io . ByteArrayOutputStream IDENT_3 = new java . io . ByteArrayOutputStream ( ) ; org . apache . avro . reflect . IDENT_4 < org . apache . avro . METHOD_4 > writer = new org . apache . avro . reflect . METHOD_7 ( org . apache . avro . METHOD_4 . class ) ; org . apache . avro . io . IDENT_5 IDENT_6 = org . apache . avro . io . IDENT_7 . get ( ) . METHOD_8 ( IDENT_3 , null ) ; writer . write ( IDENT_1 , IDENT_6 ) ; IDENT_6 . METHOD_9 ( ) ; byte [ ] bytes = IDENT_3 . toByteArray ( ) ; java . io . ByteArrayInputStream IDENT_8 = new java . io . ByteArrayInputStream ( bytes ) ; org . apache . avro . reflect . IDENT_9 < org . apache . avro . METHOD_4 > IDENT_10 = new org . apache . avro . reflect . METHOD_10 ( org . apache . avro . METHOD_4 . class ) ; org . apache . avro . io . IDENT_11 IDENT_12 = org . apache . avro . io . IDENT_13 . get ( ) . METHOD_11 ( IDENT_8 , null ) ; org . apache . avro . METHOD_4 IDENT_14 = IDENT_10 . read ( null , IDENT_12 ) ; "<AssertPlaceHolder>" ; } read ( org . apache . IDENT_15 . IDENT_16 , org . apache . IDENT_15 . IDENT_17 ) { int size = in . METHOD_12 ( ) ; for ( int i = 0 ; i < size ; i ++ ) IDENT_18 . put ( in . METHOD_13 ( ) , in . METHOD_14 ( ) ) ; }
org . junit . Assert . assertEquals ( IDENT_1 , IDENT_14 ) 