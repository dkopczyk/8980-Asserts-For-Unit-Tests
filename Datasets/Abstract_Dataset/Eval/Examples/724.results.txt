METHOD_0 ( ) { javax . json . IDENT_0 IDENT_1 = IDENT_2 . METHOD_1 ( STRING_0 , STRING_1 ) ; "<AssertPlaceHolder>" ; System . out . println ( ( STRING_2 + IDENT_1 ) ) ; } METHOD_1 ( java . lang . String , java . lang . String ) { javax . json . IDENT_3 builder = javax . json . IDENT_4 . METHOD_2 ( ) ; javax . json . IDENT_0 components = IDENT_5 . METHOD_3 ( IDENT_6 , IDENT_7 ) ; if ( components == null ) { return builder . METHOD_4 ( STRING_3 ) . build ( ) ; } java . util . Set < Map . Entry < java . lang . String , javax . json . IDENT_8 > > entrySet = components . entrySet ( ) ; for ( Map . Entry < java . lang . String , javax . json . IDENT_8 > component : entrySet ) { java . lang . String IDENT_9 = component . getKey ( ) ; javax . json . IDENT_0 IDENT_10 = IDENT_5 . METHOD_5 ( IDENT_6 , IDENT_7 , IDENT_9 ) ; if ( ( IDENT_7 == null ) || ( IDENT_10 == null ) ) { LOG . info ( ( ( ( STRING_4 + IDENT_7 ) + STRING_5 ) + IDENT_10 ) ) ; } else { builder . add ( IDENT_9 , IDENT_10 ) ; } } return builder . build ( ) ; }
org . junit . Assert . assertNotNull ( IDENT_1 ) 