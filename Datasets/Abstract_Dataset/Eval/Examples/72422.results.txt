METHOD_0 ( ) { java . io . File file = java . io . File . METHOD_1 ( STRING_0 , STRING_1 ) ; file . METHOD_2 ( ) ; org . jboss . IDENT_0 . IDENT_1 . resource . IDENT_2 < ? > IDENT_3 = IDENT_4 . create ( org . jboss . IDENT_0 . IDENT_1 . resource . IDENT_2 . class , file ) ; try ( java . io . IDENT_5 IDENT_6 = IDENT_3 . METHOD_3 ( ) ) { IDENT_6 . write ( STRING_2 . getBytes ( ) ) ; IDENT_6 . METHOD_4 ( ) ; } java . util . List < java . lang . String > IDENT_7 = java . nio . file . IDENT_8 . METHOD_5 ( file . METHOD_6 ( ) , java . nio . IDENT_9 . IDENT_10 . METHOD_7 ( ) ) ; "<AssertPlaceHolder>" ; } get ( java . lang . Class ) { java . util . Map < java . lang . Object , java . lang . Object > map = org . jboss . IDENT_0 . IDENT_1 . IDENT_11 . impl . IDENT_12 . IDENT_13 . get ( key . getName ( ) ) ; if ( map == null ) { map = new java . util . concurrent . IDENT_14 < java . lang . Object , java . lang . Object > ( ) ; org . jboss . IDENT_0 . IDENT_1 . IDENT_11 . impl . IDENT_12 . IDENT_13 . put ( key . getName ( ) , map ) ; } return ( ( java . util . Map < IDENT_15 , IDENT_16 > ) ( map ) ) ; }
org . junit . Assert . assertEquals ( STRING_2 , IDENT_7 . get ( 0 ) ) 