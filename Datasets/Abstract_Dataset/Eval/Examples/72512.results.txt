METHOD_0 ( ) { java . lang . String [ ] IDENT_0 = IDENT_1 . METHOD_0 ( new com . IDENT_2 . IDENT_3 . tuple . METHOD_1 ( STRING_0 ) , true , 0 ) ; "<AssertPlaceHolder>" ; } METHOD_0 ( com . IDENT_2 . IDENT_3 . tuple . IDENT_4 , boolean , int ) { if ( tuple instanceof com . IDENT_2 . IDENT_3 . tuple . IDENT_5 ) { com . IDENT_2 . IDENT_3 . tuple . IDENT_5 IDENT_6 = ( ( com . IDENT_2 . IDENT_3 . tuple . IDENT_5 ) ( tuple ) ) ; java . util . List < com . IDENT_2 . IDENT_3 . tuple . IDENT_7 > IDENT_8 = IDENT_6 . METHOD_2 ( ) ; if ( com . IDENT_2 . IDENT_3 . util . IDENT_9 . METHOD_3 ( IDENT_6 . METHOD_4 ( ) ) ) { if ( IDENT_8 . isEmpty ( ) ) { throw new com . IDENT_2 . IDENT_3 . exception . METHOD_5 ( STRING_1 ) ; } tuple = new com . IDENT_2 . IDENT_3 . tuple . METHOD_6 ( METHOD_7 ( IDENT_8 ) ) ; } } java . lang . String IDENT_10 = tuple . METHOD_8 ( ) ; com . alibaba . IDENT_11 . JSONObject obj = new com . alibaba . IDENT_11 . JSONObject ( ) ; com . alibaba . IDENT_11 . JSONObject item = new com . alibaba . IDENT_11 . JSONObject ( ) ; item . put ( STRING_2 , IDENT_12 ) ; if ( ! IDENT_12 ) { item . put ( STRING_3 , IDENT_13 ) ; } obj . put ( STRING_4 , item ) ; obj . put ( IDENT_10 , com . alibaba . IDENT_11 . IDENT_14 . METHOD_9 ( tuple ) ) ; obj . put ( STRING_5 , IDENT_10 ) ; java . lang . String IDENT_15 = METHOD_10 ( STRING_6 ) ; com . IDENT_2 . IDENT_3 . model . IDENT_16 token = IDENT_17 . METHOD_11 ( ) ; com . IDENT_2 . IDENT_3 . http . IDENT_18 . IDENT_19 response = IDENT_20 . METHOD_12 ( java . lang . String . format ( IDENT_15 , token . METHOD_13 ( ) ) , obj . METHOD_14 ( ) ) ; obj = response . METHOD_15 ( ) ; return new java . lang . String [ ] { obj . getString ( STRING_7 ) , obj . getString ( STRING_8 ) } ; }
org . junit . Assert . assertTrue ( ( ( IDENT_0 [ 0 ] ) != null ) ) 