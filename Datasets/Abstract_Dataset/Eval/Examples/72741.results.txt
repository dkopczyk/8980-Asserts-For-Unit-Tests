METHOD_0 ( ) { edu . IDENT_0 . IDENT_1 . util . IDENT_2 IDENT_3 = new edu . IDENT_0 . IDENT_1 . util . METHOD_1 ( 4 ) ; final edu . IDENT_0 . IDENT_1 . util . IDENT_4 j = new edu . IDENT_0 . IDENT_1 . util . METHOD_2 ( ) ; IDENT_3 . run ( new java . lang . METHOD_3 ( ) { public void run ( ) { System . out . println ( j . METHOD_4 ( ) ) ; } } ) ; "<AssertPlaceHolder>" ; } run ( java . util . Collection ) { java . lang . String IDENT_5 = STRING_0 + ( java . lang . System . currentTimeMillis ( ) ) ; edu . IDENT_0 . IDENT_1 . hadoop . IDENT_6 job = new edu . IDENT_0 . IDENT_1 . hadoop . METHOD_5 ( conf , ( ( ( IDENT_7 . getName ( ) ) + STRING_1 ) + ( IDENT_8 . getName ( ) ) ) ) ; job . METHOD_6 ( edu . IDENT_0 . IDENT_1 . hadoop . IDENT_9 . class ) ; job . METHOD_7 ( IDENT_7 ) ; job . METHOD_8 ( IDENT_8 ) ; job . METHOD_9 ( IDENT_10 ) ; job . METHOD_10 ( IDENT_11 ) ; job . METHOD_11 ( IDENT_12 ) ; job . METHOD_12 ( IDENT_13 ) ; for ( java . lang . String IDENT_14 : IDENT_15 ) edu . IDENT_0 . IDENT_1 . hadoop . IDENT_16 . METHOD_13 ( job , new edu . IDENT_0 . IDENT_1 . hadoop . Path ( IDENT_14 ) ) ; edu . IDENT_0 . IDENT_1 . hadoop . Path IDENT_17 = new edu . IDENT_0 . IDENT_1 . hadoop . Path ( IDENT_5 ) ; edu . IDENT_0 . IDENT_1 . hadoop . IDENT_18 . METHOD_14 ( job , IDENT_17 ) ; job . METHOD_15 ( true ) ; edu . IDENT_0 . IDENT_1 . hadoop . IDENT_19 fs = edu . IDENT_0 . IDENT_1 . hadoop . IDENT_19 . get ( conf ) ; edu . IDENT_0 . IDENT_1 . hadoop . IDENT_20 [ ] IDENT_21 = fs . METHOD_16 ( IDENT_17 , new edu . IDENT_0 . IDENT_1 . hadoop . IDENT_9 . METHOD_17 ( ) ) ; java . util . Collection < edu . IDENT_0 . IDENT_1 . hadoop . Path > IDENT_22 = new java . util . IDENT_23 < edu . IDENT_0 . IDENT_1 . hadoop . Path > ( ) ; for ( edu . IDENT_0 . IDENT_1 . hadoop . IDENT_20 status : IDENT_21 ) { IDENT_22 . add ( status . getPath ( ) ) ; } return new edu . IDENT_0 . IDENT_1 . hadoop . METHOD_18 ( fs , IDENT_22 ) ; }
org . junit . Assert . assertEquals ( 1 , j . get ( ) ) 