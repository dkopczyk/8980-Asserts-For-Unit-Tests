METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; com . IDENT_1 . IDENT_2 . jena . IDENT_3 query = com . IDENT_1 . IDENT_2 . jena . IDENT_4 . create ( IDENT_0 ) ; try ( com . IDENT_1 . IDENT_2 . jena . IDENT_5 IDENT_6 = com . IDENT_1 . IDENT_2 . jena . IDENT_7 . create ( query , test . IDENT_8 . model ) ) { IDENT_6 . METHOD_1 ( ( - 5 ) ) ; org . apache . jena . query . ResultSet rs = IDENT_6 . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } } METHOD_2 ( ) { com . IDENT_1 . IDENT_2 . repository . IDENT_9 IDENT_10 = model . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( query . METHOD_6 ( ) , query . METHOD_7 ( ) ) ; IDENT_10 . METHOD_8 ( ( ( model . METHOD_3 ( ) ) instanceof com . IDENT_1 . IDENT_2 . jena . IDENT_11 ) ) ; IDENT_10 . METHOD_9 ( model . METHOD_3 ( ) . METHOD_10 ( ) ) ; IDENT_10 . METHOD_11 ( query . METHOD_12 ( ) ) ; IDENT_10 . METHOD_13 ( query . METHOD_14 ( ) ) ; IDENT_10 . METHOD_15 ( query . METHOD_16 ( ) ) ; if ( ( binding ) != null ) { java . util . Iterator < java . lang . String > IDENT_12 = binding . METHOD_17 ( ) ; while ( IDENT_12 . hasNext ( ) ) { java . lang . String IDENT_13 = IDENT_12 . next ( ) ; IDENT_10 . METHOD_18 ( IDENT_13 , model . METHOD_3 ( ) . IDENT_14 . METHOD_19 ( binding . get ( IDENT_13 ) . METHOD_20 ( ) ) ) ; } } org . eclipse . IDENT_15 . query . IDENT_16 result ; try { IDENT_10 . METHOD_21 ( model . METHOD_3 ( ) . METHOD_22 ( ) ) ; if ( ( IDENT_17 ) > 0 ) { IDENT_10 . METHOD_23 ( ( ( int ) ( ( IDENT_17 ) / 1000 ) ) ) ; } result = IDENT_10 . evaluate ( ) ; } catch ( org . eclipse . IDENT_15 . query . IDENT_18 e ) { throw new org . apache . jena . query . METHOD_24 ( e ) ; } IDENT_19 = result ; return new com . IDENT_1 . IDENT_2 . jena . METHOD_25 ( result , model ) ; }
org . junit . Assert . assertNotNull ( rs ) 