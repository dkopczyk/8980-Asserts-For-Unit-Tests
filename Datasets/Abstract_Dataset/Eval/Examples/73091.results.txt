METHOD_0 ( ) { me . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 instance = org . easymock . EasyMock . METHOD_1 ( me . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . class ) ; org . easymock . EasyMock . replay ( instance ) ; int exceptions = 0 ; for ( me . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 IDENT_6 : IDENT_5 . IDENT_7 ) { try { IDENT_6 . METHOD_2 ( "foo" , instance ) ; } catch ( java . lang . IllegalArgumentException IDENT_8 ) { exceptions ++ ; } } "<AssertPlaceHolder>" ; org . easymock . EasyMock . verify ( instance ) ; } METHOD_2 ( java . lang . String , me . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) { return METHOD_3 ( ) . METHOD_4 ( IDENT_9 , instance ) ; }
org . junit . Assert . assertEquals ( IDENT_5 . IDENT_7 . size ( ) , exceptions ) 