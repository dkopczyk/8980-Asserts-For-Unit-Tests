METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; org . json . simple . JSONObject body = new org . json . simple . JSONObject ( ) ; body . put ( STRING_1 , IDENT_0 ) ; try { com . fujitsu . dc . test . utils . IDENT_1 IDENT_2 = METHOD_1 ( body , IDENT_3 . IDENT_4 ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_5 = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; IDENT_5 . put ( STRING_0 , IDENT_2 . METHOD_2 ( IDENT_6 . IDENT_7 ) ) ; com . fujitsu . dc . test . utils . IDENT_1 response = com . fujitsu . dc . test . utils . IDENT_8 . request ( STRING_2 ) . with ( STRING_3 , IDENT_9 ) . with ( STRING_4 0 , IDENT_10 ) . with ( STRING_5 , IDENT_11 ) . with ( STRING_6 , IDENT_12 ) . with ( STRING_4 2 , STRING_4 1 ) . with ( STRING_7 , IDENT_13 . IDENT_14 ) . with ( STRING_8 , com . fujitsu . dc . core . IDENT_15 . METHOD_3 ( ) ) . METHOD_4 ( ) . METHOD_5 ( IDENT_3 . IDENT_16 ) . debug ( ) ; org . json . simple . IDENT_17 results = ( ( org . json . simple . IDENT_17 ) ( ( ( org . json . simple . JSONObject ) ( response . METHOD_6 ( ) . get ( STRING_4 ) ) ) . get ( STRING_9 ) ) ) ; "<AssertPlaceHolder>" ; } finally { METHOD_7 ( IDENT_0 ) ; } } get ( java . lang . String ) { com . fujitsu . dc . test . jersey . IDENT_18 req = new com . fujitsu . dc . test . jersey . METHOD_8 ( url ) ; req . method = javax . ws . rs . IDENT_19 . IDENT_20 ; return req ; }
org . junit . Assert . assertEquals ( 1 , results . size ( ) ) 