METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; java . lang . String IDENT_2 = STRING_2 ; try { com . fujitsu . dc . test . utils . IDENT_3 . METHOD_1 ( com . fujitsu . dc . test . jersey . IDENT_4 . IDENT_5 . schema . IDENT_6 . IDENT_7 , IDENT_8 . IDENT_9 , IDENT_10 . IDENT_11 , IDENT_10 . IDENT_12 , IDENT_0 ) ; com . fujitsu . dc . test . utils . IDENT_13 res = METHOD_2 ( IDENT_1 , IDENT_0 ) ; res . METHOD_3 ( IDENT_8 . IDENT_9 ) ; org . json . simple . JSONObject body = new org . json . simple . JSONObject ( ) ; body . put ( STRING_3 , IDENT_2 ) ; body . put ( STRING_2 4 , STRING_2 3 ) ; com . fujitsu . dc . test . utils . IDENT_14 . create ( com . fujitsu . dc . test . jersey . IDENT_4 . IDENT_5 . schema . IDENT_6 . IDENT_7 , IDENT_8 . IDENT_9 , body , IDENT_10 . IDENT_11 , IDENT_10 . IDENT_12 , IDENT_0 , IDENT_1 ) ; com . fujitsu . dc . test . utils . IDENT_13 response = com . fujitsu . dc . test . utils . IDENT_15 . request ( STRING_4 ) . with ( STRING_5 , IDENT_10 . IDENT_11 ) . with ( STRING_2 2 , IDENT_10 . IDENT_12 ) . with ( STRING_6 , IDENT_0 ) . with ( STRING_7 , IDENT_1 ) . with ( STRING_2 5 , STRING_2 6 ) . with ( STRING_8 , IDENT_16 . IDENT_17 ) . with ( STRING_2 1 , com . fujitsu . dc . core . IDENT_18 . METHOD_4 ( ) ) . METHOD_5 ( ) . METHOD_3 ( IDENT_8 . IDENT_19 ) . debug ( ) ; org . json . simple . IDENT_20 results = ( ( org . json . simple . IDENT_20 ) ( ( ( org . json . simple . JSONObject ) ( response . METHOD_6 ( ) . get ( STRING_9 ) ) ) . get ( STRING_2 0 ) ) ) ; "<AssertPlaceHolder>" ; } finally { com . fujitsu . dc . test . utils . IDENT_14 . delete ( com . fujitsu . dc . test . jersey . IDENT_4 . IDENT_5 . schema . IDENT_6 . IDENT_7 , ( - 1 ) , IDENT_1 , IDENT_2 , IDENT_0 ) ; com . fujitsu . dc . test . utils . IDENT_21 . delete ( IDENT_0 , com . fujitsu . dc . test . jersey . IDENT_4 . IDENT_5 . schema . IDENT_6 . IDENT_7 , com . fujitsu . dc . test . jersey . IDENT_4 . IDENT_5 . schema . IDENT_6 . IDENT_22 . IDENT_23 , IDENT_1 , IDENT_10 . IDENT_11 , ( - 1 ) ) ; com . fujitsu . dc . test . utils . IDENT_3 . METHOD_7 ( IDENT_10 . IDENT_11 , IDENT_10 . IDENT_12 , IDENT_0 , com . fujitsu . dc . test . jersey . IDENT_4 . IDENT_5 . schema . IDENT_6 . IDENT_7 , ( - 1 ) ) ; } } get ( java . lang . String ) { com . fujitsu . dc . test . jersey . IDENT_24 req = new com . fujitsu . dc . test . jersey . METHOD_8 ( url ) ; req . method = javax . ws . rs . IDENT_25 . IDENT_26 ; return req ; }
org . junit . Assert . assertEquals ( 1 , results . size ( ) ) 