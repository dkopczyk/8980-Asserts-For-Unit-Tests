( ) { org . json . simple . JSONObject json = METHOD_0 ( STRING_0 , STRING_1 ) ; java . lang . String IDENT_0 = ( ( java . lang . String ) ( json . get ( IDENT_1 . IDENT_2 . IDENT_3 ) ) ) ; com . fujitsu . dc . test . utils . IDENT_4 IDENT_5 = com . fujitsu . dc . test . utils . IDENT_6 . request ( STRING_2 ) . with ( STRING_3 , com . fujitsu . dc . test . jersey . IDENT_7 . auth . IDENT_8 . IDENT_9 ) . with ( STRING_4 , IDENT_0 ) . METHOD_1 ( ) . METHOD_2 ( IDENT_10 . IDENT_11 ) ; java . lang . String IDENT_12 = com . fujitsu . dc . test . unit . core . IDENT_13 . METHOD_3 ( com . fujitsu . dc . test . jersey . IDENT_7 . auth . IDENT_8 . IDENT_9 ) ; org . json . simple . JSONObject IDENT_14 = IDENT_5 . METHOD_4 ( ) ; java . lang . String IDENT_15 = ( ( java . lang . String ) ( IDENT_14 . get ( IDENT_1 . IDENT_2 . IDENT_3 ) ) ) ; com . fujitsu . dc . common . auth . token . IDENT_16 IDENT_17 = com . fujitsu . dc . common . auth . token . IDENT_16 . parse ( IDENT_15 , IDENT_12 ) ; "<AssertPlaceHolder>" ; try { this . METHOD_5 ( com . fujitsu . dc . test . jersey . IDENT_7 . auth . IDENT_8 . IDENT_18 , com . fujitsu . dc . test . jersey . IDENT_7 . auth . IDENT_8 . IDENT_19 , IDENT_15 , com . fujitsu . dc . test . jersey . IDENT_7 . auth . IDENT_8 . IDENT_9 ) ; } finally { this . METHOD_6 ( IDENT_20 . IDENT_21 , com . fujitsu . dc . test . jersey . IDENT_7 . auth . IDENT_8 . IDENT_18 , IDENT_1 . IDENT_22 . IDENT_23 , com . fujitsu . dc . test . jersey . IDENT_7 . auth . IDENT_8 . IDENT_9 ) ; } } METHOD_7 ( ) { return this . schema ; }
org . junit . Assert . assertNotNull ( IDENT_17 . METHOD_7 ( ) ) 