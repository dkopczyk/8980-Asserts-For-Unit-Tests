METHOD_0 ( ) { com . fujitsu . dc . core . model . IDENT_0 IDENT_1 = com . fujitsu . dc . test . unit . core . IDENT_2 . IDENT_3 . METHOD_1 ( com . fujitsu . dc . test . unit . core . IDENT_2 . IDENT_3 . IDENT_4 ) ; com . fujitsu . dc . core . model . IDENT_0 IDENT_5 = com . fujitsu . dc . test . unit . core . IDENT_2 . IDENT_3 . METHOD_1 ( com . fujitsu . dc . test . unit . core . IDENT_2 . IDENT_3 . IDENT_6 ) ; com . fujitsu . dc . core . model . IDENT_0 IDENT_7 = com . fujitsu . dc . test . unit . core . IDENT_2 . IDENT_3 . METHOD_1 ( com . fujitsu . dc . test . unit . core . IDENT_2 . IDENT_3 . IDENT_8 ) ; java . util . Map < java . lang . String , com . fujitsu . dc . core . model . IDENT_0 > IDENT_9 = new java . util . HashMap < java . lang . String , com . fujitsu . dc . core . model . IDENT_0 > ( ) ; java . util . Map < java . lang . String , com . fujitsu . dc . core . model . IDENT_0 > IDENT_10 = new java . util . HashMap < java . lang . String , com . fujitsu . dc . core . model . IDENT_0 > ( ) ; java . util . Map < java . lang . String , com . fujitsu . dc . core . model . IDENT_0 > IDENT_11 = new java . util . HashMap < java . lang . String , com . fujitsu . dc . core . model . IDENT_0 > ( ) ; java . lang . String key = STRING_0 + ( com . fujitsu . dc . test . unit . core . IDENT_2 . IDENT_3 . IDENT_4 ) ; IDENT_9 . put ( key , IDENT_1 ) ; key = STRING_0 + ( com . fujitsu . dc . test . unit . core . IDENT_2 . IDENT_3 . IDENT_6 ) ; IDENT_10 . put ( key , IDENT_5 ) ; key = STRING_0 + ( com . fujitsu . dc . test . unit . core . IDENT_2 . IDENT_3 . IDENT_8 ) ; IDENT_11 . put ( key , IDENT_7 ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_12 = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; java . lang . String IDENT_13 = STRING_0 + ( com . fujitsu . dc . test . unit . core . IDENT_2 . IDENT_3 . IDENT_4 ) ; com . fujitsu . dc . test . unit . core . IDENT_2 . IDENT_3 . IDENT_14 IDENT_15 = new com . fujitsu . dc . test . unit . core . IDENT_2 . IDENT_3 . METHOD_2 ( ) ; int res = IDENT_15 . METHOD_3 ( IDENT_13 , IDENT_9 , IDENT_10 , IDENT_11 , IDENT_12 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , java . util . Map , java . util . Map , java . util . Map , java . util . Map ) { if ( IDENT_9 . containsKey ( IDENT_13 ) ) { return com . fujitsu . dc . core . IDENT_2 . IDENT_16 . IDENT_17 ; } else if ( IDENT_18 . containsKey ( IDENT_13 ) ) { return com . fujitsu . dc . core . IDENT_2 . IDENT_16 . IDENT_19 ; } else if ( IDENT_20 . containsKey ( IDENT_13 ) ) { return com . fujitsu . dc . core . IDENT_2 . IDENT_16 . IDENT_21 ; } else if ( IDENT_22 . containsKey ( IDENT_13 ) ) { return com . fujitsu . dc . core . IDENT_2 . IDENT_16 . IDENT_23 ; } for ( java . util . Map . Entry < java . lang . String , com . fujitsu . dc . core . model . IDENT_0 > entry : IDENT_9 . entrySet ( ) ) { java . lang . String IDENT_24 = entry . getKey ( ) ; if ( IDENT_13 . startsWith ( IDENT_24 ) ) { return com . fujitsu . dc . core . IDENT_2 . IDENT_16 . IDENT_17 ; } } for ( java . util . Map . Entry < java . lang . String , com . fujitsu . dc . core . model . IDENT_0 > entry : IDENT_20 . entrySet ( ) ) { java . lang . String IDENT_25 = entry . getKey ( ) ; if ( IDENT_13 . startsWith ( IDENT_25 ) ) { return com . fujitsu . dc . core . IDENT_2 . IDENT_16 . IDENT_26 ; } } return com . fujitsu . dc . core . IDENT_2 . IDENT_16 . IDENT_27 ; }
org . junit . Assert . assertEquals ( 1 , res ) 