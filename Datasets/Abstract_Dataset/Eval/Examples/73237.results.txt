METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; java . lang . String IDENT_2 = STRING_2 ; java . lang . String IDENT_3 = STRING_3 ; com . fujitsu . dc . core . model . IDENT_4 IDENT_5 = com . fujitsu . dc . test . unit . core . IDENT_6 . IDENT_7 . METHOD_1 ( com . fujitsu . dc . test . unit . core . IDENT_6 . IDENT_7 . IDENT_8 ) ; com . fujitsu . dc . core . model . IDENT_4 IDENT_9 = com . fujitsu . dc . test . unit . core . IDENT_6 . IDENT_7 . METHOD_1 ( com . fujitsu . dc . test . unit . core . IDENT_6 . IDENT_7 . IDENT_10 ) ; com . fujitsu . dc . core . model . IDENT_4 IDENT_11 = com . fujitsu . dc . test . unit . core . IDENT_6 . IDENT_7 . METHOD_1 ( com . fujitsu . dc . test . unit . core . IDENT_6 . IDENT_7 . IDENT_12 ) ; java . util . Map < java . lang . String , com . fujitsu . dc . core . model . IDENT_4 > IDENT_13 = new java . util . HashMap < java . lang . String , com . fujitsu . dc . core . model . IDENT_4 > ( ) ; java . util . Map < java . lang . String , com . fujitsu . dc . core . model . IDENT_4 > IDENT_14 = new java . util . HashMap < java . lang . String , com . fujitsu . dc . core . model . IDENT_4 > ( ) ; java . util . Map < java . lang . String , com . fujitsu . dc . core . model . IDENT_4 > IDENT_15 = new java . util . HashMap < java . lang . String , com . fujitsu . dc . core . model . IDENT_4 > ( ) ; java . lang . String key = STRING_4 + IDENT_1 ; IDENT_13 . put ( key , IDENT_5 ) ; key = STRING_4 + IDENT_2 ; IDENT_14 . put ( key , IDENT_9 ) ; key = STRING_4 + IDENT_3 ; IDENT_15 . put ( key , IDENT_11 ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_16 = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; IDENT_16 . put ( ( ( STRING_4 + IDENT_2 ) + STRING_5 ) , STRING_6 ) ; com . fujitsu . dc . test . unit . core . IDENT_6 . IDENT_7 . IDENT_17 IDENT_18 = new com . fujitsu . dc . test . unit . core . IDENT_6 . IDENT_7 . METHOD_2 ( ) ; int res = IDENT_18 . METHOD_3 ( IDENT_0 , IDENT_13 , IDENT_14 , IDENT_15 , IDENT_16 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , java . util . Map , java . util . Map , java . util . Map , java . util . Map ) { if ( IDENT_13 . containsKey ( IDENT_0 ) ) { return com . fujitsu . dc . core . IDENT_6 . IDENT_19 . IDENT_20 ; } else if ( IDENT_21 . containsKey ( IDENT_0 ) ) { return com . fujitsu . dc . core . IDENT_6 . IDENT_19 . IDENT_22 ; } else if ( IDENT_23 . containsKey ( IDENT_0 ) ) { return com . fujitsu . dc . core . IDENT_6 . IDENT_19 . IDENT_24 ; } else if ( IDENT_25 . containsKey ( IDENT_0 ) ) { return com . fujitsu . dc . core . IDENT_6 . IDENT_19 . IDENT_26 ; } for ( java . util . Map . Entry < java . lang . String , com . fujitsu . dc . core . model . IDENT_4 > entry : IDENT_13 . entrySet ( ) ) { java . lang . String IDENT_27 = entry . getKey ( ) ; if ( IDENT_0 . startsWith ( IDENT_27 ) ) { return com . fujitsu . dc . core . IDENT_6 . IDENT_19 . IDENT_20 ; } } for ( java . util . Map . Entry < java . lang . String , com . fujitsu . dc . core . model . IDENT_4 > entry : IDENT_23 . entrySet ( ) ) { java . lang . String IDENT_28 = entry . getKey ( ) ; if ( IDENT_0 . startsWith ( IDENT_28 ) ) { return com . fujitsu . dc . core . IDENT_6 . IDENT_19 . IDENT_29 ; } } return com . fujitsu . dc . core . IDENT_6 . IDENT_19 . IDENT_30 ; }
org . junit . Assert . assertEquals ( 3 , res ) 