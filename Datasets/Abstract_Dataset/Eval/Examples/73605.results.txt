METHOD_0 ( ) { java . util . Set < com . google . common . base . IDENT_0 < org . eclipse . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 > > IDENT_5 = com . google . common . collect . IDENT_6 . of ( org . eclipse . IDENT_7 . IDENT_2 . core . util . IDENT_8 . METHOD_1 ( org . eclipse . IDENT_1 . common . util . URI . METHOD_2 ( STRING_0 ) ) , org . eclipse . IDENT_7 . IDENT_2 . core . util . IDENT_8 . METHOD_1 ( org . eclipse . IDENT_1 . common . util . URI . METHOD_2 ( STRING_1 ) ) , org . eclipse . IDENT_7 . IDENT_2 . core . util . IDENT_8 . METHOD_1 ( org . eclipse . IDENT_1 . common . util . URI . METHOD_2 ( STRING_2 ) ) ) ; java . util . Set < com . google . common . base . IDENT_0 < org . eclipse . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 > > IDENT_9 = com . google . common . collect . IDENT_6 . of ( org . eclipse . IDENT_7 . IDENT_2 . core . util . IDENT_8 . METHOD_1 ( org . eclipse . IDENT_1 . common . util . URI . METHOD_2 ( STRING_0 ) ) , org . eclipse . IDENT_7 . IDENT_2 . core . util . IDENT_8 . METHOD_1 ( org . eclipse . IDENT_1 . common . util . URI . METHOD_2 ( STRING_1 ) ) , org . eclipse . IDENT_7 . IDENT_2 . core . util . IDENT_8 . METHOD_1 ( org . eclipse . IDENT_1 . common . util . URI . METHOD_2 ( STRING_2 ) ) ) ; @ org . eclipse . IDENT_7 . IDENT_2 . core . util . tests . METHOD_3 ( STRING_3 ) java . util . Set < java . util . List < com . google . common . base . IDENT_0 < org . eclipse . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 > > > IDENT_10 = com . google . common . collect . IDENT_11 . METHOD_4 ( IDENT_5 , IDENT_9 ) ; int IDENT_12 = 0 ; for ( java . util . List < com . google . common . base . IDENT_0 < org . eclipse . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 > > next : IDENT_10 ) { if ( next . get ( 0 ) . equals ( next . get ( 1 ) ) ) { IDENT_12 ++ ; } } "<AssertPlaceHolder>" ; } get ( java . lang . Object ) { if ( ! ( containsKey ( key ) ) ) { put ( key , Boolean . IDENT_13 ) ; } return super . get ( key ) ; }
org . junit . Assert . assertThat ( IDENT_12 , org . hamcrest . CoreMatchers . is ( 3 ) ) 