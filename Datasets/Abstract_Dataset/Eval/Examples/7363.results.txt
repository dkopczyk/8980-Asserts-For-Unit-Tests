METHOD_0 ( ) { java . util . IDENT_0 random = org . apache . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; org . apache . IDENT_1 . IDENT_3 out = new org . apache . IDENT_1 . METHOD_2 ( ) ; for ( int i = 0 ; i < ( org . apache . IDENT_1 . IDENT_4 . IDENT_5 ) ; i ++ ) out . METHOD_3 ( random . METHOD_4 ( ) ) ; org . apache . IDENT_1 . IDENT_6 in = new org . apache . IDENT_1 . METHOD_5 ( new org . apache . IDENT_1 . METHOD_6 ( out . toByteArray ( ) ) ) ; random = org . apache . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; for ( int i = 0 ; i < ( org . apache . IDENT_1 . IDENT_4 . IDENT_5 ) ; i ++ ) "<AssertPlaceHolder>" ; } METHOD_7 ( ) { org . apache . avro . io . IDENT_7 . IDENT_8 actual = parser . METHOD_8 ( IDENT_8 . IDENT_9 ) ; if ( actual == ( org . apache . avro . io . IDENT_7 . IDENT_8 . IDENT_10 ) ) { return ( ( float ) ( in . METHOD_9 ( ) ) ) ; } else if ( actual == ( org . apache . avro . io . IDENT_7 . IDENT_8 . IDENT_11 ) ) { return ( ( float ) ( in . METHOD_10 ( ) ) ) ; } else { assert actual == ( org . apache . avro . io . IDENT_7 . IDENT_8 . IDENT_9 ) ; return in . METHOD_7 ( ) ; } }
org . junit . Assert . assertEquals ( random . METHOD_4 ( ) , in . METHOD_7 ( ) , 0 ) 