METHOD_0 ( ) { double a = this . random . METHOD_1 ( ) ; double b = this . random . METHOD_1 ( ) ; double c = this . random . METHOD_1 ( ) ; double d = this . random . METHOD_1 ( ) ; org . IDENT_0 . IDENT_1 . math . geometry . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = new org . IDENT_0 . IDENT_1 . math . geometry . IDENT_2 . IDENT_3 . METHOD_2 ( a , b , c , d ) ; org . IDENT_0 . IDENT_1 . math . geometry . IDENT_2 . IDENT_3 . METHOD_2 METHOD_0 = IDENT_5 . METHOD_3 ( ) ; METHOD_0 . METHOD_4 ( ( - ( METHOD_0 . METHOD_5 ( ) ) ) ) ; METHOD_0 . METHOD_6 ( ( - ( METHOD_0 . METHOD_7 ( ) ) ) ) ; METHOD_0 . METHOD_8 ( ( - ( METHOD_0 . METHOD_9 ( ) ) ) ) ; IDENT_5 . METHOD_0 ( ) ; "<AssertPlaceHolder>" ; } equals ( java . lang . Object ) { if ( ! ( object instanceof org . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_7 ) ) { return false ; } final byte [ ] IDENT_8 = ( ( org . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_7 ) ( object ) ) . bytes ; if ( ( IDENT_8 . length ) != ( this . bytes . length ) ) { return false ; } for ( int i = 0 ; i < ( IDENT_8 . length ) ; ++ i ) { if ( ( IDENT_8 [ i ] ) != ( this . bytes [ i ] ) ) { return false ; } } return true ; }
org . junit . Assert . assertTrue ( METHOD_0 . equals ( IDENT_5 ) ) 