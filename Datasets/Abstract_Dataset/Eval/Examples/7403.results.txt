METHOD_0 ( ) { org . apache . beam . sdk . util . IDENT_0 . IDENT_1 < java . lang . IDENT_2 < org . apache . beam . sdk . values . IDENT_3 < java . lang . String , java . lang . Integer > > > IDENT_4 = org . apache . beam . sdk . util . IDENT_0 . IDENT_1 . of ( org . apache . beam . sdk . IDENT_5 . IDENT_6 . of ( org . apache . beam . sdk . IDENT_5 . IDENT_7 . of ( org . apache . beam . sdk . IDENT_5 . IDENT_8 . of ( ) , org . apache . beam . sdk . IDENT_5 . IDENT_9 . of ( ) ) ) , org . apache . beam . sdk . IDENT_10 . IDENT_11 . IDENT_12 . IDENT_13 . of ( ) ) ; org . apache . beam . model . pipeline . v1 . IDENT_14 . IDENT_15 IDENT_16 = org . apache . beam . runners . core . IDENT_17 . IDENT_18 . METHOD_1 ( IDENT_4 ) ; org . apache . beam . runners . core . IDENT_17 . IDENT_19 . IDENT_20 IDENT_21 = org . apache . beam . runners . core . IDENT_17 . IDENT_19 . METHOD_2 ( IDENT_16 . METHOD_3 ( ) ) ; org . apache . beam . model . pipeline . v1 . IDENT_14 . IDENT_22 IDENT_23 = org . apache . beam . runners . core . IDENT_17 . IDENT_19 . METHOD_4 ( IDENT_21 . METHOD_5 ( ) , IDENT_21 . METHOD_6 ( ) ) ; "<AssertPlaceHolder>" ; } equalTo ( T extends java . io . IDENT_24 ) { return org . apache . beam . sdk . testing . IDENT_25 . METHOD_7 ( ( ) -> org . hamcrest . Matchers . equalTo ( expected ) ) ; }
org . junit . Assert . assertThat ( IDENT_23 , org . hamcrest . Matchers . equalTo ( IDENT_16 . METHOD_3 ( ) ) ) 