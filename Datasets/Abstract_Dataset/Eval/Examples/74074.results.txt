METHOD_0 ( ) { final java . util . function . IDENT_0 < java . lang . String , java . lang . Integer > function = String :: length ; final uk . gov . gchq . gaffer . data . element . function . IDENT_1 IDENT_2 = new uk . gov . gchq . gaffer . data . element . function . IDENT_1 . Builder ( ) . select ( STRING_0 ) . execute ( function ) . project ( STRING_1 ) . build ( ) ; final uk . gov . gchq . gaffer . data . element . Entity element = new uk . gov . gchq . gaffer . data . element . Entity . Builder ( ) . group ( "test" ) . property ( STRING_0 , "value" ) . property ( STRING_2 , 1 ) . build ( ) ; final uk . gov . gchq . gaffer . data . element . Element result = IDENT_2 . apply ( element ) ; "<AssertPlaceHolder>" ; } getProperty ( java . lang . String ) { final boolean IDENT_3 = uk . gov . gchq . gaffer . rest . service . v2 . IDENT_4 . IDENT_5 . containsKey ( IDENT_6 ) ; boolean IDENT_7 = IDENT_3 ; if ( ! IDENT_7 ) { final java . lang . String IDENT_8 = java . lang . System . getProperty ( uk . gov . gchq . gaffer . rest . service . v2 . IDENT_4 . IDENT_9 ) ; if ( null != IDENT_8 ) { final java . lang . String [ ] props = IDENT_8 . split ( STRING_3 ) ; IDENT_7 = org . apache . commons . lang3 . IDENT_10 . contains ( props , IDENT_6 ) ; } } java . lang . String IDENT_11 ; if ( IDENT_7 ) { IDENT_11 = java . lang . System . getProperty ( IDENT_6 ) ; if ( ( null == IDENT_11 ) && IDENT_3 ) { IDENT_11 = uk . gov . gchq . gaffer . rest . service . v2 . IDENT_4 . IDENT_5 . get ( IDENT_6 ) ; } } else { IDENT_11 = null ; } final javax . ws . rs . core . Response . IDENT_12 builder = ( null == IDENT_11 ) ? javax . ws . rs . core . Response . status ( INT_0 ) . entity ( new uk . gov . gchq . gaffer . core . exception . IDENT_13 . METHOD_1 ( ) . status ( Status . IDENT_14 ) . METHOD_2 ( INT_0 ) . METHOD_3 ( ( ( STRING_4 + IDENT_6 ) + STRING_5 ) ) . build ( ) ) . type ( IDENT_15 . IDENT_16 ) : javax . ws . rs . core . Response . METHOD_4 ( IDENT_11 ) . type ( IDENT_15 . IDENT_17 ) ; return builder . header ( IDENT_18 . IDENT_19 , IDENT_18 . IDENT_20 ) . build ( ) ; }
org . junit . Assert . assertEquals ( STRING_0 . length ( ) , result . getProperty ( STRING_1 ) ) 