METHOD_0 ( ) { final uk . gov . gchq . gaffer . data . element . id . IDENT_0 value = mock ( uk . gov . gchq . gaffer . data . element . id . IDENT_0 . class ) ; final uk . gov . gchq . gaffer . data . element . function . IDENT_1 function = new uk . gov . gchq . gaffer . data . element . function . METHOD_1 ( ) ; final java . lang . Object result = function . apply ( value ) ; "<AssertPlaceHolder>" ; } apply ( java . lang . Object ) { if ( null == value ) { return null ; } if ( value instanceof java . lang . IDENT_2 ) { return ( ( java . lang . IDENT_2 ) ( value ) ) . METHOD_2 ( ) ; } if ( value instanceof java . lang . String ) { return java . lang . Integer . valueOf ( ( ( java . lang . String ) ( value ) ) ) ; } throw new java . lang . IllegalArgumentException ( ( STRING_0 + value ) ) ; }
org . junit . Assert . assertSame ( value , result ) 