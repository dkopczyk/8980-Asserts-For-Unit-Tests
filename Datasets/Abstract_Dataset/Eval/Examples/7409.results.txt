METHOD_0 ( ) { org . apache . beam . sdk . runners . IDENT_0 < org . apache . beam . sdk . values . IDENT_1 < java . lang . Long > , ? , ? > application = org . apache . beam . sdk . runners . IDENT_0 . of ( STRING_0 , org . apache . beam . IDENT_2 . IDENT_3 . IDENT_4 . com . google . common . collect . ImmutableMap . < org . apache . beam . sdk . values . IDENT_5 < ? > , org . apache . beam . sdk . values . IDENT_6 > builder ( ) . put ( new org . apache . beam . sdk . values . IDENT_5 < java . lang . Long > ( ) , IDENT_7 ) . put ( IDENT_8 . METHOD_1 ( ) , IDENT_8 . METHOD_2 ( ) ) . build ( ) , java . util . Collections . METHOD_3 ( new org . apache . beam . sdk . values . IDENT_5 < java . lang . Long > ( ) , output ) , org . apache . beam . sdk . IDENT_9 . IDENT_10 . of ( new org . apache . beam . runners . core . IDENT_11 . IDENT_12 . METHOD_4 ( ) ) . METHOD_5 ( IDENT_8 ) , pipeline ) ; org . apache . beam . sdk . values . IDENT_1 < java . lang . Long > input = org . apache . beam . runners . core . IDENT_11 . IDENT_13 . METHOD_6 ( application ) ; "<AssertPlaceHolder>" ; } equalTo ( T extends java . io . IDENT_14 ) { return org . apache . beam . sdk . testing . IDENT_15 . METHOD_7 ( ( ) -> org . hamcrest . Matchers . equalTo ( expected ) ) ; }
org . junit . Assert . assertThat ( input , org . hamcrest . Matchers . equalTo ( IDENT_7 ) ) 