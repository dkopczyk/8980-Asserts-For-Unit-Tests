METHOD_0 ( ) { final int IDENT_0 = 3 ; final java . util . List < uk . gov . gchq . gaffer . data . element . Element > elements = java . util . stream . IDENT_1 . range ( 0 , IDENT_0 ) . METHOD_1 ( ( i ) -> new uk . gov . gchq . gaffer . data . element . Entity ( IDENT_2 . IDENT_3 , ( STRING_0 + i ) ) ) . collect ( java . util . stream . IDENT_4 . toList ( ) ) ; final uk . gov . gchq . gaffer . store . operation . handler . IDENT_5 < ? , IDENT_6 > handler = METHOD_2 ( ) ; final uk . gov . gchq . gaffer . operation . impl . IDENT_7 operation = new uk . gov . gchq . gaffer . operation . impl . IDENT_7 . Builder < > ( ) . input ( elements ) . METHOD_3 ( METHOD_3 ) . build ( ) ; final java . util . List < ? > IDENT_8 = handler . METHOD_4 ( operation , new uk . gov . gchq . gaffer . store . Context ( ) , METHOD_5 ( ) ) ; "<AssertPlaceHolder>" ; METHOD_6 ( java . util . Arrays . asList ( 0 , 1 , 2 ) , elements , IDENT_8 , handler ) ; } size ( ) { return map . size ( ) ; }
org . junit . Assert . assertEquals ( METHOD_3 , IDENT_8 . size ( ) ) 