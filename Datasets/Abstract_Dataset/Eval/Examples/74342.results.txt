METHOD_0 ( ) { final uk . gov . gchq . gaffer . store . operation . IDENT_0 IDENT_1 = mock ( uk . gov . gchq . gaffer . store . operation . IDENT_0 . class ) ; final java . util . List < uk . gov . gchq . gaffer . store . IDENT_2 . IDENT_3 > IDENT_4 = java . util . Collections . emptyList ( ) ; final uk . gov . gchq . gaffer . store . operation . handler . IDENT_5 IDENT_6 = new uk . gov . gchq . gaffer . store . operation . handler . METHOD_1 ( IDENT_1 , IDENT_4 ) ; final uk . gov . gchq . gaffer . store . Context context = mock ( uk . gov . gchq . gaffer . store . Context . class ) ; final uk . gov . gchq . gaffer . store . IDENT_7 store = mock ( uk . gov . gchq . gaffer . store . IDENT_7 . class ) ; final uk . gov . gchq . gaffer . user . User user = mock ( uk . gov . gchq . gaffer . user . User . class ) ; final uk . gov . gchq . gaffer . store . IDENT_8 IDENT_9 = new uk . gov . gchq . gaffer . store . METHOD_2 ( ) ; final uk . gov . gchq . gaffer . operation . impl . get . IDENT_10 op = mock ( uk . gov . gchq . gaffer . operation . impl . get . IDENT_10 . class ) ; final uk . gov . gchq . gaffer . operation . IDENT_11 IDENT_12 = new uk . gov . gchq . gaffer . operation . METHOD_3 ( java . util . Collections . singletonList ( op ) ) ; final uk . gov . gchq . gaffer . data . element . Entity IDENT_13 = new uk . gov . gchq . gaffer . data . element . Entity ( uk . gov . gchq . gaffer . IDENT_14 . IDENT_15 . IDENT_16 ) ; METHOD_4 ( context . METHOD_5 ( ) ) . METHOD_6 ( user ) ; METHOD_4 ( store . METHOD_7 ( ) ) . METHOD_6 ( IDENT_9 ) ; METHOD_4 ( IDENT_1 . validate ( any ( ) , any ( ) , any ( ) ) ) . METHOD_6 ( new uk . gov . gchq . IDENT_17 . METHOD_8 ( ) ) ; METHOD_4 ( store . METHOD_9 ( op , context ) ) . METHOD_6 ( IDENT_13 ) ; final java . lang . Object result = IDENT_6 . METHOD_10 ( IDENT_12 , context , store ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( uk . gov . gchq . gaffer . operation . impl . function . IDENT_18 , uk . gov . gchq . gaffer . store . Context , uk . gov . gchq . gaffer . store . IDENT_7 ) { return handler . METHOD_10 ( operation , ( ( uk . gov . gchq . gaffer . IDENT_19 . IDENT_20 ) ( store ) ) . METHOD_11 ( operation , context ) ) ; }
org . junit . Assert . assertSame ( IDENT_13 , result ) 