METHOD_0 ( ) { final uk . gov . gchq . gaffer . store . operation . handler . IDENT_0 handler = new uk . gov . gchq . gaffer . store . operation . handler . METHOD_1 ( ) ; final java . util . Map < java . lang . Class < ? extends uk . gov . gchq . gaffer . operation . Operation > , uk . gov . gchq . gaffer . store . operation . resolver . IDENT_1 > IDENT_2 = new java . util . HashMap ( ) ; handler . METHOD_2 ( IDENT_2 ) ; final uk . gov . gchq . gaffer . store . Context context = mock ( uk . gov . gchq . gaffer . store . Context . class ) ; final uk . gov . gchq . gaffer . store . IDENT_3 store = mock ( uk . gov . gchq . gaffer . store . IDENT_3 . class ) ; final uk . gov . gchq . gaffer . user . User user = mock ( uk . gov . gchq . gaffer . user . User . class ) ; final uk . gov . gchq . gaffer . operation . impl . IDENT_4 IDENT_5 = mock ( uk . gov . gchq . gaffer . operation . impl . IDENT_4 . class ) ; final uk . gov . gchq . gaffer . store . IDENT_6 properties = mock ( uk . gov . gchq . gaffer . store . IDENT_6 . class ) ; final java . util . List < ? extends uk . gov . gchq . gaffer . operation . Operation > IDENT_7 = null ; final uk . gov . gchq . gaffer . operation . IDENT_8 IDENT_9 = new uk . gov . gchq . gaffer . operation . METHOD_3 ( IDENT_7 ) ; METHOD_4 ( IDENT_5 . METHOD_5 ( ) ) . METHOD_6 ( IDENT_9 ) ; METHOD_4 ( context . METHOD_7 ( ) ) . METHOD_6 ( user ) ; java . util . Set < java . lang . String > IDENT_10 = new java . util . HashSet ( ) ; IDENT_10 . add ( STRING_0 ) ; METHOD_4 ( user . METHOD_8 ( ) ) . METHOD_6 ( IDENT_10 ) ; METHOD_4 ( store . METHOD_9 ( ) ) . METHOD_6 ( properties ) ; final java . lang . Object result = handler . METHOD_10 ( new uk . gov . gchq . gaffer . operation . impl . IDENT_4 . Builder ( ) . METHOD_11 ( IDENT_9 ) . build ( ) , context , store ) ; "<AssertPlaceHolder>" ; } build ( ) { return new uk . gov . gchq . gaffer . user . User ( IDENT_11 , IDENT_12 , IDENT_10 ) ; }
org . junit . Assert . assertEquals ( 0 , result ) 