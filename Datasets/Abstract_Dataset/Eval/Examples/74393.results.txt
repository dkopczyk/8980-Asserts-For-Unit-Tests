METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final uk . gov . gchq . gaffer . store . operation . handler . job . IDENT_1 handler = new uk . gov . gchq . gaffer . store . operation . handler . job . METHOD_1 ( ) ; final uk . gov . gchq . gaffer . operation . impl . job . IDENT_2 operation = new uk . gov . gchq . gaffer . operation . impl . job . IDENT_2 . Builder ( ) . METHOD_2 ( METHOD_2 ) . build ( ) ; final uk . gov . gchq . gaffer . store . IDENT_3 store = mock ( uk . gov . gchq . gaffer . store . IDENT_3 . class ) ; final uk . gov . gchq . gaffer . IDENT_4 . IDENT_5 IDENT_6 = mock ( uk . gov . gchq . gaffer . IDENT_4 . IDENT_5 . class ) ; final uk . gov . gchq . gaffer . user . User user = mock ( uk . gov . gchq . gaffer . user . User . class ) ; final uk . gov . gchq . gaffer . IDENT_4 . IDENT_7 IDENT_8 = mock ( uk . gov . gchq . gaffer . IDENT_4 . IDENT_7 . class ) ; final uk . gov . gchq . gaffer . store . Context context = new uk . gov . gchq . gaffer . store . Context ( user ) ; METHOD_3 ( store . METHOD_4 ( ) ) . METHOD_5 ( IDENT_6 ) ; METHOD_3 ( IDENT_6 . METHOD_6 ( METHOD_2 , user ) ) . METHOD_5 ( IDENT_8 ) ; final uk . gov . gchq . gaffer . IDENT_4 . IDENT_7 result = handler . METHOD_7 ( operation , context , store ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( uk . gov . gchq . gaffer . operation . impl . IDENT_9 , uk . gov . gchq . gaffer . store . Context , uk . gov . gchq . gaffer . store . IDENT_3 ) { if ( null == ( IDENT_10 . METHOD_8 ( ) ) ) { throw new uk . gov . gchq . gaffer . operation . METHOD_9 ( STRING_1 ) ; } if ( null == ( IDENT_10 . METHOD_10 ( ) ) ) { throw new uk . gov . gchq . gaffer . operation . METHOD_9 ( STRING_2 ) ; } final java . util . List < IDENT_11 > results = new java . util . ArrayList ( ) ; for ( final IDENT_12 input : IDENT_10 . METHOD_10 ( ) ) { final uk . gov . gchq . gaffer . operation . Operation IDENT_13 = IDENT_10 . METHOD_8 ( ) . METHOD_11 ( ) ; uk . gov . gchq . gaffer . store . operation . handler . util . IDENT_14 . METHOD_12 ( IDENT_13 , input ) ; results . add ( METHOD_13 ( IDENT_13 , context , store ) ) ; } return results ; }
org . junit . Assert . assertSame ( IDENT_8 , result ) 