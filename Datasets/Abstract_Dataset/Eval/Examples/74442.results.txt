METHOD_0 ( ) { final uk . gov . gchq . gaffer . IDENT_0 . operation . IDENT_1 < uk . gov . gchq . gaffer . data . element . Element , java . lang . IDENT_2 < ? extends uk . gov . gchq . gaffer . data . element . Element > > IDENT_3 = mock ( uk . gov . gchq . gaffer . IDENT_0 . operation . IDENT_1 . class ) ; final uk . gov . gchq . gaffer . store . operation . resolver . IDENT_0 . IDENT_4 resolver = new uk . gov . gchq . gaffer . store . operation . resolver . IDENT_0 . METHOD_1 ( ) ; final java . lang . Integer result = resolver . METHOD_2 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( uk . gov . gchq . gaffer . operation . Operation ) { throw new java . lang . IllegalArgumentException ( STRING_0 ) ; }
org . junit . Assert . assertNull ( result ) 