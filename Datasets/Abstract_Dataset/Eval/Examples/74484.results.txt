METHOD_0 ( ) { final uk . gov . gchq . gaffer . store . schema . IDENT_0 validator = new uk . gov . gchq . gaffer . store . schema . METHOD_1 ( ) ; final uk . gov . gchq . gaffer . data . IDENT_1 . view . IDENT_2 view = new uk . gov . gchq . gaffer . data . IDENT_1 . view . IDENT_2 . Builder ( ) . METHOD_2 ( IDENT_3 . IDENT_4 , new uk . gov . gchq . gaffer . data . IDENT_1 . view . IDENT_5 . Builder ( ) . METHOD_3 ( IDENT_6 . IDENT_7 , java . lang . String . class ) . build ( ) ) . build ( ) ; final uk . gov . gchq . gaffer . store . schema . Schema schema = new uk . gov . gchq . gaffer . store . schema . Schema . Builder ( ) . METHOD_2 ( IDENT_3 . IDENT_4 , new uk . gov . gchq . gaffer . store . schema . IDENT_8 . Builder ( ) . property ( IDENT_6 . IDENT_9 , STRING_0 ) . build ( ) ) . build ( ) ; final uk . gov . gchq . IDENT_10 . IDENT_11 result = validator . validate ( view , schema , uk . gov . gchq . gaffer . store . schema . IDENT_12 . IDENT_13 ) ; "<AssertPlaceHolder>" ; } validate ( uk . gov . gchq . gaffer . data . IDENT_1 . view . IDENT_2 , uk . gov . gchq . gaffer . store . schema . Schema , java . util . Set ) { final boolean IDENT_14 = IDENT_15 . contains ( IDENT_16 . IDENT_17 ) ; final uk . gov . gchq . IDENT_10 . IDENT_11 result = new uk . gov . gchq . IDENT_10 . METHOD_4 ( ) ; if ( null != view ) { final uk . gov . gchq . IDENT_10 . METHOD_4 IDENT_18 = new uk . gov . gchq . IDENT_10 . METHOD_4 ( ) ; METHOD_5 ( view , schema , IDENT_15 , IDENT_14 , result ) ; if ( ! ( IDENT_18 . isValid ( ) ) ) { result . add ( IDENT_18 ) ; final uk . gov . gchq . IDENT_10 . METHOD_4 IDENT_19 = new uk . gov . gchq . IDENT_10 . METHOD_4 ( ) ; METHOD_6 ( view , schema , IDENT_15 , IDENT_14 , result ) ; if ( ! ( IDENT_19 . isValid ( ) ) ) { result . add ( IDENT_19 ) ; } } } return result ; }
org . junit . Assert . assertTrue ( result . isValid ( ) ) 