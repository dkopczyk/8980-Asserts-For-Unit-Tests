METHOD_0 ( ) { final uk . gov . gchq . gaffer . store . schema . IDENT_0 validator = new uk . gov . gchq . gaffer . store . schema . METHOD_1 ( ) ; final uk . gov . gchq . gaffer . data . IDENT_1 . view . IDENT_2 view = new uk . gov . gchq . gaffer . data . IDENT_1 . view . IDENT_2 . Builder ( ) . entity ( IDENT_3 . IDENT_4 , new uk . gov . gchq . gaffer . data . IDENT_1 . view . IDENT_5 . Builder ( ) . METHOD_2 ( IDENT_6 . IDENT_7 , IDENT_6 . IDENT_8 ) . build ( ) ) . METHOD_3 ( IDENT_3 . IDENT_9 , new uk . gov . gchq . gaffer . data . IDENT_1 . view . IDENT_5 . Builder ( ) . METHOD_2 ( IDENT_6 . IDENT_7 , IDENT_6 . IDENT_8 ) . build ( ) ) . build ( ) ; final uk . gov . gchq . gaffer . store . schema . Schema schema = new uk . gov . gchq . gaffer . store . schema . Schema . Builder ( ) . type ( STRING_0 , java . lang . String . class ) . type ( STRING_1 , new uk . gov . gchq . gaffer . store . schema . IDENT_10 . Builder ( ) . clazz ( java . lang . String . class ) . build ( ) ) . type ( STRING_2 , new uk . gov . gchq . gaffer . store . schema . IDENT_10 . Builder ( ) . clazz ( java . lang . String . class ) . build ( ) ) . type ( STRING_3 , uk . gov . gchq . gaffer . store . schema . Boolean . class ) . entity ( IDENT_3 . IDENT_4 , new uk . gov . gchq . gaffer . store . schema . IDENT_11 . Builder ( ) . METHOD_4 ( STRING_0 ) . property ( IDENT_6 . IDENT_7 , STRING_1 ) . property ( IDENT_6 . IDENT_8 , STRING_2 ) . build ( ) ) . METHOD_3 ( IDENT_3 . IDENT_9 , new uk . gov . gchq . gaffer . store . schema . IDENT_12 . Builder ( ) . source ( STRING_0 ) . METHOD_5 ( STRING_0 ) . METHOD_6 ( STRING_3 ) . property ( IDENT_6 . IDENT_8 , STRING_2 ) . build ( ) ) . build ( ) ; final uk . gov . gchq . IDENT_13 . IDENT_14 result = validator . validate ( view , schema , uk . gov . gchq . gaffer . store . schema . IDENT_15 . IDENT_16 ) ; "<AssertPlaceHolder>" ; } validate ( uk . gov . gchq . gaffer . data . IDENT_1 . view . IDENT_2 , uk . gov . gchq . gaffer . store . schema . Schema , java . util . Set ) { final boolean IDENT_17 = IDENT_18 . contains ( IDENT_19 . IDENT_20 ) ; final uk . gov . gchq . IDENT_13 . IDENT_14 result = new uk . gov . gchq . IDENT_13 . METHOD_7 ( ) ; if ( null != view ) { final uk . gov . gchq . IDENT_13 . METHOD_7 IDENT_21 = new uk . gov . gchq . IDENT_13 . METHOD_7 ( ) ; METHOD_8 ( view , schema , IDENT_18 , IDENT_17 , result ) ; if ( ! ( IDENT_21 . isValid ( ) ) ) { result . add ( IDENT_21 ) ; final uk . gov . gchq . IDENT_13 . METHOD_7 IDENT_22 = new uk . gov . gchq . IDENT_13 . METHOD_7 ( ) ; METHOD_9 ( view , schema , IDENT_18 , IDENT_17 , result ) ; if ( ! ( IDENT_22 . isValid ( ) ) ) { result . add ( IDENT_22 ) ; } } } return result ; }
org . junit . Assert . assertFalse ( result . isValid ( ) ) 