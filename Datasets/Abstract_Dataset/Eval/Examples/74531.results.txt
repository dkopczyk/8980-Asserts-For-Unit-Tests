METHOD_0 ( ) { final uk . gov . gchq . gaffer . operation . impl . get . IDENT_0 op = new uk . gov . gchq . gaffer . operation . impl . get . IDENT_0 . Builder ( ) . input ( new uk . gov . gchq . gaffer . IDENT_1 . IDENT_2 . METHOD_1 ( ) ) . build ( ) ; final uk . gov . gchq . gaffer . IDENT_1 . IDENT_2 . IDENT_3 < ? extends uk . gov . gchq . gaffer . data . element . Element > results = graph . execute ( op , METHOD_2 ( ) ) ; "<AssertPlaceHolder>" ; } iterator ( ) { try { return new uk . gov . gchq . gaffer . IDENT_4 . operation . handler . IDENT_5 . IDENT_6 . METHOD_3 ( store , operation , user ) ; } catch ( final uk . gov . gchq . gaffer . operation . IDENT_7 e ) { throw new java . lang . RuntimeException ( STRING_0 , e ) ; } }
org . junit . Assert . assertFalse ( results . iterator ( ) . hasNext ( ) ) 