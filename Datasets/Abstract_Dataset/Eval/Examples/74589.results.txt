METHOD_0 ( ) { final uk . gov . gchq . gaffer . store . schema . Schema schema = METHOD_1 ( ) ; final org . apache . spark . sql . IDENT_0 IDENT_1 = uk . gov . gchq . gaffer . spark . IDENT_2 . METHOD_2 ( ) ; final org . apache . spark . sql . IDENT_3 . IDENT_4 [ ] filters = new org . apache . spark . sql . IDENT_3 . IDENT_4 [ 1 ] ; filters [ 0 ] = new org . apache . spark . sql . IDENT_3 . METHOD_3 ( uk . gov . gchq . gaffer . spark . operation . IDENT_5 . converter . schema . IDENT_6 . IDENT_7 , STRING_0 ) ; final uk . gov . gchq . gaffer . spark . operation . IDENT_5 . IDENT_8 converter = new uk . gov . gchq . gaffer . spark . operation . IDENT_5 . METHOD_4 ( METHOD_5 ( schema ) , schema , filters ) ; final uk . gov . gchq . gaffer . operation . Operation operation = converter . METHOD_6 ( ) ; "<AssertPlaceHolder>" ; IDENT_1 . METHOD_7 ( ) . METHOD_8 ( ) ; } METHOD_6 ( ) { uk . gov . gchq . gaffer . data . IDENT_9 . view . IDENT_10 IDENT_11 = METHOD_9 ( view ) ; if ( null == IDENT_11 ) { return null ; } uk . gov . gchq . gaffer . operation . io . IDENT_12 < org . apache . spark . IDENT_13 . IDENT_14 < uk . gov . gchq . gaffer . data . element . Element > > operation = METHOD_10 ( IDENT_11 ) ; IDENT_11 = ( ( uk . gov . gchq . gaffer . operation . graph . IDENT_15 ) ( operation ) ) . METHOD_11 ( ) ; operation = METHOD_12 ( IDENT_11 , operation ) ; return operation ; }
org . junit . Assert . assertNull ( operation ) 