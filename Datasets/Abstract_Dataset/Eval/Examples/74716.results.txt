METHOD_0 ( ) { final uk . gov . gchq . gaffer . IDENT_0 . IDENT_1 store = mock ( uk . gov . gchq . gaffer . IDENT_0 . IDENT_1 . class ) ; final uk . gov . gchq . gaffer . store . operation . handler . function . IDENT_2 handler = mock ( uk . gov . gchq . gaffer . store . operation . handler . function . IDENT_2 . class ) ; final uk . gov . gchq . gaffer . operation . impl . function . IDENT_3 op = mock ( uk . gov . gchq . gaffer . operation . impl . function . IDENT_3 . class ) ; final uk . gov . gchq . gaffer . store . Context context = mock ( uk . gov . gchq . gaffer . store . Context . class ) ; final java . lang . IDENT_4 IDENT_5 = mock ( uk . gov . gchq . gaffer . IDENT_0 . operation . handler . impl . IDENT_4 . class ) ; final uk . gov . gchq . gaffer . store . schema . Schema schema = mock ( uk . gov . gchq . gaffer . store . schema . Schema . class ) ; METHOD_1 ( store . METHOD_2 ( op , context ) ) . METHOD_3 ( schema ) ; METHOD_1 ( handler . METHOD_4 ( op , schema ) ) . METHOD_3 ( IDENT_5 ) ; final uk . gov . gchq . gaffer . IDENT_0 . operation . handler . IDENT_6 IDENT_7 = new uk . gov . gchq . gaffer . IDENT_0 . operation . handler . METHOD_5 ( handler ) ; final java . lang . Object result = IDENT_7 . METHOD_4 ( op , context , store ) ; "<AssertPlaceHolder>" ; verify ( handler ) . METHOD_4 ( op , schema ) ; } METHOD_4 ( uk . gov . gchq . gaffer . operation . impl . function . IDENT_3 , uk . gov . gchq . gaffer . store . Context , uk . gov . gchq . gaffer . store . IDENT_8 ) { return handler . METHOD_4 ( operation , ( ( uk . gov . gchq . gaffer . IDENT_0 . IDENT_1 ) ( store ) ) . METHOD_2 ( operation , context ) ) ; }
org . junit . Assert . assertSame ( IDENT_5 , result ) 