METHOD_0 ( ) { final java . lang . Class IDENT_0 = java . lang . String . class ; final uk . gov . gchq . gaffer . store . schema . Schema schema = mock ( uk . gov . gchq . gaffer . store . schema . Schema . class ) ; final uk . gov . gchq . gaffer . IDENT_1 . IDENT_2 properties = mock ( uk . gov . gchq . gaffer . IDENT_1 . IDENT_2 . class ) ; final uk . gov . gchq . gaffer . IDENT_1 . factory . IDENT_3 factory = new uk . gov . gchq . gaffer . IDENT_1 . factory . METHOD_1 ( ) ; METHOD_2 ( properties . get ( METHOD_1 . IDENT_4 , METHOD_1 . IDENT_5 ) ) . METHOD_3 ( IDENT_0 . getName ( ) ) ; try { factory . METHOD_4 ( schema , properties ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( final java . lang . IllegalArgumentException e ) { "<AssertPlaceHolder>" ; } } getMessage ( ) { return ( ( ( ( super . getMessage ( ) ) + STRING_1 ) + ( this . IDENT_6 ) ) + STRING_2 ) + ( super . METHOD_5 ( ) ) ; }
org . junit . Assert . assertNotNull ( e . getMessage ( ) ) 