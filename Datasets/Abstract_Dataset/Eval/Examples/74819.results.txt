METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 + STRING_1 ; boolean result = controller . METHOD_1 ( IDENT_0 , false ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , boolean ) { if ( IDENT_1 ) { java . lang . String [ ] IDENT_2 = IDENT_0 . split ( "\n" ) ; for ( java . lang . String IDENT_3 : IDENT_2 ) { boolean IDENT_4 = ! ( IDENT_3 . toLowerCase ( ) . contains ( STRING_2 ) ) ; if ( IDENT_4 ) { METHOD_2 ( de . IDENT_5 . IDENT_6 . utils . IDENT_7 . format ( STRING_3 ) ) ; return false ; } boolean IDENT_8 = METHOD_3 ( IDENT_3 ) ; if ( ! IDENT_8 ) { METHOD_2 ( de . IDENT_5 . IDENT_6 . utils . IDENT_7 . format ( STRING_4 ) ) ; return false ; } } } else { boolean IDENT_9 = IDENT_0 . toLowerCase ( ) . contains ( STRING_2 ) ; if ( IDENT_9 ) { METHOD_2 ( de . IDENT_5 . IDENT_6 . utils . IDENT_7 . format ( STRING_5 ) ) ; return false ; } boolean IDENT_10 = IDENT_0 . toLowerCase ( ) . contains ( "\n" ) ; if ( IDENT_10 ) { METHOD_2 ( de . IDENT_5 . IDENT_6 . utils . IDENT_7 . format ( STRING_6 ) ) ; return false ; } } return true ; }
org . junit . Assert . assertThat ( result , org . hamcrest . CoreMatchers . is ( false ) ) 