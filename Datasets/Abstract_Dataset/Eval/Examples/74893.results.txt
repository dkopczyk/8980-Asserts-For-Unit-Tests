METHOD_0 ( ) { final com . IDENT_0 . IDENT_1 . cache . IDENT_2 IDENT_3 = IDENT_4 . mock ( com . IDENT_0 . IDENT_1 . cache . IDENT_2 . class , STRING_0 ) ; final com . IDENT_0 . IDENT_1 . cache . IDENT_5 IDENT_6 = IDENT_4 . mock ( com . IDENT_0 . IDENT_1 . cache . IDENT_5 . class , STRING_1 ) ; final com . IDENT_0 . IDENT_1 . cache . IDENT_7 IDENT_8 = IDENT_4 . mock ( com . IDENT_0 . IDENT_1 . cache . IDENT_7 . class , STRING_2 ) ; IDENT_4 . METHOD_1 ( new org . IDENT_9 . METHOD_2 ( ) { { METHOD_3 ( 2 ) . of ( IDENT_3 ) . METHOD_4 ( ) ; METHOD_5 ( METHOD_6 ( IDENT_6 ) ) ; METHOD_3 ( 2 ) . of ( IDENT_6 ) . METHOD_7 ( ) ; METHOD_5 ( METHOD_6 ( IDENT_8 ) ) ; METHOD_8 ( IDENT_8 ) . METHOD_9 ( ) ; METHOD_5 ( METHOD_6 ( IDENT_10 . IDENT_11 ) ) ; } } ) ; final com . IDENT_0 . IDENT_1 . management . internal . cli . IDENT_12 . IDENT_13 function = METHOD_10 ( null ) ; "<AssertPlaceHolder>" ; } METHOD_11 ( com . IDENT_0 . IDENT_1 . cache . IDENT_2 ) { return ( ( IDENT_14 . METHOD_4 ( ) . METHOD_7 ( ) ) != null ) && ( IDENT_10 . IDENT_15 . equals ( IDENT_14 . METHOD_4 ( ) . METHOD_7 ( ) . METHOD_9 ( ) ) ) ; }
org . junit . Assert . assertFalse ( function . METHOD_11 ( IDENT_3 ) ) 