METHOD_0 ( ) { java . lang . String [ ] args = new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 , STRING_3 , STRING_4 } ; IDENT_0 . IDENT_1 . METHOD_1 ( args ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String [ ] ) { java . lang . String IDENT_2 ; if ( ( args == null ) || ( ( args . length ) < 1 ) ) { IDENT_0 . IDENT_1 . METHOD_2 ( ) ; return ; } java . util . Map < java . lang . String , java . lang . String > IDENT_3 = IDENT_0 . IDENT_1 . METHOD_3 ( args ) ; java . lang . String server = IDENT_0 . IDENT_1 . METHOD_4 ( IDENT_3 ) ; IDENT_0 . IDENT_4 action = IDENT_0 . IDENT_1 . METHOD_5 ( IDENT_3 ) ; switch ( action ) { case IDENT_5 : IDENT_0 . IDENT_1 . list ( server ) ; break ; case IDENT_6 : IDENT_2 = IDENT_3 . get ( IDENT_4 . IDENT_6 . METHOD_6 ( ) ) ; IDENT_0 . IDENT_1 . METHOD_7 ( server , IDENT_2 ) ; break ; case IDENT_7 : IDENT_2 = IDENT_3 . get ( IDENT_4 . IDENT_7 . METHOD_6 ( ) ) ; IDENT_0 . IDENT_1 . METHOD_8 ( server , IDENT_2 ) ; break ; case IDENT_8 : IDENT_0 . IDENT_1 . METHOD_2 ( ) ; } java . lang . String uri = IDENT_3 . get ( IDENT_4 . IDENT_9 . METHOD_6 ( ) ) ; boolean IDENT_10 = IDENT_3 . containsKey ( IDENT_4 . IDENT_11 . METHOD_6 ( ) ) ; if ( uri != null ) { if ( IDENT_10 ) { IDENT_0 . IDENT_1 . METHOD_9 ( uri ) ; } else { IDENT_0 . IDENT_1 . METHOD_10 ( uri ) ; } } }
org . junit . Assert . assertTrue ( result . isEmpty ( ) ) 