METHOD_0 ( ) { io . vertx . core . logging . IDENT_0 log = io . vertx . core . logging . IDENT_1 . METHOD_1 ( com . IDENT_2 . IDENT_3 . core . node . IDENT_4 . class ) ; int IDENT_5 = 200 ; long IDENT_6 ; java . lang . String IDENT_7 ; try ( com . IDENT_8 . IDENT_9 . tx . IDENT_10 tx = tx ( ) ) { com . IDENT_2 . IDENT_3 . core . data . node . Node IDENT_11 = METHOD_2 ( STRING_0 ) ; IDENT_7 = IDENT_11 . METHOD_3 ( ) ; IDENT_6 = METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) ; } java . util . function . IDENT_12 < java . lang . Long , com . IDENT_2 . IDENT_3 . core . rest . node . IDENT_13 > IDENT_14 = ( IDENT_15 ) -> { com . IDENT_2 . IDENT_3 . core . rest . node . IDENT_13 request = new com . IDENT_2 . IDENT_3 . core . rest . node . METHOD_7 ( ) ; request . METHOD_8 ( new com . IDENT_2 . IDENT_3 . core . rest . schema . impl . METHOD_9 ( ) . setName ( STRING_1 ) ) ; request . METHOD_10 ( STRING_2 ) ; request . METHOD_11 ( ) . put ( STRING_3 , com . IDENT_2 . IDENT_3 . IDENT_16 . METHOD_12 ( STRING_1 1 ) ) ; request . METHOD_11 ( ) . put ( STRING_4 , com . IDENT_2 . IDENT_3 . IDENT_16 . METHOD_12 ( STRING_5 ) ) ; request . METHOD_11 ( ) . put ( STRING_1 2 , com . IDENT_2 . IDENT_3 . IDENT_16 . METHOD_12 ( ( ( STRING_6 + IDENT_15 ) + STRING_1 0 ) ) ) ; request . METHOD_11 ( ) . put ( STRING_1 , com . IDENT_2 . IDENT_3 . IDENT_16 . METHOD_12 ( STRING_1 8 ) ) ; request . METHOD_13 ( IDENT_7 ) ; return request ; } ; com . IDENT_2 . IDENT_3 . core . rest . node . IDENT_17 IDENT_18 = new com . IDENT_2 . IDENT_3 . core . rest . node . METHOD_14 ( ) ; IDENT_18 . METHOD_10 ( STRING_2 ) ; IDENT_18 . METHOD_11 ( ) . put ( STRING_4 , com . IDENT_2 . IDENT_3 . IDENT_16 . METHOD_12 ( STRING_1 5 ) ) ; io . IDENT_19 . IDENT_20 . METHOD_15 ( 0 , IDENT_5 , 0 , INT_0 , TimeUnit . IDENT_21 ) . METHOD_16 ( ( i ) -> { log . info ( ( ( STRING_1 6 + i ) + STRING_1 7 ) ) ; return client ( ) . METHOD_17 ( com . IDENT_2 . IDENT_3 . core . node . IDENT_22 , IDENT_14 . apply ( i ) ) . METHOD_18 ( ) ; } ) . METHOD_16 ( ( node ) -> { log . info ( ( ( STRING_1 4 + ( node . METHOD_3 ( ) ) ) + STRING_1 7 ) ) ; return client ( ) . METHOD_19 ( com . IDENT_2 . IDENT_3 . core . node . IDENT_22 , node . METHOD_3 ( ) , IDENT_18 ) . METHOD_18 ( ) ; } ) . METHOD_16 ( ( node ) -> { log . info ( ( ( STRING_7 + ( node . METHOD_3 ( ) ) ) + STRING_1 7 ) ) ; return client ( ) . METHOD_20 ( com . IDENT_2 . IDENT_3 . core . node . IDENT_22 , node . METHOD_3 ( ) ) . METHOD_18 ( ) ; } ) . METHOD_21 ( ( node ) -> { log . info ( ( ( STRING_8 + ( node . METHOD_3 ( ) ) ) + STRING_1 7 ) ) ; return client ( ) . METHOD_22 ( com . IDENT_2 . IDENT_3 . core . node . IDENT_22 , node . METHOD_3 ( ) ) . METHOD_23 ( ) . METHOD_24 ( ( ) -> log . info ( ( ( STRING_9 + ( node . METHOD_3 ( ) ) ) + STRING_1 7 ) ) ) ; } ) . METHOD_25 ( ) ; try ( com . IDENT_8 . IDENT_9 . tx . IDENT_10 tx = tx ( ) ) { long IDENT_23 = METHOD_4 ( ) . METHOD_5 ( ) . METHOD_26 ( ) . count ( ) ; "<AssertPlaceHolder>" ; } } count ( ) { return METHOD_27 ( ) . count ( ) ; }
org . junit . Assert . assertEquals ( STRING_1 3 , IDENT_6 , IDENT_23 ) 