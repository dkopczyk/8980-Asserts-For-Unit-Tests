METHOD_0 ( ) { java . util . Map < java . lang . String , org . apache . beam . runners . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 > IDENT_4 = new java . util . HashMap ( ) ; org . apache . beam . model . pipeline . v1 . IDENT_5 . IDENT_6 IDENT_7 = org . apache . beam . model . pipeline . v1 . IDENT_5 . IDENT_6 . METHOD_1 ( ) . METHOD_2 ( STRING_0 ) . METHOD_3 ( IDENT_8 . IDENT_9 . IDENT_10 , STRING_1 ) . build ( ) ; org . apache . beam . runners . IDENT_0 . IDENT_1 . IDENT_11 . control . IDENT_12 IDENT_13 = new org . apache . beam . runners . IDENT_0 . IDENT_1 . IDENT_11 . control . METHOD_4 ( IDENT_14 , IDENT_4 ) ; when ( IDENT_14 . validate ( any ( ) ) ) . thenReturn ( java . util . Optional . empty ( ) ) ; "<AssertPlaceHolder>" ; } transform ( org . apache . beam . model . pipeline . v1 . IDENT_5 . IDENT_6 ) { java . util . Optional < java . lang . String > IDENT_15 = validate ( IDENT_7 ) ; if ( IDENT_15 . METHOD_5 ( ) ) { org . apache . beam . runners . IDENT_0 . IDENT_1 . IDENT_11 . control . IDENT_16 . LOG . info ( IDENT_15 . get ( ) ) ; return null ; } long value = IDENT_7 . METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( ) ; final java . lang . String IDENT_17 = IDENT_7 . METHOD_9 ( ) . get ( IDENT_8 . IDENT_9 . IDENT_10 ) ; final java . lang . String IDENT_18 = IDENT_19 . get ( IDENT_17 ) . METHOD_10 ( ) ; java . lang . String IDENT_20 = IDENT_18 + STRING_2 ; com . google . api . services . IDENT_0 . model . IDENT_21 name = new com . google . api . services . IDENT_0 . model . METHOD_11 ( ) ; name . setName ( IDENT_20 ) . METHOD_12 ( STRING_3 ) ; return new com . google . api . services . IDENT_0 . model . METHOD_13 ( ) . METHOD_14 ( name ) . METHOD_15 ( true ) . METHOD_16 ( org . apache . beam . runners . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_22 . METHOD_17 ( value ) ) ; }
org . junit . Assert . assertEquals ( null , IDENT_13 . transform ( IDENT_7 ) ) 