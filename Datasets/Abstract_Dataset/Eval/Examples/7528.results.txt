METHOD_0 ( ) { org . apache . beam . runners . IDENT_0 . IDENT_1 . util . common . IDENT_1 . IDENT_2 base = mock ( org . apache . beam . runners . IDENT_0 . IDENT_1 . util . common . IDENT_1 . IDENT_2 . class ) ; org . apache . beam . runners . IDENT_0 . IDENT_1 . util . common . IDENT_1 . IDENT_3 reader = new org . apache . beam . runners . IDENT_0 . IDENT_1 . util . common . IDENT_1 . METHOD_1 ( base ) ; when ( base . read ( null , null ) ) . METHOD_2 ( new java . io . IOException ( "test" ) ) . thenReturn ( IDENT_4 ) ; try { reader . read ( null , null ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . lang . Exception e ) { } "<AssertPlaceHolder>" ; verify ( base , times ( 2 ) ) . read ( null , null ) ; } read ( org . apache . hadoop . fs . IDENT_5 , org . apache . hadoop . fs . Path ) { org . apache . hadoop . fs . Path IDENT_6 = IDENT_7 . METHOD_3 ( STRING_1 ) ; org . apache . hadoop . fs . IDENT_8 is = null ; if ( IDENT_9 . exists ( IDENT_7 ) ) { is = IDENT_9 . METHOD_4 ( IDENT_7 ) ; } else if ( IDENT_9 . exists ( IDENT_6 ) ) { is = IDENT_9 . METHOD_4 ( IDENT_6 ) ; } return is != null ? org . apache . commons . io . IDENT_10 . toByteArray ( is ) : null ; }
org . junit . Assert . assertThat ( reader . read ( null , null ) , org . hamcrest . Matchers . equalTo ( IDENT_4 ) ) 