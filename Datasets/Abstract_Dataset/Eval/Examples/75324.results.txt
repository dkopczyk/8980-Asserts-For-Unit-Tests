METHOD_0 ( ) { java . text . IDENT_0 IDENT_1 = new java . text . METHOD_1 ( STRING_0 ) ; IDENT_1 . METHOD_2 ( java . util . IDENT_2 . METHOD_3 ( STRING_1 ) ) ; org . IDENT_3 . IDENT_4 . util . IDENT_5 instance = new org . IDENT_3 . IDENT_4 . util . METHOD_4 ( IDENT_1 ) ; java . lang . String IDENT_6 = STRING_2 ; long expResult = INT_0 + INT_1 ; long result = instance . METHOD_0 ( IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_0 ( java . lang . String ) { long time = 0 ; IDENT_6 = IDENT_6 . substring ( 1 ) ; if ( ( IDENT_6 . indexOf ( STRING_3 ) ) != ( - 1 ) ) { final int IDENT_7 = java . lang . Integer . METHOD_5 ( IDENT_6 . substring ( 0 , IDENT_6 . indexOf ( STRING_3 ) ) ) ; time += IDENT_7 * ( IDENT_8 ) ; IDENT_6 = IDENT_6 . substring ( ( ( IDENT_6 . indexOf ( STRING_3 ) ) + 1 ) ) ; } if ( ( ( IDENT_6 . indexOf ( STRING_4 ) ) != ( - 1 ) ) && ( ( ( IDENT_6 . indexOf ( STRING_5 ) ) == ( - 1 ) ) || ( ( IDENT_6 . indexOf ( STRING_5 ) ) > ( IDENT_6 . indexOf ( STRING_4 ) ) ) ) ) { final int IDENT_9 = java . lang . Integer . METHOD_5 ( IDENT_6 . substring ( 0 , IDENT_6 . indexOf ( STRING_4 ) ) ) ; time += IDENT_9 * ( IDENT_10 ) ; IDENT_6 = IDENT_6 . substring ( ( ( IDENT_6 . indexOf ( STRING_4 ) ) + 1 ) ) ; } if ( ( IDENT_6 . indexOf ( STRING_6 ) ) != ( - 1 ) ) { final int IDENT_11 = java . lang . Integer . METHOD_5 ( IDENT_6 . substring ( 0 , IDENT_6 . indexOf ( STRING_6 ) ) ) ; time += IDENT_11 * ( IDENT_12 ) ; IDENT_6 = IDENT_6 . substring ( ( ( IDENT_6 . indexOf ( STRING_6 ) ) + 1 ) ) ; } if ( ( IDENT_6 . indexOf ( STRING_7 ) ) != ( - 1 ) ) { final int IDENT_13 = java . lang . Integer . METHOD_5 ( IDENT_6 . substring ( 0 , IDENT_6 . indexOf ( STRING_7 ) ) ) ; time += IDENT_13 * ( IDENT_14 ) ; IDENT_6 = IDENT_6 . substring ( ( ( IDENT_6 . indexOf ( STRING_7 ) ) + 1 ) ) ; } if ( ( IDENT_6 . indexOf ( STRING_5 ) ) != ( - 1 ) ) { IDENT_6 = IDENT_6 . substring ( 1 ) ; } if ( ( IDENT_6 . indexOf ( STRING_8 ) ) != ( - 1 ) ) { final int IDENT_15 = java . lang . Integer . METHOD_5 ( IDENT_6 . substring ( 0 , IDENT_6 . indexOf ( STRING_8 ) ) ) ; time += IDENT_15 * ( IDENT_16 ) ; IDENT_6 = IDENT_6 . substring ( ( ( IDENT_6 . indexOf ( STRING_8 ) ) + 1 ) ) ; } if ( ( IDENT_6 . indexOf ( STRING_4 ) ) != ( - 1 ) ) { final int IDENT_17 = java . lang . Integer . METHOD_5 ( IDENT_6 . substring ( 0 , IDENT_6 . indexOf ( STRING_4 ) ) ) ; time += IDENT_17 * ( IDENT_18 ) ; IDENT_6 = IDENT_6 . substring ( ( ( IDENT_6 . indexOf ( STRING_4 ) ) + 1 ) ) ; } if ( ( IDENT_6 . indexOf ( STRING_9 ) ) != ( - 1 ) ) { if ( ( IDENT_6 . indexOf ( STRING_10 ) ) != ( - 1 ) ) { final int IDENT_19 = java . lang . Integer . METHOD_5 ( IDENT_6 . substring ( 0 , IDENT_6 . indexOf ( STRING_10 ) ) ) ; time += IDENT_19 * ( IDENT_20 ) ; IDENT_6 = IDENT_6 . substring ( ( ( IDENT_6 . indexOf ( STRING_10 ) ) + 1 ) ) ; final int IDENT_21 = java . lang . Integer . METHOD_5 ( IDENT_6 . substring ( 0 , IDENT_6 . indexOf ( STRING_9 ) ) ) ; time += IDENT_21 ; IDENT_6 = IDENT_6 . substring ( ( ( IDENT_6 . indexOf ( STRING_9 ) ) + 1 ) ) ; } else { final int IDENT_19 = java . lang . Integer . METHOD_5 ( IDENT_6 . substring ( 0 , IDENT_6 . indexOf ( STRING_9 ) ) ) ; time += IDENT_19 * ( IDENT_20 ) ; IDENT_6 = IDENT_6 . substring ( ( ( IDENT_6 . indexOf ( STRING_9 ) ) + 1 ) ) ; } } if ( ( IDENT_6 . length ( ) ) != 0 ) { throw new java . lang . IllegalArgumentException ( STRING_11 ) ; } return time ; }
org . junit . Assert . assertEquals ( expResult , result ) 