METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = key ( 0 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 IDENT_4 = key ( 1 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 IDENT_5 = key ( 2 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 IDENT_6 = key ( 3 ) ; a . METHOD_1 ( IDENT_3 ) ; b . METHOD_1 ( IDENT_4 ) ; a . METHOD_1 ( IDENT_4 ) ; b . METHOD_1 ( IDENT_3 ) ; c . METHOD_1 ( IDENT_5 ) ; d . METHOD_1 ( IDENT_6 ) ; c . METHOD_1 ( IDENT_6 ) ; d . METHOD_1 ( IDENT_5 ) ; com . IDENT_0 . IDENT_1 . transaction . IDENT_7 IDENT_8 = new com . IDENT_0 . IDENT_1 . transaction . METHOD_2 ( IDENT_9 ) ; java . util . Set < com . IDENT_0 . IDENT_1 . transaction . IDENT_10 > IDENT_11 = IDENT_8 . METHOD_3 ( ) ; int count = 0 ; for ( com . IDENT_0 . IDENT_1 . transaction . IDENT_10 IDENT_12 : METHOD_3 ) { if ( ( IDENT_12 == ( METHOD_4 ( a , b ) . transaction ( ) ) ) || ( IDENT_12 == ( METHOD_4 ( c , d ) . transaction ( ) ) ) ) { count ++ ; } else { org . junit . Assert . fail ( ) ; } } "<AssertPlaceHolder>" ; } transaction ( ) { return transaction ; }
org . junit . Assert . assertEquals ( 2 , count ) 