METHOD_0 ( ) { byte [ ] original = new byte [ ] { 1 , 4 , 9 , INT_0 , - INT_1 } ; org . apache . beam . runners . IDENT_0 . IDENT_1 < byte [ ] > key = org . apache . beam . runners . IDENT_0 . IDENT_1 . of ( original , org . apache . beam . sdk . IDENT_2 . IDENT_3 . of ( ) ) ; org . apache . beam . runners . IDENT_0 . IDENT_1 < byte [ ] > IDENT_4 = org . apache . beam . runners . IDENT_0 . IDENT_1 . of ( new byte [ ] { 9 , - INT_2 , INT_1 } , org . apache . beam . sdk . IDENT_2 . IDENT_3 . of ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( org . apache . beam . sdk . testing . IDENT_5 ) { return org . apache . beam . sdk . testing . IDENT_6 . METHOD_2 ( ( ) -> org . hamcrest . Matchers . METHOD_1 ( matcher ) ) ; }
org . junit . Assert . assertThat ( key , org . hamcrest . Matchers . METHOD_1 ( org . hamcrest . Matchers . equalTo ( IDENT_4 ) ) ) 