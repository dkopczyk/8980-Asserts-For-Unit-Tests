METHOD_0 ( ) { java . util . List < org . apache . beam . sdk . io . IDENT_0 . IDENT_1 > expected = org . apache . beam . sdk . io . IDENT_0 . METHOD_1 ( 100 ) ; java . lang . String IDENT_2 = METHOD_2 ( STRING_0 , expected , org . apache . beam . sdk . io . IDENT_0 . IDENT_3 . IDENT_4 , 0 , org . apache . beam . sdk . IDENT_5 . IDENT_6 . of ( org . apache . beam . sdk . io . IDENT_0 . IDENT_1 . class ) , IDENT_7 . IDENT_8 ) ; org . apache . beam . sdk . io . IDENT_9 < org . apache . beam . sdk . io . IDENT_0 . IDENT_1 > source = org . apache . beam . sdk . io . IDENT_9 . from ( IDENT_2 ) . METHOD_3 ( ( input ) -> new org . apache . beam . sdk . io . METHOD_4 ( ( ( long ) ( input . get ( STRING_1 ) ) ) , input . get ( STRING_2 ) . toString ( ) , input . get ( STRING_3 ) . toString ( ) , ( ( long ) ( input . get ( STRING_4 ) ) ) ) , org . apache . beam . sdk . IDENT_5 . IDENT_6 . of ( org . apache . beam . sdk . io . IDENT_0 . METHOD_4 . class ) ) ; java . util . List < org . apache . beam . sdk . io . IDENT_0 . METHOD_4 > actual = org . apache . beam . sdk . testing . IDENT_10 . METHOD_5 ( source , null ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( java . util . Collection ) { @ org . apache . beam . sdk . testing . METHOD_7 ( { STRING_5 , STRING_6 } ) final java . util . Collection < org . hamcrest . IDENT_11 < ? super T > > matchers = ( ( java . util . Collection ) ( IDENT_12 ) ) ; return org . apache . beam . sdk . testing . IDENT_13 . METHOD_8 ( ( ) -> org . hamcrest . Matchers . METHOD_6 ( matchers ) ) ; }
org . junit . Assert . assertThat ( actual , org . hamcrest . Matchers . METHOD_6 ( expected . toArray ( ) ) ) 