METHOD_0 ( ) { java . lang . String body = STRING_0 ; java . lang . String IDENT_0 = STRING_1 ; org . springframework . mock . web . IDENT_1 req = METHOD_1 ( body , IDENT_0 ) ; req . METHOD_2 ( null ) ; java . io . IDENT_2 br = req . METHOD_3 ( ) ; while ( ( br . METHOD_4 ( ) ) != null ) { } org . IDENT_3 . filters . IDENT_4 IDENT_5 = new org . IDENT_3 . filters . METHOD_5 ( req , STRING_2 , body . getBytes ( ) ) ; java . util . Map params = IDENT_5 . METHOD_6 ( ) ; "<AssertPlaceHolder>" ; } size ( ) { if ( ( IDENT_6 ) != null ) { return IDENT_6 . size ( ) ; } if ( ( org . IDENT_3 . IDENT_7 . IDENT_8 . IDENT_9 ) > 0 ) { try { int count = IDENT_10 . METHOD_7 ( query ) ; if ( count == 0 ) { IDENT_6 = new java . util . ArrayList ( ) ; return count ; } if ( count > 0 ) { return count ; } java . util . List < org . opengis . feature . simple . IDENT_11 > IDENT_12 = new java . util . ArrayList ( ) ; try ( org . geotools . data . simple . IDENT_13 it = IDENT_10 . METHOD_8 ( query ) . METHOD_9 ( ) ) { count = 0 ; while ( it . hasNext ( ) ) { org . opengis . feature . simple . IDENT_11 feature = it . next ( ) ; if ( ( IDENT_12 . size ( ) ) < ( org . IDENT_3 . IDENT_7 . IDENT_8 . IDENT_9 ) ) { IDENT_12 . add ( feature ) ; } count ++ ; } if ( count <= ( org . IDENT_3 . IDENT_7 . IDENT_8 . IDENT_9 ) ) { IDENT_6 = IDENT_12 ; } else { IDENT_12 . METHOD_10 ( ) ; } return count ; } } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( e ) ; } } return super . size ( ) ; }
org . junit . Assert . assertEquals ( 0 , params . size ( ) ) 