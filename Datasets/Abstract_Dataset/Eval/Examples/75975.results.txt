METHOD_0 ( ) { java . lang . String name = STRING_0 ; it . IDENT_0 . IDENT_1 . IDENT_2 . parser . node . IDENT_3 [ ] args = new it . IDENT_0 . IDENT_1 . IDENT_2 . parser . node . IDENT_3 [ ] { METHOD_1 ( "a" ) , METHOD_1 ( "b" ) } ; it . IDENT_0 . IDENT_1 . IDENT_2 . parser . IDENT_4 [ ] IDENT_5 = new it . IDENT_0 . IDENT_1 . IDENT_2 . parser . IDENT_4 [ ] { it . IDENT_0 . IDENT_1 . IDENT_2 . parser . IDENT_4 . IDENT_6 , it . IDENT_0 . IDENT_1 . IDENT_2 . parser . IDENT_4 . IDENT_6 } ; it . IDENT_0 . IDENT_1 . IDENT_2 . parser . node . IDENT_7 IDENT_8 = it . IDENT_0 . IDENT_1 . IDENT_2 . parser . node . IDENT_7 . of ( name , args ) ; it . IDENT_0 . IDENT_1 . IDENT_2 . parser . IDENT_9 info = METHOD_2 ( name , IDENT_5 ) ; java . lang . String expected = ( info . METHOD_3 ( ) ) + ( java . lang . String . format ( STRING_1 , it . IDENT_0 . IDENT_1 . IDENT_2 . util . IDENT_10 . METHOD_4 ( ( ( java . lang . Object [ ] ) ( args ) ) ) ) ) ; "<AssertPlaceHolder>" ; } toString ( ) { return ( STRING_2 + ( this . IDENT_11 . METHOD_5 ( ) . METHOD_6 ( ) ) ) + "]" ; }
org . junit . Assert . assertThat ( IDENT_8 . toString ( ) , org . hamcrest . CoreMatchers . is ( expected ) ) 