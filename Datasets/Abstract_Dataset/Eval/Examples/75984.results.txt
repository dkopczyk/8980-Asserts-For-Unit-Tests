METHOD_0 ( ) { final int IDENT_0 = INT_0 ; final int IDENT_1 = INT_1 ; final int IDENT_2 = INT_2 ; final int IDENT_3 = INT_1 ; int [ ] IDENT_4 = new int [ ] { IDENT_3 , IDENT_2 , 0 } ; int [ ] IDENT_5 = new int [ ] { 0 , 0 , 0 } ; java . awt . image . IDENT_6 IDENT_7 = new java . awt . image . METHOD_1 ( IDENT_0 , IDENT_1 , java . awt . image . METHOD_1 . IDENT_8 ) ; java . awt . image . IDENT_9 IDENT_10 = IDENT_7 . METHOD_2 ( ) ; METHOD_3 ( IDENT_10 , 0 , ( IDENT_1 / 2 ) , IDENT_0 , ( IDENT_1 / 2 ) , IDENT_5 ) ; METHOD_3 ( IDENT_10 , 0 , 0 , IDENT_0 , ( IDENT_1 / 2 ) , IDENT_4 ) ; int [ ] IDENT_11 = new int [ ] { IDENT_2 , 0 , 0 } ; int [ ] IDENT_12 = new int [ ] { 0 , IDENT_3 , IDENT_2 } ; java . awt . image . METHOD_1 IDENT_13 = new java . awt . image . METHOD_1 ( IDENT_0 , IDENT_1 , java . awt . image . METHOD_1 . IDENT_8 ) ; java . awt . image . IDENT_9 IDENT_14 = IDENT_13 . METHOD_2 ( ) ; METHOD_3 ( IDENT_14 , 0 , 0 , IDENT_0 , ( IDENT_1 / 2 ) , IDENT_11 ) ; METHOD_3 ( IDENT_14 , 0 , ( IDENT_1 / 2 ) , IDENT_0 , ( IDENT_1 / 2 ) , IDENT_12 ) ; java . awt . image . IDENT_15 IDENT_16 = javax . media . IDENT_17 . IDENT_18 . IDENT_19 . create ( IDENT_13 , ( ( float ) ( IDENT_0 ) ) , FLOAT_0 , null , null ) ; java . awt . image . IDENT_15 [ ] IDENT_20 = new java . awt . image . IDENT_15 [ ] { IDENT_7 , IDENT_16 } ; final double [ ] IDENT_21 = new double [ ] { 255 , 255 , 255 } ; it . IDENT_22 . IDENT_23 . range . IDENT_24 IDENT_25 = it . IDENT_22 . IDENT_23 . range . IDENT_26 . create ( 0 , 0 ) ; it . IDENT_22 . IDENT_23 . range . IDENT_24 [ ] IDENT_27 = new it . IDENT_22 . IDENT_23 . range . IDENT_24 [ ] { IDENT_25 , IDENT_25 } ; java . awt . image . IDENT_15 IDENT_28 = it . IDENT_22 . IDENT_23 . IDENT_28 . IDENT_29 . create ( IDENT_20 , javax . media . IDENT_17 . IDENT_18 . IDENT_29 . IDENT_30 , null , null , null , IDENT_21 , IDENT_27 , null ) ; int [ ] IDENT_31 = new int [ 3 ] ; if ( it . IDENT_22 . IDENT_23 . IDENT_28 . IDENT_32 . IDENT_33 ) { it . IDENT_22 . IDENT_34 . IDENT_35 . IDENT_36 . METHOD_4 ( IDENT_28 , false , false ) ; try { System . out . println ( STRING_0 ) ; System . in . read ( ) ; } catch ( java . io . IOException e ) { } } java . awt . image . IDENT_37 IDENT_38 = IDENT_28 . METHOD_5 ( ) ; for ( int k = 0 ; k < 3 ; k ++ ) { IDENT_38 . METHOD_6 ( 0 , ( IDENT_1 / 2 ) , IDENT_31 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( IDENT_38 , 0 , 0 , IDENT_0 , ( IDENT_1 / 2 ) , IDENT_4 , IDENT_31 ) ; METHOD_7 ( IDENT_38 , IDENT_0 , ( IDENT_1 / 2 ) , IDENT_0 , ( IDENT_1 / 2 ) , IDENT_12 , IDENT_31 ) ; METHOD_7 ( IDENT_38 , IDENT_0 , 0 , IDENT_0 , ( IDENT_1 / 2 ) , IDENT_11 , IDENT_31 ) ; } METHOD_6 ( int , int , double [ ] ) { METHOD_8 ( ( x - ( IDENT_39 ) ) , ( y - ( IDENT_40 ) ) ) ; return IDENT_41 . METHOD_6 ( ( x - ( IDENT_42 ) ) , ( y - ( IDENT_43 ) ) , IDENT_44 , IDENT_45 ) ; }
org . junit . Assert . assertTrue ( ( ( ( int ) ( IDENT_21 [ k ] ) ) == ( IDENT_31 [ k ] ) ) ) 