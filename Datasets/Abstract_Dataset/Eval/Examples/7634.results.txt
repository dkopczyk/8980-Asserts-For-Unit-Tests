METHOD_0 ( ) { org . apache . beam . sdk . values . IDENT_0 < org . apache . beam . sdk . values . IDENT_1 < java . lang . String , java . lang . Integer > > input = pipeline . apply ( org . apache . beam . sdk . IDENT_2 . IDENT_3 . of ( org . apache . beam . sdk . IDENT_2 . IDENT_4 . IDENT_5 ) . METHOD_1 ( org . apache . beam . sdk . IDENT_6 . IDENT_7 . of ( org . apache . beam . sdk . IDENT_6 . IDENT_8 . of ( ) , org . apache . beam . sdk . IDENT_6 . IDENT_9 . of ( ) ) ) ) . apply ( org . apache . beam . sdk . IDENT_2 . IDENT_10 . IDENT_11 . METHOD_2 ( org . apache . beam . sdk . IDENT_2 . IDENT_10 . IDENT_12 . of ( org . joda . time . IDENT_13 . METHOD_3 ( INT_0 ) ) ) ) ; org . apache . beam . sdk . values . IDENT_0 < org . apache . beam . sdk . values . IDENT_1 < java . lang . String , java . lang . Integer > > output = input . apply ( org . apache . beam . sdk . IDENT_2 . IDENT_14 . of ( ) ) ; org . apache . beam . sdk . testing . IDENT_15 . that ( output ) . METHOD_4 ( org . apache . beam . sdk . IDENT_2 . IDENT_4 . IDENT_5 ) ; "<AssertPlaceHolder>" ; pipeline . run ( ) ; } METHOD_5 ( ) { return IDENT_16 ; }
org . junit . Assert . assertEquals ( input . METHOD_5 ( ) , output . METHOD_5 ( ) ) 