METHOD_0 ( ) { org . apache . beam . sdk . IDENT_0 . IDENT_1 . IDENT_2 data = org . apache . beam . sdk . IDENT_0 . IDENT_1 . IDENT_2 . from ( new org . apache . beam . sdk . IDENT_0 . IDENT_1 . METHOD_1 ( ) { @ org . apache . beam . sdk . IDENT_0 . IDENT_1 . Override public void METHOD_2 ( org . apache . beam . sdk . IDENT_0 . IDENT_1 . IDENT_2 . Builder builder ) { builder . METHOD_3 ( org . apache . beam . sdk . IDENT_0 . IDENT_1 . IDENT_2 . item ( STRING_0 , INT_0 ) , INT_0 ) . METHOD_3 ( org . apache . beam . sdk . IDENT_0 . IDENT_1 . IDENT_2 . item ( STRING_1 , java . lang . Integer . valueOf ( INT_0 ) ) , java . lang . Integer . valueOf ( INT_0 ) ) . METHOD_3 ( org . apache . beam . sdk . IDENT_0 . IDENT_1 . IDENT_2 . item ( STRING_2 , INT_1 ) , INT_1 ) . METHOD_3 ( org . apache . beam . sdk . IDENT_0 . IDENT_1 . IDENT_2 . item ( STRING_3 , java . lang . Long . valueOf ( INT_0 ) ) , java . lang . Long . valueOf ( INT_0 ) ) . METHOD_3 ( org . apache . beam . sdk . IDENT_0 . IDENT_1 . IDENT_2 . item ( STRING_4 , FLOAT_0 ) , FLOAT_0 ) . METHOD_3 ( org . apache . beam . sdk . IDENT_0 . IDENT_1 . IDENT_2 . item ( STRING_5 , java . lang . IDENT_3 . valueOf ( FLOAT_0 ) ) , java . lang . IDENT_3 . valueOf ( FLOAT_0 ) ) . METHOD_3 ( org . apache . beam . sdk . IDENT_0 . IDENT_1 . IDENT_2 . item ( STRING_6 , FLOAT_1 ) , FLOAT_1 ) . METHOD_3 ( org . apache . beam . sdk . IDENT_0 . IDENT_1 . IDENT_2 . item ( STRING_7 , java . lang . Double . valueOf ( FLOAT_1 ) ) , java . lang . Double . valueOf ( FLOAT_1 ) ) . METHOD_3 ( org . apache . beam . sdk . IDENT_0 . IDENT_1 . IDENT_2 . item ( STRING_8 , true ) , true ) . METHOD_3 ( org . apache . beam . sdk . IDENT_0 . IDENT_1 . IDENT_2 . item ( STRING_9 , Boolean . IDENT_4 ) , Boolean . IDENT_4 ) ; } } ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { return IDENT_5 . values ( ) ; }
org . junit . Assert . assertThat ( data . METHOD_4 ( ) , org . hamcrest . Matchers . empty ( ) ) 