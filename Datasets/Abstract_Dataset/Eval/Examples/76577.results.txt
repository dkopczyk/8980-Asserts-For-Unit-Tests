METHOD_0 ( ) { java . util . List < java . lang . String > IDENT_0 = java . util . Arrays . asList ( new java . lang . String [ ] { STRING_0 , STRING_1 } ) ; java . util . List < java . lang . String > IDENT_1 = java . util . Arrays . asList ( new java . lang . String [ ] { STRING_0 , STRING_1 } ) ; com . IDENT_2 . IDENT_3 . IDENT_4 table = new com . IDENT_2 . IDENT_3 . METHOD_1 ( IDENT_0 ) ; table . METHOD_2 ( java . util . Arrays . asList ( new java . lang . String [ ] { STRING_2 , STRING_3 } ) ) ; table . METHOD_2 ( java . util . Arrays . asList ( new java . lang . String [ ] { STRING_4 , STRING_5 } ) ) ; com . IDENT_2 . IDENT_3 . METHOD_1 IDENT_5 = new com . IDENT_2 . IDENT_3 . METHOD_1 ( IDENT_1 ) ; IDENT_5 . METHOD_2 ( java . util . Arrays . asList ( new java . lang . String [ ] { STRING_4 , STRING_5 } ) ) ; IDENT_5 . METHOD_2 ( java . util . Arrays . asList ( new java . lang . String [ ] { STRING_2 , STRING_3 } ) ) ; "<AssertPlaceHolder>" ; } equals ( java . lang . Object ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ( getClass ( ) ) != ( obj . getClass ( ) ) ) { return false ; } com . IDENT_2 . IDENT_3 . IDENT_6 other = ( ( com . IDENT_2 . IDENT_3 . IDENT_6 ) ( obj ) ) ; return ( IDENT_7 ) == null ? ( other . IDENT_7 ) == null : IDENT_7 . equals ( other . IDENT_7 ) ; }
org . junit . Assert . assertFalse ( table . equals ( IDENT_5 ) ) 