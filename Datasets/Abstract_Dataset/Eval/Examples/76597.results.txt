METHOD_0 ( ) { java . util . List < com . IDENT_0 . model . Person > IDENT_1 = new java . util . ArrayList < com . IDENT_0 . model . Person > ( ) ; com . IDENT_0 . model . Person IDENT_2 = new com . IDENT_0 . model . Person ( ) ; IDENT_2 . setId ( 1L ) ; IDENT_2 . setName ( STRING_0 ) ; IDENT_2 . METHOD_1 ( INT_0 ) ; IDENT_1 . add ( IDENT_2 ) ; com . IDENT_0 . model . Person IDENT_3 = new com . IDENT_0 . model . Person ( ) ; IDENT_3 . setId ( INT_1 ) ; IDENT_3 . setName ( STRING_1 ) ; IDENT_3 . METHOD_1 ( INT_2 ) ; IDENT_1 . add ( IDENT_3 ) ; com . IDENT_0 . model . Person IDENT_4 = new com . IDENT_0 . model . Person ( ) ; IDENT_4 . setId ( 1L ) ; IDENT_4 . setName ( STRING_2 ) ; IDENT_4 . METHOD_1 ( INT_3 ) ; IDENT_1 . add ( IDENT_4 ) ; when ( repository . METHOD_2 ( ) ) . thenReturn ( IDENT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( com . IDENT_0 . model . Person ) { com . IDENT_0 . model . Person IDENT_5 = null ; for ( com . IDENT_0 . model . Person p : repository . METHOD_2 ( ) ) { if ( ( ( p . getId ( ) ) == ( person . getId ( ) ) ) || ( ( p . METHOD_4 ( ) ) == 0 ) ) { continue ; } if ( IDENT_5 == null ) { IDENT_5 = p ; } int IDENT_6 = java . lang . Math . METHOD_5 ( ( ( person . METHOD_4 ( ) ) - ( IDENT_5 . METHOD_4 ( ) ) ) ) ; int IDENT_7 = java . lang . Math . METHOD_5 ( ( ( person . METHOD_4 ( ) ) - ( p . METHOD_4 ( ) ) ) ) ; if ( IDENT_7 < IDENT_6 ) { IDENT_5 = p ; } } return IDENT_5 ; }
org . junit . Assert . assertEquals ( service . METHOD_3 ( IDENT_2 ) , IDENT_3 ) 