METHOD_0 ( ) { java . util . List < java . lang . String > consumer = new java . util . ArrayList ( ) ; org . apache . beam . sdk . IDENT_0 . data . IDENT_1 < java . lang . String > IDENT_2 = org . apache . beam . IDENT_0 . IDENT_3 . data . IDENT_4 . METHOD_1 ( org . apache . beam . IDENT_5 . IDENT_6 . IDENT_7 . com . google . common . collect . ImmutableList . < org . apache . beam . sdk . IDENT_0 . data . IDENT_1 < java . lang . String > > of ( consumer :: add ) ) ; IDENT_2 . accept ( "foo" ) ; IDENT_2 . accept ( "bar" ) ; "<AssertPlaceHolder>" ; } contains ( org . apache . beam . sdk . IDENT_8 . IDENT_9 , T [ ] ) { final org . apache . beam . sdk . testing . IDENT_10 . IDENT_11 < T [ ] > IDENT_12 = new org . apache . beam . sdk . testing . IDENT_10 . METHOD_2 ( IDENT_13 , IDENT_14 ) ; return org . apache . beam . sdk . testing . IDENT_10 . METHOD_3 ( ( ) -> org . hamcrest . Matchers . METHOD_4 ( IDENT_12 . get ( ) ) ) ; }
org . junit . Assert . assertThat ( consumer , org . hamcrest . Matchers . contains ( "foo" , "bar" ) ) 