values ( ) { com . gs . collections . api . list . IDENT_0 < java . lang . String > result = Lists . mutable . of ( ) ; com . gs . collections . api . map . IDENT_1 < java . lang . Integer , java . lang . String > map = new com . gs . collections . impl . map . IDENT_2 . METHOD_0 ( 1 , STRING_0 ) ; for ( java . lang . String value : map . values ( ) ) { result . add ( value ) ; } "<AssertPlaceHolder>" ; } METHOD_1 ( IDENT_3 [ ] ) { return new com . gs . collections . impl . list . mutable . IDENT_4 < IDENT_3 > ( elements ) ; }
org . junit . Assert . assertEquals ( com . gs . collections . impl . list . mutable . IDENT_4 . METHOD_1 ( STRING_0 ) , result ) 