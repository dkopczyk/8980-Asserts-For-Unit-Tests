METHOD_0 ( ) { com . gs . collections . api . IDENT_0 . IDENT_1 < java . lang . String , java . lang . Integer > IDENT_0 = this . METHOD_1 ( STRING_0 , 1 , STRING_1 , 2 , STRING_1 , 2 ) ; com . gs . collections . api . map . IDENT_2 < java . lang . String , com . gs . collections . api . IDENT_3 < java . lang . Integer > > expected = com . gs . collections . impl . map . mutable . IDENT_4 . METHOD_2 ( ) ; expected . put ( STRING_0 , com . gs . collections . impl . set . mutable . IDENT_5 . METHOD_3 ( 1 ) ) ; expected . put ( STRING_1 , com . gs . collections . impl . set . mutable . IDENT_5 . METHOD_3 ( 2 , 2 ) ) ; com . gs . collections . api . map . IDENT_2 < java . lang . String , com . gs . collections . api . set . IDENT_6 < java . lang . Integer > > map = IDENT_0 . METHOD_4 ( IDENT_5 :: new ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( com . gs . collections . api . block . function . IDENT_7 ) { final com . gs . collections . api . map . IDENT_2 < IDENT_8 , IDENT_9 > result = com . gs . collections . impl . map . mutable . IDENT_4 . METHOD_2 ( ) ; this . map . METHOD_5 ( new com . gs . collections . api . block . IDENT_10 . IDENT_11 < IDENT_8 , IDENT_12 > ( ) { public void value ( IDENT_8 key , IDENT_12 IDENT_13 ) { IDENT_9 IDENT_14 = IDENT_15 . value ( ) ; com . gs . collections . impl . IDENT_16 . IDENT_17 . METHOD_6 ( IDENT_13 , IDENT_14 ) ; result . put ( key , IDENT_14 ) ; } } ) ; return result ; }
org . junit . Assert . assertEquals ( expected , map ) 