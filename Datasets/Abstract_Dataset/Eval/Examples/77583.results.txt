METHOD_0 ( ) { com . gs . collections . api . IDENT_0 . IDENT_1 < java . lang . Integer , java . lang . Integer > expected = com . gs . collections . impl . IDENT_0 . list . IDENT_2 . METHOD_1 ( ) ; for ( int i = 1 ; i < 8 ; i ++ ) { expected . METHOD_2 ( ( - i ) , com . gs . collections . impl . list . IDENT_3 . METHOD_3 ( i , 7 ) ) ; } com . gs . collections . api . IDENT_0 . IDENT_4 < java . lang . Integer , java . lang . Integer > actual = com . gs . collections . impl . IDENT_5 . IDENT_6 . METHOD_0 ( new java . lang . Integer [ ] { 1 , 2 , 3 , 4 , 5 , 6 , 7 } , new com . gs . collections . impl . block . function . METHOD_4 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( int , int ) { if ( from <= to ) { return com . gs . collections . impl . list . IDENT_3 . METHOD_5 ( from , to , 1 ) ; } return com . gs . collections . impl . list . IDENT_3 . METHOD_5 ( from , to , ( - 1 ) ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 