METHOD_0 ( ) { org . eclipse . collections . api . block . IDENT_0 . IDENT_1 < com . gs . IDENT_2 . data . IDENT_3 > IDENT_4 = mock ( org . eclipse . collections . api . block . IDENT_0 . IDENT_1 . class ) ; com . gs . IDENT_2 . input . filter . IDENT_5 IDENT_6 = new com . gs . IDENT_2 . input . filter . METHOD_1 ( new com . gs . IDENT_2 . util . METHOD_2 ( ) , IDENT_4 ) ; IDENT_6 . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; verify ( IDENT_4 , METHOD_4 ( ) ) . accept ( any ( com . gs . IDENT_2 . data . IDENT_3 . class ) ) ; try { IDENT_6 . next ( ) ; org . junit . Assert . fail ( ) ; } catch ( java . util . IDENT_7 ex ) { } } hasNext ( ) { return this . iterator . hasNext ( ) ; }
org . junit . Assert . assertFalse ( IDENT_6 . hasNext ( ) ) 