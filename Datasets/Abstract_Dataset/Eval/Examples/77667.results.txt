METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; try { new com . gs . IDENT_1 . results . parser . METHOD_1 ( new com . gs . IDENT_1 . results . METHOD_2 ( ) , new java . io . File ( IDENT_0 ) ) . parse ( ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( java . lang . IllegalStateException expected ) { "<AssertPlaceHolder>" ; } } parse ( ) { this . results = new com . gs . IDENT_1 . results . METHOD_3 ( ) ; try ( java . io . InputStream IDENT_2 = this . loader . load ( this . file ) ) { java . io . IDENT_3 reader = new java . io . METHOD_4 ( new java . io . METHOD_5 ( IDENT_2 , STRING_2 ) ) ; parse ( reader ) ; return this . results ; } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( e ) ; } catch ( java . text . IDENT_4 e ) { throw new java . lang . RuntimeException ( ( ( STRING_3 + ( this . file ) ) + STRING_4 ) , e ) ; } }
org . junit . Assert . assertTrue ( expected . getMessage ( ) . contains ( IDENT_0 ) ) 