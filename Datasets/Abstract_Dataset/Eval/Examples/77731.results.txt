METHOD_0 ( ) { java . util . Properties properties = new java . util . Properties ( ) ; java . lang . Integer [ ] IDENT_0 = new java . lang . Integer [ ] { INT_0 , INT_1 , INT_2 , INT_3 , INT_4 } ; properties . setProperty ( IDENT_1 . IDENT_2 , com . google . common . base . IDENT_3 . METHOD_1 ( STRING_0 ) . join ( IDENT_0 ) ) ; com . google . api . IDENT_4 . common . lib . testing . IDENT_1 IDENT_5 = new com . google . api . IDENT_4 . common . lib . testing . METHOD_2 ( properties ) ; for ( java . lang . Integer IDENT_6 : IDENT_0 ) { java . lang . Integer IDENT_7 = IDENT_5 . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } IDENT_8 . expect ( java . util . IDENT_9 . class ) ; IDENT_5 . METHOD_3 ( ) ; } METHOD_3 ( ) { if ( ( IDENT_10 ) == null ) { return org . openqa . selenium . net . IDENT_11 . METHOD_4 ( ) ; } else if ( IDENT_10 . isEmpty ( ) ) { throw new java . util . METHOD_5 ( STRING_1 ) ; } return IDENT_10 . METHOD_6 ( ) ; }
org . junit . Assert . assertEquals ( IDENT_6 , IDENT_7 ) 