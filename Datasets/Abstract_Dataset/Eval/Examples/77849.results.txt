METHOD_0 ( ) { @ com . google . IDENT_0 . value . IDENT_1 . IDENT_2 class IDENT_3 { } com . google . IDENT_0 . value . IDENT_1 . IDENT_2 expected = IDENT_3 . class . METHOD_1 ( com . google . IDENT_0 . value . IDENT_1 . IDENT_2 . class ) ; com . google . IDENT_0 . value . IDENT_1 . IDENT_2 actual = com . google . IDENT_0 . value . IDENT_1 . METHOD_2 ( ) ; java . lang . StringBuilder IDENT_4 = new java . lang . StringBuilder ( ) ; for ( java . lang . reflect . Method IDENT_5 : com . google . IDENT_0 . value . IDENT_1 . IDENT_2 . class . METHOD_3 ( ) ) { java . lang . String name = IDENT_5 . getName ( ) ; java . lang . Object IDENT_6 = IDENT_5 . invoke ( expected ) ; java . lang . Object IDENT_7 = IDENT_5 . invoke ( actual ) ; if ( ! ( com . google . IDENT_0 . value . IDENT_1 . equal ( IDENT_6 , IDENT_7 ) ) ) { IDENT_4 . append ( STRING_0 ) . append ( name ) . append ( STRING_1 ) . append ( com . google . IDENT_0 . value . IDENT_1 . string ( IDENT_6 ) ) . append ( STRING_2 ) . append ( com . google . IDENT_0 . value . IDENT_1 . string ( IDENT_7 ) ) . append ( STRING_3 ) ; } } java . lang . String IDENT_8 = IDENT_4 . toString ( ) ; "<AssertPlaceHolder>" ; new com . google . common . testing . METHOD_4 ( ) . METHOD_5 ( expected , actual ) . METHOD_6 ( ) ; } toString ( ) { return ( value ) + STRING_4 ; }
org . junit . Assert . assertTrue ( IDENT_8 , IDENT_8 . isEmpty ( ) ) 