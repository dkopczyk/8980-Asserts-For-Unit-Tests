METHOD_0 ( ) { com . google . IDENT_0 . tools . IDENT_1 . IDENT_2 params = new com . google . IDENT_0 . tools . IDENT_1 . IDENT_2 . Builder ( ) . METHOD_1 ( FLOAT_0 ) . build ( ) ; long IDENT_3 = params . METHOD_2 ( ) ; double IDENT_4 = params . METHOD_3 ( ) ; long max = params . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; com . google . IDENT_0 . tools . IDENT_1 . IDENT_5 . METHOD_5 ( params , 0 , IDENT_3 ) ; com . google . IDENT_0 . tools . IDENT_1 . IDENT_5 . METHOD_5 ( params , 1 , IDENT_3 ) ; for ( int i = 2 ; i < 5 ; i ++ ) { com . google . IDENT_0 . tools . IDENT_1 . IDENT_5 . METHOD_5 ( params , i , ( IDENT_3 * ( java . lang . Math . METHOD_6 ( IDENT_4 , ( i - 1 ) ) ) ) ) ; } for ( int i = 5 ; i < 100 ; i += 10 ) { com . google . IDENT_0 . tools . IDENT_1 . IDENT_5 . METHOD_5 ( params , i , max ) ; } com . google . IDENT_0 . tools . IDENT_1 . IDENT_5 . METHOD_5 ( params , Integer . MAX_VALUE , max ) ; params = new com . google . IDENT_0 . tools . IDENT_1 . IDENT_2 . Builder ( ) . METHOD_1 ( Double . MAX_VALUE ) . build ( ) ; com . google . IDENT_0 . tools . IDENT_1 . IDENT_5 . METHOD_5 ( params , Integer . MAX_VALUE , max ) ; } METHOD_7 ( ) { com . google . IDENT_0 . tools . IDENT_1 . IDENT_6 . Context context = com . google . IDENT_0 . tools . IDENT_1 . IDENT_6 . METHOD_8 ( ) ; if ( context == null ) { return METHOD_2 ( ) ; } int IDENT_7 = context . METHOD_9 ( ) ; return com . google . IDENT_0 . tools . IDENT_1 . IDENT_2 . METHOD_10 ( IDENT_8 , METHOD_1 , IDENT_9 , IDENT_7 ) ; }
org . junit . Assert . assertEquals ( IDENT_3 , params . METHOD_7 ( ) ) 