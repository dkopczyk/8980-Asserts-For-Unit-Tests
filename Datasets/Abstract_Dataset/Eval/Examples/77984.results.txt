METHOD_0 ( ) { java . util . List < java . nio . file . Path > IDENT_0 = com . google . common . collect . ImmutableList . of ( com . google . cloud . tools . maven . run . IDENT_1 . IDENT_2 ) ; when ( IDENT_3 . METHOD_1 ( ) ) . thenReturn ( IDENT_0 ) ; java . util . List < java . nio . file . Path > IDENT_4 = IDENT_5 . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { java . nio . file . Path IDENT_6 = METHOD_3 ( ) ; java . util . List < java . nio . file . Path > services = IDENT_3 . METHOD_1 ( ) ; if ( ( services == null ) || ( services . isEmpty ( ) ) ) { return java . util . Collections . singletonList ( IDENT_6 ) ; } for ( java . nio . file . Path service : services ) { if ( ! ( java . nio . file . IDENT_7 . exists ( service . resolve ( STRING_0 ) . resolve ( STRING_1 ) ) ) ) { throw new org . apache . maven . plugin . METHOD_4 ( com . google . cloud . tools . maven . run . IDENT_8 . IDENT_9 ) ; } } return services ; }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_4 ) 