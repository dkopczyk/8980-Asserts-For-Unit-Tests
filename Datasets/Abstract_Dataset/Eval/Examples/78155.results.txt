METHOD_0 ( ) { java . io . File IDENT_0 = IDENT_1 . METHOD_1 ( ) ; java . io . File IDENT_2 = IDENT_1 . METHOD_1 ( ) ; org . eclipse . IDENT_3 . core . IDENT_4 entry = org . eclipse . IDENT_3 . core . IDENT_5 . METHOD_2 ( new org . eclipse . core . runtime . Path ( IDENT_0 . getAbsolutePath ( ) ) , new org . eclipse . core . runtime . Path ( IDENT_2 . getAbsolutePath ( ) ) , null ) ; org . eclipse . IDENT_3 . core . IDENT_4 [ ] IDENT_6 = new org . eclipse . IDENT_3 . core . IDENT_4 [ ] { entry } ; com . google . cloud . tools . eclipse . IDENT_7 . IDENT_8 . IDENT_9 container = mock ( com . google . cloud . tools . eclipse . IDENT_7 . IDENT_8 . IDENT_9 . class ) ; when ( container . METHOD_3 ( ) ) . thenReturn ( IDENT_6 ) ; when ( serializer . METHOD_4 ( any ( org . eclipse . IDENT_3 . core . IDENT_10 . class ) , any ( org . eclipse . core . runtime . IDENT_11 . class ) ) ) . thenReturn ( container ) ; com . google . cloud . tools . eclipse . IDENT_7 . IDENT_8 . IDENT_12 IDENT_13 = new com . google . cloud . tools . eclipse . IDENT_7 . IDENT_8 . METHOD_5 ( com . google . cloud . tools . eclipse . IDENT_7 . IDENT_8 . IDENT_14 . IDENT_15 , serializer , IDENT_16 ) ; IDENT_13 . METHOD_6 ( new org . eclipse . core . runtime . Path ( com . google . cloud . tools . eclipse . IDENT_7 . IDENT_8 . IDENT_14 . IDENT_17 ) , IDENT_18 . METHOD_7 ( ) ) ; IDENT_18 . METHOD_7 ( ) . METHOD_8 ( ) ; org . eclipse . IDENT_3 . core . IDENT_4 [ ] IDENT_19 = IDENT_18 . METHOD_7 ( ) . METHOD_9 ( false ) ; for ( org . eclipse . IDENT_3 . core . IDENT_4 IDENT_20 : IDENT_19 ) { if ( IDENT_20 . getPath ( ) . METHOD_10 ( ) . equals ( IDENT_0 . getAbsolutePath ( ) ) ) { "<AssertPlaceHolder>" ; METHOD_11 ( ) ; return ; } } org . junit . Assert . fail ( STRING_0 ) ; } METHOD_12 ( ) { return new org . eclipse . core . runtime . Path ( IDENT_21 ) ; }
org . junit . Assert . assertThat ( IDENT_20 . METHOD_12 ( ) . METHOD_10 ( ) , org . hamcrest . Matchers . is ( IDENT_2 . getAbsolutePath ( ) ) ) 