METHOD_0 ( ) { java . util . List < org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 > IDENT_4 = java . util . Arrays . asList ( new org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 [ ] { new org . apache . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( STRING_0 , org . apache . commons . lang3 . tuple . IDENT_5 . of ( 1.0 , 1.0 ) , STRING_1 , STRING_2 , FLOAT_0 , 100 ) , new org . apache . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( STRING_3 , org . apache . commons . lang3 . tuple . IDENT_5 . of ( 2.0 , 2.0 ) , STRING_1 , STRING_4 , FLOAT_1 , 200 ) , new org . apache . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( STRING_5 , org . apache . commons . lang3 . tuple . IDENT_5 . of ( FLOAT_2 , FLOAT_2 ) , STRING_1 , STRING_6 , FLOAT_3 , INT_0 ) } ) ; java . util . List < org . apache . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_7 . IDENT_8 > IDENT_9 = new java . util . ArrayList < org . apache . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_7 . IDENT_8 > ( ) ; for ( int i = 0 ; i < ( IDENT_4 . size ( ) ) ; i ++ ) { org . apache . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_7 . IDENT_8 store = new org . apache . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_7 . METHOD_2 ( i , ( STRING_7 + i ) , IDENT_4 . get ( i ) ) ; IDENT_9 . add ( store ) ; } org . apache . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_10 . IDENT_11 . IDENT_12 IDENT_13 = new org . apache . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_10 . IDENT_11 . METHOD_3 ( IDENT_4 , IDENT_9 . get ( 0 ) , org . apache . IDENT_0 . IDENT_1 . IDENT_6 . Constants . IDENT_14 ) ; double IDENT_15 = IDENT_13 . METHOD_4 ( IDENT_4 . get ( 0 ) ) ; "<AssertPlaceHolder>" ; } get ( java . net . URI ) { org . apache . http . client . methods . IDENT_16 IDENT_17 = new org . apache . http . client . methods . METHOD_5 ( uri ) ; org . apache . http . client . IDENT_18 IDENT_19 = org . apache . http . impl . client . IDENT_20 . METHOD_6 ( ) ; try { org . apache . http . IDENT_21 response = IDENT_19 . execute ( IDENT_17 ) ; if ( ( response . METHOD_7 ( ) . getStatusCode ( ) ) != 200 ) System . err . println ( ( STRING_8 + ( response . METHOD_7 ( ) . getStatusCode ( ) ) ) ) ; return response ; } catch ( java . lang . Throwable t ) { System . out . println ( STRING_9 ) ; java . lang . Thread . sleep ( INT_1 ) ; } System . err . println ( ( STRING_10 + ( uri . METHOD_8 ( ) ) ) ) ; return null ; }
org . junit . Assert . assertTrue ( ( IDENT_15 > 0.0 ) ) 