METHOD_0 ( ) { com . google . cloud . compute . IDENT_0 . IDENT_1 IDENT_2 = com . google . cloud . compute . IDENT_0 . IDENT_1 . of ( com . google . cloud . compute . IDENT_0 . IDENT_3 . IDENT_4 ) ; org . easymock . EasyMock . expect ( IDENT_5 . METHOD_1 ( com . google . cloud . compute . IDENT_0 . IDENT_3 . IDENT_6 . METHOD_2 ( ) , com . google . cloud . compute . IDENT_0 . IDENT_3 . IDENT_6 . getInstance ( ) , IDENT_2 . METHOD_3 ( ) , com . google . cloud . compute . IDENT_0 . IDENT_3 . IDENT_7 ) ) . andReturn ( null ) ; org . easymock . EasyMock . replay ( IDENT_5 ) ; compute = options . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( com . google . cloud . compute . IDENT_0 . IDENT_1 . IDENT_8 , com . google . cloud . compute . IDENT_0 . IDENT_9 . IDENT_10 [ ] ) { return compute . METHOD_1 ( METHOD_5 ( ) , configuration , options ) ; }
org . junit . Assert . assertNull ( compute . METHOD_1 ( com . google . cloud . compute . IDENT_0 . IDENT_3 . IDENT_6 , com . google . cloud . compute . IDENT_0 . IDENT_3 . IDENT_4 ) ) 