METHOD_0 ( ) { org . easymock . EasyMock . expect ( IDENT_0 . METHOD_1 ( com . google . cloud . compute . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_2 ( ) , com . google . cloud . compute . IDENT_1 . IDENT_2 . IDENT_3 . getInstance ( ) , STRING_0 , STRING_1 , com . google . cloud . compute . IDENT_1 . IDENT_2 . IDENT_4 ) ) . andReturn ( IDENT_5 . METHOD_3 ( ) ) ; org . easymock . EasyMock . replay ( IDENT_0 ) ; compute = options . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String , com . google . cloud . compute . IDENT_1 . IDENT_6 . IDENT_7 [ ] ) { return compute . METHOD_1 ( METHOD_5 ( ) , IDENT_8 , IDENT_9 , options ) ; }
org . junit . Assert . assertEquals ( IDENT_5 , compute . METHOD_1 ( com . google . cloud . compute . IDENT_1 . IDENT_2 . IDENT_3 , STRING_0 , STRING_1 ) ) 