METHOD_0 ( ) { java . util . List < com . google . datastore . v1 . IDENT_0 > IDENT_1 = new java . util . METHOD_1 ( ) ; IDENT_1 . add ( com . google . cloud . datastore . com . google . datastore . v1 . IDENT_0 . METHOD_2 ( ) . METHOD_3 ( com . google . cloud . datastore . IDENT_2 . IDENT_3 . METHOD_4 ( ) ) . build ( ) ) ; IDENT_1 . add ( com . google . cloud . datastore . com . google . datastore . v1 . IDENT_0 . METHOD_2 ( ) . METHOD_5 ( com . google . cloud . datastore . IDENT_2 . IDENT_4 . METHOD_4 ( ) ) . build ( ) ) ; IDENT_5 . add ( com . google . cloud . datastore . IDENT_2 . IDENT_6 ) ; IDENT_5 . METHOD_6 ( com . google . cloud . datastore . IDENT_2 . IDENT_3 ) ; IDENT_5 . delete ( com . google . cloud . datastore . IDENT_2 . IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ) { java . util . List < com . google . datastore . v1 . IDENT_0 > IDENT_7 = new java . util . ArrayList ( ) ; for ( com . google . cloud . datastore . IDENT_8 < com . google . cloud . datastore . IDENT_9 > entity : METHOD_8 ( ) ) { IDENT_7 . add ( com . google . cloud . datastore . com . google . datastore . v1 . IDENT_0 . METHOD_2 ( ) . METHOD_3 ( entity . METHOD_4 ( ) ) . build ( ) ) ; } for ( com . google . cloud . datastore . IDENT_8 < com . google . cloud . datastore . IDENT_10 > entity : METHOD_9 ( ) . values ( ) ) { IDENT_7 . add ( com . google . cloud . datastore . com . google . datastore . v1 . IDENT_0 . METHOD_2 ( ) . METHOD_3 ( entity . METHOD_4 ( ) ) . build ( ) ) ; } for ( com . google . cloud . datastore . IDENT_8 < com . google . cloud . datastore . IDENT_10 > entity : METHOD_10 ( ) . values ( ) ) { IDENT_7 . add ( com . google . cloud . datastore . com . google . datastore . v1 . IDENT_0 . METHOD_2 ( ) . METHOD_11 ( entity . METHOD_4 ( ) ) . build ( ) ) ; } for ( com . google . cloud . datastore . IDENT_8 < com . google . cloud . datastore . IDENT_10 > entity : METHOD_12 ( ) . values ( ) ) { IDENT_7 . add ( com . google . cloud . datastore . com . google . datastore . v1 . IDENT_0 . METHOD_2 ( ) . METHOD_13 ( entity . METHOD_4 ( ) ) . build ( ) ) ; } for ( com . google . cloud . datastore . IDENT_10 key : METHOD_14 ( ) ) { IDENT_7 . add ( com . google . cloud . datastore . com . google . datastore . v1 . IDENT_0 . METHOD_2 ( ) . METHOD_5 ( key . METHOD_4 ( ) ) . build ( ) ) ; } return IDENT_7 ; }
org . junit . Assert . assertEquals ( IDENT_1 , IDENT_5 . METHOD_7 ( ) ) 