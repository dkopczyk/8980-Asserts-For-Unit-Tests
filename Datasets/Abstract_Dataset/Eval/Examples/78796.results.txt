METHOD_0 ( ) { org . easymock . EasyMock . expect ( IDENT_0 . METHOD_1 ( com . google . cloud . storage . IDENT_1 . IDENT_2 ) ) . andReturn ( com . google . common . collect . ImmutableList . of ( com . google . cloud . storage . IDENT_1 . IDENT_3 . METHOD_2 ( ) , com . google . cloud . storage . IDENT_1 . IDENT_4 . METHOD_2 ( ) ) ) ; org . easymock . EasyMock . replay ( IDENT_0 ) ; METHOD_3 ( ) ; java . util . List < com . google . cloud . storage . IDENT_5 > IDENT_6 = storage . METHOD_1 ( com . google . cloud . storage . IDENT_1 . IDENT_2 ) ; "<AssertPlaceHolder>" ; } of ( java . lang . String , java . lang . String ) { return com . google . cloud . IDENT_7 . common . IDENT_8 . METHOD_4 ( ) . METHOD_5 ( user ) . METHOD_6 ( IDENT_9 ) . build ( ) ; }
org . junit . Assert . assertEquals ( com . google . common . collect . ImmutableList . of ( com . google . cloud . storage . IDENT_1 . IDENT_3 , com . google . cloud . storage . IDENT_1 . IDENT_4 ) , IDENT_6 ) 