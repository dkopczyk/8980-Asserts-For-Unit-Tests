METHOD_0 ( ) { for ( int i = 0 ; i < INT_0 ; i ++ ) { java . time . IDENT_0 IDENT_1 = java . time . IDENT_0 . METHOD_1 ( ( ( ( i * INT_1 ) * INT_2 ) * INT_2 ) ) ; java . time . IDENT_0 IDENT_2 = java . time . IDENT_0 . of ( i , 0 ) ; "<AssertPlaceHolder>" ; } } of ( int , int ) { java . time . IDENT_3 . METHOD_2 ( IDENT_4 ) ; if ( IDENT_5 == 0 ) { return java . time . IDENT_0 . IDENT_6 [ IDENT_4 ] ; } java . time . IDENT_7 . METHOD_2 ( IDENT_5 ) ; return new java . time . METHOD_3 ( IDENT_4 , IDENT_5 , 0 , 0 ) ; }
org . junit . Assert . assertSame ( IDENT_1 , IDENT_2 ) 