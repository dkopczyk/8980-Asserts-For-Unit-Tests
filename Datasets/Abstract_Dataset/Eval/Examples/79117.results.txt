METHOD_0 ( java . time . format . IDENT_0 , java . lang . String , java . time . IDENT_1 ) { java . time . IDENT_2 . IDENT_3 actual = IDENT_4 . parse ( text ) ; "<AssertPlaceHolder>" ; } from ( java . time . IDENT_2 . IDENT_3 ) { if ( IDENT_2 instanceof java . time . IDENT_1 ) { return ( ( java . time . IDENT_1 ) ( IDENT_2 ) ) ; } java . util . IDENT_5 . METHOD_1 ( IDENT_2 , STRING_0 ) ; try { long IDENT_6 = IDENT_2 . METHOD_2 ( java . time . IDENT_7 ) ; int IDENT_8 = IDENT_2 . get ( java . time . IDENT_9 ) ; return java . time . IDENT_1 . METHOD_3 ( IDENT_6 , IDENT_8 ) ; } catch ( java . time . IDENT_10 ex ) { throw new java . time . METHOD_4 ( ( ( ( STRING_1 + IDENT_2 ) + STRING_2 ) + ( IDENT_2 . getClass ( ) . getName ( ) ) ) , ex ) ; } }
org . junit . Assert . assertEquals ( java . time . IDENT_1 . from ( actual ) , expected ) 