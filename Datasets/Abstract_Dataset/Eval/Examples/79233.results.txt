METHOD_0 ( ) { java . lang . String IDENT_0 = this . METHOD_1 ( ) ; IDENT_1 result = this . IDENT_2 . METHOD_2 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { com . google . api . services . IDENT_3 . v4 . IDENT_4 service = this . service ; java . util . List < IDENT_5 > IDENT_6 = new java . util . ArrayList ( ) ; IDENT_6 . add ( new METHOD_3 ( ) . METHOD_4 ( new METHOD_5 ( ) ) ) ; IDENT_6 . add ( new METHOD_3 ( ) . METHOD_4 ( new METHOD_5 ( ) ) ) ; IDENT_7 IDENT_8 = new METHOD_6 ( ) . METHOD_7 ( IDENT_6 ) ; IDENT_1 IDENT_9 = service . METHOD_8 ( ) . METHOD_9 ( IDENT_0 , IDENT_8 ) . execute ( ) ; int IDENT_10 = IDENT_9 . METHOD_10 ( ) . get ( 0 ) . METHOD_11 ( ) . METHOD_12 ( ) . METHOD_13 ( ) ; int IDENT_11 = IDENT_9 . METHOD_10 ( ) . get ( 1 ) . METHOD_11 ( ) . METHOD_12 ( ) . METHOD_13 ( ) ; IDENT_12 IDENT_13 = new METHOD_14 ( ) . METHOD_15 ( new METHOD_16 ( ) . METHOD_17 ( IDENT_10 ) . METHOD_18 ( 0 ) . METHOD_19 ( 0 ) . METHOD_20 ( 20 ) . METHOD_21 ( 7 ) ) . METHOD_22 ( java . util . Collections . singletonList ( new METHOD_23 ( ) . METHOD_24 ( 1 ) . METHOD_25 ( true ) . METHOD_26 ( STRING_0 ) ) ) . METHOD_27 ( java . util . Collections . singletonList ( new METHOD_23 ( ) . METHOD_24 ( 4 ) . METHOD_25 ( true ) . METHOD_26 ( STRING_0 ) ) ) . METHOD_28 ( java . util . Collections . singletonList ( new METHOD_29 ( ) . METHOD_30 ( STRING_1 ) . METHOD_24 ( 4 ) ) ) ; java . util . List < METHOD_3 > IDENT_14 = com . google . common . collect . Lists . newArrayList ( ) ; METHOD_3 IDENT_15 = new METHOD_3 ( ) . METHOD_31 ( new METHOD_32 ( ) . METHOD_33 ( STRING_2 ) . METHOD_22 ( java . util . Collections . singletonList ( new METHOD_34 ( ) . METHOD_28 ( java . util . Collections . singletonList ( new METHOD_35 ( ) . METHOD_36 ( IDENT_13 ) ) ) ) ) . METHOD_37 ( new METHOD_38 ( ) . METHOD_17 ( IDENT_11 ) . METHOD_39 ( 0 ) . METHOD_40 ( 0 ) ) ) ; IDENT_14 . add ( IDENT_15 ) ; METHOD_6 IDENT_16 = new METHOD_6 ( ) . METHOD_7 ( IDENT_14 ) ; IDENT_1 result = service . METHOD_8 ( ) . METHOD_9 ( IDENT_0 , IDENT_16 ) . execute ( ) ; return result ; }
org . junit . Assert . assertNotNull ( result ) 