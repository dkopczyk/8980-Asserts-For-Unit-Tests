METHOD_0 ( ) { byte [ ] IDENT_0 = com . google . crypto . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( com . google . crypto . IDENT_1 . IDENT_4 . IDENT_5 . IDENT_6 ) ; byte [ ] IDENT_7 = com . google . crypto . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( com . google . crypto . IDENT_1 . IDENT_4 . IDENT_5 . IDENT_8 ) ; int IDENT_9 = 12 ; int IDENT_10 = 16 ; com . google . crypto . IDENT_1 . IDENT_11 IDENT_12 = com . google . crypto . IDENT_1 . IDENT_13 . METHOD_2 ( com . google . crypto . IDENT_1 . IDENT_13 . METHOD_3 ( com . google . crypto . IDENT_1 . IDENT_13 . METHOD_4 ( com . google . crypto . IDENT_1 . IDENT_13 . METHOD_5 ( IDENT_0 , IDENT_9 , IDENT_7 , IDENT_10 ) , INT_0 , IDENT_14 . IDENT_15 , IDENT_16 . IDENT_17 ) ) ) ; com . google . crypto . IDENT_1 . IDENT_18 IDENT_4 = IDENT_12 . METHOD_6 ( com . google . crypto . IDENT_1 . IDENT_18 . class ) ; byte [ ] IDENT_19 = com . google . crypto . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( 20 ) ; byte [ ] IDENT_20 = com . google . crypto . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( 20 ) ; byte [ ] IDENT_21 = IDENT_4 . METHOD_7 ( IDENT_19 , IDENT_20 ) ; byte [ ] IDENT_22 = IDENT_4 . METHOD_8 ( IDENT_21 , IDENT_20 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( byte [ ] , byte [ ] ) { try { java . nio . ByteBuffer buffer = java . nio . ByteBuffer . METHOD_9 ( IDENT_21 ) ; int IDENT_23 = buffer . METHOD_10 ( ) ; if ( ( IDENT_23 <= 0 ) || ( IDENT_23 > ( ( IDENT_21 . length ) - ( com . google . crypto . IDENT_1 . IDENT_4 . IDENT_24 . IDENT_25 ) ) ) ) { throw new java . security . METHOD_11 ( STRING_0 ) ; } byte [ ] IDENT_26 = new byte [ IDENT_23 ] ; buffer . get ( IDENT_26 , 0 , IDENT_23 ) ; byte [ ] payload = new byte [ buffer . METHOD_12 ( ) ] ; buffer . get ( payload , 0 , buffer . METHOD_12 ( ) ) ; byte [ ] IDENT_27 = remote . METHOD_8 ( IDENT_26 , com . google . crypto . IDENT_1 . IDENT_4 . IDENT_24 . IDENT_28 ) ; com . google . crypto . IDENT_1 . IDENT_18 IDENT_4 = com . google . crypto . IDENT_1 . IDENT_29 . METHOD_6 ( IDENT_30 . METHOD_13 ( ) , IDENT_27 , com . google . crypto . IDENT_1 . IDENT_18 . class ) ; return IDENT_4 . METHOD_8 ( payload , IDENT_20 ) ; } catch ( java . lang . IDENT_31 | java . nio . IDENT_32 | java . lang . IDENT_33 e ) { throw new java . security . METHOD_11 ( STRING_0 , e ) ; } }
org . junit . Assert . assertArrayEquals ( IDENT_19 , IDENT_22 ) 