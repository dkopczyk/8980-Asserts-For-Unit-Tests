METHOD_0 ( ) { java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 , STRING_3 , STRING_4 } ; java . lang . String [ ] IDENT_1 = new java . lang . String [ ] { STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 } ; byte [ ] r ; for ( int i = 0 ; i < ( IDENT_0 . length ) ; i ++ ) { r = com . google . crypto . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( com . google . crypto . IDENT_2 . IDENT_3 . IDENT_5 . decode ( IDENT_0 [ i ] ) ) ; "<AssertPlaceHolder>" ; } } encode ( byte [ ] ) { java . lang . String IDENT_6 = STRING_10 ; java . lang . StringBuilder result = new java . lang . StringBuilder ( ( 2 * ( bytes . length ) ) ) ; for ( byte b : bytes ) { int val = b & 255 ; result . append ( IDENT_6 . charAt ( ( val / 16 ) ) ) ; result . append ( IDENT_6 . charAt ( ( val OP_0 16 ) ) ) ; } return result . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_1 [ i ] , com . google . crypto . IDENT_2 . IDENT_3 . IDENT_5 . encode ( r ) ) 