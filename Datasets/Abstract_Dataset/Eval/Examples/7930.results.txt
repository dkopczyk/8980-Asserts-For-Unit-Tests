METHOD_0 ( ) { java . util . List < java . lang . String > IDENT_0 = com . google . common . collect . Lists . newArrayList ( STRING_0 , STRING_1 , STRING_2 ) ; java . util . List < java . lang . Integer > IDENT_1 = com . google . common . collect . Lists . newArrayList ( INT_0 , INT_1 , INT_2 ) ; java . util . List < org . apache . IDENT_2 . stream . IDENT_3 . common . IDENT_4 > IDENT_5 = java . util . stream . IDENT_6 . range ( 0 , IDENT_0 . size ( ) ) . METHOD_1 ( ( i ) -> METHOD_2 ( IDENT_0 . get ( i ) , IDENT_1 . get ( i ) ) ) . collect ( java . util . stream . IDENT_7 . toList ( ) ) ; java . lang . String IDENT_8 = org . apache . commons . lang . StringUtils . join ( java . util . stream . IDENT_6 . range ( 0 , IDENT_0 . size ( ) ) . METHOD_1 ( ( i ) -> ( ( IDENT_0 . get ( i ) ) + STRING_3 ) + ( IDENT_1 . get ( i ) ) ) . collect ( java . util . stream . IDENT_7 . toList ( ) ) , STRING_4 ) ; java . util . List < org . apache . IDENT_2 . stream . IDENT_3 . common . IDENT_4 > IDENT_9 = org . apache . IDENT_2 . IDENT_10 . utils . IDENT_11 . METHOD_3 ( IDENT_8 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String ) { java . lang . String [ ] IDENT_12 = org . apache . commons . lang . StringUtils . split ( IDENT_8 , STRING_4 ) ; METHOD_4 ( ( ( IDENT_12 . length ) > 0 ) , STRING_5 , IDENT_8 ) ; java . util . List < org . apache . IDENT_2 . stream . IDENT_3 . common . IDENT_4 > IDENT_5 = com . google . common . collect . Lists . METHOD_5 ( IDENT_12 . length ) ; for ( java . lang . String IDENT_13 : IDENT_12 ) { IDENT_5 . add ( org . apache . IDENT_2 . IDENT_10 . utils . IDENT_11 . METHOD_6 ( IDENT_13 ) ) ; } return IDENT_5 ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_9 ) 