METHOD_0 ( ) { METHOD_1 ( IDENT_0 , IDENT_1 , IDENT_2 ) ; METHOD_2 ( STRING_0 , org . IDENT_3 . test . IDENT_4 . IDENT_5 ) ; int n = 10 ; float [ ] IDENT_6 = new float [ n ] ; float [ ] IDENT_7 = new float [ n ] ; float [ ] IDENT_8 = new float [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { IDENT_6 [ i ] = i ; IDENT_7 [ i ] = i ; } org . IDENT_3 . test . IDENT_9 IDENT_10 = METHOD_3 ( context , ( ( IDENT_11 ) | ( IDENT_12 ) ) , ( ( IDENT_13 . IDENT_14 ) * n ) , org . IDENT_3 . test . IDENT_15 . to ( IDENT_6 ) , null ) ; org . IDENT_3 . test . IDENT_9 IDENT_16 = METHOD_3 ( context , ( ( IDENT_11 ) | ( IDENT_12 ) ) , ( ( IDENT_13 . IDENT_14 ) * n ) , org . IDENT_3 . test . IDENT_15 . to ( IDENT_7 ) , null ) ; org . IDENT_3 . test . IDENT_9 IDENT_17 = METHOD_3 ( context , org . IDENT_3 . test . IDENT_18 , ( ( IDENT_13 . IDENT_14 ) * n ) , null , null ) ; int a = 0 ; METHOD_4 ( kernel , ( a ++ ) , IDENT_13 . IDENT_9 , org . IDENT_3 . test . IDENT_15 . to ( IDENT_10 ) ) ; METHOD_4 ( kernel , ( a ++ ) , IDENT_13 . IDENT_9 , org . IDENT_3 . test . IDENT_15 . to ( IDENT_16 ) ) ; METHOD_4 ( kernel , ( a ++ ) , IDENT_13 . IDENT_9 , org . IDENT_3 . test . IDENT_15 . to ( IDENT_17 ) ) ; METHOD_5 ( IDENT_19 , kernel , 1 , null , new long [ ] { n } , null , 0 , null , null ) ; METHOD_6 ( IDENT_19 , IDENT_17 , org . IDENT_3 . test . IDENT_20 , 0 , ( n * ( IDENT_13 . IDENT_14 ) ) , org . IDENT_3 . test . IDENT_15 . to ( IDENT_8 ) , 0 , null , null ) ; float [ ] expected = new float [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { expected [ i ] = ( IDENT_6 [ i ] ) + ( IDENT_7 [ i ] ) ; } boolean IDENT_21 = org . IDENT_3 . test . IDENT_4 . METHOD_7 ( expected , IDENT_8 ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( ) { if ( ( IDENT_19 ) != null ) { org . IDENT_3 . IDENT_22 . METHOD_10 ( IDENT_19 ) ; } }
org . junit . Assert . assertTrue ( IDENT_21 ) 