METHOD_0 ( ) { IDENT_0 . core . IDENT_1 . IDENT_2 IDENT_3 = IDENT_0 . core . IDENT_1 . IDENT_2 . of ( STRING_0 ) ; IDENT_0 . core . IDENT_1 . type . IDENT_4 IDENT_5 = mock ( IDENT_0 . core . IDENT_1 . type . IDENT_4 . class ) ; when ( IDENT_5 . METHOD_1 ( ) ) . thenReturn ( IDENT_3 ) ; when ( tx . METHOD_2 ( IDENT_3 ) ) . thenReturn ( IDENT_5 ) ; IDENT_0 . core . IDENT_6 . IDENT_7 . IDENT_8 IDENT_9 = IDENT_0 . core . IDENT_6 . IDENT_7 . IDENT_10 . IDENT_11 . METHOD_1 ( null , d , com . google . common . collect . IDENT_12 . of ( IDENT_3 ) ) ; java . util . Collection < IDENT_0 . core . IDENT_6 . IDENT_7 . IDENT_8 > IDENT_13 = com . google . common . collect . IDENT_14 . METHOD_3 ( IDENT_0 . core . IDENT_6 . IDENT_7 . IDENT_10 . IDENT_11 . METHOD_4 ( null , a , b , c , d ) , IDENT_9 ) ; IDENT_15 . IDENT_16 . apply ( IDENT_13 , tx ) ; java . util . HashSet < IDENT_0 . core . IDENT_6 . IDENT_7 . IDENT_8 > expected = com . google . common . collect . IDENT_14 . METHOD_3 ( IDENT_0 . core . IDENT_6 . IDENT_7 . IDENT_10 . IDENT_15 . of ( null , a , b , c , null , null , null ) , IDENT_9 ) ; "<AssertPlaceHolder>" ; } of ( IDENT_6 . lang . property . IDENT_17 , IDENT_6 . lang . statement . IDENT_18 , IDENT_6 . lang . statement . IDENT_18 , IDENT_6 . lang . statement . IDENT_18 , IDENT_6 . lang . statement . IDENT_18 , com . google . common . collect . IDENT_12 , com . google . common . collect . IDENT_12 ) { return new IDENT_0 . core . IDENT_6 . IDENT_7 . IDENT_10 . METHOD_5 ( IDENT_19 , IDENT_20 , IDENT_21 , METHOD_4 , IDENT_3 , IDENT_22 , IDENT_23 ) ; }
org . junit . Assert . assertEquals ( expected , IDENT_13 ) 