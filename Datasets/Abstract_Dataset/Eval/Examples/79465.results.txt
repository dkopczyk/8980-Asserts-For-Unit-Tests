METHOD_0 ( ) { java . util . List < IDENT_0 . core . IDENT_1 . type . IDENT_2 > IDENT_3 ; java . util . List < IDENT_0 . core . IDENT_1 . type . IDENT_2 > IDENT_4 ; try ( IDENT_0 . core . server . session . IDENT_5 tx = session . transaction ( ) . write ( ) ) { IDENT_0 . core . IDENT_1 . type . IDENT_6 p = tx . METHOD_1 ( STRING_0 ) ; IDENT_0 . core . IDENT_1 . type . IDENT_6 q = tx . METHOD_1 ( STRING_1 ) ; IDENT_0 . core . IDENT_1 . type . IDENT_6 r = tx . METHOD_1 ( STRING_2 ) ; IDENT_0 . core . IDENT_1 . type . IDENT_6 s = tx . METHOD_1 ( STRING_3 4 ) ; IDENT_0 . core . IDENT_1 . type . IDENT_6 t = tx . METHOD_1 ( STRING_3 1 ) ; IDENT_0 . core . IDENT_1 . type . IDENT_6 IDENT_7 = tx . METHOD_1 ( STRING_3 6 ) ; IDENT_0 . core . IDENT_1 . type . IDENT_2 IDENT_8 = tx . METHOD_2 ( STRING_3 5 , IDENT_9 . lang . IDENT_10 . METHOD_3 ( STRING_3 0 ) , IDENT_9 . lang . IDENT_10 . METHOD_3 ( STRING_3 ) ) ; IDENT_0 . core . IDENT_1 . type . IDENT_2 IDENT_11 = tx . METHOD_2 ( STRING_4 , IDENT_9 . lang . IDENT_10 . METHOD_3 ( STRING_5 ) , IDENT_9 . lang . IDENT_10 . METHOD_3 ( STRING_3 ) ) ; IDENT_0 . core . IDENT_1 . type . IDENT_2 IDENT_12 = tx . METHOD_2 ( STRING_6 , IDENT_9 . lang . IDENT_10 . METHOD_3 ( STRING_3 3 ) , IDENT_9 . lang . IDENT_10 . METHOD_3 ( STRING_7 ) ) ; IDENT_0 . core . IDENT_1 . type . IDENT_2 IDENT_13 = tx . METHOD_2 ( STRING_8 , IDENT_9 . lang . IDENT_10 . METHOD_3 ( STRING_9 ) , IDENT_9 . lang . IDENT_10 . METHOD_3 ( STRING_3 2 ) ) ; IDENT_3 = com . google . common . collect . Lists . newArrayList ( IDENT_13 , IDENT_12 , IDENT_8 , IDENT_11 ) ; IDENT_4 = com . google . common . collect . Lists . newArrayList ( IDENT_13 , IDENT_12 , IDENT_11 , IDENT_8 ) ; tx . commit ( ) ; } try ( IDENT_0 . core . server . session . IDENT_5 tx = session . transaction ( ) . write ( ) ) { java . util . List < IDENT_0 . core . IDENT_1 . type . IDENT_2 > rules = IDENT_0 . core . IDENT_9 . IDENT_14 . rule . IDENT_15 . METHOD_4 ( tx . METHOD_5 ( ) . METHOD_6 ( ) . map ( ( rule ) -> new IDENT_0 . core . IDENT_9 . IDENT_14 . rule . METHOD_7 ( rule , tx ) ) . collect ( java . util . stream . IDENT_16 . METHOD_8 ( ) ) ) . map ( METHOD_7 :: IDENT_17 ) . collect ( java . util . stream . IDENT_16 . toList ( ) ) ; "<AssertPlaceHolder>" ; IDENT_3 . METHOD_9 ( IDENT_18 :: delete ) ; tx . commit ( ) ; } } equals ( java . lang . Object ) { if ( o == ( this ) ) return true ; if ( ( o == null ) || ( ( this . getClass ( ) ) != ( o . getClass ( ) ) ) ) return false ; IDENT_0 . core . IDENT_1 . IDENT_19 that = ( ( IDENT_0 . core . IDENT_1 . IDENT_19 ) ( o ) ) ; return this . value . equals ( that . getValue ( ) ) ; }
org . junit . Assert . assertTrue ( ( ( rules . equals ( IDENT_3 ) ) || ( rules . equals ( IDENT_4 ) ) ) ) 