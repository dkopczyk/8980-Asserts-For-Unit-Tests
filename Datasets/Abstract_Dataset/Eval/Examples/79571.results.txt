METHOD_0 ( ) { writer = new com . IDENT_0 . writer . neo4j . METHOD_1 ( METHOD_2 ( ) , 2 ) ; writer . start ( ) ; java . lang . IDENT_1 task = new java . lang . METHOD_3 ( ) { @ com . IDENT_0 . writer . neo4j . Override public void run ( ) { METHOD_2 ( ) . METHOD_4 ( ) ; } } ; for ( int i = 0 ; i < 10 ; i ++ ) { writer . write ( task ) ; } METHOD_5 ( ) ; try ( org . neo4j . IDENT_2 . IDENT_3 tx = METHOD_2 ( ) . METHOD_6 ( ) ) { "<AssertPlaceHolder>" ; tx . METHOD_7 ( ) ; } } METHOD_8 ( org . neo4j . IDENT_2 . IDENT_4 ) { return com . IDENT_0 . common . util . IDENT_5 . count ( database . METHOD_9 ( ) ) ; }
org . junit . Assert . assertTrue ( ( 10 > ( com . IDENT_0 . common . util . IDENT_5 . METHOD_8 ( METHOD_2 ( ) ) ) ) ) 