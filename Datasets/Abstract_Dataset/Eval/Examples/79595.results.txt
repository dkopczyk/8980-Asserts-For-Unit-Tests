METHOD_0 ( ) { java . util . Map < com . IDENT_0 . common . description . IDENT_1 . IDENT_2 , java . lang . Integer > IDENT_3 = new java . util . HashMap ( ) ; IDENT_3 . put ( METHOD_1 ( STRING_0 , com . IDENT_0 . module . IDENT_4 . IDENT_5 . IDENT_6 ) . with ( STRING_1 , equalTo ( STRING_2 ) ) . with ( STRING_3 , equalTo ( STRING_2 ) ) , 2 ) ; IDENT_3 . put ( METHOD_1 ( STRING_0 , com . IDENT_0 . module . IDENT_4 . IDENT_5 . IDENT_6 ) . with ( STRING_1 , equalTo ( STRING_4 ) ) . with ( STRING_3 , equalTo ( STRING_2 ) ) , 2 ) ; IDENT_3 . put ( METHOD_1 ( STRING_0 , com . IDENT_0 . module . IDENT_4 . IDENT_5 . IDENT_6 ) . with ( STRING_1 , equalTo ( STRING_5 ) ) . with ( STRING_3 , equalTo ( STRING_4 ) ) , 2 ) ; IDENT_3 . put ( METHOD_1 ( STRING_0 , com . IDENT_0 . module . IDENT_4 . IDENT_5 . IDENT_6 ) . with ( STRING_1 , equalTo ( STRING_6 ) ) . with ( STRING_3 , equalTo ( STRING_4 ) ) , 2 ) ; IDENT_3 . put ( METHOD_1 ( STRING_7 , com . IDENT_0 . module . IDENT_4 . IDENT_5 . IDENT_6 ) . with ( STRING_1 , equalTo ( STRING_2 ) ) . with ( STRING_3 , equalTo ( STRING_2 ) ) , 3 ) ; IDENT_3 . put ( METHOD_1 ( STRING_7 , com . IDENT_0 . module . IDENT_4 . IDENT_5 . IDENT_6 ) . with ( STRING_1 , equalTo ( STRING_4 ) ) . with ( STRING_3 , equalTo ( STRING_2 ) ) , 3 ) ; IDENT_3 . put ( METHOD_1 ( STRING_7 , com . IDENT_0 . module . IDENT_4 . IDENT_5 . IDENT_6 ) . with ( STRING_1 , equalTo ( STRING_5 ) ) . with ( STRING_3 , equalTo ( STRING_4 ) ) , 3 ) ; IDENT_3 . put ( METHOD_1 ( STRING_7 , com . IDENT_0 . module . IDENT_4 . IDENT_5 . IDENT_6 ) . with ( STRING_1 , equalTo ( STRING_6 ) ) . with ( STRING_3 , equalTo ( STRING_4 ) ) , 3 ) ; IDENT_3 . put ( METHOD_1 ( STRING_8 , com . IDENT_0 . module . IDENT_4 . IDENT_5 . IDENT_6 ) . with ( STRING_1 , equalTo ( STRING_2 ) ) . with ( STRING_3 , equalTo ( STRING_2 ) ) , 1 ) ; IDENT_3 . put ( METHOD_1 ( STRING_8 , com . IDENT_0 . module . IDENT_4 . IDENT_5 . IDENT_6 ) . with ( STRING_1 , equalTo ( STRING_4 ) ) . with ( STRING_3 , equalTo ( STRING_2 ) ) , 1 ) ; IDENT_3 . put ( METHOD_1 ( STRING_8 , com . IDENT_0 . module . IDENT_4 . IDENT_5 . IDENT_6 ) . with ( STRING_1 , equalTo ( STRING_5 ) ) . with ( STRING_3 , equalTo ( STRING_4 ) ) , 1 ) ; IDENT_3 . put ( METHOD_1 ( STRING_8 , com . IDENT_0 . module . IDENT_4 . IDENT_5 . IDENT_6 ) . with ( STRING_1 , equalTo ( STRING_6 ) ) . with ( STRING_3 , equalTo ( STRING_4 ) ) , 1 ) ; com . IDENT_0 . common . description . IDENT_1 . IDENT_2 result = new com . IDENT_0 . module . IDENT_4 . IDENT_5 . METHOD_2 ( ) . METHOD_3 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } equals ( java . lang . Object ) { if ( ( this ) == o ) return true ; if ( ( o == null ) || ( ( getClass ( ) ) != ( o . getClass ( ) ) ) ) return false ; com . IDENT_0 . module . IDENT_4 . IDENT_5 . IDENT_7 that = ( ( com . IDENT_0 . module . IDENT_4 . IDENT_5 . IDENT_7 ) ( o ) ) ; if ( ( IDENT_8 ) != ( that . IDENT_8 ) ) return false ; if ( ! ( IDENT_9 . equals ( that . IDENT_9 ) ) ) return false ; return true ; }
org . junit . Assert . assertTrue ( ( ( METHOD_1 ( STRING_8 , com . IDENT_0 . module . IDENT_4 . IDENT_5 . IDENT_6 ) . with ( STRING_1 , any ( ) ) . with ( STRING_3 , equalTo ( STRING_2 ) ) . equals ( result ) ) || ( METHOD_1 ( STRING_8 , com . IDENT_0 . module . IDENT_4 . IDENT_5 . IDENT_6 ) . with ( STRING_1 , any ( ) ) . with ( STRING_3 , equalTo ( STRING_4 ) ) . equals ( result ) ) ) ) 