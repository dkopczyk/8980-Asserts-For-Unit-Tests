METHOD_0 ( ) { com . graphhopper . jsprit . core . algorithm . IDENT_0 . IDENT_1 IDENT_2 = mock ( com . graphhopper . jsprit . core . algorithm . IDENT_0 . IDENT_1 . class ) ; com . graphhopper . jsprit . core . algorithm . IDENT_0 . IDENT_3 IDENT_4 = new com . graphhopper . jsprit . core . algorithm . IDENT_0 . METHOD_1 ( FLOAT_0 , METHOD_1 . IDENT_5 , 1 , IDENT_6 , null ) ; com . graphhopper . jsprit . core . algorithm . IDENT_0 . METHOD_1 IDENT_7 = new com . graphhopper . jsprit . core . algorithm . IDENT_0 . METHOD_1 ( FLOAT_1 , METHOD_1 . IDENT_5 , 1 , IDENT_8 , null ) ; when ( IDENT_2 . METHOD_2 ( IDENT_9 , service , IDENT_6 , IDENT_6 . METHOD_3 ( ) , null , Double . MAX_VALUE ) ) . thenReturn ( IDENT_4 ) ; when ( IDENT_2 . METHOD_2 ( IDENT_9 , service , IDENT_8 , IDENT_8 . METHOD_3 ( ) , null , Double . MAX_VALUE ) ) . thenReturn ( IDENT_7 ) ; when ( IDENT_2 . METHOD_2 ( IDENT_9 , service , IDENT_8 , IDENT_8 . METHOD_3 ( ) , null , FLOAT_0 ) ) . thenReturn ( IDENT_7 ) ; com . graphhopper . jsprit . core . problem . IDENT_10 IDENT_11 = mock ( com . graphhopper . jsprit . core . problem . IDENT_10 . class ) ; when ( IDENT_11 . METHOD_4 ( ) ) . thenReturn ( java . util . Collections . < com . graphhopper . jsprit . core . problem . solution . route . IDENT_12 > emptyList ( ) ) ; com . graphhopper . jsprit . core . algorithm . IDENT_0 . IDENT_13 IDENT_14 = new com . graphhopper . jsprit . core . algorithm . IDENT_0 . METHOD_5 ( IDENT_11 , IDENT_15 , IDENT_2 ) ; com . graphhopper . jsprit . core . algorithm . IDENT_0 . METHOD_1 IDENT_16 = IDENT_14 . METHOD_2 ( IDENT_9 , service , null , 0.0 , null , Double . MAX_VALUE ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( ) { return IDENT_17 ; }
org . junit . Assert . assertThat ( IDENT_16 . METHOD_6 ( ) , org . hamcrest . CoreMatchers . is ( IDENT_8 ) ) 