METHOD_0 ( ) { com . graphhopper . jsprit . core . algorithm . IDENT_0 . IDENT_1 IDENT_2 = new com . graphhopper . jsprit . core . algorithm . IDENT_0 . METHOD_1 ( IDENT_3 , IDENT_4 ) ; IDENT_2 . METHOD_2 ( ) ; java . util . Iterator < com . graphhopper . jsprit . core . problem . job . IDENT_5 > IDENT_6 = IDENT_2 . METHOD_3 ( 100 , target ) ; java . util . List < com . graphhopper . jsprit . core . problem . job . IDENT_7 > services = new java . util . ArrayList < com . graphhopper . jsprit . core . problem . job . IDENT_7 > ( ) ; while ( IDENT_6 . hasNext ( ) ) { services . add ( ( ( com . graphhopper . jsprit . core . problem . job . IDENT_7 ) ( IDENT_6 . next ( ) ) ) ) ; } "<AssertPlaceHolder>" ; } next ( ) { return null ; }
org . junit . Assert . assertEquals ( 6 , services . size ( ) ) 