METHOD_0 ( ) { com . graphhopper . jsprit . core . problem . job . IDENT_0 IDENT_1 = mock ( com . graphhopper . jsprit . core . problem . job . IDENT_0 . class ) ; java . util . List < com . graphhopper . jsprit . core . problem . job . IDENT_0 > IDENT_2 = new java . util . ArrayList < com . graphhopper . jsprit . core . problem . job . IDENT_0 > ( ) ; IDENT_2 . add ( IDENT_1 ) ; com . graphhopper . jsprit . core . problem . solution . IDENT_3 IDENT_4 = new com . graphhopper . jsprit . core . problem . solution . METHOD_1 ( java . util . Collections . < com . graphhopper . jsprit . core . problem . solution . route . IDENT_5 > emptyList ( ) , IDENT_2 , FLOAT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { return IDENT_6 ; }
org . junit . Assert . assertEquals ( IDENT_1 , IDENT_4 . METHOD_2 ( ) . iterator ( ) . next ( ) ) 