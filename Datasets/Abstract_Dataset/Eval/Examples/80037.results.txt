METHOD_0 ( ) { io . IDENT_0 . IDENT_1 . policy . IDENT_2 IDENT_3 = mock ( io . IDENT_0 . IDENT_1 . policy . IDENT_2 . class ) ; when ( IDENT_3 . policy ( ) ) . METHOD_1 ( ( ( org . mockito . IDENT_4 . IDENT_5 < java . lang . Class > ) ( ( IDENT_6 ) -> . class ) ) ) ; java . lang . Object policy = IDENT_7 . create ( IDENT_3 , null ) ; "<AssertPlaceHolder>" ; } create ( io . IDENT_0 . IDENT_8 . model . IDENT_9 , io . IDENT_0 . IDENT_1 . core . IDENT_10 . factory . template . IDENT_11 ) { for ( io . IDENT_0 . IDENT_1 . core . IDENT_10 . factory . IDENT_12 factory : METHOD_2 ( ) ) { if ( factory . support ( model . getType ( ) ) ) { return factory . create ( model , context ) ; } } throw new java . lang . IllegalStateException ( java . lang . String . format ( STRING_0 , model ) ) ; }
org . junit . Assert . assertNotNull ( policy ) 