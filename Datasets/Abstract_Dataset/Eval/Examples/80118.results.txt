METHOD_0 ( ) { when ( api . getId ( ) ) . thenReturn ( STRING_0 ) ; when ( IDENT_0 . METHOD_1 ( IDENT_1 . IDENT_2 , api . getId ( ) , STRING_1 , IDENT_3 . IDENT_2 ) ) . thenReturn ( new io . IDENT_4 . management . model . METHOD_2 ( ) ) ; boolean IDENT_5 = IDENT_6 . METHOD_3 ( api , java . util . Collections . singletonList ( STRING_2 ) , STRING_1 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_0 , times ( 1 ) ) . METHOD_1 ( any ( ) , any ( ) , any ( ) , any ( ) ) ; verify ( IDENT_0 , times ( 1 ) ) . METHOD_1 ( IDENT_1 . IDENT_2 , api . getId ( ) , STRING_1 , IDENT_3 . IDENT_2 ) ; verify ( api , METHOD_4 ( ) ) . METHOD_5 ( ) ; verify ( IDENT_7 , METHOD_4 ( ) ) . METHOD_6 ( ) ; } METHOD_3 ( io . IDENT_4 . management . model . api . IDENT_8 , io . IDENT_4 . management . service . impl . List , java . lang . String ) { if ( IDENT_9 == null ) { return ( ( IDENT_10 == null ) || ( IDENT_10 . isEmpty ( ) ) ) && ( IDENT_11 . IDENT_12 . equals ( api . METHOD_7 ( ) ) ) ; } if ( ( ( IDENT_10 != null ) && ( ! ( IDENT_10 . isEmpty ( ) ) ) ) && ( ( IDENT_0 . METHOD_1 ( IDENT_1 . IDENT_2 , api . getId ( ) , IDENT_9 , IDENT_3 . IDENT_2 ) ) == null ) ) { io . IDENT_4 . management . service . impl . Set < java . lang . String > IDENT_13 = io . IDENT_4 . management . service . impl . Collections . METHOD_8 ( ) ; if ( ( ( IDENT_11 . IDENT_14 . equals ( api . METHOD_7 ( ) ) ) && ( ( api . METHOD_5 ( ) ) != null ) ) && ( ! ( api . METHOD_5 ( ) . isEmpty ( ) ) ) ) { IDENT_13 = new io . IDENT_4 . management . service . impl . HashSet ( api . METHOD_5 ( ) ) ; } if ( IDENT_11 . IDENT_12 . equals ( api . METHOD_7 ( ) ) ) { try { IDENT_13 = IDENT_7 . METHOD_6 ( ) . stream ( ) . map ( IDENT_15 :: getId ) . collect ( java . util . stream . IDENT_16 . METHOD_9 ( ) ) ; } catch ( io . IDENT_4 . repository . exceptions . IDENT_17 ex ) { logger . error ( STRING_3 , ex ) ; throw new io . IDENT_4 . management . service . exceptions . METHOD_10 ( STRING_3 , ex ) ; } } IDENT_13 . METHOD_11 ( IDENT_10 ) ; for ( java . lang . String IDENT_18 : IDENT_13 ) { if ( ( IDENT_0 . METHOD_1 ( IDENT_1 . IDENT_19 , IDENT_18 , IDENT_9 , IDENT_3 . IDENT_2 ) ) != null ) { return true ; } } return false ; } return true ; }
org . junit . Assert . assertTrue ( IDENT_5 ) 