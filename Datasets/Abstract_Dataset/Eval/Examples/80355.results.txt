METHOD_0 ( ) { org . IDENT_0 . utils . IDENT_1 IDENT_2 = org . IDENT_0 . utils . IDENT_1 . METHOD_1 ( 2 , IDENT_3 . IDENT_4 ) ; char IDENT_5 = IDENT_2 . METHOD_2 ( ) . METHOD_3 ( ) ; org . IDENT_0 . core . IDENT_6 [ ] IDENT_7 = new org . IDENT_0 . core . IDENT_6 [ ] { IDENT_8 , org . IDENT_0 . utils . IDENT_8 . METHOD_4 ( org . IDENT_0 . utils . IDENT_9 ) , org . IDENT_0 . core . IDENT_6 . METHOD_5 ( STRING_0 ) , IDENT_10 , org . IDENT_0 . utils . IDENT_10 . add ( org . IDENT_0 . utils . IDENT_9 ) , org . IDENT_0 . utils . IDENT_10 . METHOD_4 ( org . IDENT_0 . utils . IDENT_9 ) , org . IDENT_0 . utils . IDENT_10 . METHOD_6 ( 1000 ) . add ( org . IDENT_0 . utils . IDENT_9 ) , org . IDENT_0 . utils . IDENT_10 . METHOD_6 ( 1000 ) , org . IDENT_0 . utils . IDENT_10 . METHOD_6 ( 1000 ) . METHOD_4 ( org . IDENT_0 . utils . IDENT_9 ) , valueOf ( 100 ) , valueOf ( 1000 ) , valueOf ( INT_0 ) , IDENT_9 } ; org . IDENT_0 . utils . IDENT_11 IDENT_12 = new org . IDENT_0 . utils . METHOD_7 ( java . text . IDENT_13 . Field . IDENT_14 ) ; java . lang . String [ ] output = new java . lang . String [ IDENT_7 . length ] ; int [ ] IDENT_15 = new int [ IDENT_7 . length ] ; int IDENT_16 = 0 ; for ( int i = 0 ; i < ( IDENT_7 . length ) ; i ++ ) { output [ i ] = IDENT_2 . format ( IDENT_7 [ i ] , new java . lang . StringBuffer ( ) , IDENT_12 ) . toString ( ) ; IDENT_15 [ i ] = IDENT_12 . METHOD_8 ( ) ; if ( ( IDENT_15 [ i ] ) > IDENT_16 ) IDENT_16 = IDENT_15 [ i ] ; } for ( int i = 0 ; i < ( output . length ) ; i ++ ) { "<AssertPlaceHolder>" ; } } toString ( ) { return java . lang . String . format ( Locale . IDENT_17 , STRING_1 , METHOD_9 ( ) , ( METHOD_10 ( ) ? STRING_2 : "" ) ) ; }
org . junit . Assert . assertEquals ( output [ i ] . indexOf ( IDENT_5 ) , IDENT_15 [ i ] ) 