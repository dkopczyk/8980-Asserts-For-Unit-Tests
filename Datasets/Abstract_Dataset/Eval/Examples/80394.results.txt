METHOD_0 ( ) { java . nio . ByteBuffer IDENT_0 = java . nio . ByteBuffer . METHOD_1 ( 20 ) ; IDENT_0 . order ( IDENT_1 . IDENT_2 ) ; IDENT_0 . put ( ( ( byte ) ( INT_0 ) ) ) ; IDENT_0 . METHOD_2 ( INT_1 ) ; IDENT_0 . put ( ( ( byte ) ( INT_2 ) ) ) ; IDENT_0 . put ( ( ( byte ) ( INT_3 ) ) ) ; IDENT_0 . put ( ( ( byte ) ( INT_4 ) ) ) ; IDENT_0 . METHOD_3 ( INT_5 ) ; IDENT_0 . put ( ( ( byte ) ( INT_6 ) ) ) ; IDENT_0 . METHOD_4 ( ( ( short ) ( INT_7 ) ) ) ; IDENT_0 . put ( ( ( byte ) ( INT_8 ) ) ) ; byte [ ] bytes = IDENT_0 . array ( ) ; org . IDENT_3 . IDENT_4 . hash . IDENT_5 IDENT_6 = ( ( org . IDENT_3 . IDENT_4 . hash . IDENT_5 ) ( IDENT_7 ) ) ; IDENT_6 . update ( INT_0 ) ; IDENT_6 . METHOD_5 ( INT_1 ) ; IDENT_6 . update ( INT_2 ) ; IDENT_6 . update ( INT_3 ) ; IDENT_6 . update ( INT_4 ) ; IDENT_6 . METHOD_6 ( INT_5 ) ; IDENT_6 . update ( INT_6 ) ; IDENT_6 . METHOD_7 ( ( ( short ) ( INT_7 ) ) ) ; IDENT_6 . update ( INT_8 ) ; long IDENT_8 = IDENT_6 . getValue ( ) ; IDENT_6 . METHOD_8 ( ) ; IDENT_6 . update ( bytes , 0 , bytes . length ) ; long IDENT_9 = IDENT_6 . getValue ( ) ; "<AssertPlaceHolder>" ; } getValue ( ) { return ( hash ) & INT_9 ; }
org . junit . Assert . assertEquals ( IDENT_9 , IDENT_8 ) 