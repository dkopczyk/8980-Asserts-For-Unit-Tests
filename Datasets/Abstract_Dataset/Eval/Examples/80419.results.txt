METHOD_0 ( ) { final net . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new net . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( new java . util . concurrent . IDENT_5 < net . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 > ( ) { public net . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 call ( ) { return new net . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 ( net . IDENT_0 . IDENT_1 . IDENT_7 . config , set ( net . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 ) , new net . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_3 ( map ( entry ( STRING_0 , net . IDENT_0 . IDENT_1 . IDENT_9 . class ) ) ) ) ; } } , 2 ) ; final net . IDENT_0 . IDENT_1 . admin . IDENT_10 admin = new net . IDENT_0 . IDENT_1 . admin . METHOD_4 ( net . IDENT_0 . IDENT_1 . IDENT_7 . config ) ; admin . METHOD_5 ( IDENT_4 ) ; IDENT_4 . run ( ) ; final java . lang . Thread IDENT_11 = new java . lang . Thread ( admin ) ; IDENT_11 . start ( ) ; "<AssertPlaceHolder>" ; try { } finally { net . IDENT_0 . IDENT_1 . TestUtils . METHOD_6 ( admin , IDENT_11 ) ; try { IDENT_4 . METHOD_7 ( false , 1000 ) ; } catch ( java . lang . Exception e ) { net . IDENT_0 . IDENT_1 . IDENT_7 . LOG . warn ( STRING_1 , e ) ; } } } METHOD_8 ( ) { return this . IDENT_12 . get ( 0 ) . METHOD_8 ( ) ; }
org . junit . Assert . assertFalse ( IDENT_4 . METHOD_8 ( ) ) 