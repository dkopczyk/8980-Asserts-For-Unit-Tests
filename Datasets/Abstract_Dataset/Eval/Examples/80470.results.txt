METHOD_0 ( ) { java . lang . String s = STRING_0 ; org . antlr . v4 . runtime . tree . IDENT_0 tree = org . IDENT_1 . plugins . IDENT_2 . helpers . IDENT_3 . METHOD_1 ( s ) . METHOD_2 ( ) . METHOD_3 ( 0 ) . METHOD_3 ( 0 ) . METHOD_3 ( 0 ) . METHOD_3 ( 0 ) ; org . IDENT_1 . plugins . IDENT_2 . antlr . nodes . IDENT_4 node = new org . IDENT_1 . plugins . IDENT_2 . antlr . nodes . METHOD_4 ( tree ) ; org . IDENT_1 . plugins . IDENT_2 . antlr . IDENT_5 [ ] nodes = node . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { java . util . List < org . IDENT_1 . plugins . IDENT_2 . antlr . IDENT_5 > nodes = new java . util . ArrayList ( ) ; if ( ( this . item ) == null ) { return nodes . toArray ( new org . IDENT_1 . plugins . IDENT_2 . antlr . IDENT_5 [ 0 ] ) ; } org . antlr . v4 . runtime . tree . IDENT_0 IDENT_6 = this . item . METHOD_6 ( ) ; int i = 0 ; while ( IDENT_6 != null ) { i ++ ; nodes . add ( new org . IDENT_1 . plugins . IDENT_2 . antlr . nodes . METHOD_4 ( IDENT_6 , i , 1 , ( - 1 ) ) ) ; IDENT_6 = IDENT_6 . METHOD_6 ( ) ; } return nodes . toArray ( new org . IDENT_1 . plugins . IDENT_2 . antlr . IDENT_5 [ 0 ] ) ; }
org . junit . Assert . assertEquals ( 4 , nodes . length ) 