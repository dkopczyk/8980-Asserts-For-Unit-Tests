METHOD_0 ( ) { try ( java . sql . ResultSet IDENT_0 = METHOD_1 ( ) ) { for ( int i = 1 ; i <= ( IDENT_0 . METHOD_2 ( ) . METHOD_3 ( ) ) ; i ++ ) { "<AssertPlaceHolder>" ; } } } METHOD_4 ( java . sql . ResultSet , int , boolean ) { try { switch ( index ) { case 1 : IDENT_0 . METHOD_5 ( index ) ; break ; case 2 : IDENT_0 . METHOD_6 ( index ) ; break ; case 3 : IDENT_0 . METHOD_7 ( index ) ; break ; case 4 : IDENT_0 . METHOD_8 ( index ) ; break ; case 5 : IDENT_0 . METHOD_9 ( index ) ; break ; case 6 : IDENT_0 . METHOD_10 ( index ) ; break ; case 7 : IDENT_0 . METHOD_11 ( index ) ; break ; case 8 : IDENT_0 . getString ( index ) ; break ; case 9 : IDENT_0 . METHOD_12 ( index ) ; break ; case 10 : IDENT_0 . getTime ( index ) ; break ; case INT_0 : IDENT_0 . METHOD_13 ( index ) ; break ; default : IDENT_0 . METHOD_14 ( index ) ; } } catch ( java . sql . IDENT_1 e ) { if ( ! IDENT_2 ) { throw e ; } return true ; } return ! IDENT_2 ; }
org . junit . Assert . assertTrue ( METHOD_4 ( IDENT_0 , i , true ) ) 