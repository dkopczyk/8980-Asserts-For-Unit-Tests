METHOD_0 ( ) { java . util . List < java . util . List < java . lang . Object > > IDENT_0 = new java . util . ArrayList ( ) ; for ( java . lang . Object o : IDENT_1 . IDENT_2 ) { IDENT_0 . add ( java . util . Collections . singletonList ( o ) ) ; } try ( org . apache . calcite . IDENT_3 . util . IDENT_4 IDENT_5 = new org . apache . calcite . IDENT_3 . util . METHOD_1 ( IDENT_0 . iterator ( ) ) ) { java . util . List < org . apache . calcite . IDENT_3 . util . IDENT_4 . IDENT_6 > IDENT_7 = IDENT_5 . METHOD_2 ( java . util . Collections . singletonList ( IDENT_1 . IDENT_8 ) , org . apache . calcite . IDENT_3 . util . IDENT_9 . METHOD_3 ( ) , null ) ; org . apache . calcite . IDENT_3 . util . IDENT_4 . IDENT_6 IDENT_10 = IDENT_7 . get ( 0 ) ; int i = 0 ; while ( IDENT_5 . next ( ) ) { java . sql . IDENT_11 s = IDENT_10 . METHOD_4 ( java . sql . IDENT_11 . class ) ; java . lang . Object [ ] IDENT_12 = IDENT_1 . IDENT_13 . get ( i ) . METHOD_5 ( ) ; java . lang . Object [ ] IDENT_14 = s . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; i ++ ; } } } METHOD_5 ( ) { return list . toArray ( ) ; }
org . junit . Assert . assertArrayEquals ( IDENT_12 , IDENT_14 ) 