METHOD_0 ( ) { java . util . List < java . util . concurrent . IDENT_0 < java . lang . Integer > > IDENT_1 = new java . util . ArrayList < java . util . concurrent . IDENT_0 < java . lang . Integer > > ( ) ; for ( int i = 0 ; i != 1000 ; ++ i ) { IDENT_1 . add ( exec ( STRING_0 , ( STRING_1 + ( java . lang . String . valueOf ( i ) ) ) ) ) ; if ( i > 4 ) { IDENT_1 . remove ( 0 ) . get ( ) ; } } for ( java . util . concurrent . IDENT_0 < java . lang . Integer > f : IDENT_1 ) { "<AssertPlaceHolder>" ; } } get ( ) { return ( ( T ) ( org . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( ( ( java . util . List ) ( IDENT_1 ) ) ) . get ( 0 ) ) ) ; }
org . junit . Assert . assertEquals ( java . lang . Integer . valueOf ( 0 ) , f . get ( ) ) 