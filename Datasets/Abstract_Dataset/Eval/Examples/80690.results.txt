METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . internal . compiler . ast . IDENT_3 . IDENT_4 = true ; org . eclipse . core . runtime . IDENT_5 [ ] IDENT_6 = METHOD_1 ( STRING_0 7 , true ) ; STRING_1 ) + STRING_2 ) + STRING_3 ) + STRING_0 3 ) ) ) ; METHOD_2 ( IDENT_6 [ 0 ] ) ; METHOD_3 ( STRING_0 6 , STRING_0 1 ) ; METHOD_4 ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . internal . compiler . ast . IDENT_7 IDENT_8 = org . IDENT_0 . IDENT_1 . IDENT_2 . internal . compiler . ast . IDENT_3 . METHOD_5 ( STRING_4 3 ) ; "<AssertPlaceHolder>" ; System . out . println ( ( STRING_4 5 + IDENT_8 ) ) ; org . IDENT_0 . IDENT_2 . ast . IDENT_9 IDENT_10 = new org . IDENT_0 . IDENT_2 . ast . METHOD_6 ( java . util . Collection . class ) ; org . IDENT_0 . IDENT_2 . IDENT_11 . IDENT_12 . METHOD_7 ( ) . METHOD_8 ( IDENT_10 ) ; IDENT_10 . METHOD_9 ( ) ; System . out . println ( ( STRING_4 4 + IDENT_10 ) ) ; org . eclipse . IDENT_1 . core . IDENT_2 . tests . builder . IDENT_13 . METHOD_10 ( IDENT_8 . METHOD_11 ( ) , IDENT_10 . METHOD_11 ( ) , 0 ) ; org . IDENT_0 . IDENT_2 . ast . IDENT_14 IDENT_15 = org . eclipse . IDENT_1 . core . IDENT_2 . tests . builder . IDENT_13 . METHOD_12 ( IDENT_8 , STRING_0 5 , 1 ) ; org . IDENT_0 . IDENT_2 . ast . IDENT_14 IDENT_16 = org . eclipse . IDENT_1 . core . IDENT_2 . tests . builder . IDENT_13 . METHOD_12 ( IDENT_10 , STRING_0 5 , 1 ) ; org . eclipse . IDENT_1 . core . IDENT_2 . tests . builder . IDENT_13 . METHOD_13 ( IDENT_15 , IDENT_16 ) ; IDENT_15 = org . eclipse . IDENT_1 . core . IDENT_2 . tests . builder . IDENT_13 . METHOD_12 ( IDENT_8 , STRING_5 , 1 ) ; IDENT_16 = org . eclipse . IDENT_1 . core . IDENT_2 . tests . builder . IDENT_13 . METHOD_12 ( IDENT_10 , STRING_5 , 1 ) ; org . eclipse . IDENT_1 . core . IDENT_2 . tests . builder . IDENT_13 . METHOD_13 ( IDENT_15 , IDENT_16 ) ; } METHOD_5 ( java . lang . String ) { for ( org . IDENT_0 . IDENT_1 . IDENT_2 . internal . compiler . ast . IDENT_3 instance : org . IDENT_0 . IDENT_1 . IDENT_2 . internal . compiler . ast . IDENT_3 . IDENT_17 ) { org . IDENT_0 . IDENT_1 . IDENT_2 . internal . compiler . ast . IDENT_7 node = org . IDENT_0 . IDENT_1 . IDENT_2 . internal . compiler . ast . IDENT_3 . METHOD_5 ( instance , name ) ; if ( node != null ) return node ; } return null ; }
org . junit . Assert . assertNotNull ( IDENT_8 ) 