METHOD_0 ( ) { final int IDENT_0 = com . IDENT_1 . IDENT_2 . metrics . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 ; METHOD_1 ( IDENT_0 ) ; IDENT_7 . METHOD_2 ( ) ; final long expected = java . nio . file . IDENT_8 . list ( IDENT_9 ) . METHOD_3 ( ( path ) -> { try { return java . nio . file . IDENT_8 . size ( path ) ; } catch ( ex ) { throw new < com . IDENT_1 . IDENT_2 . metrics . IDENT_3 . IDENT_4 . ex > java . lang . RuntimeException ( STRING_0 ) ; } } ) . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { final java . util . concurrent . IDENT_10 . IDENT_11 . IDENT_12 IDENT_13 = IDENT_14 . METHOD_6 ( ) ; IDENT_13 . METHOD_7 ( ) ; try { return ( IDENT_15 . map ( ( IDENT_7 ) -> IDENT_7 . METHOD_8 ( ) . METHOD_5 ( ) ) . METHOD_9 ( 0L ) ) + ( IDENT_16 . stream ( ) . METHOD_3 ( ( key ) -> { final com . IDENT_1 . IDENT_2 . metrics . IDENT_3 . IDENT_17 IDENT_18 = com . IDENT_1 . IDENT_2 . metrics . IDENT_3 . IDENT_4 . IDENT_19 . IDENT_20 . METHOD_10 ( key ) ; try { if ( IDENT_18 != null ) return IDENT_18 . METHOD_5 ( ) ; else return java . nio . file . IDENT_8 . size ( key . METHOD_11 ( ) ) ; } catch ( ex ) { com . IDENT_1 . IDENT_2 . metrics . IDENT_3 . IDENT_4 . IDENT_19 . LOG . log ( IDENT_21 . IDENT_22 , ( STRING_1 + ( key . METHOD_11 ( ) ) ) , com . IDENT_1 . IDENT_2 . metrics . IDENT_3 . IDENT_4 . ex ) ; return 0L ; } } ) . METHOD_4 ( ) ) ; } finally { METHOD_7 . METHOD_12 ( ) ; } }
org . junit . Assert . assertEquals ( expected , IDENT_7 . METHOD_5 ( ) ) 