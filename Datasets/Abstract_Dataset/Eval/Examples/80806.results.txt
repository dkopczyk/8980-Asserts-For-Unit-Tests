METHOD_0 ( ) { byte [ ] output = new byte [ expected . length ] ; try ( com . IDENT_0 . IDENT_1 . metrics . IDENT_2 . IDENT_3 . support . reader . IDENT_4 reader = new com . IDENT_0 . IDENT_1 . metrics . IDENT_2 . IDENT_3 . support . reader . METHOD_1 ( new com . IDENT_0 . IDENT_1 . metrics . IDENT_2 . IDENT_3 . support . reader . METHOD_2 ( file , 0 ) ) ) { java . nio . ByteBuffer buf = java . nio . ByteBuffer . METHOD_3 ( ( ( output . length ) + 100 ) ) ; while ( ( buf . position ( ) ) < ( output . length ) ) reader . read ( buf ) ; buf . METHOD_4 ( ) ; buf . get ( output ) ; } "<AssertPlaceHolder>" ; } get ( int ) { if ( ( n < 0 ) || ( n >= ( size ( ) ) ) ) throw new java . util . METHOD_5 ( ( ( ( ( STRING_0 + n ) + STRING_1 ) + ( size ( ) ) ) + STRING_2 ) ) ; return ( IDENT_5 ) + n ; }
org . junit . Assert . assertArrayEquals ( expected , output ) 