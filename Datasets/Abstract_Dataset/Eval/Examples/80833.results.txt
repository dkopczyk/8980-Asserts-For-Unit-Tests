METHOD_0 ( ) { final com . IDENT_0 . IDENT_1 . metrics . IDENT_2 IDENT_3 = new com . IDENT_0 . IDENT_1 . metrics . METHOD_1 ( new java . util . HashMap < com . IDENT_0 . IDENT_1 . metrics . METHOD_1 . IDENT_4 , java . lang . Double > ( ) { { put ( new com . IDENT_0 . IDENT_1 . metrics . METHOD_1 . METHOD_2 ( 0 , 1 ) , 1.0 ) ; put ( new com . IDENT_0 . IDENT_1 . metrics . METHOD_1 . METHOD_2 ( 1 , 2 ) , 1.0 ) ; put ( new com . IDENT_0 . IDENT_1 . metrics . METHOD_1 . METHOD_2 ( 2 , 6 ) , FLOAT_0 ) ; put ( new com . IDENT_0 . IDENT_1 . metrics . METHOD_1 . METHOD_2 ( 6 , 7 ) , 1.0 ) ; put ( new com . IDENT_0 . IDENT_1 . metrics . METHOD_1 . METHOD_2 ( 7 , 10 ) , FLOAT_1 ) ; } } . entrySet ( ) . stream ( ) . map ( com . IDENT_0 . IDENT_1 . metrics . IDENT_5 :: IDENT_6 ) ) ; final com . IDENT_0 . IDENT_1 . metrics . METHOD_1 expect = new com . IDENT_0 . IDENT_1 . metrics . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( com . IDENT_0 . IDENT_1 . metrics . METHOD_1 , com . IDENT_0 . IDENT_1 . metrics . METHOD_1 ) { return new com . IDENT_0 . IDENT_1 . metrics . METHOD_1 ( java . util . stream . IDENT_7 . METHOD_4 ( x . stream ( ) , y . stream ( ) . map ( ( IDENT_8 ) -> { IDENT_8 . METHOD_5 ( ( - ( IDENT_8 . METHOD_6 ( ) ) ) ) ; return IDENT_8 ; } ) ) ) ; }
org . junit . Assert . assertEquals ( expect , com . IDENT_0 . IDENT_1 . metrics . METHOD_1 . METHOD_3 ( IDENT_3 , IDENT_3 ) ) 