METHOD_0 ( ) { final org . joda . time . IDENT_0 IDENT_1 = org . joda . time . IDENT_0 . METHOD_1 ( 1 ) ; final java . util . List < com . IDENT_2 . IDENT_3 . metrics . IDENT_4 . IDENT_5 > expected = com . IDENT_2 . IDENT_6 . remote . IDENT_7 . IDENT_8 . METHOD_2 ( ) . collect ( java . util . stream . IDENT_9 . toList ( ) ) ; when ( IDENT_7 . stream ( org . mockito . Mockito . METHOD_3 ( org . joda . time . IDENT_0 . class ) ) ) . METHOD_4 ( ( IDENT_10 ) -> METHOD_2 ( ) ) ; final java . util . List < com . IDENT_2 . IDENT_3 . metrics . IDENT_4 . IDENT_5 > result = client . stream ( IDENT_1 ) . collect ( java . util . stream . IDENT_9 . toList ( ) ) ; "<AssertPlaceHolder>" ; verify ( IDENT_7 , times ( 1 ) ) . stream ( org . mockito . Mockito . eq ( IDENT_1 ) ) ; METHOD_5 ( IDENT_7 ) ; } collect ( java . util . stream . IDENT_11 ) { try ( final java . util . stream . IDENT_12 < T > s = stream . get ( ) ) { return s . collect ( IDENT_13 ) ; } }
org . junit . Assert . assertEquals ( expected , result ) 