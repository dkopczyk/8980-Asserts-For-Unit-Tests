METHOD_0 ( ) { final org . joda . time . IDENT_0 IDENT_1 = new org . joda . time . METHOD_1 ( org . joda . time . IDENT_2 . IDENT_3 ) ; final org . joda . time . IDENT_4 IDENT_5 = org . joda . time . IDENT_4 . METHOD_2 ( 1 ) ; final java . util . List < com . IDENT_6 . IDENT_7 . metrics . IDENT_8 . IDENT_9 > expected = com . IDENT_6 . IDENT_10 . remote . IDENT_11 . IDENT_12 . METHOD_3 ( ) . collect ( java . util . stream . IDENT_13 . toList ( ) ) ; when ( IDENT_11 . stream ( org . mockito . Mockito . METHOD_4 ( org . joda . time . METHOD_1 . class ) , org . mockito . Mockito . METHOD_4 ( org . joda . time . IDENT_4 . class ) ) ) . METHOD_5 ( ( IDENT_14 ) -> METHOD_3 ( ) ) ; final java . util . List < com . IDENT_6 . IDENT_7 . metrics . IDENT_8 . IDENT_9 > result = client . stream ( IDENT_1 , IDENT_5 ) . collect ( java . util . stream . IDENT_13 . toList ( ) ) ; "<AssertPlaceHolder>" ; verify ( IDENT_11 , times ( 1 ) ) . stream ( org . mockito . Mockito . eq ( IDENT_1 ) , org . mockito . Mockito . eq ( IDENT_5 ) ) ; METHOD_6 ( IDENT_11 ) ; } collect ( java . util . stream . IDENT_15 ) { try ( final java . util . stream . IDENT_16 < T > s = stream . get ( ) ) { return s . collect ( IDENT_17 ) ; } }
org . junit . Assert . assertEquals ( expected , result ) 