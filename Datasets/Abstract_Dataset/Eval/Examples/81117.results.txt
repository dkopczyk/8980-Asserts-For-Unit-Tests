METHOD_0 ( ) { org . apache . flink . api . common . IDENT_0 . IDENT_1 < java . lang . Object , IDENT_2 . api . java . types . IDENT_3 < java . lang . Integer , java . lang . String > > IDENT_4 = new IDENT_5 . IDENT_6 < java . lang . Integer , java . lang . String > ( 2 ) ; IDENT_4 . METHOD_1 ( null ) ; IDENT_2 . api . java . util . IDENT_7 . IDENT_8 out = new IDENT_2 . api . java . util . IDENT_7 . METHOD_2 ( ) ; IDENT_4 . METHOD_3 ( new java . lang . String [ ] { "a" , "b" } , out ) ; long IDENT_9 = out . elements . get ( 0 ) . IDENT_10 ; "<AssertPlaceHolder>" ; try { IDENT_4 . METHOD_3 ( new java . lang . Integer [ ] { 1 , null , 3 } , out ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . Exception e ) { } try { IDENT_4 . METHOD_3 ( new java . lang . Integer [ ] { } , out ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . Exception e ) { } } METHOD_4 ( int , java . lang . Object , short , short , long ) { IDENT_2 . api . java . types . IDENT_3 < IDENT_11 , IDENT_12 > op = new IDENT_2 . api . java . types . METHOD_5 ( ( ( short ) ( id ) ) , null , null , record , IDENT_2 . api . java . types . METHOD_5 . IDENT_13 . IDENT_14 , IDENT_15 , IDENT_9 ) ; op . index = index ; return op ; }
org . junit . Assert . assertEquals ( out . elements , java . util . Arrays . asList ( IDENT_2 . api . java . types . METHOD_5 . METHOD_4 ( 2 , "a" , ( ( short ) ( 2 ) ) , ( ( short ) ( 0 ) ) , IDENT_9 ) , IDENT_2 . api . java . types . METHOD_5 . METHOD_4 ( 2 , "b" , ( ( short ) ( 2 ) ) , ( ( short ) ( 1 ) ) , IDENT_9 ) ) ) 