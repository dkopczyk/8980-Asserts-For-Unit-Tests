METHOD_0 ( ) { java . util . Map < java . lang . Boolean , java . util . List < com . IDENT_0 . IDENT_1 . data . IDENT_2 > > map = IDENT_3 . METHOD_1 ( FLOAT_0 ) ; System . out . println ( map . get ( Boolean . IDENT_4 ) . size ( ) ) ; "<AssertPlaceHolder>" ; } get ( java . lang . String ) { if ( key == null ) { return null ; } int position = hash ( key ) ; java . util . List < IDENT_5 . Entry > IDENT_6 = IDENT_7 . get ( position ) ; if ( IDENT_6 == null ) { return null ; } for ( IDENT_5 . Entry entry : IDENT_6 ) { if ( key . equals ( entry . getKey ( ) ) ) { return entry . getValue ( ) ; } } return null ; }
org . junit . Assert . assertTrue ( ( ( map . get ( Boolean . IDENT_4 ) . size ( ) ) == 15 ) ) 