METHOD_0 ( ) { final org . apache . calcite . tools . IDENT_0 builder = org . apache . calcite . tools . IDENT_0 . create ( org . apache . calcite . test . IDENT_1 . config ( ) . build ( ) ) ; try { final org . apache . calcite . IDENT_2 . IDENT_3 root = builder . METHOD_1 ( STRING_0 ) . project ( builder . field ( STRING_1 ) ) . METHOD_1 ( STRING_2 ) . project ( builder . field ( STRING_3 ) , builder . field ( STRING_4 ) ) . METHOD_2 ( true ) . build ( ) ; org . junit . Assert . fail ( ( STRING_5 + root ) ) ; } catch ( java . lang . IllegalArgumentException e ) { final java . lang . String expected = STRING_6 + ( STRING_7 + STRING_8 ) ; "<AssertPlaceHolder>" ; } } getMessage ( ) { return ( ( super . getMessage ( ) ) + STRING_9 ) + ( METHOD_3 ( ) . getMessage ( ) ) ; }
org . junit . Assert . assertThat ( e . getMessage ( ) , org . hamcrest . CoreMatchers . is ( expected ) ) 