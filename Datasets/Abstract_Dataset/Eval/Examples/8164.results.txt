METHOD_0 ( ) { final org . apache . calcite . tools . IDENT_0 builder = org . apache . calcite . tools . IDENT_0 . create ( org . apache . calcite . test . IDENT_1 . config ( ) . build ( ) ) ; org . apache . calcite . IDENT_2 . IDENT_3 root = builder . METHOD_1 ( STRING_0 ) . as ( STRING_1 1 ) . METHOD_1 ( STRING_0 ) . as ( STRING_1 ) . METHOD_1 ( STRING_1 4 ) . join ( IDENT_4 . IDENT_5 ) . join ( IDENT_4 . IDENT_5 ) . project ( builder . field ( STRING_1 4 , STRING_2 ) , builder . field ( 16 ) , builder . field ( STRING_1 , STRING_3 ) , builder . field ( STRING_1 1 , STRING_4 ) ) . as ( STRING_5 ) . filter ( builder . call ( IDENT_6 . IDENT_7 , builder . field ( STRING_1 4 , STRING_2 ) , builder . METHOD_2 ( 100 ) ) ) . project ( builder . field ( STRING_1 4 , STRING_2 ) , builder . field ( STRING_5 , STRING_3 ) ) . build ( ) ; final java . lang . String expected = STRING_1 2 + ( ( ( ( ( ( ( STRING_6 + STRING_7 ) + STRING_1 5 ) + STRING_8 ) + STRING_1 0 ) + STRING_8 ) + STRING_1 3 ) + STRING_1 6 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String ) { return org . apache . calcite . test . Matchers . METHOD_4 ( org . hamcrest . core . Is . is ( value ) , ( input ) -> { return org . apache . calcite . util . IDENT_8 . METHOD_5 ( org . apache . calcite . plan . IDENT_9 . toString ( input ) ) ; } ) ; }
org . junit . Assert . assertThat ( root , org . apache . calcite . test . Matchers . METHOD_3 ( expected ) ) 