METHOD_0 ( ) { com . IDENT_0 . lang . Map < java . lang . String , ? > map = new com . IDENT_0 . lang . HashMap < java . lang . String , java . lang . Object > ( ) { { put ( "foo" , 1 ) ; put ( "bar" , 2 ) ; put ( STRING_0 , 3 ) ; } } ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . util . Map , java . lang . String ) { com . IDENT_0 . lang . IDENT_1 . METHOD_2 ( IDENT_2 , IDENT_3 ) ; for ( IDENT_4 key : IDENT_2 . METHOD_3 ( ) ) { if ( key == null ) { throw new java . lang . IllegalArgumentException ( java . lang . String . format ( STRING_1 , ( IDENT_3 == null ? com . IDENT_0 . lang . IDENT_1 . IDENT_5 : IDENT_3 ) ) ) ; } } return IDENT_2 ; }
org . junit . Assert . assertSame ( map , com . IDENT_0 . lang . IDENT_1 . METHOD_1 ( map , null ) ) 