METHOD_0 ( ) { try ( java . sql . IDENT_0 connection = java . sql . IDENT_1 . METHOD_1 ( STRING_0 ) ) { final org . apache . calcite . tools . IDENT_2 . IDENT_3 IDENT_4 = org . apache . calcite . test . IDENT_5 . METHOD_2 ( connection ) ; final org . apache . calcite . plan . IDENT_6 . IDENT_7 IDENT_8 = ( ( org . apache . calcite . plan . IDENT_6 . IDENT_7 ) ( org . apache . calcite . tools . IDENT_2 . METHOD_3 ( IDENT_4 . build ( ) ) ) ) ; final org . apache . calcite . IDENT_9 . core . IDENT_10 . IDENT_11 IDENT_12 = org . apache . calcite . IDENT_9 . core . IDENT_10 . METHOD_4 ( IDENT_8 , IDENT_10 . IDENT_13 ) ; IDENT_4 . context ( org . apache . calcite . plan . IDENT_14 . of ( IDENT_12 ) ) ; final org . apache . calcite . tools . IDENT_15 builder = org . apache . calcite . tools . IDENT_15 . create ( IDENT_4 . build ( ) ) ; org . apache . calcite . IDENT_9 . IDENT_16 node = builder . METHOD_5 ( STRING_1 ) . build ( ) ; int count = 0 ; try ( java . sql . IDENT_17 statement = connection . METHOD_6 ( org . apache . calcite . tools . IDENT_18 . class ) . METHOD_7 ( node ) ; java . sql . ResultSet IDENT_19 = statement . METHOD_8 ( ) ) { while ( IDENT_19 . next ( ) ) { count ++ ; } } "<AssertPlaceHolder>" ; } } next ( ) { return IDENT_20 . METHOD_9 ( ) ; }
org . junit . Assert . assertTrue ( ( count > 1 ) ) 