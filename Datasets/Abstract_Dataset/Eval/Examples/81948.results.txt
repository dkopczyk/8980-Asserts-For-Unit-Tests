METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . api . services . IDENT_2 criteria = new org . IDENT_0 . IDENT_1 . api . services . METHOD_1 ( ) ; criteria . METHOD_2 ( INT_0 ) ; criteria . METHOD_3 ( STRING_0 ) ; criteria . METHOD_4 ( 100 ) ; IDENT_3 = METHOD_5 ( INT_1 , 200 , criteria , INT_2 ) ; org . IDENT_0 . IDENT_1 . engine . IDENT_4 . log . METHOD_6 ( STRING_1 , IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( int , int , org . IDENT_0 . IDENT_1 . api . services . METHOD_1 , int ) { java . util . Collection < org . IDENT_0 . IDENT_1 . api . model . event . IDENT_5 > events = new java . util . ArrayList ( IDENT_6 ) ; java . lang . String IDENT_7 = STRING_2 ; long IDENT_8 = java . lang . System . currentTimeMillis ( ) ; for ( int i = 1 ; i <= IDENT_6 ; ++ i ) { java . lang . String IDENT_9 = IDENT_7 + ( ( i OP_0 2 ) == 1 ? "a" : "b" ) ; org . IDENT_0 . IDENT_1 . api . model . event . IDENT_5 e = new org . IDENT_0 . IDENT_1 . api . model . event . METHOD_7 ( org . IDENT_0 . IDENT_1 . engine . IDENT_4 . IDENT_10 , ( STRING_3 + i ) , i , IDENT_9 , STRING_4 , ( ( java . util . Map < java . lang . String , java . lang . String > ) ( null ) ) ) ; events . add ( e ) ; if ( ( i OP_0 100 ) == 0 ) { org . IDENT_0 . IDENT_1 . engine . IDENT_4 . IDENT_11 . METHOD_8 ( events ) ; events . METHOD_9 ( ) ; } } org . IDENT_0 . IDENT_1 . engine . IDENT_4 . IDENT_11 . METHOD_8 ( events ) ; long IDENT_12 = java . lang . System . currentTimeMillis ( ) ; org . IDENT_0 . IDENT_1 . engine . IDENT_4 . log . METHOD_6 ( STRING_5 , IDENT_6 , ( IDENT_12 - IDENT_8 ) ) ; java . util . Collection < org . IDENT_0 . IDENT_1 . api . model . event . METHOD_7 > result = null ; long start = java . lang . System . currentTimeMillis ( ) ; for ( int i = 0 ; i < IDENT_13 ; ++ i ) { result = org . IDENT_0 . IDENT_1 . engine . IDENT_4 . IDENT_11 . METHOD_10 ( org . IDENT_0 . IDENT_1 . engine . IDENT_4 . IDENT_10 , criteria , null ) ; } long end = java . lang . System . currentTimeMillis ( ) ; org . junit . Assert . assertEquals ( expected , result . size ( ) ) ; return end - start ; }
org . junit . Assert . assertTrue ( ( ( IDENT_3 ) > 0 ) ) 