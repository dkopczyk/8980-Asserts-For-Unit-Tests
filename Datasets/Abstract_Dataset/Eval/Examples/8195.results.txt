METHOD_0 ( ) { java . sql . IDENT_0 connection = java . sql . IDENT_1 . METHOD_1 ( STRING_0 ) ; org . apache . calcite . jdbc . IDENT_2 IDENT_3 = connection . METHOD_2 ( org . apache . calcite . jdbc . IDENT_2 . class ) ; org . apache . calcite . schema . IDENT_4 IDENT_5 = IDENT_3 . METHOD_3 ( ) ; org . apache . calcite . schema . IDENT_4 schema = IDENT_5 . add ( STRING_1 , new org . apache . calcite . schema . impl . METHOD_4 ( ) ) ; final org . apache . calcite . schema . IDENT_6 table = org . apache . calcite . schema . impl . IDENT_7 . create ( IDENT_8 . IDENT_9 ) ; schema . add ( STRING_2 , table ) ; final java . lang . String sql = STRING_3 + STRING_4 ; java . sql . ResultSet IDENT_10 = connection . METHOD_5 ( ) . METHOD_6 ( sql ) ; final java . lang . String result = STRING_5 + ( STRING_6 + STRING_7 ) ; "<AssertPlaceHolder>" ; } toString ( java . sql . ResultSet ) { return new org . apache . calcite . test . IDENT_11 . METHOD_7 ( ) . METHOD_8 ( METHOD_8 ) . string ( ) ; }
org . junit . Assert . assertThat ( org . apache . calcite . test . IDENT_11 . toString ( METHOD_8 ) , org . hamcrest . CoreMatchers . is ( result ) ) 