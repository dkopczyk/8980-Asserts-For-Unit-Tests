METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 [ ] IDENT_3 = METHOD_1 ( 2 ) ; logger . info ( STRING_0 ) ; com . IDENT_0 . IDENT_1 . IDENT_4 < java . lang . Object , java . lang . Object > IDENT_5 = IDENT_3 [ 0 ] . METHOD_2 ( STRING_1 ) ; java . util . Map < java . lang . Integer , java . lang . Integer > IDENT_6 = java . util . stream . IDENT_7 . range ( 0 , INT_0 ) . METHOD_3 ( ) . collect ( METHOD_4 ( ( e ) -> e , ( e ) -> e ) ) ; IDENT_5 . METHOD_5 ( IDENT_6 ) ; logger . info ( STRING_2 ) ; com . IDENT_0 . IDENT_1 . impl . util . IDENT_8 . METHOD_6 ( IDENT_3 [ 0 ] , INT_1 , IDENT_5 . getName ( ) , STRING_3 ) . get ( ) ; logger . info ( STRING_4 ) ; "<AssertPlaceHolder>" ; } get ( ) { if ( IDENT_9 ) { throw new java . lang . IllegalStateException ( STRING_5 ) ; } IDENT_9 = true ; return obj ; }
org . junit . Assert . assertEquals ( IDENT_6 , new java . util . HashMap ( IDENT_3 [ 0 ] . METHOD_2 ( STRING_3 ) ) ) 