METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . String > IDENT_0 = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; IDENT_0 . put ( STRING_0 , "value" ) ; org . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_1 . IDENT_2 . Builder ( ) . id ( STRING_1 ) . source ( "bar" 0 ) . target ( STRING_2 ) . proxy ( STRING_3 ) . filter ( STRING_4 ) . METHOD_1 ( true ) . METHOD_2 ( true ) . METHOD_3 ( true ) . METHOD_4 ( java . util . Arrays . asList ( "foo" , "bar" , STRING_5 ) ) . METHOD_5 ( METHOD_5 ) . build ( ) ; java . lang . String actual = mapper . METHOD_6 ( IDENT_3 ) ; java . lang . String expected = org . apache . commons . io . IDENT_4 . toString ( getClass ( ) . getResourceAsStream ( STRING_6 ) ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( java . lang . String , java . lang . String ) { return org . IDENT_1 . util . IDENT_5 . METHOD_7 ( new org . IDENT_1 . util . METHOD_8 ( IDENT_6 ) , new org . IDENT_1 . util . METHOD_8 ( IDENT_7 ) ) ; }
org . junit . Assert . assertTrue ( org . IDENT_1 . util . IDENT_5 . METHOD_7 ( actual , expected ) ) 