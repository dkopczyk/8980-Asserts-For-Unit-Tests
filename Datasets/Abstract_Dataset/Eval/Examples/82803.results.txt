METHOD_0 ( ) { java . io . File IDENT_0 = mock ( java . io . File . class ) ; when ( IDENT_0 . exists ( ) ) . thenReturn ( true ) ; com . github . IDENT_1 . helper . IDENT_2 IDENT_3 = mock ( com . github . IDENT_1 . helper . IDENT_2 . class ) ; when ( IDENT_3 . METHOD_1 ( ) ) . thenReturn ( IDENT_0 ) ; when ( IDENT_3 . METHOD_2 ( ) ) . thenReturn ( STRING_0 ) ; when ( IDENT_3 . METHOD_3 ( ) ) . thenReturn ( STRING_1 ) ; com . github . IDENT_1 . properties . IDENT_4 IDENT_5 = mock ( com . github . IDENT_1 . properties . IDENT_4 . class ) ; when ( IDENT_5 . METHOD_4 ( any ( java . io . InputStream . class ) ) ) . thenReturn ( new java . util . Properties ( ) ) ; com . github . IDENT_1 . properties . IDENT_6 IDENT_7 = METHOD_5 ( new com . github . IDENT_1 . properties . METHOD_6 ( IDENT_3 , IDENT_5 ) ) ; com . github . IDENT_1 . properties . IDENT_8 IDENT_9 = IDENT_7 . METHOD_7 ( ) ; verify ( IDENT_7 ) . METHOD_8 ( ) ; verify ( IDENT_7 , times ( 0 ) ) . METHOD_9 ( ) ; com . github . IDENT_1 . properties . IDENT_8 IDENT_10 = IDENT_7 . METHOD_8 ( ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( ) { com . github . IDENT_1 . properties . InputStream IDENT_11 = getClass ( ) . METHOD_10 ( ) . getResourceAsStream ( IDENT_12 . METHOD_2 ( ) ) ; return new com . github . IDENT_1 . properties . METHOD_11 ( IDENT_5 . METHOD_4 ( IDENT_11 ) , this ) ; }
org . junit . Assert . assertEquals ( IDENT_10 . properties , IDENT_9 . properties ) 