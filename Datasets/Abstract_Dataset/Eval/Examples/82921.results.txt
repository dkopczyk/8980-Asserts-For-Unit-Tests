METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . core . api . IDENT_2 . provider . IDENT_3 IDENT_4 = METHOD_1 ( new com . IDENT_0 . IDENT_1 . core . api . IDENT_2 . provider . METHOD_2 ( IDENT_5 , com . IDENT_0 . IDENT_1 . core . api . IDENT_2 . provider . IDENT_6 . IDENT_7 ) ) ; com . IDENT_0 . IDENT_1 . core . common . IDENT_8 IDENT_9 = mock ( com . IDENT_0 . IDENT_1 . core . common . IDENT_8 . class ) ; doReturn ( new java . util . ArrayList < org . apache . olingo . commons . api . IDENT_2 . provider . IDENT_10 > ( ) ) . when ( IDENT_4 ) . METHOD_3 ( anyString ( ) ) ; doReturn ( new java . util . ArrayList < org . apache . olingo . commons . api . IDENT_2 . provider . IDENT_11 > ( ) ) . when ( IDENT_9 ) . METHOD_4 ( anyString ( ) ) ; doReturn ( IDENT_9 ) . when ( IDENT_4 ) . METHOD_5 ( ) ; doReturn ( mock ( org . apache . olingo . commons . api . IDENT_2 . provider . IDENT_12 . class ) ) . when ( IDENT_4 ) . METHOD_6 ( anyString ( ) ) ; java . util . List < org . apache . olingo . commons . api . IDENT_2 . provider . IDENT_13 > IDENT_14 = IDENT_4 . METHOD_7 ( ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ) { java . util . List < org . apache . olingo . commons . api . IDENT_2 . provider . IDENT_13 > IDENT_14 = new java . util . ArrayList ( ) ; for ( java . lang . String IDENT_15 : METHOD_8 ( ) ) { IDENT_14 . add ( METHOD_9 ( IDENT_15 ) ) ; } return IDENT_14 ; }
org . junit . Assert . assertEquals ( 2 , IDENT_14 . size ( ) ) 