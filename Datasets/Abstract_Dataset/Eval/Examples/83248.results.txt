METHOD_0 ( ) { double [ ] IDENT_0 = new double [ ] { FLOAT_0 , FLOAT_1 , FLOAT_2 , FLOAT_3 , FLOAT_4 } ; for ( int IDENT_1 = 0 ; IDENT_1 < 5 ; ++ IDENT_1 ) { org . hipparchus . analysis . IDENT_2 . IDENT_3 factory = new org . hipparchus . analysis . IDENT_2 . METHOD_1 ( 1 , IDENT_1 ) ; for ( double x = FLOAT_5 ; x < FLOAT_6 ; x += FLOAT_7 ) { org . hipparchus . analysis . IDENT_2 . IDENT_4 IDENT_5 = factory . METHOD_2 ( 0 , x ) ; org . hipparchus . analysis . IDENT_2 . IDENT_4 IDENT_6 = IDENT_5 . METHOD_3 ( ) . METHOD_4 ( ) ; org . hipparchus . analysis . IDENT_2 . IDENT_4 IDENT_7 = IDENT_6 . METHOD_5 ( IDENT_5 ) ; for ( int n = 0 ; n <= IDENT_1 ; ++ n ) { "<AssertPlaceHolder>" ; } } } } METHOD_6 ( int [ ] ) { return data [ METHOD_7 ( ) . METHOD_8 ( ) . METHOD_9 ( IDENT_8 ) ] ; }
org . junit . Assert . assertEquals ( 0.0 , IDENT_7 . METHOD_6 ( n ) , IDENT_0 [ n ] ) 