METHOD_0 ( ) { org . hipparchus . analysis . IDENT_0 f = new org . hipparchus . analysis . function . METHOD_1 ( ) ; org . hipparchus . analysis . IDENT_1 . IDENT_2 IDENT_3 = METHOD_2 ( ) ; double IDENT_4 = - FLOAT_0 ; double IDENT_5 = FLOAT_1 ; for ( int i = 0 ; i < 10 ; i ++ ) { double solution = METHOD_3 ( IDENT_3 , 100 , f , IDENT_4 , IDENT_5 , IDENT_6 . IDENT_7 ) ; if ( ! ( java . lang . Double . METHOD_4 ( solution ) ) ) { "<AssertPlaceHolder>" ; } IDENT_4 OP_0 FLOAT_2 ; IDENT_5 += FLOAT_3 ; } } value ( double ) { return IDENT_8 . METHOD_5 ( x ) ; }
org . junit . Assert . assertTrue ( ( ( f . value ( solution ) ) >= 0.0 ) ) 