METHOD_0 ( ) { final double x = METHOD_1 ( ) ; final double [ ] data = new double [ ] { x , x , 1.0 , x , 2.0 , x , x , FLOAT_0 , x } ; final org . hipparchus . linear . IDENT_0 v = create ( data ) ; final double actual = v . METHOD_2 ( ) ; double expected = 0.0 ; for ( int i = 0 ; i < ( data . length ) ; i ++ ) { expected += org . hipparchus . util . IDENT_1 . METHOD_3 ( data [ i ] ) ; } "<AssertPlaceHolder>" ; } METHOD_3 ( int ) { final int i = x > > > INT_0 ; return ( x OP_0 ( ( OP_1 i ) + 1 ) ) + i ; }
org . junit . Assert . assertEquals ( "" , expected , actual , 0.0 ) 