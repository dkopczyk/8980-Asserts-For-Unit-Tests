METHOD_0 ( ) { final int size = 4 ; final int start = 5 ; final int IDENT_0 = 2 ; final int [ ] expected = new int [ ] { 5 , 7 , 9 , INT_0 } ; final int [ ] IDENT_1 = org . hipparchus . util . IDENT_2 . METHOD_1 ( size , start , IDENT_0 ) ; for ( int i = 0 ; i < size ; i ++ ) { "<AssertPlaceHolder>" ; } } METHOD_1 ( double , double , double ) { final int size = ( ( int ) ( ( ( end - start ) / IDENT_3 ) + 1 ) ) ; final double [ ] [ ] d = new double [ size ] [ 1 ] ; double value = start ; for ( int r = 0 ; r < size ; r ++ ) { d [ r ] [ 0 ] = value ; value += IDENT_3 ; } return new org . hipparchus . linear . METHOD_2 ( d , false ) ; }
org . junit . Assert . assertEquals ( expected [ i ] , IDENT_1 [ i ] ) 