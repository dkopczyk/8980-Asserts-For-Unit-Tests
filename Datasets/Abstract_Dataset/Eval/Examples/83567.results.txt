METHOD_0 ( ) { org . hipparchus . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = base ( ) . target ( new double [ ] { 1 } ) . METHOD_1 ( new org . hipparchus . linear . METHOD_2 ( new double [ ] { 1 } ) ) . start ( new double [ ] { 3 } ) . model ( new org . hipparchus . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_3 ( ) { public org . hipparchus . util . IDENT_6 < org . hipparchus . linear . IDENT_7 , org . hipparchus . linear . IDENT_8 > value ( final org . hipparchus . linear . IDENT_7 IDENT_9 ) { return new org . hipparchus . util . IDENT_6 < org . hipparchus . linear . IDENT_7 , org . hipparchus . linear . IDENT_8 > ( new org . hipparchus . linear . METHOD_4 ( new double [ ] { org . hipparchus . util . IDENT_10 . METHOD_5 ( IDENT_9 . METHOD_6 ( 0 ) , 4 ) } , false ) , new org . hipparchus . linear . METHOD_7 ( new double [ ] [ ] { new double [ ] { FLOAT_0 * ( org . hipparchus . util . IDENT_10 . METHOD_5 ( IDENT_9 . METHOD_6 ( 0 ) , 3 ) ) } } , false ) ) ; } } ) . build ( ) ; org . hipparchus . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_11 . IDENT_12 IDENT_13 = IDENT_14 . METHOD_8 ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( ) { return IDENT_15 ; }
org . junit . Assert . assertTrue ( ( ( IDENT_13 . METHOD_9 ( ) ) > 0 ) ) 