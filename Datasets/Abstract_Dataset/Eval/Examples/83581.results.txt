METHOD_0 ( ) { final double [ ] d = new double [ ] { FLOAT_0 , FLOAT_1 , FLOAT_2 , FLOAT_3 , FLOAT_4 , FLOAT_5 , FLOAT_6 , FLOAT_7 , FLOAT_0 , FLOAT_8 , FLOAT_9 , FLOAT_10 } ; METHOD_1 ( d , new java . lang . Object [ ] [ ] { new java . lang . Object [ ] { org . hipparchus . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 , FLOAT_11 } , new java . lang . Object [ ] { org . hipparchus . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_6 , FLOAT_3 } , new java . lang . Object [ ] { org . hipparchus . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_7 , FLOAT_3 } , new java . lang . Object [ ] { org . hipparchus . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_8 , FLOAT_3 } , new java . lang . Object [ ] { org . hipparchus . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_9 , FLOAT_12 } , new java . lang . Object [ ] { org . hipparchus . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_10 , FLOAT_13 } , new java . lang . Object [ ] { org . hipparchus . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_11 , FLOAT_14 } , new java . lang . Object [ ] { org . hipparchus . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_12 , FLOAT_15 } , new java . lang . Object [ ] { org . hipparchus . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_13 , FLOAT_16 } , new java . lang . Object [ ] { org . hipparchus . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_14 , FLOAT_17 } } , FLOAT_18 , FLOAT_19 ) ; for ( final org . hipparchus . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 e : IDENT_3 . IDENT_4 . values ( ) ) { METHOD_2 ( FLOAT_20 , e ) ; "<AssertPlaceHolder>" ; } } METHOD_3 ( ) { return new org . hipparchus . IDENT_0 . IDENT_1 . IDENT_15 . METHOD_4 ( ) ; }
org . junit . Assert . assertEquals ( FLOAT_9 , METHOD_3 ( ) . evaluate ( d ) , FLOAT_19 ) 