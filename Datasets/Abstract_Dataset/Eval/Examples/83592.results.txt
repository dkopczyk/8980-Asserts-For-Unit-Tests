METHOD_0 ( ) { double [ ] y = new double [ ] { FLOAT_0 , FLOAT_1 , FLOAT_2 } ; double [ ] x = new double [ ] { FLOAT_3 , FLOAT_4 , FLOAT_5 } ; org . hipparchus . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new org . hipparchus . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; for ( int i = 0 ; i < ( x . length ) ; i ++ ) { IDENT_3 . METHOD_2 ( x [ i ] , y [ i ] ) ; } "<AssertPlaceHolder>" ; } METHOD_3 ( ) { return org . hipparchus . util . IDENT_4 . max ( 0.0 , ( ( IDENT_5 ) - ( ( ( IDENT_6 ) * ( IDENT_6 ) ) / ( IDENT_7 ) ) ) ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_3 . METHOD_3 ( ) ) >= 0.0 ) ) 