METHOD_0 ( ) { final java . lang . String IDENT_0 = new java . io . File ( org . apache . hadoop . net . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( ) , STRING_0 ) . getAbsolutePath ( ) ; final org . apache . hadoop . net . IDENT_1 . IDENT_4 IDENT_5 = org . apache . hadoop . net . IDENT_1 . IDENT_4 . METHOD_2 ( IDENT_0 ) ; java . util . concurrent . IDENT_6 IDENT_7 = java . util . concurrent . IDENT_8 . METHOD_3 ( ) ; java . util . concurrent . IDENT_9 < java . lang . IDENT_10 > IDENT_11 = new java . util . concurrent . IDENT_9 < java . lang . IDENT_10 > ( ) { public org . apache . hadoop . net . IDENT_1 . IDENT_10 call ( ) { org . apache . hadoop . net . IDENT_1 . IDENT_4 conn ; try { conn = IDENT_5 . accept ( ) ; } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( STRING_1 , e ) ; } byte [ ] buf = new byte [ 100 ] ; for ( int i = 0 ; i < ( buf . length ) ; i ++ ) { buf [ i ] = 0 ; } try { "<AssertPlaceHolder>" ; } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( STRING_1 , e ) ; } return null ; } } ; java . util . concurrent . IDENT_12 < java . lang . IDENT_10 > future = IDENT_7 . METHOD_4 ( IDENT_11 ) ; org . apache . hadoop . net . IDENT_1 . IDENT_4 conn = org . apache . hadoop . net . IDENT_1 . IDENT_4 . connect ( IDENT_5 . getPath ( ) ) ; java . lang . Thread . sleep ( 50 ) ; conn . close ( ) ; IDENT_5 . close ( ) ; future . get ( 2 , TimeUnit . IDENT_13 ) ; } METHOD_5 ( ) { return in ; }
org . junit . Assert . assertEquals ( ( - 1 ) , conn . METHOD_5 ( ) . read ( ) ) 