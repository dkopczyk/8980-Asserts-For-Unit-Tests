METHOD_0 ( ) { org . apache . camel . component . IDENT_0 . streams . engine . IDENT_1 < java . lang . Integer > pub = new org . apache . camel . component . IDENT_0 . streams . engine . METHOD_1 ( service ) ; pub . METHOD_2 ( 2 ) ; java . util . concurrent . IDENT_2 < java . lang . Integer > queue = new java . util . concurrent . METHOD_3 ( ) ; org . apache . camel . component . IDENT_0 . streams . support . IDENT_3 < java . lang . Integer > IDENT_4 = new org . apache . camel . component . IDENT_0 . streams . support . IDENT_3 < java . lang . Integer > ( ) { @ org . apache . camel . component . IDENT_0 . streams . Override public void METHOD_4 ( java . lang . Integer o ) { queue . add ( o ) ; } } ; IDENT_4 . METHOD_5 ( 0 ) ; pub . METHOD_6 ( IDENT_4 ) ; java . lang . Thread . sleep ( 100 ) ; IDENT_4 . request ( 1 ) ; java . lang . Integer res = queue . METHOD_7 ( 1 , TimeUnit . IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( org . apache . camel . component . IDENT_6 . IDENT_7 , org . apache . camel . component . IDENT_6 . IDENT_8 ) { org . apache . ibatis . session . IDENT_9 session = IDENT_10 . METHOD_8 ( ) . METHOD_9 ( ) ; try { java . util . List < java . lang . Object > IDENT_11 = session . METHOD_10 ( IDENT_10 . METHOD_11 ( ) , null ) ; session . commit ( ) ; return IDENT_11 ; } catch ( java . lang . Exception e ) { session . METHOD_12 ( ) ; throw e ; } finally { session . close ( ) ; } }
org . junit . Assert . assertEquals ( new java . lang . Integer ( 2 ) , res ) 