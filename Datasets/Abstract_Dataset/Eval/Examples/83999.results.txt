METHOD_0 ( ) { final org . apache . hadoop . fs . Path IDENT_0 = new org . apache . hadoop . fs . Path ( org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . IDENT_3 , "foo" ) ; IDENT_4 . METHOD_1 ( IDENT_0 ) ; org . apache . hadoop . fs . Path IDENT_5 = new org . apache . hadoop . fs . Path ( IDENT_0 , STRING_0 ) ; final org . apache . hadoop . fs . Path IDENT_6 = new org . apache . hadoop . fs . Path ( org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . IDENT_3 , "bar" ) ; IDENT_4 . METHOD_1 ( IDENT_6 ) ; org . apache . hadoop . fs . Path IDENT_7 = new org . apache . hadoop . fs . Path ( IDENT_6 , STRING_0 ) ; IDENT_4 . METHOD_2 ( IDENT_0 , IDENT_8 . IDENT_9 ) ; IDENT_4 . METHOD_2 ( IDENT_6 , IDENT_8 . IDENT_9 ) ; IDENT_4 . METHOD_3 ( IDENT_0 , IDENT_10 . IDENT_11 , ( ( org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . IDENT_12 ) * 4 ) ) ; IDENT_4 . METHOD_3 ( IDENT_6 , IDENT_10 . IDENT_11 , ( ( org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . IDENT_12 ) * 2 ) ) ; org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_13 IDENT_14 = METHOD_4 ( IDENT_0 ) ; long IDENT_15 = ( org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . IDENT_12 ) * 3 ; int IDENT_16 = ( org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . IDENT_12 ) / 16 ; org . apache . hadoop . hdfs . IDENT_17 . METHOD_5 ( IDENT_4 , IDENT_5 , IDENT_16 , IDENT_15 , org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . IDENT_12 , org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . IDENT_18 , org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . IDENT_19 ) ; java . lang . Thread . sleep ( 1000 ) ; long IDENT_20 = METHOD_6 ( IDENT_0 ) . METHOD_7 ( ) . get ( IDENT_10 . IDENT_11 ) ; "<AssertPlaceHolder>" ; try { IDENT_4 . METHOD_8 ( IDENT_5 , IDENT_7 ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( java . lang . Throwable t ) { org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . LOG . info ( STRING_2 , t ) ; } } get ( IDENT_21 extends org . apache . hadoop . yarn . server . IDENT_22 . IDENT_23 ) { IDENT_24 result = null ; byte [ ] IDENT_25 = IDENT_26 . get ( METHOD_9 ( IDENT_27 ) ) ; if ( IDENT_25 == null ) { return null ; } try { result = METHOD_10 ( METHOD_11 ( IDENT_27 , IDENT_25 ) ) ; } catch ( java . io . IOException e ) { org . apache . hadoop . yarn . server . IDENT_22 . IDENT_28 . LOG . error ( ( ( STRING_3 + ( IDENT_27 . toString ( ) ) ) + STRING_4 ) ) ; org . apache . hadoop . yarn . server . IDENT_22 . IDENT_28 . LOG . error ( e . getMessage ( ) ) ; } return result ; }
org . junit . Assert . assertEquals ( IDENT_15 , IDENT_20 ) 