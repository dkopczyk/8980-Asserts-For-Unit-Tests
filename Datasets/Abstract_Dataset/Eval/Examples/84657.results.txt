METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 builder = new com . IDENT_0 . IDENT_1 . METHOD_1 ( new IDENT_3 . tuple . METHOD_2 ( STRING_0 , STRING_1 , STRING_2 , STRING_3 ) , new java . lang . Class < ? > [ ] { java . lang . String . class , com . IDENT_0 . IDENT_1 . Integer . class , int . class , boolean . class } ) ; com . IDENT_0 . IDENT_1 . IDENT_4 source = builder . METHOD_3 ( 1 , "1" , null , null ) . build ( ) ; java . util . List < IDENT_3 . tuple . IDENT_5 > IDENT_6 = source . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { return IDENT_6 ; }
org . junit . Assert . assertThat ( IDENT_6 . get ( 0 ) , org . hamcrest . CoreMatchers . is ( new IDENT_3 . tuple . METHOD_5 ( "1" , 1 , 0 , false ) ) ) 