METHOD_0 ( ) { java . lang . String pattern = STRING_0 ; org . apache . hadoop . hive . IDENT_0 . api . IDENT_1 IDENT_2 = new org . apache . hadoop . hive . IDENT_0 . api . METHOD_1 ( STRING_1 , STRING_2 , null ) ; org . apache . hadoop . hive . IDENT_0 . api . METHOD_1 IDENT_3 = new org . apache . hadoop . hive . IDENT_0 . api . METHOD_1 ( STRING_3 , STRING_2 , null ) ; org . apache . hadoop . hive . IDENT_0 . api . METHOD_1 IDENT_4 = new org . apache . hadoop . hive . IDENT_0 . api . METHOD_1 ( STRING_4 , STRING_2 , null ) ; when ( IDENT_5 . METHOD_2 ( pattern , pattern , null ) ) . thenReturn ( java . util . Collections . singletonList ( IDENT_2 ) ) ; when ( IDENT_6 . METHOD_3 ( ) ) . thenReturn ( IDENT_7 ) ; when ( IDENT_7 . METHOD_2 ( pattern , pattern , null ) ) . thenReturn ( java . util . Arrays . asList ( IDENT_3 , IDENT_4 ) ) ; com . IDENT_8 . IDENT_9 . IDENT_10 . mapping . service . IDENT_11 handler = service . METHOD_4 ( ) ; java . util . List < org . apache . hadoop . hive . IDENT_0 . api . METHOD_1 > expected = com . google . common . collect . Lists . newArrayList ( IDENT_2 , IDENT_3 ) ; java . util . List < org . apache . hadoop . hive . IDENT_0 . api . METHOD_1 > result = handler . METHOD_5 ( pattern , pattern , null ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . String , java . lang . String , java . util . List ) { java . util . function . IDENT_12 < org . apache . hadoop . hive . IDENT_0 . api . METHOD_1 , com . IDENT_8 . IDENT_9 . IDENT_10 . mapping . model . IDENT_13 , java . lang . Boolean > filter = ( IDENT_14 , mapping ) -> { boolean IDENT_15 = mapping . equals ( IDENT_16 ) ; boolean IDENT_17 = IDENT_18 . METHOD_6 ( ) . contains ( IDENT_14 . METHOD_7 ( ) ) ; return IDENT_15 || IDENT_17 ; } ; java . util . Map < com . IDENT_8 . IDENT_9 . IDENT_10 . mapping . model . IDENT_13 , java . lang . String > IDENT_19 = new java . util . METHOD_8 ( ) ; for ( com . IDENT_8 . IDENT_9 . IDENT_10 . mapping . model . IDENT_13 mapping : METHOD_9 ( ) ) { IDENT_19 . put ( mapping , IDENT_20 ) ; } return super . METHOD_5 ( IDENT_21 , IDENT_22 , IDENT_19 , filter ) ; }
org . junit . Assert . assertThat ( result , org . hamcrest . CoreMatchers . is ( expected ) ) 