METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( com . IDENT_1 . IDENT_2 . IDENT_3 . server . IDENT_4 . IDENT_5 ) ) . thenReturn ( STRING_0 ) ; org . apache . hadoop . hive . IDENT_6 . api . IDENT_7 table = new org . apache . hadoop . hive . IDENT_6 . api . METHOD_2 ( ) ; org . apache . hadoop . hive . IDENT_6 . api . METHOD_2 IDENT_8 = new org . apache . hadoop . hive . IDENT_6 . api . METHOD_2 ( ) ; when ( IDENT_9 . METHOD_0 ( STRING_0 , com . google . common . collect . Lists . newArrayList ( STRING_1 ) ) ) . thenReturn ( com . google . common . collect . Lists . newArrayList ( table ) ) ; when ( IDENT_0 . METHOD_3 ( table ) ) . thenReturn ( IDENT_8 ) ; java . util . List < org . apache . hadoop . hive . IDENT_6 . api . METHOD_2 > result = handler . METHOD_0 ( com . IDENT_1 . IDENT_2 . IDENT_3 . server . IDENT_4 . IDENT_5 , com . google . common . collect . Lists . newArrayList ( STRING_1 ) ) ; java . util . List < org . apache . hadoop . hive . IDENT_6 . api . METHOD_2 > expected = com . google . common . collect . Lists . newArrayList ( IDENT_8 ) ; "<AssertPlaceHolder>" ; } METHOD_0 ( java . lang . String , java . util . List ) { com . IDENT_1 . IDENT_2 . IDENT_3 . mapping . model . IDENT_10 mapping = IDENT_11 . METHOD_4 ( IDENT_12 ) ; java . util . List < org . apache . hadoop . hive . IDENT_6 . api . METHOD_2 > IDENT_13 = mapping . METHOD_5 ( ) . METHOD_0 ( mapping . METHOD_1 ( IDENT_12 ) , IDENT_14 ) ; java . util . List < org . apache . hadoop . hive . IDENT_6 . api . METHOD_2 > IDENT_15 = new java . util . ArrayList ( IDENT_13 . size ( ) ) ; for ( org . apache . hadoop . hive . IDENT_6 . api . METHOD_2 table : IDENT_13 ) { IDENT_15 . add ( mapping . METHOD_3 ( table ) ) ; } return IDENT_15 ; }
org . junit . Assert . assertThat ( result , org . hamcrest . CoreMatchers . is ( expected ) ) 