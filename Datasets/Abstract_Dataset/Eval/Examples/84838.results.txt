METHOD_0 ( ) { name . IDENT_0 . IDENT_1 . shared . model . IDENT_2 IDENT_3 = IDENT_4 . parse ( " " ) ; "<AssertPlaceHolder>" ; } parse ( java . lang . String ) { name . IDENT_0 . IDENT_1 . shared . model . IDENT_2 result = name . IDENT_0 . IDENT_1 . shared . model . IDENT_2 . IDENT_5 ; if ( ( time != null ) && ( ( time . trim ( ) . length ( ) ) != 0 ) ) { if ( ! ( name . IDENT_0 . IDENT_1 . client . IDENT_6 . view . IDENT_7 . IDENT_8 . test ( time ) ) ) { throw new name . IDENT_0 . IDENT_1 . client . IDENT_6 . view . IDENT_7 . METHOD_1 ( ( ( STRING_0 + time ) + STRING_1 ) ) ; } com . google . IDENT_9 . IDENT_10 . shared . IDENT_11 match = name . IDENT_0 . IDENT_1 . client . IDENT_6 . view . IDENT_7 . IDENT_8 . exec ( time ) ; java . lang . String IDENT_12 = match . METHOD_2 ( 1 ) ; if ( ! ( time . startsWith ( IDENT_12 ) ) ) { throw new name . IDENT_0 . IDENT_1 . client . IDENT_6 . view . IDENT_7 . METHOD_1 ( ( ( STRING_0 + time ) + STRING_1 ) ) ; } long IDENT_13 = METHOD_3 ( IDENT_12 ) ; name . IDENT_0 . IDENT_1 . client . IDENT_6 . view . IDENT_7 . IDENT_14 IDENT_15 = METHOD_4 ( match . METHOD_2 ( 2 ) ) ; long IDENT_16 = METHOD_3 ( match . METHOD_2 ( 3 ) ) ; name . IDENT_0 . IDENT_1 . client . IDENT_6 . view . IDENT_7 . IDENT_17 unit = METHOD_5 ( match . METHOD_2 ( 4 ) ) ; if ( IDENT_15 == ( name . IDENT_0 . IDENT_1 . client . IDENT_6 . view . IDENT_7 . IDENT_14 . IDENT_18 ) ) { if ( ( IDENT_13 < 0 ) || ( IDENT_13 > INT_0 ) ) { throw new name . IDENT_0 . IDENT_1 . client . IDENT_6 . view . IDENT_7 . METHOD_1 ( STRING_2 ) ; } if ( ( IDENT_16 < 0 ) || ( IDENT_16 > INT_1 ) ) { throw new name . IDENT_0 . IDENT_1 . client . IDENT_6 . view . IDENT_7 . METHOD_1 ( STRING_3 ) ; } } else { if ( ( unit == ( name . IDENT_0 . IDENT_1 . client . IDENT_6 . view . IDENT_7 . IDENT_17 . IDENT_19 ) ) || ( unit == ( name . IDENT_0 . IDENT_1 . client . IDENT_6 . view . IDENT_7 . IDENT_17 . IDENT_20 ) ) ) { if ( ( IDENT_13 < 0 ) || ( IDENT_13 > INT_0 ) ) { throw new name . IDENT_0 . IDENT_1 . client . IDENT_6 . view . IDENT_7 . METHOD_1 ( STRING_2 ) ; } if ( ( IDENT_16 < 0 ) || ( IDENT_16 > INT_2 ) ) { throw new name . IDENT_0 . IDENT_1 . client . IDENT_6 . view . IDENT_7 . METHOD_1 ( STRING_4 ) ; } if ( IDENT_16 < 10 ) { IDENT_16 OP_0 10 ; } IDENT_16 OP_0 FLOAT_0 ; } else { IDENT_16 = IDENT_13 ; IDENT_13 = 0 ; if ( ( IDENT_16 < 0 ) || ( IDENT_16 > INT_3 ) ) { throw new name . IDENT_0 . IDENT_1 . client . IDENT_6 . view . IDENT_7 . METHOD_1 ( STRING_5 ) ; } } } result = new name . IDENT_0 . IDENT_1 . shared . model . METHOD_6 ( IDENT_13 , IDENT_16 ) ; } return result ; }
org . junit . Assert . assertEquals ( METHOD_6 . IDENT_5 , IDENT_3 ) 