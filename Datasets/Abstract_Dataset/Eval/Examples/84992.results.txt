METHOD_0 ( ) { org . mockito . Mockito . METHOD_1 ( new com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 ( STRING_0 ) ) . when ( IDENT_3 ) . METHOD_3 ( ) ; boolean result = matcher . METHOD_4 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( T extends com . IDENT_0 . IDENT_4 . IDENT_5 ) { com . IDENT_0 . IDENT_4 . IDENT_6 IDENT_7 = IDENT_8 . METHOD_5 ( ) ; if ( METHOD_5 == null ) { throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } com . IDENT_0 . IDENT_4 . IDENT_9 IDENT_10 = METHOD_5 . METHOD_6 ( IDENT_8 ) ; boolean IDENT_11 = ! ( ( IDENT_10 == null ) || ( IDENT_10 . METHOD_7 ( ) ) ) ; @ com . IDENT_12 . matchers . METHOD_8 ( STRING_2 ) com . IDENT_0 . IDENT_1 . IDENT_13 < java . lang . String , java . lang . Object > IDENT_14 = METHOD_5 . METHOD_9 ( IDENT_8 ) ; IDENT_11 = IDENT_11 && ( IDENT_8 . METHOD_10 ( METHOD_9 ) . isEmpty ( ) ) ; status = ( IDENT_11 ) ? STRING_3 : STRING_4 ; return IDENT_11 ; }
org . junit . Assert . assertThat ( result , org . hamcrest . CoreMatchers . is ( false ) ) 