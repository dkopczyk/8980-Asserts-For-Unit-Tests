METHOD_0 ( ) { matcher = new com . IDENT_0 . matchers . IDENT_1 < com . IDENT_2 . IDENT_3 . IDENT_4 > ( STRING_0 ) ; org . mockito . Mockito . METHOD_1 ( new java . lang . RuntimeException ( STRING_1 ) ) . when ( IDENT_5 ) . METHOD_2 ( ) ; boolean result = matcher . METHOD_3 ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( T extends com . IDENT_2 . IDENT_3 . IDENT_6 ) { com . IDENT_2 . IDENT_3 . IDENT_4 IDENT_7 = IDENT_8 . METHOD_4 ( ) ; if ( METHOD_4 == null ) { throw new java . lang . IllegalArgumentException ( STRING_2 ) ; } com . IDENT_2 . IDENT_3 . IDENT_9 IDENT_10 = METHOD_4 . METHOD_5 ( IDENT_8 ) ; boolean IDENT_11 = ! ( ( IDENT_10 == null ) || ( IDENT_10 . METHOD_6 ( ) ) ) ; @ com . IDENT_0 . matchers . METHOD_7 ( STRING_3 ) com . IDENT_2 . IDENT_12 . IDENT_13 < java . lang . String , java . lang . Object > IDENT_14 = METHOD_4 . METHOD_8 ( IDENT_8 ) ; IDENT_11 = IDENT_11 && ( IDENT_8 . METHOD_9 ( METHOD_8 ) . isEmpty ( ) ) ; status = ( IDENT_11 ) ? STRING_4 : STRING_5 ; return IDENT_11 ; }
org . junit . Assert . assertThat ( result , org . hamcrest . CoreMatchers . is ( true ) ) 