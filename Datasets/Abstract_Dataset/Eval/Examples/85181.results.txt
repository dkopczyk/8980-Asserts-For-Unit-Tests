METHOD_0 ( ) { java . util . List < java . lang . String > IDENT_0 = new java . util . ArrayList < java . lang . String > ( ) ; IDENT_0 . add ( STRING_0 ) ; java . util . Properties props = new java . util . Properties ( ) ; props . setProperty ( IDENT_1 . IDENT_2 , STRING_1 ) ; props . setProperty ( IDENT_1 . IDENT_3 , STRING_2 ) ; props . setProperty ( IDENT_1 . IDENT_4 , STRING_0 ) ; props . setProperty ( IDENT_1 . IDENT_5 , STRING_3 ) ; props . setProperty ( IDENT_1 . IDENT_6 , "1" ) ; props . setProperty ( IDENT_1 . IDENT_7 , "2" ) ; java . lang . System . METHOD_1 ( props ) ; de . IDENT_8 . in . IDENT_9 . IDENT_10 . server . util . IDENT_11 IDENT_12 = new de . IDENT_8 . in . IDENT_9 . IDENT_10 . server . util . METHOD_2 ( ) ; IDENT_12 . METHOD_3 ( IDENT_13 , IDENT_14 , IDENT_15 ) ; java . lang . System . METHOD_4 ( IDENT_1 . IDENT_2 ) ; java . lang . System . METHOD_4 ( IDENT_1 . IDENT_3 ) ; java . lang . System . METHOD_4 ( IDENT_1 . IDENT_4 ) ; java . lang . System . METHOD_4 ( IDENT_1 . IDENT_5 ) ; java . lang . System . METHOD_4 ( IDENT_1 . IDENT_6 ) ; java . lang . System . METHOD_4 ( IDENT_1 . IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . util . List , java . util . List , java . util . List ) { java . lang . IDENT_16 IDENT_17 = java . lang . System . METHOD_5 ( ) ; if ( IDENT_17 != null ) { try { IDENT_17 . METHOD_6 ( ) ; } catch ( java . lang . IDENT_18 e ) { METHOD_7 ( STRING_4 ) ; METHOD_7 ( e . getMessage ( ) ) ; return ; } } java . util . Properties props = java . lang . System . METHOD_8 ( ) ; java . util . IDENT_19 < ? > IDENT_20 = props . METHOD_9 ( ) ; while ( IDENT_20 . METHOD_10 ( ) ) { try { java . lang . String key = IDENT_20 . METHOD_11 ( ) . toString ( ) ; if ( key . equals ( de . IDENT_8 . in . IDENT_9 . IDENT_10 . server . util . IDENT_2 ) ) { java . lang . String value = props . getProperty ( key ) ; METHOD_12 ( IDENT_13 , value ) ; } else if ( key . equals ( de . IDENT_8 . in . IDENT_9 . IDENT_10 . server . util . IDENT_3 ) ) { java . lang . String value = props . getProperty ( key ) ; METHOD_13 ( IDENT_13 , value ) ; } else if ( key . equals ( de . IDENT_8 . in . IDENT_9 . IDENT_10 . server . util . IDENT_4 ) ) { java . lang . String value = props . getProperty ( key ) ; METHOD_14 ( IDENT_14 , value ) ; } else if ( key . equals ( de . IDENT_8 . in . IDENT_9 . IDENT_10 . server . util . IDENT_5 ) ) { java . lang . String value = props . getProperty ( key ) ; METHOD_15 ( IDENT_15 , value ) ; } else if ( key . equals ( de . IDENT_8 . in . IDENT_9 . IDENT_10 . server . util . IDENT_6 ) ) { java . lang . String value = props . getProperty ( key ) ; METHOD_16 ( IDENT_15 , value ) ; } else if ( key . equals ( de . IDENT_8 . in . IDENT_9 . IDENT_10 . server . util . IDENT_7 ) ) { java . lang . String value = props . getProperty ( key ) ; METHOD_17 ( IDENT_15 , value ) ; } } catch ( java . lang . IllegalArgumentException e ) { METHOD_7 ( ( ( STRING_5 + ( e . getMessage ( ) ) ) + STRING_6 ) ) ; continue ; } } }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_14 ) 