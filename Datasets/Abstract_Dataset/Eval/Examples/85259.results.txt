METHOD_0 ( ) { com . IDENT_0 . streaming . config . IDENT_1 . config . put ( com . IDENT_0 . streaming . config . IDENT_1 . IDENT_2 , STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { if ( this . containsKey ( key ) ) { try { return java . lang . Boolean . valueOf ( get ( key ) . toString ( ) ) ; } catch ( java . lang . Exception e ) { com . IDENT_0 . streaming . exception . IDENT_3 exception = new com . IDENT_0 . streaming . exception . METHOD_2 ( com . IDENT_0 . streaming . exception . IDENT_4 . IDENT_5 , get ( key ) . toString ( ) , STRING_1 ) ; com . IDENT_0 . streaming . config . IDENT_6 . LOG . error ( IDENT_4 . IDENT_5 . METHOD_3 ( get ( key ) . toString ( ) , STRING_1 ) ) ; throw exception ; } } else { com . IDENT_0 . streaming . exception . METHOD_2 exception = new com . IDENT_0 . streaming . exception . METHOD_2 ( com . IDENT_0 . streaming . exception . IDENT_4 . IDENT_7 , key ) ; com . IDENT_0 . streaming . config . IDENT_6 . LOG . error ( IDENT_4 . IDENT_7 . METHOD_3 ( key ) ) ; throw exception ; } }
org . junit . Assert . assertTrue ( ( ( com . IDENT_0 . streaming . config . IDENT_1 . config . METHOD_1 ( com . IDENT_0 . streaming . config . IDENT_1 . IDENT_2 ) ) == true ) ) 