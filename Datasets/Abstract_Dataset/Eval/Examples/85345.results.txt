METHOD_0 ( ) { org . apache . hadoop . fs . Path IDENT_0 = new org . apache . hadoop . fs . Path ( ( ( IDENT_1 ) + STRING_0 ) ) ; org . apache . hadoop . conf . Configuration conf = IDENT_2 . METHOD_1 ( ) ; org . apache . hadoop . hbase . IDENT_3 IDENT_4 = new org . apache . hadoop . hbase . METHOD_2 ( STRING_1 ) ; org . apache . hadoop . hbase . IDENT_5 info = new org . apache . hadoop . hbase . METHOD_3 ( IDENT_4 . getName ( ) , STRING_2 . getBytes ( ) , STRING_3 . getBytes ( ) , false ) ; org . apache . hadoop . hbase . IDENT_6 . IDENT_7 IDENT_8 = org . apache . hadoop . hbase . IDENT_6 . IDENT_7 . METHOD_4 ( info , IDENT_0 , conf , IDENT_4 ) ; org . apache . hadoop . hbase . index . IDENT_9 spec = new org . apache . hadoop . hbase . index . METHOD_5 ( STRING_4 ) ; spec . METHOD_6 ( new org . apache . hadoop . hbase . METHOD_7 ( STRING_5 ) , STRING_6 , IDENT_10 . IDENT_11 , 4 ) ; spec . METHOD_6 ( new org . apache . hadoop . hbase . METHOD_7 ( STRING_5 ) , STRING_7 , IDENT_10 . IDENT_12 , 4 ) ; byte [ ] IDENT_13 = org . apache . hadoop . hbase . util . IDENT_14 . METHOD_8 ( ( - INT_0 ) ) ; org . apache . hadoop . hbase . client . IDENT_15 p = new org . apache . hadoop . hbase . client . METHOD_9 ( STRING_8 . getBytes ( ) ) ; p . add ( STRING_5 . getBytes ( ) , STRING_6 . getBytes ( ) , IDENT_13 ) ; org . apache . hadoop . hbase . client . METHOD_9 IDENT_16 = org . apache . hadoop . hbase . index . util . IDENT_17 . METHOD_10 ( p , spec , IDENT_8 ) ; int a = - INT_0 ; byte [ ] IDENT_18 = org . apache . hadoop . hbase . util . IDENT_14 . METHOD_8 ( ( a OP_0 ( 1 << INT_1 ) ) ) ; byte [ ] IDENT_19 = new byte [ 4 ] ; byte [ ] IDENT_20 = IDENT_16 . METHOD_11 ( ) ; java . lang . System . METHOD_12 ( IDENT_20 , INT_2 , IDENT_19 , 0 , IDENT_19 . length ) ; "<AssertPlaceHolder>" ; } equals ( java . lang . Object , java . lang . Object ) { return ( ( x == null ) && ( y == null ) ) || ( ( x != null ) && ( x . equals ( y ) ) ) ; }
org . junit . Assert . assertTrue ( org . apache . hadoop . hbase . util . IDENT_14 . equals ( IDENT_18 , IDENT_19 ) ) 