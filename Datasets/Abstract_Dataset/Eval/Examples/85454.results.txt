METHOD_0 ( ) { for ( org . apache . hadoop . hbase . io . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 : org . apache . hadoop . hbase . io . IDENT_0 . IDENT_4 . IDENT_5 ) { for ( boolean IDENT_6 : new boolean [ ] { false , true } ) { byte [ ] block = METHOD_1 ( IDENT_3 ) ; org . apache . hadoop . fs . Path path = new org . apache . hadoop . fs . Path ( org . apache . hadoop . hbase . io . IDENT_0 . IDENT_4 . IDENT_7 . METHOD_2 ( ) , ( STRING_0 + IDENT_3 ) ) ; org . apache . hadoop . hbase . io . IDENT_0 . IDENT_4 . LOG . info ( ( STRING_1 + path ) ) ; org . apache . hadoop . fs . IDENT_8 IDENT_9 = fs . create ( path ) ; int IDENT_10 = 0 ; int IDENT_11 = 50 ; for ( int i = 0 ; i < IDENT_11 ; ++ i ) { IDENT_9 . write ( block ) ; IDENT_10 += block . length ; } IDENT_9 . close ( ) ; org . apache . hadoop . fs . IDENT_12 is = fs . METHOD_3 ( path ) ; org . apache . hadoop . hbase . io . IDENT_0 . IDENT_13 . IDENT_14 IDENT_15 = new org . apache . hadoop . hbase . io . IDENT_0 . IDENT_13 . METHOD_4 ( is , IDENT_3 , IDENT_10 ) ; org . apache . hadoop . hbase . io . IDENT_0 . IDENT_13 b ; int IDENT_16 = 0 ; long pos = 0 ; while ( pos < IDENT_10 ) { b = IDENT_15 . METHOD_5 ( pos , block . length , IDENT_17 , IDENT_6 ) ; b . METHOD_6 ( ) ; pos += block . length ; IDENT_16 ++ ; } "<AssertPlaceHolder>" ; is . close ( ) ; } } } METHOD_6 ( ) { if ( ( 0 >= ( this . IDENT_18 ) ) || ( ( this . IDENT_18 ) > ( Integer . MAX_VALUE ) ) ) { throw new java . lang . IllegalArgumentException ( ( STRING_2 + ( this . IDENT_18 ) ) ) ; } if ( ( this . IDENT_19 ) <= 0 ) { throw new java . lang . IllegalArgumentException ( STRING_3 ) ; } if ( ( this . hash ) == null ) { throw new java . lang . IllegalArgumentException ( STRING_4 ) ; } if ( ( this . IDENT_20 ) < 0 ) { throw new java . lang . IllegalArgumentException ( STRING_5 ) ; } }
org . junit . Assert . assertEquals ( IDENT_11 , IDENT_16 ) 