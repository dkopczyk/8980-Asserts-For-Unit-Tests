METHOD_0 ( ) { org . apache . hadoop . hbase . IDENT_0 . IDENT_1 . IDENT_2 . LOG . info ( STRING_0 ) ; METHOD_1 ( 1 , 10 , ( - 1 ) ) ; org . apache . hadoop . fs . IDENT_3 IDENT_4 = fs . METHOD_2 ( org . apache . hadoop . hbase . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 ) [ 0 ] ; fs . METHOD_3 ( fs . METHOD_4 ( ) , conf ) ; org . apache . hadoop . hbase . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_5 ( org . apache . hadoop . hbase . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 , IDENT_4 , fs , conf , IDENT_8 ) ; org . apache . hadoop . hbase . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_6 ( org . apache . hadoop . hbase . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 , org . apache . hadoop . hbase . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 , IDENT_4 . getPath ( ) . toString ( ) , conf ) ; for ( java . lang . String IDENT_10 : org . apache . hadoop . hbase . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_11 ) { org . apache . hadoop . fs . Path IDENT_12 = METHOD_7 ( org . apache . hadoop . hbase . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 , org . apache . hadoop . hbase . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_13 , IDENT_10 ) ; "<AssertPlaceHolder>" ; } } METHOD_8 ( org . apache . hadoop . fs . Path , org . apache . hadoop . fs . IDENT_14 , org . apache . hadoop . conf . Configuration ) { int count = 0 ; org . apache . hadoop . hbase . IDENT_0 . IDENT_1 . IDENT_15 . IDENT_16 in = org . apache . hadoop . hbase . IDENT_0 . IDENT_1 . IDENT_15 . METHOD_9 ( fs , log , conf ) ; while ( ( in . next ( ) ) != null ) { count ++ ; } return count ; }
org . junit . Assert . assertEquals ( 10 , METHOD_8 ( IDENT_12 , fs , conf ) ) 