METHOD_0 ( ) { java . util . List < org . apache . IDENT_0 . IDENT_1 . IDENT_2 . token . IDENT_3 > tokens = java . util . Arrays . < org . apache . IDENT_0 . IDENT_1 . IDENT_2 . token . IDENT_3 > asList ( new org . apache . IDENT_0 . IDENT_1 . IDENT_2 . token . model . METHOD_1 ( null , null ) , new org . apache . IDENT_0 . IDENT_1 . IDENT_2 . token . model . METHOD_2 ( null , null ) , new org . apache . IDENT_0 . IDENT_1 . IDENT_2 . token . model . METHOD_3 ( null ) , new org . apache . IDENT_0 . IDENT_1 . IDENT_2 . token . db . METHOD_4 ( null , null ) , new org . apache . IDENT_0 . IDENT_1 . IDENT_2 . token . model . METHOD_5 ( null , null ) , new org . apache . IDENT_0 . IDENT_1 . IDENT_2 . token . model . METHOD_6 ( null , null ) , new org . apache . IDENT_0 . IDENT_1 . IDENT_2 . token . model . METHOD_7 ( null ) ) ; java . util . Collections . METHOD_8 ( tokens ) ; java . util . List < java . lang . String > actual = METHOD_9 ( tokens ) ; java . util . List < java . lang . String > expected = java . util . Arrays . asList ( STRING_0 , STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( java . util . List ) { java . util . List < java . lang . String > res = new java . util . ArrayList < java . lang . String > ( METHOD_8 . size ( ) ) ; for ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . token . IDENT_3 IDENT_4 : METHOD_8 ) { res . add ( IDENT_4 . getClass ( ) . METHOD_10 ( ) ) ; } return res ; }
org . junit . Assert . assertEquals ( expected , actual ) 