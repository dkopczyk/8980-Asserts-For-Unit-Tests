METHOD_0 ( ) { boolean [ ] [ ] grid = new boolean [ ] [ ] { new boolean [ ] { true , true , true } , new boolean [ ] { true , true , false } , new boolean [ ] { false , true , true } } ; "<AssertPlaceHolder>" ; } METHOD_1 ( boolean [ ] [ ] ) { if ( ( grid == null ) || ( ( grid . length ) == 0 ) ) return IDENT_0 . Collections . emptyList ( ) ; int IDENT_1 = ( grid . length ) - 1 ; int IDENT_2 = ( grid [ 0 ] . length ) - 1 ; java . util . List < IDENT_0 . IDENT_3 > path = new IDENT_0 . ArrayList ( ) ; IDENT_0 . Set < IDENT_0 . IDENT_3 > IDENT_4 = new IDENT_0 . HashSet ( ) ; getPath ( grid , IDENT_1 , IDENT_2 , path , IDENT_4 ) ; return path ; }
org . junit . Assert . assertEquals ( java . util . Arrays . asList ( new IDENT_0 . METHOD_2 ( 0 , 0 ) , new IDENT_0 . METHOD_2 ( 0 , 1 ) , new IDENT_0 . METHOD_2 ( 1 , 1 ) , new IDENT_0 . METHOD_2 ( 2 , 1 ) , new IDENT_0 . METHOD_2 ( 2 , 2 ) ) , s . METHOD_1 ( grid ) ) 