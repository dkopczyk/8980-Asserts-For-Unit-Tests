METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; java . util . ArrayList < java . lang . String > IDENT_2 = new java . util . ArrayList < java . lang . String > ( ) ; IDENT_2 . add ( STRING_2 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String , java . util . ArrayList , java . lang . String , boolean ) { boolean IDENT_3 = false ; java . util . IDENT_4 < java . lang . String , java . lang . Boolean > IDENT_5 = new java . util . IDENT_4 < java . lang . String , java . lang . Boolean > ( ) ; IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 = IDENT_10 . IDENT_11 . getInstance ( ) . METHOD_2 ( ) ; IDENT_10 . common . dto . IDENT_12 [ ] IDENT_13 = IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . METHOD_3 ( IDENT_14 , IDENT_15 ) ; int IDENT_16 = IDENT_13 . length ; for ( java . lang . String IDENT_17 : IDENT_18 ) { boolean found = false ; for ( int i = 0 ; i < IDENT_16 ; i ++ ) { if ( ( IDENT_13 [ i ] . type . equals ( IDENT_17 ) ) && ( ( IDENT_13 [ i ] . IDENT_19 ) == IDENT_19 ) ) { if ( ! ( IDENT_20 . equals ( "" ) ) ) { if ( IDENT_13 [ i ] . IDENT_20 . equals ( IDENT_20 ) ) { found = true ; } } else { found = true ; } } } IDENT_5 . put ( IDENT_17 , found ) ; } if ( ! ( IDENT_5 . METHOD_4 ( false ) ) ) { IDENT_3 = true ; } return IDENT_3 ; }
org . junit . Assert . assertTrue ( METHOD_1 ( IDENT_0 , IDENT_1 , IDENT_2 , "" , false ) ) 