METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 = IDENT_6 . IDENT_7 . getInstance ( ) . METHOD_1 ( ) ; IDENT_6 . common . dto . IDENT_8 [ ] IDENT_9 = IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_2 ( IDENT_0 , IDENT_1 ) ; int IDENT_10 = IDENT_9 . length ; java . util . ArrayList < IDENT_6 . common . dto . IDENT_8 > result = new java . util . ArrayList < IDENT_6 . common . dto . IDENT_8 > ( ) ; for ( IDENT_6 . common . dto . IDENT_8 IDENT_11 : IDENT_9 ) { if ( ( ( ( IDENT_11 . type . equals ( IDENT_12 . IDENT_13 . toString ( ) ) ) || ( IDENT_11 . type . equals ( IDENT_12 . IDENT_14 . toString ( ) ) ) ) || ( IDENT_11 . type . equals ( IDENT_12 . IDENT_15 . toString ( ) ) ) ) || ( IDENT_11 . type . equals ( IDENT_12 . IDENT_16 . toString ( ) ) ) ) { result . add ( IDENT_11 ) ; } } int IDENT_17 = result . size ( ) ; int IDENT_18 = IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_3 ( IDENT_0 , IDENT_1 ) . length ; boolean IDENT_19 = false ; if ( ( IDENT_18 > 1 ) && ( IDENT_18 == ( IDENT_10 - IDENT_17 ) ) ) { IDENT_19 = true ; } "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , java . lang . String ) { java . util . ArrayList < IDENT_6 . common . dto . IDENT_8 > IDENT_20 = IDENT_21 . METHOD_4 ( IDENT_22 , IDENT_23 ) ; java . util . ArrayList < IDENT_6 . common . dto . IDENT_8 > result = new java . util . ArrayList < IDENT_6 . common . dto . IDENT_8 > ( ) ; for ( IDENT_6 . common . dto . IDENT_8 IDENT_11 : IDENT_20 ) { if ( ( ( IDENT_11 . type . equals ( IDENT_12 . IDENT_24 . toString ( ) ) ) || ( IDENT_11 . type . equals ( IDENT_12 . IDENT_25 . toString ( ) ) ) ) || ( IDENT_11 . type . equals ( IDENT_12 . IDENT_26 . toString ( ) ) ) ) { result . add ( IDENT_11 ) ; } } IDENT_6 . common . dto . IDENT_8 [ ] IDENT_27 = result . toArray ( new IDENT_6 . common . dto . IDENT_8 [ result . size ( ) ] ) ; return IDENT_27 ; }
org . junit . Assert . assertTrue ( IDENT_19 ) 