test ( ) { org . IDENT_0 . common . IDENT_1 . IDENT_2 . METHOD_0 ( 1000 ) ; org . IDENT_0 . common . IDENT_1 . IDENT_2 . METHOD_1 ( 10 ) ; org . IDENT_0 . common . IDENT_1 . IDENT_2 . METHOD_2 ( 2 ) ; org . IDENT_0 . common . IDENT_1 . IDENT_2 . METHOD_3 ( 100 ) ; org . IDENT_0 . common . IDENT_1 . IDENT_2 . METHOD_4 ( INT_0 ) ; org . IDENT_0 . common . IDENT_1 . IDENT_2 . METHOD_5 ( true ) ; for ( int i = 1 ; i <= 100 ; i ++ ) { org . IDENT_0 . common . IDENT_1 . junit . IDENT_3 IDENT_4 = new org . IDENT_0 . common . IDENT_1 . junit . METHOD_6 ( ) ; org . IDENT_0 . common . IDENT_1 . IDENT_5 IDENT_6 = org . IDENT_0 . common . IDENT_1 . IDENT_2 . METHOD_7 ( IDENT_4 ) ; IDENT_6 . METHOD_8 ( ) ; System . out . METHOD_9 ( ) ; System . out . println ( ( i + " " ) ) ; System . out . println ( org . IDENT_0 . common . IDENT_1 . IDENT_2 . METHOD_10 ( ) ) ; org . IDENT_0 . common . IDENT_1 . IDENT_2 . sleep ( INT_1 ) ; } while ( ( org . IDENT_0 . common . IDENT_1 . IDENT_2 . METHOD_11 ( ) ) >= 1 ) { System . out . println ( ( STRING_0 + ( org . IDENT_0 . common . IDENT_1 . IDENT_2 . METHOD_12 ( ) ) ) ) ; org . IDENT_0 . common . IDENT_1 . IDENT_2 . sleep ( 1000 ) ; } System . out . println ( ( STRING_0 + ( org . IDENT_0 . common . IDENT_1 . IDENT_2 . METHOD_12 ( ) ) ) ) ; org . IDENT_0 . common . IDENT_1 . IDENT_2 . METHOD_13 ( ) ; "<AssertPlaceHolder>" ; } METHOD_13 ( ) { java . lang . Thread IDENT_7 = new java . lang . Thread ( org . IDENT_0 . common . IDENT_1 . IDENT_2 . METHOD_14 ( ) ) ; IDENT_7 . start ( ) ; }
org . junit . Assert . assertTrue ( true ) 