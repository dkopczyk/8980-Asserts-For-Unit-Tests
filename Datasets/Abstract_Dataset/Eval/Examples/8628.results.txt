METHOD_0 ( ) { java . util . Calendar c = java . util . Calendar . getInstance ( ) ; org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = context . METHOD_1 ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . class ) ; IDENT_4 . METHOD_2 ( "2" ) ; IDENT_4 . METHOD_3 ( c . getTime ( ) ) ; c . add ( Calendar . IDENT_5 , ( - 1 ) ) ; org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_6 = context . METHOD_1 ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . class ) ; IDENT_6 . METHOD_2 ( STRING_0 ) ; IDENT_6 . METHOD_3 ( c . getTime ( ) ) ; c . add ( Calendar . IDENT_5 , ( - 1 ) ) ; org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_7 = context . METHOD_1 ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . class ) ; IDENT_7 . METHOD_2 ( STRING_0 ) ; IDENT_7 . METHOD_3 ( c . getTime ( ) ) ; org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_8 IDENT_9 = context . METHOD_1 ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_8 . class ) ; IDENT_9 . METHOD_4 ( new java . math . BigDecimal ( 1 ) ) ; IDENT_9 . METHOD_5 ( STRING_1 ) ; IDENT_4 . METHOD_6 ( IDENT_9 ) ; org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_8 IDENT_10 = context . METHOD_1 ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_8 . class ) ; IDENT_10 . METHOD_4 ( new java . math . BigDecimal ( 2 ) ) ; IDENT_10 . METHOD_5 ( STRING_2 ) ; IDENT_6 . METHOD_6 ( IDENT_10 ) ; context . METHOD_7 ( ) ; org . apache . IDENT_0 . query . IDENT_11 < org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 > IDENT_12 = new org . apache . IDENT_0 . query . METHOD_8 ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . class ) ; IDENT_12 . METHOD_9 ( IDENT_3 . IDENT_13 . METHOD_10 ( ( ( java . util . List < org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_8 > ) ( null ) ) ) ) ; IDENT_12 . METHOD_11 ( IDENT_3 . IDENT_14 . METHOD_12 ( ) ) ; IDENT_12 . METHOD_11 ( IDENT_3 . IDENT_15 . METHOD_12 ( ) ) ; java . util . List < org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 > IDENT_16 = IDENT_12 . select ( context ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_17 . size ( ) ; }
org . junit . Assert . assertEquals ( 2 , IDENT_16 . size ( ) ) 