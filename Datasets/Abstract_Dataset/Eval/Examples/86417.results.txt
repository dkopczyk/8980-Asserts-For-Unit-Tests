METHOD_0 ( ) { IDENT_0 . METHOD_1 ( STRING_0 , STRING_1 , STRING_2 , 5 ) ; IDENT_0 . METHOD_2 ( new com . ibm . IDENT_1 . IDENT_2 . METHOD_3 ( ) ) ; com . ibm . IDENT_1 . IDENT_2 . IDENT_3 filter = new com . ibm . IDENT_1 . IDENT_2 . METHOD_4 ( ) ; java . util . List < com . ibm . IDENT_1 . IDENT_2 . IDENT_4 > results = filter . METHOD_5 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( com . ibm . IDENT_1 . IDENT_2 . IDENT_5 ) { java . util . List < com . ibm . IDENT_1 . IDENT_2 . filters . IDENT_4 > records = new java . util . ArrayList < com . ibm . IDENT_1 . IDENT_2 . filters . IDENT_4 > ( ) ; for ( com . ibm . IDENT_1 . IDENT_2 . IDENT_6 q : session . METHOD_6 ( ) ) { if ( ! ( q . METHOD_7 ( ) ) ) { com . ibm . IDENT_1 . IDENT_2 . filters . IDENT_4 IDENT_7 = new com . ibm . IDENT_1 . IDENT_2 . filters . METHOD_8 ( ) ; IDENT_7 . METHOD_9 ( q . METHOD_10 ( ) ) . METHOD_9 ( q . METHOD_11 ( ) ) ; records . add ( IDENT_7 ) ; } } return records ; }
org . junit . Assert . assertEquals ( 1 , results . size ( ) ) 