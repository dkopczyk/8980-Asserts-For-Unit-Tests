METHOD_0 ( ) { java . util . UUID id = java . util . UUID . METHOD_1 ( ) ; org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = context . METHOD_2 ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . class ) ; IDENT_4 . setId ( id ) ; context . METHOD_3 ( ) ; java . lang . String IDENT_5 = IDENT_6 . getString ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String ) { if ( IDENT_7 == null ) { throw new java . lang . METHOD_5 ( STRING_1 ) ; } int IDENT_8 = ( ( IDENT_7 . length ( ) ) > ( org . apache . IDENT_0 . exp . IDENT_9 . IDENT_10 ) ) ? org . apache . IDENT_0 . exp . IDENT_9 . IDENT_10 : ( IDENT_7 . length ( ) ) + 1 ; java . io . IDENT_11 reader = new java . io . METHOD_6 ( IDENT_7 ) ; org . apache . IDENT_0 . exp . parser . IDENT_12 stream = new org . apache . IDENT_0 . exp . parser . METHOD_7 ( reader , 1 , 1 , IDENT_8 ) ; org . apache . IDENT_0 . exp . parser . IDENT_13 IDENT_14 = new org . apache . IDENT_0 . exp . parser . METHOD_8 ( stream ) ; org . apache . IDENT_0 . exp . parser . IDENT_15 parser = new org . apache . IDENT_0 . exp . parser . METHOD_9 ( IDENT_14 ) ; try { return parser . expression ( ) ; } catch ( java . lang . Throwable IDENT_16 ) { java . lang . String message = IDENT_16 . getMessage ( ) ; throw new org . apache . IDENT_0 . exp . METHOD_10 ( STRING_2 , IDENT_16 , ( message != null ? message : "" ) ) ; } }
org . junit . Assert . assertEquals ( id , java . util . UUID . METHOD_4 ( IDENT_5 ) ) 