METHOD_0 ( ) { org . lnu . is . resource . IDENT_0 . IDENT_1 expected = new org . lnu . is . resource . IDENT_0 . METHOD_1 ( ) ; org . lnu . is . IDENT_2 . model . IDENT_3 IDENT_4 = new org . lnu . is . IDENT_2 . model . METHOD_2 ( ) ; when ( IDENT_5 . convert ( any ( org . lnu . is . resource . IDENT_0 . METHOD_1 . class ) ) ) . thenReturn ( IDENT_4 ) ; METHOD_3 ( org . lnu . is . IDENT_2 . exception . IDENT_6 . class ) . when ( IDENT_7 ) . METHOD_4 ( IDENT_4 ) ; org . lnu . is . resource . IDENT_0 . METHOD_1 actual = unit . METHOD_5 ( expected ) ; verify ( IDENT_5 ) . convert ( expected ) ; verify ( IDENT_7 ) . METHOD_4 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . lnu . is . IDENT_2 . model . METHOD_2 ) { if ( ! ( IDENT_8 ) ) { return ; } org . springframework . util . Assert . METHOD_6 ( IDENT_4 , STRING_0 ) ; try { javax . mail . IDENT_9 . IDENT_10 message = IDENT_11 . METHOD_7 ( ) ; org . springframework . mail . IDENT_12 . IDENT_13 IDENT_14 = new org . springframework . mail . IDENT_12 . METHOD_8 ( message , true , org . lnu . is . IDENT_2 . IDENT_15 . IDENT_16 . IDENT_17 ) ; IDENT_14 . METHOD_9 ( IDENT_4 . METHOD_10 ( ) ) ; IDENT_14 . METHOD_11 ( METHOD_12 ( IDENT_4 . METHOD_13 ( ) ) ) ; IDENT_14 . METHOD_14 ( METHOD_12 ( IDENT_4 . METHOD_15 ( ) ) ) ; IDENT_14 . METHOD_16 ( IDENT_4 . METHOD_17 ( ) ) ; IDENT_14 . METHOD_18 ( IDENT_4 . METHOD_19 ( ) , IDENT_4 . METHOD_20 ( ) ) ; for ( org . lnu . is . IDENT_2 . model . IDENT_18 IDENT_19 : IDENT_4 . METHOD_21 ( ) ) { IDENT_14 . METHOD_22 ( IDENT_19 . METHOD_23 ( ) , new org . springframework . core . io . METHOD_24 ( org . apache . commons . io . IDENT_20 . toByteArray ( IDENT_19 . METHOD_25 ( ) ) ) ) ; } IDENT_11 . METHOD_4 ( message ) ; } catch ( java . lang . Exception e ) { throw new org . lnu . is . IDENT_2 . exception . METHOD_26 ( org . lnu . is . IDENT_2 . IDENT_15 . IDENT_16 . IDENT_21 , e ) ; } }
org . junit . Assert . assertEquals ( expected , actual ) 