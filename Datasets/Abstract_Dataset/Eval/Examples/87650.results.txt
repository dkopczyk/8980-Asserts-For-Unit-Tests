METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; org . lnu . is . IDENT_1 . Query < org . lnu . is . domain . IDENT_2 . IDENT_3 > query = new org . lnu . is . IDENT_1 . Query < org . lnu . is . domain . IDENT_2 . IDENT_3 > ( org . lnu . is . domain . IDENT_2 . IDENT_3 . class , IDENT_0 ) ; java . lang . Integer offset = 0 ; java . lang . Integer IDENT_4 = 20 ; java . util . Map < java . lang . String , java . lang . Object > parameters = java . util . Collections . METHOD_1 ( ) ; java . lang . Class < org . lnu . is . domain . IDENT_2 . IDENT_3 > clazz = org . lnu . is . domain . IDENT_2 . IDENT_3 . class ; org . lnu . is . pagination . IDENT_5 < org . lnu . is . domain . IDENT_2 . IDENT_3 > request = new org . lnu . is . pagination . IDENT_5 < org . lnu . is . domain . IDENT_2 . IDENT_3 > ( query , offset , IDENT_4 , parameters , clazz ) ; long count = INT_0 ; org . lnu . is . domain . IDENT_2 . IDENT_3 IDENT_6 = new org . lnu . is . domain . IDENT_2 . METHOD_2 ( ) ; java . util . List < org . lnu . is . domain . IDENT_2 . METHOD_2 > entities = java . util . Arrays . asList ( IDENT_6 ) ; org . lnu . is . pagination . IDENT_7 < org . lnu . is . domain . IDENT_2 . METHOD_2 > expected = new org . lnu . is . pagination . IDENT_7 < org . lnu . is . domain . IDENT_2 . METHOD_2 > ( request . METHOD_3 ( ) , request . METHOD_4 ( ) , count , entities ) ; when ( IDENT_8 . METHOD_5 ( ) ) . thenReturn ( entities ) ; when ( IDENT_9 . METHOD_6 ( ) ) . thenReturn ( count ) ; when ( IDENT_10 . METHOD_7 ( STRING_0 , org . lnu . is . domain . IDENT_2 . METHOD_2 . class ) ) . thenReturn ( IDENT_8 ) ; when ( IDENT_10 . METHOD_7 ( STRING_1 , org . lnu . is . dao . persistence . Long . class ) ) . thenReturn ( IDENT_9 ) ; org . lnu . is . pagination . IDENT_7 < org . lnu . is . domain . IDENT_2 . METHOD_2 > actual = unit . search ( request ) ; verify ( IDENT_8 , times ( 0 ) ) . METHOD_8 ( anyString ( ) , any ( ) ) ; verify ( IDENT_9 , times ( 0 ) ) . METHOD_8 ( anyString ( ) , any ( ) ) ; verify ( IDENT_8 ) . METHOD_5 ( ) ; verify ( IDENT_9 ) . METHOD_6 ( ) ; verify ( IDENT_8 ) . METHOD_9 ( offset ) ; verify ( IDENT_8 ) . METHOD_10 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } verify ( T ) { METHOD_11 ( resource ) ; if ( ( IDENT_11 ) != null ) { IDENT_11 . verify ( resource ) ; } }
org . junit . Assert . assertEquals ( expected , actual ) 