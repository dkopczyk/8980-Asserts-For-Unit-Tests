METHOD_0 ( ) { java . lang . Long IDENT_0 = 1L ; java . lang . Long IDENT_1 = INT_0 ; java . lang . Long IDENT_2 = INT_1 ; java . lang . String [ ] value = new java . lang . String [ ] { java . lang . String . valueOf ( IDENT_0 ) , java . lang . String . valueOf ( IDENT_1 ) , java . lang . String . valueOf ( IDENT_2 ) } ; java . util . List < java . lang . Long > expected = java . util . Arrays . < java . lang . Long > asList ( IDENT_0 , IDENT_1 , IDENT_2 ) ; java . util . List < ? > actual = unit . METHOD_1 ( value ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String [ ] ) { java . util . List < java . lang . String > IDENT_3 = java . util . Arrays . asList ( values ) ; boolean IDENT_4 = IDENT_3 . stream ( ) . METHOD_2 ( ( e ) -> org . apache . commons . lang . math . IDENT_5 . METHOD_3 ( e ) ) ; return IDENT_4 ? IDENT_3 . stream ( ) . map ( ( e ) -> java . lang . Long . valueOf ( e ) ) . collect ( java . util . stream . IDENT_6 . toList ( ) ) : IDENT_3 ; }
org . junit . Assert . assertEquals ( expected , actual ) 