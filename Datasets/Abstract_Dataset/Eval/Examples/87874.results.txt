METHOD_0 ( ) { unit . METHOD_1 ( false ) ; unit . METHOD_2 ( false ) ; java . lang . Long IDENT_0 = 1L ; org . lnu . is . domain . IDENT_1 . IDENT_2 IDENT_1 = new org . lnu . is . domain . IDENT_1 . METHOD_3 ( ) ; IDENT_1 . setId ( IDENT_0 ) ; java . lang . Long IDENT_3 = INT_0 ; org . lnu . is . domain . IDENT_4 . IDENT_5 IDENT_6 = new org . lnu . is . domain . IDENT_4 . METHOD_4 ( ) ; IDENT_6 . setId ( IDENT_3 ) ; java . lang . Long IDENT_7 = INT_1 ; org . lnu . is . domain . IDENT_1 . status . type . IDENT_8 IDENT_9 = new org . lnu . is . domain . IDENT_1 . status . type . METHOD_5 ( ) ; IDENT_9 . setId ( IDENT_7 ) ; org . lnu . is . domain . IDENT_1 . status . IDENT_10 entity = new org . lnu . is . domain . IDENT_1 . status . METHOD_6 ( ) ; entity . METHOD_7 ( IDENT_1 ) ; entity . METHOD_8 ( IDENT_6 ) ; entity . METHOD_9 ( IDENT_9 ) ; java . util . Map < java . lang . String , java . lang . Object > expected = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; expected . put ( STRING_0 , IDENT_1 ) ; expected . put ( STRING_1 , IDENT_6 ) ; expected . put ( STRING_2 , IDENT_9 ) ; when ( IDENT_11 . METHOD_10 ( METHOD_11 ( ) ) ) . thenReturn ( IDENT_1 ) ; when ( IDENT_12 . METHOD_10 ( METHOD_11 ( ) ) ) . thenReturn ( IDENT_6 ) ; when ( IDENT_13 . METHOD_10 ( METHOD_11 ( ) ) ) . thenReturn ( IDENT_9 ) ; java . util . Map < java . lang . String , java . lang . Object > actual = unit . METHOD_12 ( entity ) ; verify ( IDENT_11 ) . METHOD_10 ( IDENT_0 ) ; verify ( IDENT_12 ) . METHOD_10 ( IDENT_3 ) ; verify ( IDENT_13 ) . METHOD_10 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( IDENT_14 ) { org . lnu . is . dao . dao . IDENT_15 . LOG . info ( STRING_3 , METHOD_13 ( ) . METHOD_14 ( ) , id ) ; return IDENT_16 . METHOD_15 ( METHOD_13 ( ) , id ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 