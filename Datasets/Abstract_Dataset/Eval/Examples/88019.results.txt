METHOD_0 ( ) { unit . METHOD_1 ( false ) ; java . lang . Long IDENT_0 = 1L ; org . lnu . is . domain . person . Person person = new org . lnu . is . domain . person . Person ( ) ; person . setId ( IDENT_0 ) ; java . lang . Long IDENT_1 = INT_0 ; org . lnu . is . domain . person . IDENT_2 . IDENT_3 IDENT_4 = new org . lnu . is . domain . person . IDENT_2 . METHOD_2 ( ) ; IDENT_4 . setId ( IDENT_1 ) ; java . lang . Long IDENT_5 = INT_1 ; org . lnu . is . domain . IDENT_6 . subject . IDENT_7 IDENT_8 = new org . lnu . is . domain . IDENT_6 . subject . METHOD_3 ( ) ; IDENT_8 . setId ( IDENT_5 ) ; java . lang . Double IDENT_9 = FLOAT_0 ; org . lnu . is . domain . person . IDENT_6 . subject . IDENT_10 entity = new org . lnu . is . domain . person . IDENT_6 . subject . METHOD_4 ( ) ; entity . METHOD_5 ( person ) ; entity . METHOD_6 ( IDENT_4 ) ; entity . METHOD_7 ( IDENT_8 ) ; entity . METHOD_8 ( IDENT_9 ) ; java . util . Map < java . lang . String , java . lang . Object > expected = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; expected . put ( STRING_0 , IDENT_11 . IDENT_12 ) ; expected . put ( STRING_1 , person ) ; expected . put ( STRING_2 , IDENT_4 ) ; expected . put ( STRING_3 , IDENT_8 ) ; expected . put ( STRING_4 , IDENT_9 ) ; when ( IDENT_13 . METHOD_9 ( METHOD_10 ( ) ) ) . thenReturn ( person ) ; when ( IDENT_14 . METHOD_9 ( METHOD_10 ( ) ) ) . thenReturn ( IDENT_4 ) ; when ( IDENT_15 . METHOD_9 ( METHOD_10 ( ) ) ) . thenReturn ( IDENT_8 ) ; java . util . Map < java . lang . String , java . lang . Object > actual = unit . METHOD_11 ( entity ) ; verify ( IDENT_13 ) . METHOD_9 ( IDENT_0 ) ; verify ( IDENT_14 ) . METHOD_9 ( IDENT_1 ) ; verify ( IDENT_15 ) . METHOD_9 ( IDENT_5 ) ; verify ( IDENT_16 , times ( 0 ) ) . METHOD_12 ( ) ; "<AssertPlaceHolder>" ; } METHOD_12 ( ) { return IDENT_17 ; }
org . junit . Assert . assertEquals ( expected , actual ) 