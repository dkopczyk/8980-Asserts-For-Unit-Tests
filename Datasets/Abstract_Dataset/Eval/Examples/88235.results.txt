METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final java . util . Date result = IDENT_1 . METHOD_1 ( IDENT_0 ) ; long expected = INT_0 ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { java . util . regex . IDENT_2 IDENT_3 = org . IDENT_4 . util . IDENT_5 . IDENT_6 . matcher ( IDENT_7 ) ; java . util . regex . IDENT_2 IDENT_8 = org . IDENT_4 . util . IDENT_5 . IDENT_9 . matcher ( IDENT_7 ) ; if ( ( IDENT_3 . matches ( ) ) || ( IDENT_8 . matches ( ) ) ) { java . lang . String IDENT_10 ; if ( ( IDENT_7 . charAt ( ( ( IDENT_7 . length ( ) ) - 1 ) ) ) == STRING_1 ) { IDENT_10 = IDENT_7 . replace ( STRING_2 , STRING_3 ) ; } else { int IDENT_11 = IDENT_7 . METHOD_2 ( STRING_4 ) ; IDENT_10 = ( IDENT_7 . substring ( 0 , IDENT_11 ) ) + ( IDENT_7 . substring ( ( IDENT_11 + 1 ) ) ) ; } if ( IDENT_3 . matches ( ) ) { MOD_0 ( IDENT_12 ) { return IDENT_12 . parse ( IDENT_10 ) ; } } else { IDENT_10 = IDENT_10 . replaceAll ( STRING_5 , STRING_6 ) ; MOD_0 ( IDENT_13 ) { return IDENT_13 . parse ( IDENT_10 ) ; } } } throw new java . text . METHOD_3 ( STRING_7 , 0 ) ; }
org . junit . Assert . assertEquals ( expected , result . getTime ( ) ) 