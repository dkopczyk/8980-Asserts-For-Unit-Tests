METHOD_0 ( ) { java . lang . String [ ] IDENT_0 = METHOD_1 ( net . sourceforge . IDENT_1 . client . update . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 , net . sourceforge . IDENT_1 . client . update . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String [ ] ) { java . util . ArrayList < java . lang . String > result = new java . util . ArrayList < java . lang . String > ( ) ; for ( java . lang . String line : IDENT_7 ) { java . lang . String IDENT_8 = IDENT_9 . METHOD_2 ( IDENT_10 , line ) ; if ( IDENT_8 . contains ( IDENT_11 . IDENT_12 ) ) { java . lang . String [ ] IDENT_13 = IDENT_8 . split ( IDENT_11 . IDENT_12 ) ; for ( java . lang . String IDENT_14 : IDENT_13 ) { result . add ( IDENT_14 ) ; } } else { result . add ( IDENT_8 ) ; } } return result . toArray ( new java . lang . String [ result . size ( ) ] ) ; }
org . junit . Assert . assertEquals ( ( ( net . sourceforge . IDENT_1 . client . update . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_6 . length ) + 1 ) , IDENT_0 . length ) 