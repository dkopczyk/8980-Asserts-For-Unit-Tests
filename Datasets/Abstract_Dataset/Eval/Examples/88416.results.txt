METHOD_0 ( ) { int [ ] IDENT_0 = new int [ ] { 7 } ; expect ( IDENT_1 . METHOD_1 ( 7 ) ) . METHOD_2 ( 7 ) ; expect ( IDENT_1 . METHOD_3 ( 7 ) ) . METHOD_2 ( STRING_0 ) ; IDENT_2 . close ( ) ; expect ( IDENT_2 . next ( ) ) . andReturn ( true ) . times ( 3 ) ; expect ( IDENT_2 . next ( ) ) . andReturn ( false ) ; expect ( IDENT_2 . METHOD_4 ( 7 ) ) . andReturn ( IDENT_3 . IDENT_4 ) ; expect ( IDENT_2 . METHOD_4 ( 7 ) ) . andReturn ( IDENT_3 . IDENT_5 ) ; expect ( IDENT_2 . METHOD_4 ( 7 ) ) . andReturn ( IDENT_3 . IDENT_6 ) ; IDENT_7 . METHOD_5 ( ) ; IDENT_8 = new net . sourceforge . IDENT_9 . IDENT_10 . IDENT_11 . METHOD_6 ( IDENT_2 , IDENT_0 ) ; IDENT_8 . next ( null ) ; "<AssertPlaceHolder>" ; IDENT_7 . METHOD_7 ( ) ; } get ( int ) { if ( IDENT_12 ) { return super . get ( IDENT_13 ) ; } else { return IDENT_14 [ IDENT_13 ] ; } }
org . junit . Assert . assertNotNull ( IDENT_8 . get ( 0 ) ) 