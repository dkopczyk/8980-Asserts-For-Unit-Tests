METHOD_0 ( ) { java . sql . IDENT_0 IDENT_1 = new java . sql . METHOD_1 ( STRING_0 ) ; if ( IDENT_2 . METHOD_2 ( IDENT_1 ) ) { final java . lang . String IDENT_3 = IDENT_2 . format ( IDENT_1 ) ; "<AssertPlaceHolder>" ; if ( "" . equals ( IDENT_3 ) ) { org . junit . Assert . fail ( STRING_1 ) ; } } } format ( java . lang . Throwable ) { if ( IDENT_4 == null ) { throw new java . lang . IllegalArgumentException ( STRING_2 ) ; } java . lang . StringBuilder result = new java . lang . StringBuilder ( ) ; java . lang . String IDENT_5 = "" ; java . lang . Throwable IDENT_6 = IDENT_4 ; if ( IDENT_4 instanceof net . sourceforge . IDENT_7 . IDENT_8 . sql . IDENT_9 ) { IDENT_5 = ( ( net . sourceforge . IDENT_7 . IDENT_8 . sql . IDENT_9 ) ( IDENT_4 ) ) . METHOD_3 ( ) ; IDENT_6 = IDENT_4 . METHOD_4 ( ) ; } java . lang . String IDENT_10 = null ; if ( ( ( IDENT_11 ) != null ) && ( IDENT_11 . METHOD_2 ( IDENT_6 ) ) ) { try { IDENT_10 = IDENT_11 . format ( IDENT_6 ) ; } catch ( java . lang . Exception e ) { net . sourceforge . IDENT_7 . IDENT_8 . util . IDENT_12 . IDENT_13 . error ( ( STRING_3 + ( e . getMessage ( ) ) ) , e ) ; } } if ( IDENT_10 != null ) { result . append ( IDENT_10 ) ; } else { result . append ( METHOD_5 ( IDENT_6 ) ) ; } if ( ( IDENT_5 != null ) && ( ! ( "" . equals ( IDENT_5 ) ) ) ) { result . append ( "\n" ) ; result . append ( IDENT_5 ) ; } return result . toString ( ) ; }
org . junit . Assert . assertNotNull ( IDENT_3 ) 