METHOD_0 ( ) { java . util . ArrayList < java . awt . IDENT_0 > IDENT_1 = new java . util . ArrayList < java . awt . IDENT_0 > ( ) ; IDENT_1 . add ( new java . awt . METHOD_1 ( INT_0 , INT_1 ) ) ; IDENT_1 . add ( new java . awt . METHOD_1 ( INT_2 , 10 ) ) ; IDENT_1 . add ( new java . awt . METHOD_1 ( INT_3 , INT_4 ) ) ; IDENT_1 . add ( new java . awt . METHOD_1 ( INT_5 , INT_0 ) ) ; IDENT_1 . add ( new java . awt . METHOD_1 ( 50 , INT_6 ) ) ; IDENT_1 . add ( new java . awt . METHOD_1 ( INT_4 , INT_2 ) ) ; IDENT_1 . add ( new java . awt . METHOD_1 ( 10 , INT_3 ) ) ; IDENT_1 . add ( new java . awt . METHOD_1 ( INT_7 , INT_5 ) ) ; IDENT_1 . add ( new java . awt . METHOD_1 ( INT_1 , INT_7 ) ) ; IDENT_1 . add ( new java . awt . METHOD_1 ( INT_8 , 50 ) ) ; IDENT_1 . add ( new java . awt . METHOD_1 ( 100 , INT_9 ) ) ; IDENT_1 . add ( new java . awt . METHOD_1 ( INT_10 , INT_8 ) ) ; IDENT_1 . add ( new java . awt . METHOD_1 ( INT_6 , 20 ) ) ; IDENT_1 . add ( new java . awt . METHOD_1 ( INT_9 , INT_10 ) ) ; IDENT_1 . add ( new java . awt . METHOD_1 ( 20 , INT_11 ) ) ; IDENT_1 . add ( new java . awt . METHOD_1 ( INT_11 , 100 ) ) ; IDENT_2 . IDENT_3 . geometry . IDENT_4 IDENT_5 = IDENT_2 . IDENT_3 . geometry . IDENT_6 . METHOD_2 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { return this . IDENT_7 . size ( ) ; }
org . junit . Assert . assertEquals ( 8 , IDENT_5 . METHOD_3 ( ) ) 