METHOD_0 ( ) { IDENT_0 . IDENT_1 IDENT_2 = IDENT_0 . IDENT_3 . METHOD_1 ( getClass ( ) . getResource ( STRING_0 ) . METHOD_2 ( ) ) ; IDENT_0 . process . IDENT_4 image = IDENT_2 . METHOD_3 ( ) ; IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 IDENT_10 = new IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_4 ( IDENT_5 . IDENT_6 . IDENT_11 . IDENT_12 . IDENT_13 ) ; IDENT_10 . METHOD_5 ( true ) ; java . util . Map < java . lang . Integer , IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_4 . Result > IDENT_14 = IDENT_10 . METHOD_6 ( image ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( IDENT_0 . process . IDENT_4 ) { int [ ] IDENT_15 = IDENT_5 . IDENT_6 . IDENT_16 . IDENT_17 . METHOD_7 ( IDENT_18 ) ; IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_4 . Result [ ] IDENT_14 = METHOD_6 ( IDENT_18 , IDENT_15 , new IDENT_0 . IDENT_7 . METHOD_8 ( ) ) ; java . util . Map < java . lang . Integer , IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_4 . Result > map = new java . util . IDENT_19 < java . lang . Integer , IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_4 . Result > ( ) ; for ( int i = 0 ; i < ( IDENT_15 . length ) ; i ++ ) { map . put ( IDENT_15 [ i ] , IDENT_14 [ i ] ) ; } return map ; }
org . junit . Assert . assertEquals ( 1 , IDENT_14 . size ( ) ) 