METHOD_0 ( ) { IDENT_0 . process . IDENT_1 image = new IDENT_0 . process . METHOD_1 ( 100 , 100 ) ; for ( int y = INT_0 ; y < INT_1 ; y ++ ) { for ( int x = INT_0 ; x < INT_1 ; x ++ ) { image . set ( x , y , 255 ) ; } } for ( IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 type : IDENT_5 . IDENT_6 . values ( ) ) { IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 IDENT_7 = type . METHOD_2 ( 5 ) ; IDENT_0 . process . IDENT_1 result = IDENT_2 . IDENT_3 . IDENT_4 . IDENT_8 . METHOD_3 ( image , IDENT_7 ) ; for ( int y = INT_0 ; y < INT_1 ; y ++ ) { for ( int x = INT_0 ; x < INT_1 ; x ++ ) { "<AssertPlaceHolder>" ; } } } } get ( int , int ) { if ( x < 0 ) return ( ( int ) ( this . value ) ) ; if ( y < 0 ) return ( ( int ) ( this . value ) ) ; if ( x >= ( this . image . METHOD_4 ( ) ) ) return ( ( int ) ( this . value ) ) ; if ( y >= ( this . image . METHOD_5 ( ) ) ) return ( ( int ) ( this . value ) ) ; return this . image . get ( x , y ) ; }
org . junit . Assert . assertEquals ( image . get ( x , y ) , result . get ( x , y ) ) 