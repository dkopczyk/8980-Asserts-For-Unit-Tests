METHOD_0 ( ) { final net . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = IDENT_1 . op ( net . IDENT_0 . IDENT_1 . map . IDENT_4 . IDENT_5 . class , out , in , new net . IDENT_6 . algorithm . IDENT_4 . METHOD_1 ( 1 , false ) , new net . IDENT_0 . IDENT_1 . map . IDENT_4 . IDENT_7 . METHOD_2 ( ) ) ; IDENT_3 . run ( ) ; for ( final net . IDENT_6 . type . IDENT_8 . IDENT_9 . IDENT_10 t : out ) { "<AssertPlaceHolder>" ; } } get ( ) { net . IDENT_0 . IDENT_1 . IDENT_11 . IDENT_12 . IDENT_13 . METHOD_3 ( IDENT_14 ) ; final long [ ] offset = IDENT_14 . METHOD_4 ( ) ; for ( int d = 0 ; d < ( max . length ) ; d ++ ) { offset [ d ] += IDENT_15 [ d ] ; } final net . IDENT_6 . view . IDENT_16 < T > res = net . IDENT_6 . view . IDENT_17 . METHOD_5 ( IDENT_18 , offset , IDENT_19 ) ; return IDENT_20 ? net . IDENT_6 . view . IDENT_17 . METHOD_6 ( res ) : res ; }
org . junit . Assert . assertEquals ( 9 , t . get ( ) ) 