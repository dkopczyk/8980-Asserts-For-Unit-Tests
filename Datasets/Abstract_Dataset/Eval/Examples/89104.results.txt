METHOD_0 ( ) { final java . util . List < net . IDENT_0 . algorithm . IDENT_1 . IDENT_2 > IDENT_3 = new java . util . ArrayList ( ) ; IDENT_3 . add ( new net . IDENT_0 . algorithm . IDENT_1 . METHOD_1 ( 1 ) ) ; IDENT_3 . add ( new net . IDENT_0 . algorithm . IDENT_1 . METHOD_1 ( 1 ) ) ; IDENT_3 . add ( new net . IDENT_0 . algorithm . IDENT_1 . METHOD_2 ( 1 , false ) ) ; IDENT_3 . add ( new net . IDENT_0 . algorithm . IDENT_1 . METHOD_3 ( 2 , 1 , false ) ) ; @ net . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_4 ( STRING_0 ) final net . IDENT_0 . IDENT_8 < net . IDENT_0 . type . IDENT_9 . IDENT_10 . IDENT_11 > IDENT_12 = ( ( net . IDENT_0 . IDENT_8 < net . IDENT_0 . type . IDENT_9 . IDENT_10 . IDENT_11 > ) ( IDENT_5 . run ( net . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_13 . class , net . IDENT_0 . IDENT_8 . class , in , IDENT_3 , false ) ) ) ; final net . IDENT_0 . IDENT_14 . IDENT_15 < net . IDENT_0 . type . IDENT_9 . IDENT_10 . IDENT_11 > IDENT_16 = net . IDENT_0 . algorithm . IDENT_6 . IDENT_17 . METHOD_5 ( in , IDENT_3 , 1 ) ; final net . IDENT_0 . IDENT_18 < net . IDENT_0 . type . IDENT_9 . IDENT_10 . IDENT_11 > IDENT_19 = IDENT_12 . METHOD_6 ( ) ; final net . IDENT_0 . IDENT_18 < net . IDENT_0 . type . IDENT_9 . IDENT_10 . IDENT_11 > IDENT_20 = IDENT_16 . METHOD_6 ( ) ; while ( IDENT_19 . hasNext ( ) ) "<AssertPlaceHolder>" ; } next ( ) { ( k ) ++ ; IDENT_21 . METHOD_7 ( k , IDENT_22 ) ; return IDENT_21 . get ( ) ; }
org . junit . Assert . assertEquals ( IDENT_19 . next ( ) . get ( ) , IDENT_20 . next ( ) . get ( ) ) 