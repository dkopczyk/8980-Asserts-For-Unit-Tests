METHOD_0 ( ) { final double [ ] IDENT_0 = new double [ ] { FLOAT_0 , FLOAT_1 , FLOAT_2 , - FLOAT_3 } ; final double [ ] IDENT_1 = new double [ ] { FLOAT_4 , FLOAT_5 , - 2 , FLOAT_6 } ; for ( int i = 0 ; i < ( IDENT_0 . length ) ; i ++ ) { final net . IDENT_2 . IDENT_3 IDENT_4 = new net . IDENT_2 . METHOD_1 ( IDENT_0 ) ; IDENT_4 . METHOD_2 ( IDENT_1 [ i ] , i ) ; for ( int j = 0 ; j < 4 ; j ++ ) { double expected = IDENT_0 [ j ] ; if ( i == j ) expected += IDENT_1 [ j ] ; "<AssertPlaceHolder>" ; } } } METHOD_3 ( int ) { return position . METHOD_3 ( d ) ; }
org . junit . Assert . assertEquals ( IDENT_4 . METHOD_3 ( j ) , expected , 0 ) 