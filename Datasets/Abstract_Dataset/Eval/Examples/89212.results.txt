METHOD_0 ( ) { final long [ ] size = new long [ ] { 5 , 5 } ; final net . IDENT_0 . IDENT_1 . array . IDENT_2 < net . IDENT_0 . type . IDENT_3 . IDENT_4 . IDENT_5 , net . IDENT_0 . IDENT_1 . IDENT_6 . array . IDENT_7 > IDENT_1 = net . IDENT_0 . IDENT_1 . array . IDENT_8 . METHOD_1 ( size ) ; java . math . BigInteger IDENT_9 = java . math . BigInteger . IDENT_10 ; java . math . BigInteger IDENT_11 = java . math . BigInteger . IDENT_10 ; java . math . BigInteger next = java . math . BigInteger . IDENT_12 ; java . math . BigInteger IDENT_13 = java . math . BigInteger . valueOf ( 2 ) ; IDENT_13 = IDENT_13 . METHOD_2 ( INT_0 ) ; for ( final net . IDENT_0 . type . IDENT_3 . IDENT_4 . IDENT_5 t : IDENT_1 ) { t . set ( IDENT_11 . METHOD_3 ( IDENT_13 ) ) ; next = IDENT_11 . add ( IDENT_9 . METHOD_4 ( java . math . BigInteger . valueOf ( INT_1 ) ) ) ; IDENT_9 = IDENT_11 ; IDENT_11 = next ; } final long [ ] expected = new long [ ] { 1L , 0L , INT_2 , 0L , INT_3 , 0L , INT_4 , 0L , INT_5 , 0L , INT_6 , 0L , INT_7 , 0L , INT_8 , 0L , INT_9 , 0L , INT_10 , 0L , INT_11 , 0L , INT_12 , 0L , INT_13 , 0L , INT_14 , 1L , - INT_15 , INT_16 , - INT_17 , INT_18 , INT_19 , INT_20 , INT_21 , INT_22 , INT_23 , INT_24 , - INT_25 , INT_26 , INT_27 , INT_28 , - INT_29 , INT_30 , INT_31 , INT_32 , - INT_33 , INT_34 , - INT_35 , INT_36 } ; final long [ ] actual = IDENT_1 . update ( null ) . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { return data ; }
org . junit . Assert . assertArrayEquals ( expected , actual ) 