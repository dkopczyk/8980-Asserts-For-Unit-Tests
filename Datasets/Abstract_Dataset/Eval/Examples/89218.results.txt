METHOD_0 ( ) { "<AssertPlaceHolder>" ; } METHOD_1 ( int , int , int , int , float , float ) { final java . util . ArrayList < net . IDENT_0 . IDENT_1 > IDENT_2 = new java . util . ArrayList < net . IDENT_0 . IDENT_1 > ( ) ; final java . util . IDENT_3 IDENT_4 = new java . util . METHOD_2 ( INT_0 ) ; final float [ ] p = new float [ IDENT_5 ] ; final float size = max - min ; for ( int i = 0 ; i < IDENT_6 ; ++ i ) { for ( int d = 0 ; d < IDENT_5 ; ++ d ) p [ d ] = ( ( IDENT_4 . METHOD_3 ( ) ) * size ) + min ; final net . IDENT_0 . IDENT_1 t = new net . IDENT_0 . METHOD_4 ( p ) ; IDENT_2 . add ( t ) ; } long start = java . lang . System . currentTimeMillis ( ) ; final net . IDENT_0 . IDENT_7 < net . IDENT_0 . METHOD_4 > IDENT_8 = new net . IDENT_0 . IDENT_7 < net . IDENT_0 . METHOD_4 > ( IDENT_2 , IDENT_2 ) ; final net . IDENT_0 . IDENT_9 . IDENT_10 < net . IDENT_0 . METHOD_4 > IDENT_11 = new net . IDENT_0 . IDENT_9 . IDENT_10 < net . IDENT_0 . METHOD_4 > ( IDENT_8 , IDENT_12 ) ; final long IDENT_13 = ( java . lang . System . currentTimeMillis ( ) ) - start ; System . out . println ( ( ( STRING_0 + IDENT_13 ) + STRING_1 ) ) ; start = java . lang . System . currentTimeMillis ( ) ; final java . util . ArrayList < net . IDENT_0 . METHOD_4 > IDENT_14 = new java . util . ArrayList < net . IDENT_0 . METHOD_4 > ( ) ; for ( int i = 0 ; i < IDENT_15 ; ++ i ) { for ( int d = 0 ; d < IDENT_5 ; ++ d ) p [ d ] = ( ( ( ( IDENT_4 . METHOD_3 ( ) ) * 2 ) * size ) + min ) - ( size / 2 ) ; final net . IDENT_0 . METHOD_4 t = new net . IDENT_0 . METHOD_4 ( p ) ; IDENT_14 . add ( t ) ; } final net . IDENT_0 . METHOD_4 [ ] IDENT_16 = new net . IDENT_0 . METHOD_4 [ IDENT_12 ] ; for ( final net . IDENT_0 . METHOD_4 t : IDENT_14 ) { IDENT_11 . search ( t ) ; for ( int i = 0 ; i < IDENT_12 ; ++ i ) { IDENT_16 [ i ] = IDENT_11 . METHOD_5 ( i ) . get ( ) ; } final net . IDENT_0 . METHOD_4 [ ] IDENT_17 = net . IDENT_0 . IDENT_18 . IDENT_19 . METHOD_6 ( IDENT_2 , t , IDENT_12 ) ; for ( int i = 0 ; i < IDENT_12 ; ++ i ) { boolean equal = true ; for ( int d = 0 ; d < IDENT_5 ; ++ d ) if ( ( IDENT_16 [ i ] . METHOD_7 ( d ) ) != ( IDENT_17 [ i ] . METHOD_7 ( d ) ) ) equal = false ; if ( ! equal ) { System . out . println ( ( ( ( i + 1 ) + STRING_2 ) + t ) ) ; System . out . println ( ( STRING_3 + ( IDENT_16 [ i ] ) ) ) ; System . out . println ( ( STRING_4 + ( IDENT_17 [ i ] ) ) ) ; return false ; } } } final long IDENT_20 = ( java . lang . System . currentTimeMillis ( ) ) - start ; System . out . println ( ( ( STRING_5 + IDENT_20 ) + STRING_1 ) ) ; start = java . lang . System . currentTimeMillis ( ) ; for ( final net . IDENT_0 . METHOD_4 t : IDENT_14 ) { IDENT_11 . search ( t ) ; for ( int i = 0 ; i < IDENT_12 ; ++ i ) { IDENT_16 [ i ] = IDENT_11 . METHOD_5 ( i ) . get ( ) ; IDENT_16 [ i ] . getClass ( ) ; } } final long IDENT_21 = ( java . lang . System . currentTimeMillis ( ) ) - start ; System . out . println ( ( ( STRING_6 + IDENT_21 ) + STRING_1 ) ) ; System . out . println ( ( ( STRING_7 + ( IDENT_13 + IDENT_21 ) ) + STRING_1 ) ) ; start = java . lang . System . currentTimeMillis ( ) ; for ( final net . IDENT_0 . METHOD_4 t : IDENT_14 ) { final net . IDENT_0 . METHOD_4 [ ] IDENT_17 = net . IDENT_0 . IDENT_18 . IDENT_19 . METHOD_6 ( IDENT_2 , t , IDENT_12 ) ; IDENT_17 [ 0 ] . getClass ( ) ; } final long IDENT_22 = ( java . lang . System . currentTimeMillis ( ) ) - start ; System . out . println ( ( ( STRING_8 + IDENT_22 ) + STRING_1 ) ) ; return true ; }
org . junit . Assert . assertTrue ( net . IDENT_0 . IDENT_18 . IDENT_19 . METHOD_1 ( 3 , 3 , 1000 , 100 , ( - 5 ) , 5 ) ) 