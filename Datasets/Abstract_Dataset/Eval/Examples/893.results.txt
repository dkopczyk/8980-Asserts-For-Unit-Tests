METHOD_0 ( ) { System . out . println ( STRING_0 ) ; assert com . IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_3 . exists ( ) : STRING_1 ; assert com . IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_4 . exists ( ) : STRING_2 ; java . lang . String IDENT_5 = com . IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_3 . getAbsolutePath ( ) ; java . lang . Integer result = com . IDENT_0 . IDENT_1 . util . IDENT_6 . METHOD_1 ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { it . IDENT_7 . IDENT_8 . IDENT_9 encode = new it . IDENT_7 . IDENT_8 . METHOD_2 ( ) ; java . util . HashMap < java . lang . String , java . lang . String > IDENT_10 = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; java . lang . Integer time = 0 ; java . io . File IDENT_11 = null ; IDENT_11 = new java . io . File ( IDENT_5 ) ; IDENT_10 = encode . METHOD_1 ( IDENT_11 ) ; time += ( java . lang . Integer . METHOD_3 ( IDENT_10 . get ( METHOD_2 . IDENT_12 ) ) ) * INT_0 ; time += ( java . lang . Integer . METHOD_3 ( IDENT_10 . get ( METHOD_2 . IDENT_13 ) ) ) * INT_1 ; time += java . lang . Integer . METHOD_3 ( IDENT_10 . get ( METHOD_2 . IDENT_14 ) ) ; com . IDENT_0 . IDENT_1 . util . IDENT_6 . log ( ( STRING_3 + time ) ) ; return time ; }
org . junit . Assert . assertTrue ( ( result > 0 ) ) 