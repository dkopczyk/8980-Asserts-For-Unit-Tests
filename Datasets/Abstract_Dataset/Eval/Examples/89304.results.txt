METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; boolean result = IDENT_1 . METHOD_1 ( IDENT_2 , IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String ) { try { javax . xml . IDENT_3 . IDENT_4 IDENT_5 = javax . xml . IDENT_3 . IDENT_4 . newInstance ( STRING_1 ) ; javax . xml . IDENT_3 . IDENT_6 IDENT_7 = IDENT_5 . METHOD_2 ( ) ; java . io . File IDENT_8 = new java . io . File ( file ) ; com . IDENT_9 . IDENT_10 . IDENT_11 . action . impl . Configuration configuration = ( ( com . IDENT_9 . IDENT_10 . IDENT_11 . action . impl . Configuration ) ( IDENT_7 . METHOD_3 ( IDENT_8 ) ) ) ; boolean status = false ; java . util . List < com . IDENT_9 . IDENT_10 . IDENT_11 . action . impl . IDENT_12 > IDENT_13 = configuration . getProperty ( ) ; for ( java . util . Iterator < com . IDENT_9 . IDENT_10 . IDENT_11 . action . impl . IDENT_12 > iterator = IDENT_13 . iterator ( ) ; iterator . hasNext ( ) ; ) { com . IDENT_9 . IDENT_10 . IDENT_11 . action . impl . IDENT_12 property = iterator . next ( ) ; if ( property . getName ( ) . equals ( IDENT_0 ) ) { status = configuration . getProperty ( ) . remove ( property ) ; break ; } } if ( status ) { javax . xml . IDENT_3 . IDENT_14 IDENT_15 = IDENT_5 . METHOD_4 ( ) ; IDENT_15 . setProperty ( IDENT_14 . IDENT_16 , true ) ; IDENT_15 . METHOD_5 ( configuration , IDENT_8 ) ; return true ; } else { return false ; } } catch ( javax . xml . IDENT_3 . IDENT_17 e ) { e . printStackTrace ( ) ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; } return false ; }
org . junit . Assert . assertEquals ( false , result ) 