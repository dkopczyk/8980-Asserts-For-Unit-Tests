METHOD_0 ( ) { org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . log . info ( STRING_0 ) ; org . apache . IDENT_0 . IDENT_1 . IDENT_2 . content . IDENT_4 gen = new org . apache . IDENT_0 . IDENT_1 . IDENT_2 . content . METHOD_1 ( IDENT_5 , IDENT_6 , IDENT_7 , IDENT_8 , IDENT_9 , METHOD_1 . IDENT_10 . IDENT_11 ) ; java . lang . String IDENT_12 = METHOD_2 ( ) ; gen . METHOD_3 ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . types . IDENT_13 . METHOD_4 ( ) . getId ( ) ) ; gen . METHOD_5 ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . types . IDENT_13 . METHOD_6 ( ) . getId ( ) ) ; gen . METHOD_7 ( 2 ) ; gen . METHOD_8 ( 1 , 1 , IDENT_12 ) ; try { IDENT_7 . METHOD_9 ( IDENT_9 , IDENT_12 , null , IDENT_14 . IDENT_15 , true , null ) ; } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( ( STRING_1 + e ) ) ; } org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . log . info ( STRING_2 ) ; gen . METHOD_10 ( IDENT_16 , STRING_3 ) ; try { IDENT_7 . METHOD_11 ( IDENT_9 , IDENT_12 , STRING_3 , false , IDENT_17 . IDENT_18 , null , false , false , null ) ; org . junit . Assert . fail ( STRING_4 ) ; } catch ( org . apache . IDENT_0 . IDENT_1 . commons . exceptions . IDENT_19 e ) { "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( ( STRING_5 + e ) ) ; } org . apache . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . log . info ( STRING_6 ) ; } METHOD_11 ( java . lang . String , java . lang . String , java . lang . String , java . lang . Boolean , org . apache . IDENT_0 . IDENT_1 . commons . IDENT_20 . IDENT_17 , java . lang . String , java . lang . Boolean , java . lang . Boolean , org . apache . IDENT_0 . IDENT_1 . commons . data . IDENT_21 ) { org . apache . IDENT_0 . IDENT_1 . commons . impl . IDENT_22 url = METHOD_12 ( IDENT_23 , IDENT_24 , Constants . IDENT_25 ) ; url . METHOD_13 ( Constants . IDENT_26 , filter ) ; url . METHOD_13 ( Constants . IDENT_27 , IDENT_28 ) ; url . METHOD_13 ( Constants . IDENT_29 , IDENT_30 ) ; url . METHOD_13 ( Constants . IDENT_31 , IDENT_32 ) ; url . METHOD_13 ( Constants . IDENT_33 , IDENT_34 ) ; url . METHOD_13 ( Constants . IDENT_35 , IDENT_36 ) ; url . METHOD_13 ( Constants . IDENT_37 , METHOD_14 ( ) ) ; url . METHOD_13 ( Constants . IDENT_38 , METHOD_15 ( ) ) ; org . apache . IDENT_0 . IDENT_1 . client . IDENT_39 . spi . http . Response IDENT_40 = read ( url ) ; java . util . Map < java . lang . String , java . lang . Object > json = METHOD_16 ( IDENT_40 . METHOD_17 ( ) , IDENT_40 . METHOD_18 ( ) ) ; org . apache . IDENT_0 . IDENT_1 . commons . impl . IDENT_41 IDENT_42 = new org . apache . IDENT_0 . IDENT_1 . client . IDENT_39 . spi . IDENT_43 . METHOD_19 ( IDENT_23 , this ) ; return org . apache . IDENT_0 . IDENT_1 . commons . impl . IDENT_44 . METHOD_20 ( json , IDENT_42 ) ; }
org . junit . Assert . assertTrue ( ( e instanceof org . apache . IDENT_0 . IDENT_1 . commons . exceptions . IDENT_19 ) ) 