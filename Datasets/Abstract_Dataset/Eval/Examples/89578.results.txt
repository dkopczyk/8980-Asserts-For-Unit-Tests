METHOD_0 ( ) { org . slc . sli . api . security . context . validator . Set < java . lang . String > IDENT_0 = new org . slc . sli . api . security . context . validator . HashSet < java . lang . String > ( org . slc . sli . api . security . context . validator . Arrays . asList ( IDENT_1 . METHOD_1 ( ) , IDENT_2 . METHOD_1 ( ) , IDENT_3 . METHOD_1 ( ) , IDENT_4 . METHOD_1 ( ) ) ) ; "<AssertPlaceHolder>" ; } validate ( java . lang . String , org . slc . sli . api . security . context . validator . Set ) { if ( ! ( METHOD_2 ( IDENT_5 . IDENT_6 , IDENT_7 , IDENT_8 ) ) ) { return Collections . IDENT_9 ; } org . slc . sli . api . security . context . validator . Set < java . lang . String > IDENT_10 = new org . slc . sli . api . security . context . validator . HashSet < java . lang . String > ( ) ; org . slc . sli . domain . IDENT_11 IDENT_12 = new org . slc . sli . domain . METHOD_3 ( new org . slc . sli . domain . METHOD_4 ( STRING_0 , org . slc . sli . domain . METHOD_4 . IDENT_13 , IDENT_8 ) ) ; IDENT_12 . METHOD_5 ( org . slc . sli . api . security . context . validator . Arrays . asList ( STRING_1 , STRING_0 ) ) ; org . slc . sli . api . security . context . validator . IDENT_14 . LOG . info ( STRING_2 , IDENT_8 ) ; METHOD_6 ( IDENT_12 ) ; java . lang . IDENT_15 < org . slc . sli . domain . Entity > IDENT_16 = repo . METHOD_7 ( IDENT_5 . IDENT_17 , IDENT_12 ) ; org . slc . sli . api . security . context . validator . Map < java . lang . String , org . slc . sli . api . security . context . validator . Set < java . lang . String > > IDENT_18 = new org . slc . sli . api . security . context . validator . HashMap < java . lang . String , org . slc . sli . api . security . context . validator . Set < java . lang . String > > ( ) ; METHOD_8 ( IDENT_18 , IDENT_16 ) ; org . slc . sli . api . security . context . validator . Set < java . lang . String > IDENT_19 = METHOD_9 ( ) ; if ( ( IDENT_19 . isEmpty ( ) ) || ( IDENT_18 . isEmpty ( ) ) ) { return Collections . IDENT_9 ; } for ( java . util . Map . Entry < java . lang . String , org . slc . sli . api . security . context . validator . Set < java . lang . String > > entry : IDENT_18 . entrySet ( ) ) { org . slc . sli . api . security . context . validator . Set < java . lang . String > IDENT_20 = new org . slc . sli . api . security . context . validator . HashSet < java . lang . String > ( entry . getValue ( ) ) ; IDENT_20 . METHOD_10 ( IDENT_19 ) ; if ( ( IDENT_20 . size ( ) ) != 0 ) { IDENT_10 . add ( entry . getKey ( ) ) ; } } IDENT_10 . addAll ( METHOD_11 ( IDENT_5 . IDENT_21 , STRING_3 ) ) ; IDENT_10 . addAll ( METHOD_11 ( IDENT_5 . IDENT_22 , STRING_4 ) ) ; IDENT_12 = new org . slc . sli . domain . METHOD_3 ( new org . slc . sli . domain . METHOD_4 ( STRING_5 , STRING_6 , IDENT_19 ) ) ; java . lang . IDENT_15 < org . slc . sli . domain . Entity > IDENT_23 = repo . METHOD_7 ( IDENT_5 . IDENT_24 , IDENT_12 ) ; org . slc . sli . api . security . context . validator . List < java . lang . String > IDENT_25 = new org . slc . sli . api . security . context . validator . ArrayList < java . lang . String > ( ) ; for ( org . slc . sli . domain . Entity e : IDENT_23 ) { java . lang . Object value = e . METHOD_12 ( ) . get ( STRING_7 ) ; if ( value != null ) { if ( org . slc . sli . api . security . context . validator . List . class . METHOD_13 ( value . getClass ( ) ) ) { IDENT_25 . addAll ( ( ( org . slc . sli . api . security . context . validator . List < java . lang . String > ) ( value ) ) ) ; } else if ( java . lang . String . class . METHOD_13 ( value . getClass ( ) ) ) { IDENT_25 . add ( ( ( java . lang . String ) ( value ) ) ) ; } } } IDENT_10 . addAll ( METHOD_14 ( IDENT_5 . IDENT_21 , STRING_3 , IDENT_25 ) ) ; IDENT_12 = new org . slc . sli . domain . METHOD_3 ( new org . slc . sli . domain . METHOD_4 ( STRING_8 , STRING_6 , IDENT_19 ) ) ; org . slc . sli . api . security . context . validator . List < java . lang . String > IDENT_26 = ( ( org . slc . sli . api . security . context . validator . List < java . lang . String > ) ( repo . METHOD_15 ( IDENT_5 . IDENT_27 , IDENT_12 ) ) ) ; IDENT_10 . addAll ( METHOD_14 ( IDENT_5 . IDENT_22 , STRING_4 , IDENT_26 ) ) ; IDENT_10 . METHOD_10 ( IDENT_8 ) ; return IDENT_10 ; }
org . junit . Assert . assertFalse ( validator . validate ( IDENT_5 . IDENT_6 , IDENT_0 ) . equals ( IDENT_0 ) ) 