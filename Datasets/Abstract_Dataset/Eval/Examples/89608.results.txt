METHOD_0 ( ) { org . mockito . Mockito . when ( IDENT_0 . getType ( ) ) . thenReturn ( IDENT_1 . IDENT_2 ) ; org . mockito . Mockito . when ( IDENT_0 . METHOD_1 ( ) ) . thenReturn ( body ) ; java . util . Set < java . lang . String > IDENT_3 = new java . util . HashSet < java . lang . String > ( java . util . Arrays . asList ( STRING_0 , STRING_1 ) ) ; org . mockito . Mockito . when ( IDENT_4 . METHOD_2 ( org . mockito . Mockito . eq ( org . slc . sli . IDENT_5 . IDENT_6 . context . resolver . impl . IDENT_7 . IDENT_8 ) , org . mockito . Mockito . eq ( IDENT_0 ) ) ) . thenReturn ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . slc . sli . domain . Entity ) { java . util . Set < java . lang . String > IDENT_3 = new java . util . HashSet < java . lang . String > ( ) ; java . util . Iterator < org . slc . sli . domain . Entity > IDENT_9 = repo . METHOD_3 ( IDENT_1 . IDENT_10 , org . springframework . data . mongodb . core . query . Query . query ( org . springframework . data . mongodb . core . query . IDENT_11 . METHOD_4 ( org . slc . sli . IDENT_5 . IDENT_6 . context . resolver . impl . IDENT_12 . IDENT_13 ) . is ( entity . METHOD_5 ( ) ) ) ) ; while ( IDENT_9 . hasNext ( ) ) { org . slc . sli . domain . Entity IDENT_14 = IDENT_9 . next ( ) ; IDENT_3 . addAll ( IDENT_15 . METHOD_2 ( IDENT_14 . METHOD_5 ( ) , entity ) ) ; } return IDENT_3 ; }
org . junit . Assert . assertTrue ( resolver . METHOD_2 ( IDENT_0 ) . equals ( IDENT_3 ) ) 