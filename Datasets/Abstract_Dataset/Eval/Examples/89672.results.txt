METHOD_0 ( ) { java . lang . String result = org . slc . sli . IDENT_0 . util . IDENT_1 . METHOD_1 ( STRING_0 , IDENT_2 , IDENT_3 ) ; "<AssertPlaceHolder>" ; for ( java . lang . String collection : IDENT_4 ) { com . mongodb . IDENT_5 IDENT_6 = new com . mongodb . METHOD_2 ( ) ; IDENT_6 . put ( STRING_1 , 1 ) ; com . mongodb . IDENT_5 options = METHOD_3 ( ( ( ( IDENT_2 ) + STRING_2 ) + collection ) , IDENT_7 . get ( collection ) ) ; org . mockito . Mockito . verify ( IDENT_8 . get ( collection ) , org . mockito . Mockito . times ( 1 ) ) . METHOD_4 ( IDENT_6 , options ) ; } } METHOD_1 ( java . lang . String , java . lang . String , org . springframework . data . mongodb . core . IDENT_9 ) { java . util . Set < org . slc . sli . IDENT_0 . util . IDENT_10 > IDENT_11 = org . slc . sli . IDENT_0 . util . IDENT_1 . IDENT_12 . parse ( IDENT_13 ) ; com . mongodb . IDENT_14 IDENT_15 = org . slc . sli . IDENT_0 . util . IDENT_1 . METHOD_5 ( db , IDENT_16 ) ; return org . slc . sli . IDENT_0 . util . IDENT_1 . METHOD_1 ( IDENT_11 , IDENT_15 ) ; }
org . junit . Assert . assertNull ( result ) 