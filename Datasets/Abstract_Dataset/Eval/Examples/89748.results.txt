METHOD_0 ( ) { final com . IDENT_0 . IDENT_1 . reader . IDENT_2 r = new com . IDENT_0 . IDENT_1 . reader . METHOD_1 ( java . util . Arrays . asList ( STRING_0 ) , java . util . Arrays . < java . lang . String > asList ( ) , java . util . Arrays . < java . lang . String > asList ( ) , 16 ) ; r . METHOD_2 ( STRING_0 , 1 , 1 , 3 , 5 , 7 , 9 , INT_0 , INT_1 , 15 ) ; r . METHOD_2 ( STRING_0 , 2 , 2 , 3 , 6 , 7 , 10 , INT_0 , INT_2 , 15 ) ; r . METHOD_2 ( STRING_0 , 4 , 4 , 5 , 6 , 7 , 12 , INT_1 , INT_2 , 15 ) ; r . METHOD_2 ( STRING_0 , 8 , 8 , 9 , 10 , INT_0 , 12 , INT_1 , INT_2 , 15 ) ; com . IDENT_0 . IDENT_3 . IDENT_4 . IDENT_5 session = new com . IDENT_0 . IDENT_3 . IDENT_4 . METHOD_3 ( r ) ; session . METHOD_4 ( new com . IDENT_0 . IDENT_3 . IDENT_6 [ ] { new com . IDENT_0 . IDENT_3 . METHOD_5 ( 1 , 0 , new int [ ] { 1 , 1 , 1 , 1 } , new com . IDENT_0 . IDENT_3 . IDENT_7 [ ] { new com . IDENT_0 . IDENT_3 . METHOD_6 ( STRING_0 , true , 1 , null , false ) , new com . IDENT_0 . IDENT_3 . METHOD_6 ( STRING_0 , true , 2 , null , false ) , new com . IDENT_0 . IDENT_3 . METHOD_6 ( STRING_0 , true , 4 , null , false ) , new com . IDENT_0 . IDENT_3 . METHOD_6 ( STRING_0 , true , 8 , null , false ) } ) } ) ; int [ ] arr = new int [ 16 ] ; session . METHOD_7 ( arr ) ; System . out . println ( java . util . Arrays . toString ( arr ) ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( int [ ] ) { if ( ( array . length ) != ( IDENT_8 . size ( ) ) ) { throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } for ( int i = ( array . length ) - 1 ; i >= 0 ; OP_0 i ) { array [ i ] = IDENT_8 . get ( i ) ; } }
org . junit . Assert . assertArrayEquals ( new int [ ] { 0 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 } , arr ) 