METHOD_0 ( ) { java . lang . String IDENT_0 = com . IDENT_1 . util . io . IDENT_2 . METHOD_1 ( STRING_0 , "" ) ; try { org . apache . lucene . index . IDENT_3 IDENT_4 = new org . apache . lucene . index . METHOD_2 ( IDENT_0 , new org . apache . lucene . analysis . METHOD_3 ( ) , true , METHOD_2 . IDENT_5 . IDENT_6 ) ; java . util . IDENT_7 IDENT_8 = new java . util . METHOD_4 ( ) ; for ( int i = 0 ; i < INT_0 ; ++ i ) { int IDENT_9 = ( IDENT_8 . METHOD_5 ( 5 ) ) + 5 ; org . apache . lucene . document . Document doc = new org . apache . lucene . document . Document ( ) ; for ( int t = 0 ; t < IDENT_9 ; ++ t ) { doc . add ( new org . apache . lucene . document . Field ( STRING_1 , java . lang . Integer . toString ( IDENT_8 . METHOD_5 ( INT_1 ) ) , Field . IDENT_10 . IDENT_11 , Field . IDENT_12 . IDENT_13 ) ) ; } IDENT_4 . METHOD_6 ( doc ) ; } IDENT_4 . close ( ) ; final java . util . concurrent . atomic . IDENT_14 IDENT_15 = new java . util . concurrent . atomic . METHOD_7 ( false ) ; com . IDENT_1 . IDENT_16 . api . IDENT_17 r = new com . IDENT_1 . IDENT_16 . lucene . METHOD_8 ( org . apache . lucene . index . IDENT_18 . METHOD_9 ( IDENT_0 ) ) { @ com . IDENT_1 . IDENT_19 . service . Override public void close ( ) throws java . io . IOException { super . close ( ) ; IDENT_15 . set ( true ) ; } } ; final java . util . concurrent . IDENT_20 executor = java . util . concurrent . IDENT_21 . METHOD_10 ( ) ; try { com . IDENT_1 . IDENT_19 . api . IDENT_22 session = new com . IDENT_1 . IDENT_19 . service . METHOD_11 ( new com . IDENT_1 . IDENT_19 . IDENT_23 . IDENT_24 [ ] { new com . IDENT_1 . IDENT_19 . IDENT_23 . METHOD_12 ( r ) } , new com . IDENT_1 . IDENT_19 . METHOD_13 ( new com . IDENT_1 . IDENT_19 . METHOD_14 ( Long . MAX_VALUE ) ) , executor , null ) ; session . close ( ) ; "<AssertPlaceHolder>" ; } finally { executor . METHOD_15 ( ) ; } } finally { com . IDENT_1 . util . io . IDENT_2 . delete ( IDENT_0 ) ; } } close ( ) { if ( IDENT_15 ) return ; METHOD_16 ( cache ) ; if ( ( IDENT_25 . METHOD_17 ( ) ) > 0 ) { com . IDENT_1 . IDENT_19 . IDENT_26 . log . error ( ( STRING_2 + ( IDENT_25 . METHOD_17 ( ) ) ) ) ; IDENT_25 . METHOD_16 ( IDENT_25 . METHOD_17 ( ) ) ; } IDENT_25 . close ( ) ; IDENT_15 = true ; }
org . junit . Assert . assertTrue ( IDENT_15 . get ( ) ) 