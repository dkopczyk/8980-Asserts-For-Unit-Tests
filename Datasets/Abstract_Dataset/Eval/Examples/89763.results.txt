test ( ) { java . util . IDENT_0 r = new java . util . METHOD_0 ( ) ; final int n = INT_0 ; int [ ] IDENT_1 = new int [ n ] ; int [ ] IDENT_2 = new int [ n ] ; int [ ] IDENT_3 = new int [ n ] ; int [ ] IDENT_4 = new int [ INT_1 ] ; for ( int IDENT_5 = 0 ; IDENT_5 < 10 ; ++ IDENT_5 ) { for ( int i = 0 ; i < n ; i ++ ) { int x = r . METHOD_1 ( ) ; IDENT_1 [ i ] = x ; IDENT_2 [ i ] = x ; } long IDENT_6 = - ( java . lang . System . currentTimeMillis ( ) ) ; java . util . Arrays . METHOD_2 ( IDENT_1 ) ; IDENT_6 += java . lang . System . currentTimeMillis ( ) ; System . out . println ( ( ( STRING_0 + IDENT_6 ) + STRING_1 ) ) ; IDENT_6 = - ( java . lang . System . currentTimeMillis ( ) ) ; com . IDENT_7 . util . core . METHOD_2 . IDENT_8 . METHOD_3 ( IDENT_2 , n , IDENT_3 , IDENT_4 ) ; IDENT_6 += java . lang . System . currentTimeMillis ( ) ; System . out . println ( ( ( STRING_2 + IDENT_6 ) + STRING_1 ) ) ; for ( int i = 0 ; i < n ; i ++ ) { "<AssertPlaceHolder>" ; } } } currentTimeMillis ( ) { return java . lang . System . currentTimeMillis ( ) ; }
org . junit . Assert . assertEquals ( IDENT_1 [ i ] , IDENT_2 [ i ] ) 