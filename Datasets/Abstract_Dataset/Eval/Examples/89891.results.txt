METHOD_0 ( ) { long IDENT_0 = java . lang . System . currentTimeMillis ( ) ; org . IDENT_1 . commons . tx . IDENT_2 . log . METHOD_1 ( STRING_0 , IDENT_0 ) ; java . util . IDENT_3 random = new java . util . METHOD_2 ( IDENT_0 ) ; int IDENT_4 = random . METHOD_3 ( ) ; byte [ ] tx = new byte [ ( random . METHOD_3 ( INT_0 ) ) + 1 ] ; byte [ ] IDENT_5 = new byte [ ( random . METHOD_3 ( INT_0 ) ) + 1 ] ; random . METHOD_4 ( tx ) ; random . METHOD_4 ( IDENT_5 ) ; org . IDENT_1 . commons . tx . IDENT_6 IDENT_7 = org . IDENT_1 . commons . tx . IDENT_6 . create ( IDENT_4 , tx , IDENT_5 ) ; org . IDENT_1 . commons . tx . IDENT_2 . log . METHOD_5 ( STRING_1 , IDENT_7 ) ; java . io . ByteArrayOutputStream IDENT_8 = new java . io . ByteArrayOutputStream ( INT_1 ) ; java . io . IDENT_9 IDENT_10 = new java . io . METHOD_6 ( IDENT_8 ) ; org . IDENT_1 . commons . tx . IDENT_6 . METHOD_7 ( IDENT_10 , IDENT_7 ) ; IDENT_10 . METHOD_8 ( ) ; IDENT_10 . close ( ) ; IDENT_8 . close ( ) ; byte [ ] IDENT_11 = IDENT_8 . toByteArray ( ) ; org . IDENT_1 . commons . tx . IDENT_2 . log . METHOD_5 ( STRING_2 , IDENT_11 . length ) ; java . io . ByteArrayInputStream IDENT_12 = new java . io . ByteArrayInputStream ( IDENT_11 ) ; java . io . IDENT_13 IDENT_14 = new java . io . METHOD_9 ( IDENT_12 ) ; org . IDENT_1 . commons . tx . IDENT_6 IDENT_15 = org . IDENT_1 . commons . tx . IDENT_6 . METHOD_10 ( IDENT_14 ) ; IDENT_14 . close ( ) ; IDENT_12 . close ( ) ; org . IDENT_1 . commons . tx . IDENT_2 . log . METHOD_5 ( STRING_3 , IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . String , java . lang . Object [ ] ) { org . IDENT_1 . test . IDENT_16 . log . METHOD_5 ( ( ( ( STRING_4 + ( cache . METHOD_11 ( ) . METHOD_12 ( ) ) ) + STRING_5 ) + format ) , params ) ; }
org . junit . Assert . assertEquals ( IDENT_7 , IDENT_15 ) 