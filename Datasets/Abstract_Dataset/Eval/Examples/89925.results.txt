METHOD_0 ( ) { org . IDENT_0 . eclipse . IDENT_1 . IDENT_2 IDENT_3 = mock ( org . IDENT_0 . eclipse . IDENT_1 . IDENT_2 . class ) ; org . eclipse . core . resources . IDENT_4 IDENT_1 = mock ( org . eclipse . core . resources . IDENT_4 . class ) ; org . IDENT_0 . eclipse . IDENT_1 . IDENT_5 IDENT_6 = new org . IDENT_0 . eclipse . IDENT_1 . METHOD_1 ( IDENT_3 ) ; org . eclipse . core . resources . IDENT_7 IDENT_8 = mock ( org . eclipse . core . resources . IDENT_7 . class ) ; when ( IDENT_1 . METHOD_2 ( ) ) . thenReturn ( IDENT_8 ) ; IDENT_6 . METHOD_3 ( IDENT_1 ) ; org . eclipse . core . runtime . IDENT_9 path = mock ( org . eclipse . core . runtime . IDENT_9 . class ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . eclipse . core . runtime . IDENT_9 ) { org . eclipse . core . resources . IDENT_7 root = METHOD_5 ( ) ; org . eclipse . core . resources . IDENT_10 IDENT_11 = root . METHOD_6 ( path ) ; if ( IDENT_11 == null ) { return null ; } org . IDENT_0 . eclipse . IDENT_1 . File file = new org . IDENT_0 . eclipse . IDENT_1 . File ( IDENT_11 . METHOD_7 ( ) . getPath ( ) ) ; if ( file . exists ( ) ) { return file ; } return null ; }
org . junit . Assert . assertNull ( IDENT_6 . METHOD_4 ( path ) ) 