METHOD_0 ( ) { java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { STRING_0 9 , STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_0 , STRING_0 8 , STRING_0 4 , STRING_0 2 , STRING_0 1 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_0 5 , STRING_0 0 , STRING_0 6 , STRING_0 3 , STRING_0 7 } ; for ( java . lang . String IDENT_1 : IDENT_0 ) { "<AssertPlaceHolder>" ; } } METHOD_1 ( java . lang . String ) { METHOD_2 ( s ) ; java . lang . String IDENT_2 = s . replaceAll ( STRING_10 , "" ) . replaceAll ( STRING_11 , "" ) ; METHOD_3 ( IDENT_2 . matches ( STRING_12 ) ) ; METHOD_3 ( ( ! ( IDENT_2 . matches ( STRING_13 ) ) ) ) ; METHOD_3 ( br . com . IDENT_3 . IDENT_4 . IDENT_5 . isValid ( IDENT_2 ) ) ; return new br . com . IDENT_3 . IDENT_4 . METHOD_4 ( IDENT_2 ) ; }
org . junit . Assert . assertNotNull ( br . com . IDENT_3 . IDENT_4 . METHOD_4 . METHOD_1 ( IDENT_1 ) ) 