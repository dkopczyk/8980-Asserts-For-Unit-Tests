METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . server . domain . Person person = new com . IDENT_0 . IDENT_1 . server . domain . METHOD_1 ( ) ; com . IDENT_0 . IDENT_1 . server . domain . IDENT_2 address = new com . IDENT_0 . IDENT_1 . server . domain . METHOD_2 ( ) ; doReturn ( person ) . when ( IDENT_3 ) . save ( ( ( com . IDENT_0 . IDENT_1 . server . domain . METHOD_1 ) ( person ) ) ) ; doReturn ( address ) . when ( IDENT_4 ) . save ( ( ( com . IDENT_0 . IDENT_1 . server . domain . METHOD_2 ) ( address ) ) ) ; com . IDENT_0 . IDENT_1 . server . domain . Person IDENT_5 = IDENT_6 . METHOD_3 ( address , person ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( com . IDENT_0 . IDENT_1 . server . domain . IDENT_2 , com . IDENT_0 . IDENT_1 . server . domain . Person ) { com . IDENT_0 . IDENT_1 . server . domain . IDENT_2 IDENT_7 = IDENT_4 . save ( ( ( com . IDENT_0 . IDENT_1 . server . domain . METHOD_2 ) ( address ) ) ) ; com . IDENT_0 . IDENT_1 . server . service . person . IDENT_8 . logger . info ( ( STRING_0 + ( IDENT_7 . METHOD_4 ( ) ) ) ) ; person . METHOD_5 ( address ) ; try { com . IDENT_0 . IDENT_1 . server . domain . Person IDENT_9 = IDENT_3 . save ( ( ( com . IDENT_0 . IDENT_1 . server . domain . METHOD_1 ) ( person ) ) ) ; com . IDENT_0 . IDENT_1 . server . service . person . IDENT_8 . logger . info ( ( STRING_1 + ( IDENT_9 . getName ( ) ) ) ) ; return IDENT_9 ; } catch ( java . lang . Exception e ) { com . IDENT_0 . IDENT_1 . server . service . person . IDENT_8 . logger . error ( ( STRING_2 + e ) ) ; throw new com . IDENT_0 . IDENT_1 . server . exception . METHOD_6 ( ) ; } }
org . junit . Assert . assertNotNull ( METHOD_3 ) 