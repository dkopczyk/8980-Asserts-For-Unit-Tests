METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = IDENT_3 . IDENT_4 . valueOf ( STRING_0 ) ; java . util . List < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 > IDENT_6 = java . util . Arrays . asList ( IDENT_5 ) ; java . util . List < com . IDENT_0 . IDENT_1 . repository . cassandra . IDENT_7 . index . IDENT_8 > IDENT_9 = java . util . Collections . emptyList ( ) ; com . google . common . util . concurrent . IDENT_10 < com . IDENT_11 . driver . mapping . Result < com . IDENT_0 . IDENT_1 . repository . cassandra . IDENT_7 . index . IDENT_8 > > IDENT_12 = mock ( com . google . common . util . concurrent . IDENT_10 . class ) ; com . IDENT_11 . driver . mapping . Result < com . IDENT_0 . IDENT_1 . repository . cassandra . IDENT_7 . index . IDENT_8 > IDENT_13 = mock ( com . IDENT_11 . driver . mapping . Result . class ) ; when ( IDENT_14 . METHOD_1 ( STRING_0 ) ) . thenReturn ( IDENT_12 ) ; when ( IDENT_12 . get ( ) ) . thenReturn ( IDENT_13 ) ; when ( IDENT_13 . METHOD_2 ( ) ) . thenReturn ( IDENT_9 ) ; java . util . Map < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 , java . util . Set < java . lang . String > > IDENT_15 = repository . METHOD_3 ( IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . util . Collection ) { throw new java . lang . METHOD_4 ( STRING_1 ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_15 . size ( ) ) 