METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = mock ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . class ) ; when ( IDENT_4 . METHOD_1 ( ) ) . thenReturn ( IDENT_3 . IDENT_5 . IDENT_6 ) ; when ( IDENT_4 . METHOD_2 ( ) ) . thenReturn ( IDENT_3 . IDENT_7 . valueOf ( STRING_0 ) ) ; when ( IDENT_4 . METHOD_3 ( ) ) . thenReturn ( IDENT_8 . IDENT_9 . valueOf ( STRING_1 ) ) ; METHOD_4 ( ) . when ( IDENT_10 ) . METHOD_5 ( eq ( IDENT_4 ) ) ; when ( transaction . update ( anyString ( ) , org . mockito . Matchers . METHOD_6 ( ) ) ) . thenReturn ( 1 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 result = repository . METHOD_7 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; when ( transaction . update ( anyString ( ) , org . mockito . Matchers . METHOD_6 ( ) ) ) . thenReturn ( 2 ) ; com . googlecode . IDENT_11 . IDENT_12 . IDENT_13 . when ( repository ) . METHOD_7 ( IDENT_4 ) ; com . googlecode . IDENT_11 . IDENT_12 . IDENT_13 . METHOD_8 ( METHOD_9 ( ) ) . METHOD_10 ( com . IDENT_0 . IDENT_1 . repository . IDENT_14 . class ) . METHOD_11 ( STRING_2 ) . METHOD_12 ( ) ; when ( transaction . update ( anyString ( ) , org . mockito . Matchers . METHOD_6 ( ) ) ) . thenReturn ( 0 ) ; com . googlecode . IDENT_11 . IDENT_12 . IDENT_13 . when ( repository ) . METHOD_7 ( IDENT_4 ) ; com . googlecode . IDENT_11 . IDENT_12 . IDENT_13 . METHOD_8 ( METHOD_9 ( ) ) . METHOD_10 ( com . IDENT_0 . IDENT_1 . repository . IDENT_14 . class ) . METHOD_11 ( STRING_3 ) . METHOD_12 ( ) ; } METHOD_7 ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) { validator . METHOD_5 ( IDENT_15 ) ; final java . lang . String IDENT_16 = STRING_4 + ( ( STRING_5 + STRING_6 ) + STRING_7 ) ; int IDENT_17 = METHOD_13 ( ) . update ( IDENT_16 , ( ( IDENT_15 . METHOD_14 ( ) ) != null ? IDENT_15 . METHOD_14 ( ) : "" ) , IDENT_15 . METHOD_15 ( ) , IDENT_15 . METHOD_1 ( ) . toString ( ) , IDENT_15 . METHOD_2 ( ) . toString ( ) , IDENT_15 . METHOD_16 ( ) , IDENT_15 . METHOD_17 ( ) , IDENT_15 . METHOD_3 ( ) . toString ( ) , IDENT_15 . METHOD_18 ( ) ) ; if ( IDENT_17 > 1 ) { throw new com . IDENT_0 . IDENT_1 . repository . METHOD_19 ( STRING_2 ) ; } if ( IDENT_17 < 1 ) { throw new com . IDENT_0 . IDENT_1 . repository . METHOD_19 ( STRING_3 ) ; } return IDENT_15 ; }
org . junit . Assert . assertThat ( result , org . hamcrest . core . Is . is ( IDENT_4 ) ) 