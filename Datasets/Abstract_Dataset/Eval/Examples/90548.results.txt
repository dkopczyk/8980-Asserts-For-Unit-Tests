METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = mock ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . class , com . IDENT_0 . IDENT_1 . repository . database . IDENT_5 ) ; java . util . List < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 > list = new java . util . ArrayList ( ) ; when ( list . size ( ) ) . thenReturn ( 1 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 IDENT_7 = mock ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . class , com . IDENT_0 . IDENT_1 . repository . database . IDENT_5 ) ; list . add ( IDENT_7 ) ; when ( IDENT_7 . METHOD_1 ( ) ) . thenReturn ( IDENT_6 . IDENT_8 . IDENT_9 ) ; when ( IDENT_7 . METHOD_2 ( ) ) . thenReturn ( STRING_0 ) ; when ( IDENT_7 . METHOD_3 ( ) ) . thenReturn ( STRING_1 ) ; when ( IDENT_4 . METHOD_4 ( ) ) . thenReturn ( list ) ; when ( transaction . update ( anyString ( ) , org . mockito . Matchers . METHOD_5 ( ) ) ) . thenReturn ( 1 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 result = repository . METHOD_6 ( IDENT_10 . IDENT_11 . newInstance ( ) , IDENT_4 ) ; "<AssertPlaceHolder>" ; verify ( transaction , times ( 1 ) ) . update ( anyString ( ) , org . mockito . Matchers . METHOD_5 ( ) ) ; } newInstance ( ) { return new com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_10 . METHOD_7 ( java . util . UUID . METHOD_8 ( ) ) ; }
org . junit . Assert . assertThat ( result , org . hamcrest . core . Is . is ( IDENT_4 ) ) 