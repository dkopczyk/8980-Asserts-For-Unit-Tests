METHOD_0 ( ) { int size = INT_0 ; byte [ ] IDENT_0 = new byte [ size ] ; com . IDENT_1 . IDENT_2 . utils . IDENT_3 . METHOD_1 ( IDENT_4 , IDENT_0 , 0 ) ; com . IDENT_1 . IDENT_2 . utils . IDENT_5 < long [ ] , long [ ] > IDENT_6 = new com . IDENT_1 . IDENT_2 . utils . METHOD_2 ( new long [ IDENT_7 . IDENT_8 ] , new long [ IDENT_7 . IDENT_8 ] ) ; com . IDENT_1 . IDENT_2 . crypto . IDENT_7 IDENT_9 ; IDENT_9 = new com . IDENT_1 . IDENT_2 . crypto . METHOD_3 ( true , IDENT_10 . IDENT_11 . IDENT_12 ) ; IDENT_9 . METHOD_4 ( com . IDENT_1 . IDENT_2 . utils . IDENT_3 . METHOD_5 ( IDENT_0 ) , 0 , IDENT_0 . length ) ; IDENT_9 . METHOD_6 ( IDENT_6 , 0 , METHOD_3 . IDENT_8 ) ; byte [ ] IDENT_13 = com . IDENT_1 . IDENT_2 . utils . IDENT_3 . METHOD_1 ( IDENT_6 . IDENT_14 , IDENT_6 . IDENT_15 ) ; java . lang . String IDENT_16 = com . IDENT_1 . IDENT_2 . utils . IDENT_3 . METHOD_7 ( IDENT_13 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( byte [ ] ) { return com . IDENT_1 . IDENT_2 . utils . IDENT_3 . METHOD_7 ( METHOD_1 , 0 , METHOD_1 . length ) ; }
org . junit . Assert . assertEquals ( hash , IDENT_16 ) 