METHOD_0 ( ) { METHOD_1 ( STRING_0 ) ; java . util . Collection < fr . IDENT_0 . IDENT_1 . domain . User > IDENT_2 = IDENT_3 . METHOD_2 ( 0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( int ) { fr . IDENT_0 . IDENT_1 . domain . User IDENT_4 = IDENT_5 . METHOD_3 ( ) ; java . lang . String domain = fr . IDENT_0 . IDENT_1 . service . util . IDENT_6 . METHOD_4 ( IDENT_4 . METHOD_5 ( ) ) ; java . util . List < java . lang . String > IDENT_7 = IDENT_8 . METHOD_6 ( domain , pagination ) ; java . util . List < fr . IDENT_0 . IDENT_1 . domain . User > IDENT_2 = new java . util . ArrayList < fr . IDENT_0 . IDENT_1 . domain . User > ( ) ; for ( java . lang . String IDENT_9 : IDENT_7 ) { fr . IDENT_0 . IDENT_1 . domain . User user = METHOD_7 ( IDENT_9 ) ; IDENT_2 . add ( user ) ; } return IDENT_2 ; }
org . junit . Assert . assertTrue ( ( ( IDENT_2 . size ( ) ) > 10 ) ) 