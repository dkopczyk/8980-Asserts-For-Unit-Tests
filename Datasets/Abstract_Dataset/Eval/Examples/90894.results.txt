METHOD_0 ( ) { java . util . Set < eu . IDENT_0 . service . admin . IDENT_1 > IDENT_2 = eu . IDENT_0 . admin . test . IDENT_3 . impl . METHOD_1 ( ) ; for ( eu . IDENT_0 . service . admin . IDENT_1 IDENT_4 : IDENT_2 ) "<AssertPlaceHolder>" ; } METHOD_1 ( ) { java . util . Set < eu . IDENT_0 . service . admin . IDENT_1 > IDENT_2 = new java . util . HashSet < eu . IDENT_0 . service . admin . IDENT_1 > ( ) ; for ( java . lang . Class < ? extends eu . IDENT_0 . service . admin . IDENT_1 > IDENT_4 : eu . IDENT_0 . impl . service . admin . IDENT_5 . services . values ( ) ) { try { IDENT_2 . add ( IDENT_4 . newInstance ( ) ) ; } catch ( java . lang . Exception e ) { err ( ( ( ( STRING_0 + ( IDENT_4 . METHOD_2 ( ) ) ) + STRING_1 ) + ( e . getMessage ( ) ) ) ) ; return null ; } } return IDENT_2 ; }
org . junit . Assert . assertNotNull ( IDENT_4 ) 