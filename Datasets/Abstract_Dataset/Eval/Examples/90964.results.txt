METHOD_0 ( ) { final ch . cyberduck . core . exception . IDENT_0 IDENT_1 = new ch . cyberduck . core . exception . METHOD_1 ( new java . net . METHOD_2 ( "" ) ) ; ch . cyberduck . core . IDENT_2 . IDENT_3 < java . lang . IDENT_4 > a = new ch . cyberduck . core . IDENT_2 . IDENT_3 < java . lang . IDENT_4 > ( new ch . cyberduck . core . pool . METHOD_3 ( new ch . cyberduck . core . METHOD_4 ( ) , new ch . cyberduck . core . METHOD_5 ( new ch . cyberduck . core . METHOD_6 ( new ch . cyberduck . core . METHOD_7 ( ) , STRING_0 ) ) , ch . cyberduck . core . IDENT_5 . empty ( ) , new ch . cyberduck . core . METHOD_8 ( ) , new ch . cyberduck . core . IDENT_6 . METHOD_9 ( new ch . cyberduck . core . METHOD_10 ( ) ) ) , new ch . cyberduck . core . IDENT_2 . METHOD_11 ( ) { @ ch . cyberduck . core . IDENT_2 . Override public boolean METHOD_12 ( final ch . cyberduck . core . METHOD_6 IDENT_7 , final ch . cyberduck . core . exception . METHOD_1 f , final java . lang . StringBuilder IDENT_8 ) { "<AssertPlaceHolder>" ; return false ; } } , new ch . cyberduck . core . METHOD_13 ( ) , new ch . cyberduck . core . METHOD_14 ( ) ) { @ ch . cyberduck . core . IDENT_2 . Override public ch . cyberduck . core . IDENT_2 . IDENT_4 run ( final ch . cyberduck . core . IDENT_9 < ? > session ) throws ch . cyberduck . core . exception . METHOD_1 { throw IDENT_1 ; } } ; } METHOD_12 ( ch . cyberduck . core . METHOD_6 , ch . cyberduck . core . exception . METHOD_1 , java . lang . StringBuilder ) { IDENT_10 . METHOD_15 ( ch . cyberduck . core . IDENT_11 . toString ( IDENT_12 ) , IDENT_12 . METHOD_16 ( ) , IDENT_1 . getMessage ( ) , ch . cyberduck . core . IDENT_11 . toString ( IDENT_12 ) ) ; return false ; }
org . junit . Assert . assertEquals ( IDENT_1 , f ) 