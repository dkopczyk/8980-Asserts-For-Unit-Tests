METHOD_0 ( ) { final ch . cyberduck . core . IDENT_0 . IDENT_1 . IDENT_2 options = new ch . cyberduck . core . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; options . IDENT_3 = false ; ch . cyberduck . core . IDENT_0 . IDENT_1 . IDENT_4 f = new ch . cyberduck . core . IDENT_0 . IDENT_1 . METHOD_2 ( new ch . cyberduck . core . IDENT_0 . IDENT_5 . METHOD_3 ( ) , new ch . cyberduck . core . METHOD_4 ( new ch . cyberduck . core . METHOD_5 ( new ch . cyberduck . core . METHOD_6 ( ) ) ) , options ) ; final ch . cyberduck . core . IDENT_6 IDENT_7 = new ch . cyberduck . core . METHOD_7 ( java . lang . System . getProperty ( STRING_0 ) , STRING_1 ) { @ ch . cyberduck . core . IDENT_0 . IDENT_1 . Override public boolean exists ( ) { return false ; } @ ch . cyberduck . core . IDENT_0 . IDENT_1 . Override public void METHOD_8 ( final ch . cyberduck . core . IDENT_8 IDENT_9 ) { org . junit . Assert . fail ( ) ; } } ; final ch . cyberduck . core . Path p = new ch . cyberduck . core . Path ( STRING_1 , java . util . IDENT_10 . of ( Path . Type . file ) ) ; final ch . cyberduck . core . IDENT_0 . IDENT_11 status = f . METHOD_9 ( p , IDENT_7 , new ch . cyberduck . core . IDENT_0 . METHOD_10 ( ) , new ch . cyberduck . core . METHOD_11 ( ) ) ; "<AssertPlaceHolder>" ; f . apply ( p , IDENT_7 , new ch . cyberduck . core . IDENT_0 . METHOD_10 ( ) , new ch . cyberduck . core . METHOD_11 ( ) ) ; } METHOD_12 ( ) { return METHOD_8 ; }
org . junit . Assert . assertNull ( status . METHOD_12 ( ) . IDENT_7 ) 