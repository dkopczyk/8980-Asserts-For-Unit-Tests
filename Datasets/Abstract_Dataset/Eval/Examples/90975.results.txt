METHOD_0 ( ) { final ch . cyberduck . core . IDENT_0 session = new ch . cyberduck . core . METHOD_1 ( new ch . cyberduck . core . METHOD_2 ( new ch . cyberduck . core . METHOD_3 ( ) ) ) ; ch . cyberduck . core . IDENT_1 . IDENT_2 . IDENT_3 f = new ch . cyberduck . core . IDENT_1 . IDENT_2 . METHOD_4 ( new ch . cyberduck . core . IDENT_1 . IDENT_4 . METHOD_5 ( ) , session , new ch . cyberduck . core . IDENT_1 . IDENT_2 . METHOD_6 ( ) , new ch . cyberduck . core . shared . METHOD_7 ( session . METHOD_8 ( ch . cyberduck . core . IDENT_5 . IDENT_6 . class ) ) { @ ch . cyberduck . core . IDENT_1 . IDENT_2 . Override public boolean offset ( final ch . cyberduck . core . Path file ) { return true ; } } ) ; ch . cyberduck . core . Path p = new ch . cyberduck . core . Path ( "a" , java . util . IDENT_7 . of ( Path . Type . directory ) ) ; final ch . cyberduck . core . IDENT_8 IDENT_9 = new ch . cyberduck . core . METHOD_9 ( "a" ) { @ ch . cyberduck . core . IDENT_1 . IDENT_2 . Override public boolean exists ( ) { return true ; } @ ch . cyberduck . core . IDENT_1 . IDENT_2 . Override public boolean METHOD_10 ( ) { return false ; } @ ch . cyberduck . core . IDENT_1 . IDENT_2 . Override public boolean METHOD_11 ( ) { return true ; } } ; final ch . cyberduck . core . IDENT_1 . IDENT_10 status = f . METHOD_12 ( p , IDENT_9 , new ch . cyberduck . core . IDENT_1 . METHOD_13 ( ) . exists ( true ) , new ch . cyberduck . core . METHOD_14 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_15 ( ) { return exists ; }
org . junit . Assert . assertTrue ( status . METHOD_15 ( ) ) 