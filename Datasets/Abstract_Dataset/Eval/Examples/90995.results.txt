METHOD_0 ( ) { final long time = new ch . cyberduck . core . IDENT_0 . list . METHOD_1 ( ) . METHOD_2 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { if ( null == IDENT_1 ) { return - 1 ; } try { final java . util . Date IDENT_2 = new ch . cyberduck . core . date . METHOD_3 ( ) . parse ( IDENT_1 ) ; return IDENT_2 . getTime ( ) ; } catch ( ch . cyberduck . core . date . IDENT_3 e ) { ch . cyberduck . core . IDENT_0 . list . METHOD_1 . log . warn ( ( STRING_1 + ( e . getMessage ( ) ) ) ) ; try { final java . util . Date IDENT_2 = new ch . cyberduck . core . date . METHOD_4 ( ) . parse ( IDENT_1 ) ; return IDENT_2 . getTime ( ) ; } catch ( ch . cyberduck . core . date . IDENT_3 f ) { ch . cyberduck . core . IDENT_0 . list . METHOD_1 . log . warn ( ( STRING_1 + ( f . getMessage ( ) ) ) ) ; } } ch . cyberduck . core . IDENT_0 . list . METHOD_1 . log . error ( java . lang . String . format ( STRING_2 , IDENT_1 ) ) ; return - 1 ; }
org . junit . Assert . assertEquals ( ( - 1L ) , time ) 