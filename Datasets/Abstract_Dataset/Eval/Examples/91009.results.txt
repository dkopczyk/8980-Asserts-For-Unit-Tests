METHOD_0 ( ) { final ch . cyberduck . core . IDENT_0 host = new ch . cyberduck . core . METHOD_1 ( new ch . cyberduck . core . IDENT_1 . METHOD_2 ( ) , STRING_0 , new ch . cyberduck . core . METHOD_3 ( java . lang . System . METHOD_4 ( ) . getProperty ( STRING_1 ) , java . lang . System . METHOD_4 ( ) . getProperty ( STRING_2 ) ) ) ; final ch . cyberduck . core . IDENT_1 . IDENT_2 session = new ch . cyberduck . core . IDENT_1 . METHOD_5 ( host ) ; session . METHOD_6 ( IDENT_3 . IDENT_4 , new ch . cyberduck . core . METHOD_7 ( ) , new ch . cyberduck . core . METHOD_8 ( ) ) ; session . METHOD_9 ( IDENT_3 . IDENT_4 , new ch . cyberduck . core . METHOD_8 ( ) , new ch . cyberduck . core . METHOD_10 ( ) ) ; final ch . cyberduck . core . IDENT_5 < ch . cyberduck . core . Path > list = new ch . cyberduck . core . IDENT_1 . METHOD_11 ( session , new ch . cyberduck . core . IDENT_1 . IDENT_6 . METHOD_12 ( STRING_3 ) ) . list ( new ch . cyberduck . core . Path ( java . lang . String . valueOf ( Path . IDENT_7 ) , java . util . IDENT_8 . of ( Path . Type . IDENT_9 , Path . Type . directory ) ) , new ch . cyberduck . core . METHOD_13 ( ) ) ; final ch . cyberduck . core . Path container = new ch . cyberduck . core . Path ( STRING_4 , java . util . IDENT_8 . of ( Path . Type . IDENT_9 , Path . Type . directory ) ) ; container . attributes ( ) . METHOD_14 ( STRING_3 ) ; "<AssertPlaceHolder>" ; session . close ( ) ; } contains ( ch . cyberduck . core . Path ) { return false ; }
org . junit . Assert . assertTrue ( list . contains ( container ) ) 