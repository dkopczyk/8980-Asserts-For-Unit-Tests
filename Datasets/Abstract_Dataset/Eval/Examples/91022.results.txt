METHOD_0 ( ) { final ch . cyberduck . core . IDENT_0 . Path container = new ch . cyberduck . core . IDENT_0 . Path ( STRING_0 , java . util . IDENT_1 . of ( Path . Type . directory , Path . Type . IDENT_2 ) ) ; container . attributes ( ) . METHOD_1 ( STRING_1 ) ; final ch . cyberduck . core . IDENT_0 . Path IDENT_3 = new ch . cyberduck . core . IDENT_0 . METHOD_2 ( session , new ch . cyberduck . core . IDENT_0 . METHOD_3 ( session , new ch . cyberduck . core . IDENT_0 . METHOD_4 ( ) ) ) . METHOD_5 ( new ch . cyberduck . core . IDENT_0 . Path ( container , java . lang . String . format ( STRING_2 , java . util . UUID . METHOD_6 ( ) . toString ( ) ) , java . util . IDENT_1 . of ( Path . Type . directory ) ) , null , new ch . cyberduck . core . IDENT_4 . METHOD_7 ( ) ) ; final ch . cyberduck . core . IDENT_0 . IDENT_5 < ch . cyberduck . core . IDENT_0 . Path > list = new ch . cyberduck . core . IDENT_0 . METHOD_8 ( session ) . list ( IDENT_3 , new ch . cyberduck . core . IDENT_0 . METHOD_9 ( ) ) ; "<AssertPlaceHolder>" ; new ch . cyberduck . core . IDENT_0 . METHOD_10 ( session ) . delete ( java . util . Collections . singletonList ( IDENT_3 ) , new ch . cyberduck . core . IDENT_0 . METHOD_11 ( ) , new ch . cyberduck . core . IDENT_6 . IDENT_7 . METHOD_12 ( ) ) ; } isEmpty ( ) { return ( size ( ) ) == 0 ; }
org . junit . Assert . assertTrue ( list . isEmpty ( ) ) 