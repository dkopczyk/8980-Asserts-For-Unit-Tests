METHOD_0 ( ) { final ch . cyberduck . core . IDENT_0 . IDENT_1 feature = new ch . cyberduck . core . IDENT_0 . METHOD_1 ( session ) ; final ch . cyberduck . core . Path test = new ch . cyberduck . core . Path ( java . util . UUID . METHOD_2 ( ) . toString ( ) , java . util . IDENT_2 . of ( Path . Type . file ) ) ; final byte [ ] source = org . apache . commons . lang3 . IDENT_3 . METHOD_3 ( 2 ) ; { final ch . cyberduck . core . IDENT_4 . IDENT_5 status = new ch . cyberduck . core . IDENT_4 . METHOD_4 ( ) ; status . METHOD_5 ( 1L ) ; status . METHOD_6 ( 0L ) ; final ch . cyberduck . core . http . IDENT_6 < java . lang . String > out = feature . write ( test , status , new ch . cyberduck . core . METHOD_7 ( ) ) ; new ch . cyberduck . core . io . METHOD_8 ( status , status ) . METHOD_9 ( status . METHOD_10 ( ) ) . METHOD_11 ( status . METHOD_12 ( ) ) . METHOD_13 ( new java . io . ByteArrayInputStream ( source ) , out ) ; out . close ( ) ; } { final ch . cyberduck . core . METHOD_13 . METHOD_4 status = new ch . cyberduck . core . METHOD_13 . METHOD_4 ( ) ; status . METHOD_5 ( 1L ) ; status . METHOD_6 ( 1L ) ; status . METHOD_14 ( true ) ; final ch . cyberduck . core . http . IDENT_6 < java . lang . String > out = feature . write ( test , status , new ch . cyberduck . core . METHOD_7 ( ) ) ; new ch . cyberduck . core . io . METHOD_8 ( status , status ) . METHOD_9 ( status . METHOD_10 ( ) ) . METHOD_11 ( status . METHOD_12 ( ) ) . METHOD_13 ( new java . io . ByteArrayInputStream ( source ) , out ) ; out . close ( ) ; } final java . io . ByteArrayOutputStream out = new java . io . ByteArrayOutputStream ( source . length ) ; org . apache . commons . io . IDENT_7 . METHOD_15 ( new ch . cyberduck . core . IDENT_0 . METHOD_16 ( session ) . read ( test , new ch . cyberduck . core . METHOD_13 . METHOD_4 ( ) . length ( source . length ) , new ch . cyberduck . core . METHOD_7 ( ) ) , out ) ; "<AssertPlaceHolder>" ; new ch . cyberduck . core . IDENT_0 . METHOD_17 ( session ) . delete ( java . util . Collections . singletonList ( test ) , new ch . cyberduck . core . METHOD_18 ( ) , new ch . cyberduck . core . IDENT_8 . IDENT_9 . METHOD_19 ( ) ) ; } length ( long ) { this . METHOD_5 ( bytes ) ; return this ; }
org . junit . Assert . assertArrayEquals ( source , out . toByteArray ( ) ) 