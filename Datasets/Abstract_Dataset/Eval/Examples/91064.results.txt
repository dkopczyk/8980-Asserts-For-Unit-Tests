METHOD_0 ( ) { byte [ ] output = new byte [ 8 ] ; byte [ ] input = new byte [ ] { INT_0 , - INT_1 , - INT_2 , - INT_3 , - INT_4 , - INT_5 } ; com . itextpdf . io . codec . IDENT_0 . IDENT_1 . IDENT_2 transform = new com . itextpdf . io . codec . IDENT_0 . IDENT_1 . METHOD_1 ( STRING_0 , IDENT_3 . IDENT_4 , "]" ) ; com . itextpdf . io . codec . IDENT_0 . IDENT_1 . METHOD_1 . METHOD_2 ( output , 0 , java . nio . ByteBuffer . METHOD_3 ( input ) , 0 , input . length , transform ) ; byte [ ] IDENT_5 = new byte [ ] { INT_6 , INT_7 , - INT_1 , - INT_8 , - INT_3 , - INT_4 , - INT_7 , INT_9 } ; "<AssertPlaceHolder>" ; } METHOD_3 ( com . itextpdf . kernel . pdf . IDENT_6 ) { if ( ! ( IDENT_7 . IDENT_8 . equals ( IDENT_9 . METHOD_4 ( IDENT_7 . IDENT_10 ) ) ) ) { org . IDENT_11 . IDENT_12 . METHOD_5 ( com . itextpdf . kernel . pdf . IDENT_13 . IDENT_14 . class ) . error ( IDENT_15 . IDENT_16 ) ; } com . itextpdf . kernel . pdf . IDENT_6 IDENT_17 = IDENT_9 . METHOD_6 ( IDENT_7 . IDENT_18 ) ; if ( ( IDENT_17 == null ) || ( ( ( IDENT_17 . METHOD_7 ( IDENT_7 . IDENT_19 ) ) == null ) && ( ( IDENT_17 . METHOD_7 ( IDENT_7 . IDENT_20 ) ) == null ) ) ) { throw new com . itextpdf . kernel . METHOD_8 ( com . itextpdf . kernel . METHOD_8 . IDENT_21 ) ; } if ( ! ( IDENT_7 . IDENT_22 . equals ( IDENT_9 . METHOD_4 ( IDENT_7 . Type ) ) ) ) { throw new com . itextpdf . kernel . METHOD_8 ( com . itextpdf . kernel . METHOD_8 . IDENT_23 ) ; } if ( ! ( IDENT_9 . METHOD_9 ( ) ) ) { throw new com . itextpdf . kernel . METHOD_8 ( com . itextpdf . kernel . METHOD_8 . IDENT_24 ) ; } com . itextpdf . kernel . pdf . IDENT_13 . IDENT_25 IDENT_26 = com . itextpdf . kernel . pdf . IDENT_13 . IDENT_25 . METHOD_10 ( IDENT_9 ) ; if ( ( com . itextpdf . kernel . pdf . IDENT_27 . METHOD_11 ( IDENT_26 ) ) == null ) { throw new com . itextpdf . kernel . METHOD_8 ( com . itextpdf . kernel . METHOD_8 . IDENT_28 ) ; } return IDENT_26 ; }
org . junit . Assert . assertArrayEquals ( IDENT_5 , output ) 