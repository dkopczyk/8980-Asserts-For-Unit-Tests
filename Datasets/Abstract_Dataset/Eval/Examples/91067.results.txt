METHOD_0 ( ) { java . util . IDENT_0 IDENT_1 = new java . util . METHOD_1 ( ) ; for ( int i = 0 ; i < INT_0 ; i ++ ) { double d = ( ( double ) ( IDENT_1 . METHOD_2 ( INT_1 ) ) ) / INT_0 ; d = com . itextpdf . io . source . IDENT_2 . METHOD_3 ( d , 2 ) ; if ( d < FLOAT_0 ) { i OP_0 ; continue ; } byte [ ] IDENT_3 = com . itextpdf . io . source . IDENT_4 . METHOD_4 ( d ) ; byte [ ] IDENT_5 = com . itextpdf . io . util . IDENT_6 . METHOD_5 ( d , STRING_0 ) . getBytes ( IDENT_7 . IDENT_8 ) ; java . lang . String message = ( ( ( ( STRING_1 + ( new java . lang . String ( IDENT_5 ) ) ) + STRING_2 ) + ( new java . lang . String ( IDENT_3 ) ) ) + STRING_3 ) + d ; "<AssertPlaceHolder>" ; } } getBytes ( boolean ) { if ( METHOD_6 ( ) ) { throw new com . itextpdf . kernel . METHOD_7 ( com . itextpdf . kernel . METHOD_7 . IDENT_9 ) ; } if ( ( IDENT_10 ) != null ) { org . IDENT_11 . IDENT_12 . METHOD_8 ( com . itextpdf . kernel . pdf . IDENT_13 . class ) . warn ( ( STRING_4 + STRING_5 ) ) ; return null ; } byte [ ] bytes = null ; if ( ( ( IDENT_14 ) != null ) && ( ( IDENT_14 . METHOD_9 ( ) ) != null ) ) { assert ( IDENT_14 . METHOD_9 ( ) ) instanceof com . itextpdf . io . source . ByteArrayOutputStream : STRING_6 ; try { IDENT_14 . METHOD_9 ( ) . METHOD_10 ( ) ; bytes = ( ( com . itextpdf . io . source . ByteArrayOutputStream ) ( IDENT_14 . METHOD_9 ( ) ) ) . toByteArray ( ) ; if ( IDENT_15 && ( containsKey ( IDENT_16 . IDENT_17 ) ) ) { bytes = com . itextpdf . kernel . pdf . IDENT_18 . METHOD_11 ( bytes , this ) ; } } catch ( java . io . IOException IDENT_19 ) { throw new com . itextpdf . kernel . METHOD_7 ( com . itextpdf . kernel . METHOD_7 . IDENT_20 , IDENT_19 , this ) ; } } else if ( ( METHOD_12 ( ) ) != null ) { com . itextpdf . kernel . pdf . IDENT_18 reader = METHOD_12 ( ) . METHOD_13 ( ) ; if ( reader != null ) { try { bytes = reader . METHOD_14 ( this , IDENT_15 ) ; } catch ( java . io . IOException IDENT_19 ) { throw new com . itextpdf . kernel . METHOD_7 ( com . itextpdf . kernel . METHOD_7 . IDENT_20 , IDENT_19 , this ) ; } } } return bytes ; }
org . junit . Assert . assertArrayEquals ( message , IDENT_5 , IDENT_3 ) 