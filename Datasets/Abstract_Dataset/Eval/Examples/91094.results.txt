METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String out = STRING_1 0 ; com . itextpdf . kernel . pdf . IDENT_1 IDENT_2 = new com . itextpdf . kernel . pdf . METHOD_1 ( new com . itextpdf . kernel . pdf . METHOD_2 ( ( ( com . itextpdf . kernel . pdf . IDENT_3 . IDENT_4 ) + IDENT_0 ) ) , new com . itextpdf . kernel . pdf . METHOD_3 ( ( ( com . itextpdf . kernel . pdf . IDENT_3 . IDENT_5 ) + out ) ) ) ; com . itextpdf . kernel . pdf . IDENT_6 IDENT_7 = IDENT_2 . METHOD_4 ( 1 ) . METHOD_5 ( ) . remove ( IDENT_8 . IDENT_9 ) ; "<AssertPlaceHolder>" ; com . itextpdf . kernel . pdf . IDENT_10 IDENT_11 = ( ( com . itextpdf . kernel . pdf . IDENT_10 ) ( IDENT_7 ) ) ; IDENT_11 . METHOD_6 ( ) ; com . itextpdf . kernel . pdf . IDENT_12 s = new com . itextpdf . kernel . pdf . METHOD_7 ( STRING_2 ) ; com . itextpdf . kernel . pdf . IDENT_13 IDENT_14 = ( ( com . itextpdf . kernel . pdf . IDENT_13 ) ( new com . itextpdf . kernel . pdf . METHOD_8 ( java . util . Collections . < com . itextpdf . kernel . pdf . IDENT_6 > singletonList ( s ) ) . METHOD_9 ( IDENT_2 ) ) ) ; IDENT_2 . METHOD_10 ( ) . put ( new com . itextpdf . kernel . pdf . METHOD_11 ( STRING_1 3 ) , IDENT_14 ) ; IDENT_2 . close ( ) ; java . lang . String [ ] IDENT_15 = METHOD_12 ( out ) ; java . lang . String [ ] expected = new java . lang . String [ ] { STRING_3 + ( ( ( ( ( ( ( ( STRING_1 2 + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_1 1 ) + STRING_8 ) + STRING_9 ) + STRING_1 ) } ; METHOD_13 ( IDENT_15 , expected ) ; } remove ( java . lang . String ) { com . itextpdf . IDENT_16 . jsoup . helper . IDENT_17 . METHOD_14 ( key ) ; if ( ( attributes ) == null ) return ; attributes . remove ( key . toLowerCase ( ) ) ; }
org . junit . Assert . assertTrue ( ( IDENT_7 instanceof com . itextpdf . kernel . pdf . IDENT_10 ) ) 