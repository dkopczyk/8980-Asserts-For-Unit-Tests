METHOD_0 ( ) { java . lang . String IDENT_0 = ( com . itextpdf . kernel . pdf . IDENT_1 . IDENT_2 ) + STRING_0 ; java . lang . String IDENT_3 = STRING_1 ; java . lang . String result = METHOD_1 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { java . lang . String result = "" ; com . itextpdf . kernel . pdf . IDENT_4 IDENT_5 = new com . itextpdf . kernel . pdf . METHOD_2 ( IDENT_0 ) ; com . itextpdf . kernel . pdf . IDENT_6 IDENT_7 = new com . itextpdf . kernel . pdf . METHOD_3 ( IDENT_5 ) ; int max = IDENT_7 . METHOD_4 ( ) ; for ( int i = 0 ; i < max ; i ++ ) { com . itextpdf . kernel . pdf . IDENT_8 obj = IDENT_7 . METHOD_5 ( i ) ; if ( obj != null ) { com . itextpdf . kernel . pdf . IDENT_9 IDENT_10 = ( ( com . itextpdf . kernel . pdf . IDENT_9 ) ( obj ) ) ; com . itextpdf . kernel . pdf . IDENT_8 x = IDENT_10 . get ( IDENT_11 . Type ) ; if ( ( x != null ) && ( x . equals ( IDENT_11 . IDENT_12 ) ) ) { com . itextpdf . kernel . pdf . IDENT_8 IDENT_13 = IDENT_10 . get ( IDENT_11 . IDENT_14 ) ; result = IDENT_13 . toString ( ) ; } } } IDENT_7 . close ( ) ; return result ; }
org . junit . Assert . assertEquals ( IDENT_3 , result ) 