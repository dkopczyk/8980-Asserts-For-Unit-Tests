METHOD_0 ( ) { org . apache . IDENT_0 . storage . datastore . db . IDENT_1 IDENT_2 = org . mockito . Mockito . METHOD_1 ( new org . apache . IDENT_0 . storage . datastore . db . METHOD_2 ( ) ) ; com . cloud . host . IDENT_3 IDENT_4 = new com . cloud . host . METHOD_3 ( STRING_0 ) ; org . apache . IDENT_0 . storage . datastore . db . METHOD_2 IDENT_5 = new org . apache . IDENT_0 . storage . datastore . db . METHOD_2 ( ) ; com . cloud . storage . IDENT_6 . IDENT_7 [ ] IDENT_8 = com . cloud . storage . IDENT_6 . IDENT_7 . values ( ) ; for ( int i = 0 ; i < ( IDENT_8 . length ) ; i ++ ) { org . mockito . Mockito . doReturn ( IDENT_8 [ i ] ) . when ( IDENT_2 ) . METHOD_4 ( ) ; boolean result = IDENT_9 . METHOD_5 ( IDENT_2 , IDENT_4 , IDENT_5 ) ; "<AssertPlaceHolder>" ; } } METHOD_5 ( org . apache . IDENT_0 . storage . datastore . db . METHOD_2 , com . cloud . host . IDENT_10 , org . apache . IDENT_0 . storage . datastore . db . METHOD_2 ) { return true ; }
org . junit . Assert . assertTrue ( result ) 