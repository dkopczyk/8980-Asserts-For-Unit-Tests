METHOD_0 ( ) { int [ ] a = new int [ ] { INT_0 , 16 , INT_1 , 12 , INT_2 , 2 , 5 , INT_3 } ; new com . IDENT_0 . IDENT_1 . METHOD_1 ( ) . METHOD_2 ( a , 0 , ( ( a . length ) - 1 ) ) ; java . lang . String expect = STRING_0 ; "<AssertPlaceHolder>" ; } METHOD_2 ( int [ ] , int , int ) { if ( ( null == a ) || ( ( a . length ) < 2 ) ) { return ; } java . util . IDENT_2 < java . lang . Integer > IDENT_3 = new java . util . METHOD_3 ( ) ; IDENT_3 . METHOD_4 ( IDENT_4 ) ; IDENT_3 . METHOD_4 ( IDENT_5 ) ; while ( ! ( IDENT_3 . isEmpty ( ) ) ) { IDENT_5 = IDENT_3 . METHOD_5 ( ) ; IDENT_4 = IDENT_3 . METHOD_5 ( ) ; if ( IDENT_4 < IDENT_5 ) { int IDENT_6 = METHOD_6 ( a , IDENT_4 , IDENT_5 ) ; IDENT_3 . METHOD_4 ( IDENT_4 ) ; IDENT_3 . METHOD_4 ( ( IDENT_6 - 1 ) ) ; IDENT_3 . METHOD_4 ( ( IDENT_6 + 1 ) ) ; IDENT_3 . METHOD_4 ( IDENT_5 ) ; } } }
org . junit . Assert . assertEquals ( expect , java . util . Arrays . toString ( a ) ) 