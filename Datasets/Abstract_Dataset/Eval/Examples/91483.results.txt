METHOD_0 ( ) { com . github . IDENT_0 . builder . IDENT_1 builder = new com . github . IDENT_0 . builder . METHOD_1 ( ) ; long IDENT_2 = INT_0 ; { builder . METHOD_2 ( new com . github . IDENT_0 . builder . IDENT_3 . METHOD_3 ( STRING_0 , INT_1 , INT_1 , 3 ) ) ; { com . github . IDENT_0 . builder . IDENT_3 . IDENT_4 IDENT_5 = new com . github . IDENT_0 . builder . IDENT_3 . METHOD_4 ( 10 ) ; IDENT_5 . METHOD_5 ( FLOAT_0 ) ; IDENT_5 . METHOD_6 ( FLOAT_1 ) ; IDENT_5 . METHOD_7 ( new com . github . IDENT_0 . IDENT_6 . random . METHOD_8 ( FLOAT_2 , FLOAT_3 , IDENT_2 ) ) ; IDENT_5 . METHOD_9 ( FLOAT_4 ) ; IDENT_5 . METHOD_10 ( 0 ) ; IDENT_5 . METHOD_11 ( IDENT_7 . IDENT_8 ) ; builder . METHOD_2 ( IDENT_5 ) ; } { builder . METHOD_12 ( IDENT_9 ) ; builder . METHOD_13 ( IDENT_9 ) ; builder . METHOD_14 ( new com . github . IDENT_0 . input . METHOD_15 ( ) ) ; builder . METHOD_16 ( new com . github . IDENT_0 . IDENT_6 . random . METHOD_17 ( new com . github . IDENT_0 . IDENT_6 . random . METHOD_8 ( FLOAT_2 , FLOAT_3 , IDENT_2 ) ) ) ; builder . METHOD_5 ( FLOAT_0 ) ; builder . METHOD_18 ( FLOAT_5 ) ; builder . METHOD_19 ( 1 ) ; builder . METHOD_20 ( 10 ) ; builder . METHOD_21 ( 1000 ) ; } } com . github . IDENT_0 . IDENT_10 . network . IDENT_11 . IDENT_12 IDENT_13 = new com . github . IDENT_0 . IDENT_10 . network . IDENT_11 . METHOD_22 ( ) ; IDENT_13 . METHOD_23 ( ) . METHOD_24 ( ) . METHOD_25 ( new java . io . File ( ( ( ( STRING_1 + ( java . io . File . IDENT_14 ) ) + STRING_2 ) + ( java . io . File . IDENT_14 ) ) ) ) ; try { IDENT_13 . compare ( builder ) ; } catch ( com . github . IDENT_0 . IDENT_10 . network . IDENT_11 . IDENT_15 e ) { com . github . IDENT_0 . IDENT_10 . network . IDENT_11 . IDENT_16 . logger . error ( "" , e ) ; "<AssertPlaceHolder>" ; } } compare ( com . github . IDENT_0 . builder . METHOD_1 ) { java . io . File IDENT_17 = IDENT_11 . METHOD_24 ( ) . METHOD_26 ( ) ; IDENT_11 . METHOD_24 ( ) . METHOD_25 ( null ) ; com . github . IDENT_0 . IDENT_10 . network . IDENT_11 . IDENT_15 IDENT_18 = null ; try { IDENT_11 . METHOD_27 ( builder , IDENT_19 , IDENT_20 ) ; } catch ( com . github . IDENT_0 . IDENT_10 . network . IDENT_11 . IDENT_15 e ) { IDENT_18 = e ; } if ( IDENT_18 == null ) { IDENT_11 . METHOD_24 ( ) . METHOD_25 ( IDENT_17 ) ; return ; } com . github . IDENT_0 . IDENT_10 . network . IDENT_11 . METHOD_22 . logger . info ( STRING_3 ) ; builder . METHOD_28 ( false ) ; com . github . IDENT_0 . IDENT_10 . network . IDENT_11 . IDENT_15 IDENT_21 = null ; try { IDENT_11 . METHOD_27 ( builder , IDENT_19 , IDENT_20 ) ; } catch ( com . github . IDENT_0 . IDENT_10 . network . IDENT_11 . IDENT_15 e ) { IDENT_21 = e ; } if ( IDENT_21 == null ) { IDENT_11 . METHOD_24 ( ) . METHOD_25 ( IDENT_17 ) ; throw new com . github . IDENT_0 . IDENT_10 . network . IDENT_11 . METHOD_29 ( STRING_4 , IDENT_18 ) ; } com . github . IDENT_0 . IDENT_10 . network . IDENT_11 . METHOD_22 . logger . info ( STRING_5 ) ; for ( com . github . IDENT_0 . builder . IDENT_3 . IDENT_22 . IDENT_23 IDENT_24 : builder . METHOD_30 ( ) ) { if ( IDENT_24 instanceof com . github . IDENT_0 . builder . IDENT_3 . IDENT_25 ) { ( ( com . github . IDENT_0 . builder . IDENT_3 . IDENT_25 ) ( IDENT_24 ) ) . METHOD_11 ( IDENT_7 . IDENT_26 ) ; } if ( IDENT_24 instanceof com . github . IDENT_0 . builder . IDENT_3 . IDENT_25 ) { ( ( com . github . IDENT_0 . builder . IDENT_3 . IDENT_25 ) ( IDENT_24 ) ) . METHOD_11 ( IDENT_7 . IDENT_26 ) ; } } IDENT_11 . METHOD_24 ( ) . METHOD_25 ( IDENT_17 ) ; com . github . IDENT_0 . IDENT_10 . network . IDENT_11 . METHOD_29 IDENT_27 = null ; try { IDENT_11 . METHOD_27 ( builder , IDENT_19 , IDENT_20 ) ; } catch ( com . github . IDENT_0 . IDENT_10 . network . IDENT_11 . METHOD_29 e ) { IDENT_27 = e ; } if ( IDENT_27 == null ) { throw new com . github . IDENT_0 . IDENT_10 . network . IDENT_11 . METHOD_29 ( STRING_6 , IDENT_21 ) ; } throw new com . github . IDENT_0 . IDENT_10 . network . IDENT_11 . METHOD_29 ( STRING_7 , IDENT_27 ) ; }
org . junit . Assert . assertTrue ( e . getMessage ( ) , false ) 