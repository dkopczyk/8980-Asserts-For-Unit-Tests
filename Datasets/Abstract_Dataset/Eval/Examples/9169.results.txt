METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = org . mockito . Mockito . mock ( com . IDENT_0 . IDENT_1 . IDENT_2 . class ) ; java . util . List < com . IDENT_0 . IDENT_1 . IDENT_4 > IDENT_5 = new java . util . ArrayList ( ) ; com . IDENT_0 . IDENT_1 . IDENT_4 IDENT_6 = org . mockito . Mockito . mock ( com . IDENT_0 . IDENT_1 . IDENT_4 . class ) ; com . IDENT_0 . IDENT_1 . IDENT_4 IDENT_7 = org . mockito . Mockito . mock ( com . IDENT_0 . IDENT_1 . IDENT_4 . class ) ; org . mockito . Mockito . when ( IDENT_6 . METHOD_1 ( IDENT_3 ) ) . thenReturn ( 0L ) ; org . mockito . Mockito . when ( IDENT_7 . METHOD_1 ( IDENT_3 ) ) . thenReturn ( INT_0 ) ; IDENT_5 . add ( IDENT_6 ) ; IDENT_5 . add ( IDENT_7 ) ; org . mockito . Mockito . doReturn ( IDENT_5 ) . when ( IDENT_8 ) . METHOD_2 ( IDENT_3 ) ; com . cloud . IDENT_9 . api . IDENT_10 IDENT_11 = org . mockito . Mockito . mock ( com . cloud . IDENT_9 . api . IDENT_10 . class ) ; org . mockito . Mockito . doReturn ( IDENT_11 ) . when ( IDENT_8 ) . METHOD_3 ( org . mockito . Mockito . eq ( IDENT_3 ) , org . mockito . Mockito . any ( com . IDENT_0 . IDENT_1 . IDENT_4 . class ) ) ; java . util . List < com . cloud . IDENT_9 . api . IDENT_10 > IDENT_12 = IDENT_8 . METHOD_4 ( IDENT_3 ) ; org . mockito . Mockito . verify ( IDENT_8 , org . mockito . Mockito . times ( 0 ) ) . METHOD_3 ( IDENT_3 , IDENT_6 ) ; org . mockito . Mockito . verify ( IDENT_8 , org . mockito . Mockito . times ( 1 ) ) . METHOD_3 ( IDENT_3 , IDENT_7 ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_13 . get ( ) ; }
org . junit . Assert . assertEquals ( 1 , IDENT_12 . size ( ) ) 