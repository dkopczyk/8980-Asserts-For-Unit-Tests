METHOD_0 ( ) { org . IDENT_0 . test . resources . IDENT_1 IDENT_2 = new org . IDENT_0 . test . resources . METHOD_1 ( ) ; java . lang . String test = STRING_0 ; IDENT_2 . METHOD_2 ( ) . METHOD_3 ( test ) ; java . lang . String value = ( ( java . lang . String ) ( org . IDENT_0 . util . IDENT_3 . METHOD_4 ( IDENT_2 , STRING_1 ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . Object , java . lang . String ) { java . lang . String [ ] IDENT_4 = IDENT_5 . split ( STRING_2 ) ; if ( ( IDENT_4 . length ) == 0 ) { IDENT_4 = new java . lang . String [ ] { IDENT_5 } ; } java . lang . Object value = null ; for ( int i = 0 ; i < ( IDENT_4 . length ) ; i ++ ) { java . lang . String IDENT_6 = IDENT_4 [ i ] ; value = org . IDENT_0 . util . IDENT_3 . getProperty ( instance , IDENT_6 ) ; if ( ( value == null ) || ( i == ( ( IDENT_4 . length ) - 1 ) ) ) { break ; } else { instance = value ; } } return value ; }
org . junit . Assert . assertEquals ( test , value ) 