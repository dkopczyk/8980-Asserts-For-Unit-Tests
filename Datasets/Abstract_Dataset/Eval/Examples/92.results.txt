METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final org . springframework . data . repository . query . parser . IDENT_1 tree = new org . springframework . data . repository . query . parser . METHOD_1 ( IDENT_0 , org . springframework . data . IDENT_2 . core . domain . IDENT_3 . class ) ; final java . lang . String query = org . springframework . data . IDENT_2 . query . IDENT_4 . METHOD_2 ( tree ) ; final java . lang . String expected = STRING_1 ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . springframework . data . repository . query . parser . METHOD_1 ) { final java . lang . StringBuilder result = new java . lang . StringBuilder ( ) ; final java . util . Iterator < org . springframework . data . repository . query . parser . METHOD_1 . IDENT_5 > IDENT_6 = tree . iterator ( ) ; while ( IDENT_6 . hasNext ( ) ) { final org . springframework . data . repository . query . parser . METHOD_1 . IDENT_5 IDENT_7 = IDENT_6 . next ( ) ; final java . util . Iterator < org . springframework . data . repository . query . parser . IDENT_8 > IDENT_9 = IDENT_7 . iterator ( ) ; while ( IDENT_9 . hasNext ( ) ) { final org . springframework . data . repository . query . parser . IDENT_8 IDENT_10 = IDENT_9 . next ( ) ; result . append ( ( ( " " + ( IDENT_10 . getProperty ( ) . METHOD_3 ( ) ) ) + " " ) ) ; result . append ( org . springframework . data . IDENT_2 . query . IDENT_4 . METHOD_4 ( IDENT_10 . getType ( ) ) ) ; if ( IDENT_9 . hasNext ( ) ) { result . append ( STRING_2 ) ; } } if ( IDENT_6 . hasNext ( ) ) { result . append ( STRING_3 ) ; } } return org . springframework . data . IDENT_2 . util . IDENT_11 . METHOD_5 ( result . toString ( ) ) ; }
org . junit . Assert . assertEquals ( expected , query ) 