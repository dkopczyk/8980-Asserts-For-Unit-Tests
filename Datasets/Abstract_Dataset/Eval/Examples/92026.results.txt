METHOD_0 ( ) { org . IDENT_0 . test . IDENT_1 . IDENT_2 IDENT_3 = METHOD_1 ( ) ; org . IDENT_0 . test . IDENT_1 . IDENT_4 IDENT_5 = new org . IDENT_0 . test . IDENT_1 . METHOD_2 ( IDENT_6 . METHOD_3 ( ) ) ; IDENT_3 . connect ( IDENT_7 , false ) ; IDENT_5 . connect ( IDENT_7 , false ) ; org . IDENT_8 . IDENT_9 . IDENT_10 [ ] IDENT_11 = new org . IDENT_8 . IDENT_9 . IDENT_10 [ ] { new org . IDENT_8 . IDENT_9 . METHOD_4 ( STRING_0 , STRING_1 ) , new org . IDENT_8 . IDENT_9 . METHOD_4 ( STRING_2 , STRING_3 ) } ; IDENT_3 . IDENT_12 . METHOD_5 ( IDENT_11 , org . IDENT_0 . test . IDENT_1 . IDENT_13 . IDENT_14 ) ; org . IDENT_8 . IDENT_9 . METHOD_4 [ ] IDENT_15 = IDENT_5 . IDENT_16 . METHOD_6 ( IDENT_17 . IDENT_18 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( org . IDENT_8 . IDENT_19 . IDENT_17 ) { org . IDENT_8 . IDENT_9 . METHOD_4 [ ] IDENT_15 = org . IDENT_0 . IDENT_1 . IDENT_20 . IDENT_21 . IDENT_22 ; switch ( IDENT_23 . value ( ) ) { case org . IDENT_8 . IDENT_19 . IDENT_17 . IDENT_24 : METHOD_7 ( ) ; IDENT_15 = IDENT_25 . METHOD_6 ( ) ; break ; case org . IDENT_8 . IDENT_19 . IDENT_17 . IDENT_26 : IDENT_15 = IDENT_25 . METHOD_6 ( ) ; METHOD_8 ( ) ; break ; case org . IDENT_8 . IDENT_19 . IDENT_17 . IDENT_27 : METHOD_7 ( ) ; break ; case org . IDENT_8 . IDENT_19 . IDENT_17 . IDENT_28 : METHOD_8 ( ) ; break ; default : throw new java . lang . IllegalArgumentException ( STRING_4 ) ; } return IDENT_15 ; }
org . junit . Assert . assertEquals ( 2 , IDENT_15 . length ) 