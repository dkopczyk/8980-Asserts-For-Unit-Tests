METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( handler , STRING_0 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( handler , STRING_1 ) ; handler . METHOD_2 ( false , STRING_2 , STRING_3 , 200 ) . content ( STRING_4 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_5 . IDENT_6 repository = new com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_5 . METHOD_3 ( METHOD_4 ( ) . getName ( ) , 1 ) ; repository . METHOD_5 ( ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_5 . IDENT_7 config = new com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_5 . METHOD_6 ( STRING_5 ) ; config . METHOD_7 ( false ) ; repository . METHOD_8 ( config ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_5 . METHOD_6 IDENT_8 = new com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_5 . METHOD_6 ( STRING_1 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . entity . IDENT_9 query = new com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . entity . METHOD_9 ( STRING_1 ) ; query . setValue ( STRING_6 , "2" ) ; IDENT_8 . METHOD_10 ( query ) ; repository . METHOD_11 ( IDENT_8 ) ; com . IDENT_10 . IDENT_5 . IDENT_11 [ ] list = repository . METHOD_12 ( "foo" , 5 , 100 ) ; "<AssertPlaceHolder>" ; } METHOD_12 ( java . lang . String , int , long ) { if ( ! ( METHOD_5 ( ) ) ) { return new com . IDENT_10 . IDENT_5 . IDENT_11 [ 0 ] ; } java . util . List < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_5 . IDENT_12 > list = new java . util . IDENT_13 < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_5 . IDENT_12 > ( ) ; METHOD_13 ( query , IDENT_14 , STRING_5 , list ) ; METHOD_13 ( query , IDENT_15 , STRING_1 , list ) ; return list . toArray ( new com . IDENT_10 . IDENT_5 . IDENT_11 [ list . size ( ) ] ) ; }
org . junit . Assert . assertEquals ( 0 , list . length ) 