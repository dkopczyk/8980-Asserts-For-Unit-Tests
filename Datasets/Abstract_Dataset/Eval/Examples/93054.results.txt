METHOD_0 ( ) { final int IDENT_0 = INT_0 ; final java . util . IDENT_1 IDENT_2 = new java . util . METHOD_1 ( ) ; for ( int i = 0 ; i < IDENT_0 ; i ++ ) { final com . googlecode . IDENT_3 . IDENT_4 network = com . googlecode . IDENT_3 . IDENT_4 . METHOD_2 ( new com . googlecode . IDENT_3 . METHOD_3 ( IDENT_2 . METHOD_4 ( ) , IDENT_2 . METHOD_4 ( ) ) , com . googlecode . IDENT_3 . IDENT_5 . METHOD_5 ( ( ( IDENT_2 . METHOD_6 ( INT_1 ) ) + 1 ) ) ) ; "<AssertPlaceHolder>" ; } } METHOD_7 ( java . lang . String ) { if ( ( string . indexOf ( STRING_0 ) ) == ( - 1 ) ) { throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } final java . lang . String IDENT_6 = com . googlecode . IDENT_3 . IDENT_4 . METHOD_8 ( string ) ; int IDENT_7 = com . googlecode . IDENT_3 . IDENT_4 . METHOD_9 ( string ) ; final com . googlecode . IDENT_3 . METHOD_3 IDENT_8 = com . googlecode . IDENT_3 . METHOD_3 . METHOD_7 ( IDENT_6 ) ; return com . googlecode . IDENT_3 . IDENT_4 . METHOD_2 ( IDENT_8 , new com . googlecode . IDENT_3 . METHOD_10 ( IDENT_7 ) ) ; }
org . junit . Assert . assertEquals ( network , com . googlecode . IDENT_3 . IDENT_4 . METHOD_7 ( network . toString ( ) ) ) 