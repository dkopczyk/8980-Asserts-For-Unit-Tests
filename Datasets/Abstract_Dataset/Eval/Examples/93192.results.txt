METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 + ( METHOD_1 ( ) ) ; try { METHOD_2 ( ) ; METHOD_3 ( STRING_1 7 , org . glassfish . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 ) ; METHOD_4 ( STRING_1 2 , IDENT_0 ) ; METHOD_5 ( STRING_2 0 ) ; METHOD_6 ( STRING_1 5 , org . glassfish . IDENT_1 . IDENT_2 . IDENT_5 ) ; METHOD_3 ( STRING_3 , STRING_4 ) ; selenium . METHOD_7 ( STRING_1 3 ) ; METHOD_4 ( STRING_1 4 , STRING_5 ) ; METHOD_4 ( STRING_6 , STRING_1 9 ) ; METHOD_4 ( STRING_7 , STRING_1 6 ) ; METHOD_8 ( STRING_1 0 , STRING_1 , STRING_1 1 ) ; METHOD_4 ( STRING_8 , ( IDENT_0 + STRING_2 ) ) ; METHOD_8 ( STRING_1 0 , STRING_1 , STRING_1 1 ) ; METHOD_4 ( STRING_8 , ( IDENT_0 + STRING_9 ) ) ; METHOD_3 ( STRING_1 8 , org . glassfish . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_6 ) ; "<AssertPlaceHolder>" ; } finally { METHOD_9 ( IDENT_0 ) ; } } METHOD_10 ( java . lang . String ) { boolean METHOD_10 = false ; try { METHOD_10 = super . METHOD_10 ( string ) ; } catch ( java . lang . Exception e ) { sleep ( 1000 ) ; METHOD_10 = super . METHOD_10 ( string ) ; } return METHOD_10 ; }
org . junit . Assert . assertTrue ( METHOD_10 ( IDENT_0 ) ) 