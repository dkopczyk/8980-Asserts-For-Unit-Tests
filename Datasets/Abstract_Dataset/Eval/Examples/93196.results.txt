METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 + ( METHOD_1 ( ) ) ; java . lang . String IDENT_1 = STRING_1 + ( METHOD_1 ( ) ) ; org . glassfish . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = new org . glassfish . IDENT_2 . IDENT_3 . METHOD_2 ( ) ; org . glassfish . IDENT_2 . IDENT_3 . IDENT_6 IDENT_7 = new org . glassfish . IDENT_2 . IDENT_3 . METHOD_3 ( ) ; IDENT_5 . METHOD_4 ( ) ; IDENT_7 . METHOD_5 ( ) ; METHOD_6 ( STRING_2 , org . glassfish . IDENT_2 . IDENT_3 . IDENT_8 . IDENT_9 ) ; METHOD_6 ( STRING_3 , org . glassfish . IDENT_2 . IDENT_3 . IDENT_8 . IDENT_10 ) ; METHOD_7 ( STRING_1 1 , IDENT_0 ) ; METHOD_8 ( STRING_4 , STRING_4 2 ) ; METHOD_9 ( STRING_5 , INT_0 ) ; METHOD_8 ( STRING_4 9 , STRING_1 2 ) ; METHOD_10 ( STRING_1 3 ) ; METHOD_6 ( STRING_1 3 , org . glassfish . IDENT_2 . IDENT_3 . IDENT_8 . IDENT_11 ) ; METHOD_8 ( STRING_4 3 , STRING_6 ) ; METHOD_6 ( STRING_1 5 , org . glassfish . IDENT_2 . IDENT_3 . IDENT_8 . IDENT_9 ) ; "<AssertPlaceHolder>" ; METHOD_6 ( STRING_4 8 , org . glassfish . IDENT_2 . IDENT_3 . IDENT_8 . IDENT_12 ) ; METHOD_6 ( STRING_1 8 , org . glassfish . IDENT_2 . IDENT_3 . IDENT_8 . IDENT_13 ) ; METHOD_7 ( STRING_1 4 , IDENT_1 ) ; METHOD_8 ( STRING_1 0 , IDENT_0 ) ; METHOD_6 ( STRING_4 5 , org . glassfish . IDENT_2 . IDENT_3 . IDENT_8 . IDENT_12 ) ; METHOD_11 ( IDENT_1 , STRING_4 6 , STRING_4 0 , STRING_1 6 , STRING_4 7 , org . glassfish . IDENT_2 . IDENT_3 . IDENT_8 . IDENT_12 , org . glassfish . IDENT_2 . IDENT_3 . IDENT_8 . IDENT_14 , STRING_4 4 ) ; METHOD_12 ( IDENT_1 , STRING_4 6 , STRING_7 , STRING_1 6 , STRING_4 7 , org . glassfish . IDENT_2 . IDENT_3 . IDENT_8 . IDENT_12 , org . glassfish . IDENT_2 . IDENT_3 . IDENT_8 . IDENT_14 , STRING_4 1 ) ; METHOD_13 ( STRING_8 , STRING_4 6 , IDENT_1 ) ; METHOD_6 ( STRING_2 , org . glassfish . IDENT_2 . IDENT_3 . IDENT_8 . IDENT_9 ) ; METHOD_13 ( STRING_9 , STRING_1 7 , IDENT_0 ) ; } METHOD_14 ( java . lang . String ) { boolean METHOD_14 = false ; try { METHOD_14 = super . METHOD_14 ( string ) ; } catch ( java . lang . Exception e ) { sleep ( 1000 ) ; METHOD_14 = super . METHOD_14 ( string ) ; } return METHOD_14 ; }
org . junit . Assert . assertTrue ( METHOD_14 ( IDENT_0 ) ) 