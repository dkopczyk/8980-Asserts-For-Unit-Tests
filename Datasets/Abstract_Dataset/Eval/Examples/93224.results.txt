METHOD_0 ( ) { java . lang . String [ ] data = METHOD_1 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { java . lang . String [ ] command = ( target == null ) ? new java . lang . String [ ] { STRING_1 , STRING_2 } : new java . lang . String [ ] { STRING_1 , STRING_2 , STRING_3 , target } ; org . glassfish . IDENT_0 . batch . test . util . IDENT_1 IDENT_2 = org . glassfish . IDENT_0 . batch . test . util . IDENT_1 . getInstance ( ) . METHOD_2 ( true , command ) ; java . lang . String output = IDENT_2 . result ( ) . get ( 1 ) ; java . lang . String [ ] data = new java . lang . String [ 2 ] ; java . util . IDENT_3 IDENT_4 = new java . util . METHOD_3 ( output , STRING_4 ) ; if ( IDENT_4 . METHOD_4 ( ) ) data [ 0 ] = IDENT_4 . METHOD_5 ( ) ; if ( IDENT_4 . METHOD_4 ( ) ) data [ 1 ] = IDENT_4 . METHOD_5 ( ) ; return data ; }
org . junit . Assert . assertTrue ( ( ( ( ( data . length ) == 2 ) && ( ( data [ 0 ] ) != null ) ) && ( ( data [ 1 ] ) != null ) ) ) 