METHOD_0 ( ) { org . glassfish . IDENT_0 . api . IDENT_1 IDENT_2 = org . glassfish . IDENT_0 . tests . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( org . glassfish . IDENT_0 . tests . IDENT_2 . IDENT_5 . validation . IDENT_6 . class ) ; org . glassfish . IDENT_0 . tests . IDENT_2 . IDENT_5 . validation . IDENT_6 IDENT_7 = IDENT_2 . METHOD_2 ( org . glassfish . IDENT_0 . tests . IDENT_2 . IDENT_5 . validation . IDENT_6 . class ) ; IDENT_7 . METHOD_3 ( true ) ; try { org . glassfish . IDENT_0 . IDENT_3 . IDENT_8 . METHOD_4 ( IDENT_2 , org . glassfish . IDENT_0 . tests . IDENT_2 . IDENT_5 . validation . IDENT_9 . class ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( org . glassfish . IDENT_0 . api . IDENT_10 me ) { } catch ( java . lang . Throwable IDENT_11 ) { if ( IDENT_11 instanceof java . lang . RuntimeException ) { throw ( ( java . lang . RuntimeException ) ( IDENT_11 ) ) ; } throw new java . lang . RuntimeException ( IDENT_11 ) ; } org . glassfish . IDENT_0 . tests . IDENT_2 . IDENT_5 . validation . IDENT_9 IDENT_12 = IDENT_2 . METHOD_2 ( org . glassfish . IDENT_0 . tests . IDENT_2 . IDENT_5 . validation . IDENT_9 . class ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . glassfish . IDENT_0 . api . IDENT_13 ) { if ( ( root ) instanceof org . IDENT_14 . IDENT_0 . internal . IDENT_15 ) { org . IDENT_14 . IDENT_0 . internal . IDENT_15 IDENT_16 = ( ( org . IDENT_14 . IDENT_0 . internal . IDENT_15 ) ( root ) ) ; if ( IDENT_16 . METHOD_5 ( ) ) { throw new java . lang . IllegalStateException ( ( STRING_1 + ( root ) ) ) ; } } MOD_0 ( IDENT_17 ) { if ( IDENT_18 ) throw new java . lang . IllegalStateException ( STRING_2 ) ; if ( IDENT_19 ) return service ; org . glassfish . IDENT_0 . api . IDENT_20 IDENT_21 = METHOD_6 ( ) ; java . lang . Class < ? > IDENT_22 = ( IDENT_21 == null ) ? null : org . glassfish . IDENT_0 . IDENT_3 . IDENT_23 . IDENT_24 . METHOD_7 ( IDENT_21 . METHOD_8 ( ) ) ; service = org . IDENT_14 . IDENT_0 . internal . IDENT_25 . METHOD_9 ( root , IDENT_21 , IDENT_2 , IDENT_26 , IDENT_22 ) ; IDENT_19 = true ; return service ; } }
org . junit . Assert . assertNull ( IDENT_12 ) 