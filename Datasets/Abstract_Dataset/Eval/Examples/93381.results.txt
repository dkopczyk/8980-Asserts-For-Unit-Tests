METHOD_0 ( ) { org . glassfish . IDENT_0 . api . IDENT_1 IDENT_2 = org . glassfish . IDENT_0 . tests . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( ) ; org . glassfish . IDENT_0 . api . IDENT_5 IDENT_6 = org . glassfish . IDENT_0 . IDENT_7 . IDENT_8 . METHOD_2 ( org . glassfish . IDENT_0 . tests . IDENT_2 . IDENT_3 . IDENT_9 . class ) ; org . glassfish . IDENT_0 . IDENT_7 . IDENT_10 . METHOD_3 ( IDENT_2 , IDENT_6 ) ; org . glassfish . IDENT_0 . tests . IDENT_2 . IDENT_3 . IDENT_9 IDENT_11 = IDENT_2 . METHOD_4 ( org . glassfish . IDENT_0 . tests . IDENT_2 . IDENT_3 . IDENT_9 . class ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . glassfish . IDENT_0 . api . IDENT_12 ) { if ( ( root ) instanceof org . IDENT_13 . IDENT_0 . internal . IDENT_14 ) { org . IDENT_13 . IDENT_0 . internal . IDENT_14 IDENT_15 = ( ( org . IDENT_13 . IDENT_0 . internal . IDENT_14 ) ( root ) ) ; if ( IDENT_15 . METHOD_5 ( ) ) { throw new java . lang . IllegalStateException ( ( STRING_0 + ( root ) ) ) ; } } MOD_0 ( IDENT_16 ) { if ( IDENT_17 ) throw new java . lang . IllegalStateException ( STRING_1 ) ; if ( IDENT_18 ) return service ; org . glassfish . IDENT_0 . api . IDENT_19 IDENT_20 = METHOD_6 ( ) ; java . lang . Class < ? > IDENT_21 = ( IDENT_20 == null ) ? null : org . glassfish . IDENT_0 . IDENT_7 . IDENT_22 . IDENT_23 . METHOD_7 ( IDENT_20 . METHOD_8 ( ) ) ; service = org . IDENT_13 . IDENT_0 . internal . IDENT_24 . METHOD_9 ( root , IDENT_20 , IDENT_2 , IDENT_25 , IDENT_21 ) ; IDENT_18 = true ; return service ; } }
org . junit . Assert . assertNotNull ( IDENT_11 ) 