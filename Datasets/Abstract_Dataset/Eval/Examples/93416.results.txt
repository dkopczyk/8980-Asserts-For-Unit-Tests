METHOD_0 ( ) { for ( int n = 1 ; n <= 100 ; n ++ ) { com . sun . mail . IDENT_0 . IDENT_1 IDENT_2 = new com . sun . mail . IDENT_0 . METHOD_1 ( 1 , false ) ; IDENT_2 . METHOD_2 ( ( n - 1 ) , 2 ) ; IDENT_2 . METHOD_3 ( 1 ) ; IDENT_2 . METHOD_2 ( 1 , n ) ; "<AssertPlaceHolder>" ; } } METHOD_4 ( int ) { if ( ( IDENT_3 ) == null ) return IDENT_4 ; else { if ( logger . METHOD_5 ( IDENT_5 . IDENT_6 ) ) logger . METHOD_6 ( ( ( ( STRING_0 + IDENT_4 ) + STRING_1 ) + ( IDENT_3 [ ( IDENT_4 - 1 ) ] ) ) ) ; return IDENT_3 [ ( IDENT_4 - 1 ) ] ; } }
org . junit . Assert . assertEquals ( IDENT_2 . METHOD_4 ( ( n + 1 ) ) , n ) 