METHOD_0 ( ) { java . lang . String IDENT_0 = METHOD_1 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String , boolean ) { java . lang . String [ ] IDENT_1 = response . split ( STRING_1 ) ; java . lang . String IDENT_2 = IDENT_1 [ 0 ] ; java . lang . String IDENT_3 = IDENT_1 [ 1 ] ; java . lang . String IDENT_4 = ( IDENT_5 ) ? STRING_2 : STRING_3 ; boolean IDENT_6 = ( ( ( ( ( ( ( IDENT_2 . contains ( STRING_4 ) ) || ( IDENT_2 . contains ( STRING_5 ) ) ) || ( IDENT_2 . contains ( STRING_6 ) ) ) || ( IDENT_2 . contains ( STRING_7 ) ) ) || ( IDENT_2 . contains ( STRING_8 ) ) ) || ( IDENT_2 . contains ( STRING_9 ) ) ) || ( IDENT_2 . contains ( STRING_10 ) ) ) || ( IDENT_2 . contains ( IDENT_4 ) ) ; boolean IDENT_7 = IDENT_3 . contains ( IDENT_4 ) ; return IDENT_6 && IDENT_7 ; }
org . junit . Assert . assertTrue ( METHOD_2 ( IDENT_0 , true ) ) 