METHOD_0 ( ) { org . mockito . Mockito . when ( IDENT_0 . METHOD_1 ( org . mockito . Mockito . METHOD_2 ( ) ) ) . thenReturn ( IDENT_1 ) ; com . cloud . IDENT_2 . IDENT_3 IDENT_4 = org . mockito . Mockito . mock ( com . cloud . IDENT_2 . IDENT_5 . class ) ; java . util . List < com . cloud . IDENT_2 . IDENT_3 > IDENT_6 = new java . util . ArrayList < com . cloud . IDENT_2 . IDENT_3 > ( ) ; IDENT_6 . add ( IDENT_4 ) ; IDENT_7 . METHOD_3 ( IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( com . cloud . IDENT_8 . manager . IDENT_9 ) { final java . lang . Long IDENT_10 = IDENT_8 . getId ( ) ; final com . cloud . host . IDENT_11 host = IDENT_0 . METHOD_1 ( IDENT_10 ) ; if ( ( ( host != null ) && ( ( host . getType ( ) ) != null ) ) && ( ! ( host . getType ( ) . METHOD_5 ( ) ) ) ) { if ( com . cloud . IDENT_8 . manager . IDENT_12 . IDENT_13 . METHOD_6 ( ) ) { com . cloud . IDENT_8 . manager . IDENT_12 . IDENT_13 . debug ( ( ( STRING_0 + IDENT_10 ) + STRING_1 ) ) ; } final com . cloud . IDENT_8 . api . IDENT_14 IDENT_15 = METHOD_7 ( IDENT_10 , new com . cloud . IDENT_8 . api . METHOD_8 ( ) ) ; if ( ( IDENT_15 != null ) && ( IDENT_15 . METHOD_9 ( ) ) ) { final com . cloud . host . Status status = com . cloud . host . Status . IDENT_16 ; if ( com . cloud . IDENT_8 . manager . IDENT_12 . IDENT_13 . METHOD_6 ( ) ) { com . cloud . IDENT_8 . manager . IDENT_12 . IDENT_13 . debug ( ( ( ( STRING_2 + IDENT_10 ) + STRING_3 ) + status ) ) ; } return status ; } return IDENT_17 . METHOD_4 ( IDENT_10 ) ; } return com . cloud . host . Status . IDENT_18 ; }
org . junit . Assert . assertNull ( IDENT_7 . METHOD_4 ( 1L ) ) 