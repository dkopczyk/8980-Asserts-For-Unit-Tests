METHOD_0 ( ) { b . table ( com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_4 ) ; b . column ( com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_4 , STRING_0 , 0 , STRING_1 , STRING_2 , false ) ; b . column ( com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_4 , STRING_3 , 1 , STRING_1 , STRING_2 , false ) ; b . METHOD_1 ( com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_4 ) ; b . METHOD_2 ( com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_4 , IDENT_5 . IDENT_6 , STRING_0 , 0 , true , null ) ; b . METHOD_3 ( ) ; b . METHOD_4 ( STRING_4 , com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 ) ; b . METHOD_5 ( STRING_4 , com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_4 ) ; b . METHOD_6 ( ) ; com . IDENT_0 . IDENT_1 . model . IDENT_7 IDENT_8 = new com . IDENT_0 . IDENT_1 . model . METHOD_7 ( IDENT_9 , t , s . METHOD_8 ( com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_10 ) ) ; t = IDENT_8 . METHOD_9 ( ) . METHOD_10 ( ) ; "<AssertPlaceHolder>" ; b = new com . IDENT_0 . IDENT_1 . model . METHOD_11 ( IDENT_9 . METHOD_12 ( ) ) ; b . table ( com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , STRING_5 ) ; b . column ( com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , STRING_5 , STRING_6 , 0 , STRING_1 , STRING_5 0 , false ) ; b . METHOD_1 ( com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , STRING_5 ) ; b . METHOD_2 ( com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , STRING_5 , IDENT_5 . IDENT_6 , STRING_6 , 0 , true , null ) ; b . METHOD_4 ( STRING_7 , com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 ) ; b . METHOD_5 ( STRING_7 , com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , STRING_5 ) ; b . table ( com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , STRING_8 ) ; b . column ( com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , STRING_8 , STRING_0 , 0 , STRING_1 , STRING_2 , false ) ; b . column ( com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , STRING_8 , STRING_3 , 1 , STRING_1 , STRING_2 , true ) ; b . METHOD_13 ( STRING_9 , com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , STRING_5 , com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , STRING_8 ) ; b . METHOD_14 ( STRING_9 , com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , STRING_5 , STRING_6 , com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , STRING_8 , STRING_0 ) ; b . METHOD_3 ( ) ; b . METHOD_15 ( STRING_7 , STRING_9 , 0 ) ; b . METHOD_6 ( ) ; METHOD_9 = new com . IDENT_0 . IDENT_1 . model . METHOD_7 ( IDENT_9 , t , b . METHOD_16 ( ) . METHOD_8 ( com . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 , STRING_8 ) ) ; t = METHOD_9 . METHOD_9 ( ) . METHOD_10 ( ) ; } METHOD_17 ( ) { return METHOD_17 ; }
org . junit . Assert . assertTrue ( t . METHOD_17 ( ) ) 