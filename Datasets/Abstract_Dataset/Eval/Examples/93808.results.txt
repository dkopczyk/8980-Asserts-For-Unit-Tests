METHOD_0 ( ) { com . IDENT_0 . sql . IDENT_1 . plan . IDENT_2 value = METHOD_1 ( STRING_0 ) ; com . IDENT_0 . sql . IDENT_1 . plan . IDENT_3 compare = METHOD_2 ( compare ( value , IDENT_4 . IDENT_5 , IDENT_6 ) ) ; com . IDENT_0 . sql . IDENT_1 . rule . range . IDENT_7 expected = null ; "<AssertPlaceHolder>" ; } METHOD_3 ( com . IDENT_0 . sql . IDENT_1 . plan . IDENT_3 ) { if ( node instanceof com . IDENT_0 . sql . IDENT_1 . plan . IDENT_8 ) { com . IDENT_0 . sql . IDENT_1 . plan . IDENT_8 IDENT_9 = ( ( com . IDENT_0 . sql . IDENT_1 . plan . IDENT_8 ) ( node ) ) ; return com . IDENT_0 . sql . IDENT_1 . rule . range . IDENT_7 . METHOD_4 ( IDENT_9 ) ; } else if ( node instanceof com . IDENT_0 . sql . IDENT_1 . plan . IDENT_10 ) { com . IDENT_0 . sql . IDENT_1 . plan . IDENT_10 condition = ( ( com . IDENT_0 . sql . IDENT_1 . plan . IDENT_10 ) ( node ) ) ; if ( ( condition . METHOD_5 ( ) . size ( ) ) != 2 ) return null ; com . IDENT_0 . sql . IDENT_1 . rule . range . IDENT_7 IDENT_11 = com . IDENT_0 . sql . IDENT_1 . rule . range . IDENT_7 . METHOD_3 ( condition . METHOD_6 ( ) ) ; com . IDENT_0 . sql . IDENT_1 . rule . range . IDENT_7 IDENT_12 = com . IDENT_0 . sql . IDENT_1 . rule . range . IDENT_7 . METHOD_3 ( condition . METHOD_7 ( ) ) ; if ( ( IDENT_11 != null ) && ( IDENT_12 != null ) ) { java . util . List < com . IDENT_0 . sql . IDENT_1 . rule . range . IDENT_13 > IDENT_14 = com . IDENT_0 . sql . IDENT_1 . rule . range . IDENT_7 . METHOD_8 ( IDENT_11 , IDENT_12 , condition . METHOD_9 ( ) ) ; if ( IDENT_14 != null ) { return new com . IDENT_0 . sql . IDENT_1 . rule . range . METHOD_10 ( IDENT_11 . METHOD_11 ( ) , condition , IDENT_14 ) ; } } } else if ( node instanceof com . IDENT_0 . sql . IDENT_1 . plan . IDENT_15 ) { com . IDENT_0 . sql . IDENT_1 . plan . IDENT_15 condition = ( ( com . IDENT_0 . sql . IDENT_1 . plan . IDENT_15 ) ( node ) ) ; if ( STRING_1 . equals ( condition . METHOD_9 ( ) ) ) { if ( ( condition . METHOD_5 ( ) . size ( ) ) == 1 ) { com . IDENT_0 . sql . IDENT_1 . plan . IDENT_16 IDENT_17 = condition . METHOD_5 ( ) . get ( 0 ) ; if ( IDENT_17 instanceof com . IDENT_0 . sql . IDENT_1 . plan . IDENT_18 ) { com . IDENT_0 . sql . IDENT_1 . plan . IDENT_18 IDENT_19 = ( ( com . IDENT_0 . sql . IDENT_1 . plan . IDENT_18 ) ( IDENT_17 ) ) ; return new com . IDENT_0 . sql . IDENT_1 . rule . range . METHOD_10 ( IDENT_19 , condition , java . util . Collections . singletonList ( com . IDENT_0 . sql . IDENT_1 . rule . range . IDENT_13 . METHOD_12 ( IDENT_19 ) ) ) ; } } } } else if ( node instanceof com . IDENT_0 . sql . IDENT_1 . plan . IDENT_20 ) { com . IDENT_0 . sql . IDENT_1 . plan . IDENT_20 IDENT_21 = ( ( com . IDENT_0 . sql . IDENT_1 . plan . IDENT_20 ) ( node ) ) ; return com . IDENT_0 . sql . IDENT_1 . rule . range . METHOD_10 . METHOD_13 ( IDENT_21 ) ; } return null ; }
org . junit . Assert . assertEquals ( expected , com . IDENT_0 . sql . IDENT_1 . rule . range . METHOD_10 . METHOD_3 ( compare ) ) 