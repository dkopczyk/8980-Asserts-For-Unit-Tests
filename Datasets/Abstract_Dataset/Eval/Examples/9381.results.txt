METHOD_0 ( ) { IDENT_0 . IDENT_1 = IDENT_1 ; final org . apache . IDENT_2 . network . IDENT_3 . IDENT_4 IDENT_5 = org . mockito . Mockito . mock ( org . apache . IDENT_2 . network . IDENT_3 . IDENT_4 . class ) ; final org . apache . IDENT_2 . network . IDENT_3 . IDENT_6 IDENT_7 = org . mockito . Mockito . mock ( org . apache . IDENT_2 . network . IDENT_3 . IDENT_6 . class ) ; IDENT_8 . METHOD_1 ( IDENT_5 ) ; IDENT_8 . METHOD_2 ( IDENT_7 ) ; IDENT_8 . init ( ) ; final com . cloud . network . IDENT_9 IDENT_10 = org . mockito . Mockito . mock ( com . cloud . network . IDENT_9 . class ) ; final java . util . List < com . cloud . network . IDENT_11 > IDENT_12 = new java . util . ArrayList < com . cloud . network . IDENT_11 > ( ) ; final java . lang . Long IDENT_13 = new java . lang . Long ( 1L ) ; when ( IDENT_10 . METHOD_3 ( ) ) . thenReturn ( IDENT_13 ) ; when ( IDENT_1 . METHOD_4 ( IDENT_13 ) ) . thenReturn ( null ) ; try { final java . lang . String [ ] results = IDENT_0 . METHOD_5 ( IDENT_10 , IDENT_12 ) ; "<AssertPlaceHolder>" ; } catch ( final com . cloud . exception . IDENT_14 e ) { org . junit . Assert . fail ( e . getMessage ( ) ) ; } verify ( IDENT_10 , times ( 1 ) ) . METHOD_3 ( ) ; } METHOD_5 ( com . cloud . network . IDENT_9 , java . util . List ) { if ( ( IDENT_15 . METHOD_6 ( ) ) == null ) { return null ; } final com . cloud . network . IDENT_16 network = IDENT_17 . METHOD_7 ( IDENT_15 . METHOD_6 ( ) ) ; if ( METHOD_8 ( network , IDENT_18 . IDENT_19 ) ) { final java . util . List < com . cloud . IDENT_20 . IDENT_21 > IDENT_22 = IDENT_23 . METHOD_9 ( network . getId ( ) , IDENT_24 . IDENT_25 ) ; if ( ( IDENT_22 == null ) || ( IDENT_22 . isEmpty ( ) ) ) { com . cloud . network . element . IDENT_26 . IDENT_27 . debug ( ( ( STRING_0 + STRING_1 ) + ( network . getId ( ) ) ) ) ; return null ; } final com . cloud . dc . IDENT_28 IDENT_29 = IDENT_30 . METHOD_7 ( network . METHOD_10 ( ) ) ; final org . apache . IDENT_2 . network . IDENT_3 . IDENT_31 IDENT_32 = IDENT_8 . METHOD_11 ( IDENT_29 ) ; return IDENT_32 . METHOD_5 ( network , IDENT_12 , IDENT_22 ) ; } else { com . cloud . network . element . IDENT_26 . IDENT_27 . debug ( ( ( STRING_2 + ( getName ( ) ) ) + STRING_3 ) ) ; return null ; } }
org . junit . Assert . assertNull ( results ) 