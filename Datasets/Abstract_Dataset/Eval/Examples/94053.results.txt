METHOD_0 ( ) { io . IDENT_0 . api . IDENT_1 container = METHOD_1 ( io . IDENT_0 . api . IDENT_1 . class ) ; expect ( container . getId ( ) ) . andReturn ( STRING_0 ) . METHOD_2 ( ) ; expect ( container . METHOD_3 ( ) ) . andReturn ( true ) . METHOD_2 ( ) ; expect ( container . METHOD_4 ( ) ) . andReturn ( true ) . METHOD_2 ( ) ; expect ( container . METHOD_5 ( ) ) . andReturn ( "" ) . times ( 5 ) ; expect ( container . METHOD_5 ( ) ) . andReturn ( IDENT_1 . IDENT_2 ) . METHOD_2 ( ) ; expect ( container . METHOD_6 ( ) ) . andReturn ( STRING_1 ) . METHOD_2 ( ) ; expect ( container . METHOD_7 ( ) ) . andReturn ( null ) . METHOD_2 ( ) ; replay ( container ) ; io . IDENT_0 . IDENT_3 . IDENT_4 . support . IDENT_5 task = new io . IDENT_0 . IDENT_3 . IDENT_4 . support . METHOD_8 ( container , STRING_2 , INT_0 ) ; "<AssertPlaceHolder>" ; verify ( container ) ; } call ( ) { java . lang . String IDENT_6 = METHOD_9 ( ) ; if ( IDENT_6 == null ) { IDENT_6 = java . lang . System . METHOD_10 ( io . IDENT_0 . camel . IDENT_7 . IDENT_8 ) ; } if ( IDENT_6 == null ) { java . lang . String IDENT_9 = java . lang . System . METHOD_10 ( io . IDENT_0 . camel . IDENT_7 . IDENT_10 ) ; if ( IDENT_9 != null ) { java . lang . String IDENT_11 = java . lang . System . METHOD_10 ( io . IDENT_0 . camel . IDENT_7 . IDENT_12 ) ; IDENT_6 = ( IDENT_9 + STRING_3 ) + ( IDENT_11 == null ? STRING_4 : IDENT_11 ) ; } } if ( IDENT_6 == null ) { IDENT_6 = java . lang . System . getProperty ( io . IDENT_0 . camel . IDENT_7 . IDENT_13 , STRING_5 ) ; } java . lang . String IDENT_14 = METHOD_11 ( ) ; if ( IDENT_14 == null ) { java . lang . System . getProperty ( io . IDENT_0 . camel . IDENT_7 . IDENT_15 ) ; } io . IDENT_0 . camel . IDENT_7 . LOG . debug ( ( STRING_6 + IDENT_6 ) ) ; org . apache . IDENT_16 . framework . IDENT_17 . Builder builder = org . apache . IDENT_16 . framework . IDENT_17 . builder ( ) . METHOD_12 ( METHOD_12 ) . METHOD_13 ( new org . apache . IDENT_16 . IDENT_18 . METHOD_14 ( 1000 ) ) . METHOD_15 ( METHOD_16 ( ) ) ; if ( ( IDENT_14 != null ) && ( ! ( IDENT_14 . isEmpty ( ) ) ) ) { builder . authorization ( STRING_7 , ( STRING_8 + IDENT_14 ) . getBytes ( ) ) ; } IDENT_16 = builder . build ( ) ; io . IDENT_0 . camel . IDENT_7 . LOG . debug ( ( STRING_9 + ( IDENT_16 ) ) ) ; IDENT_16 . start ( ) ; return IDENT_16 ; }
org . junit . Assert . assertFalse ( task . call ( ) ) 