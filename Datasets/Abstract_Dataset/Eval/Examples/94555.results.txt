METHOD_0 ( ) { try { java . net . URL url = new java . net . URL ( STRING_0 ) ; "<AssertPlaceHolder>" ; } catch ( java . net . IDENT_0 ex ) { java . util . logging . IDENT_1 . METHOD_1 ( com . IDENT_2 . IDENT_3 . web . IDENT_4 . IDENT_5 . class . getName ( ) ) . log ( IDENT_6 . IDENT_7 , null , ex ) ; org . junit . Assert . fail ( STRING_1 ) ; } } METHOD_2 ( java . net . URL , int ) { if ( ( ( ( url != null ) && ( ! ( IDENT_8 . contains ( url ) ) ) ) && ( METHOD_3 ( url ) ) ) && ( IDENT_9 < ( IDENT_10 ) ) ) { IDENT_8 . add ( url ) ; if ( url . getPath ( ) . METHOD_4 ( "/" ) ) { try { IDENT_8 . add ( new java . net . URL ( url . toString ( ) . substring ( 0 , ( ( url . toString ( ) . length ( ) ) - 1 ) ) ) ) ; } catch ( java . net . IDENT_0 ex ) { java . util . logging . IDENT_1 . METHOD_1 ( com . IDENT_2 . IDENT_3 . web . IDENT_4 . IDENT_11 . class . getName ( ) ) . log ( IDENT_6 . IDENT_7 , null , ex ) ; } } return true ; } return false ; }
org . junit . Assert . assertTrue ( strategy . METHOD_2 ( url , 2 ) ) 