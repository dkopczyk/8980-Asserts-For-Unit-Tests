METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = new org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( new int [ ] { 12 , 3 , 3 , INT_0 , 7 , 5 , INT_1 , INT_2 , INT_2 , INT_3 , INT_4 , INT_5 , INT_3 , INT_4 , INT_6 , INT_5 , INT_7 , INT_6 , INT_1 , INT_0 , INT_0 , 7 , 5 , INT_1 , INT_2 , INT_2 , INT_3 , INT_3 , INT_3 , INT_3 , INT_4 , INT_6 , INT_8 , INT_2 , INT_7 , INT_1 , INT_2 , INT_2 , INT_9 , INT_10 , INT_11 , INT_8 , INT_1 , INT_2 , INT_2 , INT_3 , INT_4 , INT_5 , INT_3 , INT_3 , INT_1 , INT_6 } , new int [ ] { 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 0 , 0 , 1 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 , 1 , 1 , 1 , 0 , 0 , 0 , 1 , 1 , 1 , 1 , 0 , 0 , 1 , 1 , 0 , 1 , 1 , 1 , 0 , 1 , 1 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 0 } ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_6 c = new org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_2 ( ) ; int IDENT_7 = INT_12 ; int IDENT_8 = 8 ; c . IDENT_9 = 0 ; c . IDENT_10 = INT_13 ; c . IDENT_11 = INT_14 ; c . IDENT_12 = new int [ ] { 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 1 , 0 , 2 , 2 , 2 , 2 , 1 , 1 , 3 , 3 , 3 , 3 , 1 , 1 , 1 , 1 , 2 , 2 , 0 , 1 , 1 , 1 , 2 , 2 } ; c . IDENT_13 = new int [ ] { 2 , 2 , 2 , 2 , 2 , 2 , 1 , 1 } ; org . IDENT_0 . common . IDENT_14 . METHOD_3 ( c . IDENT_15 , new int [ ] { INT_3 , INT_4 , INT_6 , INT_15 , INT_0 , INT_16 , INT_5 , INT_17 , INT_18 , INT_19 , INT_20 , INT_9 , INT_1 , INT_2 , INT_2 , INT_6 , 20 , INT_21 , INT_8 , INT_2 , INT_0 , INT_7 , INT_22 , INT_22 , INT_23 , INT_24 , INT_25 , INT_26 , 12 , INT_27 , INT_9 , INT_10 , INT_11 , INT_0 , 7 , 5 , INT_28 , INT_29 , INT_30 , INT_31 , INT_11 , INT_32 , INT_33 , 15 , 9 , 12 , 3 , 3 } , 0 ) ; java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_16 > result = new java . util . ArrayList < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_16 > ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_17 . IDENT_18 mock = new org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_17 . METHOD_4 ( new int [ ] { INT_12 , INT_10 , INT_12 , INT_10 , INT_34 , INT_12 , INT_34 , INT_13 , INT_12 , INT_10 , INT_12 , INT_10 , INT_34 , INT_34 , INT_12 , INT_34 , INT_29 , INT_13 , INT_35 , INT_25 , INT_35 , INT_25 , INT_13 , INT_35 } , new int [ ] { 8 , 8 , 9 , 9 , 8 , 10 , 10 , 8 , 12 , 12 , INT_36 , INT_36 , 12 , INT_36 , INT_37 , INT_37 , INT_37 , 12 , 12 , 12 , INT_36 , INT_36 , INT_37 , INT_37 } , new int [ ] { 2 , 3 , 0 , 3 , 6 , 6 , 6 , 9 , 3 , 3 , 3 , 0 , 5 , 5 , 6 , 4 , 4 , 6 , 2 , 3 , 3 , 3 , 6 , 6 } ) ; mock . METHOD_5 ( IDENT_7 , IDENT_8 , 3 , IDENT_5 , c , result ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_19 . length ; }
org . junit . Assert . assertEquals ( INT_0 , result . size ( ) ) 