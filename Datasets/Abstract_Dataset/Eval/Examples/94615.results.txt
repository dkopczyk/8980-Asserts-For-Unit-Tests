METHOD_0 ( ) { java . io . File f = new java . io . File ( STRING_0 ) ; java . nio . ByteBuffer read = java . nio . ByteBuffer . METHOD_1 ( ( INT_0 * INT_1 ) ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_2 ( f ) . write ( read ) ; read . METHOD_3 ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_4 ( STRING_1 , new org . IDENT_0 . common . METHOD_5 ( f ) ) ; java . nio . IDENT_6 IDENT_7 = org . IDENT_0 . common . io . IDENT_8 . METHOD_6 ( f ) ; IDENT_7 . position ( ( ( int ) ( IDENT_5 . METHOD_7 ( ) ) ) ) ; IDENT_7 . METHOD_8 ( ( ( int ) ( ( IDENT_7 . position ( ) ) + ( IDENT_5 . METHOD_9 ( ) . METHOD_10 ( ) ) ) ) ) ; boolean equals = read . equals ( IDENT_7 ) ; if ( ! equals ) { } "<AssertPlaceHolder>" ; } equals ( java . lang . Object ) { if ( ! ( obj instanceof org . IDENT_0 . IDENT_1 . IDENT_9 . model . IDENT_10 ) ) return false ; byte [ ] other = ( ( org . IDENT_0 . IDENT_1 . IDENT_9 . model . IDENT_10 ) ( obj ) ) . bytes ; for ( int i = 4 ; i < ( java . lang . Math . min ( bytes . length , other . length ) ) ; i ++ ) if ( ( bytes [ i ] ) != ( other [ i ] ) ) return false ; return true ; }
org . junit . Assert . assertTrue ( equals ) 