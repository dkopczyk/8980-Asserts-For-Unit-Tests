METHOD_0 ( ) { com . couchbase . jdbc . IDENT_0 . METHOD_1 ( null ) ; org . json . simple . JSONObject obj = new org . json . simple . JSONObject ( ) ; java . lang . String IDENT_1 = STRING_0 ; com . couchbase . jdbc . IDENT_0 . METHOD_2 ( IDENT_1 ) ; java . util . HashMap < java . lang . String , java . lang . Object > map = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; java . lang . StringBuffer IDENT_2 = new java . lang . StringBuffer ( ) ; for ( int i = 0 ; i < 1000 ; i ++ ) { IDENT_2 . append ( STRING_1 ) ; } map . put ( "name" , IDENT_2 . toString ( ) ) ; map . put ( STRING_2 , INT_0 ) ; obj . METHOD_3 ( map ) ; org . json . simple . IDENT_3 IDENT_4 = new org . json . simple . METHOD_4 ( ) ; java . util . HashMap < java . lang . String , org . json . simple . JSONObject > IDENT_5 = new java . util . HashMap < java . lang . String , org . json . simple . JSONObject > ( ) ; IDENT_5 . put ( "1" , obj ) ; IDENT_4 . add ( obj ) ; com . couchbase . jdbc . IDENT_0 . METHOD_5 ( IDENT_5 , STRING_3 ) ; java . lang . String query = STRING_4 ; org . json . simple . METHOD_4 IDENT_6 = com . couchbase . jdbc . IDENT_0 . METHOD_6 ( query ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( java . lang . String ) { com . couchbase . jdbc . IDENT_0 . METHOD_1 ( null ) ; org . json . simple . METHOD_4 IDENT_7 = new org . json . simple . METHOD_4 ( ) ; try ( com . couchbase . jdbc . IDENT_8 IDENT_9 = com . couchbase . jdbc . IDENT_0 . IDENT_9 ) { try ( com . couchbase . jdbc . IDENT_10 stmt = IDENT_9 . METHOD_7 ( ) ) { try ( com . couchbase . jdbc . ResultSet rs = stmt . METHOD_8 ( query ) ) { return com . couchbase . jdbc . IDENT_0 . METHOD_9 ( rs ) ; } } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; } } return IDENT_7 ; }
org . junit . Assert . assertEquals ( IDENT_4 , IDENT_6 ) 