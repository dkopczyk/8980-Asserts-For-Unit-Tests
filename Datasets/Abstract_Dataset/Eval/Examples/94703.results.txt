METHOD_0 ( ) { java . io . File f = java . io . File . METHOD_1 ( "test" , "test" ) ; java . net . URL IDENT_0 = com . IDENT_1 . util . IDENT_2 . class . METHOD_2 ( ) . getResource ( STRING_0 ) ; java . io . IDENT_3 in = new java . io . METHOD_3 ( new java . io . File ( IDENT_0 . METHOD_4 ( ) ) ) ; java . net . IDENT_4 c = mock ( java . net . IDENT_4 . class ) ; when ( c . METHOD_5 ( ) ) . thenReturn ( in ) ; when ( c . METHOD_6 ( ) ) . thenReturn ( STRING_1 ) ; com . IDENT_1 . util . IDENT_5 . METHOD_7 ( c , f , null ) ; com . IDENT_1 . util . IDENT_5 . close ( in ) ; java . io . METHOD_3 IDENT_6 = new java . io . METHOD_3 ( f ) ; java . io . ByteArrayOutputStream IDENT_7 = new java . io . ByteArrayOutputStream ( INT_0 ) ; com . IDENT_1 . util . IDENT_5 . METHOD_7 ( IDENT_6 , IDENT_7 ) ; com . IDENT_1 . util . IDENT_5 . close ( IDENT_6 ) ; com . IDENT_1 . util . IDENT_5 . close ( IDENT_7 ) ; java . io . ByteArrayOutputStream IDENT_8 = METHOD_8 ( ) ; "<AssertPlaceHolder>" ; f . delete ( ) ; } METHOD_8 ( ) { java . net . URL IDENT_0 = com . IDENT_1 . util . IDENT_2 . class . METHOD_2 ( ) . getResource ( STRING_2 ) ; java . io . ByteArrayOutputStream start = new java . io . ByteArrayOutputStream ( INT_0 ) ; java . io . METHOD_3 in = new java . io . METHOD_3 ( IDENT_0 . METHOD_4 ( ) ) ; com . IDENT_1 . util . IDENT_5 . METHOD_7 ( in , start ) ; com . IDENT_1 . util . IDENT_5 . close ( in ) ; return start ; }
org . junit . Assert . assertArrayEquals ( IDENT_8 . toByteArray ( ) , IDENT_7 . toByteArray ( ) ) 