METHOD_0 ( ) { IDENT_0 . edu . IDENT_1 . IDENT_2 . IDENT_3 . dao . IDENT_4 . log . debug ( STRING_0 ) ; IDENT_0 . edu . IDENT_1 . IDENT_2 . IDENT_5 . model . IDENT_6 IDENT_7 = new IDENT_0 . edu . IDENT_1 . IDENT_2 . IDENT_5 . model . METHOD_1 ( STRING_1 , STRING_2 , STRING_3 ) ; METHOD_2 ( ) . save ( IDENT_7 ) ; IDENT_0 . edu . IDENT_1 . IDENT_2 . IDENT_5 . model . IDENT_8 IDENT_9 = new IDENT_0 . edu . IDENT_1 . IDENT_2 . IDENT_5 . model . METHOD_3 ( STRING_4 , STRING_5 , STRING_5 , STRING_6 1 , IDENT_7 ) ; METHOD_2 ( ) . save ( IDENT_9 ) ; for ( int i = 0 ; i < 5 ; i ++ ) { IDENT_0 . edu . IDENT_1 . IDENT_2 . IDENT_3 . model . IDENT_10 IDENT_11 = new IDENT_0 . edu . IDENT_1 . IDENT_2 . IDENT_3 . model . METHOD_4 ( ) ; IDENT_11 . METHOD_5 ( ( STRING_7 + i ) ) ; IDENT_11 . METHOD_6 ( STRING_6 0 ) ; IDENT_11 . METHOD_7 ( ( STRING_6 + i ) ) ; IDENT_11 . METHOD_8 ( STRING_8 ) ; IDENT_11 . METHOD_9 ( IDENT_9 ) ; instance . METHOD_10 ( IDENT_11 , null ) ; "<AssertPlaceHolder>" ; } java . util . Map < java . lang . String , java . lang . Object > params = new java . util . HashMap ( ) ; params . put ( STRING_9 , IDENT_9 . getId ( ) ) ; java . util . Map < java . lang . String , java . lang . Object > result = instance . METHOD_11 ( params ) ; } getId ( ) { return id ; }
org . junit . Assert . assertNotNull ( IDENT_11 . getId ( ) ) 