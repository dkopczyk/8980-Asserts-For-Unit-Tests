METHOD_0 ( ) { final int IDENT_0 = 1 ; final int IDENT_1 = 2 ; final int IDENT_2 = 3 ; final org . IDENT_3 . IDENT_4 version = new org . IDENT_3 . METHOD_1 ( IDENT_0 , IDENT_1 , IDENT_2 ) ; final org . IDENT_3 . METHOD_1 IDENT_5 = new org . IDENT_3 . METHOD_2 ( org . IDENT_3 . IDENT_6 . IDENT_7 ) . METHOD_3 ( version ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . IDENT_3 . METHOD_1 ) { if ( IDENT_8 == null ) { throw new java . lang . IllegalArgumentException ( STRING_0 ) ; } if ( IDENT_8 . METHOD_4 ( ) ) { throw new java . lang . IllegalArgumentException ( ( ( STRING_1 + IDENT_8 ) + STRING_2 ) ) ; } final org . IDENT_3 . METHOD_2 . IDENT_9 IDENT_10 = METHOD_5 ( ) ; return org . IDENT_3 . METHOD_2 . METHOD_6 ( IDENT_8 , IDENT_10 ) ; }
org . junit . Assert . assertEquals ( new org . IDENT_3 . METHOD_1 ( IDENT_0 , IDENT_1 , ( IDENT_2 + 1 ) ) , IDENT_5 ) 