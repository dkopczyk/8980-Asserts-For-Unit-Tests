METHOD_0 ( ) { final java . lang . String IDENT_0 = METHOD_1 ( ) ; try { org . junit . runner . IDENT_1 IDENT_2 = description ( STRING_0 ) ; org . IDENT_3 . test . IDENT_4 . IDENT_5 . IDENT_6 IDENT_7 = rule ( IDENT_2 ) ; IDENT_7 . METHOD_2 ( IDENT_2 ) ; System . out . println ( STRING_1 ) ; IDENT_7 . METHOD_3 ( IDENT_2 ) ; java . io . File IDENT_8 = METHOD_4 ( IDENT_2 ) ; "<AssertPlaceHolder>" ; METHOD_4 . delete ( ) ; } finally { METHOD_5 ( IDENT_0 ) ; } } METHOD_6 ( ) { return new org . IDENT_3 . test . IDENT_4 . IDENT_9 < java . io . File > ( STRING_2 ) { @ org . IDENT_3 . test . IDENT_4 . Override public boolean METHOD_7 ( final java . io . File item ) { return ( item . exists ( ) ) && ( item . METHOD_8 ( ) ) ; } @ org . IDENT_3 . test . IDENT_4 . Override public void METHOD_9 ( final java . io . File item , final org . hamcrest . IDENT_1 IDENT_2 ) { IDENT_2 . METHOD_10 ( ( STRING_3 + ( item . getAbsolutePath ( ) ) ) ) ; } } ; }
org . junit . Assert . assertThat ( METHOD_4 , org . hamcrest . core . Is . is ( org . IDENT_3 . test . IDENT_4 . Matchers . METHOD_6 ( ) ) ) 