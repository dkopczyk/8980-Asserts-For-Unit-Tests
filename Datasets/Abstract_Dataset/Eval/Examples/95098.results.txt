METHOD_0 ( ) { jenkins . plugins . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new jenkins . plugins . IDENT_0 . IDENT_1 . METHOD_1 ( STRING_0 7 , STRING_0 5 , STRING_0 0 ) ; when ( IDENT_4 . METHOD_2 ( ) ) . thenReturn ( STRING_1 ) ; when ( IDENT_4 . METHOD_3 ( ) ) . thenReturn ( INT_0 ) ; when ( IDENT_4 . METHOD_4 ( ) ) . thenReturn ( STRING_2 ) ; when ( IDENT_4 . METHOD_5 ( ) ) . thenReturn ( STRING_0 4 ) ; when ( IDENT_4 . METHOD_6 ( ) ) . thenReturn ( false ) ; jenkins . plugins . IDENT_0 . IDENT_1 . IDENT_5 IDENT_6 = new jenkins . plugins . IDENT_0 . Utils . METHOD_7 ( ) . METHOD_8 ( true ) . build ( ) ; jenkins . plugins . IDENT_0 . IDENT_1 . IDENT_7 IDENT_8 = new jenkins . plugins . IDENT_0 . Utils . METHOD_9 ( ) . build ( ) ; jenkins . plugins . IDENT_0 . IDENT_1 . IDENT_9 IDENT_10 = new jenkins . plugins . IDENT_0 . Utils . METHOD_10 ( ) . METHOD_11 ( IDENT_3 ) . METHOD_12 ( IDENT_8 ) . METHOD_13 ( IDENT_6 ) . build ( ) ; jenkins . plugins . IDENT_0 . IDENT_1 . IDENT_11 IDENT_12 = new jenkins . plugins . IDENT_0 . IDENT_1 . METHOD_14 ( build , IDENT_13 , listener , IDENT_10 , org . apache . commons . lang . StringUtils . IDENT_14 , IDENT_15 , IDENT_3 , IDENT_4 ) ; METHOD_15 ( new java . lang . String [ ] { STRING_3 , STRING_0 3 , STRING_0 2 , STRING_4 , STRING_5 , STRING_1 , STRING_6 , STRING_7 , STRING_8 , STRING_0 0 , STRING_0 , STRING_2 , STRING_0 1 } ) ; IDENT_12 . METHOD_16 ( ) ; "<AssertPlaceHolder>" ; IDENT_16 . METHOD_17 ( ( STRING_9 + ( IDENT_17 . toString ( ) ) ) ) ; } METHOD_16 ( ) { boolean IDENT_18 = false ; jenkins . plugins . IDENT_0 . IDENT_1 . IDENT_7 IDENT_8 = IDENT_10 . METHOD_18 ( ) ; if ( ( IDENT_8 != null ) && ( IDENT_8 . METHOD_19 ( ) ) ) { IDENT_18 = true ; } if ( METHOD_20 ( ) ) { METHOD_21 ( ) ; return jenkins . plugins . IDENT_0 . IDENT_1 . IDENT_19 . METHOD_22 ( IDENT_20 , build , IDENT_13 , listener , IDENT_15 , IDENT_18 ) ; } return 0 ; }
org . junit . Assert . assertEquals ( STRING_0 4 , IDENT_15 . get ( STRING_0 6 ) ) 