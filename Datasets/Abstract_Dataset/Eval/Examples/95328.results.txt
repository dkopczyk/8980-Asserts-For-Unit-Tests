METHOD_0 ( ) { METHOD_1 ( client . METHOD_2 ( STRING_0 , STRING_1 , IDENT_0 . IDENT_1 , false ) ) . METHOD_3 ( STRING_2 ) ; java . lang . String result = server . METHOD_4 ( STRING_3 ) ; verify ( client ) . METHOD_2 ( STRING_0 , STRING_1 , IDENT_0 . IDENT_1 , false ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String , java . lang . String , org . apache . http . entity . IDENT_0 , boolean ) { org . apache . http . client . methods . IDENT_2 request = new org . apache . http . client . methods . METHOD_5 ( com . IDENT_3 . jenkins . client . util . IDENT_4 . METHOD_6 ( uri , context , path ) ) ; METHOD_7 ( IDENT_5 , request ) ; if ( IDENT_6 != null ) { request . METHOD_8 ( new org . apache . http . entity . METHOD_9 ( IDENT_6 , IDENT_7 ) ) ; } org . apache . http . IDENT_8 response = client . execute ( request , IDENT_9 ) ; IDENT_10 = com . IDENT_3 . jenkins . client . util . IDENT_11 . METHOD_10 ( response ) ; try { IDENT_12 . METHOD_11 ( response ) ; return org . apache . commons . io . IDENT_13 . toString ( response . METHOD_12 ( ) . METHOD_13 ( ) ) ; } finally { org . apache . http . util . IDENT_14 . METHOD_14 ( response . METHOD_12 ( ) ) ; METHOD_15 ( request ) ; } }
org . junit . Assert . assertEquals ( STRING_2 , result ) 