METHOD_0 ( ) { final java . io . ByteArrayOutputStream IDENT_0 = new java . io . ByteArrayOutputStream ( ) ; try ( final org . apache . commons . codec . IDENT_1 . IDENT_2 IDENT_3 = new org . apache . commons . codec . IDENT_1 . METHOD_1 ( IDENT_0 ) ) { IDENT_3 . write ( org . apache . commons . codec . IDENT_1 . StringUtils . METHOD_2 ( org . apache . commons . codec . IDENT_1 . IDENT_4 . IDENT_5 ) ) ; } final java . io . ByteArrayInputStream IDENT_6 = new java . io . ByteArrayInputStream ( IDENT_0 . toByteArray ( ) ) ; final org . apache . commons . codec . IDENT_1 . IDENT_7 IDENT_8 = new org . apache . commons . codec . IDENT_1 . METHOD_3 ( IDENT_6 ) ; IDENT_8 . METHOD_4 ( 1 ) ; final byte [ ] IDENT_9 = org . apache . commons . codec . IDENT_1 . IDENT_10 . METHOD_5 ( IDENT_8 , new byte [ INT_0 ] ) ; final java . lang . String str = org . apache . commons . codec . IDENT_1 . StringUtils . METHOD_6 ( IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( byte [ ] ) { return org . apache . commons . codec . IDENT_1 . StringUtils . METHOD_7 ( bytes , IDENT_11 . UTF_8 ) ; }
org . junit . Assert . assertEquals ( org . apache . commons . codec . IDENT_1 . IDENT_4 . IDENT_5 . substring ( 1 ) , str ) 