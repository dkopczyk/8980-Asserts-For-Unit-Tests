METHOD_0 ( ) { org . jfree . data . IDENT_0 . IDENT_1 IDENT_2 = new org . jfree . data . IDENT_0 . METHOD_1 ( STRING_0 ) ; IDENT_2 . add ( new org . jfree . data . IDENT_0 . METHOD_2 ( STRING_1 , new java . util . Date ( 1 ) , new java . util . Date ( 2 ) ) ) ; IDENT_2 . add ( new org . jfree . data . IDENT_0 . METHOD_2 ( STRING_2 , new java . util . Date ( INT_0 ) , new java . util . Date ( INT_1 ) ) ) ; org . jfree . data . IDENT_0 . METHOD_1 IDENT_3 = new org . jfree . data . IDENT_0 . METHOD_1 ( STRING_0 ) ; IDENT_3 . add ( new org . jfree . data . IDENT_0 . METHOD_2 ( STRING_1 , new java . util . Date ( 1 ) , new java . util . Date ( 2 ) ) ) ; IDENT_3 . add ( new org . jfree . data . IDENT_0 . METHOD_2 ( STRING_2 , new java . util . Date ( INT_0 ) , new java . util . Date ( INT_1 ) ) ) ; org . jfree . data . IDENT_0 . IDENT_4 IDENT_5 = new org . jfree . data . IDENT_0 . METHOD_3 ( ) ; IDENT_5 . add ( IDENT_2 ) ; IDENT_5 . add ( IDENT_3 ) ; org . jfree . data . IDENT_0 . METHOD_3 IDENT_6 = ( ( org . jfree . data . IDENT_0 . METHOD_3 ) ( org . jfree . chart . TestUtils . METHOD_4 ( IDENT_5 ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . Object ) { java . lang . Object result = null ; java . io . ByteArrayOutputStream buffer = new java . io . ByteArrayOutputStream ( ) ; java . io . IDENT_7 out ; try { out = new java . io . METHOD_5 ( buffer ) ; out . METHOD_6 ( original ) ; out . close ( ) ; java . io . IDENT_8 in = new java . io . METHOD_7 ( new java . io . ByteArrayInputStream ( buffer . toByteArray ( ) ) ) ; result = in . METHOD_8 ( ) ; in . close ( ) ; } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( e ) ; } catch ( java . lang . IDENT_9 e ) { throw new java . lang . RuntimeException ( e ) ; } return result ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_6 ) 