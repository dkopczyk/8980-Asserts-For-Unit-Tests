METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 IDENT_7 = com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_1 ( ) . METHOD_2 ( FLOAT_0 ) . METHOD_2 ( FLOAT_1 ) . build ( ) ; byte [ ] IDENT_8 = IDENT_7 . toByteArray ( ) ; System . out . println ( java . util . Arrays . toString ( IDENT_8 ) ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_9 type = new com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_3 ( ) ; type . IDENT_10 = new java . util . ArrayList < java . lang . Double > ( ) ; type . IDENT_10 . add ( FLOAT_0 ) ; type . IDENT_10 . add ( FLOAT_1 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_11 < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_3 > proxy = com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_12 . create ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_3 . class ) ; try { byte [ ] IDENT_13 = proxy . encode ( type ) ; System . out . println ( java . util . Arrays . toString ( IDENT_13 ) ) ; "<AssertPlaceHolder>" ; } catch ( java . io . IOException e ) { e . printStackTrace ( ) ; } } encode ( T ) { if ( t == null ) { throw new java . lang . RuntimeException ( STRING_0 ) ; } int size = size ( t ) ; byte [ ] bytes = new byte [ size ] ; com . google . IDENT_3 . IDENT_14 out = com . google . IDENT_3 . IDENT_14 . newInstance ( bytes ) ; METHOD_4 ( t , out ) ; return bytes ; }
org . junit . Assert . assertArrayEquals ( IDENT_8 , IDENT_13 ) 