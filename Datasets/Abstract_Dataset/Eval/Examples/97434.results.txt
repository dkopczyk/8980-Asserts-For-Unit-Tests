METHOD_0 ( ) { java . lang . IDENT_0 IDENT_1 = mock ( IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_0 . class ) ; when ( IDENT_1 . compareTo ( any ( ) ) ) . METHOD_1 ( IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . class ) ; int result = IDENT_7 . compare ( IDENT_1 , mock ( IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_0 . class ) ) ; "<AssertPlaceHolder>" ; verify ( IDENT_1 , METHOD_2 ( ) ) . compareTo ( any ( ) ) ; } compare ( java . lang . Object , java . lang . Object ) { logger . debug ( STRING_0 , IDENT_1 , IDENT_8 ) ; int result = 0 ; java . lang . IDENT_0 IDENT_9 = METHOD_3 ( IDENT_1 ) ; java . lang . IDENT_0 IDENT_10 = METHOD_3 ( IDENT_8 ) ; if ( ( IDENT_9 == null ) && ( IDENT_10 == null ) ) { logger . debug ( STRING_1 ) ; result = 0 ; } else if ( ( IDENT_9 == null ) && ( IDENT_10 != null ) ) { logger . debug ( STRING_2 , IDENT_10 ) ; result = - 1 ; } else if ( ( IDENT_9 != null ) && ( IDENT_10 == null ) ) { logger . debug ( STRING_3 , IDENT_9 ) ; result = 1 ; } else { try { result = IDENT_9 . compareTo ( IDENT_10 ) ; logger . debug ( STRING_4 , IDENT_9 , IDENT_10 , result ) ; } catch ( java . lang . Exception ex ) { logger . debug ( STRING_5 , ex . toString ( ) , IDENT_9 , IDENT_10 ) ; result = 0 ; } } logger . debug ( STRING_6 , result ) ; return result ; }
org . junit . Assert . assertEquals ( 0 , result ) 