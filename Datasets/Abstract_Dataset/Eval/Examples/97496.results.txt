METHOD_0 ( ) { try { "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; } if ( ( IDENT_0 ) != 0 ) System . out . println ( ( ( ( STRING_0 + ( IDENT_1 ) ) + STRING_1 ) + ( IDENT_0 ) ) ) ; else System . out . println ( ( STRING_0 + ( IDENT_1 ) ) ) ; } METHOD_1 ( ) { org . IDENT_2 . IDENT_3 . tests . IDENT_4 . IDENT_5 IDENT_6 = new org . IDENT_2 . IDENT_3 . tests . IDENT_4 . METHOD_2 ( ) ; org . IDENT_2 . IDENT_3 . params . IDENT_7 IDENT_8 ; while ( IDENT_9 . METHOD_3 ( IDENT_6 ) ) { if ( IDENT_6 . IDENT_10 . contains ( STRING_2 ) ) { ( IDENT_0 ) ++ ; continue ; } if ( IDENT_6 . IDENT_10 . contains ( STRING_3 ) ) { IDENT_8 = new org . IDENT_2 . IDENT_3 . params . METHOD_4 ( new org . IDENT_11 . crypto . params . METHOD_5 ( IDENT_6 . IDENT_12 ) , IDENT_6 . IDENT_13 , IDENT_6 . IDENT_14 ) ; org . IDENT_2 . IDENT_3 . IDENT_15 . IDENT_16 IDENT_17 = new org . IDENT_2 . IDENT_3 . IDENT_15 . METHOD_6 ( ) ; IDENT_17 . init ( IDENT_8 ) ; IDENT_17 . METHOD_7 ( IDENT_6 . msg , 0 , IDENT_6 . IDENT_18 ) ; byte [ ] IDENT_19 = new byte [ IDENT_17 . METHOD_8 ( ) ] ; IDENT_17 . METHOD_9 ( IDENT_19 , 0 ) ; if ( ! ( java . util . Arrays . equals ( IDENT_19 , IDENT_6 . result ) ) ) { System . out . println ( ( ( ( ( ( ( ( IDENT_6 . IDENT_13 ) + STRING_4 ) + ( IDENT_6 . IDENT_14 ) ) + STRING_4 ) + ( IDENT_6 . IDENT_18 ) ) + STRING_4 ) + ( IDENT_6 . IDENT_10 ) ) ) ; org . IDENT_2 . IDENT_3 . tests . IDENT_4 . METHOD_10 ( STRING_5 , IDENT_19 , IDENT_19 . length ) ; org . IDENT_2 . IDENT_3 . tests . IDENT_4 . METHOD_10 ( STRING_6 , IDENT_6 . result , IDENT_6 . result . length ) ; return false ; } ( IDENT_1 ) ++ ; continue ; } org . IDENT_2 . IDENT_3 . IDENT_20 . IDENT_21 IDENT_22 = new org . IDENT_2 . IDENT_3 . IDENT_20 . METHOD_11 ( IDENT_6 . IDENT_13 , IDENT_6 . IDENT_14 ) ; IDENT_22 . METHOD_7 ( IDENT_6 . msg , 0 , IDENT_6 . IDENT_18 ) ; byte [ ] hash = IDENT_22 . METHOD_9 ( ) ; if ( ! ( java . util . Arrays . equals ( hash , IDENT_6 . result ) ) ) { System . out . println ( ( ( ( ( ( ( ( IDENT_6 . IDENT_13 ) + STRING_4 ) + ( IDENT_6 . IDENT_14 ) ) + STRING_4 ) + ( IDENT_6 . IDENT_18 ) ) + STRING_4 ) + ( IDENT_6 . IDENT_10 ) ) ) ; org . IDENT_2 . IDENT_3 . tests . IDENT_4 . METHOD_10 ( STRING_7 , hash , hash . length ) ; org . IDENT_2 . IDENT_3 . tests . IDENT_4 . METHOD_10 ( STRING_6 , IDENT_6 . result , IDENT_6 . result . length ) ; return false ; } ( IDENT_1 ) ++ ; } return true ; }
org . junit . Assert . assertTrue ( METHOD_1 ( ) ) 