METHOD_0 ( ) { final org . IDENT_0 . util . IDENT_1 IDENT_2 = org . IDENT_0 . util . IDENT_3 . METHOD_1 ( ) ; final org . IDENT_0 . util . IDENT_4 executor = org . IDENT_0 . util . IDENT_3 . METHOD_2 ( ) ; final org . IDENT_0 . util . IDENT_5 IDENT_6 = new org . IDENT_0 . util . METHOD_3 ( 5 ) ; final org . IDENT_0 . util . IDENT_7 IDENT_8 = new org . IDENT_0 . util . METHOD_4 ( IDENT_2 , executor ) { @ org . IDENT_0 . util . Override MOD_0 org . IDENT_0 . util . IDENT_9 METHOD_5 ( ) { return org . IDENT_0 . util . IDENT_9 . METHOD_6 ( ( ( IDENT_6 . METHOD_7 ( ) ) > 1 ? 100 : - 1 ) ) ; } @ org . IDENT_0 . util . Override MOD_0 void run ( ) { IDENT_6 . METHOD_8 ( ) ; } } ; IDENT_8 . METHOD_9 ( ) ; IDENT_6 . METHOD_10 ( 1000 , TimeUnit . IDENT_10 ) ; "<AssertPlaceHolder>" ; IDENT_8 . METHOD_11 ( ) ; executor . METHOD_12 ( ) ; IDENT_2 . METHOD_12 ( ) ; } METHOD_9 ( ) { MOD_1 ( IDENT_11 ) { if ( ( ( IDENT_12 ) == null ) || ( IDENT_12 . METHOD_13 ( ) ) ) { IDENT_12 = org . IDENT_0 . IDENT_13 . IDENT_14 . IDENT_15 . METHOD_14 ( IDENT_16 , IDENT_17 . IDENT_18 , IDENT_17 . IDENT_18 , TimeUnit . IDENT_10 ) ; } } }
org . junit . Assert . assertEquals ( 1 , IDENT_6 . METHOD_7 ( ) ) 