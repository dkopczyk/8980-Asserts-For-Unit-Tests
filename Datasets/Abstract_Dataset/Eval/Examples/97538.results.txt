METHOD_0 ( ) { java . util . concurrent . IDENT_0 IDENT_1 = new java . util . concurrent . METHOD_1 ( 1 ) ; java . util . concurrent . IDENT_2 < java . lang . Integer > IDENT_3 = dao . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( 1L ) ) ; java . util . concurrent . IDENT_2 < java . lang . Integer > IDENT_4 = dao . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( 1L ) ) ; java . util . concurrent . IDENT_2 . METHOD_5 ( IDENT_3 , IDENT_4 ) . METHOD_6 ( ( v ) -> io . github . IDENT_5 . vertx . IDENT_6 . IDENT_7 . IDENT_8 . future . dao . METHOD_7 ( IDENT_9 . IDENT_10 . IDENT_11 . eq ( 1L ) ) ) . METHOD_8 ( ( values ) -> "<AssertPlaceHolder>" ) . METHOD_6 ( ( v ) -> io . github . IDENT_5 . vertx . IDENT_6 . IDENT_7 . IDENT_8 . future . dao . METHOD_9 ( IDENT_9 . IDENT_10 . IDENT_11 . eq ( 1L ) ) ) . METHOD_10 ( METHOD_11 ( IDENT_1 ) ) ; METHOD_12 ( IDENT_1 ) ; } METHOD_4 ( java . lang . Long ) { set ( 2 , value ) ; return this ; }
org . junit . Assert . assertEquals ( 2 , values . size ( ) ) 