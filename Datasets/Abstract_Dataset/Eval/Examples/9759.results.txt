METHOD_0 ( ) { java . io . File o = new java . io . File ( IDENT_0 , STRING_0 ) ; try ( java . io . InputStream is = new java . io . METHOD_1 ( METHOD_2 ( STRING_1 ) ) ; org . apache . commons . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 in = new org . apache . commons . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_3 ( is , ( 1 << 16 ) , IDENT_5 . IDENT_6 ) ; java . io . IDENT_7 out = new java . io . METHOD_4 ( o ) ) { org . apache . commons . IDENT_1 . utils . IDENT_8 . METHOD_5 ( in , out ) ; } try ( java . io . METHOD_1 a = new java . io . METHOD_1 ( o ) ; java . io . METHOD_1 e = new java . io . METHOD_1 ( METHOD_2 ( STRING_2 ) ) ) { byte [ ] expected = org . apache . commons . IDENT_1 . utils . IDENT_8 . toByteArray ( e ) ; byte [ ] actual = org . apache . commons . IDENT_1 . utils . IDENT_8 . toByteArray ( a ) ; "<AssertPlaceHolder>" ; } } toByteArray ( java . io . InputStream ) { final java . io . ByteArrayOutputStream output = new java . io . ByteArrayOutputStream ( ) ; org . apache . commons . IDENT_1 . utils . IDENT_8 . METHOD_5 ( input , output ) ; return output . toByteArray ( ) ; }
org . junit . Assert . assertArrayEquals ( expected , actual ) 