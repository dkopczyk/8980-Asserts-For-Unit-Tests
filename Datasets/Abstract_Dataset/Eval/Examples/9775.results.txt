METHOD_0 ( ) { final org . apache . commons . configuration2 . IDENT_0 instance = new org . apache . commons . configuration2 . METHOD_1 ( ) ; instance . METHOD_2 ( STRING_0 , "bar" ) ; instance . METHOD_2 ( STRING_1 , STRING_2 ) ; final java . util . Set < java . lang . String > expResult = new java . util . HashSet ( ) ; expResult . add ( STRING_3 ) ; expResult . add ( STRING_4 ) ; final java . util . Set < java . lang . String > result = instance . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { final java . util . Set < java . lang . String > IDENT_1 = new java . util . METHOD_4 ( ) ; boolean IDENT_2 = false ; boolean IDENT_3 = false ; METHOD_5 ( false ) ; try { for ( final org . apache . commons . configuration2 . tree . IDENT_4 node : METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( ) . METHOD_9 ( ) ) { if ( org . apache . commons . configuration2 . METHOD_1 . METHOD_10 ( node ) ) { IDENT_3 = true ; IDENT_1 . add ( node . METHOD_11 ( ) ) ; } else { if ( ( ! IDENT_3 ) && ( ! IDENT_2 ) ) { IDENT_2 = true ; IDENT_1 . add ( null ) ; } } } } finally { METHOD_12 ( ) ; } return IDENT_1 ; }
org . junit . Assert . assertEquals ( expResult , result ) 