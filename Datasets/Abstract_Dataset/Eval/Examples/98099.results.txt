METHOD_0 ( ) { final com . IDENT_0 . model . field . IDENT_1 IDENT_2 = new com . IDENT_0 . model . field . METHOD_1 ( com . IDENT_0 . model . field . IDENT_3 . IDENT_4 , new com . IDENT_0 . model . field . expression . METHOD_2 ( new com . IDENT_0 . model . field . value . METHOD_3 ( 1 ) , new com . IDENT_0 . model . field . value . METHOD_3 ( 5 ) ) , com . IDENT_0 . model . field . IDENT_5 . IDENT_6 . instance ( ) . METHOD_4 ( ) ) ; final com . IDENT_0 . model . time . generator . IDENT_7 generator = new com . IDENT_0 . model . time . generator . METHOD_5 ( IDENT_2 , INT_0 , 2 , new com . IDENT_0 . mapper . METHOD_6 ( 1 , true ) ) ; final java . util . List < java . lang . Integer > values = generator . METHOD_7 ( 1 , INT_1 ) ; METHOD_8 ( 1 , 5 , values ) ; METHOD_8 ( 8 , 12 , values ) ; METHOD_8 ( 15 , INT_2 , values ) ; METHOD_8 ( INT_3 , INT_4 , values ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( int , int , java . util . List ) { for ( int j = start ; j < ( end + 1 ) ; j ++ ) { org . junit . Assert . assertTrue ( java . lang . String . format ( STRING_0 , j ) , values . contains ( j ) ) ; } }
org . junit . Assert . assertTrue ( values . contains ( INT_1 ) ) 