METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . util . collect . List < java . lang . String > in = org . IDENT_0 . IDENT_1 . util . collect . Arrays . asList ( STRING_0 , STRING_1 , STRING_2 , STRING_3 ) ; java . lang . String actual = org . IDENT_0 . IDENT_1 . util . collect . IDENT_2 . get ( in , 2 ) ; "<AssertPlaceHolder>" ; } get ( java . lang . IDENT_3 , int ) { if ( IDENT_4 == null ) throw new java . lang . METHOD_1 ( STRING_4 ) ; if ( IDENT_4 instanceof java . util . List ) { return ( ( java . util . List < T > ) ( IDENT_4 ) ) . get ( position ) ; } if ( position < 0 ) throw new java . lang . METHOD_2 ( ( ( STRING_5 + position ) + STRING_6 ) ) ; int IDENT_5 = 0 ; for ( T value : IDENT_4 ) { if ( IDENT_5 == position ) { return value ; } IDENT_5 ++ ; } throw new java . lang . METHOD_2 ( ( ( ( ( STRING_7 + IDENT_5 ) + STRING_8 ) + position ) + STRING_6 ) ) ; }
org . junit . Assert . assertThat ( actual , is ( STRING_2 ) ) 