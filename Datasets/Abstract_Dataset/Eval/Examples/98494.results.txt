METHOD_0 ( ) { org . IDENT_0 . internal . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new org . IDENT_0 . internal . IDENT_1 . IDENT_2 . METHOD_1 ( new java . util . HashMap ( ) ) ; new org . IDENT_0 . IDENT_5 . METHOD_2 ( ) { @ org . IDENT_0 . Override public org . IDENT_0 . IDENT_6 METHOD_3 ( ) { return METHOD_3 ; } } . METHOD_3 ( "foo" , "bar" ) ; "<AssertPlaceHolder>" ; } get ( org . IDENT_0 . IDENT_7 ) { org . junit . Assert . assertEquals ( STRING_0 , builder . METHOD_4 ( ) ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_8 = new java . util . IDENT_9 < java . lang . String , java . lang . String > ( ) ; IDENT_8 . put ( STRING_1 , STRING_2 ) ; org . IDENT_0 . IDENT_10 session = builder . METHOD_5 ( org . IDENT_0 . session . IDENT_11 . IDENT_12 . get ( ) ) . METHOD_6 ( org . IDENT_0 . session . IDENT_11 . METHOD_6 . get ( ) ) . METHOD_7 ( org . IDENT_0 . session . IDENT_11 . IDENT_13 . get ( ) ) . set ( STRING_1 , STRING_3 ) . set ( IDENT_8 ) . build ( ) ; org . IDENT_0 . session . IDENT_11 . IDENT_14 . METHOD_8 ( ) ; return session ; }
org . junit . Assert . assertEquals ( "bar" , METHOD_3 . get ( "foo" ) ) 