renderer ( ) { org . IDENT_0 . IDENT_1 . Collection IDENT_2 = new org . IDENT_0 . IDENT_1 . Collection ( new org . IDENT_0 . IDENT_1 . METHOD_0 ( STRING_0 , STRING_0 , ( req , IDENT_3 , IDENT_4 ) -> { } ) ) . renderer ( STRING_1 ) ; "<AssertPlaceHolder>" ; } renderer ( ) { new org . IDENT_0 . test . METHOD_1 ( org . IDENT_0 . IDENT_5 . class , org . IDENT_0 . IDENT_6 . class , org . IDENT_7 . context . Context . class ) . expect ( ( unit ) -> { org . IDENT_7 . IDENT_8 engine = unit . METHOD_2 ( . class ) ; unit . METHOD_3 ( . class , engine ) ; } ) . expect ( METHOD_4 ( STRING_2 ) ) . expect ( ( unit ) -> { org . IDENT_0 . IDENT_9 . Context ctx = unit . get ( . class ) ; expect ( ctx . METHOD_5 ( ) ) . andReturn ( new org . IDENT_0 . IDENT_7 . HashMap < > ( com . google . common . collect . ImmutableMap . of ( STRING_3 , STRING_2 ) ) ) ; } ) . expect ( ( unit ) -> { org . IDENT_0 . IDENT_7 . IDENT_10 IDENT_11 = unit . METHOD_6 ( . class ) . args ( . class ) . build ( unit . get ( . class ) ) ; java . util . Map model = unit . mock ( . class ) ; expect ( model . METHOD_7 ( STRING_3 , STRING_2 ) ) . andReturn ( null ) ; expect ( model . METHOD_7 ( STRING_4 , IDENT_11 ) ) . andReturn ( null ) ; org . IDENT_0 . IDENT_6 view = unit . get ( . class ) ; expect ( view . model ( ) ) . andReturn ( model ) ; org . IDENT_0 . IDENT_9 . Context ctx = unit . get ( . class ) ; expect ( ctx . METHOD_8 ( ) ) . andReturn ( Locale . IDENT_12 ) ; org . IDENT_7 . context . Context context = unit . METHOD_6 ( . class ) . args ( . class , . class ) . build ( Locale . IDENT_12 , model ) ; org . IDENT_7 . IDENT_8 engine = unit . get ( . class ) ; expect ( engine . process ( STRING_2 , context ) ) . andReturn ( STRING_5 ) ; expect ( ctx . type ( IDENT_13 . html ) ) . andReturn ( ctx ) ; ctx . METHOD_9 ( STRING_5 ) ; } ) . run ( ( unit ) -> { org . IDENT_0 . IDENT_7 . IDENT_14 engine = new org . IDENT_0 . IDENT_7 . METHOD_10 ( unit . get ( . class ) , unit . get ( . class ) ) ; engine . render ( unit . get ( . class ) , unit . get ( . class ) ) ; assertEquals ( STRING_6 , engine . name ( ) ) ; } ) ; }
org . junit . Assert . assertEquals ( STRING_1 , IDENT_2 . renderer ( ) ) 