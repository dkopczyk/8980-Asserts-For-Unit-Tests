METHOD_0 ( ) { org . IDENT_0 . database . connection . IDENT_1 reader = METHOD_1 ( new org . IDENT_0 . database . connection . METHOD_2 ( ) ) ; IDENT_2 . add ( reader ) ; "<AssertPlaceHolder>" ; verify ( reader ) . read ( any ( java . util . Properties . class ) ) ; } METHOD_3 ( ) { try { for ( org . IDENT_0 . database . connection . IDENT_1 reader : IDENT_3 ) { java . io . InputStream stream = getClass ( ) . getResourceAsStream ( ( "/" + ( reader . METHOD_4 ( ) ) ) ) ; if ( stream != null ) { java . util . Properties properties = new java . util . Properties ( ) ; properties . load ( stream ) ; reader . read ( properties ) ; stream . close ( ) ; return reader ; } } } catch ( java . io . IOException e ) { throw new org . IDENT_0 . exception . METHOD_5 ( e . getMessage ( ) , e ) ; } throw new org . IDENT_0 . exception . METHOD_5 ( STRING_0 ) ; }
org . junit . Assert . assertSame ( reader , factory . METHOD_3 ( ) ) 