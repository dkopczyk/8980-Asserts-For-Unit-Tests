METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_0 . IDENT_1 . METHOD_1 ( ) . METHOD_2 ( 7 ) . METHOD_3 ( 2 , 5 ) . METHOD_4 ( 3 , INT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( org . IDENT_0 . IDENT_1 . IDENT_4 ) { java . util . IDENT_5 < java . lang . Integer , IDENT_6 > content = org . IDENT_7 . IDENT_8 . IDENT_9 . METHOD_6 ( IDENT_3 ) ; int size ; java . lang . Integer n = IDENT_3 . METHOD_7 ( ) ; if ( n != null ) { size = n ; } else { size = content . size ( ) ; } IDENT_6 IDENT_10 = IDENT_3 . METHOD_8 ( ) ; java . util . List < IDENT_6 > result = new java . util . IDENT_11 < IDENT_6 > ( ) { @ org . IDENT_7 . IDENT_8 . Override public int size ( ) { return size ; } @ org . IDENT_7 . IDENT_8 . Override public IDENT_6 get ( int index ) { IDENT_6 value = content . get ( java . lang . Integer . valueOf ( ( index + 1 ) ) ) ; if ( value == null ) { value = IDENT_10 ; } return value ; } } ; return result ; }
org . junit . Assert . assertEquals ( java . util . Arrays . asList ( 0 , 3 , 0 , 0 , INT_0 , 0 , 0 ) , org . IDENT_7 . IDENT_8 . IDENT_9 . METHOD_5 ( IDENT_3 ) ) 