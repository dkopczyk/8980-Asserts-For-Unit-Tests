METHOD_0 ( ) { if ( ( ( platform ) != null ) && ( ( platform ) instanceof org . IDENT_0 . db . platform . IDENT_1 . IDENT_2 ) ) { org . springframework . jdbc . support . IDENT_3 . IDENT_4 IDENT_5 = new org . springframework . jdbc . support . IDENT_3 . METHOD_1 ( ) ; platform . METHOD_2 ( ) . update ( STRING_0 ) ; java . util . List < org . IDENT_0 . IDENT_6 . io . data . IDENT_7 > IDENT_8 = new java . util . ArrayList < org . IDENT_0 . IDENT_6 . io . data . IDENT_7 > ( ) ; java . lang . String id = METHOD_3 ( ) ; java . lang . String [ ] values = new java . lang . String [ ] { id , STRING_1 4 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_1 5 , STRING_6 , STRING_1 , STRING_1 2 , STRING_1 1 , null , null , null , null , STRING_7 } ; org . IDENT_0 . IDENT_6 . io . data . IDENT_7 data = new org . IDENT_0 . IDENT_6 . io . data . METHOD_4 ( org . IDENT_0 . IDENT_6 . io . data . IDENT_9 . IDENT_10 , values ) ; IDENT_8 . add ( data ) ; long count = METHOD_5 ( new org . IDENT_0 . IDENT_6 . io . METHOD_6 ( platform . METHOD_7 ( STRING_8 , false ) , IDENT_8 ) ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_11 = METHOD_8 ( id ) ; javax . sql . IDENT_12 IDENT_13 = ( ( javax . sql . IDENT_12 ) ( platform . METHOD_9 ( ) ) ) ; java . sql . IDENT_14 connection = IDENT_13 . METHOD_10 ( ) ; java . sql . IDENT_14 IDENT_15 = IDENT_5 . METHOD_11 ( connection ) ; METHOD_12 ( IDENT_11 . get ( STRING_1 3 ) , IDENT_15 , new java . lang . String [ ] { STRING_9 , STRING_1 0 } ) ; "<AssertPlaceHolder>" ; } } METHOD_13 ( java . lang . String ) { return org . IDENT_0 . IDENT_6 . io . IDENT_16 . platform . METHOD_2 ( ) . METHOD_14 ( java . lang . String . format ( STRING_10 , tableName ) ) ; }
org . junit . Assert . assertEquals ( count , METHOD_13 ( STRING_8 ) ) 