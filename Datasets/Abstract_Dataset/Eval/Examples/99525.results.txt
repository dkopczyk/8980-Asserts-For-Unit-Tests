METHOD_0 ( ) { LOG = org . IDENT_0 . IDENT_1 . METHOD_1 ( org . IDENT_2 . io . IDENT_3 . class ) ; java . lang . String [ ] IDENT_4 = new java . lang . String [ ] { STRING_0 , STRING_1 } ; org . IDENT_2 . io . IDENT_5 IDENT_6 = new org . IDENT_2 . io . METHOD_2 ( STRING_2 0 , IDENT_4 ) ; java . lang . String [ ] IDENT_7 = new java . lang . String [ ] { STRING_1 , STRING_3 } ; org . IDENT_2 . io . METHOD_2 IDENT_8 = new org . IDENT_2 . io . METHOD_2 ( STRING_4 , IDENT_7 ) ; java . lang . String [ ] IDENT_9 = new java . lang . String [ ] { STRING_2 , STRING_5 } ; org . IDENT_2 . io . METHOD_2 IDENT_10 = new org . IDENT_2 . io . METHOD_2 ( STRING_6 , IDENT_9 ) ; java . lang . String [ ] IDENT_11 = new java . lang . String [ ] { STRING_3 } ; org . IDENT_2 . io . METHOD_2 IDENT_12 = new org . IDENT_2 . io . METHOD_2 ( STRING_7 , IDENT_11 ) ; java . util . List < org . IDENT_2 . io . input . IDENT_13 > IDENT_14 = new java . util . ArrayList < org . IDENT_2 . io . input . IDENT_13 > ( ) ; IDENT_14 . add ( IDENT_6 ) ; IDENT_14 . add ( IDENT_8 ) ; IDENT_14 . add ( IDENT_10 ) ; IDENT_14 . add ( IDENT_12 ) ; org . IDENT_2 . IDENT_15 . IDENT_16 IDENT_17 = new org . IDENT_2 . IDENT_15 . METHOD_3 ( ) ; IDENT_17 . METHOD_4 ( STRING_0 ) ; IDENT_17 . METHOD_5 ( 0 ) ; org . IDENT_2 . IDENT_15 . METHOD_3 IDENT_18 = new org . IDENT_2 . IDENT_15 . METHOD_3 ( ) ; IDENT_18 . METHOD_4 ( STRING_0 ) ; IDENT_18 . METHOD_5 ( 1 ) ; org . IDENT_2 . IDENT_15 . METHOD_3 IDENT_19 = new org . IDENT_2 . IDENT_15 . METHOD_3 ( ) ; IDENT_19 . METHOD_4 ( STRING_1 ) ; IDENT_19 . METHOD_5 ( 0 ) ; org . IDENT_2 . IDENT_15 . METHOD_3 IDENT_20 = new org . IDENT_2 . IDENT_15 . METHOD_3 ( ) ; IDENT_20 . METHOD_4 ( STRING_1 ) ; IDENT_20 . METHOD_5 ( 1 ) ; org . IDENT_2 . IDENT_15 . METHOD_3 IDENT_21 = new org . IDENT_2 . IDENT_15 . METHOD_3 ( ) ; IDENT_21 . METHOD_4 ( STRING_3 ) ; IDENT_21 . METHOD_5 ( 0 ) ; org . IDENT_2 . IDENT_15 . METHOD_3 IDENT_22 = new org . IDENT_2 . IDENT_15 . METHOD_3 ( ) ; IDENT_22 . METHOD_4 ( STRING_3 ) ; IDENT_22 . METHOD_5 ( 1 ) ; java . util . List < org . IDENT_2 . IDENT_15 . METHOD_3 > IDENT_23 = new java . util . ArrayList < org . IDENT_2 . IDENT_15 . METHOD_3 > ( ) ; IDENT_23 . add ( IDENT_17 ) ; IDENT_23 . add ( IDENT_18 ) ; IDENT_23 . add ( IDENT_19 ) ; IDENT_23 . add ( IDENT_20 ) ; IDENT_23 . add ( IDENT_21 ) ; IDENT_23 . add ( IDENT_22 ) ; org . IDENT_2 . conf . IDENT_24 IDENT_25 = new org . IDENT_2 . conf . METHOD_6 ( ) ; org . IDENT_2 . io . IDENT_26 IDENT_27 = new org . IDENT_2 . io . METHOD_7 ( IDENT_25 , IDENT_23 ) ; java . util . Map < org . IDENT_2 . IDENT_15 . METHOD_3 , java . util . List < org . IDENT_2 . io . input . IDENT_13 > > IDENT_28 = IDENT_27 . METHOD_8 ( IDENT_14 ) ; for ( org . IDENT_2 . IDENT_15 . METHOD_3 IDENT_29 : IDENT_28 . METHOD_9 ( ) ) { LOG . info ( ( ( ( ( ( IDENT_29 . METHOD_10 ( ) ) + STRING_8 ) + ( IDENT_29 . METHOD_11 ( ) ) ) + STRING_9 ) + ( IDENT_28 . get ( IDENT_29 ) ) ) ) ; "<AssertPlaceHolder>" ; } } size ( ) { return IDENT_30 . size ( ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_28 . get ( IDENT_29 ) . size ( ) ) < 2 ) ) 