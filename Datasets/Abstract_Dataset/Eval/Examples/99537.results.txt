METHOD_0 ( ) { IDENT_0 = org . IDENT_1 . IDENT_2 . IDENT_3 . connect ( org . IDENT_1 . IDENT_2 . IDENT_4 . IDENT_5 . METHOD_1 ( ) ) ; org . apache . hadoop . io . IDENT_6 input = new org . apache . hadoop . io . METHOD_2 ( STRING_0 ) ; org . apache . hadoop . io . METHOD_2 IDENT_7 = new org . apache . hadoop . io . METHOD_2 ( ) ; IDENT_0 . create ( STRING_1 , org . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_3 ( input ) , IDENT_8 . IDENT_9 , IDENT_10 . IDENT_11 ) ; org . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_4 ( IDENT_0 , STRING_1 , IDENT_7 , new org . IDENT_1 . IDENT_2 . IDENT_4 . METHOD_5 ( ) ) ; org . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_4 ( IDENT_0 , STRING_2 , IDENT_7 , new org . IDENT_1 . IDENT_2 . IDENT_4 . METHOD_5 ( ) ) ; "<AssertPlaceHolder>" ; IDENT_0 . delete ( STRING_1 , ( - 1 ) ) ; } METHOD_4 ( org . apache . IDENT_2 . IDENT_12 , java . lang . String , java . lang . Class , org . IDENT_1 . conf . IDENT_13 ) { byte [ ] result = null ; try { result = IDENT_14 . METHOD_6 ( path , false , null ) ; } catch ( org . apache . IDENT_2 . IDENT_15 e ) { org . IDENT_1 . IDENT_2 . IDENT_3 . LOG . debug ( ( ( STRING_3 + path ) + STRING_4 ) ) ; } catch ( org . apache . IDENT_2 . IDENT_15 e ) { throw new org . IDENT_1 . IDENT_2 . METHOD_7 ( e ) ; } catch ( java . lang . IDENT_16 e ) { throw new org . IDENT_1 . IDENT_2 . METHOD_7 ( e ) ; } if ( result != null ) { return org . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_8 ( result , IDENT_17 , IDENT_5 ) ; } else { return null ; } }
org . junit . Assert . assertEquals ( input , IDENT_7 ) 