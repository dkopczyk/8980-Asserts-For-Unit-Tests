METHOD_0 ( ) { org . kaazing . IDENT_0 . control . internal . event . IDENT_1 IDENT_2 = new org . kaazing . IDENT_0 . control . internal . event . METHOD_1 ( ) ; IDENT_3 . METHOD_2 ( new org . IDENT_4 . METHOD_3 ( ) { { METHOD_4 ( input ) . read ( with ( any ( byte [ ] . class ) ) , with ( equal ( 0 ) ) , with ( any ( int . class ) ) ) ; METHOD_5 ( org . kaazing . IDENT_0 . control . internal . IDENT_5 . METHOD_6 ( 0 , ( STRING_0 + ( STRING_1 + "\n" ) ) . getBytes ( org . kaazing . IDENT_0 . control . internal . IDENT_5 . UTF_8 ) ) ) ; METHOD_7 ( input ) . METHOD_8 ( ) ; METHOD_5 ( METHOD_9 ( 0 ) ) ; } } ) ; control . connect ( ) ; org . kaazing . IDENT_0 . control . internal . event . IDENT_6 IDENT_7 = control . METHOD_10 ( ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( ) { return METHOD_10 ( 0 , org . kaazing . IDENT_0 . control . internal . IDENT_8 ) ; }
org . junit . Assert . assertEquals ( IDENT_2 , IDENT_7 ) 