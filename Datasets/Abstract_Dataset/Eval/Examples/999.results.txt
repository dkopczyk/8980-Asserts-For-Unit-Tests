METHOD_0 ( ) { javax . jcr . Node node = session . METHOD_1 ( ) . METHOD_2 ( STRING_0 6 ) ; node . setProperty ( STRING_0 1 , STRING_1 ) ; node . setProperty ( STRING_2 , STRING_3 4 ) ; node . setProperty ( STRING_3 , new java . lang . Long ( 100 ) ) ; node . setProperty ( STRING_3 2 , new java . lang . Double ( FLOAT_0 ) ) ; node . setProperty ( STRING_4 , true ) ; node . setProperty ( STRING_3 3 , new java . lang . String [ ] { STRING_5 , STRING_0 , STRING_3 6 } ) ; node . setProperty ( STRING_6 , new java . lang . String [ ] { STRING_3 8 , STRING_0 4 } ) ; session . save ( ) ; java . lang . String IDENT_0 = ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( STRING_3 1 + ( org . apache . commons . codec . IDENT_1 . IDENT_2 . METHOD_3 ( STRING_3 9 ) ) ) + STRING_7 ) + ( org . apache . commons . codec . IDENT_1 . IDENT_2 . METHOD_3 ( STRING_3 5 ) ) ) + STRING_3 0 ) + ( org . apache . commons . codec . IDENT_1 . IDENT_2 . METHOD_3 ( STRING_3 4 ) ) ) + STRING_0 0 ) + ( org . apache . commons . codec . IDENT_1 . IDENT_2 . METHOD_3 ( STRING_0 2 ) ) ) + STRING_0 3 ) + ( org . apache . commons . codec . IDENT_1 . IDENT_2 . METHOD_3 ( STRING_1 ) ) ) + STRING_8 ) + ( org . apache . commons . codec . IDENT_1 . IDENT_2 . METHOD_3 ( STRING_3 7 ) ) ) + STRING_9 ) + ( org . apache . commons . codec . IDENT_1 . IDENT_2 . METHOD_3 ( STRING_3 8 ) ) ) + STRING_0 7 ) + ( org . apache . commons . codec . IDENT_1 . IDENT_2 . METHOD_3 ( STRING_0 4 ) ) ) + STRING_0 5 ) + ( org . apache . commons . codec . IDENT_1 . IDENT_2 . METHOD_3 ( STRING_3 6 ) ) ) + STRING_0 7 ) + ( org . apache . commons . codec . IDENT_1 . IDENT_2 . METHOD_3 ( STRING_0 ) ) ) + STRING_0 7 ) + ( org . apache . commons . codec . IDENT_1 . IDENT_2 . METHOD_3 ( STRING_5 ) ) ; java . lang . String expected = org . apache . commons . codec . IDENT_1 . IDENT_2 . METHOD_3 ( IDENT_0 ) ; com . IDENT_3 . IDENT_4 . commons . analysis . IDENT_5 . impl . options . IDENT_6 IDENT_7 = new com . IDENT_3 . IDENT_4 . commons . analysis . IDENT_5 . impl . options . METHOD_4 ( ) ; IDENT_7 . METHOD_5 ( new java . lang . String [ ] { STRING_6 } ) ; java . lang . String actual = IDENT_8 . METHOD_6 ( node . getPath ( ) , node , IDENT_7 ) ; "<AssertPlaceHolder>" ; } getPath ( ) { return resource . getPath ( ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 