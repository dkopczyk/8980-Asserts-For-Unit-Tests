METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . common . dto . IDENT_2 dto = new org . IDENT_0 . IDENT_1 . common . dto . METHOD_1 ( ) ; dto . METHOD_2 ( org . IDENT_0 . IDENT_1 . server . operations . service . IDENT_3 . IDENT_4 . IDENT_5 ) ; dto . METHOD_3 ( org . IDENT_0 . IDENT_1 . server . operations . service . IDENT_3 . IDENT_4 . IDENT_6 ) ; when ( IDENT_7 . METHOD_4 ( org . IDENT_0 . IDENT_1 . server . operations . service . IDENT_3 . IDENT_4 . IDENT_8 ) ) . thenReturn ( new org . IDENT_0 . IDENT_1 . common . dto . IDENT_3 . METHOD_5 ( ) ) ; when ( IDENT_9 . METHOD_6 ( any ( org . IDENT_0 . IDENT_1 . common . dto . IDENT_3 . METHOD_5 . class ) ) ) . METHOD_7 ( new java . lang . IllegalArgumentException ( ) ) ; org . IDENT_0 . IDENT_1 . server . common . log . shared . IDENT_10 . IDENT_11 IDENT_10 = IDENT_12 . METHOD_8 ( org . IDENT_0 . IDENT_1 . server . operations . service . IDENT_3 . IDENT_4 . IDENT_8 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( java . lang . String ) { org . IDENT_0 . IDENT_1 . server . operations . service . IDENT_3 . IDENT_13 . LOG . debug ( STRING_0 , IDENT_14 ) ; org . IDENT_0 . IDENT_1 . common . dto . IDENT_3 . METHOD_5 IDENT_10 = IDENT_7 . METHOD_4 ( IDENT_14 ) ; org . IDENT_0 . IDENT_1 . server . operations . service . IDENT_3 . IDENT_13 . LOG . debug ( STRING_1 , IDENT_10 , IDENT_14 ) ; org . IDENT_0 . IDENT_1 . server . common . log . shared . IDENT_10 . IDENT_11 IDENT_15 = null ; try { IDENT_15 = IDENT_9 . METHOD_6 ( IDENT_10 ) ; } catch ( java . lang . Exception ex ) { org . IDENT_0 . IDENT_1 . server . operations . service . IDENT_3 . IDENT_13 . LOG . warn ( STRING_2 , IDENT_10 , ex ) ; } return IDENT_15 ; }
org . junit . Assert . assertNull ( IDENT_10 ) 