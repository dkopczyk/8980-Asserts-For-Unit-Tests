METHOD_0 ( ) { final org . kaazing . IDENT_0 . management . IDENT_1 . IDENT_2 handler = context . mock ( org . kaazing . IDENT_0 . management . IDENT_1 . IDENT_2 . class ) ; final org . kaazing . IDENT_0 . management . service . IDENT_3 IDENT_4 = context . mock ( org . kaazing . IDENT_0 . management . service . IDENT_3 . class ) ; final org . kaazing . IDENT_0 . management . IDENT_1 . IDENT_5 IDENT_6 = context . mock ( org . kaazing . IDENT_0 . management . IDENT_1 . IDENT_5 . class , STRING_0 ) ; final org . kaazing . IDENT_0 . management . IDENT_1 . IDENT_5 IDENT_7 = context . mock ( org . kaazing . IDENT_0 . management . IDENT_1 . IDENT_5 . class , STRING_1 ) ; final javax . management . IDENT_8 IDENT_9 = context . mock ( javax . management . IDENT_8 . class ) ; final java . util . Map < java . lang . Long , java . util . Map < java . lang . String , java . lang . String > > IDENT_10 = new java . util . HashMap ( ) ; final java . util . Map < java . lang . String , java . lang . String > IDENT_11 = new java . util . HashMap ( ) ; final java . util . Map < java . lang . String , java . lang . String > IDENT_12 = new java . util . HashMap ( ) ; final java . util . Map < java . lang . String , java . lang . String > IDENT_13 = new java . util . HashMap ( ) ; final java . util . Map < java . lang . String , java . lang . String > IDENT_14 = new java . util . HashMap ( ) ; final java . util . Map < java . lang . Long , java . util . Map < java . lang . String , java . lang . String > > IDENT_15 = new java . util . HashMap ( ) ; context . METHOD_1 ( new org . IDENT_16 . METHOD_2 ( ) { { METHOD_3 ( IDENT_4 ) . METHOD_4 ( ) ; METHOD_5 ( METHOD_6 ( IDENT_10 ) ) ; METHOD_3 ( handler ) . METHOD_7 ( 1 ) ; METHOD_5 ( METHOD_6 ( IDENT_6 ) ) ; METHOD_3 ( handler ) . METHOD_7 ( 4 ) ; METHOD_5 ( METHOD_6 ( IDENT_7 ) ) ; METHOD_3 ( IDENT_6 ) . close ( ) ; METHOD_3 ( IDENT_4 ) . METHOD_8 ( 1 ) ; METHOD_3 ( IDENT_7 ) . close ( ) ; METHOD_3 ( IDENT_4 ) . METHOD_8 ( 4 ) ; } } ) ; IDENT_11 . put ( STRING_2 , org . kaazing . IDENT_0 . management . IDENT_1 . IDENT_17 . IDENT_18 . class . getName ( ) ) ; IDENT_11 . put ( STRING_3 , org . kaazing . IDENT_0 . management . IDENT_1 . IDENT_17 . IDENT_19 . class . getName ( ) ) ; IDENT_12 . put ( STRING_4 , org . kaazing . IDENT_0 . management . IDENT_1 . IDENT_17 . IDENT_18 . class . getName ( ) ) ; IDENT_12 . put ( STRING_3 , org . kaazing . IDENT_0 . management . IDENT_1 . IDENT_17 . IDENT_19 . class . getName ( ) ) ; IDENT_13 . put ( STRING_4 , org . kaazing . IDENT_0 . management . IDENT_1 . IDENT_17 . IDENT_18 . class . getName ( ) ) ; IDENT_13 . put ( STRING_2 , org . kaazing . IDENT_0 . management . IDENT_1 . IDENT_17 . IDENT_20 . class . getName ( ) ) ; IDENT_14 . put ( STRING_2 , org . kaazing . IDENT_0 . management . IDENT_1 . IDENT_17 . IDENT_18 . class . getName ( ) ) ; IDENT_14 . put ( STRING_5 , org . kaazing . IDENT_0 . management . IDENT_1 . IDENT_17 . IDENT_19 . class . getName ( ) ) ; IDENT_10 . put ( 1L , IDENT_11 ) ; IDENT_10 . put ( INT_0 , IDENT_12 ) ; IDENT_10 . put ( INT_1 , IDENT_13 ) ; IDENT_10 . put ( INT_2 , IDENT_14 ) ; IDENT_15 . METHOD_9 ( IDENT_10 ) ; final org . kaazing . IDENT_0 . management . IDENT_1 . IDENT_21 IDENT_22 = new org . kaazing . IDENT_0 . management . IDENT_1 . METHOD_10 ( handler , IDENT_9 , IDENT_4 ) ; IDENT_22 . METHOD_11 ( STRING_2 , null ) ; "<AssertPlaceHolder>" ; } size ( ) { int size ; do { final long IDENT_23 = IDENT_24 ; final long IDENT_25 = IDENT_26 ; size = ( ( int ) ( IDENT_25 - IDENT_23 ) ) ; } while ( size > ( IDENT_27 ) ) ; return size ; }
org . junit . Assert . assertEquals ( 4 , IDENT_15 . size ( ) ) 