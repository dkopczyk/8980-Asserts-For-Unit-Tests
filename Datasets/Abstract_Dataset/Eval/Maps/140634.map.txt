testTWQnENoQNoEWithDEFUnix,tokenizeWithQuotingAndEscapes,getBoolean,isDebugEnabled,escapeIfNotPathSepInDEF,
METHOD_0,METHOD_1,METHOD_2,METHOD_3,METHOD_4,

separatorChar,MockUtil,netmgt,rrd,jrobin,JRobinRrdStrategy,tokenList,LinkedList,currToken,quoting,escaping,debugTokens,delims,processQuoted,
IDENT_0,IDENT_1,IDENT_2,IDENT_3,IDENT_4,IDENT_5,IDENT_6,IDENT_7,IDENT_8,IDENT_9,IDENT_10,IDENT_11,IDENT_12,IDENT_13,







'/',"-------- Skipping testTWQnENoQNoEWithDEFUnix since File.separator is not / ------------","-------- Be sure to run the tests on Unix too! ---------","No quote, no escapes, but DEF:test=snmp/42/test.jrb:test:AVERAGE","No","escapes,","no","but","DEF:test=snmp/42/test.jrb:test:AVERAGE","org.opennms.netmgt.rrd.debugTokens",", currToken); quoting = true; } }else if ((!quoting) && ((delims.indexOf(ch)) >= 0)) { if (debugTokens) org.opennms.netmgt.rrd.jrobin.JRobinRrdStrategy.LOG.debug(","tokenize: checking char: {}",'n','\n','r','\r','t','\t','\\',"DEF:","tokenize: found a backslash... escaping currToken = {}",'\"',"tokenize: found a quote ending quotation currToken = {}","tokenize: found a quote beginning quotation currToken = {}","tokenize: found a token: {} ending token [{}] and starting a new one","tokenize: appending {} to token: {}","1tokenize: ended string but escaping = {} and quoting = {}","unable to tokenize string "," with token chars ","3tokenize: reached end of string. completing token {}",
STRING_0,STRING_1,STRING_2,STRING_3,STRING_4,STRING_5,STRING_6,STRING_7,STRING_8,STRING_9,STRING_10,STRING_11,STRING_12,STRING_13,STRING_14,STRING_15,STRING_16,STRING_17,STRING_18,STRING_19,STRING_20,STRING_21,STRING_22,STRING_23,STRING_24,STRING_25,STRING_26,STRING_27,STRING_28,STRING_29,

























