getNewTestCaseSourceCode_A$_JUnit3,TestCaseGeneratorImpl,extract,initialize,getNewTestCaseSourceCode,appendLineBreak,getTestCaseSourceCodeWithLackingTestMethod,
METHOD_0,METHOD_1,METHOD_2,METHOD_3,METHOD_4,METHOD_5,METHOD_6,

junithelper,junitVersion,JUnitVersion,version3,TestCaseGeneratorImpl,lineBreakProvider,sourceCodeString,ClassMeta,targetClassMeta,classMetaExtractor,packageName,appender,imported,importedList,testCaseClassNameToExtend,splittedArray,
IDENT_0,IDENT_1,IDENT_2,IDENT_3,IDENT_4,IDENT_5,IDENT_6,IDENT_7,IDENT_8,IDENT_9,IDENT_10,IDENT_11,IDENT_12,IDENT_13,IDENT_14,IDENT_15,







"package hoge.foo; import java.util.List;\r\nimport java.util.Map; public class Sample { public Sample() {}\r\n public int doSomething(String str, long longValue) throws Throwable { System.out.println(\"aaaa\"); } public void doSomething(List<Map<String, String>> nested, Map<String,Map<String,String>> nested2) { } }","package hoge.foo;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport hoge.foo.Sample.*;\r\n\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport junit.framework.TestCase;\r\n\r\npublic class SampleTest extends TestCase {\r\n\r\n\tpublic void test_type() throws Exception {\r\n\t\t// TODO auto-generated by JUnit Helper.\r\n\t\tassertNotNull(Sample.class);\r\n\t}\r\n\r\n\tpublic void test_instantiation() throws Exception {\r\n\t\t// TODO auto-generated by JUnit Helper.\r\n\t\tSample target = new Sample();\r\n\t\tassertNotNull(target);\r\n\t}\r\n\r\n\tpublic void test_doSomething_A$String$long() throws Throwable {\r\n\t\t// TODO auto-generated by JUnit Helper.\r\n\t\tSample target = new Sample();\r\n\t\tString str = null;\r\n\t\tlong longValue = 0L;\r\n\t\tint actual = target.doSomething(str, longValue);\r\n\t\tint expected = 0;\r\n\t\tassertEquals(expected, actual);\r\n\t}\r\n\r\n\tpublic void test_doSomething_A$List$Map() throws Exception {\r\n\t\t// TODO auto-generated by JUnit Helper.\r\n\t\tSample target = new Sample();\r\n\t\tList nested = new ArrayList();\r\n\t\tMap nested2 = new HashMap();\r\n\t\ttarget.doSomething(nested, nested2);\r\n\t}\r\n\r\n}\r\n","package ",";","junit.framework.TestCase","public class ","Test ","extends ","\\.","{","}",
STRING_0,STRING_1,STRING_2,STRING_3,STRING_4,STRING_5,STRING_6,STRING_7,STRING_8,STRING_9,STRING_10,

























