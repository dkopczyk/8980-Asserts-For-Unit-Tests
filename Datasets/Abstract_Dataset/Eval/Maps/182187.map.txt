test2ndToken,LexerGrammar,ANTLRInputStream,createLexerInterpreter,createTokenStream,LT,
METHOD_0,METHOD_1,METHOD_2,METHOD_3,METHOD_4,METHOD_5,

tool,LexerGrammar,CharStream,LexerInterpreter,lexEngine,TokenStream,expecting,symbol,
IDENT_0,IDENT_1,IDENT_2,IDENT_3,IDENT_4,IDENT_5,IDENT_6,IDENT_7,







"lexer grammar t;\n","ID : \'a\'..\'z\'+;\n","INT : \'0\'..\'9\'+;\n","SEMI : \';\';\n","ASSIGN : \'=\';\n","PLUS : \'+\';\n","MULT : \'*\';\n","WS : \' \'+;\n","x = 3 * 0 + 2 * 0;",
STRING_0,STRING_1,STRING_2,STRING_3,STRING_4,STRING_5,STRING_6,STRING_7,STRING_8,

























