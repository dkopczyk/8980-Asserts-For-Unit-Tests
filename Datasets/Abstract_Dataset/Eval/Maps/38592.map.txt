testSchemaSerializer,createSchema,Kryo,addDefaultSerializer,Output,writeObject,Input,readObject,beginObject,nextName,fromToken,nextString,toUpperCase,readEnum,getFields,recordOf,skipValue,endObject,arrayOf,enumWith,mapOf,
METHOD_0,METHOD_1,METHOD_2,METHOD_3,METHOD_4,METHOD_5,METHOD_6,METHOD_7,METHOD_8,METHOD_9,METHOD_10,METHOD_11,METHOD_12,METHOD_13,METHOD_14,METHOD_15,METHOD_16,METHOD_17,METHOD_18,METHOD_19,METHOD_20,

esotericsoftware,kryo,Kryo,SchemaSerializer,bos,Output,Input,newSchema,JsonReader,schemaType,LogicalType,logicalType,elementName,enumValues,items,SchemaTypeAdapter,LOGICAL_TYPE,TYPE,NAME,RECORD,knownRecords,SYMBOLS,ITEMS,KEYS,VALUES,FIELDS,ARRAY,ENUM,MAP,
IDENT_0,IDENT_1,IDENT_2,IDENT_3,IDENT_4,IDENT_5,IDENT_6,IDENT_7,IDENT_8,IDENT_9,IDENT_10,IDENT_11,IDENT_12,IDENT_13,IDENT_14,IDENT_15,IDENT_16,IDENT_17,IDENT_18,IDENT_19,IDENT_20,IDENT_21,IDENT_22,IDENT_23,IDENT_24,IDENT_25,IDENT_26,IDENT_27,IDENT_28,







"Schema type cannot be null.",
STRING_0,

























