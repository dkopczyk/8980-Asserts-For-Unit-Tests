METHOD_0 ( ) { boolean result = org . kaazing . IDENT_0 . util . Utils . METHOD_1 ( STRING_0 , STRING_1 , false ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String , boolean ) { boolean result = IDENT_1 ; if ( value != null ) { boolean IDENT_2 = true ; result = java . lang . Boolean . METHOD_1 ( value ) ; if ( ! result ) { if ( ! ( Boolean . IDENT_3 . toString ( ) . equalsIgnoreCase ( value ) ) ) { IDENT_2 = false ; } } if ( ! IDENT_2 ) { java . lang . String message = java . lang . String . format ( STRING_2 , value , IDENT_4 , Boolean . IDENT_5 . toString ( ) , Boolean . IDENT_3 . toString ( ) ) ; throw new java . lang . IllegalArgumentException ( message ) ; } } return result ; }
org . junit . Assert . assertEquals ( false , result ) 