METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . model . IDENT_2 type = new com . IDENT_0 . IDENT_1 . model . METHOD_1 ( STRING_0 ) ; com . IDENT_0 . IDENT_1 . model . IDENT_3 IDENT_4 = new com . IDENT_0 . IDENT_1 . model . METHOD_2 ( 1 , type , STRING_0 ) ; com . IDENT_0 . IDENT_1 . model . METHOD_2 IDENT_5 = new com . IDENT_0 . IDENT_1 . model . METHOD_2 ( 2 , type , STRING_0 ) ; com . IDENT_0 . IDENT_1 . model . METHOD_2 IDENT_6 = new com . IDENT_0 . IDENT_1 . model . METHOD_2 ( 3 , type , STRING_0 ) ; com . IDENT_0 . IDENT_1 . model . METHOD_2 IDENT_7 = new com . IDENT_0 . IDENT_1 . model . METHOD_2 ( 4 , type , STRING_0 ) ; com . IDENT_0 . IDENT_1 . model . IDENT_8 tree = new com . IDENT_0 . IDENT_1 . model . METHOD_3 ( ) ; tree . METHOD_4 ( IDENT_4 , IDENT_5 , IDENT_6 , IDENT_7 ) ; tree . METHOD_5 ( IDENT_7 , asList ( IDENT_4 , IDENT_7 , IDENT_5 , IDENT_6 ) ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( ) { java . util . List < com . IDENT_0 . IDENT_1 . model . METHOD_2 > IDENT_9 = new java . util . ArrayList < com . IDENT_0 . IDENT_1 . model . METHOD_2 > ( ) ; METHOD_7 ( com . IDENT_0 . IDENT_1 . model . METHOD_2 . IDENT_10 , IDENT_9 ) ; return IDENT_9 ; }
org . junit . Assert . assertThat ( tree . METHOD_6 ( ) . get ( 1 ) , org . hamcrest . core . Is . is ( IDENT_7 ) ) 