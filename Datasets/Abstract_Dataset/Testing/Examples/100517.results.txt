METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 . common . util . IDENT_3 . IDENT_4 = true ; java . lang . String IDENT_5 = com . google . common . io . IDENT_6 . toString ( com . google . common . io . IDENT_6 . getResource ( STRING_0 ) , IDENT_7 . UTF_8 ) ; IDENT_0 . IDENT_1 . IDENT_2 . common . IDENT_8 . json . IDENT_9 IDENT_10 = IDENT_0 . IDENT_1 . IDENT_2 . backend . IDENT_11 . METHOD_1 ( IDENT_5 ) ; java . lang . String IDENT_12 = IDENT_0 . IDENT_1 . IDENT_2 . backend . converter . IDENT_13 . METHOD_2 ( IDENT_10 , null ) ; java . lang . String expected = STRING_1 + STRING_2 ; "<AssertPlaceHolder>" ; IDENT_0 . IDENT_1 . IDENT_2 . backend . IDENT_14 . model . IDENT_15 IDENT_16 = IDENT_0 . IDENT_1 . IDENT_2 . backend . IDENT_17 . IDENT_18 . METHOD_3 ( IDENT_10 ) ; IDENT_12 = IDENT_0 . IDENT_1 . IDENT_2 . backend . converter . IDENT_13 . METHOD_2 ( IDENT_10 , METHOD_3 ) ; expected = STRING_3 + ( STRING_4 + "" ) ; } METHOD_2 ( IDENT_0 . IDENT_1 . IDENT_2 . common . IDENT_8 . json . IDENT_9 , IDENT_0 . IDENT_1 . IDENT_2 . backend . IDENT_14 . model . IDENT_15 ) { java . lang . StringBuilder builder = new java . lang . StringBuilder ( ) ; java . util . HashSet < java . lang . String > IDENT_19 = new java . util . HashSet ( ) ; for ( IDENT_0 . IDENT_1 . IDENT_2 . common . IDENT_8 . json . IDENT_20 IDENT_21 : cluster . METHOD_4 ( ) ) { for ( IDENT_0 . IDENT_1 . IDENT_2 . common . IDENT_8 . json . IDENT_22 IDENT_23 : IDENT_21 . METHOD_5 ( ) ) { java . lang . String IDENT_24 = IDENT_23 . getId ( ) ; IDENT_19 . add ( IDENT_24 ) ; IDENT_0 . IDENT_1 . IDENT_2 . backend . converter . IDENT_13 . IDENT_25 . METHOD_6 ( IDENT_19 ) ; } } for ( IDENT_0 . IDENT_1 . IDENT_2 . common . IDENT_8 . json . IDENT_20 IDENT_21 : cluster . METHOD_4 ( ) ) { for ( IDENT_0 . IDENT_1 . IDENT_2 . common . IDENT_8 . json . IDENT_22 IDENT_23 : IDENT_21 . METHOD_5 ( ) ) { for ( IDENT_0 . IDENT_1 . IDENT_2 . common . IDENT_8 . json . IDENT_26 IDENT_27 : IDENT_23 . METHOD_7 ( ) ) { java . lang . String IDENT_24 = IDENT_23 . getId ( ) ; IDENT_0 . IDENT_1 . IDENT_2 . common . IDENT_28 . IDENT_29 cb = IDENT_0 . IDENT_1 . IDENT_2 . backend . converter . IDENT_13 . IDENT_25 . get ( IDENT_24 ) ; IDENT_0 . IDENT_1 . IDENT_2 . common . IDENT_28 . IDENT_30 IDENT_31 = cb . METHOD_8 ( ) ; java . util . List < IDENT_0 . IDENT_1 . IDENT_2 . common . IDENT_28 . IDENT_32 > IDENT_33 = IDENT_31 . METHOD_7 ( ) ; for ( IDENT_0 . IDENT_1 . IDENT_2 . common . IDENT_28 . IDENT_32 IDENT_34 : IDENT_33 ) { if ( IDENT_34 . METHOD_9 ( ) . equalsIgnoreCase ( IDENT_27 . METHOD_9 ( ) ) ) { java . util . Set < java . lang . String > IDENT_12 = IDENT_34 . METHOD_10 ( ) ; for ( java . lang . String IDENT_35 : IDENT_12 ) { if ( IDENT_35 . contains ( IDENT_3 . IDENT_36 ) ) { if ( IDENT_37 != null ) { IDENT_0 . IDENT_1 . IDENT_2 . backend . IDENT_14 . model . IDENT_38 IDENT_39 = IDENT_0 . IDENT_1 . IDENT_2 . backend . converter . IDENT_13 . METHOD_11 ( IDENT_37 , IDENT_21 . getName ( ) ) ; if ( IDENT_39 != null ) { java . util . List < IDENT_0 . IDENT_1 . IDENT_2 . backend . IDENT_14 . model . IDENT_40 > IDENT_41 = IDENT_39 . METHOD_12 ( ) ; if ( IDENT_41 != null ) { for ( IDENT_0 . IDENT_1 . IDENT_2 . backend . IDENT_14 . model . IDENT_40 me : IDENT_39 . METHOD_12 ( ) ) { java . lang . String l = IDENT_35 . replaceAll ( IDENT_3 . IDENT_36 , me . METHOD_13 ( ) ) ; builder . append ( l ) . append ( "\n" ) ; } } } } } else { builder . append ( IDENT_35 ) . append ( "\n" ) ; } } } } } } } return builder . toString ( ) ; }
org . junit . Assert . assertEquals ( expected , IDENT_12 . trim ( ) ) 