METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . domain . IDENT_5 IDENT_6 = mock ( org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . domain . IDENT_5 . class ) ; java . util . List < org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . domain . IDENT_5 > IDENT_7 = new java . util . ArrayList ( ) ; IDENT_7 . add ( IDENT_6 ) ; com . google . common . collect . IDENT_8 < org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . domain . IDENT_5 > keys = com . google . common . collect . IDENT_8 . from ( IDENT_7 ) ; when ( IDENT_9 . list ( ) ) . thenReturn ( keys ) ; when ( IDENT_9 . delete ( IDENT_0 ) ) . thenReturn ( true ) ; when ( IDENT_9 . METHOD_1 ( IDENT_0 , IDENT_10 . METHOD_2 ( ) ) ) . thenReturn ( IDENT_6 ) ; IDENT_11 . IDENT_12 . IDENT_13 . backend . IDENT_14 . IDENT_3 . IDENT_15 IDENT_16 = new IDENT_11 . IDENT_12 . IDENT_13 . backend . IDENT_14 . IDENT_3 . METHOD_3 ( IDENT_17 , IDENT_10 ) ; boolean IDENT_18 = IDENT_16 . METHOD_4 ( IDENT_0 , IDENT_3 , true ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String , IDENT_11 . IDENT_12 . IDENT_13 . common . IDENT_19 . IDENT_20 , boolean ) { if ( IDENT_21 ) { org . IDENT_22 . model . common . IDENT_23 res = this . IDENT_17 . METHOD_5 ( ) . METHOD_6 ( ) . delete ( IDENT_24 ) ; if ( ! ( res . METHOD_7 ( ) ) ) IDENT_11 . IDENT_12 . IDENT_13 . backend . IDENT_14 . IDENT_25 . IDENT_26 . logger . info ( java . lang . String . format ( STRING_1 , IDENT_24 ) ) ; } IDENT_11 . IDENT_12 . IDENT_13 . backend . IDENT_14 . IDENT_25 . IDENT_26 . logger . info ( java . lang . String . format ( STRING_2 , IDENT_24 ) ) ; this . IDENT_17 . METHOD_5 ( ) . METHOD_6 ( ) . create ( IDENT_24 , IDENT_10 . METHOD_2 ( ) ) ; return true ; }
org . junit . Assert . assertTrue ( IDENT_18 ) 