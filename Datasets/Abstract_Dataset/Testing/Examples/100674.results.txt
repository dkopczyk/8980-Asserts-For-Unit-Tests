METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 < IDENT_0 . data . IDENT_3 > IDENT_1 = new IDENT_0 . IDENT_1 . METHOD_1 ( ) ; IDENT_0 . data . IDENT_4 request = new IDENT_0 . data . METHOD_2 ( ) ; request . METHOD_3 ( IDENT_0 . collection . IDENT_5 . of ( STRING_0 , STRING_1 , STRING_2 , 1 ) ) ; IDENT_0 . IDENT_6 < IDENT_0 . data . IDENT_4 , IDENT_0 . data . IDENT_3 , ? , ? > IDENT_7 = new IDENT_0 . IDENT_7 . METHOD_4 ( IDENT_0 . util . IDENT_8 . any ( ) , STRING_3 , ( req , c ) -> builder ( IDENT_0 . data . IDENT_3 . of ( STRING_4 ) ) . set ( IDENT_0 . data . IDENT_3 :: IDENT_9 , IDENT_0 . collection . IDENT_10 . of ( STRING_5 , STRING_6 ) ) . build ( ) ) ; IDENT_1 . METHOD_5 ( request , IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( ) { return params ; }
org . junit . Assert . assertEquals ( STRING_1 , request . METHOD_6 ( ) . get ( STRING_0 ) ) 