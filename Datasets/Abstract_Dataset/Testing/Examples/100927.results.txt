METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( ) ) . thenReturn ( true ) ; when ( IDENT_1 . METHOD_2 ( any ( ) ) ) . thenReturn ( IDENT_0 ) ; when ( IDENT_2 . METHOD_3 ( ) ) . thenReturn ( STRING_0 ) ; when ( IDENT_0 . METHOD_4 ( ) ) . thenReturn ( STRING_0 ) ; when ( IDENT_1 . METHOD_5 ( path , true ) ) . thenReturn ( IDENT_3 ) ; when ( IDENT_3 . isEmpty ( ) ) . thenReturn ( true ) ; org . IDENT_4 . ext . IDENT_5 . commons . service . IDENT_6 . IDENT_7 result = IDENT_8 . METHOD_6 ( path ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( org . IDENT_4 . backend . IDENT_9 . Path ) { final org . IDENT_4 . backend . IDENT_9 . impl . IDENT_10 IDENT_0 = IDENT_1 . METHOD_2 ( path ) ; if ( ( ( IDENT_0 != null ) && ( IDENT_0 . METHOD_1 ( ) ) ) && ( ! ( IDENT_2 . METHOD_3 ( ) . equals ( IDENT_0 . METHOD_4 ( ) ) ) ) ) { return new org . IDENT_4 . ext . IDENT_5 . commons . service . IDENT_6 . METHOD_7 ( ) { @ org . IDENT_4 . ext . IDENT_5 . commons . backend . service . IDENT_6 . Override public org . IDENT_4 . ext . IDENT_5 . commons . backend . service . IDENT_6 . String getMessage ( final org . IDENT_4 . backend . IDENT_9 . Path path ) { return ( ( path . METHOD_8 ( ) ) + STRING_1 ) + ( IDENT_0 . METHOD_4 ( ) ) ; } } ; } final java . util . List < org . IDENT_4 . backend . IDENT_9 . impl . IDENT_10 > IDENT_3 = IDENT_1 . METHOD_5 ( path , true ) ; if ( ( IDENT_3 != null ) && ( ! ( IDENT_3 . isEmpty ( ) ) ) ) { return new org . IDENT_4 . ext . IDENT_5 . commons . service . IDENT_6 . METHOD_7 ( ) { @ org . IDENT_4 . ext . IDENT_5 . commons . backend . service . IDENT_6 . Override public java . lang . String getMessage ( final org . IDENT_4 . backend . IDENT_9 . Path path ) { return ( ( path . METHOD_8 ( ) ) + STRING_2 ) + IDENT_3 ; } } ; } return null ; }
org . junit . Assert . assertNull ( result ) 