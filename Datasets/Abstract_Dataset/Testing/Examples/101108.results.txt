METHOD_0 ( ) { final java . net . URI IDENT_0 = java . net . URI . create ( STRING_0 0 ) ; final org . IDENT_1 . java . nio . fs . jgit . IDENT_2 fs = ( ( org . IDENT_1 . java . nio . fs . jgit . IDENT_2 ) ( provider . METHOD_1 ( IDENT_0 , org . IDENT_1 . java . nio . fs . jgit . IDENT_3 ) ) ) ; final java . util . concurrent . IDENT_4 IDENT_5 = new java . util . concurrent . METHOD_2 ( 3 ) ; final java . lang . Thread t = new java . lang . Thread ( ( ) -> { final org . IDENT_1 . java . nio . file . Path IDENT_6 = org . IDENT_1 . java . nio . fs . jgit . provider . getPath ( java . net . URI . create ( STRING_1 ) ) ; final org . eclipse . jgit . IDENT_7 . IDENT_8 commit = METHOD_3 ( fs , STRING_2 , STRING_3 , STRING_4 ) ; java . lang . Thread IDENT_9 = new java . lang . Thread ( ( ) -> { org . IDENT_1 . java . nio . fs . jgit . IDENT_10 . logger . info ( ( ( ( STRING_5 + ( commit . getName ( ) ) ) + STRING_6 ) + ( commit . METHOD_4 ( ) ) ) ) ; METHOD_5 ( fs . METHOD_6 ( ) ) ; org . IDENT_1 . java . nio . base . version . IDENT_11 record = METHOD_7 ( STRING_0 1 , STRING_7 , STRING_8 , new java . util . Date ( ) , commit . getName ( ) ) ; org . IDENT_1 . java . nio . base . options . IDENT_12 IDENT_13 = new org . IDENT_1 . java . nio . base . options . METHOD_8 ( record ) ; org . IDENT_1 . java . nio . fs . jgit . IDENT_10 . logger . info ( STRING_0 ) ; org . IDENT_1 . java . nio . fs . jgit . provider . METHOD_9 ( IDENT_6 , METHOD_8 . IDENT_14 , IDENT_13 ) ; METHOD_5 ( fs . METHOD_6 ( ) ) ; METHOD_10 ( IDENT_5 ) ; } ) ; java . lang . Thread IDENT_15 = new java . lang . Thread ( ( ) -> { org . IDENT_1 . java . nio . fs . jgit . IDENT_10 . logger . info ( ( ( ( STRING_5 + ( commit . getName ( ) ) ) + STRING_6 ) + ( commit . METHOD_4 ( ) ) ) ) ; METHOD_5 ( fs . METHOD_6 ( ) ) ; org . IDENT_1 . java . nio . base . version . IDENT_11 record = METHOD_7 ( STRING_0 1 , STRING_7 , STRING_8 , new java . util . Date ( ) , commit . getName ( ) ) ; org . IDENT_1 . java . nio . base . options . METHOD_8 IDENT_13 = new org . IDENT_1 . java . nio . base . options . METHOD_8 ( record ) ; org . IDENT_1 . java . nio . fs . jgit . IDENT_10 . logger . info ( STRING_9 ) ; org . IDENT_1 . java . nio . fs . jgit . provider . METHOD_9 ( IDENT_6 , METHOD_8 . IDENT_14 , IDENT_13 ) ; METHOD_5 ( fs . METHOD_6 ( ) ) ; METHOD_10 ( IDENT_5 ) ; } ) ; IDENT_9 . setName ( STRING_0 3 ) ; IDENT_15 . setName ( STRING_0 2 ) ; IDENT_15 . start ( ) ; IDENT_9 . start ( ) ; METHOD_10 ( IDENT_5 ) ; } ) ; try { t . start ( ) ; t . join ( INT_0 ) ; t . METHOD_11 ( ) ; } catch ( java . lang . IDENT_16 e ) { } "<AssertPlaceHolder>" ; } METHOD_12 ( org . IDENT_1 . java . nio . fs . jgit . util . IDENT_17 , java . lang . String ) { java . util . List < org . eclipse . jgit . IDENT_7 . IDENT_8 > IDENT_18 = new java . util . ArrayList ( ) ; final org . eclipse . jgit . lib . IDENT_19 id = new org . IDENT_1 . java . nio . fs . jgit . util . commands . METHOD_13 ( IDENT_20 . METHOD_14 ( ) , IDENT_21 ) . execute ( ) . METHOD_15 ( ) ; for ( org . eclipse . jgit . IDENT_7 . IDENT_8 commit : IDENT_20 . METHOD_16 ( ) . add ( id ) . call ( ) ) { logger . info ( ( ( ( ( ( STRING_10 + IDENT_21 ) + STRING_11 ) + ( commit . METHOD_4 ( ) ) ) + STRING_12 ) + ( commit . toString ( ) ) ) ) ; IDENT_18 . add ( commit ) ; } return IDENT_18 ; }
org . junit . Assert . assertEquals ( 3 , METHOD_12 ( ( ( org . IDENT_1 . java . nio . fs . jgit . util . IDENT_17 ) ( fs . METHOD_6 ( ) ) ) , STRING_3 ) . size ( ) ) 