METHOD_0 ( ) { final java . io . File IDENT_0 = METHOD_1 ( ) ; final java . io . File IDENT_1 = new java . io . File ( IDENT_0 , STRING_0 ) ; final org . IDENT_2 . java . nio . fs . jgit . util . IDENT_3 IDENT_4 = new org . IDENT_2 . java . nio . fs . jgit . util . commands . METHOD_2 ( IDENT_1 ) . execute ( ) . get ( ) ; new org . IDENT_2 . java . nio . fs . jgit . util . commands . METHOD_3 ( IDENT_4 , STRING_1 , STRING_2 , STRING_3 , STRING_4 , null , null , false , new java . util . HashMap < java . lang . String , java . io . File > ( ) { { put ( STRING_5 , METHOD_4 ( STRING_6 ) ) ; } } ) . execute ( ) ; final java . net . URI IDENT_5 = java . net . URI . create ( STRING_7 ) ; final java . util . Map < java . lang . String , java . lang . Object > IDENT_6 = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) { { put ( IDENT_7 . IDENT_8 , IDENT_4 . METHOD_5 ( ) . METHOD_6 ( ) . toString ( ) ) ; } } ; final org . IDENT_2 . java . nio . file . IDENT_9 fs = provider . METHOD_7 ( IDENT_5 , IDENT_6 ) ; "<AssertPlaceHolder>" . METHOD_8 ( ) ; final org . IDENT_2 . java . nio . file . Path path = provider . getPath ( java . net . URI . create ( STRING_8 ) ) ; provider . METHOD_9 ( path ) ; } METHOD_7 ( java . net . URI , java . util . Map ) { try { final org . IDENT_2 . java . nio . file . IDENT_9 fs = org . IDENT_2 . java . nio . file . IDENT_10 . METHOD_7 ( uri , IDENT_6 ) ; return METHOD_10 ( fs ) ; } catch ( final org . IDENT_2 . java . nio . file . IDENT_11 ex ) { METHOD_10 ( org . IDENT_2 . java . nio . file . IDENT_10 . METHOD_11 ( uri ) ) ; throw ex ; } }
org . junit . Assert . assertThat ( fs ) 