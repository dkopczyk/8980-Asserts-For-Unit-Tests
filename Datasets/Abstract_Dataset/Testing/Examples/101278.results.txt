METHOD_0 ( ) { org . IDENT_0 . client . workbench . IDENT_1 . IDENT_2 IDENT_3 = mock ( org . IDENT_0 . client . workbench . IDENT_1 . impl . IDENT_4 . class ) ; org . IDENT_0 . client . workbench . IDENT_1 . IDENT_2 IDENT_5 = mock ( org . IDENT_0 . client . workbench . IDENT_1 . impl . IDENT_4 . class ) ; when ( IDENT_3 . METHOD_1 ( ) ) . thenReturn ( com . google . common . collect . ImmutableMap . of ( ( ( org . IDENT_0 . workbench . model . IDENT_6 ) ( IDENT_7 . IDENT_8 ) ) , IDENT_5 ) ) ; org . IDENT_0 . client . workbench . IDENT_1 . impl . IDENT_9 < ? > IDENT_10 = METHOD_2 ( ) ; IDENT_10 . METHOD_3 ( IDENT_3 , IDENT_7 . IDENT_8 ) ; IDENT_10 . METHOD_4 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( org . IDENT_0 . client . workbench . IDENT_1 . IDENT_11 ) { final org . IDENT_0 . client . workbench . widgets . split . IDENT_12 IDENT_13 = IDENT_14 . get ( IDENT_15 ) ; if ( IDENT_13 == null ) { return null ; } com . google . IDENT_16 . user . client . ui . IDENT_17 . IDENT_18 IDENT_19 = IDENT_13 . METHOD_6 ( IDENT_15 . METHOD_7 ( ) ) ; if ( IDENT_19 == null ) { throw new java . lang . METHOD_8 ( STRING_0 ) ; } return org . IDENT_0 . client . workbench . IDENT_1 . impl . IDENT_20 . METHOD_9 ( IDENT_19 ) ; }
org . junit . Assert . assertEquals ( IDENT_7 . IDENT_8 , IDENT_10 . METHOD_5 ( IDENT_5 ) ) 