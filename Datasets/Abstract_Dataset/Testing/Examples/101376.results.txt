METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; org . drools . core . command . runtime . IDENT_1 command = IDENT_2 . METHOD_1 ( IDENT_0 , org . drools . core . command . runtime . IDENT_1 . class ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . kie . server . IDENT_3 . Configuration ) { java . util . Map < java . lang . String , java . util . List < java . lang . String > > IDENT_4 = configuration . METHOD_3 ( ) ; java . util . Map < java . lang . String , java . util . List < java . lang . String > > IDENT_5 = configuration . METHOD_4 ( ) ; java . util . Map < java . lang . String , java . util . List < org . kie . server . IDENT_3 . IDENT_6 > > IDENT_7 = configuration . METHOD_5 ( ) ; org . json . IDENT_8 IDENT_9 = new org . json . METHOD_6 ( ) ; org . json . METHOD_6 IDENT_10 = new org . json . METHOD_6 ( ) ; org . json . METHOD_6 IDENT_11 = new org . json . METHOD_6 ( ) ; org . json . JSONObject config = new org . json . JSONObject ( ) ; for ( java . util . Map . Entry < java . lang . String , java . util . List < java . lang . String > > entry : IDENT_4 . entrySet ( ) ) { org . json . METHOD_6 array = new org . json . METHOD_6 ( ) ; entry . getValue ( ) . METHOD_7 ( ( url ) -> array . put ( url ) ) ; org . json . JSONObject container = new org . json . JSONObject ( ) ; container . put ( entry . getKey ( ) , array ) ; IDENT_10 . put ( container ) ; } for ( java . util . Map . Entry < java . lang . String , java . util . List < java . lang . String > > entry : IDENT_5 . entrySet ( ) ) { org . json . METHOD_6 array = new org . json . METHOD_6 ( ) ; entry . getValue ( ) . METHOD_7 ( ( url ) -> array . put ( url ) ) ; org . json . JSONObject server = new org . json . JSONObject ( ) ; server . put ( entry . getKey ( ) , array ) ; IDENT_9 . put ( server ) ; } java . util . Set < java . lang . String > IDENT_12 = new java . util . HashSet ( ) ; for ( java . util . Map . Entry < java . lang . String , java . util . List < org . kie . server . IDENT_3 . IDENT_6 > > entry : IDENT_7 . entrySet ( ) ) { if ( IDENT_12 . contains ( entry . getKey ( ) ) ) { continue ; } entry . getValue ( ) . METHOD_7 ( ( IDENT_13 ) -> { org . json . JSONObject IDENT_14 = new org . json . JSONObject ( ) ; IDENT_12 . add ( IDENT_13 . METHOD_8 ( ) ) ; IDENT_12 . add ( IDENT_13 . METHOD_9 ( ) ) ; try { IDENT_14 . put ( STRING_1 , IDENT_13 . METHOD_8 ( ) ) ; IDENT_14 . put ( STRING_2 , IDENT_13 . METHOD_9 ( ) ) ; IDENT_14 . put ( STRING_3 , IDENT_13 . METHOD_10 ( ) ) ; IDENT_11 . put ( IDENT_14 ) ; } catch ( e ) { org . kie . server . IDENT_3 . repository . e . printStackTrace ( ) ; } } ) ; } config . put ( STRING_4 , IDENT_10 ) ; config . put ( STRING_5 , IDENT_9 ) ; config . put ( STRING_6 , IDENT_11 ) ; return config . toString ( 2 ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_2 . METHOD_2 ( command ) ) 