METHOD_0 ( ) { java . lang . String str = "" ; str += STRING_0 ; str += ( STRING_1 + ( org . drools . compiler . IDENT_0 . class . METHOD_1 ( ) ) ) + STRING_2 ; str += STRING_3 ; str += STRING_4 ; str += STRING_5 0 ; str += STRING_6 ; str += STRING_7 ; str += STRING_5 ; org . kie . api . runtime . IDENT_1 IDENT_2 = new org . kie . internal . utils . METHOD_2 ( ) . METHOD_3 ( str , IDENT_3 . IDENT_4 ) . build ( ) . METHOD_4 ( ) ; java . util . List < org . kie . api . command . IDENT_5 > commands = new java . util . ArrayList < org . kie . api . command . IDENT_5 > ( ) ; commands . add ( org . kie . internal . command . IDENT_6 . METHOD_5 ( IDENT_7 , IDENT_8 ) ) ; commands . add ( org . kie . internal . command . IDENT_6 . METHOD_6 ( new org . drools . compiler . METHOD_7 ( ) ) ) ; commands . add ( org . kie . internal . command . IDENT_6 . METHOD_8 ( ) ) ; IDENT_2 . execute ( org . kie . internal . command . IDENT_6 . METHOD_9 ( commands ) ) ; IDENT_2 . METHOD_10 ( ) ; java . io . File file = new java . io . File ( ( ( ( ( IDENT_7 ) + ( java . io . File . IDENT_9 ) ) + ( IDENT_8 ) ) + STRING_8 ) ) ; "<AssertPlaceHolder>" ; } exists ( ) { final org . drools . IDENT_10 . core . IDENT_11 . IDENT_12 < org . drools . IDENT_10 . core . index . keys . IDENT_13 , T , java . util . List < T > > IDENT_14 = METHOD_11 ( ) ; if ( IDENT_14 == null ) { return false ; } else if ( IDENT_14 . isEmpty ( ) ) { return false ; } else { return true ; } }
org . junit . Assert . assertTrue ( file . exists ( ) ) 