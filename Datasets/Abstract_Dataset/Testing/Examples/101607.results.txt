METHOD_0 ( ) { java . lang . String rule = STRING_0 + ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( STRING_1 + STRING_2 ) + STRING_3 3 ) + STRING_3 6 ) + STRING_3 7 ) + STRING_2 ) + STRING_3 3 ) + STRING_3 4 ) + STRING_3 6 ) + STRING_4 ) + STRING_5 ) + STRING_3 5 ) + STRING_3 2 ) + STRING_3 0 ) + STRING_6 ) + STRING_3 6 ) ; org . kie . api . IDENT_0 IDENT_1 = METHOD_1 ( rule ) ; org . kie . api . runtime . IDENT_2 IDENT_3 = IDENT_1 . METHOD_2 ( ) ; org . kie . api . IDENT_4 . type . IDENT_5 IDENT_6 = IDENT_1 . METHOD_3 ( STRING_7 , STRING_8 ) ; org . kie . api . IDENT_4 . type . IDENT_5 IDENT_7 = IDENT_1 . METHOD_3 ( STRING_7 , STRING_9 ) ; java . lang . Object IDENT_8 = IDENT_6 . newInstance ( ) ; IDENT_6 . set ( IDENT_8 , STRING_3 , 1 ) ; IDENT_3 . insert ( IDENT_8 ) ; java . lang . Object IDENT_9 = IDENT_6 . newInstance ( ) ; IDENT_6 . set ( IDENT_9 , STRING_3 , 2 ) ; IDENT_3 . insert ( IDENT_9 ) ; java . lang . Object IDENT_10 = IDENT_7 . newInstance ( ) ; IDENT_7 . set ( IDENT_10 , STRING_3 , 1 ) ; IDENT_7 . set ( IDENT_10 , STRING_3 1 , 1 ) ; IDENT_3 . insert ( IDENT_10 ) ; int rules = IDENT_3 . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { return 0 ; }
org . junit . Assert . assertEquals ( 3 , rules ) 