METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 + ( ( ( ( ( ( ( ( ( ( ( ( ( STRING_1 + "\n" ) + STRING_2 4 ) + STRING_2 1 ) + STRING_2 5 ) + STRING_2 3 ) + STRING_3 ) + STRING_2 5 ) + "\n" ) + STRING_2 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_2 5 ) ; org . kie . internal . utils . IDENT_1 helper = new org . kie . internal . utils . METHOD_1 ( ) ; helper . METHOD_2 ( IDENT_0 , IDENT_2 . IDENT_3 ) ; org . kie . api . runtime . IDENT_4 IDENT_5 = helper . build ( ) . METHOD_3 ( ) ; java . util . ArrayList list = new java . util . ArrayList ( ) ; IDENT_5 . METHOD_4 ( STRING_2 0 , list ) ; IDENT_5 . METHOD_4 ( STRING_7 , 3 ) ; IDENT_5 . insert ( STRING_8 ) ; IDENT_5 . insert ( STRING_2 2 ) ; IDENT_5 . insert ( STRING_2 6 ) ; IDENT_5 . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } asList ( int [ ] ) { java . util . List < java . lang . Integer > list = new java . util . ArrayList < java . lang . Integer > ( IDENT_6 . length ) ; for ( int i : IDENT_6 ) { list . add ( i ) ; } return list ; }
org . junit . Assert . assertEquals ( java . util . Arrays . asList ( STRING_2 2 ) , list ) 