METHOD_0 ( ) { java . lang . String str = ( ( ( ( ( ( ( STRING_0 + ( org . drools . compiler . Person . class . METHOD_1 ( ) ) ) + STRING_1 7 ) + STRING_1 0 ) + STRING_2 ) + STRING_3 ) + STRING_4 ) + STRING_1 9 ) + STRING_5 ; org . kie . api . runtime . IDENT_0 IDENT_1 = new org . kie . internal . utils . METHOD_2 ( ) . METHOD_3 ( str , IDENT_2 . IDENT_3 ) . build ( ) . METHOD_4 ( ) ; java . util . List < java . lang . String > list = new java . util . ArrayList ( ) ; ( ( org . kie . internal . event . rule . IDENT_4 ) ( IDENT_1 ) ) . METHOD_5 ( new org . kie . internal . event . rule . METHOD_6 ( ) { @ org . drools . compiler . IDENT_5 . Override public void METHOD_7 ( org . kie . api . runtime . rule . IDENT_6 match ) { list . add ( ( STRING_1 8 + ( match . METHOD_8 ( STRING_1 3 ) ) ) ) ; } @ org . drools . compiler . IDENT_5 . Override public void METHOD_9 ( org . kie . api . runtime . rule . IDENT_6 match ) { list . add ( ( STRING_1 1 + ( match . METHOD_8 ( STRING_1 3 ) ) ) ) ; } @ org . drools . compiler . IDENT_5 . Override public void METHOD_10 ( org . kie . api . runtime . rule . IDENT_6 match ) { list . add ( ( STRING_6 + ( match . METHOD_8 ( STRING_1 3 ) ) ) ) ; } @ org . drools . compiler . IDENT_5 . Override public void METHOD_11 ( org . kie . api . runtime . rule . IDENT_6 match ) { list . add ( ( STRING_1 6 + ( match . METHOD_8 ( STRING_1 3 ) ) ) ) ; } } ) ; IDENT_1 . insert ( new org . drools . compiler . Person ( STRING_7 , INT_0 ) ) ; IDENT_1 . METHOD_12 ( ) ; java . util . List < java . lang . String > expected = java . util . Arrays . asList ( STRING_1 4 , STRING_1 2 , STRING_8 , STRING_9 , STRING_1 5 , STRING_1 ) ; "<AssertPlaceHolder>" ; } METHOD_12 ( ) { return 0 ; }
org . junit . Assert . assertEquals ( expected , list ) 