METHOD_0 ( ) { java . io . ByteArrayOutputStream IDENT_0 = new java . io . ByteArrayOutputStream ( ) ; java . io . IDENT_1 IDENT_2 = new java . io . METHOD_1 ( IDENT_0 ) ; new org . drools . example . api . IDENT_3 . METHOD_2 ( ) . METHOD_3 ( IDENT_2 ) ; IDENT_2 . close ( ) ; java . lang . String actual = new java . lang . String ( IDENT_0 . toByteArray ( ) ) ; java . lang . String expected = ( ( ( ( ( ( ( "" + STRING_0 ) + ( org . drools . example . api . IDENT_3 . IDENT_4 . IDENT_5 ) ) + STRING_1 ) + ( org . drools . example . api . IDENT_3 . IDENT_4 . IDENT_5 ) ) + STRING_2 ) + ( org . drools . example . api . IDENT_3 . IDENT_4 . IDENT_5 ) ) + STRING_3 ) + ( org . drools . example . api . IDENT_3 . IDENT_4 . IDENT_5 ) ; "<AssertPlaceHolder>" ; } toByteArray ( ) { java . io . ByteArrayOutputStream buf = new java . io . ByteArrayOutputStream ( ) ; try { java . io . IDENT_6 out = new java . io . METHOD_4 ( buf ) ; out . METHOD_5 ( IDENT_7 ) ; out . METHOD_5 ( IDENT_8 ) ; out . METHOD_5 ( classes ) ; out . close ( ) ; } catch ( java . io . IOException e ) { logger . error ( STRING_4 , e ) ; } return buf . toByteArray ( ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 