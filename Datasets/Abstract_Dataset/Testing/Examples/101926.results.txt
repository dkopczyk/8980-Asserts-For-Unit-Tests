METHOD_0 ( ) { org . drools . IDENT_0 . IDENT_1 . IDENT_2 unit = org . drools . IDENT_0 . IDENT_1 . IDENT_3 . METHOD_1 ( getClass ( ) . METHOD_2 ( ) . getResourceAsStream ( STRING_0 ) ) ; org . kie . api . runtime . rule . IDENT_4 executor = unit . METHOD_3 ( ) ; java . lang . reflect . IDENT_5 < ? > IDENT_6 = unit . METHOD_4 ( STRING_1 , java . lang . String . class , int . class ) ; org . kie . api . runtime . rule . IDENT_7 < ? > IDENT_8 = executor . METHOD_5 ( STRING_2 , IDENT_6 . newInstance ( STRING_3 , INT_0 ) , IDENT_6 . newInstance ( STRING_4 , INT_1 ) , IDENT_6 . newInstance ( STRING_5 , 5 ) ) ; org . kie . api . runtime . rule . IDENT_9 IDENT_10 = unit . METHOD_6 ( ) ; "<AssertPlaceHolder>" ; } run ( org . junit . runner . IDENT_11 . IDENT_12 ) { for ( org . drools . workbench . models . IDENT_13 . shared . IDENT_14 IDENT_15 : IDENT_16 ) { METHOD_7 ( IDENT_17 , IDENT_15 ) ; } }
org . junit . Assert . assertEquals ( 2 , executor . run ( IDENT_10 ) ) 