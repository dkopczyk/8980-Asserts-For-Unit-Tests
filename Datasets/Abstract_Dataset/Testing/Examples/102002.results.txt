METHOD_0 ( ) { final java . lang . String IDENT_0 = ( ( ( ( ( ( ( ( ( ( STRING_0 + STRING_1 1 ) + ( org . drools . IDENT_1 . common . model . Person . class . METHOD_1 ( ) ) ) + STRING_2 ) + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_1 3 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) + STRING_1 4 ; final org . kie . api . IDENT_2 IDENT_3 = org . drools . IDENT_1 . common . util . IDENT_4 . METHOD_2 ( STRING_1 0 , IDENT_5 , IDENT_0 ) ; final org . kie . api . runtime . IDENT_6 IDENT_7 = IDENT_3 . METHOD_3 ( ) ; try { final java . util . List list = new java . util . ArrayList ( ) ; IDENT_7 . METHOD_4 ( STRING_1 2 , list ) ; final org . drools . IDENT_1 . common . model . Person IDENT_8 = new org . drools . IDENT_1 . common . model . Person ( STRING_9 , INT_0 ) ; final org . kie . api . runtime . rule . IDENT_9 IDENT_10 = IDENT_7 . insert ( IDENT_8 ) ; final org . drools . IDENT_1 . common . model . Person IDENT_11 = new org . drools . IDENT_1 . common . model . Person ( STRING_9 , INT_1 ) ; IDENT_7 . insert ( IDENT_11 ) ; IDENT_8 . setName ( STRING_1 ) ; IDENT_7 . update ( IDENT_10 , IDENT_8 ) ; IDENT_7 . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } finally { IDENT_7 . METHOD_6 ( ) ; } } size ( ) { return IDENT_12 . size ( ) ; }
org . junit . Assert . assertEquals ( 0 , list . size ( ) ) 