METHOD_0 ( ) { org . drools . workbench . models . IDENT_0 . shared . IDENT_1 field = new org . drools . workbench . models . IDENT_0 . shared . METHOD_1 ( ) ; field . METHOD_2 ( new org . drools . workbench . models . IDENT_0 . shared . METHOD_3 ( ) ) ; org . mockito . Mockito . < java . lang . Class > when ( IDENT_2 . METHOD_4 ( org . mockito . Matchers . < java . lang . String > any ( ) ) ) . thenReturn ( org . drools . workbench . models . IDENT_0 . backend . IDENT_3 . class ) ; org . drools . workbench . models . IDENT_0 . backend . IDENT_4 . IDENT_5 IDENT_6 = IDENT_7 . METHOD_5 ( field ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( org . drools . workbench . models . IDENT_0 . shared . Field ) { if ( field instanceof org . drools . workbench . models . IDENT_0 . shared . IDENT_8 ) { org . drools . workbench . models . IDENT_0 . shared . IDENT_8 IDENT_9 = ( ( org . drools . workbench . models . IDENT_0 . shared . IDENT_8 ) ( field ) ) ; if ( ( IDENT_9 . getValue ( ) ) == null ) { throw new java . lang . IllegalArgumentException ( STRING_0 ) ; } else { return METHOD_6 ( IDENT_10 , IDENT_9 ) ; } } else if ( field instanceof org . drools . workbench . models . IDENT_0 . shared . METHOD_1 ) { return new org . drools . workbench . models . IDENT_0 . backend . IDENT_4 . METHOD_7 ( IDENT_10 , ( ( org . drools . workbench . models . IDENT_0 . shared . METHOD_1 ) ( field ) ) , IDENT_2 ) ; } else if ( field instanceof org . drools . workbench . models . IDENT_0 . shared . IDENT_11 ) { return new org . drools . workbench . models . IDENT_0 . backend . IDENT_4 . METHOD_8 ( IDENT_10 , ( ( org . drools . workbench . models . IDENT_0 . shared . IDENT_11 ) ( field ) ) ) ; } throw new java . lang . IllegalArgumentException ( ( STRING_1 + ( field . getClass ( ) ) ) ) ; }
org . junit . Assert . assertNotNull ( IDENT_6 ) 