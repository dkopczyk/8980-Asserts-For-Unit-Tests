METHOD_0 ( ) { final org . drools . workbench . IDENT_0 . IDENT_1 . IDENT_2 . client . IDENT_3 . column . plugins . commons . IDENT_4 IDENT_5 = METHOD_1 ( STRING_0 ) ; final java . util . Set < org . drools . workbench . IDENT_0 . IDENT_1 . IDENT_2 . client . IDENT_3 . column . plugins . commons . IDENT_4 > IDENT_6 = new java . util . HashSet < org . drools . workbench . IDENT_0 . IDENT_1 . IDENT_2 . client . IDENT_3 . column . plugins . commons . IDENT_4 > ( ) { { add ( IDENT_5 ) ; } } ; doReturn ( IDENT_6 ) . when ( plugin ) . METHOD_2 ( ) ; final org . drools . workbench . IDENT_0 . IDENT_1 . IDENT_2 . client . IDENT_3 . column . plugins . commons . IDENT_4 IDENT_7 = plugin . METHOD_3 ( METHOD_4 ( STRING_0 , STRING_1 ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String , java . lang . String ) { final org . drools . workbench . IDENT_0 . IDENT_1 . IDENT_2 . client . IDENT_3 . column . plugins . commons . IDENT_8 IDENT_9 = mock ( org . drools . workbench . IDENT_0 . IDENT_1 . IDENT_2 . client . IDENT_3 . column . plugins . commons . IDENT_8 . class ) ; when ( IDENT_9 . METHOD_5 ( ) ) . thenReturn ( IDENT_10 ) ; when ( IDENT_9 . METHOD_6 ( ) ) . thenReturn ( IDENT_11 ) ; return IDENT_9 ; }
org . junit . Assert . assertSame ( IDENT_5 , IDENT_7 ) 