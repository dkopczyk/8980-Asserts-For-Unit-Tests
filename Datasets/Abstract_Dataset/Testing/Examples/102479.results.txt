METHOD_0 ( ) { org . drools . workbench . IDENT_0 . IDENT_1 . model . IDENT_2 . IDENT_3 IDENT_4 = new org . drools . workbench . IDENT_0 . IDENT_1 . model . IDENT_2 . METHOD_1 ( STRING_0 , STRING_1 , new java . util . HashMap ( ) , new java . util . HashMap ( ) ) ; IDENT_4 . METHOD_2 ( STRING_2 , STRING_3 ) ; org . drools . workbench . IDENT_0 . IDENT_1 . model . IDENT_2 . METHOD_1 IDENT_5 = new org . drools . workbench . IDENT_0 . IDENT_1 . model . IDENT_2 . METHOD_1 ( STRING_3 , STRING_4 , new java . util . HashMap ( ) , new java . util . HashMap ( ) ) ; java . util . IDENT_6 < java . lang . String , org . drools . workbench . IDENT_0 . IDENT_1 . model . IDENT_2 . METHOD_1 > IDENT_7 = METHOD_3 ( new java . util . METHOD_4 ( ) ) ; IDENT_7 . put ( STRING_0 , IDENT_4 ) ; IDENT_7 . put ( STRING_3 , IDENT_5 ) ; java . util . List < java . lang . String > elements = java . util . Arrays . asList ( STRING_0 , STRING_2 , STRING_5 ) ; org . drools . workbench . IDENT_0 . IDENT_1 . model . IDENT_2 . METHOD_1 target = ( ( org . drools . workbench . IDENT_0 . IDENT_1 . client . commands . IDENT_8 . IDENT_9 ) ( command ) ) . METHOD_0 ( IDENT_4 , elements , IDENT_7 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_7 , times ( 1 ) ) . get ( STRING_3 ) ; } METHOD_2 ( java . lang . String , java . lang . String ) { IDENT_10 . put ( IDENT_11 , IDENT_12 ) ; }
org . junit . Assert . assertEquals ( target , IDENT_5 ) 