METHOD_0 ( ) { org . kie . api . IDENT_0 IDENT_1 = org . IDENT_2 . process . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_1 ( ) ; org . kie . api . runtime . IDENT_6 IDENT_7 = org . IDENT_2 . process . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_2 ( IDENT_1 ) ; java . util . Map < java . lang . String , java . lang . Object > params = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; params . put ( STRING_0 , STRING_1 ) ; org . kie . api . runtime . process . IDENT_8 IDENT_9 = ( ( org . kie . api . runtime . process . IDENT_8 ) ( IDENT_7 . METHOD_3 ( STRING_2 , params ) ) ) ; java . lang . Object output = IDENT_9 . METHOD_4 ( STRING_3 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String ) { java . lang . Object value = IDENT_10 . get ( name ) ; if ( value != null ) { return value ; } if ( ( STRING_4 . equals ( name ) ) && ( ( METHOD_5 ( ) ) != null ) ) { return METHOD_5 ( ) . getId ( ) ; } else if ( ( STRING_5 . equals ( name ) ) && ( ( METHOD_5 ( ) ) != null ) ) { return METHOD_5 ( ) . METHOD_6 ( ) ; } if ( ( ( METHOD_5 ( ) ) != null ) && ( ( METHOD_5 ( ) . METHOD_7 ( ) ) != null ) ) { value = METHOD_5 ( ) . METHOD_7 ( ) . METHOD_8 ( name ) ; if ( value != null ) { return value ; } @ org . IDENT_2 . process . instance . context . IDENT_11 . METHOD_9 ( STRING_6 ) java . util . Collection < org . kie . api . runtime . process . IDENT_12 > IDENT_13 = ( ( java . util . Collection < org . kie . api . runtime . process . IDENT_12 > ) ( METHOD_5 ( ) . METHOD_7 ( ) . METHOD_10 ( new org . drools . core . METHOD_11 ( org . kie . api . runtime . process . IDENT_12 . class ) ) ) ) ; if ( ( IDENT_13 . size ( ) ) == 1 ) { org . kie . api . runtime . process . IDENT_12 IDENT_14 = IDENT_13 . iterator ( ) . next ( ) ; final java . lang . String IDENT_15 = ( name . startsWith ( IDENT_16 . IDENT_17 ) ) ? name . METHOD_12 ( IDENT_16 . IDENT_17 , "" ) : name ; if ( IDENT_14 != null ) { return IDENT_14 . METHOD_13 ( IDENT_15 ) ; } } } return null ; }
org . junit . Assert . assertEquals ( STRING_1 , output ) 