METHOD_0 ( ) { final org . kie . workbench . common . IDENT_0 . core . graph . IDENT_1 graph = mock ( org . kie . workbench . common . IDENT_0 . core . graph . IDENT_1 . class ) ; final org . kie . workbench . common . IDENT_2 . client . IDENT_3 . IDENT_4 . IDENT_5 IDENT_6 = mock ( IDENT_4 . IDENT_5 . class ) ; final java . util . List < org . kie . workbench . common . IDENT_2 . client . IDENT_3 . IDENT_7 > IDENT_8 = new java . util . ArrayList ( ) ; doReturn ( IDENT_6 ) . when ( IDENT_9 ) . METHOD_1 ( ) ; when ( IDENT_6 . METHOD_2 ( ) ) . thenReturn ( IDENT_8 ) ; final java . util . List < org . kie . workbench . common . IDENT_2 . client . IDENT_3 . IDENT_7 > IDENT_10 = IDENT_9 . METHOD_2 ( graph ) ; verify ( IDENT_11 ) . METHOD_3 ( graph , IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . kie . workbench . common . IDENT_0 . core . graph . IDENT_1 , org . kie . workbench . common . IDENT_0 . core . graph . IDENT_12 . METHOD_3 . tree . IDENT_13 ) { METHOD_4 ( graph , java . util . Optional . empty ( ) , IDENT_14 ) ; }
org . junit . Assert . assertEquals ( IDENT_8 , IDENT_10 ) 