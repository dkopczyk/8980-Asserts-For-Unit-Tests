METHOD_0 ( ) { IDENT_0 . METHOD_1 ( ) . add ( new org . kie . workbench . common . IDENT_1 . api . IDENT_2 . IDENT_3 . METHOD_2 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . kie . workbench . common . IDENT_1 . api . IDENT_2 . IDENT_3 . IDENT_4 , int ) { if ( IDENT_5 < 0 ) { return org . kie . workbench . common . IDENT_1 . client . IDENT_6 . expressions . types . IDENT_0 . IDENT_7 . IDENT_8 . IDENT_9 ; } final int IDENT_10 = IDENT_0 . METHOD_1 ( ) . size ( ) ; int IDENT_11 = IDENT_5 ; if ( ( IDENT_11 = IDENT_11 - ( org . kie . workbench . common . IDENT_1 . client . IDENT_6 . expressions . types . IDENT_0 . IDENT_7 . IDENT_12 ) ) < 0 ) { return org . kie . workbench . common . IDENT_1 . client . IDENT_6 . expressions . types . IDENT_0 . IDENT_7 . IDENT_8 . IDENT_13 ; } if ( ( IDENT_11 - IDENT_10 ) < 0 ) { return org . kie . workbench . common . IDENT_1 . client . IDENT_6 . expressions . types . IDENT_0 . IDENT_7 . IDENT_8 . IDENT_14 ; } return org . kie . workbench . common . IDENT_1 . client . IDENT_6 . expressions . types . IDENT_0 . IDENT_7 . IDENT_8 . IDENT_9 ; }
org . junit . Assert . assertEquals ( IDENT_8 . IDENT_14 , org . kie . workbench . common . IDENT_1 . client . IDENT_6 . expressions . types . IDENT_0 . IDENT_7 . METHOD_3 ( IDENT_0 , 1 ) ) 