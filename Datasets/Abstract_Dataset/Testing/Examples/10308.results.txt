METHOD_0 ( ) { org . apache . commons . math4 . IDENT_0 . IDENT_1 IDENT_2 = new org . apache . commons . math4 . IDENT_0 . METHOD_1 ( ) { @ org . apache . commons . math4 . IDENT_0 . Override public double METHOD_2 ( ) { return 0 ; } } ; org . apache . commons . math4 . IDENT_0 . METHOD_1 IDENT_3 = new org . apache . commons . math4 . IDENT_0 . METHOD_1 ( ) { @ org . apache . commons . math4 . IDENT_0 . Override public double METHOD_2 ( ) { return 10 ; } } ; org . apache . commons . math4 . IDENT_0 . METHOD_1 IDENT_4 = new org . apache . commons . math4 . IDENT_0 . METHOD_1 ( ) { @ org . apache . commons . math4 . IDENT_0 . Override public double METHOD_2 ( ) { return 15 ; } } ; java . util . ArrayList < org . apache . commons . math4 . IDENT_0 . METHOD_1 > IDENT_5 = new java . util . ArrayList ( ) ; IDENT_5 . add ( IDENT_2 ) ; IDENT_5 . add ( IDENT_3 ) ; IDENT_5 . add ( IDENT_4 ) ; org . apache . commons . math4 . IDENT_0 . IDENT_6 IDENT_7 = new org . apache . commons . math4 . IDENT_0 . METHOD_3 ( IDENT_5 , 10 ) { @ org . apache . commons . math4 . IDENT_0 . Override public org . apache . commons . math4 . IDENT_0 . IDENT_8 METHOD_4 ( ) { return null ; } } ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { org . apache . commons . math4 . IDENT_0 . METHOD_1 IDENT_9 = this . IDENT_5 . get ( 0 ) ; for ( org . apache . commons . math4 . IDENT_0 . METHOD_1 IDENT_10 : this . IDENT_5 ) { if ( ( IDENT_10 . compareTo ( IDENT_9 ) ) > 0 ) { IDENT_9 = IDENT_10 ; } } return IDENT_9 ; }
org . junit . Assert . assertEquals ( IDENT_4 , IDENT_7 . METHOD_5 ( ) ) 