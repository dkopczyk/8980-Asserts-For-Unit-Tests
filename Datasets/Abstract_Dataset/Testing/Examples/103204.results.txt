METHOD_0 ( ) { final org . kie . workbench . common . IDENT_0 . client . IDENT_1 . types . common . IDENT_2 IDENT_3 = mock ( org . kie . workbench . common . IDENT_0 . client . IDENT_1 . types . common . IDENT_2 . class ) ; final java . util . List < org . kie . workbench . common . IDENT_0 . client . IDENT_1 . types . common . IDENT_2 > IDENT_4 = asList ( mock ( org . kie . workbench . common . IDENT_0 . client . IDENT_1 . types . common . IDENT_2 . class ) , mock ( org . kie . workbench . common . IDENT_0 . client . IDENT_1 . types . common . IDENT_2 . class ) ) ; when ( IDENT_5 . METHOD_1 ( IDENT_3 ) ) . thenReturn ( IDENT_4 ) ; final java . util . List < org . kie . workbench . common . IDENT_0 . client . IDENT_1 . types . common . IDENT_2 > IDENT_6 = IDENT_7 . METHOD_2 ( IDENT_3 ) ; verify ( IDENT_7 ) . METHOD_3 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . kie . workbench . common . IDENT_0 . client . IDENT_1 . types . common . IDENT_2 ) { IDENT_5 . METHOD_2 ( IDENT_3 ) ; IDENT_8 . METHOD_2 ( IDENT_3 ) ; }
org . junit . Assert . assertEquals ( IDENT_4 , IDENT_6 ) 