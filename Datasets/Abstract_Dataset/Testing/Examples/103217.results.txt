METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final org . kie . workbench . common . IDENT_1 . client . IDENT_2 . types . common . IDENT_3 IDENT_4 = mock ( org . kie . workbench . common . IDENT_1 . client . IDENT_2 . types . common . IDENT_3 . class ) ; final org . kie . workbench . common . IDENT_1 . client . IDENT_2 . types . common . IDENT_3 IDENT_5 = mock ( org . kie . workbench . common . IDENT_1 . client . IDENT_2 . types . common . IDENT_3 . class ) ; final org . kie . workbench . common . IDENT_1 . api . IDENT_6 . IDENT_7 . IDENT_8 IDENT_9 = mock ( org . kie . workbench . common . IDENT_1 . api . IDENT_6 . IDENT_7 . IDENT_8 . class ) ; final org . kie . workbench . common . IDENT_1 . client . IDENT_2 . types . common . IDENT_10 IDENT_11 = mock ( org . kie . workbench . common . IDENT_1 . client . IDENT_2 . types . common . IDENT_10 . class ) ; final org . kie . workbench . common . IDENT_1 . client . IDENT_2 . types . common . IDENT_10 IDENT_12 = mock ( org . kie . workbench . common . IDENT_1 . client . IDENT_2 . types . common . IDENT_10 . class ) ; final org . kie . workbench . common . IDENT_1 . client . IDENT_2 . types . common . IDENT_10 IDENT_13 = mock ( org . kie . workbench . common . IDENT_1 . client . IDENT_2 . types . common . IDENT_10 . class ) ; final org . kie . workbench . common . IDENT_1 . client . IDENT_2 . types . common . IDENT_10 IDENT_14 = mock ( org . kie . workbench . common . IDENT_1 . client . IDENT_2 . types . common . IDENT_10 . class ) ; final org . kie . workbench . common . IDENT_1 . client . IDENT_2 . types . common . IDENT_10 IDENT_15 = mock ( org . kie . workbench . common . IDENT_1 . client . IDENT_2 . types . common . IDENT_10 . class ) ; when ( IDENT_16 . METHOD_1 ( IDENT_4 ) ) . thenReturn ( IDENT_11 ) ; when ( IDENT_11 . METHOD_2 ( IDENT_0 ) ) . thenReturn ( IDENT_12 ) ; when ( IDENT_12 . METHOD_3 ( ) ) . thenReturn ( IDENT_13 ) ; when ( IDENT_13 . METHOD_4 ( IDENT_9 ) ) . thenReturn ( IDENT_14 ) ; when ( IDENT_14 . METHOD_5 ( ) ) . thenReturn ( IDENT_15 ) ; when ( IDENT_15 . get ( ) ) . thenReturn ( IDENT_5 ) ; final org . kie . workbench . common . IDENT_1 . client . IDENT_2 . types . common . IDENT_3 IDENT_17 = handler . METHOD_6 ( IDENT_4 , IDENT_0 , IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( org . kie . workbench . common . IDENT_1 . client . IDENT_2 . types . common . IDENT_3 , java . lang . String , org . kie . workbench . common . IDENT_1 . api . IDENT_6 . IDENT_7 . IDENT_8 ) { return IDENT_16 . METHOD_1 ( IDENT_4 ) . METHOD_2 ( IDENT_0 ) . METHOD_3 ( ) . METHOD_4 ( IDENT_9 ) . METHOD_5 ( ) . get ( ) ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_17 ) 