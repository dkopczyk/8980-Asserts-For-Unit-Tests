METHOD_0 ( ) { final org . kie . workbench . common . IDENT_0 . client . IDENT_1 . types . common . IDENT_2 IDENT_3 = mock ( org . kie . workbench . common . IDENT_0 . client . IDENT_1 . types . common . IDENT_2 . class ) ; final org . kie . workbench . common . IDENT_0 . api . IDENT_4 . IDENT_5 . IDENT_6 IDENT_7 = mock ( org . kie . workbench . common . IDENT_0 . api . IDENT_4 . IDENT_5 . IDENT_6 . class ) ; when ( IDENT_3 . METHOD_1 ( ) ) . thenReturn ( "" ) ; final org . kie . workbench . common . IDENT_0 . api . IDENT_4 . IDENT_5 . IDENT_8 IDENT_9 = handler . METHOD_2 ( IDENT_3 , IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . kie . workbench . common . IDENT_0 . client . IDENT_1 . types . common . IDENT_2 , org . kie . workbench . common . IDENT_0 . api . IDENT_4 . IDENT_5 . IDENT_6 ) { final java . lang . String IDENT_10 = IDENT_3 . METHOD_1 ( ) ; if ( isEmpty ( IDENT_10 ) ) { return null ; } if ( ! ( java . util . IDENT_11 . equals ( IDENT_10 , getText ( IDENT_7 ) ) ) ) { return new org . kie . workbench . common . IDENT_0 . api . IDENT_4 . IDENT_5 . METHOD_3 ( new org . kie . workbench . common . IDENT_0 . api . property . IDENT_0 . METHOD_4 ( ) , new org . kie . workbench . common . IDENT_0 . api . property . IDENT_0 . METHOD_5 ( ) , new org . kie . workbench . common . IDENT_0 . api . property . IDENT_0 . METHOD_6 ( IDENT_10 ) , null , IDENT_3 . METHOD_7 ( ) ) ; } return IDENT_7 . METHOD_8 ( ) ; }
org . junit . Assert . assertNull ( IDENT_9 ) 