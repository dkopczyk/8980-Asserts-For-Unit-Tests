METHOD_0 ( ) { java . lang . String module = STRING_0 ; java . lang . String IDENT_0 = STRING_1 ; java . lang . String IDENT_1 = STRING_2 ; doReturn ( IDENT_1 ) . when ( IDENT_2 ) . METHOD_1 ( any ( ) , eq ( module ) ) ; org . IDENT_3 . common . services . project . model . IDENT_4 IDENT_5 = mock ( org . IDENT_3 . common . services . project . model . IDENT_4 . class ) ; doReturn ( module ) . when ( IDENT_5 ) . getName ( ) ; java . util . List < org . IDENT_3 . common . services . project . model . IDENT_4 > IDENT_6 = new java . util . ArrayList ( ) ; IDENT_6 . add ( IDENT_5 ) ; IDENT_6 . add ( IDENT_5 ) ; doReturn ( IDENT_6 ) . when ( IDENT_2 ) . METHOD_2 ( any ( ) , eq ( module ) ) ; org . IDENT_3 . common . services . project . model . IDENT_4 IDENT_7 = mock ( org . IDENT_3 . common . services . project . model . IDENT_4 . class ) ; doReturn ( IDENT_0 ) . when ( IDENT_7 ) . getName ( ) ; java . util . List < org . IDENT_3 . common . services . project . model . IDENT_4 > IDENT_8 = new java . util . ArrayList ( ) ; IDENT_8 . add ( IDENT_7 ) ; doReturn ( IDENT_8 ) . when ( IDENT_2 ) . METHOD_2 ( any ( ) , eq ( IDENT_0 ) ) ; service . METHOD_3 ( IDENT_9 , IDENT_10 ) ; verify ( IDENT_11 ) . save ( any ( ) , IDENT_12 . METHOD_4 ( ) , any ( ) ) ; final org . kie . workbench . common . IDENT_13 . IDENT_14 . model . IDENT_15 model = IDENT_12 . getValue ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { return IDENT_16 ; }
org . junit . Assert . assertEquals ( IDENT_1 , model . METHOD_5 ( ) . getName ( ) ) 