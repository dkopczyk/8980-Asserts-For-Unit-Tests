METHOD_0 ( ) { final org . kie . server . controller . api . model . spec . IDENT_0 template = mock ( org . kie . server . controller . api . model . spec . IDENT_0 . class ) ; final org . kie . server . controller . api . model . spec . IDENT_1 IDENT_2 = mock ( org . kie . server . controller . api . model . spec . IDENT_1 . class ) ; when ( template . METHOD_1 ( org . kie . workbench . common . IDENT_3 . server . management . backend . service . IDENT_4 . IDENT_5 ) ) . thenReturn ( IDENT_2 ) ; when ( template . METHOD_1 ( org . kie . workbench . common . IDENT_3 . server . management . backend . service . IDENT_4 . IDENT_6 ) ) . thenReturn ( IDENT_2 ) ; when ( template . METHOD_1 ( org . kie . workbench . common . IDENT_3 . server . management . backend . service . IDENT_4 . IDENT_7 ) ) . thenReturn ( null ) ; doReturn ( template ) . when ( IDENT_8 ) . METHOD_2 ( org . kie . workbench . common . IDENT_3 . server . management . backend . service . IDENT_4 . IDENT_9 ) ; final java . lang . String IDENT_10 = IDENT_11 . METHOD_3 ( org . kie . workbench . common . IDENT_3 . server . management . backend . service . IDENT_4 . IDENT_9 , org . kie . workbench . common . IDENT_3 . server . management . backend . service . IDENT_4 . IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , java . lang . String ) { if ( METHOD_4 ( IDENT_12 , IDENT_10 ) ) { return IDENT_10 ; } return METHOD_5 ( IDENT_12 , IDENT_10 ) ; }
org . junit . Assert . assertEquals ( IDENT_10 , org . kie . workbench . common . IDENT_3 . server . management . backend . service . IDENT_4 . IDENT_7 ) 