METHOD_0 ( ) { org . kie . workbench . common . services . backend . builder . core . IDENT_0 IDENT_1 = METHOD_1 ( org . kie . workbench . common . services . backend . builder . core . IDENT_0 . class ) ; java . net . URL url = this . getClass ( ) . getResource ( STRING_0 ) ; org . IDENT_2 . java . nio . fs . file . IDENT_3 p = new org . IDENT_2 . java . nio . fs . file . METHOD_2 ( ) ; org . IDENT_2 . java . nio . file . Path path = p . getPath ( url . METHOD_3 ( ) ) ; final org . IDENT_4 . common . services . project . model . IDENT_5 module = IDENT_6 . METHOD_4 ( org . IDENT_2 . backend . server . util . IDENT_7 . convert ( path ) ) ; final org . kie . workbench . common . services . backend . builder . core . Builder builder = new org . kie . workbench . common . services . backend . builder . core . Builder ( module , IDENT_8 , IDENT_6 , IDENT_9 , new java . util . ArrayList ( ) , IDENT_10 , IDENT_1 , METHOD_5 ( ) , IDENT_11 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( ) { org . IDENT_4 . common . services . project . builder . model . IDENT_12 results = null ; if ( ! ( METHOD_7 ( ) ) ) { results = build ( ) ; } else { results = new org . IDENT_4 . common . services . project . builder . model . METHOD_8 ( ) ; results . METHOD_9 ( org . kie . workbench . common . services . backend . builder . core . IDENT_13 . METHOD_10 ( IDENT_14 . METHOD_11 ( ) . METHOD_12 ( ) , IDENT_15 ) ) ; } if ( results . METHOD_13 ( ) . isEmpty ( ) ) { final org . kie . api . builder . IDENT_16 IDENT_17 = IDENT_14 . METHOD_14 ( ) ; final org . kie . api . builder . IDENT_18 IDENT_19 = IDENT_17 . METHOD_15 ( ) ; final org . drools . compiler . kie . builder . impl . IDENT_20 IDENT_21 = new org . drools . compiler . kie . builder . impl . METHOD_16 ( ( ( org . drools . compiler . kie . builder . impl . IDENT_22 ) ( IDENT_14 . METHOD_14 ( ) ) ) , null ) ; final org . kie . api . runtime . IDENT_23 IDENT_24 = new org . drools . compiler . kie . builder . impl . METHOD_17 ( IDENT_21 , IDENT_25 . IDENT_26 . get ( ) . METHOD_18 ( ) , IDENT_19 ) ; return IDENT_24 ; } else { return null ; } }
org . junit . Assert . assertNotNull ( builder . METHOD_6 ( ) ) 