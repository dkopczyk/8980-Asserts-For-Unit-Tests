METHOD_0 ( ) { final int index = 1 ; final org . kie . workbench . common . IDENT_0 . core . graph . content . view . IDENT_1 IDENT_2 = org . kie . workbench . common . IDENT_0 . core . graph . content . view . IDENT_1 . build ( 2 , 2 ) ; org . kie . workbench . common . IDENT_0 . core . client . command . IDENT_3 < org . kie . workbench . common . IDENT_0 . core . client . IDENT_4 . IDENT_5 > IDENT_6 = mock ( org . kie . workbench . common . IDENT_0 . core . client . command . IDENT_3 . class ) ; doReturn ( IDENT_6 ) . when ( IDENT_7 ) . METHOD_1 ( eq ( IDENT_8 ) , eq ( IDENT_2 ) , eq ( index ) ) ; IDENT_9 . init ( IDENT_10 ) ; IDENT_9 . METHOD_1 ( IDENT_8 , IDENT_2 , index ) ; org . mockito . IDENT_11 < org . kie . workbench . common . IDENT_0 . core . command . IDENT_12 > IDENT_13 = org . mockito . IDENT_11 . METHOD_2 ( org . kie . workbench . common . IDENT_0 . core . command . IDENT_12 . class ) ; verify ( IDENT_14 , times ( 1 ) ) . execute ( eq ( IDENT_10 ) , IDENT_13 . METHOD_3 ( ) ) ; org . kie . workbench . common . IDENT_0 . core . command . IDENT_12 < org . kie . workbench . common . IDENT_0 . core . client . IDENT_4 . IDENT_5 , org . kie . workbench . common . IDENT_0 . core . client . command . IDENT_15 > command = IDENT_13 . getValue ( ) ; "<AssertPlaceHolder>" ; } getValue ( ) { return IDENT_16 ; }
org . junit . Assert . assertEquals ( IDENT_6 , command ) 