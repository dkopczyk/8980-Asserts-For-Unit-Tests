METHOD_0 ( ) { org . kie . workbench . common . IDENT_0 . core . graph . Node < org . kie . workbench . common . IDENT_0 . core . graph . content . view . IDENT_1 < ? > , org . kie . workbench . common . IDENT_0 . core . graph . IDENT_2 > IDENT_3 = IDENT_4 . METHOD_1 ( 0 , INT_0 , 100 , 10 , IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( double , double , double , double , org . kie . workbench . common . IDENT_0 . core . graph . Element ) { org . kie . workbench . common . IDENT_0 . core . graph . content . view . IDENT_6 IDENT_7 ; double IDENT_8 = 0 ; double IDENT_9 = 0 ; if ( IDENT_5 != null ) { IDENT_7 = org . kie . workbench . common . IDENT_0 . core . graph . util . IDENT_10 . METHOD_2 ( IDENT_5 . METHOD_3 ( ) ) ; IDENT_8 = x + ( IDENT_7 . METHOD_4 ( ) ) ; IDENT_9 = y + ( IDENT_7 . METHOD_5 ( ) ) ; } org . kie . workbench . common . IDENT_0 . core . graph . Node < org . kie . workbench . common . IDENT_0 . core . graph . content . view . IDENT_1 < ? > , org . kie . workbench . common . IDENT_0 . core . graph . IDENT_2 > element ; org . kie . workbench . common . IDENT_0 . core . graph . content . view . IDENT_6 [ ] IDENT_11 = new org . kie . workbench . common . IDENT_0 . core . graph . content . view . IDENT_6 [ 5 ] ; IDENT_11 [ 0 ] = new org . kie . workbench . common . IDENT_0 . core . graph . content . view . METHOD_6 ( IDENT_8 , IDENT_9 ) ; IDENT_11 [ 1 ] = new org . kie . workbench . common . IDENT_0 . core . graph . content . view . METHOD_6 ( ( IDENT_8 + IDENT_12 ) , IDENT_9 ) ; IDENT_11 [ 2 ] = new org . kie . workbench . common . IDENT_0 . core . graph . content . view . METHOD_6 ( ( IDENT_8 + ( IDENT_12 / 2 ) ) , ( IDENT_9 + ( IDENT_13 / 2 ) ) ) ; IDENT_11 [ 3 ] = new org . kie . workbench . common . IDENT_0 . core . graph . content . view . METHOD_6 ( IDENT_8 , ( IDENT_9 + IDENT_13 ) ) ; IDENT_11 [ 4 ] = new org . kie . workbench . common . IDENT_0 . core . graph . content . view . METHOD_6 ( ( IDENT_8 + IDENT_12 ) , ( IDENT_9 + IDENT_13 ) ) ; for ( org . kie . workbench . common . IDENT_0 . core . graph . content . view . METHOD_6 IDENT_14 : IDENT_11 ) { element = METHOD_7 ( IDENT_14 . METHOD_4 ( ) , IDENT_14 . METHOD_5 ( ) ) ; if ( element != null ) { if ( element != IDENT_5 ) { return element ; } } } return null ; }
org . junit . Assert . assertNull ( IDENT_3 ) 