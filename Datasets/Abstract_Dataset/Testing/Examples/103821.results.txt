METHOD_0 ( ) { METHOD_1 ( ) ; when ( IDENT_0 . getProperty ( IDENT_1 , org . kie . workbench . common . IDENT_2 . core . graph . util . IDENT_3 . IDENT_4 ) ) . thenReturn ( java . util . Optional . empty ( ) ) ; when ( IDENT_5 . METHOD_2 ( ) ) . thenReturn ( IDENT_6 ) ; when ( IDENT_6 . getProperty ( IDENT_1 , org . kie . workbench . common . IDENT_2 . core . graph . util . IDENT_3 . IDENT_4 ) ) . METHOD_3 ( ( i ) -> java . util . Optional . of ( property ) ) ; final java . lang . Object field = org . kie . workbench . common . IDENT_2 . core . graph . util . IDENT_7 . METHOD_4 ( IDENT_8 , IDENT_1 , org . kie . workbench . common . IDENT_2 . core . graph . util . IDENT_3 . IDENT_4 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_0 ) . getProperty ( IDENT_1 , org . kie . workbench . common . IDENT_2 . core . graph . util . IDENT_3 . IDENT_4 ) ; verify ( IDENT_6 ) . getProperty ( IDENT_1 , org . kie . workbench . common . IDENT_2 . core . graph . util . IDENT_3 . IDENT_4 ) ; } METHOD_4 ( org . kie . workbench . common . IDENT_2 . core . api . IDENT_9 , java . lang . Object , java . lang . String ) { final int index = field . indexOf ( STRING_0 ) ; final java . lang . String IDENT_10 = ( index > ( - 1 ) ) ? field . substring ( 0 , index ) : field ; final java . lang . Object property = org . kie . workbench . common . IDENT_2 . core . graph . util . IDENT_11 . < java . util . Optional > METHOD_5 ( ( ) -> IDENT_8 . METHOD_6 ( ) . METHOD_7 ( ) . getProperty ( IDENT_1 , IDENT_10 ) , java . util . Optional . empty ( ) ) . METHOD_8 ( ( ) -> org . kie . workbench . common . IDENT_2 . core . graph . util . IDENT_11 . < java . util . Optional > METHOD_5 ( ( ) -> IDENT_8 . METHOD_6 ( ) . METHOD_2 ( ) . getProperty ( IDENT_1 , IDENT_10 ) , java . util . Optional . empty ( ) ) . METHOD_9 ( null ) ) ; return ( index > 0 ) && ( java . util . IDENT_12 . METHOD_10 ( property ) ) ? org . kie . workbench . common . IDENT_2 . core . graph . util . IDENT_7 . METHOD_4 ( IDENT_8 , property , field . substring ( ( index + 1 ) ) ) : property ; }
org . junit . Assert . assertEquals ( field , property ) 