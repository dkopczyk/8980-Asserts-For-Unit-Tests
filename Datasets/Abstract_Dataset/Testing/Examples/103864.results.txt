METHOD_0 ( ) { final double size = FLOAT_0 ; final double IDENT_0 = FLOAT_1 ; final com . IDENT_1 . IDENT_2 . shared . core . types . IDENT_3 IDENT_4 = com . IDENT_1 . IDENT_2 . shared . core . types . IDENT_3 . IDENT_5 ; final int IDENT_6 = 4 ; final int IDENT_7 = 1 ; IDENT_8 = new org . kie . workbench . common . IDENT_9 . IDENT_2 . IDENT_10 . grid . METHOD_1 ( IDENT_0 , size , IDENT_4 , IDENT_6 , IDENT_7 ) ; final java . util . Iterator < com . IDENT_1 . IDENT_2 . client . core . types . IDENT_11 > IDENT_12 = IDENT_8 . iterator ( ) ; final java . util . List < com . IDENT_1 . IDENT_2 . client . core . types . IDENT_11 > IDENT_13 = new java . util . ArrayList ( ) ; IDENT_12 . METHOD_2 ( IDENT_13 :: add ) ; "<AssertPlaceHolder>" ; IDENT_12 . next ( ) ; } hasNext ( ) { return ( ( IDENT_14 ) <= ( METHOD_3 ( ) ) ) && ( ( IDENT_15 ) <= ( METHOD_4 ( ) ) ) ; }
org . junit . Assert . assertFalse ( IDENT_12 . hasNext ( ) ) 