METHOD_0 ( ) { org . IDENT_0 . client . IDENT_1 . IDENT_2 < org . kie . IDENT_3 . project . datamodel . IDENT_4 . IDENT_5 [ ] > IDENT_6 = METHOD_1 ( new org . IDENT_0 . client . IDENT_1 . IDENT_2 < org . kie . IDENT_3 . project . datamodel . IDENT_4 . IDENT_5 [ ] > ( ) { @ org . kie . workbench . common . widgets . client . datamodel . Override public void METHOD_2 ( org . kie . IDENT_3 . project . datamodel . IDENT_4 . IDENT_5 [ ] result ) { "<AssertPlaceHolder>" ; } } ) ; IDENT_4 . METHOD_3 ( STRING_0 , METHOD_2 ) ; verify ( METHOD_2 ) . METHOD_2 ( any ( org . kie . IDENT_3 . project . datamodel . IDENT_4 . IDENT_5 [ ] . class ) ) ; } METHOD_2 ( org . kie . IDENT_3 . project . datamodel . IDENT_4 . IDENT_5 [ ] ) { org . junit . Assert . assertNotNull ( fields ) ; final java . lang . String [ ] IDENT_7 = new java . lang . String [ fields . length ] ; for ( int i = 0 ; i < ( fields . length ) ; i ++ ) { IDENT_7 [ i ] = fields [ i ] . getName ( ) ; } org . junit . Assert . assertTrue ( java . util . Arrays . asList ( IDENT_7 ) . contains ( STRING_1 ) ) ; org . junit . Assert . assertTrue ( java . util . Arrays . asList ( IDENT_7 ) . contains ( STRING_2 ) ) ; }
org . junit . Assert . assertEquals ( 1 , result . length ) 