METHOD_0 ( ) { org . IDENT_0 . core . impl . domain . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 < java . time . IDENT_5 > range = new org . IDENT_0 . core . impl . domain . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( java . time . IDENT_5 . of ( 0 ) , java . time . IDENT_5 . of ( 1 ) , 1 , java . time . IDENT_3 . IDENT_6 . IDENT_7 ) ; "<AssertPlaceHolder>" ; range . get ( 1 ) ; } METHOD_2 ( ) { org . junit . Assert . assertEquals ( INT_0 , new org . IDENT_0 . core . impl . domain . IDENT_1 . IDENT_2 . collection . METHOD_3 ( java . util . Arrays . asList ( 0 , 2 , 5 , 10 ) ) . METHOD_2 ( ) ) ; org . junit . Assert . assertEquals ( INT_1 , new org . IDENT_0 . core . impl . domain . IDENT_1 . IDENT_2 . collection . METHOD_3 ( java . util . Arrays . asList ( 100 , INT_2 , 5 , 7 , 8 ) ) . METHOD_2 ( ) ) ; org . junit . Assert . assertEquals ( INT_3 , new org . IDENT_0 . core . impl . domain . IDENT_1 . IDENT_2 . collection . METHOD_3 ( java . util . Arrays . asList ( ( - 15 ) , INT_4 , 0 ) ) . METHOD_2 ( ) ) ; org . junit . Assert . assertEquals ( INT_3 , new org . IDENT_0 . core . impl . domain . IDENT_1 . IDENT_2 . collection . METHOD_3 ( java . util . Arrays . asList ( "b" , STRING_0 , "a" ) ) . METHOD_2 ( ) ) ; org . junit . Assert . assertEquals ( 0L , new org . IDENT_0 . core . impl . domain . IDENT_1 . IDENT_2 . collection . METHOD_3 ( java . util . Collections . < java . lang . String > emptyList ( ) ) . METHOD_2 ( ) ) ; }
org . junit . Assert . assertEquals ( 1L , range . METHOD_2 ( ) ) 