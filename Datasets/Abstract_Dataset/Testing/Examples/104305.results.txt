METHOD_0 ( ) { this . IDENT_0 . METHOD_1 ( IDENT_1 . IDENT_2 ) ; com . googlecode . IDENT_3 . IDENT_4 exp = this . IDENT_0 . METHOD_2 ( ) ; java . lang . Object result = exp . execute ( ) ; "<AssertPlaceHolder>" ; } execute ( ) { int IDENT_5 = 0 ; final int size = this . IDENT_6 . size ( ) ; this . METHOD_3 ( ) ; for ( int i = 0 ; i < size ; i ++ ) { com . googlecode . IDENT_3 . IDENT_7 . token . IDENT_8 < ? > token = this . IDENT_6 . get ( i ) ; if ( ( token . getType ( ) ) == ( com . googlecode . IDENT_3 . IDENT_7 . token . IDENT_8 . IDENT_9 . IDENT_10 ) ) { final com . googlecode . IDENT_3 . IDENT_7 . token . IDENT_11 op = ( ( com . googlecode . IDENT_3 . IDENT_7 . token . IDENT_11 ) ( token ) ) ; final com . googlecode . IDENT_3 . IDENT_7 . token . IDENT_12 IDENT_13 = op . METHOD_4 ( ) ; final int IDENT_14 = IDENT_13 . METHOD_5 ( ) ; switch ( IDENT_13 ) { case IDENT_15 : case IDENT_16 : break ; default : java . util . Map < java . lang . Integer , com . googlecode . IDENT_3 . IDENT_7 . token . IDENT_17 . IDENT_18 > IDENT_19 = this . METHOD_6 ( IDENT_13 ) ; final int result = this . METHOD_7 ( i , IDENT_13 , IDENT_14 , IDENT_19 ) ; if ( result < 0 ) { this . METHOD_8 ( ) ; return IDENT_5 ; } IDENT_5 += result ; break ; } } } this . METHOD_8 ( ) ; return IDENT_5 ; }
org . junit . Assert . assertNull ( result ) 