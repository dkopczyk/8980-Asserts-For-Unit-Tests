METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final int IDENT_1 = INT_0 ; final com . IDENT_2 . IDENT_3 . cluster . IDENT_4 IDENT_5 = new com . IDENT_2 . IDENT_3 . cluster . METHOD_1 ( STRING_1 ) ; final long offset = 12 ; final com . IDENT_2 . IDENT_3 . cluster . IDENT_6 IDENT_7 = new com . IDENT_2 . IDENT_3 . cluster . METHOD_2 ( 0 , STRING_2 ) ; final byte [ ] data = com . IDENT_2 . IDENT_3 . utils . IDENT_8 . METHOD_3 ( INT_1 , new com . IDENT_2 . IDENT_3 . network . METHOD_4 ( IDENT_0 , IDENT_5 . METHOD_5 ( ) , STRING_3 . getBytes ( ) , null , 0 , 0 ) ) . array ( ) ; final com . IDENT_2 . IDENT_3 . client . consumer . IDENT_9 request = new com . IDENT_2 . IDENT_3 . client . consumer . METHOD_6 ( IDENT_7 , 0 , new com . IDENT_2 . IDENT_3 . client . consumer . METHOD_7 ( IDENT_0 , IDENT_5 , offset ) , IDENT_1 ) ; final com . IDENT_2 . IDENT_3 . client . consumer . IDENT_10 . IDENT_11 runner = this . IDENT_12 . new com . IDENT_2 . IDENT_3 . client . consumer . IDENT_10 . METHOD_8 ( ) ; org . easymock . EasyMock . expect ( this . consumer . METHOD_9 ( request , ( - 1 ) , null ) ) . andReturn ( new com . IDENT_2 . IDENT_3 . consumer . METHOD_10 ( IDENT_0 , data ) ) ; org . easymock . EasyMock . expect ( this . consumer . METHOD_11 ( IDENT_0 ) ) . andReturn ( new com . IDENT_2 . IDENT_3 . client . consumer . METHOD_12 ( ) { @ com . IDENT_2 . IDENT_3 . client . consumer . Override public void METHOD_13 ( final com . IDENT_2 . IDENT_3 . Message message ) { throw new java . lang . RuntimeException ( STRING_4 ) ; } @ com . IDENT_2 . IDENT_3 . client . consumer . Override public java . util . concurrent . IDENT_13 METHOD_14 ( ) { return null ; } } ) ; this . METHOD_15 ( IDENT_0 ) ; final com . IDENT_2 . IDENT_3 . client . consumer . METHOD_6 IDENT_14 = new com . IDENT_2 . IDENT_3 . client . consumer . METHOD_6 ( IDENT_7 , ( ( this . IDENT_15 . METHOD_16 ( ) ) / 10 ) , new com . IDENT_2 . IDENT_3 . client . consumer . METHOD_7 ( IDENT_0 , IDENT_5 , offset , INT_1 ) , IDENT_1 ) ; IDENT_14 . METHOD_17 ( ) ; org . easymock . EasyMock . replay ( this . consumer ) ; runner . METHOD_18 ( request ) ; org . easymock . EasyMock . verify ( this . consumer ) ; "<AssertPlaceHolder>" ; } METHOD_19 ( ) { return this . IDENT_16 . METHOD_20 ( ) ; }
org . junit . Assert . assertEquals ( IDENT_14 , this . IDENT_12 . METHOD_19 ( ) ) 