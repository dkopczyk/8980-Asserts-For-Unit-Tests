METHOD_0 ( ) { org . IDENT_0 . data . IDENT_1 IDENT_2 = new org . IDENT_0 . data . IDENT_1 . Builder ( ) . hash ( STRING_0 , 2 ) . build ( ) ; org . IDENT_0 . data . spi . IDENT_3 . IDENT_4 < org . apache . avro . IDENT_5 . IDENT_6 . IDENT_7 > IDENT_8 = new org . IDENT_0 . data . spi . IDENT_3 . IDENT_4 . Builder < org . apache . avro . IDENT_5 . IDENT_6 . IDENT_7 > ( ) . METHOD_1 ( STRING_1 ) . name ( STRING_2 ) . configuration ( METHOD_2 ( ) ) . METHOD_3 ( new org . IDENT_0 . data . IDENT_9 . Builder ( ) . schema ( org . IDENT_0 . data . spi . IDENT_3 . IDENT_10 ) . format ( format ) . location ( IDENT_11 ) . METHOD_4 ( METHOD_4 ) . build ( ) ) . type ( org . apache . avro . IDENT_5 . IDENT_6 . IDENT_7 . class ) . build ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( org . IDENT_0 . data . spi . IDENT_12 , boolean ) { com . google . common . base . IDENT_13 . METHOD_6 ( METHOD_3 . METHOD_7 ( ) , STRING_3 , name ) ; org . IDENT_0 . data . spi . IDENT_3 . IDENT_4 . LOG . debug ( STRING_4 , new java . lang . Object [ ] { key , IDENT_14 } ) ; org . apache . hadoop . fs . Path IDENT_15 = IDENT_16 . METHOD_8 ( METHOD_9 ( directory , key ) ) ; try { if ( ! ( IDENT_16 . exists ( IDENT_15 ) ) ) { if ( IDENT_14 ) { if ( ( IDENT_17 ) != null ) { IDENT_17 . METHOD_10 ( METHOD_1 , name , METHOD_11 ( key ) . toString ( ) ) ; } IDENT_16 . METHOD_12 ( IDENT_15 ) ; } else { return null ; } } } catch ( java . io . IOException e ) { throw new org . IDENT_0 . data . METHOD_13 ( ( STRING_5 + IDENT_15 ) , e ) ; } int IDENT_18 = key . METHOD_14 ( ) ; org . IDENT_0 . data . IDENT_1 IDENT_19 = org . IDENT_0 . data . impl . IDENT_20 . METHOD_15 ( ) . METHOD_16 ( METHOD_4 , IDENT_18 ) ; return new org . IDENT_0 . data . spi . IDENT_3 . IDENT_4 . Builder < IDENT_21 > ( ) . METHOD_1 ( METHOD_1 ) . name ( name ) . METHOD_17 ( METHOD_17 ) . uri ( uri ) . METHOD_3 ( new org . IDENT_0 . data . IDENT_9 . Builder ( METHOD_3 ) . location ( IDENT_15 ) . METHOD_4 ( IDENT_19 ) . build ( ) ) . type ( type ) . METHOD_18 ( key ) . METHOD_19 ( METHOD_19 ) . build ( ) ; }
org . junit . Assert . assertNull ( IDENT_8 . METHOD_5 ( new org . IDENT_0 . data . spi . METHOD_20 ( 1 ) , false ) ) 