METHOD_0 ( ) { com . github . IDENT_0 . IDENT_1 . core . plugin . processor . support . transform . IDENT_2 IDENT_3 = com . github . IDENT_0 . IDENT_1 . core . plugin . processor . support . transform . IDENT_4 . METHOD_1 ( ) ; com . github . IDENT_0 . IDENT_1 . core . dto . IDENT_5 IDENT_6 = new com . github . IDENT_0 . IDENT_1 . core . dto . METHOD_2 ( ) ; java . util . List < com . github . IDENT_0 . IDENT_1 . core . dto . IDENT_7 > IDENT_8 = new java . util . ArrayList ( ) ; com . github . IDENT_0 . IDENT_1 . core . dto . IDENT_7 IDENT_9 = new com . github . IDENT_0 . IDENT_1 . core . dto . METHOD_3 ( ) ; IDENT_9 . setName ( STRING_0 ) ; IDENT_8 . add ( IDENT_9 ) ; IDENT_6 . METHOD_4 ( IDENT_8 ) ; com . github . IDENT_0 . IDENT_1 . core . plugin . processor . support . transform . IDENT_10 IDENT_11 = IDENT_3 . METHOD_5 ( IDENT_6 , STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( com . github . IDENT_0 . IDENT_1 . core . dto . METHOD_2 , java . lang . String ) { java . util . Map < java . lang . String , java . lang . String > map = new java . util . HashMap ( ) ; java . lang . String IDENT_12 = "" ; java . util . List < com . github . IDENT_0 . IDENT_1 . core . dto . METHOD_3 > IDENT_13 = entry . METHOD_6 ( ) ; for ( com . github . IDENT_0 . IDENT_1 . core . dto . METHOD_3 IDENT_9 : IDENT_13 ) { boolean IDENT_14 = IDENT_9 . METHOD_7 ( ) ; java . lang . String key = IDENT_9 . getName ( ) ; java . lang . String value = IDENT_9 . getValue ( ) ; if ( value == null ) { METHOD_7 = true ; } if ( METHOD_7 ) { map . put ( key , "" ) ; } else { map . put ( key , value ) ; if ( key . equals ( IDENT_15 ) ) { IDENT_12 = value ; } } } if ( IDENT_12 . equals ( "" ) ) { com . github . IDENT_0 . IDENT_1 . core . plugin . processor . support . transform . impl . IDENT_16 . LOGGER . error ( STRING_1 , IDENT_15 , entry . METHOD_8 ( ) , entry ) ; return null ; } else { java . lang . String value ; try { value = new com . fasterxml . jackson . databind . METHOD_9 ( ) . METHOD_10 ( map ) ; } catch ( com . fasterxml . jackson . core . IDENT_17 e ) { com . github . IDENT_0 . IDENT_1 . core . plugin . processor . support . transform . impl . IDENT_16 . LOGGER . error ( STRING_2 , IDENT_15 , entry . METHOD_8 ( ) , entry ) ; return null ; } return new com . github . IDENT_0 . IDENT_1 . core . plugin . processor . support . transform . METHOD_11 ( IDENT_12 , value ) ; } }
org . junit . Assert . assertEquals ( IDENT_11 , null ) 