METHOD_0 ( ) { final java . lang . String key = STRING_0 ; java . lang . Object IDENT_0 = cache . get ( key , new java . util . concurrent . IDENT_1 < java . lang . Object > ( ) { @ com . IDENT_2 . IDENT_3 . common . cache . Override public java . lang . Object call ( ) throws com . IDENT_2 . IDENT_3 . common . cache . Exception { return new java . lang . Object ( ) ; } } ) ; java . lang . Object IDENT_4 = cache . get ( key , new java . util . concurrent . IDENT_1 < java . lang . Object > ( ) { @ com . IDENT_2 . IDENT_3 . common . cache . Override public java . lang . Object call ( ) throws com . IDENT_2 . IDENT_3 . common . cache . Exception { return new java . lang . Object ( ) ; } } ) ; "<AssertPlaceHolder>" ; } call ( ) { java . util . List < java . lang . reflect . Field > fields = com . IDENT_2 . IDENT_3 . common . IDENT_5 . METHOD_1 ( IDENT_6 . METHOD_2 ( ) . size ( ) ) ; for ( java . lang . String field : IDENT_6 . METHOD_2 ( ) ) { fields . add ( com . IDENT_2 . IDENT_3 . common . IDENT_7 . METHOD_3 ( object , field ) ) ; } return fields . toArray ( new java . lang . reflect . Field [ 0 ] ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_4 ) 