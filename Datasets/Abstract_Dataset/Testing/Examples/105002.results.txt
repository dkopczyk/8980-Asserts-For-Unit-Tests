METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . util . IDENT_2 e = IDENT_2 . IDENT_3 ; for ( int i = 0 ; i < 100 ; i ++ ) { byte [ ] bytes = new byte [ org . IDENT_0 . IDENT_1 . util . IDENT_4 . IDENT_5 . METHOD_1 ( INT_0 ) ] ; org . IDENT_0 . IDENT_1 . util . IDENT_4 . IDENT_5 . METHOD_2 ( bytes ) ; "<AssertPlaceHolder>" ; } } decode ( java . lang . String ) { java . lang . String IDENT_6 = ( ( n ) > 0 ) ? in . replace ( IDENT_7 , "" ) : in ; org . IDENT_0 . IDENT_1 . util . ByteBuffer buf = new org . IDENT_0 . IDENT_1 . util . ByteBuffer ( METHOD_3 ( IDENT_6 . length ( ) ) ) ; int IDENT_8 = 0 ; int count = 0 ; int IDENT_9 = 0 ; for ( int i = 0 ; i < ( IDENT_6 . length ( ) ) ; i ++ ) { char c = IDENT_6 . charAt ( i ) ; if ( ( METHOD_4 ( c ) ) && ( ! ( IDENT_10 ) ) ) { break ; } int v = decode ( c ) ; if ( v != ( - 1 ) ) { IDENT_9 ++ ; IDENT_8 = ( IDENT_8 << ( IDENT_11 . METHOD_5 ( ) ) ) | v ; count += IDENT_11 . METHOD_5 ( ) ; while ( count >= 8 ) { count OP_0 8 ; buf . append ( ( ( byte ) ( IDENT_8 > > > count ) ) ) ; } } } if ( ( ! ( IDENT_10 ) ) || ( ! ( IDENT_11 . METHOD_6 ( ) ) ) ) { IDENT_9 += METHOD_7 ( IDENT_6 ) ; int IDENT_12 = IDENT_11 . METHOD_8 ( ) ; org . IDENT_0 . IDENT_1 . util . IDENT_13 . METHOD_9 ( ( ( IDENT_9 OP_1 IDENT_12 ) == 0 ) ) ; } return buf . toByteArray ( ) ; }
org . junit . Assert . assertArrayEquals ( bytes , e . decode ( e . encode ( bytes ) ) ) 