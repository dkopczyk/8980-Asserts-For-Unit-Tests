METHOD_0 ( ) { METHOD_1 ( hudson . model . IDENT_0 . class ) ; METHOD_1 ( hudson . IDENT_1 . IDENT_2 . class ) ; java . util . List < hudson . IDENT_1 . IDENT_2 > IDENT_3 = java . util . Collections . emptyList ( ) ; when ( hudson . IDENT_1 . IDENT_2 . METHOD_2 ( hudson . model . IDENT_4 . class ) ) . thenReturn ( IDENT_3 ) ; hudson . model . IDENT_5 IDENT_6 = mock ( hudson . model . IDENT_5 . class ) ; hudson . model . IDENT_7 IDENT_8 = mock ( hudson . model . IDENT_7 . class ) ; when ( IDENT_6 . METHOD_3 ( ) ) . thenReturn ( IDENT_8 ) ; hudson . model . IDENT_4 IDENT_9 = new hudson . model . METHOD_4 ( "test" , IDENT_6 ) ; hudson . model . IDENT_10 . IDENT_11 IDENT_12 = org . mockito . Mockito . mock ( hudson . model . IDENT_10 . IDENT_11 . class ) ; when ( hudson . model . IDENT_0 . METHOD_5 ( eq ( IDENT_8 ) , eq ( hudson . model . IDENT_13 . class ) ) ) . thenReturn ( java . util . Arrays . asList ( ( ( hudson . model . IDENT_13 ) ( IDENT_12 ) ) ) ) ; when ( IDENT_12 . METHOD_6 ( any ( hudson . model . IDENT_7 . class ) ) ) . thenReturn ( STRING_0 ) ; IDENT_9 . METHOD_7 ( true ) ; IDENT_9 . add ( IDENT_12 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( ) { return IDENT_14 ; }
org . junit . Assert . assertEquals ( 1 , IDENT_9 . METHOD_8 ( ) . size ( ) ) 