METHOD_0 ( ) { METHOD_1 ( hudson . model . IDENT_0 . class ) ; METHOD_1 ( hudson . IDENT_1 . IDENT_2 . class ) ; java . util . List < hudson . IDENT_1 . IDENT_2 > IDENT_3 = java . util . Collections . emptyList ( ) ; when ( hudson . IDENT_1 . IDENT_2 . METHOD_2 ( hudson . model . IDENT_4 . class ) ) . thenReturn ( IDENT_3 ) ; hudson . model . IDENT_5 IDENT_6 = mock ( hudson . model . IDENT_5 . class ) ; hudson . model . IDENT_7 IDENT_8 = mock ( hudson . model . IDENT_7 . class ) ; when ( IDENT_6 . METHOD_3 ( ) ) . thenReturn ( IDENT_8 ) ; hudson . model . IDENT_4 view = new hudson . model . METHOD_4 ( "test" , IDENT_6 ) ; view . METHOD_5 ( STRING_0 ) ; hudson . model . IDENT_9 it = org . mockito . Mockito . mock ( hudson . model . IDENT_9 . class ) ; java . util . List < hudson . model . IDENT_9 > IDENT_10 = java . util . Arrays . asList ( ( ( hudson . model . IDENT_9 ) ( it ) ) ) ; when ( hudson . model . IDENT_0 . METHOD_6 ( eq ( IDENT_8 ) , eq ( hudson . model . IDENT_9 . class ) ) ) . thenReturn ( IDENT_10 ) ; when ( IDENT_8 . METHOD_7 ( ) ) . thenReturn ( IDENT_10 ) ; when ( it . METHOD_8 ( any ( hudson . model . IDENT_7 . class ) ) ) . thenReturn ( STRING_1 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ) { return IDENT_11 ; }
org . junit . Assert . assertEquals ( 1 , view . METHOD_7 ( ) . size ( ) ) 