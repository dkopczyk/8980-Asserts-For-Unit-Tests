METHOD_0 ( ) { java . util . regex . IDENT_0 p = java . util . regex . IDENT_0 . METHOD_1 ( "foo" ) ; java . util . regex . IDENT_1 m = p . matcher ( "bar" ) ; "<AssertPlaceHolder>" ; try { m . start ( ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . lang . IllegalStateException e ) { } try { m . end ( ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . lang . IllegalStateException e ) { } try { m . group ( ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . lang . IllegalStateException e ) { } try { m . start ( 1 ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . lang . IllegalStateException e ) { } try { m . end ( 1 ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . lang . IllegalStateException e ) { } try { m . group ( 1 ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . lang . IllegalStateException e ) { } try { m . METHOD_2 ( null ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( java . lang . IllegalArgumentException e ) { } } matches ( ) { return METHOD_3 ( IDENT_2 , org . IDENT_3 . IDENT_4 . java . util . regex . IDENT_5 . IDENT_6 ) ; }
org . junit . Assert . assertFalse ( m . matches ( ) ) 