METHOD_0 ( ) { METHOD_1 ( ) ; IDENT_0 . model . IDENT_1 actual = generator . METHOD_2 ( IDENT_2 , IDENT_3 , null ) ; IDENT_0 . model . IDENT_1 expected = new IDENT_0 . model . METHOD_3 ( IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 , IDENT_0 . IDENT_4 . IDENT_5 . IDENT_7 , IDENT_0 . IDENT_4 . IDENT_5 . IDENT_8 , IDENT_0 . IDENT_4 . IDENT_5 . IDENT_9 , IDENT_0 . IDENT_4 . IDENT_5 . IDENT_10 , IDENT_0 . IDENT_4 . IDENT_5 . IDENT_11 , IDENT_0 . IDENT_4 . IDENT_5 . IDENT_12 , IDENT_0 . IDENT_4 . IDENT_5 . IDENT_13 , IDENT_0 . IDENT_4 . IDENT_5 . IDENT_14 , IDENT_0 . IDENT_4 . IDENT_5 . IDENT_15 , IDENT_0 . IDENT_4 . IDENT_5 . IDENT_16 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . sql . ResultSet , IDENT_0 . IDENT_4 . IDENT_17 , java . util . Map ) { IDENT_0 . model . METHOD_3 IDENT_18 = new IDENT_0 . model . METHOD_3 ( METHOD_4 ( IDENT_2 , IDENT_0 . IDENT_4 . IDENT_17 . IDENT_19 , STRING_0 , IDENT_3 ) ) ; IDENT_18 . METHOD_5 ( METHOD_4 ( IDENT_2 , IDENT_0 . IDENT_4 . IDENT_17 . IDENT_19 , STRING_1 , IDENT_3 ) ) ; IDENT_18 . METHOD_6 ( METHOD_4 ( IDENT_2 , IDENT_0 . IDENT_4 . IDENT_17 . IDENT_19 , STRING_2 , IDENT_3 ) ) ; IDENT_18 . METHOD_7 ( METHOD_4 ( IDENT_2 , IDENT_0 . IDENT_4 . IDENT_17 . IDENT_19 , STRING_3 2 , IDENT_3 ) ) ; IDENT_18 . METHOD_8 ( METHOD_4 ( IDENT_2 , IDENT_0 . IDENT_4 . IDENT_17 . IDENT_19 , STRING_4 , IDENT_3 ) ) ; IDENT_18 . METHOD_9 ( METHOD_10 ( IDENT_2 , IDENT_0 . IDENT_4 . IDENT_17 . IDENT_19 , STRING_3 1 , IDENT_3 ) ) ; IDENT_18 . setName ( METHOD_10 ( IDENT_2 , IDENT_0 . IDENT_4 . IDENT_17 . IDENT_19 , "name" , IDENT_3 ) ) ; IDENT_18 . METHOD_11 ( METHOD_4 ( IDENT_2 , IDENT_0 . IDENT_4 . IDENT_17 . IDENT_19 , STRING_3 0 , IDENT_3 ) ) ; if ( IDENT_2 . METHOD_12 ( ) ) IDENT_18 . METHOD_11 ( null ) ; IDENT_18 . METHOD_13 ( METHOD_10 ( IDENT_2 , IDENT_0 . IDENT_4 . IDENT_17 . IDENT_19 , STRING_5 , IDENT_3 ) ) ; IDENT_18 . METHOD_14 ( METHOD_4 ( IDENT_2 , IDENT_0 . IDENT_4 . IDENT_17 . IDENT_19 , STRING_3 , IDENT_3 ) ) ; IDENT_18 . METHOD_15 ( METHOD_4 ( IDENT_2 , IDENT_0 . IDENT_4 . IDENT_17 . IDENT_19 , STRING_6 , IDENT_3 ) ) ; java . lang . String IDENT_20 = METHOD_10 ( IDENT_2 , IDENT_0 . IDENT_4 . IDENT_17 . IDENT_21 , STRING_7 , IDENT_3 ) ; if ( ( IDENT_22 != null ) && ( STRING_8 . equals ( IDENT_20 ) ) ) { IDENT_0 . IDENT_4 . IDENT_23 . IDENT_24 entry = new IDENT_0 . IDENT_4 . IDENT_23 . METHOD_16 ( METHOD_4 ( IDENT_2 , IDENT_0 . IDENT_4 . IDENT_17 . IDENT_21 , STRING_0 , IDENT_3 ) , IDENT_20 . charAt ( 0 ) , METHOD_10 ( IDENT_2 , IDENT_0 . IDENT_4 . IDENT_17 . IDENT_21 , STRING_3 1 , IDENT_3 ) , METHOD_10 ( IDENT_2 , IDENT_0 . IDENT_4 . IDENT_17 . IDENT_21 , "name" , IDENT_3 ) ) ; IDENT_22 . put ( IDENT_18 . getId ( ) , entry ) ; } return IDENT_18 ; }
org . junit . Assert . assertThat ( actual , org . hamcrest . Matchers . is ( expected ) ) 