METHOD_0 ( ) { java . util . IDENT_0 < java . lang . String > IDENT_1 = new java . util . METHOD_1 ( ) ; IDENT_1 . add ( STRING_0 ) ; IDENT_1 . add ( STRING_1 ) ; IDENT_1 . add ( STRING_2 ) ; when ( IDENT_2 . METHOD_2 ( any ( IDENT_3 . IDENT_4 . parser . IDENT_5 . class ) , METHOD_3 ( IDENT_3 . model . IDENT_6 . class ) , anyString ( ) ) ) . thenReturn ( IDENT_1 ) ; java . lang . String sql = generator . METHOD_4 ( IDENT_7 ) ; java . lang . String expected = STRING_3 + ( ( ( STRING_4 + STRING_5 ) + STRING_6 ) + STRING_7 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( IDENT_3 . IDENT_4 . parser . IDENT_5 ) { java . lang . String result = METHOD_4 ( IDENT_7 , "" ) ; return result ; }
org . junit . Assert . assertThat ( sql , org . hamcrest . CoreMatchers . is ( expected ) ) 