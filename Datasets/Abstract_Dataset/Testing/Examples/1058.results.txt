METHOD_0 ( ) { IDENT_0 . add ( STRING_0 ) ; when ( request . METHOD_1 ( IDENT_1 . IDENT_2 ) ) . thenReturn ( java . util . Collections . METHOD_2 ( IDENT_0 ) ) ; boolean result = filter . METHOD_3 ( request ) ; "<AssertPlaceHolder>" ; verify ( request ) . METHOD_1 ( IDENT_1 . IDENT_2 ) ; } METHOD_3 ( org . apache . IDENT_3 . api . IDENT_4 ) { final com . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 IDENT_9 = request . METHOD_4 ( ) . METHOD_5 ( com . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . class ) ; final org . apache . IDENT_3 . api . resource . IDENT_10 resource = request . getResource ( ) ; if ( ( org . apache . commons . lang . IDENT_11 . isEmpty ( this . IDENT_12 ) ) || ( ! ( org . apache . commons . lang . StringUtils . METHOD_6 ( request . getResource ( ) . getPath ( ) , this . IDENT_12 ) ) ) ) { return false ; } if ( this . METHOD_7 ( request ) . contains ( com . IDENT_13 . IDENT_14 . commons . IDENT_7 . IDENT_15 . impl . IDENT_16 . IDENT_17 ) ) { return false ; } if ( ( IDENT_9 . METHOD_8 ( request . getResource ( ) ) ) == null ) { return false ; } final javax . jcr . Node node = request . getResource ( ) . METHOD_5 ( javax . jcr . Node . class ) ; if ( node != null ) { try { if ( ( ( node . METHOD_9 ( IDENT_18 . IDENT_19 ) ) || ( node . METHOD_9 ( STRING_1 ) ) ) || ( IDENT_20 . IDENT_21 . equals ( node . getName ( ) ) ) ) { return false ; } } catch ( javax . jcr . IDENT_22 e ) { com . IDENT_13 . IDENT_14 . commons . IDENT_7 . IDENT_15 . impl . IDENT_16 . log . error ( ( STRING_2 + STRING_3 ) , e ) ; return false ; } } if ( org . apache . commons . collections . IDENT_23 . METHOD_10 ( this . IDENT_24 ) ) { for ( final java . util . regex . IDENT_25 pattern : this . IDENT_24 ) { final java . util . regex . IDENT_26 matcher = pattern . matcher ( resource . METHOD_11 ( ) ) ; if ( matcher . matches ( ) ) { return true ; } } return false ; } return true ; }
org . junit . Assert . assertFalse ( result ) 