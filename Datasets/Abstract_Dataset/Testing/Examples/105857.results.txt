METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; IDENT_3 . add ( STRING_0 , new org . IDENT_0 . IDENT_4 . METHOD_2 ( STRING_1 , true , new org . IDENT_0 . IDENT_5 . METHOD_3 ( new org . IDENT_0 . IDENT_6 . METHOD_4 ( STRING_2 ) ) ) ) ; IDENT_3 . add ( STRING_3 , new org . IDENT_0 . IDENT_4 . METHOD_5 ( STRING_4 , true , new org . IDENT_0 . IDENT_5 . METHOD_3 ( new org . IDENT_0 . IDENT_6 . METHOD_6 ( 1.0 ) ) ) ) ; IDENT_3 . add ( STRING_5 , new org . IDENT_0 . IDENT_4 . METHOD_7 ( STRING_6 , true , new org . IDENT_0 . IDENT_5 . METHOD_3 ( new org . IDENT_0 . IDENT_6 . METHOD_6 ( 1.0 ) ) ) ) ; IDENT_3 . execute ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( ) { for ( org . IDENT_0 . IDENT_1 . METHOD_1 . IDENT_7 model : models ) { org . IDENT_0 . IDENT_1 . METHOD_1 . logger . debug ( ( STRING_7 + ( model . METHOD_9 ( ) . METHOD_10 ( ) ) ) ) ; METHOD_11 ( model ) ; if ( ( model . METHOD_9 ( ) . METHOD_12 ( ) . METHOD_13 ( ) ) instanceof org . IDENT_0 . IDENT_6 . IDENT_8 ) { org . IDENT_0 . IDENT_1 . METHOD_1 . logger . debug ( ( ( STRING_8 + ( model . getName ( ) ) ) + STRING_9 ) ) ; } else if ( ! ( model . METHOD_9 ( ) . METHOD_14 ( ) ) ) { org . IDENT_0 . IDENT_1 . METHOD_1 . logger . debug ( ( ( STRING_8 + ( model . getName ( ) ) ) + STRING_10 ) ) ; } else { org . IDENT_0 . IDENT_1 . METHOD_1 . logger . debug ( ( ( ( STRING_8 + ( model . getName ( ) ) ) + STRING_11 ) + ( model . METHOD_9 ( ) . METHOD_15 ( ) ) ) ) ; return false ; } } org . IDENT_0 . IDENT_1 . METHOD_1 . logger . debug ( STRING_12 ) ; return true ; }
org . junit . Assert . assertTrue ( IDENT_3 . METHOD_8 ( ) ) 