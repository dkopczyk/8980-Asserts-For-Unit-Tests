METHOD_0 ( ) { com . github . IDENT_0 . IDENT_1 . IDENT_2 < java . lang . Integer > IDENT_3 = com . github . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; java . util . HashSet < java . lang . Integer > IDENT_4 = null ; for ( int i = 0 ; i < INT_0 ; i ++ ) { IDENT_4 = new java . util . HashSet < java . lang . Integer > ( ) ; for ( java . lang . Integer o : IDENT_3 ) { IDENT_4 . add ( o ) ; } "<AssertPlaceHolder>" ; java . lang . Integer o = new java . lang . Integer ( i ) ; IDENT_3 = ( ( com . github . IDENT_0 . IDENT_1 . IDENT_2 < java . lang . Integer > ) ( IDENT_3 . METHOD_2 ( o ) ) ) ; } } size ( ) { return com . github . IDENT_0 . IDENT_1 . IDENT_5 . count ( ) ; }
org . junit . Assert . assertEquals ( i , IDENT_4 . size ( ) ) 