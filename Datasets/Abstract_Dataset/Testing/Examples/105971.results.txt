METHOD_0 ( ) { try { net . sf . IDENT_0 . IDENT_1 . event . IDENT_2 . IDENT_3 < java . lang . String , net . sf . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 > IDENT_6 = new net . sf . IDENT_0 . IDENT_1 . event . IDENT_2 . METHOD_1 ( ) ; org . junit . Assert . fail ( ( STRING_0 + ( IDENT_6 . IDENT_7 ) ) ) ; } catch ( java . lang . IllegalStateException IDENT_8 ) { java . lang . String msg = STRING_1 ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( ( STRING_2 + ( e . getMessage ( ) ) ) ) ; } } getMessage ( ) { return METHOD_2 ( net . sf . IDENT_0 . IDENT_1 . parser . IDENT_9 . IDENT_10 ) ; }
org . junit . Assert . assertEquals ( msg , IDENT_8 . getMessage ( ) ) 