METHOD_0 ( ) { final java . lang . String IDENT_0 = new io . IDENT_1 . client . IDENT_2 . METHOD_1 ( ) . format ( new io . IDENT_1 . client . IDENT_2 . METHOD_2 ( new java . math . BigDecimal ( STRING_0 ) , METHOD_2 . IDENT_3 . IDENT_4 ) ) ; "<AssertPlaceHolder>" ; } format ( io . IDENT_1 . client . IDENT_2 . IDENT_5 , int ) { switch ( format ) { case IDENT_4 : return METHOD_3 ( IDENT_6 ) ; case IDENT_7 : return METHOD_4 ( IDENT_6 ) ; case IDENT_8 : return IDENT_6 == 0 ? "" : STRING_1 + IDENT_6 ; default : throw new java . lang . IllegalStateException ( ( ( ( STRING_2 + format ) + STRING_3 ) + IDENT_6 ) ) ; } }
org . junit . Assert . assertThat ( IDENT_0 , org . hamcrest . core . Is . is ( STRING_0 ) ) 