METHOD_0 ( ) { org . IDENT_0 . client . IDENT_1 pipeline = IDENT_2 . METHOD_1 ( ) ; org . IDENT_0 . client . IDENT_3 IDENT_4 = new org . IDENT_0 . client . IDENT_3 . Builder ( pipeline , ( ( STRING_0 + ( METHOD_2 ( ) ) ) + STRING_1 ) ) . METHOD_3 ( ) . build ( ) ; org . IDENT_0 . client . IDENT_5 IDENT_6 = new org . IDENT_0 . client . IDENT_5 . Builder ( pipeline ) . build ( ) ; IDENT_4 . connect ( IDENT_6 ) ; java . lang . String url = IDENT_6 . METHOD_4 ( ) ; org . IDENT_0 . client . IDENT_7 tx = pipeline . METHOD_5 ( ) ; IDENT_4 . METHOD_6 ( tx ) ; org . IDENT_0 . client . IDENT_8 < java . lang . String > IDENT_9 = IDENT_6 . METHOD_4 ( tx ) ; pipeline . METHOD_7 ( tx ) ; tx . commit ( ) ; "<AssertPlaceHolder>" ; } get ( ) { try { return future . get ( ) ; } catch ( java . lang . IDENT_10 e ) { throw new org . IDENT_0 . commons . exception . METHOD_8 ( e ) ; } catch ( java . util . concurrent . IDENT_11 e ) { if ( ( e . METHOD_9 ( ) ) instanceof org . IDENT_0 . client . internal . server . IDENT_12 ) { throw new org . IDENT_0 . client . METHOD_10 ( operation , ( ( org . IDENT_0 . client . internal . server . IDENT_12 ) ( e . METHOD_9 ( ) ) ) . METHOD_11 ( ) ) ; } else { throw new org . IDENT_0 . commons . exception . METHOD_8 ( e . METHOD_9 ( ) ) ; } } catch ( java . util . concurrent . IDENT_13 e ) { throw new org . IDENT_0 . client . METHOD_12 ( ) ; } }
org . junit . Assert . assertThat ( url , org . hamcrest . CoreMatchers . is ( IDENT_9 . get ( ) ) ) 