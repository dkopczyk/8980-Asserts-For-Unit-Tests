METHOD_0 ( ) { double [ ] IDENT_0 = new double [ ] { 1.0 , 0.0 , FLOAT_0 } ; com . github . IDENT_1 . IDENT_2 . IDENT_3 IDENT_2 = new com . github . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; java . nio . ByteBuffer buffer = java . nio . ByteBuffer . METHOD_2 ( INT_0 ) ; IDENT_2 . METHOD_3 ( buffer , IDENT_0 ) ; buffer . METHOD_4 ( ) ; com . github . IDENT_1 . IDENT_2 . METHOD_1 IDENT_4 = new com . github . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; double [ ] IDENT_5 = new double [ 3 ] ; IDENT_4 . METHOD_5 ( buffer , IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . nio . ByteBuffer , double [ ] ) { for ( int i = 0 ; i < ( IDENT_5 . length ) ; i += 2 ) { decode ( IDENT_6 , IDENT_5 , i ) ; } }
org . junit . Assert . assertThat ( IDENT_5 , org . hamcrest . CoreMatchers . is ( IDENT_0 ) ) 