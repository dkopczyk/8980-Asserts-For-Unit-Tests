METHOD_0 ( ) { when ( IDENT_0 . getType ( ) ) . thenReturn ( IDENT_1 . IDENT_2 ) ; com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 handler = IDENT_8 . METHOD_1 ( IDENT_0 , repository ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( com . IDENT_9 . IDENT_10 . repository . IDENT_11 , com . IDENT_9 . IDENT_10 . repository . IDENT_12 ) { switch ( IDENT_0 . getType ( ) ) { case IDENT_2 : return new com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_2 ( IDENT_13 , jenkins , IDENT_14 , repository , IDENT_0 , url , user ) ; case IDENT_15 : return new com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_3 ( IDENT_13 , jenkins , IDENT_14 , repository , IDENT_0 , url , user ) ; case IDENT_16 : return new com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_4 ( IDENT_13 , jenkins , IDENT_14 , repository , IDENT_0 , url , user ) ; default : return new com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_5 ( IDENT_13 , jenkins , IDENT_14 , repository , IDENT_0 , url , user , com . IDENT_3 . IDENT_4 . IDENT_5 . item . IDENT_17 . IDENT_18 . IDENT_19 ) ; } }
org . junit . Assert . assertTrue ( ( handler instanceof com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_2 ) ) 