METHOD_0 ( ) { final java . util . IDENT_0 random = new java . util . METHOD_1 ( ) ; final java . util . List < ? extends com . IDENT_1 . IDENT_2 . IDENT_3 > IDENT_4 = java . util . stream . IDENT_5 . range ( 0 , 16 ) . METHOD_2 ( ( i ) -> com . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_3 ( random ) ) . collect ( toList ( ) ) ; final com . IDENT_1 . IDENT_2 . IDENT_6 token = com . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_4 ( random , IDENT_4 . get ( 8 ) , STRING_0 ) ; final java . lang . String result = token . METHOD_5 ( IDENT_4 , validator ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . util . Collection , com . IDENT_1 . IDENT_2 . IDENT_7 ) { return validator . METHOD_5 ( keys , this ) ; }
org . junit . Assert . assertEquals ( STRING_0 , result ) 