METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 < com . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 > IDENT_5 = this . METHOD_1 ( ) ; com . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_6 IDENT_7 = new com . IDENT_0 . IDENT_1 . IDENT_3 . METHOD_2 ( ) ; com . IDENT_0 . IDENT_1 . IDENT_8 < com . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 , java . lang . Integer > IDENT_9 = new com . IDENT_0 . IDENT_1 . IDENT_8 < com . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 , java . lang . Integer > ( IDENT_5 , IDENT_7 ) ; IDENT_9 . METHOD_3 ( new com . IDENT_0 . IDENT_1 . IDENT_10 < com . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 , java . lang . Integer > ( ) { MOD_0 com . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 IDENT_11 = null ; MOD_0 com . IDENT_0 . IDENT_1 . Integer IDENT_12 = null ; @ com . IDENT_0 . IDENT_1 . Override public void update ( com . IDENT_0 . IDENT_1 . IDENT_8 < com . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 , java . lang . Integer > IDENT_9 ) { com . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 IDENT_13 = IDENT_9 . METHOD_4 ( ) ; java . lang . Integer IDENT_14 = IDENT_9 . METHOD_5 ( IDENT_13 ) ; if ( ( this . IDENT_11 ) != null ) { "<AssertPlaceHolder>" ; } this . IDENT_11 = IDENT_13 ; this . IDENT_12 = IDENT_14 ; IDENT_9 . METHOD_6 ( ) ; } } ) ; IDENT_9 . METHOD_7 ( 100 ) ; } METHOD_5 ( IDENT_15 extends com . IDENT_0 . IDENT_1 . IDENT_16 ) { return this . IDENT_17 . METHOD_8 ( IDENT_18 ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_14 . compareTo ( this . IDENT_12 ) ) <= 0 ) ) 