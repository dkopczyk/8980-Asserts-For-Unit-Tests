METHOD_0 ( ) { org . apache . hadoop . fs . Path file = new org . apache . hadoop . fs . Path ( ( ( METHOD_1 ( ) ) + STRING_0 ) ) ; org . apache . hadoop . fs . Path IDENT_0 = new org . apache . hadoop . fs . Path ( ( ( METHOD_2 ( ) ) + STRING_1 ) ) ; org . apache . hadoop . fs . IDENT_1 . METHOD_3 ( file ) ; org . apache . hadoop . fs . IDENT_1 . IDENT_2 . delete ( new org . apache . hadoop . fs . Path ( METHOD_2 ( ) ) , true ) ; try { org . apache . hadoop . fs . IDENT_1 . IDENT_2 . METHOD_4 ( file , IDENT_0 , false ) ; org . junit . Assert . fail ( STRING_2 ) ; } catch ( org . apache . hadoop . fs . IOException x ) { } "<AssertPlaceHolder>" ; org . apache . hadoop . fs . IDENT_1 . IDENT_2 . METHOD_4 ( file , IDENT_0 , true ) ; org . apache . hadoop . fs . IDENT_1 . METHOD_5 ( IDENT_0 ) ; } exists ( org . apache . hadoop . fs . IDENT_3 , org . apache . hadoop . fs . Path ) { return IDENT_2 . util ( ) . exists ( p ) ; }
org . junit . Assert . assertFalse ( exists ( org . apache . hadoop . fs . IDENT_1 . IDENT_2 , new org . apache . hadoop . fs . Path ( METHOD_2 ( ) ) ) ) 