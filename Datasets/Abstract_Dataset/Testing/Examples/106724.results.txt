METHOD_0 ( ) { java . lang . String expected = STRING_0 ; IDENT_0 . IDENT_1 . IDENT_2 . data . model . IDENT_3 IDENT_4 = ( ( IDENT_0 . IDENT_1 . IDENT_2 . data . model . IDENT_3 ) ( session . load ( IDENT_0 . IDENT_1 . IDENT_2 . data . model . IDENT_3 . class , 3 ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( ) { java . lang . StringBuilder builder = new java . lang . StringBuilder ( ) ; for ( IDENT_0 . IDENT_1 . IDENT_2 . data . model . IDENT_5 IDENT_6 : METHOD_2 ( ) ) { builder . append ( IDENT_6 . getName ( ) ) ; builder . append ( IDENT_6 . METHOD_3 ( ) ) ; } return builder . toString ( ) ; }
org . junit . Assert . assertThat ( IDENT_4 . METHOD_1 ( ) , org . hamcrest . CoreMatchers . is ( expected ) ) 