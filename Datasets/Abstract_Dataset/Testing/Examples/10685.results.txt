METHOD_0 ( ) { final java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { STRING_0 , STRING_1 } ; final java . lang . String IDENT_1 = IDENT_2 . METHOD_1 ( STRING_2 ) ; final org . apache . IDENT_3 . IDENT_4 pipeline = new org . apache . IDENT_3 . impl . IDENT_5 . METHOD_2 ( org . apache . IDENT_3 . io . text . IDENT_6 . IDENT_7 . class , IDENT_2 . METHOD_3 ( ) ) ; final org . apache . IDENT_3 . IDENT_8 < java . lang . String > IDENT_9 = pipeline . read ( new org . apache . IDENT_3 . io . text . IDENT_6 . METHOD_4 ( new org . apache . hadoop . fs . Path ( IDENT_1 ) ) ) ; final java . util . Collection < java . lang . String > IDENT_10 = IDENT_9 . METHOD_5 ( ) . getValue ( ) ; for ( int i = 0 ; i < ( IDENT_0 . length ) ; i ++ ) { "<AssertPlaceHolder>" ; } } getValue ( ) { return value ; }
org . junit . Assert . assertTrue ( IDENT_10 . contains ( IDENT_0 [ i ] ) ) 