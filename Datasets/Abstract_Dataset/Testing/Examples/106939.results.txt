METHOD_0 ( ) { com . googlecode . IDENT_0 . IDENT_1 IDENT_2 = new com . googlecode . IDENT_0 . METHOD_1 ( ) ; for ( int k = 0 ; k < ( 1 << 20 ) ; ++ k ) IDENT_2 . METHOD_2 ( INT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { int IDENT_3 = 0 ; final com . googlecode . IDENT_4 . IDENT_5 i = this . METHOD_4 ( ) ; while ( i . hasNext ( ) ) { com . googlecode . IDENT_4 . IDENT_6 IDENT_7 = i . next ( ) ; if ( IDENT_7 . METHOD_5 ( ) ) { IDENT_3 += ( com . googlecode . IDENT_4 . IDENT_8 . IDENT_9 ) * ( IDENT_7 . METHOD_6 ( ) ) ; } final int IDENT_10 = IDENT_7 . METHOD_7 ( ) ; final int IDENT_11 = i . METHOD_8 ( ) ; for ( int j = 0 ; j < IDENT_10 ; ++ j ) { IDENT_3 += java . lang . Integer . METHOD_9 ( i . buffer ( ) . METHOD_10 ( ( METHOD_8 + j ) ) ) ; } } return IDENT_3 ; }
org . junit . Assert . assertEquals ( IDENT_2 . METHOD_3 ( ) , ( 4 * ( 1 << 20 ) ) ) 