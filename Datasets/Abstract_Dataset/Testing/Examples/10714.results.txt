METHOD_0 ( ) { org . apache . IDENT_0 . IDENT_1 < java . lang . String , java . lang . String > data = org . apache . IDENT_0 . impl . IDENT_2 . IDENT_3 . METHOD_1 ( METHOD_2 ( METHOD_3 ( ) , METHOD_3 ( ) ) , "a" , STRING_0 , "a" , STRING_0 , "a" , STRING_0 , "a" , STRING_1 , "a" , STRING_1 , "a" , STRING_2 , "b" , STRING_0 , "b" , STRING_0 , "b" , STRING_2 ) ; java . util . Map < java . lang . String , java . util . Collection < org . apache . IDENT_0 . IDENT_4 < java . lang . Long , java . lang . String > > > actual = org . apache . IDENT_0 . lib . IDENT_5 . METHOD_4 ( data , 2 ) . METHOD_5 ( ) ; java . util . Map < java . lang . String , java . util . Collection < org . apache . IDENT_0 . IDENT_4 < java . lang . Long , java . lang . String > > > expected = com . google . common . collect . ImmutableMap . of ( "a" , METHOD_6 ( org . apache . IDENT_0 . IDENT_4 . of ( INT_0 , STRING_0 ) , org . apache . IDENT_0 . IDENT_4 . of ( INT_1 , STRING_1 ) ) , "b" , METHOD_6 ( org . apache . IDENT_0 . IDENT_4 . of ( INT_1 , STRING_0 ) , org . apache . IDENT_0 . IDENT_4 . of ( 1L , STRING_2 ) ) ) ; "<AssertPlaceHolder>" ; } of ( T , IDENT_6 ) { return new org . apache . IDENT_0 . IDENT_4 < T , IDENT_6 > ( first , IDENT_7 ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 