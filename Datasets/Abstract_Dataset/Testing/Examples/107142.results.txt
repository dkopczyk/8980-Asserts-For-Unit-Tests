METHOD_0 ( ) { final long IDENT_0 = INT_0 ; final com . IDENT_1 . IDENT_2 . IDENT_3 a = new com . IDENT_1 . IDENT_2 . METHOD_1 ( STRING_0 ) ; final java . lang . String res = a . encode ( IDENT_0 ) ; final long [ ] b = a . decode ( res ) ; "<AssertPlaceHolder>" ; } decode ( java . lang . String ) { if ( hash . isEmpty ( ) ) { return new long [ 0 ] ; } java . lang . String IDENT_4 = ( ( this . IDENT_5 ) + ( this . IDENT_6 ) ) + ( this . IDENT_7 ) ; for ( int i = 0 ; i < ( hash . length ( ) ) ; i ++ ) { if ( ( IDENT_4 . indexOf ( hash . charAt ( i ) ) ) == ( - 1 ) ) { return new long [ 0 ] ; } } return this . METHOD_2 ( hash , this . IDENT_5 ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , b [ 0 ] ) 