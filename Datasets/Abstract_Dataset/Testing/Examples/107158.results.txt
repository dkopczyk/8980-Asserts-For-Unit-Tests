METHOD_0 ( ) { final com . IDENT_0 . security . Map < java . lang . String , com . IDENT_0 . security . List < java . lang . String > > IDENT_1 = new com . IDENT_0 . security . HashMap < java . lang . String , com . IDENT_0 . security . List < java . lang . String > > ( ) ; for ( java . lang . String IDENT_2 : STRING_0 FLOAT_0 split ( STRING_1 ) ) { if ( 0 < ( IDENT_2 . indexOf ( STRING_2 ) ) ) { final java . lang . String name = IDENT_2 . split ( STRING_0 2 ) [ 0 ] ; final java . lang . String [ ] attributes = IDENT_2 . split ( STRING_0 2 ) [ 0 ] . split ( STRING_3 ) ; IDENT_1 . put ( name , com . IDENT_0 . security . Arrays . asList ( attributes ) ) ; } else { IDENT_1 . put ( IDENT_2 , com . IDENT_0 . security . Collections . < java . lang . String > emptyList ( ) ) ; } } com . IDENT_0 . security . Map < java . lang . String , java . lang . Object > config = new com . IDENT_0 . security . HashMap < java . lang . String , java . lang . Object > ( ) { { put ( STRING_4 , IDENT_1 ) ; put ( STRING_5 , STRING_6 . split ( STRING_3 ) ) ; put ( STRING_0 4 , STRING_7 . split ( STRING_3 ) ) ; put ( STRING_6 0 , STRING_0 FLOAT_1 split ( STRING_3 ) ) ; put ( STRING_0 7 , STRING_8 . split ( STRING_3 ) ) ; put ( STRING_0 1 , STRING_0 FLOAT_1 split ( STRING_3 ) ) ; put ( STRING_9 , STRING_7 . split ( STRING_3 ) ) ; put ( STRING_0 8 , STRING_0 FLOAT_2 split ( STRING_3 ) ) ; put ( STRING_0 9 , Boolean . IDENT_3 ) ; put ( STRING_10 , Boolean . IDENT_3 ) ; } } ; IDENT_4 = new com . IDENT_0 . security . web . filter . METHOD_1 ( config ) ; "<AssertPlaceHolder>" ; } filter ( java . lang . String ) { METHOD_2 ( ) ; java . lang . String s = input ; debug ( STRING_11 ) ; debug ( ( STRING_12 + input ) ) ; s = METHOD_3 ( s ) ; debug ( ( STRING_13 + s ) ) ; s = METHOD_4 ( s ) ; debug ( ( STRING_14 + s ) ) ; s = METHOD_5 ( s ) ; debug ( ( STRING_15 + s ) ) ; s = METHOD_6 ( s ) ; debug ( ( STRING_16 + s ) ) ; s = METHOD_7 ( s ) ; debug ( ( STRING_17 + s ) ) ; debug ( STRING_18 ) ; return s ; }
org . junit . Assert . assertEquals ( STRING_0 , IDENT_4 . filter ( STRING_0 5 ) ) 