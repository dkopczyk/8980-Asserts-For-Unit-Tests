METHOD_0 ( ) { org . IDENT_0 . business . IDENT_1 . entities . IDENT_2 IDENT_3 = org . IDENT_0 . business . IDENT_1 . entities . IDENT_2 . METHOD_1 ( ) ; org . joda . time . IDENT_4 IDENT_5 = IDENT_6 . METHOD_2 ( 10 ) ; org . joda . time . IDENT_4 IDENT_7 = IDENT_6 . METHOD_3 ( 5 ) ; IDENT_3 . METHOD_4 ( IDENT_5 , IDENT_7 ) ; IDENT_3 . METHOD_4 ( IDENT_5 . METHOD_2 ( 20 ) , IDENT_5 . METHOD_2 ( 10 ) ) ; IDENT_3 . METHOD_4 ( IDENT_5 . METHOD_2 ( 10 ) , IDENT_5 ) ; org . joda . time . IDENT_4 IDENT_8 = IDENT_5 . METHOD_2 ( 20 ) ; while ( IDENT_8 . METHOD_5 ( IDENT_7 ) ) { "<AssertPlaceHolder>" ; IDENT_8 = IDENT_8 . METHOD_3 ( 1 ) ; } } isValid ( org . IDENT_9 . IDENT_10 . ui . IDENT_11 ) { org . IDENT_0 . web . common . IDENT_12 . METHOD_6 ( component ) ; org . IDENT_0 . web . common . IDENT_12 . METHOD_6 ( component . METHOD_7 ( ) ) ; }
org . junit . Assert . assertFalse ( IDENT_3 . isValid ( IDENT_8 ) ) 