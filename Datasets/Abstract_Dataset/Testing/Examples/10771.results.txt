METHOD_0 ( ) { long IDENT_0 = INT_0 ; java . util . List < java . lang . Long > IDENT_1 = new java . util . METHOD_1 ( ) ; for ( int i = 0 ; i < 10 ; i ++ ) { IDENT_1 . add ( ( IDENT_0 + ( i * INT_1 ) ) ) ; } for ( java . lang . Long t : IDENT_1 ) { try { writer . write ( t , java . util . Collections . < org . apache . kafka . common . IDENT_2 , java . lang . Long > METHOD_2 ( ) ) ; } catch ( java . io . IOException e ) { e . printStackTrace ( ) ; } } java . util . List < java . lang . Long > IDENT_3 = reader . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { return METHOD_3 ( false ) ; }
org . junit . Assert . assertThat ( IDENT_3 , org . hamcrest . core . Is . is ( IDENT_1 ) ) 