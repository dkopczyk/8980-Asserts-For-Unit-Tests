METHOD_0 ( ) { records = new org . apache . kafka . IDENT_0 . consumer . METHOD_1 ( java . util . Collections . METHOD_2 ( IDENT_1 . METHOD_3 ( ) , java . util . Collections . singletonList ( new org . apache . kafka . IDENT_0 . consumer . METHOD_4 ( STRING_0 , 0 , INT_0 , STRING_1 , "value" ) ) ) ) ; when ( consumer . METHOD_5 ( METHOD_6 ( ) ) ) . thenReturn ( records ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ) { if ( ( key ) == null ) { key = new org . apache . hadoop . io . METHOD_8 ( ) ; } key . set ( pos ) ; if ( ( value ) == null ) { value = new org . apache . hadoop . io . METHOD_9 ( ) ; } if ( ( pos ) >= ( end ) ) { key = null ; value = null ; org . apache . IDENT_2 . io . text . IDENT_3 . IDENT_4 . LOGGER . info ( STRING_2 , IDENT_5 ) ; close ( ) ; return false ; } final int IDENT_6 = IDENT_7 . METHOD_10 ( value ) ; if ( IDENT_6 == 0 ) { org . apache . IDENT_2 . io . text . IDENT_3 . IDENT_4 . LOGGER . info ( STRING_3 , IDENT_5 ) ; return false ; } pos += IDENT_6 ; ( IDENT_5 ) ++ ; return true ; }
org . junit . Assert . assertThat ( reader . METHOD_7 ( ) , org . hamcrest . core . Is . is ( false ) ) 