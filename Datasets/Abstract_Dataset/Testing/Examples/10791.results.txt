METHOD_0 ( ) { when ( consumer . METHOD_1 ( java . util . Collections . singletonList ( IDENT_0 . METHOD_2 ( ) ) ) ) . thenReturn ( java . util . Collections . < org . apache . kafka . common . IDENT_1 , java . lang . Long > METHOD_3 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { java . util . Map < org . apache . kafka . common . IDENT_1 , java . lang . Long > IDENT_2 = org . apache . IDENT_3 . kafka . IDENT_4 . METHOD_5 ( IDENT_5 , kafka . api . IDENT_6 . METHOD_6 ( ) , IDENT_7 . METHOD_7 ( ) ) ; java . lang . Long offset = IDENT_2 . get ( IDENT_7 ) ; if ( offset == null ) { org . apache . IDENT_3 . kafka . IDENT_8 . IDENT_9 . LOG . debug ( STRING_0 , IDENT_7 , kafka . api . IDENT_6 . METHOD_6 ( ) ) ; return kafka . api . IDENT_6 . METHOD_6 ( ) ; } org . apache . IDENT_3 . kafka . IDENT_8 . IDENT_9 . LOG . debug ( STRING_1 , IDENT_7 , offset ) ; return offset ; }
org . junit . Assert . assertThat ( reader . METHOD_4 ( ) , org . hamcrest . core . Is . is ( 0L ) ) 