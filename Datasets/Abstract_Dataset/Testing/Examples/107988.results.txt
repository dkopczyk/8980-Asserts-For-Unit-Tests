METHOD_0 ( ) { int size = METHOD_1 ( ) ; java . lang . String text = ( ( com . liferay . portal . kernel . test . util . IDENT_0 . METHOD_2 ( ( size - 1 ) ) ) + ( com . liferay . IDENT_1 . string . IDENT_2 . IDENT_3 ) ) + ( com . liferay . portal . kernel . test . util . IDENT_0 . METHOD_2 ( ( size - 1 ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , int ) { byte [ ] bytes = content . getBytes ( IDENT_4 . UTF_8 ) ; if ( ( bytes . length ) <= size ) { return content ; } bytes = java . util . Arrays . METHOD_4 ( bytes , size ) ; int i = size - 1 ; while ( ( ( bytes [ i ] ) & INT_0 ) != 0 ) { i OP_0 ; } if ( i < ( size - 1 ) ) { bytes = java . util . Arrays . METHOD_4 ( bytes , ( i + 1 ) ) ; } return com . liferay . IDENT_5 . IDENT_6 . IDENT_7 . google . cloud . IDENT_8 . IDENT_9 . internal . util . IDENT_10 . METHOD_5 ( new java . lang . String ( bytes , java . nio . IDENT_11 . IDENT_4 . UTF_8 ) ) ; }
org . junit . Assert . assertEquals ( text , com . liferay . IDENT_5 . IDENT_6 . IDENT_7 . google . cloud . IDENT_8 . IDENT_9 . internal . util . IDENT_10 . METHOD_3 ( ( ( text + ( com . liferay . IDENT_1 . string . IDENT_2 . IDENT_3 ) ) + ( com . liferay . portal . kernel . test . util . IDENT_0 . METHOD_2 ( ( size - 1 ) ) ) ) , ( ( text . length ( ) ) + 1 ) ) ) 