METHOD_0 ( ) { int IDENT_0 = 5 ; for ( int i = 0 ; i < IDENT_0 ; i ++ ) { com . liferay . data . engine . service . test . IDENT_1 . METHOD_1 ( IDENT_2 , IDENT_3 , IDENT_4 ) ; } java . util . List < com . liferay . data . engine . model . IDENT_5 > IDENT_6 = METHOD_2 ( IDENT_3 , 4 , 5 ) ; "<AssertPlaceHolder>" ; } toString ( ) { com . liferay . IDENT_7 . string . IDENT_8 sb = new com . liferay . IDENT_7 . string . METHOD_3 ( INT_0 ) ; sb . append ( STRING_0 1 ) ; sb . append ( IDENT_9 ) ; sb . append ( STRING_0 0 ) ; sb . append ( IDENT_10 ) ; sb . append ( STRING_1 ) ; sb . append ( IDENT_11 ) ; sb . append ( STRING_2 ) ; sb . append ( IDENT_12 ) ; sb . append ( STRING_3 ) ; sb . append ( IDENT_13 ) ; sb . append ( STRING_4 ) ; sb . append ( IDENT_14 ) ; sb . append ( STRING_5 ) ; sb . append ( IDENT_15 ) ; sb . append ( STRING_6 ) ; sb . append ( IDENT_16 ) ; sb . append ( STRING_7 ) ; sb . append ( IDENT_17 ) ; sb . append ( STRING_0 ) ; sb . append ( IDENT_18 ) ; sb . append ( STRING_8 ) ; sb . append ( size ) ; sb . append ( STRING_9 ) ; return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_6 . toString ( ) , 1 , IDENT_6 . size ( ) ) 