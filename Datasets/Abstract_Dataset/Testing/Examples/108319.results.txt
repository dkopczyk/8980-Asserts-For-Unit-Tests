METHOD_0 ( ) { com . liferay . portal . kernel . model . User user = com . liferay . portal . kernel . test . util . IDENT_0 . METHOD_1 ( IDENT_1 , IDENT_2 . IDENT_3 ) ; com . liferay . data . engine . model . IDENT_4 IDENT_5 = METHOD_2 ( IDENT_6 , IDENT_1 ) ; com . liferay . portal . kernel . security . IDENT_7 . IDENT_8 . METHOD_3 ( com . liferay . portal . kernel . security . IDENT_7 . IDENT_9 . create ( IDENT_6 ) ) ; com . liferay . portal . kernel . service . IDENT_10 IDENT_11 = com . liferay . portal . kernel . test . util . IDENT_12 . METHOD_4 ( IDENT_1 . METHOD_5 ( ) , IDENT_6 . METHOD_6 ( ) ) ; com . liferay . portal . kernel . service . IDENT_13 . METHOD_7 ( IDENT_11 ) ; try { com . liferay . data . engine . service . IDENT_14 IDENT_15 = com . liferay . data . engine . service . IDENT_16 . METHOD_8 ( com . liferay . portal . kernel . test . util . IDENT_17 . METHOD_9 ( ) , IDENT_1 . METHOD_5 ( ) , IDENT_6 . METHOD_6 ( ) , IDENT_1 . METHOD_5 ( ) , IDENT_5 . METHOD_10 ( ) , new java . lang . String [ ] { com . liferay . portal . kernel . model . IDENT_2 . IDENT_3 } ) . METHOD_11 ( ) . build ( ) ; IDENT_18 . execute ( IDENT_15 ) ; } finally { com . liferay . portal . kernel . service . IDENT_13 . METHOD_12 ( ) ; } com . liferay . data . engine . model . IDENT_4 IDENT_19 = METHOD_13 ( user , IDENT_1 , IDENT_5 . METHOD_10 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_12 ( ) { java . util . IDENT_20 < com . liferay . portal . kernel . service . IDENT_10 > IDENT_21 = com . liferay . portal . kernel . service . IDENT_13 . IDENT_22 . get ( ) ; if ( IDENT_21 . isEmpty ( ) ) { return null ; } return IDENT_21 . METHOD_14 ( ) ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_19 ) 