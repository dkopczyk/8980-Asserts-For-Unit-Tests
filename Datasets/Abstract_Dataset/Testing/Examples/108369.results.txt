METHOD_0 ( ) { com . liferay . data . engine . model . IDENT_0 IDENT_1 = com . liferay . data . engine . service . test . IDENT_2 . METHOD_1 ( IDENT_3 , IDENT_4 , IDENT_5 , IDENT_6 ) ; int IDENT_7 = INT_0 ; for ( int i = 0 ; i < IDENT_7 ; i ++ ) { com . liferay . data . engine . service . test . IDENT_2 . METHOD_2 ( IDENT_3 , IDENT_4 , IDENT_1 , IDENT_6 ) ; } java . util . List < com . liferay . data . engine . model . IDENT_8 > IDENT_9 = METHOD_3 ( IDENT_1 . METHOD_4 ( ) , null , null ) ; "<AssertPlaceHolder>" ; } toString ( ) { com . liferay . IDENT_10 . string . IDENT_11 sb = new com . liferay . IDENT_10 . string . METHOD_5 ( INT_1 ) ; sb . append ( STRING_0 1 ) ; sb . append ( IDENT_12 ) ; sb . append ( STRING_0 0 ) ; sb . append ( IDENT_13 ) ; sb . append ( STRING_1 ) ; sb . append ( IDENT_14 ) ; sb . append ( STRING_2 ) ; sb . append ( IDENT_15 ) ; sb . append ( STRING_3 ) ; sb . append ( IDENT_16 ) ; sb . append ( STRING_4 ) ; sb . append ( IDENT_17 ) ; sb . append ( STRING_5 ) ; sb . append ( IDENT_18 ) ; sb . append ( STRING_6 ) ; sb . append ( IDENT_19 ) ; sb . append ( STRING_7 ) ; sb . append ( IDENT_20 ) ; sb . append ( STRING_0 ) ; sb . append ( IDENT_21 ) ; sb . append ( STRING_8 ) ; sb . append ( size ) ; sb . append ( STRING_9 ) ; return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_9 . toString ( ) , INT_0 , IDENT_9 . size ( ) ) 