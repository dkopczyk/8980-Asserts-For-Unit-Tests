METHOD_0 ( ) { com . liferay . IDENT_0 . data . mapping . data . provider . IDENT_1 IDENT_2 = mock ( com . liferay . IDENT_0 . data . mapping . data . provider . IDENT_1 . class ) ; com . liferay . IDENT_0 . data . mapping . data . provider . IDENT_3 . Builder builder = IDENT_3 . Builder . METHOD_1 ( ) ; com . liferay . IDENT_0 . data . mapping . data . provider . IDENT_3 IDENT_4 = builder . build ( ) ; com . liferay . IDENT_0 . data . mapping . data . provider . IDENT_5 . Builder IDENT_6 = IDENT_5 . Builder . METHOD_1 ( ) ; com . liferay . IDENT_0 . data . mapping . data . provider . IDENT_5 IDENT_7 = IDENT_6 . METHOD_2 ( STRING_0 , "value" ) . build ( ) ; when ( IDENT_2 . METHOD_3 ( IDENT_4 ) ) . thenReturn ( IDENT_7 ) ; com . liferay . IDENT_0 . data . mapping . data . provider . internal . IDENT_8 command = new com . liferay . IDENT_0 . data . mapping . data . provider . internal . METHOD_4 ( STRING_1 , IDENT_2 , IDENT_4 , mock ( com . liferay . IDENT_0 . data . mapping . data . provider . internal . rest . IDENT_9 . class ) ) ; com . liferay . IDENT_0 . data . mapping . data . provider . IDENT_5 IDENT_10 = command . run ( ) ; java . util . Optional < java . lang . String > IDENT_11 = IDENT_10 . METHOD_5 ( STRING_0 , java . lang . String . class ) ; "<AssertPlaceHolder>" ; } get ( ) { return IDENT_12 . get ( ) ; }
org . junit . Assert . assertEquals ( "value" , IDENT_11 . get ( ) ) 