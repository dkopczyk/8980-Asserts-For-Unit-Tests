METHOD_0 ( ) { com . liferay . IDENT_0 . data . mapping . io . internal . IDENT_1 . IDENT_2 IDENT_3 = new com . liferay . IDENT_0 . data . mapping . io . internal . IDENT_1 . METHOD_1 ( ) ; IDENT_3 . IDENT_4 = IDENT_5 ; com . liferay . IDENT_0 . data . mapping . IDENT_6 . field . type . IDENT_7 IDENT_8 = mock ( com . liferay . IDENT_0 . data . mapping . IDENT_6 . field . type . IDENT_7 . class ) ; com . liferay . IDENT_0 . data . mapping . model . IDENT_9 IDENT_10 = new com . liferay . IDENT_0 . data . mapping . model . METHOD_2 ( STRING_0 , STRING_1 ) ; java . util . Map < java . lang . String , java . util . List < com . liferay . IDENT_0 . data . mapping . storage . IDENT_11 > > IDENT_12 = new java . util . HashMap ( ) ; java . util . List < com . liferay . IDENT_0 . data . mapping . storage . IDENT_11 > IDENT_13 = new java . util . ArrayList ( ) ; com . liferay . IDENT_0 . data . mapping . storage . IDENT_11 IDENT_14 = com . liferay . IDENT_0 . data . mapping . test . util . IDENT_15 . METHOD_3 ( STRING_0 , new com . liferay . IDENT_0 . data . mapping . model . METHOD_4 ( STRING_2 ) ) ; IDENT_13 . add ( IDENT_14 ) ; IDENT_12 . put ( STRING_0 , IDENT_13 ) ; java . util . Locale IDENT_16 = new java . util . Locale ( STRING_3 , STRING_4 ) ; when ( IDENT_5 . METHOD_5 ( STRING_1 ) ) . thenReturn ( IDENT_8 ) ; when ( IDENT_8 . render ( IDENT_14 , IDENT_16 ) ) . thenReturn ( STRING_2 ) ; when ( IDENT_17 . render ( STRING_2 ) ) . thenReturn ( STRING_2 ) ; java . lang . String IDENT_18 = IDENT_3 . METHOD_6 ( IDENT_10 , IDENT_12 , IDENT_16 ) ; "<AssertPlaceHolder>" ; org . mockito . Mockito . verify ( IDENT_5 , org . mockito . Mockito . times ( 1 ) ) . METHOD_5 ( STRING_1 ) ; org . mockito . Mockito . verify ( IDENT_8 , org . mockito . Mockito . times ( 1 ) ) . render ( IDENT_14 , IDENT_16 ) ; org . mockito . Mockito . verify ( IDENT_17 , org . mockito . Mockito . times ( 1 ) ) . render ( STRING_2 ) ; } METHOD_6 ( com . liferay . IDENT_0 . data . mapping . model . METHOD_2 , java . util . Map , java . util . Locale ) { java . util . List < com . liferay . IDENT_0 . data . mapping . storage . IDENT_11 > IDENT_13 = IDENT_12 . get ( IDENT_10 . getName ( ) ) ; com . liferay . IDENT_0 . data . mapping . IDENT_6 . field . type . IDENT_7 IDENT_8 = IDENT_4 . METHOD_5 ( IDENT_10 . getType ( ) ) ; return com . liferay . portal . kernel . util . IDENT_19 . render ( IDENT_8 . render ( IDENT_13 . get ( 0 ) , IDENT_16 ) ) ; }
org . junit . Assert . assertEquals ( STRING_2 , IDENT_18 ) 