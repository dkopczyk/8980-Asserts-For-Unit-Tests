METHOD_0 ( ) { com . liferay . portal . kernel . service . IDENT_0 IDENT_1 = com . liferay . portal . kernel . test . util . IDENT_2 . METHOD_1 ( IDENT_3 . METHOD_2 ( ) , com . liferay . portal . kernel . test . util . IDENT_4 . METHOD_3 ( ) ) ; com . liferay . layout . page . template . model . IDENT_5 IDENT_6 = METHOD_4 ( IDENT_1 ) ; com . liferay . IDENT_7 . model . IDENT_8 IDENT_9 = com . liferay . IDENT_7 . service . IDENT_10 . METHOD_5 ( IDENT_3 . METHOD_2 ( ) , STRING_0 , IDENT_11 . IDENT_12 , IDENT_1 ) ; com . liferay . IDENT_7 . model . IDENT_13 IDENT_14 = com . liferay . IDENT_7 . service . IDENT_15 . METHOD_6 ( IDENT_3 . METHOD_2 ( ) , IDENT_9 . METHOD_7 ( ) , STRING_1 , IDENT_16 . IDENT_17 , IDENT_1 ) ; com . liferay . IDENT_7 . model . IDENT_13 IDENT_18 = com . liferay . IDENT_7 . service . IDENT_15 . METHOD_6 ( IDENT_3 . METHOD_2 ( ) , IDENT_9 . METHOD_7 ( ) , STRING_2 , IDENT_16 . IDENT_17 , IDENT_1 ) ; long [ ] IDENT_19 = new long [ ] { IDENT_14 . METHOD_8 ( ) , IDENT_18 . METHOD_8 ( ) } ; com . liferay . layout . page . template . service . IDENT_20 . METHOD_9 ( IDENT_6 . METHOD_10 ( ) , STRING_3 , IDENT_19 , IDENT_1 ) ; com . liferay . layout . page . template . service . IDENT_20 . METHOD_9 ( IDENT_6 . METHOD_10 ( ) , STRING_3 , null , IDENT_1 ) ; java . util . List < com . liferay . IDENT_7 . model . IDENT_21 > IDENT_22 = com . liferay . IDENT_7 . service . IDENT_23 . METHOD_11 ( IDENT_3 . METHOD_2 ( ) , com . liferay . portal . kernel . util . IDENT_24 . METHOD_12 ( com . liferay . layout . page . template . model . IDENT_5 . class . getName ( ) ) , IDENT_6 . METHOD_10 ( ) ) ; "<AssertPlaceHolder>" ; } toString ( ) { com . liferay . IDENT_25 . string . IDENT_26 sb = new com . liferay . IDENT_25 . string . METHOD_13 ( INT_0 ) ; sb . append ( STRING_4 1 ) ; sb . append ( IDENT_27 ) ; sb . append ( STRING_4 0 ) ; sb . append ( IDENT_28 ) ; sb . append ( STRING_5 ) ; sb . append ( IDENT_29 ) ; sb . append ( STRING_6 ) ; sb . append ( IDENT_30 ) ; sb . append ( STRING_7 ) ; sb . append ( IDENT_31 ) ; sb . append ( STRING_8 ) ; sb . append ( IDENT_32 ) ; sb . append ( STRING_9 ) ; sb . append ( IDENT_33 ) ; sb . append ( STRING_10 ) ; sb . append ( IDENT_34 ) ; sb . append ( STRING_11 ) ; sb . append ( IDENT_35 ) ; sb . append ( STRING_4 ) ; sb . append ( IDENT_36 ) ; sb . append ( STRING_12 ) ; sb . append ( size ) ; sb . append ( STRING_13 ) ; return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_22 . toString ( ) , 0 , IDENT_22 . size ( ) ) 