METHOD_0 ( ) { com . liferay . portal . kernel . service . IDENT_0 IDENT_1 = com . liferay . portal . kernel . test . util . IDENT_2 . METHOD_1 ( IDENT_3 . METHOD_2 ( ) , com . liferay . portal . kernel . test . util . IDENT_4 . METHOD_3 ( ) ) ; java . util . List < com . liferay . IDENT_5 . IDENT_6 . model . IDENT_7 > IDENT_8 = com . liferay . IDENT_5 . IDENT_6 . service . IDENT_9 . METHOD_4 ( IDENT_3 . METHOD_2 ( ) ) ; int IDENT_10 = IDENT_8 . size ( ) ; com . liferay . IDENT_5 . IDENT_6 . service . IDENT_9 . METHOD_5 ( com . liferay . portal . kernel . test . util . IDENT_4 . METHOD_3 ( ) , IDENT_3 . METHOD_2 ( ) , com . liferay . portal . kernel . test . util . IDENT_11 . METHOD_6 ( ) , IDENT_12 . IDENT_13 , true , IDENT_1 ) ; com . liferay . IDENT_5 . IDENT_6 . service . IDENT_9 . METHOD_5 ( com . liferay . portal . kernel . test . util . IDENT_4 . METHOD_3 ( ) , IDENT_3 . METHOD_2 ( ) , com . liferay . portal . kernel . test . util . IDENT_11 . METHOD_6 ( ) , IDENT_12 . IDENT_13 , true , IDENT_1 ) ; com . liferay . IDENT_5 . IDENT_6 . service . IDENT_9 . METHOD_5 ( com . liferay . portal . kernel . test . util . IDENT_4 . METHOD_3 ( ) , IDENT_3 . METHOD_2 ( ) , com . liferay . portal . kernel . test . util . IDENT_11 . METHOD_6 ( ) , IDENT_12 . IDENT_13 , false , IDENT_1 ) ; java . util . List < com . liferay . IDENT_5 . IDENT_6 . model . IDENT_7 > IDENT_14 = com . liferay . IDENT_5 . IDENT_6 . service . IDENT_9 . METHOD_7 ( IDENT_3 . METHOD_2 ( ) ) ; int IDENT_15 = IDENT_14 . size ( ) ; "<AssertPlaceHolder>" ; } size ( ) { if ( ( IDENT_16 ) != null ) { return IDENT_16 . size ( ) ; } return IDENT_17 . METHOD_8 ( IDENT_18 . METHOD_9 ( ) ) ; }
org . junit . Assert . assertEquals ( ( IDENT_10 + 2 ) , IDENT_15 ) 