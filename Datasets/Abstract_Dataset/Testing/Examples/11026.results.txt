METHOD_0 ( ) { org . apache . cxf . IDENT_0 . IDENT_1 service = new org . apache . cxf . IDENT_0 . METHOD_1 ( METHOD_2 ( ) , getClass ( ) . getResource ( STRING_0 ) , org . apache . cxf . IDENT_0 . IDENT_2 . IDENT_3 . IDENT_4 , null ) ; javax . xml . ws . IDENT_5 < javax . xml . transform . IDENT_6 > IDENT_7 = service . METHOD_3 ( org . apache . cxf . IDENT_0 . IDENT_2 . IDENT_3 . IDENT_8 , javax . xml . transform . IDENT_6 . class , IDENT_9 . IDENT_10 . IDENT_11 ) ; IDENT_7 . METHOD_4 ( ) . put ( IDENT_12 . IDENT_13 , org . apache . cxf . IDENT_0 . IDENT_2 . IDENT_3 . IDENT_14 ) ; d . METHOD_5 ( new org . apache . cxf . IDENT_0 . METHOD_6 ( STRING_1 ) ) ; org . w3c . dom . Document doc = org . apache . cxf . IDENT_15 . IDENT_16 . read ( getResourceAsStream ( STRING_2 ) ) ; javax . xml . transform . dom . IDENT_17 source = new javax . xml . transform . dom . METHOD_7 ( doc ) ; javax . xml . transform . IDENT_6 res = IDENT_7 . invoke ( source ) ; "<AssertPlaceHolder>" ; } invoke ( javax . xml . IDENT_18 . IDENT_19 ) { try { System . out . println ( STRING_3 4 ) ; javax . xml . IDENT_18 . IDENT_19 message = javax . xml . IDENT_18 . IDENT_20 . newInstance ( ) . METHOD_8 ( ) ; javax . xml . IDENT_18 . IDENT_21 IDENT_22 = message . METHOD_9 ( ) ; javax . xml . IDENT_18 . IDENT_23 IDENT_24 = IDENT_22 . METHOD_10 ( ) ; javax . xml . IDENT_18 . IDENT_25 body = IDENT_24 . METHOD_11 ( ) ; javax . xml . IDENT_18 . IDENT_26 IDENT_27 = body . METHOD_12 ( IDENT_24 . METHOD_13 ( STRING_3 3 , null , STRING_4 ) ) ; javax . xml . IDENT_18 . IDENT_28 name = IDENT_27 . METHOD_14 ( "name" , null , STRING_4 ) ; name . METHOD_15 ( STRING_5 ) ; javax . xml . IDENT_18 . IDENT_28 IDENT_29 = IDENT_27 . METHOD_14 ( STRING_6 , null , STRING_4 ) ; javax . xml . IDENT_18 . IDENT_28 IDENT_30 = IDENT_29 . METHOD_14 ( STRING_7 , STRING_8 , STRING_3 0 ) ; int IDENT_31 = 0 ; try ( java . io . InputStream IDENT_32 = this . getClass ( ) . getResourceAsStream ( STRING_3 5 ) ) { for ( int i = IDENT_32 . read ( ) ; i != ( - 1 ) ; i = IDENT_32 . read ( ) ) { IDENT_31 ++ ; } } int count = 50 ; byte [ ] data = new byte [ IDENT_31 * count ] ; for ( int x = 0 ; x < count ; x ++ ) { this . getClass ( ) . getResourceAsStream ( STRING_3 5 ) . read ( data , ( IDENT_31 * x ) , IDENT_31 ) ; } javax . IDENT_33 . IDENT_34 IDENT_35 = new javax . IDENT_33 . METHOD_16 ( new javax . mail . util . METHOD_17 ( data , STRING_9 ) ) ; javax . xml . IDENT_18 . IDENT_36 IDENT_37 = message . METHOD_18 ( IDENT_35 ) ; IDENT_37 . METHOD_19 ( STRING_10 ) ; message . METHOD_20 ( IDENT_37 ) ; System . out . println ( ( ( ( STRING_3 + ( IDENT_37 . METHOD_21 ( ) ) ) + STRING_3 1 ) + ( IDENT_37 . METHOD_22 ( ) ) ) ) ; IDENT_30 . METHOD_23 ( IDENT_24 . METHOD_13 ( STRING_11 ) , ( STRING_3 2 + ( IDENT_37 . METHOD_21 ( ) ) ) ) ; return message ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; } return null ; }
org . junit . Assert . assertNotNull ( res ) 