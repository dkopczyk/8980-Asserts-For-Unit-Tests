METHOD_0 ( ) { try ( com . liferay . osgi . service . IDENT_0 . collections . map . IDENT_1 < java . lang . String , com . liferay . osgi . service . IDENT_0 . collections . internal . map . IDENT_2 > IDENT_3 = com . liferay . osgi . service . IDENT_0 . collections . map . IDENT_4 . METHOD_1 ( IDENT_5 , com . liferay . osgi . service . IDENT_0 . collections . internal . map . IDENT_6 . class , STRING_0 , ( IDENT_7 , IDENT_8 ) -> { IDENT_8 . METHOD_2 ( ( ( java . lang . String ) ( IDENT_7 . getProperty ( STRING_1 ) ) ) ) ; IDENT_8 . METHOD_2 ( ( ( java . lang . String ) ( IDENT_7 . getProperty ( STRING_1 ) ) ) ) ; } , new org . osgi . util . IDENT_0 . IDENT_9 < com . liferay . osgi . service . IDENT_0 . collections . internal . map . IDENT_6 , com . liferay . osgi . service . IDENT_0 . collections . internal . map . IDENT_2 > ( ) { @ com . liferay . osgi . service . IDENT_0 . collections . map . test . Override public com . liferay . osgi . service . IDENT_0 . collections . internal . map . IDENT_2 METHOD_3 ( org . osgi . framework . IDENT_10 < com . liferay . osgi . service . IDENT_0 . collections . internal . map . IDENT_6 > IDENT_7 ) { return null ; } @ com . liferay . osgi . service . IDENT_0 . collections . map . test . Override public void METHOD_4 ( org . osgi . framework . IDENT_10 < com . liferay . osgi . service . IDENT_0 . collections . internal . map . IDENT_6 > IDENT_7 , com . liferay . osgi . service . IDENT_0 . collections . internal . map . IDENT_2 IDENT_11 ) { } @ com . liferay . osgi . service . IDENT_0 . collections . map . test . Override public void METHOD_5 ( org . osgi . framework . IDENT_10 < com . liferay . osgi . service . IDENT_0 . collections . internal . map . IDENT_6 > IDENT_7 , com . liferay . osgi . service . IDENT_0 . collections . internal . map . IDENT_2 IDENT_11 ) { } } ) ) { com . liferay . osgi . service . IDENT_0 . collections . internal . map . IDENT_6 IDENT_12 = new com . liferay . osgi . service . IDENT_0 . collections . internal . map . METHOD_6 ( "1" ) ; org . osgi . framework . IDENT_13 < com . liferay . osgi . service . IDENT_0 . collections . internal . map . METHOD_6 > IDENT_14 = METHOD_7 ( IDENT_12 , STRING_2 ) ; "<AssertPlaceHolder>" ; IDENT_14 . METHOD_8 ( ) ; } } containsKey ( com . liferay . IDENT_15 . media . content . IDENT_16 . IDENT_17 ) { return IDENT_18 . containsKey ( IDENT_19 ) ; }
org . junit . Assert . assertFalse ( IDENT_3 . containsKey ( STRING_2 ) ) 