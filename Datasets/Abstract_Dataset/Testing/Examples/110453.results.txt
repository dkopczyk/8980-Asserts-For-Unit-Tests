METHOD_0 ( ) { com . liferay . registry . IDENT_0 registry = com . liferay . registry . IDENT_1 . METHOD_1 ( ) ; com . liferay . registry . IDENT_2 . IDENT_3 IDENT_4 = new com . liferay . registry . IDENT_2 . METHOD_2 ( ) ; final java . util . concurrent . atomic . IDENT_5 IDENT_6 = new java . util . concurrent . atomic . METHOD_3 ( false ) ; IDENT_4 . METHOD_4 ( new com . liferay . registry . IDENT_2 . METHOD_5 ( ) { @ com . liferay . registry . IDENT_2 . Override public void METHOD_6 ( ) { IDENT_6 . set ( true ) ; } @ com . liferay . registry . IDENT_2 . Override public void METHOD_7 ( ) { } } ) ; com . liferay . registry . IDENT_7 filter = registry . METHOD_8 ( ( ( STRING_0 + ( com . liferay . registry . internal . IDENT_8 . class . getName ( ) ) ) + STRING_1 ) ) ; IDENT_4 . METHOD_9 ( new java . lang . Class < ? > [ ] { com . liferay . registry . internal . IDENT_9 . class } , new com . liferay . registry . IDENT_7 [ ] { filter } ) ; registry . METHOD_10 ( com . liferay . registry . internal . IDENT_8 . class , new com . liferay . registry . internal . METHOD_11 ( ) ) ; registry . METHOD_10 ( com . liferay . registry . internal . IDENT_9 . class , new com . liferay . registry . internal . METHOD_12 ( new com . liferay . registry . internal . METHOD_11 ( ) ) ) ; java . lang . Thread . sleep ( 100 ) ; "<AssertPlaceHolder>" ; } get ( ) { return IDENT_10 . get ( ) ; }
org . junit . Assert . assertTrue ( IDENT_6 . get ( ) ) 