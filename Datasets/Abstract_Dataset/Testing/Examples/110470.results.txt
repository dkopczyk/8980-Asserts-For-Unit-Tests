METHOD_0 ( ) { java . util . Properties IDENT_0 = com . liferay . project . IDENT_1 . internal . util . IDENT_2 . METHOD_1 ( ) ; java . util . Set < java . lang . String > IDENT_3 = IDENT_0 . METHOD_2 ( ) ; java . util . Iterator < java . lang . String > IDENT_4 = IDENT_3 . iterator ( ) ; java . lang . String IDENT_5 = IDENT_4 . next ( ) ; java . io . File IDENT_6 = com . liferay . project . IDENT_1 . internal . util . IDENT_2 . METHOD_3 ( IDENT_5 ) ; java . nio . file . Path IDENT_7 = IDENT_6 . METHOD_4 ( ) ; java . io . File IDENT_8 = IDENT_9 . METHOD_5 ( ) ; java . nio . file . Path IDENT_10 = IDENT_8 . METHOD_4 ( ) ; java . nio . file . IDENT_11 . METHOD_6 ( IDENT_7 , IDENT_10 . resolve ( STRING_0 ) ) ; java . util . List < java . io . File > IDENT_12 = new java . util . ArrayList ( ) ; IDENT_12 . add ( IDENT_8 ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_13 = com . liferay . project . IDENT_1 . IDENT_14 . METHOD_7 ( IDENT_12 ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_15 = com . liferay . project . IDENT_1 . IDENT_14 . METHOD_7 ( ) ; "<AssertPlaceHolder>" ; } size ( ) { if ( ( IDENT_16 ) != null ) { return IDENT_16 . size ( ) ; } return IDENT_17 . METHOD_8 ( IDENT_18 . METHOD_9 ( ) ) ; }
org . junit . Assert . assertEquals ( IDENT_13 . size ( ) , ( ( IDENT_15 . size ( ) ) + 1 ) ) 