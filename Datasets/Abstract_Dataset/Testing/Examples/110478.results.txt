METHOD_0 ( ) { java . io . File IDENT_0 = IDENT_1 . METHOD_1 ( STRING_0 8 ) ; com . liferay . IDENT_2 . builder . util . IDENT_3 . METHOD_2 ( IDENT_0 , STRING_1 2 , STRING_0 5 , STRING_2 , STRING_3 , STRING_0 6 , STRING_1 0 , STRING_4 , STRING_5 , STRING_6 , STRING_0 1 , STRING_1 3 , STRING_0 , STRING_0 9 , STRING_7 , STRING_1 4 , STRING_1 1 , STRING_1 , STRING_0 4 , STRING_0 3 , STRING_8 , STRING_1 5 , STRING_0 2 , STRING_9 ) ; java . lang . String [ ] IDENT_4 = com . liferay . IDENT_2 . builder . internal . util . IDENT_5 . METHOD_3 ( IDENT_0 . toString ( ) , new java . lang . String [ ] { STRING_0 0 } , com . liferay . IDENT_2 . builder . internal . util . IDENT_6 . IDENT_7 ) ; if ( ( java . io . File . IDENT_8 ) != STRING_10 ) { for ( int i = 0 ; i < ( IDENT_4 . length ) ; i ++ ) { java . lang . String IDENT_9 = IDENT_4 [ i ] ; IDENT_4 [ i ] = IDENT_9 . replace ( File . IDENT_8 , STRING_10 ) ; } } java . util . Arrays . METHOD_4 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . util . Collection ) { java . util . List < java . lang . String > list = new java . util . ArrayList ( collection ) ; java . util . Collections . METHOD_4 ( list ) ; return list . toString ( ) ; }
org . junit . Assert . assertArrayEquals ( new java . lang . String [ ] { STRING_0 4 , STRING_0 3 , STRING_1 5 , STRING_0 7 } , IDENT_4 ) 