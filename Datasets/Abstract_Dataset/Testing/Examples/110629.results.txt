METHOD_0 ( ) { com . liferay . portal . kernel . IDENT_0 . IDENT_1 IDENT_2 = com . liferay . portal . kernel . IDENT_0 . IDENT_3 . create ( new org . springframework . mock . web . METHOD_1 ( ) , IDENT_4 . IDENT_5 , 0 , IDENT_6 . IDENT_7 ) ; IDENT_2 . METHOD_2 ( STRING_0 , IDENT_4 . IDENT_8 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( com . liferay . portal . kernel . IDENT_0 . IDENT_1 ) { for ( com . liferay . portal . kernel . security . auth . IDENT_9 IDENT_10 : com . liferay . portal . kernel . security . auth . IDENT_11 . IDENT_12 ) { if ( IDENT_10 . METHOD_3 ( IDENT_2 ) ) { return true ; } } return false ; }
org . junit . Assert . assertTrue ( com . liferay . portal . kernel . security . auth . IDENT_11 . METHOD_3 ( IDENT_2 ) ) 