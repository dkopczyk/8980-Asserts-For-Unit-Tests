METHOD_0 ( ) { policy = new org . apache . cxf . IDENT_0 . http . configuration . METHOD_1 ( ) ; address = org . apache . cxf . transport . IDENT_1 . IDENT_2 . METHOD_2 ( STRING_0 ) ; IDENT_3 = org . apache . cxf . IDENT_4 . METHOD_3 ( true ) ; IDENT_5 = new org . apache . cxf . transport . http . METHOD_4 ( ) ; org . apache . cxf . service . model . IDENT_6 IDENT_7 = new org . apache . cxf . service . model . METHOD_5 ( ) ; IDENT_7 . setName ( new javax . xml . IDENT_8 . METHOD_6 ( STRING_1 , STRING_2 ) ) ; IDENT_9 = new org . apache . cxf . service . model . METHOD_7 ( IDENT_7 , "" ) ; IDENT_9 . setName ( new javax . xml . IDENT_8 . METHOD_6 ( STRING_1 , STRING_3 ) ) ; IDENT_9 . METHOD_8 ( policy ) ; engine = org . easymock . EasyMock . METHOD_9 ( org . apache . cxf . transport . IDENT_1 . IDENT_10 . class ) ; org . easymock . EasyMock . replay ( ) ; IDENT_9 . METHOD_10 ( ( ( org . apache . cxf . transport . IDENT_1 . IDENT_2 . IDENT_11 ) + STRING_0 ) ) ; org . apache . cxf . transport . IDENT_1 . IDENT_12 IDENT_13 = new org . apache . cxf . transport . IDENT_1 . IDENT_2 . METHOD_11 ( IDENT_3 , IDENT_5 . METHOD_12 ( ) , IDENT_9 , null , engine ) ; "<AssertPlaceHolder>" ; } METHOD_13 ( ) { return server ; }
org . junit . Assert . assertEquals ( policy , IDENT_13 . METHOD_13 ( ) ) 