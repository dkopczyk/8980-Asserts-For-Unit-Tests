METHOD_0 ( ) { req . METHOD_1 ( ) ; org . easymock . EasyMock . METHOD_2 ( ) . andReturn ( null ) ; registry . METHOD_3 ( "" , true ) ; org . easymock . EasyMock . METHOD_2 ( ) . andReturn ( null ) . METHOD_4 ( ) ; org . apache . cxf . transport . http . IDENT_0 IDENT_1 = org . easymock . EasyMock . METHOD_5 ( org . apache . cxf . transport . http . IDENT_0 . class ) ; registry . METHOD_6 ( "" ) ; org . easymock . EasyMock . METHOD_2 ( ) . andReturn ( IDENT_1 ) . METHOD_4 ( ) ; IDENT_1 . METHOD_7 ( ) ; org . easymock . EasyMock . METHOD_2 ( ) . andReturn ( null ) . METHOD_8 ( ) ; IDENT_1 . METHOD_9 ( ) ; org . easymock . EasyMock . METHOD_2 ( ) . andReturn ( org . easymock . EasyMock . METHOD_5 ( org . apache . cxf . transport . IDENT_2 . class ) ) . METHOD_4 ( ) ; METHOD_10 ( ) ; org . easymock . EasyMock . replay ( req , registry , IDENT_3 , IDENT_1 ) ; org . apache . cxf . transport . servlet . IDENT_4 . IDENT_5 IDENT_6 = new org . apache . cxf . transport . servlet . IDENT_4 . METHOD_11 ( registry , IDENT_3 ) ; IDENT_6 . METHOD_12 ( true ) ; IDENT_6 . invoke ( req , res ) ; "<AssertPlaceHolder>" ; } METHOD_13 ( ) { return METHOD_13 ; }
org . junit . Assert . assertTrue ( IDENT_6 . METHOD_13 ( ) ) 