METHOD_0 ( ) { java . util . List < com . liferay . IDENT_0 . data . mapping . kernel . IDENT_1 > IDENT_2 = com . liferay . IDENT_0 . data . mapping . kernel . IDENT_3 . METHOD_1 ( IDENT_4 . METHOD_2 ( ) , IDENT_5 ) ; int IDENT_6 = IDENT_2 . size ( ) ; METHOD_3 ( ) ; IDENT_2 = com . liferay . IDENT_0 . data . mapping . kernel . IDENT_3 . METHOD_1 ( IDENT_4 . METHOD_2 ( ) , IDENT_5 ) ; "<AssertPlaceHolder>" ; } toString ( ) { com . liferay . IDENT_7 . string . IDENT_8 sb = new com . liferay . IDENT_7 . string . METHOD_4 ( INT_0 ) ; sb . append ( STRING_0 1 ) ; sb . append ( IDENT_9 ) ; sb . append ( STRING_0 0 ) ; sb . append ( IDENT_10 ) ; sb . append ( STRING_1 ) ; sb . append ( IDENT_11 ) ; sb . append ( STRING_2 ) ; sb . append ( IDENT_12 ) ; sb . append ( STRING_3 ) ; sb . append ( IDENT_13 ) ; sb . append ( STRING_4 ) ; sb . append ( IDENT_14 ) ; sb . append ( STRING_5 ) ; sb . append ( IDENT_15 ) ; sb . append ( STRING_6 ) ; sb . append ( IDENT_16 ) ; sb . append ( STRING_7 ) ; sb . append ( IDENT_17 ) ; sb . append ( STRING_0 ) ; sb . append ( IDENT_18 ) ; sb . append ( STRING_8 ) ; sb . append ( size ) ; sb . append ( STRING_9 ) ; return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_2 . toString ( ) , ( IDENT_6 + 1 ) , IDENT_2 . size ( ) ) 