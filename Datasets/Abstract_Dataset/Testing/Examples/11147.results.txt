METHOD_0 ( ) { org . apache . cxf . message . Message msg = control . METHOD_1 ( org . apache . cxf . message . Message . class ) ; org . apache . cxf . ws . IDENT_0 . IDENT_1 IDENT_2 = control . METHOD_1 ( org . apache . cxf . ws . IDENT_0 . IDENT_1 . class ) ; org . easymock . EasyMock . expect ( msg . get ( IDENT_3 . IDENT_4 ) ) . andReturn ( IDENT_2 ) ; control . replay ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . apache . cxf . message . Message , boolean ) { if ( IDENT_5 ) { return ( ( org . apache . cxf . ws . IDENT_0 . IDENT_1 ) ( message . get ( org . apache . cxf . ws . IDENT_0 . IDENT_6 . METHOD_3 ( true ) ) ) ) ; } org . apache . cxf . message . Message m = null ; if ( org . apache . cxf . message . IDENT_7 . METHOD_4 ( message ) ) { m = message . METHOD_5 ( ) . METHOD_6 ( ) ; if ( null == m ) { m = message . METHOD_5 ( ) . METHOD_7 ( ) ; } } else { m = message ; } if ( null != m ) { return ( ( org . apache . cxf . ws . IDENT_0 . IDENT_1 ) ( m . get ( org . apache . cxf . ws . IDENT_0 . IDENT_6 . METHOD_3 ( false ) ) ) ) ; } return null ; }
org . junit . Assert . assertSame ( IDENT_2 , org . apache . cxf . ws . IDENT_0 . IDENT_6 . METHOD_2 ( msg , true ) ) 