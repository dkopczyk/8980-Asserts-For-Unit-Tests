METHOD_0 ( ) { org . apache . cxf . IDENT_0 IDENT_1 = new org . apache . cxf . IDENT_1 . IDENT_2 . METHOD_1 ( ) . METHOD_2 ( STRING_0 , false ) ; manager = IDENT_1 . METHOD_3 ( org . apache . cxf . ws . IDENT_3 . IDENT_4 . class ) ; org . apache . cxf . IDENT_5 . IDENT_6 e = control . METHOD_4 ( org . apache . cxf . IDENT_5 . IDENT_6 . class ) ; org . apache . cxf . ws . IDENT_3 . IDENT_7 IDENT_8 = control . METHOD_4 ( org . apache . cxf . ws . IDENT_3 . IDENT_7 . class ) ; manager . METHOD_5 ( ) . put ( e , IDENT_8 ) ; manager . METHOD_6 ( ) ; IDENT_8 . METHOD_7 ( ) ; org . easymock . EasyMock . METHOD_8 ( ) ; "<AssertPlaceHolder>" ; class IDENT_9 extends java . util . IDENT_10 { public void run ( ) { } } control . replay ( ) ; IDENT_1 . METHOD_7 ( true ) ; try { manager . METHOD_6 ( ) . METHOD_9 ( new METHOD_10 ( ) , INT_0 ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( java . lang . IllegalStateException ex ) { } control . verify ( ) ; } METHOD_7 ( ) { org . apache . cxf . IDENT_11 . simple . IDENT_12 . IDENT_1 . METHOD_7 ( true ) ; }
org . junit . Assert . assertNotNull ( manager ) 