METHOD_0 ( ) { com . liferay . portal . kernel . model . IDENT_0 IDENT_1 = METHOD_1 ( 1 , METHOD_2 ( 0 , 1 , INT_0 ) , STRING_0 ) ; com . liferay . portal . kernel . model . IDENT_0 IDENT_2 = METHOD_1 ( 2 , METHOD_2 ( 0 , 2 , INT_0 ) , STRING_0 ) ; java . util . List < com . liferay . portal . kernel . model . IDENT_0 > IDENT_3 = new java . util . ArrayList ( ) ; IDENT_3 . add ( IDENT_1 ) ; IDENT_3 . add ( IDENT_2 ) ; java . util . List < com . liferay . portal . kernel . model . IDENT_0 > IDENT_4 = new java . util . ArrayList ( ) ; IDENT_4 . add ( IDENT_2 ) ; IDENT_4 . add ( IDENT_1 ) ; com . liferay . portal . kernel . util . IDENT_5 < com . liferay . portal . kernel . model . IDENT_0 > IDENT_6 = com . liferay . portal . kernel . util . IDENT_7 . create ( IDENT_8 . IDENT_9 , STRING_1 , true ) ; java . util . Collections . METHOD_3 ( IDENT_4 , IDENT_6 ) ; "<AssertPlaceHolder>" ; } toString ( ) { com . liferay . IDENT_10 . string . IDENT_11 sb = new com . liferay . IDENT_10 . string . METHOD_4 ( INT_1 ) ; sb . append ( STRING_2 1 ) ; sb . append ( IDENT_12 ) ; sb . append ( STRING_2 0 ) ; sb . append ( IDENT_13 ) ; sb . append ( STRING_3 ) ; sb . append ( IDENT_14 ) ; sb . append ( STRING_4 ) ; sb . append ( IDENT_15 ) ; sb . append ( STRING_5 ) ; sb . append ( IDENT_16 ) ; sb . append ( STRING_6 ) ; sb . append ( IDENT_17 ) ; sb . append ( STRING_7 ) ; sb . append ( IDENT_18 ) ; sb . append ( STRING_8 ) ; sb . append ( IDENT_19 ) ; sb . append ( STRING_9 ) ; sb . append ( IDENT_20 ) ; sb . append ( STRING_2 ) ; sb . append ( IDENT_21 ) ; sb . append ( STRING_10 ) ; sb . append ( size ) ; sb . append ( STRING_11 ) ; return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_3 . toString ( ) , IDENT_4 . toString ( ) ) 