METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; com . liferay . portal . kernel . IDENT_1 . spi . IDENT_2 IDENT_3 = new com . liferay . portal . kernel . IDENT_1 . spi . METHOD_1 ( IDENT_0 ) ; com . liferay . portal . kernel . IDENT_1 . IDENT_4 . IDENT_5 . METHOD_2 ( IDENT_3 ) ; IDENT_6 . METHOD_3 ( false ) ; IDENT_6 . METHOD_4 ( IDENT_0 ) ; java . IDENT_7 . server . IDENT_8 . METHOD_5 ( IDENT_6 , 0 ) ; com . liferay . portal . kernel . IDENT_1 . IDENT_4 . IDENT_5 . METHOD_6 ( IDENT_6 ) ; com . liferay . portal . kernel . IDENT_1 . spi . remote . IDENT_9 . IDENT_10 IDENT_11 = IDENT_6 . new com . liferay . portal . kernel . IDENT_1 . spi . remote . IDENT_9 . METHOD_7 ( ) ; try ( com . liferay . portal . kernel . test . IDENT_12 IDENT_13 = com . liferay . portal . kernel . test . IDENT_14 . METHOD_8 ( com . liferay . portal . kernel . IDENT_1 . spi . remote . IDENT_9 . class . getName ( ) , IDENT_15 . IDENT_16 ) ) { IDENT_11 . run ( ) ; java . util . List < java . util . logging . IDENT_17 > IDENT_18 = IDENT_13 . METHOD_9 ( ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( ) ; } toString ( ) { com . liferay . IDENT_19 . string . IDENT_20 sb = new com . liferay . IDENT_19 . string . METHOD_11 ( INT_0 ) ; sb . append ( STRING_1 1 ) ; sb . append ( IDENT_21 ) ; sb . append ( STRING_1 0 ) ; sb . append ( IDENT_22 ) ; sb . append ( STRING_2 ) ; sb . append ( IDENT_23 ) ; sb . append ( STRING_3 ) ; sb . append ( IDENT_24 ) ; sb . append ( STRING_4 ) ; sb . append ( IDENT_25 ) ; sb . append ( STRING_5 ) ; sb . append ( IDENT_26 ) ; sb . append ( STRING_6 ) ; sb . append ( IDENT_27 ) ; sb . append ( STRING_7 ) ; sb . append ( IDENT_28 ) ; sb . append ( STRING_8 ) ; sb . append ( IDENT_29 ) ; sb . append ( STRING_1 ) ; sb . append ( IDENT_30 ) ; sb . append ( STRING_9 ) ; sb . append ( size ) ; sb . append ( STRING_10 ) ; return sb . toString ( ) ; }
org . junit . Assert . assertTrue ( IDENT_18 . toString ( ) , IDENT_18 . isEmpty ( ) ) 