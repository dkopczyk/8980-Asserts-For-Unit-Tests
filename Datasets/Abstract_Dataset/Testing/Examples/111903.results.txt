METHOD_0 ( ) { com . liferay . IDENT_0 . process . IDENT_1 . Builder builder = new com . liferay . IDENT_0 . process . IDENT_1 . Builder ( ) ; builder . METHOD_1 ( com . liferay . IDENT_0 . process . IDENT_2 . IDENT_3 . METHOD_2 ( com . liferay . IDENT_0 . process . IDENT_2 . IDENT_3 . IDENT_4 ) ) ; char [ ] IDENT_5 = new char [ ( 10 * INT_0 ) * INT_0 ] ; IDENT_5 [ 0 ] = com . liferay . IDENT_0 . string . IDENT_6 . IDENT_7 ; for ( int i = 1 ; i < ( IDENT_5 . length ) ; i ++ ) { IDENT_5 [ i ] = ( ( char ) ( STRING_0 + ( i OP_0 INT_1 ) ) ) ; } java . lang . String IDENT_8 = new java . lang . String ( IDENT_5 ) ; builder . METHOD_3 ( IDENT_8 ) ; com . liferay . IDENT_0 . process . IDENT_9 < java . lang . String > IDENT_10 = IDENT_11 . execute ( builder . build ( ) , com . liferay . IDENT_0 . process . IDENT_2 . IDENT_3 . IDENT_12 . IDENT_13 ) ; java . util . concurrent . IDENT_14 < java . lang . String > future = IDENT_10 . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } get ( ) { return IDENT_15 . get ( ) ; }
org . junit . Assert . assertEquals ( IDENT_8 , future . get ( ) ) 