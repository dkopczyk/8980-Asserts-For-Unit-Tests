METHOD_0 ( ) { ch . puzzle . itc . mobiliar . business . IDENT_0 . entity . IDENT_1 IDENT_2 = METHOD_1 ( ) ; ch . puzzle . itc . mobiliar . business . IDENT_0 . entity . IDENT_1 IDENT_3 = METHOD_2 ( IDENT_2 ) ; ch . puzzle . itc . mobiliar . business . IDENT_0 . entity . IDENT_4 resource = METHOD_3 ( STRING_0 , 1000 , IDENT_3 , IDENT_5 ) ; when ( IDENT_6 . METHOD_4 ( resource . getId ( ) ) ) . thenReturn ( resource ) ; ch . puzzle . itc . mobiliar . business . function . control . List < ch . puzzle . itc . mobiliar . business . function . entity . IDENT_7 > IDENT_8 = IDENT_9 . METHOD_5 ( IDENT_3 , IDENT_10 . getName ( ) ) ; "<AssertPlaceHolder>" ; } contains ( java . lang . String ) { ch . puzzle . itc . mobiliar . common . util . IDENT_11 [ ] values = ch . puzzle . itc . mobiliar . common . util . IDENT_11 . values ( ) ; for ( ch . puzzle . itc . mobiliar . common . util . IDENT_11 value : values ) { if ( value . name ( ) . equals ( name ) ) { return true ; } } return false ; }
org . junit . Assert . assertTrue ( IDENT_8 . contains ( IDENT_5 ) ) 