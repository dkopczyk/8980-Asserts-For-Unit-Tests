METHOD_0 ( ) { IDENT_0 = org . mockito . Mockito . mock ( ch . puzzle . itc . mobiliar . business . generator . control . IDENT_1 . class ) ; org . mockito . Mockito . when ( IDENT_0 . METHOD_1 ( ) ) . thenReturn ( Boolean . IDENT_2 ) ; IDENT_3 = org . mockito . Mockito . mock ( ch . puzzle . itc . mobiliar . business . generator . control . IDENT_1 . class ) ; org . mockito . Mockito . when ( IDENT_3 . METHOD_1 ( ) ) . thenReturn ( Boolean . IDENT_4 ) ; java . util . List < ch . puzzle . itc . mobiliar . business . generator . control . IDENT_1 > IDENT_5 = new java . util . ArrayList < ch . puzzle . itc . mobiliar . business . generator . control . IDENT_1 > ( ) ; IDENT_5 . add ( IDENT_0 ) ; IDENT_5 . add ( IDENT_3 ) ; result . METHOD_2 ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { for ( ch . puzzle . itc . mobiliar . business . generator . control . IDENT_1 result : IDENT_6 ) { if ( ! ( result . METHOD_1 ( ) ) ) { return true ; } } return false ; }
org . junit . Assert . assertTrue ( result . METHOD_3 ( ) ) 