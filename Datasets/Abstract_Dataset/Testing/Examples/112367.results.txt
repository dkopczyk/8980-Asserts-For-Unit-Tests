METHOD_0 ( ) { ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . List < ch . puzzle . itc . mobiliar . business . IDENT_1 . entity . IDENT_2 > resources = new ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . ArrayList ( ) ; resources . add ( IDENT_3 ) ; resources . add ( IDENT_4 ) ; resources . add ( IDENT_5 ) ; resources . add ( IDENT_6 ) ; ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . Calendar IDENT_7 = new ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . METHOD_1 ( ) ; IDENT_7 . set ( INT_0 , Calendar . IDENT_8 , 1 ) ; ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . Date IDENT_9 = new ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . Date ( IDENT_7 . METHOD_2 ( ) ) ; ch . puzzle . itc . mobiliar . business . IDENT_1 . entity . IDENT_2 IDENT_10 = service . METHOD_3 ( resources , IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . List , ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . Date ) { if ( ( resources == null ) || ( IDENT_9 == null ) ) { return null ; } ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . List < ch . puzzle . itc . mobiliar . business . IDENT_1 . entity . IDENT_2 > IDENT_11 = new ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . ArrayList ( resources ) ; ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . Collections . METHOD_4 ( IDENT_11 , IDENT_12 ) ; ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . IDENT_13 < ch . puzzle . itc . mobiliar . business . IDENT_14 . entity . IDENT_15 > IDENT_16 = new ch . puzzle . itc . mobiliar . business . generator . control . IDENT_0 . METHOD_5 ( ) ; for ( ch . puzzle . itc . mobiliar . business . IDENT_1 . entity . IDENT_2 IDENT_17 : IDENT_11 ) { IDENT_16 . add ( IDENT_17 . METHOD_6 ( ) ) ; } ch . puzzle . itc . mobiliar . business . IDENT_14 . entity . IDENT_15 IDENT_18 = METHOD_7 ( IDENT_16 , IDENT_9 ) ; if ( IDENT_18 != null ) { for ( ch . puzzle . itc . mobiliar . business . IDENT_1 . entity . IDENT_2 IDENT_17 : IDENT_11 ) { if ( IDENT_18 . equals ( IDENT_17 . METHOD_6 ( ) ) ) { return IDENT_17 ; } } } return null ; }
org . junit . Assert . assertEquals ( IDENT_3 , IDENT_10 ) 