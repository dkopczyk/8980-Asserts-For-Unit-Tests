METHOD_0 ( ) { ch . puzzle . itc . mobiliar . business . IDENT_0 . entity . IDENT_1 IDENT_2 = new ch . puzzle . itc . mobiliar . business . integration . entity . util . METHOD_1 ( ) . name ( STRING_0 ) . build ( ) ; ch . puzzle . itc . mobiliar . business . IDENT_0 . entity . IDENT_3 resource = new ch . puzzle . itc . mobiliar . IDENT_4 . METHOD_2 ( ) . METHOD_3 ( IDENT_2 ) . METHOD_4 ( STRING_1 ) . build ( ) ; ch . puzzle . itc . mobiliar . business . property . entity . IDENT_5 IDENT_6 = new ch . puzzle . itc . mobiliar . business . property . entity . METHOD_5 ( ) ; IDENT_6 . METHOD_6 ( resource ) ; ch . puzzle . itc . mobiliar . business . template . entity . IDENT_7 IDENT_8 = METHOD_7 ( STRING_2 ) ; ch . puzzle . itc . mobiliar . business . property . entity . IDENT_9 model = new ch . puzzle . itc . mobiliar . business . property . entity . METHOD_8 ( ) ; model . METHOD_9 ( IDENT_6 ) ; IDENT_6 . METHOD_10 ( model ) ; java . lang . String result = METHOD_11 ( IDENT_8 , IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_11 ( ch . puzzle . itc . mobiliar . business . template . entity . IDENT_7 , java . lang . Object ) { ch . puzzle . itc . mobiliar . business . generator . control . IDENT_10 handler = new ch . puzzle . itc . mobiliar . business . generator . control . METHOD_12 ( ) ; IDENT_11 . template . Configuration IDENT_12 = ch . puzzle . itc . mobiliar . business . generator . control . IDENT_13 . IDENT_14 . IDENT_15 . METHOD_13 ( handler ) ; IDENT_11 . cache . IDENT_16 loader = new IDENT_11 . cache . METHOD_14 ( ) ; loader . METHOD_15 ( template . getName ( ) , template . METHOD_16 ( ) ) ; IDENT_12 . METHOD_17 ( loader ) ; java . lang . String result = null ; java . io . IDENT_17 IDENT_18 = new java . io . StringWriter ( ) ; IDENT_11 . template . IDENT_19 IDENT_20 = IDENT_12 . METHOD_18 ( template . getName ( ) ) ; IDENT_20 . process ( model , IDENT_18 ) ; IDENT_18 . METHOD_19 ( ) ; result = IDENT_18 . toString ( ) ; IDENT_12 . METHOD_20 ( ) ; return result ; }
org . junit . Assert . assertEquals ( STRING_0 , result ) 