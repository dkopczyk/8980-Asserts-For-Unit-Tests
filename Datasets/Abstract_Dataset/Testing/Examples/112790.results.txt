METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . repository . hibernate . IDENT_2 . logger . info ( IDENT_3 . IDENT_4 ) ; org . IDENT_0 . IDENT_1 . core . domain . entities . IDENT_5 d = new org . IDENT_0 . IDENT_1 . core . domain . entities . METHOD_1 ( user , "name" , STRING_0 , document ) ; IDENT_6 . create ( d ) ; java . util . Calendar IDENT_7 = java . util . Calendar . getInstance ( ) ; IDENT_7 . add ( IDENT_8 . IDENT_9 , ( - 1 ) ) ; java . util . Calendar IDENT_10 = java . util . Calendar . getInstance ( ) ; IDENT_10 . add ( IDENT_8 . IDENT_9 , ( + 7 ) ) ; java . util . Map < java . lang . String , java . lang . Long > IDENT_11 = IDENT_6 . METHOD_2 ( IDENT_12 , IDENT_7 , IDENT_10 ) ; "<AssertPlaceHolder>" ; IDENT_6 . delete ( d ) ; org . IDENT_0 . IDENT_1 . repository . hibernate . IDENT_2 . logger . debug ( IDENT_3 . IDENT_13 ) ; } METHOD_2 ( org . IDENT_0 . IDENT_1 . core . domain . entities . IDENT_14 , java . util . Calendar , java . util . Calendar ) { java . util . Map < java . lang . String , java . lang . Long > results = com . google . common . collect . IDENT_15 . METHOD_3 ( ) ; org . hibernate . IDENT_16 . IDENT_17 IDENT_18 = org . hibernate . IDENT_16 . IDENT_19 . METHOD_4 ( ) . add ( org . hibernate . IDENT_16 . IDENT_19 . METHOD_5 ( STRING_1 ) ) . add ( org . hibernate . IDENT_16 . IDENT_19 . METHOD_6 ( ) ) ; org . hibernate . IDENT_16 . IDENT_20 IDENT_21 = org . hibernate . IDENT_16 . IDENT_20 . METHOD_7 ( METHOD_8 ( ) ) . METHOD_9 ( STRING_2 , STRING_2 ) . METHOD_10 ( IDENT_18 ) . add ( org . hibernate . IDENT_16 . IDENT_22 . eq ( STRING_3 , domain ) ) . add ( org . hibernate . IDENT_16 . IDENT_22 . METHOD_11 ( STRING_4 , IDENT_10 ) ) . add ( org . hibernate . IDENT_16 . IDENT_22 . METHOD_12 ( STRING_4 , IDENT_7 ) ) ; @ org . IDENT_0 . IDENT_1 . core . repository . hibernate . METHOD_13 ( STRING_5 ) java . util . List < java . lang . Object [ ] > list = METHOD_14 ( IDENT_21 ) ; for ( java . lang . Object [ ] element : list ) { results . put ( ( ( java . lang . String ) ( element [ 0 ] ) ) , ( ( java . lang . Long ) ( element [ 1 ] ) ) ) ; } return results ; }
org . junit . Assert . assertEquals ( 1 , IDENT_11 . entrySet ( ) . size ( ) ) 