METHOD_0 ( ) { final java . lang . String input = STRING_0 + ( ( ( ( ( ( "\n" + STRING_1 ) + STRING_2 ) + "\n" ) + STRING_3 ) + STRING_4 ) + STRING_5 ) ; final java . lang . String expected = "\n" + ( STRING_6 + STRING_7 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { final java . lang . StringBuffer IDENT_0 = new java . lang . StringBuffer ( INT_0 ) ; final java . lang . StringBuffer IDENT_1 = new java . lang . StringBuffer ( IDENT_2 . length ( ) ) ; com . IDENT_3 . plugin . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_2 ( IDENT_2 , IDENT_0 , IDENT_1 ) ; final java . util . Map < java . lang . String , java . lang . String > IDENT_7 = com . IDENT_3 . plugin . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_3 ( IDENT_0 . toString ( ) ) ; return com . IDENT_3 . plugin . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_1 ( IDENT_7 , IDENT_1 . toString ( ) ) ; }
org . junit . Assert . assertEquals ( expected , com . IDENT_3 . plugin . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_1 ( input ) ) 