METHOD_0 ( ) { java . util . Set < java . lang . Integer > set = new java . util . HashSet ( java . util . Arrays . asList ( INT_0 , INT_1 , INT_2 , 12 , 3 , INT_3 , INT_4 , INT_5 ) ) ; java . lang . Class < ? > IDENT_0 = java . util . Set . class ; java . lang . Object result = ch . IDENT_1 . IDENT_2 . utils . IDENT_3 . METHOD_1 ( IDENT_0 , set ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . Class , java . util . Set ) { if ( IDENT_0 . METHOD_2 ( ) ) { @ ch . IDENT_1 . IDENT_2 . utils . METHOD_3 ( STRING_0 ) java . lang . Class < T [ ] > IDENT_4 = ( ( java . lang . Class < T [ ] > ) ( IDENT_0 ) ) ; return java . util . Arrays . METHOD_4 ( result . toArray ( ) , result . size ( ) , IDENT_4 ) ; } else if ( IDENT_0 . METHOD_5 ( java . util . Set . class ) ) { return result ; } else if ( IDENT_0 . METHOD_5 ( java . util . List . class ) ) { return new java . util . ArrayList ( result ) ; } throw new ch . IDENT_1 . IDENT_2 . exceptions . METHOD_6 ( ( ( ( STRING_1 + IDENT_0 ) + STRING_2 ) + STRING_3 ) ) ; }
org . junit . Assert . assertThat ( ( result == set ) , org . hamcrest . Matchers . equalTo ( true ) ) 