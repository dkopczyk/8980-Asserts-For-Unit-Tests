METHOD_0 ( ) { org . IDENT_0 . server . domain . IDENT_1 IDENT_2 = new org . IDENT_0 . server . domain . METHOD_1 ( ) ; org . IDENT_0 . server . persistence . IDENT_3 . cache . IDENT_4 . IDENT_5 cache = new org . IDENT_0 . server . persistence . IDENT_3 . cache . IDENT_4 . METHOD_2 ( ) ; cache . set ( IDENT_6 . IDENT_7 , IDENT_2 ) ; org . IDENT_0 . server . persistence . IDENT_3 . cache . IDENT_8 IDENT_9 = new org . IDENT_0 . server . persistence . IDENT_3 . cache . METHOD_3 ( ) ; IDENT_9 . METHOD_4 ( cache ) ; "<AssertPlaceHolder>" ; } execute ( java . util . List ) { java . util . List < java . lang . Long > IDENT_10 = new java . util . ArrayList < java . lang . Long > ( ) ; java . util . List < java . lang . Long > IDENT_11 = new java . util . ArrayList < java . lang . Long > ( ) ; java . lang . Long id ; for ( org . IDENT_0 . server . domain . dto . IDENT_12 IDENT_13 : IDENT_14 ) { id = IDENT_13 . METHOD_5 ( ) ; switch ( IDENT_13 . METHOD_6 ( ) ) { case IDENT_15 : if ( ! ( IDENT_10 . contains ( id ) ) ) { IDENT_10 . add ( id ) ; } break ; case IDENT_16 : if ( ! ( IDENT_11 . contains ( id ) ) ) { IDENT_11 . add ( id ) ; } break ; default : break ; } } java . util . List < org . IDENT_0 . server . search . IDENT_17 . IDENT_18 > IDENT_19 = IDENT_20 . execute ( IDENT_10 ) ; java . util . List < org . IDENT_0 . server . search . IDENT_17 . IDENT_21 > IDENT_22 = IDENT_23 . execute ( IDENT_11 ) ; java . util . Map < java . lang . String , org . IDENT_0 . server . search . IDENT_17 . IDENT_18 > IDENT_24 = new java . util . HashMap < java . lang . String , org . IDENT_0 . server . search . IDENT_17 . IDENT_18 > ( ) ; java . util . Map < java . lang . String , org . IDENT_0 . server . search . IDENT_17 . IDENT_21 > IDENT_25 = new java . util . HashMap < java . lang . String , org . IDENT_0 . server . search . IDENT_17 . IDENT_21 > ( ) ; for ( org . IDENT_0 . server . search . IDENT_17 . IDENT_18 person : IDENT_19 ) { IDENT_24 . put ( person . METHOD_7 ( ) , person ) ; } for ( org . IDENT_0 . server . search . IDENT_17 . IDENT_21 IDENT_26 : IDENT_22 ) { IDENT_25 . put ( IDENT_26 . METHOD_8 ( ) , IDENT_26 ) ; } org . IDENT_0 . server . search . IDENT_17 . IDENT_18 IDENT_27 ; org . IDENT_0 . server . search . IDENT_17 . IDENT_21 IDENT_28 ; for ( org . IDENT_0 . server . domain . dto . IDENT_12 IDENT_13 : IDENT_14 ) { if ( ( IDENT_13 . METHOD_6 ( ) ) == ( org . IDENT_0 . server . domain . IDENT_29 . IDENT_15 ) ) { IDENT_27 = IDENT_24 . get ( IDENT_13 . METHOD_9 ( ) ) ; if ( IDENT_27 != null ) { IDENT_13 . METHOD_10 ( IDENT_27 . METHOD_11 ( ) ) ; IDENT_13 . METHOD_12 ( IDENT_27 . METHOD_13 ( ) ) ; } } else if ( ( IDENT_13 . METHOD_6 ( ) ) == ( org . IDENT_0 . server . domain . IDENT_29 . IDENT_16 ) ) { IDENT_28 = IDENT_25 . get ( IDENT_13 . METHOD_9 ( ) ) ; if ( IDENT_28 != null ) { IDENT_13 . METHOD_10 ( IDENT_28 . METHOD_11 ( ) ) ; IDENT_13 . METHOD_12 ( IDENT_28 . METHOD_13 ( ) ) ; } } } return IDENT_14 ; }
org . junit . Assert . assertSame ( IDENT_2 , IDENT_9 . execute ( null ) ) 