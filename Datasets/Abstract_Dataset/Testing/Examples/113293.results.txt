METHOD_0 ( ) { IDENT_0 = new org . IDENT_1 . server . persistence . IDENT_2 . cache . IDENT_3 < java . lang . Integer , java . lang . String > ( STRING_0 ) ; IDENT_0 . METHOD_1 ( cache ) ; java . lang . String result = IDENT_0 . execute ( org . IDENT_1 . server . persistence . IDENT_2 . cache . IDENT_4 . IDENT_5 ) ; "<AssertPlaceHolder>" ; } execute ( java . util . List ) { java . util . List < java . lang . Long > IDENT_6 = new java . util . ArrayList < java . lang . Long > ( ) ; java . util . List < java . lang . Long > IDENT_7 = new java . util . ArrayList < java . lang . Long > ( ) ; java . lang . Long id ; for ( org . IDENT_1 . server . domain . dto . IDENT_8 IDENT_9 : IDENT_10 ) { id = IDENT_9 . METHOD_2 ( ) ; switch ( IDENT_9 . METHOD_3 ( ) ) { case IDENT_11 : if ( ! ( IDENT_6 . contains ( id ) ) ) { IDENT_6 . add ( id ) ; } break ; case IDENT_12 : if ( ! ( IDENT_7 . contains ( id ) ) ) { IDENT_7 . add ( id ) ; } break ; default : break ; } } java . util . List < org . IDENT_1 . server . search . IDENT_13 . IDENT_14 > IDENT_15 = IDENT_16 . execute ( IDENT_6 ) ; java . util . List < org . IDENT_1 . server . search . IDENT_13 . IDENT_17 > IDENT_18 = IDENT_19 . execute ( IDENT_7 ) ; java . util . Map < java . lang . String , org . IDENT_1 . server . search . IDENT_13 . IDENT_14 > IDENT_20 = new java . util . HashMap < java . lang . String , org . IDENT_1 . server . search . IDENT_13 . IDENT_14 > ( ) ; java . util . Map < java . lang . String , org . IDENT_1 . server . search . IDENT_13 . IDENT_17 > IDENT_21 = new java . util . HashMap < java . lang . String , org . IDENT_1 . server . search . IDENT_13 . IDENT_17 > ( ) ; for ( org . IDENT_1 . server . search . IDENT_13 . IDENT_14 person : IDENT_15 ) { IDENT_20 . put ( person . METHOD_4 ( ) , person ) ; } for ( org . IDENT_1 . server . search . IDENT_13 . IDENT_17 IDENT_22 : IDENT_18 ) { IDENT_21 . put ( IDENT_22 . METHOD_5 ( ) , IDENT_22 ) ; } org . IDENT_1 . server . search . IDENT_13 . IDENT_14 IDENT_23 ; org . IDENT_1 . server . search . IDENT_13 . IDENT_17 IDENT_24 ; for ( org . IDENT_1 . server . domain . dto . IDENT_8 IDENT_9 : IDENT_10 ) { if ( ( IDENT_9 . METHOD_3 ( ) ) == ( org . IDENT_1 . server . domain . IDENT_25 . IDENT_11 ) ) { IDENT_23 = IDENT_20 . get ( IDENT_9 . METHOD_6 ( ) ) ; if ( IDENT_23 != null ) { IDENT_9 . METHOD_7 ( IDENT_23 . METHOD_8 ( ) ) ; IDENT_9 . METHOD_9 ( IDENT_23 . METHOD_10 ( ) ) ; } } else if ( ( IDENT_9 . METHOD_3 ( ) ) == ( org . IDENT_1 . server . domain . IDENT_25 . IDENT_12 ) ) { IDENT_24 = IDENT_21 . get ( IDENT_9 . METHOD_6 ( ) ) ; if ( IDENT_24 != null ) { IDENT_9 . METHOD_7 ( IDENT_24 . METHOD_8 ( ) ) ; IDENT_9 . METHOD_9 ( IDENT_24 . METHOD_10 ( ) ) ; } } } return IDENT_10 ; }
org . junit . Assert . assertNull ( result ) 