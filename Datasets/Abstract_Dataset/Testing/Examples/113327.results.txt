METHOD_0 ( ) { byte [ ] result = IDENT_0 . execute ( INT_0 ) ; byte [ ] expected = STRING_0 . getBytes ( ) ; "<AssertPlaceHolder>" ; } execute ( java . util . List ) { java . util . List < java . lang . Long > IDENT_1 = new java . util . ArrayList < java . lang . Long > ( ) ; java . util . List < java . lang . Long > IDENT_2 = new java . util . ArrayList < java . lang . Long > ( ) ; java . lang . Long id ; for ( org . IDENT_3 . server . domain . dto . IDENT_4 IDENT_5 : IDENT_6 ) { id = IDENT_5 . METHOD_1 ( ) ; switch ( IDENT_5 . METHOD_2 ( ) ) { case IDENT_7 : if ( ! ( IDENT_1 . contains ( id ) ) ) { IDENT_1 . add ( id ) ; } break ; case IDENT_8 : if ( ! ( IDENT_2 . contains ( id ) ) ) { IDENT_2 . add ( id ) ; } break ; default : break ; } } java . util . List < org . IDENT_3 . server . search . IDENT_9 . IDENT_10 > IDENT_11 = IDENT_12 . execute ( IDENT_1 ) ; java . util . List < org . IDENT_3 . server . search . IDENT_9 . IDENT_13 > IDENT_14 = IDENT_15 . execute ( IDENT_2 ) ; java . util . Map < java . lang . String , org . IDENT_3 . server . search . IDENT_9 . IDENT_10 > IDENT_16 = new java . util . HashMap < java . lang . String , org . IDENT_3 . server . search . IDENT_9 . IDENT_10 > ( ) ; java . util . Map < java . lang . String , org . IDENT_3 . server . search . IDENT_9 . IDENT_13 > IDENT_17 = new java . util . HashMap < java . lang . String , org . IDENT_3 . server . search . IDENT_9 . IDENT_13 > ( ) ; for ( org . IDENT_3 . server . search . IDENT_9 . IDENT_10 person : IDENT_11 ) { IDENT_16 . put ( person . METHOD_3 ( ) , person ) ; } for ( org . IDENT_3 . server . search . IDENT_9 . IDENT_13 IDENT_18 : IDENT_14 ) { IDENT_17 . put ( IDENT_18 . METHOD_4 ( ) , IDENT_18 ) ; } org . IDENT_3 . server . search . IDENT_9 . IDENT_10 IDENT_19 ; org . IDENT_3 . server . search . IDENT_9 . IDENT_13 IDENT_20 ; for ( org . IDENT_3 . server . domain . dto . IDENT_4 IDENT_5 : IDENT_6 ) { if ( ( IDENT_5 . METHOD_2 ( ) ) == ( org . IDENT_3 . server . domain . IDENT_21 . IDENT_7 ) ) { IDENT_19 = IDENT_16 . get ( IDENT_5 . METHOD_5 ( ) ) ; if ( IDENT_19 != null ) { IDENT_5 . METHOD_6 ( IDENT_19 . METHOD_7 ( ) ) ; IDENT_5 . METHOD_8 ( IDENT_19 . METHOD_9 ( ) ) ; } } else if ( ( IDENT_5 . METHOD_2 ( ) ) == ( org . IDENT_3 . server . domain . IDENT_21 . IDENT_8 ) ) { IDENT_20 = IDENT_17 . get ( IDENT_5 . METHOD_5 ( ) ) ; if ( IDENT_20 != null ) { IDENT_5 . METHOD_6 ( IDENT_20 . METHOD_7 ( ) ) ; IDENT_5 . METHOD_8 ( IDENT_20 . METHOD_9 ( ) ) ; } } } return IDENT_6 ; }
org . junit . Assert . assertArrayEquals ( expected , result ) 