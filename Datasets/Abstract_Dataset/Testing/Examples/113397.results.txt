METHOD_0 ( ) { org . IDENT_0 . server . service . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_0 . server . service . IDENT_1 . METHOD_1 ( STRING_0 , STRING_1 ) ; "<AssertPlaceHolder>" ; } transform ( java . util . List ) { java . util . List < java . lang . String > IDENT_4 = new java . util . ArrayList < java . lang . String > ( ) ; java . util . List < java . lang . String > IDENT_5 = new java . util . ArrayList < java . lang . String > ( ) ; for ( int i = 0 ; i < ( IDENT_6 . size ( ) ) ; i ++ ) { org . IDENT_0 . server . domain . stream . IDENT_7 . IDENT_8 type = IDENT_6 . get ( i ) . METHOD_2 ( ) ; switch ( type ) { case IDENT_9 : IDENT_4 . add ( IDENT_6 . get ( i ) . METHOD_3 ( ) ) ; break ; case IDENT_10 : IDENT_5 . add ( IDENT_6 . get ( i ) . METHOD_3 ( ) ) ; break ; default : throw new java . lang . RuntimeException ( STRING_2 ) ; } } java . util . List < org . IDENT_0 . server . search . IDENT_11 . IDENT_12 > IDENT_13 = null ; if ( ( IDENT_4 . size ( ) ) > 0 ) { IDENT_13 = IDENT_14 . execute ( IDENT_4 ) ; } java . util . List < org . IDENT_0 . server . search . IDENT_11 . IDENT_15 > IDENT_16 = null ; if ( ( IDENT_5 . size ( ) ) > 0 ) { IDENT_16 = IDENT_17 . execute ( IDENT_5 ) ; } final java . util . List < org . IDENT_0 . server . domain . stream . IDENT_18 > filters = new java . util . ArrayList < org . IDENT_0 . server . domain . stream . IDENT_18 > ( ) ; if ( IDENT_13 != null ) { for ( org . IDENT_0 . server . search . IDENT_11 . IDENT_12 person : IDENT_13 ) { final java . lang . String name = person . METHOD_4 ( ) ; final java . lang . String request = ( STRING_3 + ( person . METHOD_5 ( ) ) ) + STRING_4 ; filters . add ( new org . IDENT_0 . server . domain . stream . METHOD_6 ( person . METHOD_7 ( ) , name , request , person . METHOD_8 ( ) , person . METHOD_9 ( ) ) ) ; } } if ( IDENT_16 != null ) { for ( org . IDENT_0 . server . search . IDENT_11 . IDENT_15 group : IDENT_16 ) { final java . lang . String name = group . getName ( ) ; final java . lang . String request = ( STRING_5 + ( group . METHOD_10 ( ) ) ) + STRING_4 ; filters . add ( new org . IDENT_0 . server . domain . stream . METHOD_6 ( group . METHOD_7 ( ) , name , request , group . METHOD_8 ( ) , group . METHOD_9 ( ) ) ) ; } } return filters ; }
org . junit . Assert . assertEquals ( null , IDENT_3 . transform ( null ) ) 