METHOD_0 ( ) { org . locationtech . IDENT_0 . test . TestUtils . METHOD_1 ( IDENT_1 , IDENT_2 . IDENT_3 , org . locationtech . IDENT_0 . test . spark . IDENT_4 . IDENT_5 , 1 ) ; long IDENT_6 = java . lang . System . currentTimeMillis ( ) ; final org . locationtech . IDENT_0 . IDENT_7 . spark . IDENT_8 . IDENT_9 runner = new org . locationtech . IDENT_0 . IDENT_7 . spark . IDENT_8 . METHOD_2 ( ) ; runner . METHOD_3 ( org . locationtech . IDENT_0 . test . spark . IDENT_10 . getInstance ( ) . IDENT_11 ) ; runner . METHOD_4 ( IDENT_1 ) ; runner . METHOD_5 ( STRING_0 0 ) ; runner . METHOD_6 ( org . locationtech . IDENT_0 . test . spark . IDENT_4 . IDENT_12 ) ; runner . METHOD_7 ( true ) ; runner . METHOD_8 ( IDENT_1 ) ; runner . METHOD_9 ( STRING_1 ) ; runner . METHOD_10 ( true ) ; runner . METHOD_11 ( true ) ; runner . METHOD_12 ( STRING_0 ) ; try { runner . run ( ) ; } catch ( final java . io . IOException e ) { throw new java . lang . RuntimeException ( ( STRING_2 + ( e . getMessage ( ) ) ) ) ; } final org . apache . spark . IDENT_13 . IDENT_14 . IDENT_15 IDENT_16 = runner . METHOD_13 ( ) ; long IDENT_17 = ( java . lang . System . currentTimeMillis ( ) ) - IDENT_6 ; org . locationtech . IDENT_0 . test . spark . IDENT_4 . LOGGER . warn ( ( ( STRING_3 + IDENT_17 ) + STRING_4 ) ) ; final short IDENT_18 = IDENT_1 . METHOD_14 ( ) . METHOD_15 ( STRING_1 ) ; final org . locationtech . IDENT_0 . core . store . api . IDENT_19 IDENT_20 = IDENT_1 . METHOD_16 ( ) . METHOD_17 ( IDENT_18 ) ; IDENT_6 = java . lang . System . currentTimeMillis ( ) ; METHOD_18 ( IDENT_20 , IDENT_16 . METHOD_19 ( ) . length ) ; IDENT_17 = ( java . lang . System . currentTimeMillis ( ) ) - IDENT_6 ; org . locationtech . IDENT_0 . test . spark . IDENT_4 . LOGGER . warn ( ( ( STRING_5 + IDENT_17 ) + STRING_4 ) ) ; final org . apache . spark . api . java . IDENT_21 < java . lang . Integer , java . lang . IDENT_22 < org . apache . spark . IDENT_13 . linalg . IDENT_23 > > IDENT_24 = org . locationtech . IDENT_0 . IDENT_7 . spark . IDENT_8 . IDENT_25 . METHOD_20 ( runner . METHOD_21 ( ) , IDENT_16 ) ; final org . apache . spark . api . java . IDENT_21 < java . lang . Integer , org . locationtech . jts . geom . IDENT_26 > IDENT_27 = org . locationtech . IDENT_0 . IDENT_7 . spark . IDENT_8 . IDENT_25 . METHOD_22 ( IDENT_24 ) ; "<AssertPlaceHolder>" ; System . out . println ( STRING_6 ) ; for ( final IDENT_28 . IDENT_29 < java . lang . Integer , org . locationtech . jts . geom . IDENT_26 > IDENT_30 : IDENT_27 . collect ( ) ) { System . out . println ( ( STRING_7 + ( IDENT_30 . IDENT_31 . METHOD_23 ( ) ) ) ) ; System . out . println ( ( STRING_8 + ( IDENT_30 . IDENT_31 . METHOD_24 ( ) . toString ( ) ) ) ) ; } final short IDENT_32 = IDENT_1 . METHOD_14 ( ) . METHOD_15 ( STRING_0 ) ; final org . locationtech . IDENT_0 . core . store . api . IDENT_19 IDENT_33 = IDENT_1 . METHOD_16 ( ) . METHOD_17 ( IDENT_32 ) ; IDENT_6 = java . lang . System . currentTimeMillis ( ) ; METHOD_18 ( IDENT_33 , IDENT_16 . METHOD_19 ( ) . length ) ; IDENT_17 = ( java . lang . System . currentTimeMillis ( ) ) - IDENT_6 ; org . locationtech . IDENT_0 . test . spark . IDENT_4 . LOGGER . warn ( ( ( STRING_9 + IDENT_17 ) + STRING_4 ) ) ; org . locationtech . IDENT_0 . test . TestUtils . METHOD_25 ( IDENT_1 ) ; } count ( ) { return IDENT_34 . IDENT_35 . METHOD_26 ( ) ; }
org . junit . Assert . assertTrue ( STRING_0 1 , ( ( IDENT_16 . METHOD_19 ( ) . length ) == ( IDENT_27 . count ( ) ) ) ) 