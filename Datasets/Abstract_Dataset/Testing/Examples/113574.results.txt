METHOD_0 ( ) { org . locationtech . IDENT_0 . catalog . IDENT_1 service = METHOD_1 ( ) . METHOD_2 ( METHOD_3 ( ) , null ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . net . URL , java . util . Map ) { try { if ( ( ( org . locationtech . IDENT_0 . catalog . IDENT_2 . METHOD_4 ( ) ) == null ) || ( ! ( org . locationtech . IDENT_0 . catalog . IDENT_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ) ) { return null ; } if ( ! ( org . locationtech . IDENT_0 . catalog . IDENT_2 . METHOD_4 ( ) . METHOD_6 ( params ) ) ) { return null ; } } catch ( java . lang . Exception IDENT_3 ) { if ( org . eclipse . core . runtime . IDENT_4 . METHOD_7 ( ) ) { org . locationtech . IDENT_0 . catalog . internal . IDENT_5 . IDENT_6 . log ( ( STRING_0 + IDENT_3 ) , IDENT_3 ) ; } return null ; } if ( ( METHOD_8 ( params ) ) != null ) { return null ; } java . util . Map < java . lang . String , java . io . IDENT_7 > IDENT_8 = params ; METHOD_9 ( IDENT_8 ) ; try { java . net . URL IDENT_9 = org . locationtech . IDENT_0 . catalog . IDENT_2 . IDENT_10 . METHOD_10 ( IDENT_8 ) ; org . locationtech . IDENT_0 . core . IDENT_11 < java . util . Map < java . lang . String , java . io . IDENT_7 > , java . lang . String > split = METHOD_11 ( IDENT_8 ) ; if ( ( split . METHOD_12 ( ) ) != null ) { return null ; } return new org . locationtech . IDENT_0 . catalog . METHOD_13 ( IDENT_9 , split . METHOD_14 ( ) ) ; } catch ( java . net . IDENT_12 e ) { org . locationtech . IDENT_0 . catalog . internal . IDENT_5 . IDENT_6 . log ( STRING_1 , e ) ; return null ; } }
org . junit . Assert . assertNotNull ( service ) 