METHOD_0 ( ) { int [ ] IDENT_0 = IDENT_1 . IDENT_2 . core . util . IDENT_3 . METHOD_1 ( 5 , 20 , 6 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( int , int , int ) { boolean IDENT_4 = true ; IDENT_4 = ( IDENT_5 OP_0 2 ) == 0 ; int IDENT_6 = IDENT_5 / 2 ; int IDENT_7 = IDENT_5 / 2 ; int length = IDENT_5 ; if ( IDENT_4 ) { IDENT_7 ++ ; } if ( IDENT_8 < IDENT_5 ) { length = IDENT_8 ; } int [ ] result = new int [ length ] ; if ( IDENT_8 >= IDENT_5 ) { if ( IDENT_9 <= IDENT_6 ) { for ( int i = 0 ; i < ( result . length ) ; i ++ ) { result [ i ] = i + 1 ; } } else if ( IDENT_9 > ( IDENT_8 - IDENT_7 ) ) { for ( int i = 0 ; i < ( result . length ) ; i ++ ) { result [ i ] = ( ( i + IDENT_8 ) - IDENT_5 ) + 1 ; } } else { for ( int i = 0 ; i < ( result . length ) ; i ++ ) { result [ i ] = ( ( i + IDENT_9 ) - IDENT_6 ) + ( IDENT_4 ? 1 : 0 ) ; } } } else { for ( int i = 0 ; i < ( result . length ) ; i ++ ) { result [ i ] = i + 1 ; } } return result ; }
org . junit . Assert . assertArrayEquals ( new int [ ] { 3 , 4 , 5 , 6 , 7 , 8 } , METHOD_1 ) 