METHOD_0 ( ) { IDENT_0 . IDENT_1 IDENT_2 = mock ( IDENT_0 . IDENT_1 . class ) ; IDENT_0 . IDENT_1 IDENT_3 = mock ( IDENT_0 . IDENT_1 . class ) ; java . nio . ByteBuffer buffer = java . nio . ByteBuffer . METHOD_1 ( 16 ) ; buffer . METHOD_2 ( 0 ) ; buffer . METHOD_2 ( INT_0 ) ; buffer . METHOD_3 ( INT_1 ) ; byte [ ] connect = buffer . array ( ) ; buffer = java . nio . ByteBuffer . METHOD_1 ( INT_2 ) ; buffer . METHOD_2 ( 1 ) ; buffer . METHOD_2 ( INT_0 ) ; buffer . METHOD_2 ( INT_3 ) ; buffer . METHOD_2 ( INT_4 ) ; buffer . METHOD_2 ( INT_5 ) ; buffer . METHOD_2 ( INT_6 ) ; buffer . METHOD_4 ( ( ( short ) ( INT_7 ) ) ) ; buffer . METHOD_2 ( INT_8 ) ; buffer . METHOD_4 ( ( ( short ) ( INT_9 ) ) ) ; buffer . METHOD_2 ( INT_10 ) ; buffer . METHOD_4 ( ( ( short ) ( 1 ) ) ) ; byte [ ] IDENT_4 = buffer . array ( ) ; when ( IDENT_2 . METHOD_5 ( any ( int . class ) ) ) . thenReturn ( new IDENT_0 . IDENT_5 . METHOD_6 ( connect ) , new IDENT_0 . IDENT_5 . METHOD_7 ( IDENT_4 ) ) . thenReturn ( new IDENT_0 . IDENT_5 . METHOD_6 ( connect ) , new IDENT_0 . IDENT_5 . METHOD_7 ( IDENT_4 ) ) ; when ( IDENT_3 . METHOD_5 ( any ( int . class ) ) ) . METHOD_8 ( new java . net . METHOD_9 ( ) ) ; byte [ ] hash = new byte [ ] { 5 , ( ( byte ) ( INT_11 ) ) , ( ( byte ) ( INT_12 ) ) , ( ( byte ) ( INT_13 ) ) , 15 , ( ( byte ) ( INT_14 ) ) , INT_15 , INT_16 , ( ( byte ) ( INT_17 ) ) , ( ( byte ) ( 200 ) ) , ( ( byte ) ( INT_18 ) ) , INT_19 , INT_16 , ( ( byte ) ( INT_20 ) ) , ( ( byte ) ( INT_21 ) ) , ( ( byte ) ( INT_22 ) ) , INT_23 , ( ( byte ) ( INT_24 ) ) , ( ( byte ) ( INT_25 ) ) , INT_26 } ; IDENT_0 . IDENT_6 IDENT_7 = mock ( IDENT_0 . IDENT_6 . class ) ; when ( IDENT_7 . METHOD_10 ( ) ) . thenReturn ( hash ) ; IDENT_0 . IDENT_8 . IDENT_9 generator = mock ( IDENT_0 . IDENT_8 . IDENT_9 . class ) ; when ( generator . METHOD_11 ( ) ) . thenReturn ( INT_0 ) ; IDENT_0 . IDENT_8 IDENT_10 = new IDENT_0 . METHOD_12 ( IDENT_7 , IDENT_2 , generator ) ; IDENT_0 . METHOD_12 IDENT_11 = new IDENT_0 . METHOD_12 ( IDENT_7 , IDENT_2 , generator ) ; IDENT_0 . METHOD_12 IDENT_12 = new IDENT_0 . METHOD_12 ( IDENT_7 , IDENT_3 , generator ) ; IDENT_0 . IDENT_13 pool = new IDENT_0 . METHOD_13 ( ) ; pool . add ( IDENT_10 ) ; pool . add ( IDENT_11 ) ; pool . add ( IDENT_12 ) ; for ( int i = 0 ; i < 5 ; i ++ ) { pool . METHOD_14 ( ) ; } "<AssertPlaceHolder>" ; } METHOD_14 ( ) { METHOD_15 ( ) ; java . util . List < IDENT_14 . IDENT_15 > IDENT_14 = new java . util . ArrayList ( ) ; java . util . Iterator < IDENT_0 . METHOD_12 > iterator = this . iterator ( ) ; while ( iterator . hasNext ( ) ) { IDENT_0 . METHOD_12 connection = iterator . next ( ) ; try { if ( connection . METHOD_16 ( ) ) { iterator . remove ( ) ; } else { java . util . List < IDENT_14 . IDENT_15 > IDENT_16 = connection . METHOD_14 ( ) ; if ( IDENT_16 != null ) { IDENT_14 . addAll ( IDENT_16 ) ; } } } catch ( java . net . IDENT_17 e ) { System . out . println ( ( STRING_0 + ( e . getMessage ( ) ) ) ) ; iterator . remove ( ) ; } } this . METHOD_17 ( new IDENT_0 . METHOD_12 . METHOD_18 ( ) ) ; IDENT_18 = this . get ( 0 ) . METHOD_19 ( ) ; return IDENT_14 ; }
org . junit . Assert . assertEquals ( 2 , pool . size ( ) ) 