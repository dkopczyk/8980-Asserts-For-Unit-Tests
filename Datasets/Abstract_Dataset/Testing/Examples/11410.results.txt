METHOD_0 ( ) { java . io . File input = new java . io . File ( getClass ( ) . getResource ( STRING_0 ) . METHOD_1 ( ) ) ; java . lang . String [ ] args = new java . lang . String [ ] { STRING_1 , STRING_2 , output . toString ( ) , input . toString ( ) } ; org . apache . cxf . tools . IDENT_0 . IDENT_1 . run ( args ) ; java . io . File fs = new java . io . File ( output , STRING_3 ) ; "<AssertPlaceHolder>" ; org . w3c . dom . Document doc = org . apache . cxf . IDENT_2 . IDENT_3 . read ( new java . io . METHOD_2 ( fs ) ) ; org . w3c . dom . IDENT_4 l = doc . METHOD_3 ( ) . METHOD_4 ( STRING_4 , STRING_5 ) ; for ( int x = 0 ; x < ( l . METHOD_5 ( ) ) ; x ++ ) { org . w3c . dom . Element el = ( ( org . w3c . dom . Element ) ( l . item ( x ) ) ) ; if ( ( "bar" . equals ( el . METHOD_6 ( "name" ) ) ) && ( el . METHOD_6 ( STRING_6 ) . contains ( STRING_4 1 ) ) ) { return ; } } org . junit . Assert . fail ( STRING_7 ) ; } getName ( ) { return name ; }
org . junit . Assert . assertTrue ( ( ( fs . getName ( ) ) + STRING_4 0 ) , fs . exists ( ) ) 