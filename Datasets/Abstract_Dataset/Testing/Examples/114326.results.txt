METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 < java . lang . String > IDENT_3 = com . IDENT_0 . IDENT_1 . IDENT_4 . apply ( "foo" ) ; com . IDENT_0 . IDENT_1 . IDENT_5 < java . lang . String > gen = com . IDENT_0 . IDENT_1 . IDENT_5 . apply ( IDENT_3 ) ; final com . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_7 IDENT_8 = new com . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_1 ( ) ; gen . METHOD_2 ( new com . IDENT_0 . IDENT_1 . IDENT_9 < java . lang . String > ( ) { public void apply ( java . lang . String s ) throws com . IDENT_0 . IDENT_1 . Exception { ( IDENT_8 . count ) ++ ; } } ) ; "<AssertPlaceHolder>" ; } apply ( java . lang . String ) { System . out . println ( ( v1 + v1 ) ) ; }
org . junit . Assert . assertThat ( IDENT_8 . count , org . hamcrest . CoreMatchers . is ( org . hamcrest . CoreMatchers . equalTo ( 1 ) ) ) 