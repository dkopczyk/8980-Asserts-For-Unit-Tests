METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . List < java . lang . Integer > list = com . IDENT_0 . IDENT_1 . Arrays . asList ( 1 , 5 , 2 , 3 , 4 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 < java . lang . Integer > IDENT_3 = com . IDENT_0 . IDENT_1 . IDENT_4 . apply ( list ) ; java . lang . Integer actual = IDENT_3 . count ( new com . IDENT_0 . IDENT_1 . IDENT_5 < java . lang . Integer , java . lang . Boolean > ( ) { public com . IDENT_0 . IDENT_1 . Boolean apply ( java . lang . Integer v1 ) { return v1 < 3 ; } } ) ; java . lang . Integer expected = 2 ; "<AssertPlaceHolder>" ; } apply ( java . lang . String ) { System . out . println ( ( v1 + v1 ) ) ; }
org . junit . Assert . assertThat ( actual , org . hamcrest . CoreMatchers . is ( org . hamcrest . CoreMatchers . equalTo ( expected ) ) ) 