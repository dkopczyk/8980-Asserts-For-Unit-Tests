METHOD_0 ( ) { org . apache . cxf . tools . IDENT_0 . jaxrs . IDENT_1 container = new org . apache . cxf . tools . IDENT_0 . jaxrs . METHOD_1 ( null ) ; org . apache . cxf . tools . common . IDENT_2 context = new org . apache . cxf . tools . common . METHOD_2 ( ) ; context . put ( IDENT_3 . IDENT_4 , output . METHOD_3 ( ) ) ; context . put ( IDENT_3 . IDENT_5 , METHOD_4 ( STRING_0 ) ) ; context . put ( IDENT_3 . IDENT_6 , STRING_1 ) ; context . put ( IDENT_3 . IDENT_7 , STRING_1 ) ; context . put ( IDENT_3 . IDENT_8 , STRING_1 ) ; container . METHOD_5 ( context ) ; container . execute ( ) ; "<AssertPlaceHolder>" ; METHOD_6 ( STRING_2 , true , true , STRING_3 , STRING_4 , INT_0 , true ) ; METHOD_6 ( STRING_5 , true , true , STRING_3 , STRING_4 , INT_0 , true ) ; } execute ( ) { org . apache . maven . plugins . IDENT_9 . IDENT_10 IDENT_11 = new org . apache . maven . plugins . IDENT_9 . METHOD_7 ( ) ; java . util . Locale IDENT_12 = java . util . Locale . METHOD_8 ( ) ; try { java . lang . reflect . Field f = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_9 ( STRING_6 3 ) ; f . METHOD_10 ( true ) ; f . set ( IDENT_11 , STRING_7 4 ) ; f = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_9 ( STRING_6 5 ) ; f . METHOD_10 ( true ) ; f . set ( IDENT_11 , IDENT_13 ) ; f = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_9 ( STRING_6 0 ) ; f . METHOD_10 ( true ) ; f . set ( IDENT_11 , STRING_6 0 ) ; f = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_9 ( STRING_7 0 ) ; f . METHOD_10 ( true ) ; f . set ( IDENT_11 , IDENT_14 ) ; f = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_9 ( STRING_6 7 ) ; f . METHOD_10 ( true ) ; org . apache . maven . plugins . IDENT_9 . options . IDENT_15 IDENT_16 = new org . apache . maven . plugins . IDENT_9 . options . METHOD_11 ( ) ; for ( java . lang . Object o : this . IDENT_17 . METHOD_12 ( ) ) { if ( o instanceof org . apache . maven . IDENT_18 . IDENT_19 ) { org . apache . maven . IDENT_18 . IDENT_19 IDENT_18 = ( ( org . apache . maven . IDENT_18 . IDENT_19 ) ( o ) ) ; if ( STRING_8 . equals ( IDENT_18 . METHOD_13 ( ) ) ) { IDENT_16 . METHOD_14 ( IDENT_18 . METHOD_15 ( ) ) ; IDENT_16 . METHOD_16 ( IDENT_18 . METHOD_13 ( ) ) ; IDENT_16 . METHOD_17 ( IDENT_18 . METHOD_18 ( ) ) ; } } } f . set ( IDENT_11 , IDENT_16 ) ; f = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_9 ( STRING_7 3 ) ; f . METHOD_10 ( true ) ; f . set ( IDENT_11 , this . IDENT_20 ) ; f = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_9 ( STRING_9 ) ; f . METHOD_10 ( true ) ; f . set ( IDENT_11 , this . IDENT_21 ) ; f = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_9 ( STRING_10 ) ; System . out . println ( ( STRING_7 + ( session . METHOD_19 ( ) ) ) ) ; f . METHOD_10 ( true ) ; f . set ( IDENT_11 , this . session ) ; f = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_9 ( STRING_11 ) ; f . METHOD_10 ( true ) ; f . set ( IDENT_11 , this . IDENT_22 ) ; f = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_9 ( STRING_12 ) ; f . METHOD_10 ( true ) ; f . set ( IDENT_11 , this . IDENT_23 ) ; f = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_9 ( STRING_7 2 ) ; f . METHOD_10 ( true ) ; f . set ( IDENT_11 , this . IDENT_24 ) ; f = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_9 ( STRING_13 ) ; f . METHOD_10 ( true ) ; f . set ( IDENT_11 , this . IDENT_25 ) ; f = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_9 ( STRING_6 4 ) ; f . METHOD_10 ( true ) ; f . set ( IDENT_11 , this . IDENT_26 ) ; f = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_9 ( STRING_6 ) ; f . METHOD_10 ( true ) ; f . set ( IDENT_11 , false ) ; f = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_9 ( STRING_6 9 ) ; f . METHOD_10 ( true ) ; f . set ( IDENT_11 , new java . lang . String [ ] { ( ( STRING_7 1 + ( this . IDENT_27 . getAbsolutePath ( ) ) ) + ( java . io . File . IDENT_28 ) ) + STRING_14 } ) ; f = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_9 ( STRING_6 1 ) ; f . METHOD_10 ( true ) ; f . set ( IDENT_11 , false ) ; f = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_9 ( STRING_6 2 ) ; f . METHOD_10 ( true ) ; f . set ( IDENT_11 , IDENT_17 ) ; if ( ( IDENT_27 ) != null ) { f = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_9 ( STRING_6 6 ) ; f . METHOD_10 ( true ) ; f . set ( IDENT_11 , IDENT_27 ) ; } java . lang . reflect . Method m = org . apache . maven . plugins . IDENT_9 . IDENT_10 . class . METHOD_20 ( STRING_15 , java . util . Locale . class ) ; m . METHOD_10 ( true ) ; m . invoke ( IDENT_11 , IDENT_12 ) ; } catch ( java . lang . Exception e ) { throw new org . apache . maven . plugin . METHOD_21 ( STRING_6 8 , e ) ; } }
org . junit . Assert . assertNotNull ( output . list ( ) ) 