METHOD_0 ( ) { final org . apache . IDENT_0 . core . util . metadata . builder . IDENT_1 < org . apache . IDENT_0 . test . api . metadata . IDENT_2 . IDENT_3 > builder = new org . apache . IDENT_0 . core . util . metadata . builder . IDENT_1 < org . apache . IDENT_0 . test . api . metadata . IDENT_2 . IDENT_3 > ( ) ; builder . METHOD_1 ( org . apache . IDENT_0 . test . api . metadata . IDENT_2 . IDENT_3 . class ) ; builder . METHOD_2 ( new javax . IDENT_4 . util . IDENT_5 < javax . IDENT_4 . IDENT_6 . IDENT_7 > ( ) { } ) ; javax . IDENT_4 . IDENT_6 . spi . IDENT_8 < org . apache . IDENT_0 . test . api . metadata . IDENT_2 . IDENT_3 > IDENT_9 = builder . create ( ) ; "<AssertPlaceHolder>" ; } create ( ) { java . util . Map < java . lang . reflect . IDENT_10 < ? > , java . util . Map < java . lang . Integer , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_11 > > IDENT_12 = new java . util . HashMap < java . lang . reflect . IDENT_10 < ? > , java . util . Map < java . lang . Integer , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_11 > > ( ) ; java . util . Map < java . lang . reflect . IDENT_10 < ? > , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_11 > IDENT_13 = new java . util . HashMap < java . lang . reflect . IDENT_10 < ? > , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_11 > ( ) ; java . util . Map < java . lang . reflect . Method , java . util . Map < java . lang . Integer , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_11 > > IDENT_14 = new java . util . HashMap < java . lang . reflect . Method , java . util . Map < java . lang . Integer , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_11 > > ( ) ; java . util . Map < java . lang . reflect . Method , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_11 > IDENT_15 = new java . util . HashMap < java . lang . reflect . Method , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_11 > ( ) ; java . util . Map < java . lang . reflect . Field , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_11 > IDENT_16 = new java . util . HashMap < java . lang . reflect . Field , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_11 > ( ) ; for ( Map . Entry < java . lang . reflect . Field , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_17 > field : fields . entrySet ( ) ) { IDENT_16 . put ( field . getKey ( ) , field . getValue ( ) . create ( ) ) ; } for ( Map . Entry < java . lang . reflect . Method , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_17 > method : methods . entrySet ( ) ) { IDENT_15 . put ( method . getKey ( ) , method . getValue ( ) . create ( ) ) ; } for ( Map . Entry < java . lang . reflect . Method , java . util . Map < java . lang . Integer , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_17 > > parameters : IDENT_18 . entrySet ( ) ) { java . util . Map < java . lang . Integer , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_11 > IDENT_19 = new java . util . HashMap < java . lang . Integer , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_11 > ( ) ; IDENT_14 . put ( parameters . getKey ( ) , IDENT_19 ) ; for ( Map . Entry < java . lang . Integer , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_17 > parameter : parameters . getValue ( ) . entrySet ( ) ) { IDENT_19 . put ( parameter . getKey ( ) , parameter . getValue ( ) . create ( ) ) ; } } for ( Map . Entry < java . lang . reflect . IDENT_10 < ? > , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_17 > IDENT_20 : IDENT_21 . entrySet ( ) ) { IDENT_13 . put ( IDENT_20 . getKey ( ) , IDENT_20 . getValue ( ) . create ( ) ) ; } for ( Map . Entry < java . lang . reflect . IDENT_10 < ? > , java . util . Map < java . lang . Integer , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_17 > > parameters : IDENT_22 . entrySet ( ) ) { java . util . Map < java . lang . Integer , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_11 > IDENT_19 = new java . util . HashMap < java . lang . Integer , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_11 > ( ) ; IDENT_12 . put ( parameters . getKey ( ) , IDENT_19 ) ; for ( Map . Entry < java . lang . Integer , org . apache . IDENT_0 . core . util . metadata . builder . IDENT_17 > parameter : parameters . getValue ( ) . entrySet ( ) ) { IDENT_19 . put ( parameter . getKey ( ) , parameter . getValue ( ) . create ( ) ) ; } } return new org . apache . IDENT_0 . core . util . metadata . builder . IDENT_23 < IDENT_24 > ( IDENT_25 , IDENT_26 . create ( ) , IDENT_16 , IDENT_15 , IDENT_14 , IDENT_13 , IDENT_12 , IDENT_27 , IDENT_28 , IDENT_29 ) ; }
org . junit . Assert . assertNotNull ( IDENT_9 ) 