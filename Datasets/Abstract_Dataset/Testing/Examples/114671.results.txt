METHOD_0 ( ) { java . lang . String IDENT_0 = "foo" ; java . lang . Integer IDENT_1 = INT_0 ; java . lang . Long IDENT_2 = INT_1 ; java . lang . Boolean IDENT_3 = true ; java . lang . Double IDENT_4 = FLOAT_0 ; com . IDENT_5 . IDENT_6 . IDENT_7 < java . lang . String , java . lang . Integer , java . lang . Long , java . lang . Boolean , java . lang . Double > target = com . IDENT_5 . IDENT_6 . IDENT_7 . apply ( IDENT_0 , IDENT_1 , IDENT_2 , IDENT_3 , IDENT_4 ) ; java . lang . String actual = target . METHOD_1 ( ) ; java . lang . String expected = "foo" ; "<AssertPlaceHolder>" ; } METHOD_1 ( ) { return METHOD_1 ; }
org . junit . Assert . assertThat ( actual , org . hamcrest . CoreMatchers . is ( org . hamcrest . CoreMatchers . equalTo ( expected ) ) ) 