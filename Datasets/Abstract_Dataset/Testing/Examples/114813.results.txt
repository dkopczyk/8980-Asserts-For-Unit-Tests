METHOD_0 ( ) { for ( int i = 0 ; i < ( ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . values ( ) . length ) - 1 ) ; i ++ ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . values ( ) [ 0 ] ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_5 = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . values ( ) [ i ] ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 IDENT_7 = new org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( IDENT_4 , IDENT_5 ) ; for ( int j = i + 1 ; j < ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . values ( ) . length ) ; j ++ ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_8 = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . values ( ) [ j ] ; org . mockito . Mockito . when ( IDENT_9 . METHOD_2 ( org . mockito . Mockito . any ( org . IDENT_0 . IDENT_1 . date . Date . class ) ) ) . thenReturn ( IDENT_8 ) ; "<AssertPlaceHolder>" ; } } } METHOD_3 ( org . IDENT_0 . IDENT_1 . entity . IDENT_10 . IDENT_11 ) { for ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_12 IDENT_7 : IDENT_13 ) { if ( ! ( IDENT_7 . METHOD_3 ( IDENT_14 ) ) ) { return false ; } } return true ; }
org . junit . Assert . assertFalse ( IDENT_7 . METHOD_3 ( IDENT_14 ) ) 