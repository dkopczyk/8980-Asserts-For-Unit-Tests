METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . date . Date date = new org . IDENT_0 . IDENT_1 . date . Date ( 10 , 1 , 1 ) ; org . IDENT_0 . IDENT_1 . date . Date IDENT_2 = date ; final org . IDENT_0 . IDENT_1 . date . Date end = date . METHOD_1 ( 10 , IDENT_3 . IDENT_4 ) ; final org . IDENT_0 . IDENT_1 . date . IDENT_5 IDENT_6 = new org . IDENT_0 . IDENT_1 . date . METHOD_2 ( new org . IDENT_0 . IDENT_1 . date . Date ( 1 , 1 , 1 ) , new org . IDENT_0 . IDENT_1 . date . Date ( 1 , 2 , 1 ) ) ; org . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 IDENT_9 = new org . IDENT_0 . IDENT_1 . IDENT_7 . METHOD_3 ( date ) ; org . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_10 IDENT_11 = null ; while ( ( date . compareTo ( end ) ) < 0 ) { if ( IDENT_11 != ( IDENT_9 . METHOD_4 ( date ) ) ) { IDENT_11 = IDENT_9 . METHOD_4 ( date ) ; IDENT_2 = date ; } "<AssertPlaceHolder>" ; date = date . METHOD_1 ( 1 , IDENT_3 . IDENT_12 ) ; } } METHOD_4 ( org . IDENT_0 . IDENT_1 . date . Date ) { METHOD_5 ( date ) ; return IDENT_13 . get ( 0 ) ; }
org . junit . Assert . assertTrue ( ( ( new org . IDENT_0 . IDENT_1 . date . METHOD_2 ( IDENT_2 , date ) . compareTo ( IDENT_6 ) ) < 0 ) ) 