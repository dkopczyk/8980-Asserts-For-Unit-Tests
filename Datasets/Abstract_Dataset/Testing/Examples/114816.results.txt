METHOD_0 ( ) { final java . util . List < IDENT_0 . IDENT_1 . IDENT_2 > IDENT_3 = new java . util . ArrayList ( ) ; final java . util . UUID IDENT_4 = java . util . UUID . METHOD_1 ( ) ; final java . util . List < IDENT_0 . IDENT_5 . IDENT_6 > IDENT_7 = new java . util . ArrayList ( java . util . Arrays . asList ( IDENT_6 . IDENT_8 ) ) ; final java . util . List < java . lang . String > IDENT_9 = new java . util . ArrayList ( ) ; final java . util . List < IDENT_0 . IDENT_1 . IDENT_2 > IDENT_10 = null ; final IDENT_0 . interfaces . IDENT_11 . IDENT_12 IDENT_13 = new IDENT_0 . interfaces . IDENT_11 . METHOD_2 ( ) { @ org . IDENT_0 . test . utils . Override public int METHOD_3 ( IDENT_0 . IDENT_1 . IDENT_2 IDENT_14 ) { return 6 ; } @ org . IDENT_0 . test . utils . Override public IDENT_0 . IDENT_1 . IDENT_2 METHOD_4 ( IDENT_0 . IDENT_5 . IDENT_6 IDENT_15 , java . util . List < java . lang . String > IDENT_9 ) { "<AssertPlaceHolder>" ; return new IDENT_0 . IDENT_1 . IDENT_16 . METHOD_5 ( IDENT_4 , new IDENT_0 . IDENT_1 . METHOD_6 ( STRING_0 , STRING_1 , STRING_2 , IDENT_0 . IDENT_5 . IDENT_17 . IDENT_18 ) ) ; } } ; for ( int i = 0 ; i < INT_0 ; i ++ ) { IDENT_0 . IDENT_1 . IDENT_2 c = new org . IDENT_0 . test . utils . IDENT_19 . METHOD_7 ( IDENT_4 , i , ( STRING_3 + i ) ) ; IDENT_3 . add ( c ) ; } IDENT_0 . utils . IDENT_20 . METHOD_8 ( IDENT_3 , IDENT_7 , IDENT_9 , IDENT_10 , INT_1 , IDENT_13 ) ; } METHOD_4 ( IDENT_0 . IDENT_5 . IDENT_6 , java . util . List ) { org . junit . Assert . assertNotNull ( IDENT_15 ) ; return new IDENT_0 . IDENT_1 . IDENT_16 . METHOD_5 ( IDENT_4 , new IDENT_0 . IDENT_1 . METHOD_6 ( STRING_0 , STRING_1 , STRING_2 , IDENT_0 . IDENT_5 . IDENT_17 . IDENT_18 ) ) ; }
org . junit . Assert . assertNotNull ( IDENT_15 ) 