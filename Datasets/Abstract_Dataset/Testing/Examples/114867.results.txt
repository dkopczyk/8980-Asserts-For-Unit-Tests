METHOD_0 ( ) { final java . util . List < net . IDENT_0 . model . IDENT_1 . IDENT_2 > IDENT_3 = new java . util . ArrayList < net . IDENT_0 . model . IDENT_1 . IDENT_2 > ( ) ; IDENT_3 . add ( service . METHOD_1 ( service . METHOD_2 ( ) . getId ( ) , STRING_0 ) ) ; IDENT_3 . add ( service . METHOD_1 ( service . METHOD_2 ( ) . getId ( ) , STRING_1 ) ) ; net . IDENT_0 . model . IDENT_1 . IDENT_2 IDENT_4 = service . METHOD_3 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . util . List ) { if ( ( IDENT_3 . size ( ) ) > 0 ) { for ( int i = 0 ; i < ( IDENT_3 . size ( ) ) ; i ++ ) { if ( i > 0 ) { net . IDENT_0 . model . IDENT_1 . IDENT_2 parent = IDENT_3 . get ( ( i - 1 ) ) ; IDENT_3 . get ( i ) . METHOD_4 ( parent ) ; } if ( i < ( ( IDENT_3 . size ( ) ) - 1 ) ) { java . util . List < net . IDENT_0 . model . IDENT_1 . IDENT_2 > IDENT_5 = new java . util . ArrayList < net . IDENT_0 . model . IDENT_1 . IDENT_2 > ( ) ; IDENT_5 . add ( IDENT_3 . get ( ( i + 1 ) ) ) ; IDENT_3 . get ( i ) . METHOD_5 ( IDENT_5 ) ; } } return IDENT_3 . get ( 0 ) ; } throw new net . IDENT_0 . service . METHOD_6 ( STRING_2 ) ; }
org . junit . Assert . assertNotNull ( METHOD_3 ) 