METHOD_0 ( ) { IDENT_0 = service . METHOD_1 ( service . METHOD_2 ( ) . getId ( ) , STRING_0 ) ; service . save ( IDENT_0 ) ; java . util . Map < java . lang . String , net . IDENT_1 . model . IDENT_0 . IDENT_2 > IDENT_3 = service . METHOD_3 ( ) ; log . info ( STRING_1 , IDENT_3 . METHOD_4 ( ) ) ; log . info ( STRING_2 , IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { try { java . util . Map < java . lang . String , java . util . Map < java . lang . String , java . lang . Object > > IDENT_4 = ( ( java . util . Map < java . lang . String , java . util . Map < java . lang . String , java . lang . Object > > ) ( IDENT_5 . METHOD_5 ( IDENT_6 . IDENT_7 , "" ) ) ) ; log . debug ( STRING_3 , IDENT_6 . IDENT_7 , IDENT_4 . size ( ) ) ; java . util . Map < java . lang . String , net . IDENT_1 . model . IDENT_0 . IDENT_2 > result = com . google . common . collect . IDENT_8 . METHOD_6 ( IDENT_4 , new com . google . common . base . IDENT_9 < java . util . Map < java . lang . String , java . lang . Object > , net . IDENT_1 . model . IDENT_0 . IDENT_2 > ( ) { @ net . IDENT_1 . service . IDENT_0 . Override public net . IDENT_1 . model . IDENT_0 . IDENT_2 apply ( java . util . Map < java . lang . String , java . lang . Object > input ) { return new net . IDENT_1 . model . IDENT_0 . METHOD_7 ( java . lang . Integer . valueOf ( ( ( java . lang . String ) ( input . get ( STRING_4 ) ) ) ) , ( ( java . lang . String ) ( input . get ( "name" ) ) ) ) ; } } ) ; return result ; } catch ( org . apache . IDENT_10 . IDENT_11 e ) { log . error ( STRING_5 , e ) ; throw new net . IDENT_1 . service . METHOD_8 ( STRING_5 , e ) ; } }
org . junit . Assert . assertNotNull ( IDENT_3 ) 