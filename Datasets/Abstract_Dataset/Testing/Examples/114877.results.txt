METHOD_0 ( ) { net . IDENT_0 . model . address . IDENT_1 IDENT_2 = new net . IDENT_0 . model . address . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( STRING_0 ) ; IDENT_2 . METHOD_3 ( STRING_1 ) ; IDENT_2 . METHOD_4 ( STRING_2 2 ) ; IDENT_2 . METHOD_5 ( STRING_3 ) ; IDENT_2 . METHOD_6 ( STRING_2 3 ) ; IDENT_2 . METHOD_7 ( STRING_2 ) ; IDENT_2 . METHOD_8 ( STRING_4 ) ; IDENT_2 . METHOD_9 ( STRING_5 ) ; IDENT_2 . METHOD_10 ( STRING_6 ) ; net . IDENT_0 . service . order . IDENT_3 . log . info ( STRING_2 0 , IDENT_2 ) ; java . util . List < net . IDENT_0 . model . order . IDENT_4 > IDENT_5 = com . google . common . collect . ImmutableList . of ( new net . IDENT_0 . model . order . METHOD_11 ( INT_0 , 1.0 ) ) ; net . IDENT_0 . model . order . IDENT_6 IDENT_7 = new net . IDENT_0 . model . order . METHOD_12 ( INT_1 , STRING_7 , IDENT_5 , IDENT_2 , IDENT_2 ) ; net . IDENT_0 . service . order . IDENT_3 . log . info ( STRING_2 1 , IDENT_7 ) ; net . IDENT_0 . service . order . IDENT_3 . log . info ( STRING_8 , IDENT_7 . METHOD_13 ( ) ) ; net . IDENT_0 . service . order . IDENT_3 . log . info ( STRING_9 , IDENT_7 . METHOD_14 ( ) ) ; java . lang . Object order = service . METHOD_15 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_15 ( net . IDENT_0 . service . order . METHOD_12 ) { try { java . lang . String result = IDENT_8 . METHOD_16 ( IDENT_9 . IDENT_10 , IDENT_7 . METHOD_17 ( ) ) ; return result ; } catch ( org . apache . IDENT_11 . IDENT_12 e ) { log . debug ( ( STRING_10 + IDENT_7 ) , e ) ; throw new net . IDENT_0 . service . METHOD_18 ( ( STRING_10 + IDENT_7 ) , e ) ; } }
org . junit . Assert . assertNotNull ( order ) 