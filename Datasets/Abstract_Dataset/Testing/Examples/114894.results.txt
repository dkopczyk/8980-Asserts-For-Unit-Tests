METHOD_0 ( ) { final java . util . List < net . IDENT_0 . model . IDENT_1 . IDENT_2 > IDENT_3 = service . list ( STRING_0 ) ; for ( net . IDENT_0 . model . IDENT_1 . IDENT_2 IDENT_1 : IDENT_3 ) { net . IDENT_0 . service . IDENT_1 . IDENT_4 . log . info ( STRING_1 , IDENT_1 ) ; } "<AssertPlaceHolder>" ; } list ( net . IDENT_0 . model . order . IDENT_5 ) { java . util . List < net . IDENT_0 . model . order . IDENT_6 > IDENT_7 = new java . util . ArrayList < net . IDENT_0 . model . order . IDENT_6 > ( ) ; if ( filter != null ) { if ( ( filter . METHOD_1 ( ) ) != null ) { if ( filter . METHOD_1 ( ) . isEmpty ( ) ) filter = null ; } else filter = null ; } java . util . List < java . util . Map < java . lang . String , java . lang . Object > > results = null ; try { results = IDENT_8 . METHOD_2 ( IDENT_9 . IDENT_10 , ( filter != null ? filter . METHOD_3 ( ) : "" ) ) ; } catch ( org . apache . IDENT_11 . IDENT_12 e ) { if ( debug ) e . printStackTrace ( ) ; throw new net . IDENT_0 . service . METHOD_4 ( e . getMessage ( ) ) ; } for ( java . util . Map < java . lang . String , java . lang . Object > result : results ) IDENT_7 . add ( METHOD_5 ( result ) ) ; return IDENT_7 ; }
org . junit . Assert . assertFalse ( IDENT_3 . isEmpty ( ) ) 