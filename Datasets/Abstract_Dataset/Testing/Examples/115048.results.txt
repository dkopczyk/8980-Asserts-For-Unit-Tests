METHOD_0 ( ) { java . util . concurrent . IDENT_0 IDENT_1 = java . util . concurrent . IDENT_2 . METHOD_1 ( java . lang . IDENT_3 . METHOD_2 ( ) . METHOD_3 ( ) ) ; final java . util . concurrent . IDENT_4 < java . io . IDENT_5 > list = new java . util . concurrent . IDENT_4 < java . io . IDENT_5 > ( ) ; for ( int i = 0 ; i < INT_0 ; i ++ ) { IDENT_1 . execute ( new java . lang . METHOD_4 ( ) { @ org . IDENT_6 . IDENT_7 . unit . id . IDENT_8 . Override public void run ( ) { org . IDENT_6 . IDENT_7 . session . impl . IDENT_9 . METHOD_5 ( org . IDENT_6 . IDENT_7 . unit . id . IDENT_8 . IDENT_10 . IDENT_11 ) ; java . io . IDENT_5 id = IDENT_12 . METHOD_6 ( null , null ) ; list . METHOD_7 ( id ) ; } } ) ; } IDENT_1 . METHOD_8 ( ) ; while ( ! ( IDENT_1 . METHOD_9 ( ) ) ) { } "<AssertPlaceHolder>" ; } METHOD_6 ( org . apache . ibatis . session . IDENT_13 , java . lang . Object ) { java . lang . String id = new java . lang . StringBuilder ( INT_1 ) . append ( format ( ( ( short ) ( METHOD_10 ( ) ) ) ) ) . append ( format ( METHOD_11 ( ) ) ) . append ( format ( ( ( short ) ( ( METHOD_12 ( ) ) > > > 16 ) ) ) ) . append ( format ( METHOD_13 ( ) ) ) . append ( format ( METHOD_14 ( ) ) ) . append ( format ( METHOD_15 ( ) ) ) . toString ( ) ; return id ; }
org . junit . Assert . assertEquals ( INT_0 , list . size ( ) ) 