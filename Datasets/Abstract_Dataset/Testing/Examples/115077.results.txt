METHOD_0 ( ) { org . junit . IDENT_0 . METHOD_1 ( METHOD_2 ( ) , IDENT_1 ) ; java . util . concurrent . atomic . IDENT_2 IDENT_3 = new java . util . concurrent . atomic . METHOD_3 ( 0 ) ; class IDENT_4 extends org . eclipse . swt . IDENT_5 . IDENT_6 { METHOD_4 ( org . eclipse . swt . IDENT_5 . IDENT_7 IDENT_8 , java . lang . String name ) { ( IDENT_8 , name ) ; } @ org . eclipse . swt . tests . junit . Override public java . lang . Object function ( java . lang . Object [ ] IDENT_9 ) { java . lang . Double IDENT_10 = ( ( java . lang . Double ) ( IDENT_9 [ 0 ] ) ) ; IDENT_3 . set ( IDENT_10 . METHOD_5 ( ) ) ; return null ; } } java . lang . String IDENT_11 = STRING_0 + ( ( ( ( ( ( ( ( STRING_1 + STRING_2 ) + STRING_3 ) + STRING_4 ) + STRING_3 0 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) ; IDENT_8 . METHOD_6 ( IDENT_11 ) ; new METHOD_4 ( IDENT_8 , STRING_3 1 ) ; IDENT_8 . METHOD_7 ( IDENT_12 ) ; shell . METHOD_8 ( ) ; boolean IDENT_13 = METHOD_9 ( ( ) -> ( IDENT_3 . get ( ) ) == 5 ) ; java . lang . String message = STRING_3 2 ; "<AssertPlaceHolder>" ; } METHOD_9 ( java . util . function . IDENT_14 ) { return METHOD_9 ( IDENT_15 , ( 1000 * ( IDENT_16 ) ) ) ; }
org . junit . Assert . assertTrue ( message , IDENT_13 ) 