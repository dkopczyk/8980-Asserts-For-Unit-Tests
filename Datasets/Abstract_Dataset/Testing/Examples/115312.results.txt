METHOD_0 ( ) { java . util . List < IDENT_0 . IDENT_1 . IDENT_2 > IDENT_3 = new java . util . ArrayList < IDENT_0 . IDENT_1 . IDENT_2 > ( ) ; IDENT_3 . add ( new IDENT_0 . IDENT_1 . METHOD_1 ( new IDENT_0 . IDENT_4 . METHOD_2 ( ) , java . util . Arrays . < IDENT_0 . component . IDENT_5 > asList ( new IDENT_0 . IDENT_4 . METHOD_3 ( ) , new IDENT_0 . IDENT_4 . METHOD_4 ( ) ) , java . util . Arrays . asList ( new IDENT_0 . METHOD_5 ( STRING_0 ) , new IDENT_0 . METHOD_5 ( STRING_1 1 ) ) ) ) ; IDENT_3 . add ( new IDENT_0 . IDENT_1 . METHOD_1 ( new IDENT_0 . IDENT_4 . METHOD_2 ( ) , java . util . Arrays . < IDENT_0 . component . IDENT_5 > asList ( ) , java . util . Arrays . asList ( new IDENT_0 . METHOD_5 ( STRING_2 ) ) ) ) ; IDENT_3 . add ( new IDENT_0 . IDENT_1 . METHOD_1 ( new IDENT_0 . IDENT_4 . METHOD_6 ( ) , java . util . Arrays . < IDENT_0 . component . IDENT_5 > asList ( new IDENT_0 . IDENT_4 . METHOD_3 ( ) , new IDENT_0 . IDENT_4 . METHOD_4 ( ) ) , java . util . Arrays . asList ( new IDENT_0 . METHOD_5 ( STRING_3 ) , new IDENT_0 . METHOD_5 ( STRING_1 ) ) ) ) ; IDENT_3 . add ( new IDENT_0 . IDENT_1 . METHOD_1 ( new IDENT_0 . IDENT_4 . METHOD_6 ( ) , java . util . Arrays . < IDENT_0 . component . IDENT_5 > asList ( ) , java . util . Arrays . asList ( new IDENT_0 . METHOD_5 ( STRING_4 ) ) ) ) ; IDENT_0 . IDENT_1 IDENT_6 = new IDENT_0 . METHOD_7 ( IDENT_3 ) ; java . lang . String expected = ( ( ( ( ( ( ( ( ( STRING_1 0 + ( IDENT_7 ) ) + STRING_5 ) + ( IDENT_7 ) ) + STRING_6 ) + ( IDENT_7 ) ) + STRING_7 ) + ( IDENT_7 ) ) + STRING_8 ) + ( IDENT_7 ) ) + STRING_9 ; java . lang . String actual = IDENT_6 . toString ( ) ; "<AssertPlaceHolder>" ; } toString ( ) { return getValue ( IDENT_8 . IDENT_9 ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 