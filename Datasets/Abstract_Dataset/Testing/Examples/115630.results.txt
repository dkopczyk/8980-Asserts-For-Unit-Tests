METHOD_0 ( ) { com . google . common . io . IDENT_0 < java . io . IDENT_1 > IDENT_2 = com . google . common . io . IDENT_3 . METHOD_1 ( fr . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 , IDENT_8 . UTF_8 ) ; for ( java . lang . String line : com . google . common . io . IDENT_3 . METHOD_2 ( IDENT_2 ) ) { java . util . List < java . lang . String > elements = com . google . common . collect . Lists . newArrayList ( fr . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_9 . split ( line ) ) ; if ( ( elements . size ( ) ) != 2 ) { continue ; } java . lang . String code = elements . get ( 1 ) . METHOD_3 ( ) ; if ( ( code . length ( ) ) != 2 ) { continue ; } "<AssertPlaceHolder>" ; } } METHOD_4 ( java . lang . String ) { java . lang . String IDENT_10 = ( code == null ) ? null : code . METHOD_3 ( ) ; if ( ( IDENT_10 == null ) || ( ( IDENT_10 . length ( ) ) != 2 ) ) { return null ; } for ( fr . IDENT_4 . IDENT_5 . IDENT_11 IDENT_12 : fr . IDENT_4 . IDENT_5 . IDENT_11 . values ( ) ) { if ( IDENT_12 . getCode ( ) . equals ( IDENT_10 ) ) { return IDENT_12 ; } } return null ; }
org . junit . Assert . assertNotNull ( fr . IDENT_4 . IDENT_5 . IDENT_11 . METHOD_4 ( code ) ) 