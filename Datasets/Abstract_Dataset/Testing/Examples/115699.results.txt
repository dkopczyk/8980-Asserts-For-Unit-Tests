METHOD_0 ( ) { METHOD_1 ( STRING_0 , STRING_1 ) ; java . sql . IDENT_0 statement = IDENT_1 . METHOD_2 ( ) ; statement . execute ( STRING_2 , IDENT_0 . IDENT_2 ) ; try ( java . sql . ResultSet rs = statement . METHOD_3 ( ) ) { "<AssertPlaceHolder>" ; } } next ( ) { if ( IDENT_3 ) { throw new java . sql . METHOD_4 ( STRING_3 , STRING_4 ) ; } if ( ( IDENT_4 ) < ( ( IDENT_5 ) - 1 ) ) { ( IDENT_4 ) ++ ; return true ; } else { if ( ( streaming ) && ( ! ( IDENT_6 ) ) ) { IDENT_7 . METHOD_5 ( ) ; try { if ( ! ( IDENT_6 ) ) { METHOD_6 ( ) ; } } catch ( java . io . IOException IDENT_8 ) { throw METHOD_7 ( IDENT_8 ) ; } finally { METHOD_5 . METHOD_8 ( ) ; } if ( ( IDENT_9 ) == ( IDENT_10 ) ) { IDENT_4 = 0 ; return ( IDENT_5 ) > 0 ; } else { ( IDENT_4 ) ++ ; return ( IDENT_5 ) > ( IDENT_4 ) ; } } IDENT_4 = IDENT_5 ; return false ; } }
org . junit . Assert . assertTrue ( rs . next ( ) ) 