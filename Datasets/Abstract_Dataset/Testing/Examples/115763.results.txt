METHOD_0 ( ) { java . util . Map < ch . IDENT_0 . IDENT_1 . IDENT_2 , java . lang . Integer > IDENT_3 = new ch . IDENT_0 . IDENT_1 . IDENT_4 < ch . IDENT_0 . IDENT_1 . IDENT_2 , java . lang . Integer > ( ) ; for ( ch . IDENT_0 . IDENT_1 . IDENT_5 IDENT_6 : db . METHOD_1 ( ) ) { ch . IDENT_0 . IDENT_1 . IDENT_2 IDENT_7 = IDENT_6 . METHOD_2 ( ) ; java . lang . Integer IDENT_8 = IDENT_3 . get ( IDENT_7 ) ; IDENT_3 . put ( IDENT_7 , ( IDENT_8 == null ? 1 : IDENT_8 + 1 ) ) ; } ch . IDENT_0 . IDENT_1 . IDENT_2 IDENT_9 = null ; int IDENT_10 = 0 ; for ( ch . IDENT_0 . IDENT_1 . Entry < ch . IDENT_0 . IDENT_1 . IDENT_2 , java . lang . Integer > entry : IDENT_3 . entrySet ( ) ) { if ( ( entry . getValue ( ) ) > IDENT_10 ) { IDENT_9 = entry . getKey ( ) ; IDENT_10 = entry . getValue ( ) ; } } ch . IDENT_0 . IDENT_1 . IDENT_11 < ch . IDENT_0 . IDENT_1 . IDENT_5 > group = METHOD_3 ( group ( db . METHOD_1 ( ) , METHOD_4 ( METHOD_5 ( ch . IDENT_0 . IDENT_1 . IDENT_5 . class ) . METHOD_2 ( ) ) ) . METHOD_6 ( ) , METHOD_5 ( ch . IDENT_0 . IDENT_1 . IDENT_11 . class ) . METHOD_7 ( ) ) ; ch . IDENT_0 . IDENT_1 . IDENT_2 IDENT_12 = group . first ( ) . METHOD_2 ( ) ; int IDENT_8 = group . METHOD_7 ( ) ; "<AssertPlaceHolder>" ; System . out . println ( ( STRING_0 + IDENT_9 ) ) ; System . out . println ( ( STRING_1 + IDENT_12 ) ) ; } METHOD_7 ( ) { return METHOD_8 ( ) . size ( ) ; }
org . junit . Assert . assertEquals ( IDENT_10 , IDENT_8 ) 