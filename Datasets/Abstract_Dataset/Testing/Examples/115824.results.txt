METHOD_0 ( ) { com . IDENT_0 . client . IDENT_1 . IDENT_2 < com . IDENT_0 . client . IDENT_3 . IDENT_4 . IDENT_5 , java . lang . String > IDENT_6 = client . METHOD_1 ( com . IDENT_0 . client . IDENT_3 . IDENT_4 . IDENT_5 . class , java . lang . String . class ) ; com . IDENT_0 . client . IDENT_3 . IDENT_4 . IDENT_5 IDENT_7 = null ; long IDENT_8 = METHOD_2 ( ) ; java . lang . String IDENT_9 = new java . lang . String ( ( "" + IDENT_8 ) ) ; IDENT_6 . write ( this . METHOD_3 ( IDENT_8 , IDENT_9 ) , STRING_0 , STRING_1 ) ; "<AssertPlaceHolder>" ; com . IDENT_0 . client . query . IDENT_10 query = client . METHOD_4 ( ) . METHOD_5 ( ) ; query . METHOD_6 ( IDENT_9 ) ; com . IDENT_0 . client . IDENT_1 . IDENT_11 < com . IDENT_0 . client . IDENT_3 . IDENT_4 . IDENT_5 > IDENT_12 = IDENT_6 . search ( query , 1 ) ; java . util . Iterator < com . IDENT_0 . client . IDENT_3 . IDENT_4 . IDENT_5 > IDENT_13 = IDENT_12 . iterator ( ) ; while ( IDENT_13 . hasNext ( ) ) { IDENT_7 = IDENT_13 . next ( ) ; METHOD_7 ( IDENT_7 , IDENT_9 , IDENT_8 ) ; } } exists ( java . lang . String ) { return services . exists ( ( ( ( com . IDENT_0 . client . impl . IDENT_14 . IDENT_15 ) + "/" ) + IDENT_16 ) ) ; }
org . junit . Assert . assertTrue ( IDENT_6 . exists ( IDENT_9 ) ) 