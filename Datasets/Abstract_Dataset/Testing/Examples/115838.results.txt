METHOD_0 ( ) { com . IDENT_0 . client . IDENT_1 . IDENT_2 IDENT_3 = IDENT_4 . client . METHOD_1 ( ) ; IDENT_3 . METHOD_2 ( IDENT_5 . IDENT_6 ) ; com . IDENT_0 . client . IDENT_7 IDENT_8 = com . IDENT_0 . client . test . IDENT_4 . METHOD_3 ( ) ; com . IDENT_0 . client . IDENT_1 . IDENT_2 IDENT_9 = IDENT_8 . METHOD_1 ( ) ; IDENT_9 . METHOD_2 ( IDENT_5 . IDENT_6 ) ; java . lang . String IDENT_10 = STRING_0 ; java . lang . String IDENT_11 = STRING_1 ; try { IDENT_9 . write ( STRING_2 , new com . IDENT_0 . client . io . METHOD_4 ( IDENT_10 ) ) ; org . junit . Assert . fail ( STRING_3 ) ; } catch ( com . IDENT_0 . client . IDENT_12 e ) { } com . IDENT_0 . client . IDENT_13 tx = null ; try { tx = IDENT_4 . client . METHOD_5 ( ) ; IDENT_3 . write ( STRING_4 , new com . IDENT_0 . client . io . METHOD_4 ( IDENT_10 ) , tx ) ; try { IDENT_9 . read ( STRING_4 , new com . IDENT_0 . client . io . METHOD_4 ( ) ) ; org . junit . Assert . fail ( STRING_5 ) ; } catch ( com . IDENT_0 . client . IDENT_14 e ) { } tx . METHOD_6 ( ) ; tx = null ; try { IDENT_3 . read ( STRING_4 , new com . IDENT_0 . client . io . METHOD_4 ( ) ) ; org . junit . Assert . fail ( STRING_6 ) ; } catch ( com . IDENT_0 . client . IDENT_14 e ) { } tx = IDENT_4 . client . METHOD_5 ( ) ; IDENT_3 . write ( STRING_4 , new com . IDENT_0 . client . io . METHOD_4 ( IDENT_10 ) , tx ) ; IDENT_3 . METHOD_7 ( STRING_4 , new com . IDENT_0 . client . io . METHOD_4 ( IDENT_11 ) , tx ) ; tx . commit ( ) ; tx = null ; java . lang . String IDENT_15 = IDENT_3 . METHOD_8 ( STRING_4 , java . lang . String . class ) ; "<AssertPlaceHolder>" ; try { IDENT_9 . delete ( STRING_4 ) ; org . junit . Assert . fail ( STRING_7 ) ; } catch ( com . IDENT_0 . client . IDENT_12 e ) { } tx = IDENT_4 . client . METHOD_5 ( ) ; IDENT_3 . delete ( STRING_4 , tx ) ; tx . commit ( ) ; tx = null ; try { IDENT_3 . read ( STRING_4 , new com . IDENT_0 . client . io . METHOD_4 ( ) ) ; org . junit . Assert . fail ( STRING_6 ) ; } catch ( com . IDENT_0 . client . IDENT_14 e ) { } } finally { if ( tx != null ) { try { tx . METHOD_6 ( ) ; } catch ( java . lang . Exception e ) { } tx = null ; } try { IDENT_3 . delete ( STRING_4 ) ; } catch ( java . lang . Exception e ) { } } } METHOD_8 ( java . lang . String , java . lang . Class ) { return METHOD_8 ( uri , as , null ) ; }
org . junit . Assert . assertEquals ( ( ( IDENT_10 + "\n" ) + IDENT_11 ) , IDENT_15 ) 