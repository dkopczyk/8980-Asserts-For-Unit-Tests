test ( ) { java . io . InputStream IDENT_0 = IDENT_1 . tools . IDENT_2 . IDENT_3 . class . getResourceAsStream ( STRING_0 ) ; IDENT_1 . IDENT_4 . IDENT_5 . IDENT_6 IDENT_7 ; try { IDENT_7 = IDENT_1 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_0 ( IDENT_0 , "test" ) ; IDENT_1 . tools . IDENT_2 . IDENT_8 IDENT_9 = new IDENT_1 . tools . IDENT_2 . METHOD_1 ( IDENT_7 , true , true , 2 ) ; java . io . InputStream IDENT_10 = IDENT_1 . tools . IDENT_2 . IDENT_3 . class . getResourceAsStream ( STRING_1 ) ; java . io . IDENT_11 IDENT_12 = new java . io . METHOD_2 ( new java . io . METHOD_3 ( IDENT_10 , STRING_2 ) ) ; IDENT_9 . METHOD_4 ( IDENT_12 , STRING_3 ) ; for ( int i = 0 ; i < 5 ; i ++ ) { System . out . println ( ( STRING_4 + i ) ) ; IDENT_9 . METHOD_5 ( ) ; } IDENT_1 . IDENT_13 . IDENT_14 IDENT_15 = IDENT_9 . METHOD_6 ( 10 ) ; java . lang . String IDENT_16 = STRING_5 ; java . io . File IDENT_17 = IDENT_18 . METHOD_7 ( IDENT_16 ) ; System . out . println ( ( ( STRING_6 + ( IDENT_17 . getAbsolutePath ( ) ) ) + ( IDENT_17 . getName ( ) ) ) ) ; IDENT_9 . save ( IDENT_15 , ( ( IDENT_17 . getAbsolutePath ( ) ) + ( IDENT_17 . getName ( ) ) ) ) ; "<AssertPlaceHolder>" ; } catch ( java . io . IOException e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( e . toString ( ) ) ; } catch ( IDENT_1 . exceptions . IDENT_19 e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( e . toString ( ) ) ; } } getName ( ) { return name ; }
org . junit . Assert . assertTrue ( IDENT_17 . exists ( ) ) 