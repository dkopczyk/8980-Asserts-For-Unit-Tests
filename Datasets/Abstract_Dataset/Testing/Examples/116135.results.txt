METHOD_0 ( ) { java . lang . String IDENT_0 = ( utils . METHOD_1 ( ) ) + STRING_0 ; org . IDENT_1 . core . utils . IDENT_2 . IDENT_3 IDENT_4 = new org . IDENT_1 . core . utils . IDENT_2 . IDENT_3 . Builder ( ) . setName ( STRING_1 ) . METHOD_2 ( IDENT_5 . IDENT_6 ) . METHOD_3 ( "name" , java . lang . String . class ) . create ( ) ; org . locationtech . jts . geom . IDENT_7 [ ] IDENT_8 = new org . locationtech . jts . geom . IDENT_7 [ ] { new org . locationtech . jts . geom . METHOD_4 ( 0 , 0 ) , new org . locationtech . jts . geom . METHOD_4 ( 0 , 1 ) , new org . locationtech . jts . geom . METHOD_4 ( 1 , 1 ) , new org . locationtech . jts . geom . METHOD_4 ( 0 , 0 ) } ; org . opengis . feature . simple . IDENT_9 f = IDENT_4 . METHOD_5 ( IDENT_8 ) ; java . util . Collection < org . opengis . feature . simple . IDENT_9 > IDENT_10 = new java . util . ArrayList < org . opengis . feature . simple . IDENT_9 > ( ) ; IDENT_10 . add ( f ) ; org . locationtech . jts . geom . IDENT_11 IDENT_12 = ( ( org . locationtech . jts . geom . IDENT_11 ) ( f . METHOD_6 ( ) ) ) ; org . IDENT_1 . core . utils . IDENT_2 . IDENT_13 . METHOD_7 ( IDENT_10 , IDENT_0 ) ; org . geotools . data . simple . IDENT_14 IDENT_15 = org . IDENT_1 . core . utils . IDENT_2 . IDENT_16 . METHOD_8 ( IDENT_0 ) ; org . geotools . data . simple . IDENT_17 IDENT_18 = IDENT_15 . METHOD_9 ( ) ; org . geotools . data . simple . IDENT_19 IDENT_20 = IDENT_18 . METHOD_10 ( ) ; org . opengis . feature . simple . IDENT_9 IDENT_21 = IDENT_20 . next ( ) ; org . locationtech . jts . geom . IDENT_11 IDENT_22 = ( ( org . locationtech . jts . geom . IDENT_11 ) ( IDENT_21 . METHOD_6 ( ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_11 ( ) { org . IDENT_1 . IDENT_23 . IDENT_24 . utils . List < org . IDENT_1 . IDENT_23 . IDENT_24 . utils . List < java . lang . Double > > result = new org . IDENT_1 . IDENT_23 . IDENT_24 . utils . ArrayList ( ) ; for ( org . IDENT_1 . api . core . IDENT_25 . IDENT_26 IDENT_27 : IDENT_8 ) { result . add ( org . IDENT_1 . IDENT_23 . IDENT_24 . utils . Arrays . asList ( IDENT_27 . METHOD_12 ( ) , IDENT_27 . METHOD_13 ( ) ) ) ; } return result ; }
org . junit . Assert . assertEquals ( IDENT_12 . METHOD_11 ( ) . length , IDENT_22 . METHOD_11 ( ) . length ) 