METHOD_0 ( ) { METHOD_1 ( IDENT_0 . IDENT_1 ) ; network . IDENT_2 . core . IDENT_3 . IDENT_4 . messages . impl . message . IDENT_5 . IDENT_0 object = IDENT_6 . METHOD_2 ( network . IDENT_2 . core . IDENT_3 . IDENT_4 . messages . impl . IDENT_7 . METHOD_3 ( IDENT_8 ) , null ) ; java . util . List < byte [ ] > IDENT_9 = new java . util . ArrayList ( ) ; IDENT_9 . add ( IDENT_8 . get ( 0 ) . METHOD_4 ( ) ) ; for ( org . IDENT_10 . core . IDENT_11 key : IDENT_8 ) { network . IDENT_2 . core . IDENT_3 . IDENT_4 . messages . interfaces . helper . IDENT_12 IDENT_13 = new network . IDENT_2 . core . IDENT_3 . IDENT_4 . messages . impl . METHOD_5 ( ) ; network . IDENT_2 . core . IDENT_3 . IDENT_4 . messages . impl . message . IDENT_5 . IDENT_14 IDENT_15 = IDENT_13 . METHOD_6 ( key , object ) ; if ( IDENT_15 . IDENT_16 ) { IDENT_9 . add ( key . METHOD_4 ( ) ) ; } else { IDENT_9 . add ( IDENT_15 . IDENT_17 . METHOD_4 ( ) ) ; object = IDENT_15 . IDENT_18 ; } } for ( int i = 0 ; i < ( IDENT_8 . size ( ) ) ; ++ i ) { org . IDENT_10 . core . IDENT_11 key = IDENT_8 . get ( i ) ; byte [ ] IDENT_19 = IDENT_9 . get ( i ) ; System . out . println ( ( ( ( network . IDENT_2 . core . IDENT_20 . IDENT_21 . METHOD_7 ( key . METHOD_4 ( ) ) ) + " " ) + ( network . IDENT_2 . core . IDENT_20 . IDENT_21 . METHOD_7 ( IDENT_19 ) ) ) ) ; "<AssertPlaceHolder>" ; } } METHOD_7 ( byte [ ] ) { char [ ] IDENT_22 = new char [ ( bytes . length ) * 2 ] ; for ( int j = 0 ; j < ( bytes . length ) ; j ++ ) { int v = ( bytes [ j ] ) & 255 ; IDENT_22 [ ( j * 2 ) ] = network . IDENT_2 . core . IDENT_20 . IDENT_21 . IDENT_23 [ ( v > > > 4 ) ] ; IDENT_22 [ ( ( j * 2 ) + 1 ) ] = network . IDENT_2 . core . IDENT_20 . IDENT_21 . IDENT_23 [ ( v & 15 ) ] ; } return new java . lang . String ( IDENT_22 ) ; }
org . junit . Assert . assertTrue ( java . util . Arrays . equals ( key . METHOD_4 ( ) , IDENT_19 ) ) 