METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . core . IDENT_2 block = new com . IDENT_0 . IDENT_1 . core . METHOD_1 ( com . IDENT_0 . IDENT_1 . core . IDENT_3 . params , com . IDENT_0 . IDENT_1 . core . IDENT_3 . IDENT_4 ) ; com . IDENT_0 . IDENT_1 . core . IDENT_5 tx = block . IDENT_6 . get ( 1 ) ; java . io . ByteArrayOutputStream IDENT_7 = new java . io . ByteArrayOutputStream ( ) ; java . io . IDENT_8 IDENT_9 = new java . io . METHOD_2 ( IDENT_7 ) ; IDENT_9 . METHOD_3 ( tx ) ; IDENT_9 . close ( ) ; byte [ ] IDENT_10 = IDENT_7 . toByteArray ( ) ; java . io . IDENT_11 IDENT_12 = new java . io . METHOD_4 ( new java . io . ByteArrayInputStream ( IDENT_10 ) ) ; com . IDENT_0 . IDENT_1 . core . IDENT_5 IDENT_13 = ( ( com . IDENT_0 . IDENT_1 . core . IDENT_5 ) ( IDENT_12 . METHOD_5 ( ) ) ) ; IDENT_12 . close ( ) ; "<AssertPlaceHolder>" ; } close ( ) { if ( IDENT_14 ) { return ; } IDENT_14 = true ; for ( java . util . concurrent . IDENT_15 < com . IDENT_16 . IDENT_17 . IDENT_18 . IDENT_19 > f : IDENT_20 . values ( ) ) { if ( f . METHOD_6 ( ) ) { try { com . IDENT_16 . IDENT_17 . IDENT_18 . IDENT_19 conn = f . get ( ) ; conn . METHOD_7 ( ) ; } catch ( java . lang . IDENT_21 e ) { com . IDENT_16 . IDENT_17 . IDENT_18 . IDENT_22 . logger . METHOD_8 ( STRING_0 ) ; } catch ( java . util . concurrent . IDENT_23 e ) { com . IDENT_16 . IDENT_17 . IDENT_18 . IDENT_22 . logger . METHOD_8 ( ( STRING_1 + ( e . METHOD_9 ( ) ) ) ) ; } } else { f . METHOD_10 ( true ) ; } } IDENT_20 . METHOD_11 ( ) ; IDENT_24 . METHOD_12 ( ) ; }
org . junit . Assert . assertEquals ( tx , IDENT_13 ) 