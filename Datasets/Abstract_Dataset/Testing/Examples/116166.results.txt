METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . core . IDENT_2 tx = METHOD_1 ( params , com . IDENT_0 . IDENT_1 . core . IDENT_3 , IDENT_4 ) ; com . IDENT_0 . IDENT_1 . core . IDENT_5 IDENT_6 = new com . IDENT_0 . IDENT_1 . core . METHOD_2 ( ) . METHOD_3 ( params ) ; com . IDENT_0 . IDENT_1 . core . IDENT_7 output = new com . IDENT_0 . IDENT_1 . core . METHOD_4 ( params , tx , valueOf ( 0 , 5 ) , IDENT_6 ) ; tx . METHOD_5 ( output ) ; METHOD_6 ( tx , IDENT_8 . IDENT_9 . IDENT_10 ) ; com . IDENT_0 . IDENT_1 . core . IDENT_2 IDENT_11 = new com . IDENT_0 . IDENT_1 . core . METHOD_7 ( params ) ; IDENT_11 . METHOD_8 ( output ) ; IDENT_11 . METHOD_5 ( new com . IDENT_0 . IDENT_1 . core . METHOD_4 ( params , IDENT_11 , valueOf ( 0 , 5 ) , IDENT_4 ) ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( com . IDENT_0 . IDENT_1 . core . IDENT_12 ) { METHOD_10 ( ) ; com . IDENT_0 . IDENT_1 . core . IDENT_13 v = IDENT_13 . IDENT_14 ; for ( com . IDENT_0 . IDENT_1 . core . IDENT_15 input : IDENT_16 ) { com . IDENT_0 . IDENT_1 . core . METHOD_4 IDENT_17 = input . METHOD_11 ( IDENT_18 . METHOD_12 ( IDENT_19 . IDENT_20 ) ) ; if ( IDENT_17 == null ) IDENT_17 = input . METHOD_11 ( IDENT_18 . METHOD_12 ( IDENT_19 . IDENT_21 ) ) ; if ( IDENT_17 == null ) IDENT_17 = input . METHOD_11 ( IDENT_18 . METHOD_12 ( IDENT_19 . IDENT_22 ) ) ; if ( IDENT_17 == null ) continue ; if ( ! ( IDENT_17 . METHOD_13 ( IDENT_18 ) ) ) continue ; v = v . add ( IDENT_17 . getValue ( ) ) ; } return v ; }
org . junit . Assert . assertEquals ( com . IDENT_0 . IDENT_1 . core . IDENT_14 , IDENT_11 . METHOD_9 ( IDENT_18 ) ) 