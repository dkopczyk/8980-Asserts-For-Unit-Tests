METHOD_0 ( ) { METHOD_1 ( ) ; java . util . concurrent . IDENT_0 < java . lang . Integer > IDENT_1 = new java . util . concurrent . IDENT_0 < java . lang . Integer > ( ) { @ org . apache . IDENT_2 . IDENT_3 . Override public org . apache . IDENT_2 . IDENT_3 . Integer call ( ) throws org . apache . IDENT_2 . IDENT_3 . Exception { return - 1 ; } } ; java . lang . Integer result = cache . get ( 1000 , IDENT_1 ) ; "<AssertPlaceHolder>" ; } get ( IDENT_4 , java . util . concurrent . IDENT_0 ) { return super . get ( key , new java . util . concurrent . IDENT_0 < IDENT_5 > ( ) { @ org . apache . IDENT_2 . IDENT_3 . Override public IDENT_5 call ( ) throws org . apache . IDENT_2 . IDENT_3 . Exception { IDENT_5 result = METHOD_2 ( key ) ; if ( result == null ) { result = IDENT_6 . call ( ) ; } return result ; } } ) ; }
org . junit . Assert . assertEquals ( new java . lang . Integer ( ( - 1 ) ) , result ) 