METHOD_0 ( ) { java . lang . String state = org . apache . commons . lang . IDENT_0 . METHOD_1 ( 10 ) ; java . lang . String key = org . apache . commons . lang . IDENT_0 . METHOD_1 ( 10 ) ; java . lang . String IDENT_1 = org . apache . commons . lang . IDENT_0 . METHOD_1 ( 10 ) ; com . IDENT_2 . IDENT_3 . commons . IDENT_4 . IDENT_5 . IDENT_6 api = new com . IDENT_2 . IDENT_3 . commons . IDENT_4 . IDENT_5 . METHOD_2 ( state ) ; org . IDENT_7 . IDENT_8 . IDENT_9 service = new org . IDENT_7 . builder . METHOD_3 ( ) . provider ( api ) . METHOD_4 ( key ) . METHOD_5 ( IDENT_1 ) . METHOD_6 ( STRING_0 ) . METHOD_7 ( STRING_1 ) . build ( ) ; java . lang . String expected = ( ( ( ( ( ( STRING_2 + key ) + STRING_3 ) + state ) + STRING_4 ) + ( org . IDENT_7 . utils . IDENT_10 . encode ( STRING_0 ) ) ) + STRING_5 ) + STRING_6 ; "<AssertPlaceHolder>" ; } METHOD_8 ( org . IDENT_7 . model . IDENT_11 ) { org . IDENT_7 . utils . IDENT_12 . METHOD_9 ( config . METHOD_10 ( ) , STRING_7 ) ; if ( config . METHOD_11 ( ) ) { return java . lang . String . format ( com . IDENT_2 . IDENT_3 . commons . IDENT_4 . IDENT_5 . METHOD_2 . IDENT_13 , config . METHOD_12 ( ) , org . IDENT_7 . utils . IDENT_10 . encode ( state ) , org . IDENT_7 . utils . IDENT_10 . encode ( config . METHOD_10 ( ) ) , org . IDENT_7 . utils . IDENT_10 . encode ( config . METHOD_13 ( ) ) ) ; } else { return java . lang . String . format ( com . IDENT_2 . IDENT_3 . commons . IDENT_4 . IDENT_5 . METHOD_2 . IDENT_14 , config . METHOD_12 ( ) , org . IDENT_7 . utils . IDENT_10 . encode ( state ) , org . IDENT_7 . utils . IDENT_10 . encode ( config . METHOD_10 ( ) ) ) ; } }
org . junit . Assert . assertEquals ( expected , service . METHOD_8 ( null ) ) 