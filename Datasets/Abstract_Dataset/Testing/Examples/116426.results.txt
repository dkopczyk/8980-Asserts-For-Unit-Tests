METHOD_0 ( ) { com . amazonaws . services . IDENT_0 . model . IDENT_1 hash = METHOD_1 ( ) ; java . util . Map < java . lang . String , com . amazonaws . services . IDENT_0 . model . IDENT_2 > IDENT_3 = new java . util . HashMap < java . lang . String , com . amazonaws . services . IDENT_0 . model . IDENT_2 > ( ) ; com . amazonaws . services . IDENT_0 . model . IDENT_2 update = new com . amazonaws . services . IDENT_0 . model . METHOD_2 ( ) ; update . METHOD_3 ( STRING_0 ) ; update . setValue ( hash ) ; IDENT_3 . put ( STRING_1 , update ) ; com . amazonaws . services . IDENT_0 . model . IDENT_4 request = new com . amazonaws . services . IDENT_0 . model . METHOD_4 ( ) ; request . METHOD_5 ( METHOD_6 ( STRING_2 , hash ) ) ; request . METHOD_7 ( IDENT_3 ) ; try { METHOD_8 ( ) . METHOD_9 ( request ) ; "<AssertPlaceHolder>" ; } catch ( com . amazonaws . IDENT_5 IDENT_6 ) { } } METHOD_9 ( com . amazonaws . services . IDENT_7 . model . METHOD_4 ) { com . amazonaws . http . IDENT_8 IDENT_9 = METHOD_10 ( IDENT_10 ) ; com . amazonaws . util . IDENT_11 IDENT_12 = IDENT_9 . METHOD_11 ( ) ; com . amazonaws . IDENT_13 < com . amazonaws . services . IDENT_7 . model . METHOD_4 > request = METHOD_12 ( IDENT_10 , new com . amazonaws . services . IDENT_7 . model . transform . METHOD_13 ( ) , IDENT_9 . METHOD_11 ( ) ) ; request . METHOD_14 ( IDENT_12 ) ; com . amazonaws . transform . IDENT_14 < com . amazonaws . services . IDENT_7 . model . IDENT_15 , com . amazonaws . transform . IDENT_16 > IDENT_17 = new com . amazonaws . services . IDENT_7 . model . transform . METHOD_15 ( ) ; com . amazonaws . http . IDENT_18 < com . amazonaws . services . IDENT_7 . model . IDENT_15 > IDENT_19 = new com . amazonaws . http . IDENT_18 < com . amazonaws . services . IDENT_7 . model . IDENT_15 > ( IDENT_17 ) ; return invoke ( request , IDENT_19 , IDENT_9 ) ; }
org . junit . Assert . assertTrue ( false ) 