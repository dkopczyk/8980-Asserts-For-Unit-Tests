METHOD_0 ( ) { METHOD_1 ( tableName ) ; com . amazonaws . services . IDENT_0 . model . IDENT_1 hash = METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( new com . amazonaws . services . IDENT_0 . model . METHOD_5 ( ) . METHOD_6 ( tableName ) . METHOD_7 ( METHOD_8 ( hash ) ) ) ; com . amazonaws . services . IDENT_0 . model . IDENT_2 request = new com . amazonaws . services . IDENT_0 . model . METHOD_9 ( ) . METHOD_10 ( METHOD_11 ( STRING_0 , hash ) ) ; try { METHOD_3 ( ) . METHOD_12 ( request ) ; "<AssertPlaceHolder>" ; } catch ( com . amazonaws . IDENT_3 IDENT_4 ) { } } METHOD_12 ( com . amazonaws . services . IDENT_5 . model . METHOD_9 ) { com . amazonaws . http . IDENT_6 IDENT_7 = METHOD_13 ( IDENT_8 ) ; com . amazonaws . util . IDENT_9 IDENT_10 = IDENT_7 . METHOD_14 ( ) ; com . amazonaws . IDENT_11 < com . amazonaws . services . IDENT_5 . model . METHOD_9 > request = METHOD_15 ( IDENT_8 , new com . amazonaws . services . IDENT_5 . model . transform . METHOD_16 ( ) , IDENT_7 . METHOD_14 ( ) ) ; request . METHOD_17 ( IDENT_10 ) ; com . amazonaws . transform . IDENT_12 < com . amazonaws . services . IDENT_5 . model . IDENT_13 , com . amazonaws . transform . IDENT_14 > IDENT_15 = new com . amazonaws . services . IDENT_5 . model . transform . METHOD_18 ( ) ; com . amazonaws . http . IDENT_16 < com . amazonaws . services . IDENT_5 . model . IDENT_13 > IDENT_17 = new com . amazonaws . http . IDENT_16 < com . amazonaws . services . IDENT_5 . model . IDENT_13 > ( IDENT_15 ) ; return invoke ( request , IDENT_17 , IDENT_7 ) ; }
org . junit . Assert . assertTrue ( false ) 