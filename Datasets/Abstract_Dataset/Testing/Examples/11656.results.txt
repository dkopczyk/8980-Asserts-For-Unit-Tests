METHOD_0 ( ) { org . apache . IDENT_0 . IDENT_1 . IDENT_2 . crypto . IDENT_3 . IDENT_4 client = new org . apache . IDENT_0 . IDENT_1 . IDENT_2 . crypto . IDENT_3 . METHOD_1 ( ) ; org . apache . IDENT_0 . IDENT_1 . IDENT_2 . crypto . IDENT_3 . IDENT_5 server = new org . apache . IDENT_0 . IDENT_1 . IDENT_2 . crypto . IDENT_3 . METHOD_2 ( ) ; byte [ ] IDENT_6 = client . init ( IDENT_7 . IDENT_8 ) . METHOD_3 ( ) ; byte [ ] IDENT_9 = server . METHOD_4 ( IDENT_6 ) . METHOD_3 ( ) ; server . METHOD_5 ( null , null , IDENT_10 . IDENT_11 ) ; client . METHOD_6 ( IDENT_9 ) ; client . METHOD_5 ( null , null , IDENT_10 . IDENT_11 ) ; byte [ ] IDENT_12 = STRING_0 . getBytes ( ) ; byte [ ] IDENT_13 = server . METHOD_7 ( IDENT_12 , IDENT_14 . IDENT_15 ) ; byte [ ] IDENT_16 = client . METHOD_8 ( IDENT_13 , IDENT_14 . IDENT_15 ) ; "<AssertPlaceHolder>" ; } equals ( java . security . IDENT_17 , java . security . IDENT_17 ) { if ( ( IDENT_18 == null ) || ( IDENT_19 == null ) ) { return ( IDENT_18 == null ) && ( IDENT_19 == null ) ; } java . util . Set < java . lang . String > IDENT_20 = org . apache . IDENT_0 . util . IDENT_21 . METHOD_9 ( IDENT_18 ) ; java . util . Set < java . lang . String > IDENT_22 = org . apache . IDENT_0 . util . IDENT_21 . METHOD_9 ( IDENT_19 ) ; if ( IDENT_20 . equals ( IDENT_22 ) ) { for ( java . lang . String s : IDENT_20 ) { if ( ( IDENT_18 . METHOD_10 ( s ) ) != ( IDENT_19 . METHOD_10 ( s ) ) ) { return false ; } if ( ( IDENT_18 . METHOD_11 ( s ) ) != ( IDENT_19 . METHOD_11 ( s ) ) ) { return false ; } if ( IDENT_18 . METHOD_10 ( s ) ) { java . security . IDENT_23 . IDENT_24 [ ] IDENT_25 = IDENT_18 . METHOD_12 ( s ) ; java . security . IDENT_23 . IDENT_24 [ ] IDENT_26 = IDENT_19 . METHOD_12 ( s ) ; if ( ! ( java . util . Arrays . equals ( IDENT_25 , IDENT_26 ) ) ) { return false ; } java . security . IDENT_23 . IDENT_24 IDENT_27 = IDENT_18 . METHOD_13 ( s ) ; java . security . IDENT_23 . IDENT_24 IDENT_28 = IDENT_19 . METHOD_13 ( s ) ; if ( ! ( IDENT_27 . equals ( IDENT_28 ) ) ) { return false ; } } } } return true ; }
org . junit . Assert . assertTrue ( java . util . Arrays . equals ( IDENT_12 , IDENT_16 ) ) 