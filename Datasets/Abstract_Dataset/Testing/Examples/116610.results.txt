METHOD_0 ( ) { org . springframework . context . support . IDENT_0 IDENT_1 = new org . springframework . context . support . METHOD_1 ( new java . lang . String [ ] { STRING_0 } ) ; try { org . IDENT_2 . IDENT_3 . IDENT_4 [ ] IDENT_5 = org . IDENT_2 . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_2 ( ) ; for ( org . IDENT_2 . IDENT_3 . IDENT_4 IDENT_9 : IDENT_5 ) { org . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_10 IDENT_11 = IDENT_9 . METHOD_3 ( ) ; try { org . IDENT_2 . IDENT_3 . IDENT_12 IDENT_13 = IDENT_9 . newInstance ( IDENT_1 ) ; "<AssertPlaceHolder>" ; org . IDENT_2 . IDENT_6 . IDENT_7 . IDENT_14 . log . info ( ( ( STRING_1 + IDENT_11 ) + STRING_2 ) ) ; } catch ( java . lang . Exception ex ) { java . lang . String IDENT_15 = ( ( IDENT_9 . getClass ( ) . METHOD_4 ( ) ) + STRING_3 ) + IDENT_11 ; org . IDENT_2 . IDENT_6 . IDENT_7 . IDENT_14 . log . error ( IDENT_15 , ex ) ; org . junit . Assert . fail ( IDENT_15 ) ; } } } finally { IDENT_1 . METHOD_5 ( ) ; } } newInstance ( org . springframework . context . support . IDENT_0 ) { org . IDENT_2 . IDENT_16 . data . IDENT_17 IDENT_18 = context . METHOD_6 ( STRING_4 , org . IDENT_2 . IDENT_16 . data . IDENT_17 . class ) ; com . IDENT_19 . IDENT_20 . IDENT_21 . IDENT_22 IDENT_23 = context . METHOD_6 ( STRING_5 , com . IDENT_19 . IDENT_20 . IDENT_21 . IDENT_22 . class ) ; com . IDENT_19 . IDENT_20 . IDENT_24 . IDENT_25 IDENT_26 = context . METHOD_6 ( STRING_6 , com . IDENT_19 . IDENT_20 . IDENT_24 . IDENT_25 . class ) ; return new org . IDENT_2 . IDENT_3 . IDENT_27 . IDENT_28 . METHOD_7 ( IDENT_23 , IDENT_26 , IDENT_18 ) ; }
org . junit . Assert . assertNotNull ( ( ( ( IDENT_9 . getClass ( ) . METHOD_4 ( ) ) + STRING_3 ) + IDENT_11 ) , IDENT_13 ) 