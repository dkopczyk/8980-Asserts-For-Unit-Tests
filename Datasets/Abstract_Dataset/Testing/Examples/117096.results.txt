METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 expected = new com . IDENT_0 . IDENT_1 . METHOD_1 ( STRING_0 ) ; expected . put ( com . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 . IDENT_5 , com . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 . IDENT_6 , new org . apache . accumulo . core . data . METHOD_2 ( STRING_1 . getBytes ( ) ) ) ; org . apache . accumulo . core . data . IDENT_7 actual = instance . METHOD_3 ( row , IDENT_8 , IDENT_9 ) ; expected . equals ( actual ) ; System . out . println ( expected . METHOD_4 ( ) ) ; "<AssertPlaceHolder>" ; } equals ( java . lang . Object ) { if ( ( o instanceof org . apache . accumulo . core . data . IDENT_7 ) == false ) { METHOD_4 ( ) . add ( ( STRING_2 + ( o . getClass ( ) . getName ( ) ) ) ) ; return false ; } org . apache . accumulo . core . data . IDENT_7 other = ( ( org . apache . accumulo . core . data . IDENT_7 ) ( o ) ) ; if ( false == ( java . util . Arrays . equals ( METHOD_5 ( ) , other . METHOD_5 ( ) ) ) ) { java . lang . String a = new java . lang . String ( METHOD_5 ( ) , IDENT_10 ) ; java . lang . String b = new java . lang . String ( other . METHOD_5 ( ) , IDENT_10 ) ; METHOD_4 ( ) . add ( java . lang . String . format ( STRING_3 , a , b ) ) ; return false ; } if ( ( this . METHOD_6 ( ) . size ( ) ) != ( other . METHOD_6 ( ) . size ( ) ) ) { METHOD_4 ( ) . add ( java . lang . String . format ( STRING_4 , this . METHOD_6 ( ) . size ( ) , other . METHOD_6 ( ) . size ( ) ) ) ; return false ; } java . util . List IDENT_11 = this . METHOD_6 ( ) ; java . util . List IDENT_12 = other . METHOD_6 ( ) ; for ( int i = 0 ; i < ( IDENT_11 . size ( ) ) ; i ++ ) { org . apache . accumulo . core . data . IDENT_13 IDENT_14 = ( ( org . apache . accumulo . core . data . IDENT_13 ) ( IDENT_11 . get ( i ) ) ) ; org . apache . accumulo . core . data . IDENT_13 IDENT_15 = ( ( org . apache . accumulo . core . data . IDENT_13 ) ( IDENT_12 . get ( i ) ) ) ; byte [ ] IDENT_16 = IDENT_14 . METHOD_7 ( ) ; byte [ ] IDENT_17 = IDENT_15 . METHOD_7 ( ) ; if ( false == ( java . util . Arrays . equals ( IDENT_16 , IDENT_17 ) ) ) { java . lang . String a = new java . lang . String ( IDENT_16 , IDENT_10 ) ; java . lang . String b = new java . lang . String ( IDENT_17 , IDENT_10 ) ; METHOD_4 ( ) . add ( java . lang . String . format ( STRING_5 , i , a , b ) ) ; return false ; } byte [ ] IDENT_18 = IDENT_14 . METHOD_8 ( ) ; byte [ ] IDENT_19 = IDENT_15 . METHOD_8 ( ) ; if ( false == ( java . util . Arrays . equals ( IDENT_18 , IDENT_19 ) ) ) { java . lang . String a = new java . lang . String ( IDENT_18 , IDENT_10 ) ; java . lang . String b = new java . lang . String ( IDENT_19 , IDENT_10 ) ; METHOD_4 ( ) . add ( java . lang . String . format ( STRING_6 , i , a , b ) ) ; return false ; } byte [ ] IDENT_20 = IDENT_14 . getValue ( ) ; byte [ ] IDENT_21 = IDENT_15 . getValue ( ) ; if ( false == ( java . util . Arrays . equals ( IDENT_20 , IDENT_21 ) ) ) { java . lang . String a = new java . lang . String ( IDENT_20 , IDENT_10 ) ; java . lang . String b = new java . lang . String ( IDENT_21 , IDENT_10 ) ; METHOD_4 ( ) . add ( java . lang . String . format ( STRING_7 , i , a , b ) ) ; return false ; } } return true ; }
org . junit . Assert . assertEquals ( expected , actual ) 