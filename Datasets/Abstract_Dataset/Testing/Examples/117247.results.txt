METHOD_0 ( ) { "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { if ( string == null ) { return null ; } if ( STRING_0 . equals ( string . substring ( 0 , 1 ) ) ) { int r ; int g ; int b ; int a = 255 ; switch ( string . length ( ) ) { case 4 : r = ( java . lang . Integer . METHOD_2 ( string . substring ( 1 , 2 ) , 16 ) ) * 16 ; g = ( java . lang . Integer . METHOD_2 ( string . substring ( 2 , 3 ) , 16 ) ) * 16 ; b = ( java . lang . Integer . METHOD_2 ( string . substring ( 3 , 4 ) , 16 ) ) * 16 ; break ; case 5 : r = ( java . lang . Integer . METHOD_2 ( string . substring ( 1 , 2 ) , 16 ) ) * 16 ; g = ( java . lang . Integer . METHOD_2 ( string . substring ( 2 , 3 ) , 16 ) ) * 16 ; b = ( java . lang . Integer . METHOD_2 ( string . substring ( 3 , 4 ) , 16 ) ) * 16 ; a = ( java . lang . Integer . METHOD_2 ( string . substring ( 4 , 5 ) , 16 ) ) * 16 ; break ; case 7 : r = java . lang . Integer . METHOD_2 ( string . substring ( 1 , 3 ) , 16 ) ; g = java . lang . Integer . METHOD_2 ( string . substring ( 3 , 5 ) , 16 ) ; b = java . lang . Integer . METHOD_2 ( string . substring ( 5 , 7 ) , 16 ) ; break ; case 9 : r = java . lang . Integer . METHOD_2 ( string . substring ( 1 , 3 ) , 16 ) ; g = java . lang . Integer . METHOD_2 ( string . substring ( 3 , 5 ) , 16 ) ; b = java . lang . Integer . METHOD_2 ( string . substring ( 5 , 7 ) , 16 ) ; a = java . lang . Integer . METHOD_2 ( string . substring ( 7 , 9 ) , 16 ) ; break ; default : throw new java . lang . IllegalArgumentException ( ( STRING_1 + string ) ) ; } return new edu . illinois . library . cantaloupe . operation . METHOD_3 ( r , g , b , a ) ; } if ( string . matches ( STRING_2 ) ) { final int [ ] IDENT_0 = edu . illinois . library . cantaloupe . operation . METHOD_3 . IDENT_1 . get ( string ) ; if ( IDENT_0 != null ) { return new edu . illinois . library . cantaloupe . operation . METHOD_3 ( IDENT_0 [ 0 ] , IDENT_0 [ 1 ] , IDENT_0 [ 2 ] ) ; } else { throw new java . lang . IllegalArgumentException ( ( STRING_3 + string ) ) ; } } java . util . regex . IDENT_2 m = edu . illinois . library . cantaloupe . operation . METHOD_3 . IDENT_3 . matcher ( string . replace ( " " , "" ) ) ; if ( m . matches ( ) ) { return new edu . illinois . library . cantaloupe . operation . METHOD_3 ( java . lang . Integer . METHOD_2 ( m . group ( 1 ) ) , java . lang . Integer . METHOD_2 ( m . group ( 2 ) ) , java . lang . Integer . METHOD_2 ( m . group ( 3 ) ) ) ; } m = edu . illinois . library . cantaloupe . operation . METHOD_3 . IDENT_4 . matcher ( string . replace ( " " , "" ) ) ; if ( m . matches ( ) ) { return new edu . illinois . library . cantaloupe . operation . METHOD_3 ( java . lang . Integer . METHOD_2 ( m . group ( 1 ) ) , java . lang . Integer . METHOD_2 ( m . group ( 2 ) ) , java . lang . Integer . METHOD_2 ( m . group ( 3 ) ) , java . lang . Integer . METHOD_2 ( m . group ( 4 ) ) ) ; } throw new java . lang . IllegalArgumentException ( ( STRING_4 + string ) ) ; }
org . junit . Assert . assertNull ( edu . illinois . library . cantaloupe . operation . METHOD_3 . METHOD_1 ( null ) ) 