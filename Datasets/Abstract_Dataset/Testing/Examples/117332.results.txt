METHOD_0 ( ) { java . awt . image . IDENT_0 IDENT_1 = edu . illinois . library . cantaloupe . processor . IDENT_2 . METHOD_1 ( 100 , 100 , 8 , true ) ; java . awt . image . IDENT_0 IDENT_3 = edu . illinois . library . cantaloupe . processor . IDENT_4 . METHOD_2 ( IDENT_1 , IDENT_5 . IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . awt . image . IDENT_0 , edu . illinois . library . cantaloupe . operation . IDENT_5 ) { java . awt . image . IDENT_0 IDENT_3 = IDENT_1 ; final edu . illinois . library . cantaloupe . util . IDENT_7 IDENT_8 = new edu . illinois . library . cantaloupe . util . METHOD_3 ( ) ; switch ( IDENT_9 ) { case IDENT_6 : IDENT_3 = edu . illinois . library . cantaloupe . processor . IDENT_4 . METHOD_4 ( IDENT_3 ) ; edu . illinois . library . cantaloupe . processor . IDENT_4 . METHOD_5 ( IDENT_3 ) ; break ; case IDENT_10 : IDENT_3 = edu . illinois . library . cantaloupe . processor . IDENT_4 . METHOD_4 ( IDENT_3 ) ; edu . illinois . library . cantaloupe . processor . IDENT_4 . METHOD_6 ( IDENT_3 ) ; break ; } if ( IDENT_3 != IDENT_1 ) { edu . illinois . library . cantaloupe . processor . IDENT_4 . LOGGER . debug ( STRING_0 , IDENT_1 . METHOD_7 ( ) , IDENT_1 . METHOD_8 ( ) , IDENT_8 ) ; } return IDENT_3 ; }
org . junit . Assert . assertSame ( IDENT_1 , IDENT_3 ) 