METHOD_0 ( ) { instance . METHOD_1 ( edu . illinois . library . cantaloupe . test . IDENT_0 . METHOD_2 ( STRING_0 ) ) ; final edu . illinois . library . cantaloupe . image . IDENT_1 IDENT_2 = instance . METHOD_3 ( ) ; java . io . ByteArrayOutputStream IDENT_3 = new java . io . ByteArrayOutputStream ( ) ; edu . illinois . library . cantaloupe . operation . IDENT_4 IDENT_5 = new edu . illinois . library . cantaloupe . operation . METHOD_4 ( new edu . illinois . library . cantaloupe . operation . METHOD_5 ( edu . illinois . library . cantaloupe . image . IDENT_6 . IDENT_7 ) ) ; instance . process ( IDENT_5 , IDENT_2 , IDENT_3 ) ; final byte [ ] IDENT_8 = IDENT_3 . toByteArray ( ) ; IDENT_5 . METHOD_6 ( ) . put ( STRING_1 , "2" ) ; IDENT_3 = new java . io . ByteArrayOutputStream ( ) ; instance . process ( IDENT_5 , IDENT_2 , IDENT_3 ) ; final byte [ ] IDENT_9 = IDENT_3 . toByteArray ( ) ; "<AssertPlaceHolder>" ; } process ( edu . illinois . library . cantaloupe . operation . METHOD_4 , edu . illinois . library . cantaloupe . image . IDENT_1 , java . io . IDENT_10 ) { super . process ( IDENT_5 , IDENT_2 , IDENT_3 ) ; try ( java . io . InputStream IDENT_11 = IDENT_12 . METHOD_7 ( ) ) { final java . util . List < java . lang . String > args = METHOD_8 ( IDENT_5 , IDENT_2 ) ; final edu . illinois . library . cantaloupe . process . IDENT_13 IDENT_14 = new edu . illinois . library . cantaloupe . process . METHOD_9 ( ) ; IDENT_14 . METHOD_10 ( new edu . illinois . library . cantaloupe . process . METHOD_11 ( IDENT_11 , null ) ) ; IDENT_14 . METHOD_12 ( new edu . illinois . library . cantaloupe . process . METHOD_11 ( null , IDENT_3 ) ) ; edu . illinois . library . cantaloupe . processor . IDENT_15 . LOGGER . info ( STRING_2 , java . lang . String . join ( " " , args ) ) ; IDENT_14 . run ( args ) ; } catch ( java . lang . Exception e ) { throw new edu . illinois . library . cantaloupe . processor . METHOD_13 ( e . getMessage ( ) , e ) ; } }
org . junit . Assert . assertFalse ( java . util . Arrays . equals ( IDENT_8 , IDENT_9 ) ) 