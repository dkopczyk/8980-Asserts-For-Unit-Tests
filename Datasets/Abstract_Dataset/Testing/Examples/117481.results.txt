METHOD_0 ( ) { server . start ( ) ; instance . METHOD_1 ( new edu . illinois . library . cantaloupe . image . METHOD_2 ( STRING_0 ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { if ( ( format ) == null ) { format = edu . illinois . library . cantaloupe . image . IDENT_0 . IDENT_1 ; final edu . illinois . library . cantaloupe . source . IDENT_2 info = METHOD_4 ( ) ; edu . illinois . library . cantaloupe . source . IDENT_3 . LOGGER . debug ( STRING_1 , info ) ; format = edu . illinois . library . cantaloupe . image . IDENT_0 . METHOD_5 ( info . getKey ( ) ) ; if ( IDENT_0 . IDENT_1 . equals ( format ) ) { edu . illinois . library . cantaloupe . source . IDENT_3 . LOGGER . debug ( STRING_2 , info ) ; format = edu . illinois . library . cantaloupe . image . IDENT_0 . METHOD_5 ( IDENT_4 ) ; } if ( IDENT_0 . IDENT_1 . equals ( format ) ) { edu . illinois . library . cantaloupe . source . IDENT_3 . LOGGER . debug ( STRING_3 , info ) ; java . lang . String IDENT_5 = METHOD_6 ( ) . IDENT_5 ; if ( ( IDENT_5 != null ) && ( ! ( IDENT_5 . isEmpty ( ) ) ) ) { format = new edu . illinois . library . cantaloupe . image . METHOD_7 ( IDENT_5 ) . METHOD_8 ( ) ; } if ( IDENT_0 . IDENT_1 . equals ( format ) ) { edu . illinois . library . cantaloupe . source . IDENT_3 . LOGGER . debug ( STRING_4 , info ) ; try ( java . io . InputStream is = new java . io . METHOD_9 ( edu . illinois . library . cantaloupe . source . IDENT_3 . METHOD_10 ( info , edu . illinois . library . cantaloupe . source . IDENT_3 . IDENT_6 ) ) ) { java . util . List < edu . illinois . library . cantaloupe . image . METHOD_7 > types = edu . illinois . library . cantaloupe . image . METHOD_7 . METHOD_11 ( is ) ; if ( ! ( types . isEmpty ( ) ) ) { format = types . get ( 0 ) . METHOD_8 ( ) ; } } } } } return format ; }
org . junit . Assert . assertEquals ( IDENT_0 . IDENT_1 , instance . METHOD_3 ( ) ) 