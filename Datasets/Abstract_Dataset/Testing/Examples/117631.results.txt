METHOD_0 ( ) { net . time4j . IDENT_0 m = IDENT_1 . INSTANCE . METHOD_1 ( ) ; net . time4j . IDENT_2 . IDENT_3 IDENT_2 = net . time4j . IDENT_2 . IDENT_3 . of ( net . time4j . IDENT_2 . IDENT_4 . of ( m ) ) . METHOD_2 ( 1 , java . util . concurrent . TimeUnit . IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( ) { final net . time4j . IDENT_2 . IDENT_6 . IDENT_7 IDENT_8 = this . result ; if ( IDENT_8 == null ) { return this . IDENT_9 ; } long IDENT_10 = IDENT_1 . IDENT_11 . METHOD_3 ( ) ; long IDENT_12 = ( IDENT_10 + ( IDENT_8 . METHOD_4 ( IDENT_10 ) ) ) - ( net . time4j . IDENT_2 . IDENT_6 . METHOD_5 ( IDENT_8 . IDENT_13 ) ) ; return IDENT_8 . IDENT_13 . METHOD_6 ( ( IDENT_12 * 1000 ) , IDENT_14 . IDENT_15 ) ; }
org . junit . Assert . assertThat ( IDENT_2 . METHOD_1 ( ) , org . hamcrest . CoreMatchers . is ( m . METHOD_6 ( 1 , java . util . concurrent . TimeUnit . IDENT_5 ) ) ) 