METHOD_0 ( ) { net . time4j . IDENT_0 date = net . time4j . IDENT_0 . of ( INT_0 , 5 , INT_1 ) ; net . time4j . range . IDENT_1 < net . time4j . IDENT_0 > IDENT_2 = net . time4j . range . IDENT_1 . of ( IDENT_3 . IDENT_4 , date ) ; net . time4j . range . IDENT_1 < net . time4j . IDENT_0 > IDENT_5 = net . time4j . range . IDENT_1 . of ( IDENT_3 . IDENT_4 , date ) ; "<AssertPlaceHolder>" ; } hashCode ( ) { int hash = 3 ; hash = ( INT_2 * hash ) + ( this . source . hashCode ( ) ) ; hash = ( INT_2 * hash ) + ( this . IDENT_6 . hashCode ( ) ) ; hash = ( INT_2 * hash ) + ( this . IDENT_7 ) ; return ( INT_2 * hash ) + ( this . IDENT_8 . hashCode ( ) ) ; }
org . junit . Assert . assertThat ( IDENT_2 . hashCode ( ) , org . hamcrest . CoreMatchers . is ( IDENT_5 . hashCode ( ) ) ) 