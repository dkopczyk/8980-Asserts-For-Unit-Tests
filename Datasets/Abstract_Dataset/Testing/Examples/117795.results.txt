METHOD_0 ( ) { net . time4j . range . IDENT_0 IDENT_1 = net . time4j . range . IDENT_0 . of ( INT_0 ) ; net . time4j . range . IDENT_0 IDENT_2 = net . time4j . range . IDENT_0 . of ( INT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( T extends net . time4j . engine . IDENT_3 , T extends net . time4j . engine . IDENT_3 ) { long IDENT_4 = IDENT_5 . IDENT_6 . METHOD_1 ( IDENT_7 , IDENT_8 ) ; return net . time4j . range . IDENT_9 . METHOD_2 ( net . time4j . base . IDENT_10 . METHOD_3 ( IDENT_4 ) ) ; }
org . junit . Assert . assertThat ( net . time4j . range . IDENT_9 . METHOD_1 ( IDENT_1 , IDENT_2 ) , org . hamcrest . CoreMatchers . is ( net . time4j . range . IDENT_9 . METHOD_2 ( 4 ) ) ) 