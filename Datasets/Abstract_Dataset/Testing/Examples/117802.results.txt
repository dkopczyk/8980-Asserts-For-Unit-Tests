METHOD_0 ( ) { net . time4j . IDENT_0 . IDENT_1 IDENT_2 = net . time4j . IDENT_0 . IDENT_1 . METHOD_1 ( new java . math . BigDecimal ( STRING_0 ) ) ; net . time4j . IDENT_0 . IDENT_1 IDENT_3 = net . time4j . IDENT_0 . IDENT_1 . METHOD_2 ( ( - INT_0 ) , ( - INT_1 ) ) ; "<AssertPlaceHolder>" ; } hashCode ( ) { int hash = 3 ; hash = ( INT_2 * hash ) + ( this . source . hashCode ( ) ) ; hash = ( INT_2 * hash ) + ( this . IDENT_4 . hashCode ( ) ) ; hash = ( INT_2 * hash ) + ( this . IDENT_5 ) ; return ( INT_2 * hash ) + ( this . IDENT_6 . hashCode ( ) ) ; }
org . junit . Assert . assertThat ( ( ( IDENT_2 . hashCode ( ) ) == ( IDENT_3 . hashCode ( ) ) ) , org . hamcrest . CoreMatchers . is ( true ) ) 