METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = METHOD_1 ( STRING_0 ) ; IDENT_3 . METHOD_2 ( ) . close ( ) ; IDENT_4 . METHOD_3 ( IDENT_3 ) ; java . lang . String IDENT_5 = IDENT_4 . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { try { IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = METHOD_5 ( ) ; java . lang . String IDENT_5 = IDENT_3 . METHOD_6 ( ) ; java . util . Optional < java . lang . String > IDENT_6 = METHOD_7 ( ) ; return ( IDENT_5 . isEmpty ( ) ) && ( IDENT_6 . METHOD_8 ( ) ) ? IDENT_6 . get ( ) : IDENT_5 ; } catch ( java . lang . Exception e ) { logger . error ( java . lang . String . format ( STRING_1 , e . getMessage ( ) ) ) ; return "" ; } }
org . junit . Assert . assertThat ( IDENT_5 , org . hamcrest . Matchers . equalTo ( "" ) ) 