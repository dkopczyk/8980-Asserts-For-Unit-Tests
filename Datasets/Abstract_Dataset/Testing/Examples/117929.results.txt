METHOD_0 ( ) { com . IDENT_0 . collections . IDENT_1 . IDENT_2 IDENT_3 = new com . IDENT_0 . collections . IDENT_1 . METHOD_1 ( com . IDENT_0 . collections . IDENT_4 . METHOD_2 ( com . IDENT_0 . collections . IDENT_4 . METHOD_3 ( ) ) ) ; java . util . Set < java . lang . Integer > IDENT_5 = com . google . common . collect . IDENT_6 . METHOD_4 ( 6 , 9 ) ; com . IDENT_0 . collections . IDENT_1 . METHOD_1 IDENT_7 = new com . IDENT_0 . collections . IDENT_1 . METHOD_1 ( com . IDENT_0 . collections . IDENT_4 . METHOD_2 ( IDENT_5 ) ) ; java . util . Set < java . lang . Integer > IDENT_8 = com . google . common . collect . IDENT_6 . METHOD_5 ( IDENT_5 , com . IDENT_0 . collections . IDENT_4 . METHOD_3 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( java . util . Set , com . IDENT_0 . collections . IDENT_1 . IDENT_9 ) { java . util . Set < java . lang . Integer > IDENT_10 = new java . util . HashSet ( ) ; for ( java . lang . Integer i : new com . IDENT_0 . collections . IDENT_4 . METHOD_7 ( IDENT_11 . iterator ( ) ) ) { IDENT_10 . add ( i ) ; } return com . google . common . collect . IDENT_6 . METHOD_8 ( IDENT_12 , IDENT_10 ) . isEmpty ( ) ; }
org . junit . Assert . assertTrue ( com . IDENT_0 . collections . IDENT_4 . METHOD_6 ( METHOD_5 , ( ( com . IDENT_0 . collections . IDENT_1 . METHOD_1 ) ( IDENT_3 . METHOD_5 ( IDENT_7 ) ) ) ) ) 