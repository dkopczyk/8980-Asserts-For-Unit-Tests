METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 1 ; java . lang . String [ ] [ ] IDENT_1 = new java . lang . String [ ] [ ] { new java . lang . String [ ] { STRING_0 0 , STRING_0 0 } , new java . lang . String [ ] { STRING_0 4 , STRING_1 } , new java . lang . String [ ] { STRING_2 , STRING_3 } , new java . lang . String [ ] { STRING_4 , STRING_4 } , new java . lang . String [ ] { STRING_0 , STRING_0 2 } , new java . lang . String [ ] { STRING_5 , STRING_6 } , new java . lang . String [ ] { STRING_7 , STRING_8 } } ; java . lang . String IDENT_2 = STRING_9 ; java . lang . StringBuffer sql = new java . lang . StringBuffer ( IDENT_0 ) ; java . lang . StringBuffer IDENT_3 = new java . lang . StringBuffer ( IDENT_0 ) ; for ( int i = 0 ; i < ( IDENT_1 . length ) ; i ++ ) { if ( i > 0 ) { sql . append ( STRING_0 3 ) ; IDENT_3 . append ( STRING_0 3 ) ; } sql . append ( IDENT_1 [ i ] [ 0 ] ) ; IDENT_3 . append ( IDENT_1 [ i ] [ 1 ] ) ; } sql . append ( IDENT_2 ) ; IDENT_3 . append ( IDENT_2 ) ; java . util . List < java . lang . String > r = convert . convert ( sql . toString ( ) ) ; "<AssertPlaceHolder>" ; } toString ( ) { return com . google . common . base . IDENT_4 . METHOD_1 ( this ) . METHOD_2 ( ) . add ( STRING_10 , IDENT_5 ) . add ( STRING_11 , IDENT_6 ) . add ( STRING_12 , IDENT_7 ) . add ( STRING_13 , IDENT_8 ) . add ( STRING_14 , IDENT_9 ) . add ( STRING_15 , IDENT_10 ) . add ( STRING_16 , IDENT_11 ) . add ( STRING_17 , IDENT_12 ) . add ( STRING_18 , IDENT_13 ) . add ( STRING_19 , IDENT_14 ) . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_3 . toString ( ) , r . get ( 0 ) ) 