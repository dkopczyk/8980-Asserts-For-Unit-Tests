METHOD_0 ( ) { final java . util . List < java . lang . Integer > source = java . util . Arrays . asList ( 1 , 2 , 3 , 4 ) ; final java . util . Set < java . lang . Integer > IDENT_0 = com . google . common . collect . IDENT_1 . of ( 1 , 2 , 3 , 4 ) ; final java . util . Set < java . lang . Integer > result = source . stream ( ) . collect ( de . IDENT_2 . util . IDENT_3 . METHOD_1 ( de . IDENT_2 . util . IDENT_4 . IDENT_5 . METHOD_2 ( ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { final java . util . function . IDENT_6 < T > IDENT_7 = ( element ) -> { throw new de . IDENT_2 . util . METHOD_3 ( element ) ; } ; return IDENT_7 ; }
org . junit . Assert . assertEquals ( IDENT_0 , result ) 