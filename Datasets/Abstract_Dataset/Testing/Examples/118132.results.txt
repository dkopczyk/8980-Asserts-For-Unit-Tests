METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . api . IDENT_3 ui = org . IDENT_0 . IDENT_1 . IDENT_2 . api . IDENT_3 . METHOD_1 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { try { org . IDENT_0 . IDENT_1 . IDENT_2 . api . IDENT_3 ui = new org . IDENT_0 . IDENT_1 . IDENT_2 . api . METHOD_2 ( ) ; org . IDENT_4 . v1 . IDENT_5 factory = org . IDENT_4 . v1 . IDENT_5 . newInstance ( ) ; org . IDENT_4 . v1 . IDENT_6 IDENT_7 = factory . METHOD_3 ( ) ; IDENT_7 . METHOD_4 ( new java . io . METHOD_5 ( xml ) ) ; int IDENT_8 = IDENT_7 . METHOD_6 ( ) ; while ( IDENT_8 != ( org . IDENT_4 . v1 . IDENT_6 . IDENT_9 ) ) { switch ( IDENT_8 ) { case org . IDENT_4 . v1 . IDENT_6 . IDENT_10 : break ; case org . IDENT_4 . v1 . IDENT_6 . IDENT_11 : if ( STRING_1 . equals ( IDENT_7 . getName ( ) ) ) { break ; } else if ( STRING_2 . equals ( IDENT_7 . getName ( ) ) ) { if ( STRING_3 . equals ( IDENT_7 . METHOD_7 ( 0 ) ) ) { ui . IDENT_12 = IDENT_7 . METHOD_8 ( ) ; android . util . IDENT_13 . e ( STRING_4 , ( ( ui . IDENT_12 . length ( ) ) == 0 ? org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_14 . IDENT_15 : ui . IDENT_12 ) ) ; } else if ( STRING_5 . equals ( IDENT_7 . METHOD_7 ( 0 ) ) ) { ui . IDENT_16 = IDENT_7 . METHOD_8 ( ) ; android . util . IDENT_13 . e ( STRING_4 , ( ( ui . IDENT_16 . length ( ) ) == 0 ? org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_14 . IDENT_15 : ui . IDENT_16 ) ) ; } else if ( STRING_6 . equals ( IDENT_7 . METHOD_7 ( 0 ) ) ) { ui . IDENT_17 = java . lang . Integer . valueOf ( IDENT_7 . METHOD_8 ( ) ) ; android . util . IDENT_13 . e ( STRING_4 , ( STRING_7 + ( ui . IDENT_17 ) ) ) ; } else if ( STRING_8 . equals ( IDENT_7 . METHOD_7 ( 0 ) ) ) { ui . IDENT_18 = java . lang . Integer . valueOf ( IDENT_7 . METHOD_8 ( ) ) ; android . util . IDENT_13 . e ( STRING_4 , ( STRING_9 + ( ui . IDENT_18 ) ) ) ; } else if ( STRING_10 . equals ( IDENT_7 . METHOD_7 ( 0 ) ) ) { ui . IDENT_19 = IDENT_7 . METHOD_8 ( ) ; android . util . IDENT_13 . e ( STRING_4 , ( ( ui . IDENT_19 . length ( ) ) == 0 ? org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_14 . IDENT_15 : ui . IDENT_19 ) ) ; } } break ; } IDENT_8 = IDENT_7 . next ( ) ; } return ui ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; return null ; } }
org . junit . Assert . assertNull ( ui ) 