METHOD_0 ( ) { java . util . concurrent . IDENT_0 < de . IDENT_1 . IDENT_2 . rest . core . domain . meta . IDENT_3 > future = IDENT_4 . METHOD_1 ( ) . METHOD_2 ( de . IDENT_1 . IDENT_2 . rest . junit . IDENT_5 ) ; de . IDENT_1 . IDENT_2 . rest . core . domain . meta . IDENT_3 IDENT_6 = future . get ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { org . apache . commons . lang3 . IDENT_7 . METHOD_3 ( IDENT_8 ) ; return IDENT_9 . METHOD_4 ( ( ) -> { org . apache . http . client . utils . IDENT_10 IDENT_11 = METHOD_5 ( de . IDENT_1 . IDENT_2 . rest . core . IDENT_12 , de . IDENT_1 . IDENT_2 . rest . core . IDENT_13 ) ; IDENT_11 . METHOD_6 ( de . IDENT_1 . IDENT_2 . rest . core . IDENT_14 , IDENT_8 ) ; IDENT_11 . METHOD_6 ( de . IDENT_1 . IDENT_2 . rest . core . IDENT_15 , STRING_0 ) ; org . apache . http . client . methods . IDENT_16 method = de . IDENT_1 . IDENT_2 . rest . core . util . IDENT_17 . METHOD_7 ( IDENT_11 . build ( ) ) ; org . apache . http . client . methods . IDENT_18 response = de . IDENT_1 . IDENT_2 . rest . core . client . execute ( method , de . IDENT_1 . IDENT_2 . rest . core . IDENT_19 ) ; int IDENT_20 = response . METHOD_8 ( ) . getStatusCode ( ) ; if ( IDENT_20 == IDENT_21 . IDENT_22 ) { com . google . gson . stream . IDENT_23 IDENT_24 = METHOD_9 ( response ) ; de . IDENT_1 . IDENT_2 . rest . core . domain . meta . IDENT_3 IDENT_25 = de . IDENT_1 . IDENT_2 . rest . core . gson . METHOD_10 ( IDENT_24 , . class ) ; method . METHOD_11 ( ) ; response . close ( ) ; return IDENT_25 ; } else { de . IDENT_1 . IDENT_2 . rest . core . util . IDENT_26 IDENT_27 = new de . IDENT_1 . IDENT_2 . rest . core . util . METHOD_12 ( response ) ; method . METHOD_11 ( ) ; response . close ( ) ; throw IDENT_27 ; } } ) ; }
org . junit . Assert . assertNotNull ( IDENT_6 ) 