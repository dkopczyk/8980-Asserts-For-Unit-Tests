METHOD_0 ( ) { java . util . concurrent . IDENT_0 < de . IDENT_1 . IDENT_2 . rest . core . domain . IDENT_3 . IDENT_4 > future = IDENT_5 . METHOD_1 ( ) . METHOD_2 ( ) ; de . IDENT_1 . IDENT_2 . rest . core . domain . IDENT_3 . IDENT_4 IDENT_6 = future . get ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { return IDENT_7 . METHOD_3 ( ( ) -> { org . apache . http . client . utils . IDENT_8 IDENT_9 = METHOD_4 ( de . IDENT_1 . IDENT_2 . rest . core . IDENT_10 ) ; org . apache . http . client . methods . IDENT_11 method = de . IDENT_1 . IDENT_2 . rest . core . util . IDENT_12 . METHOD_5 ( IDENT_9 . build ( ) ) ; org . apache . http . client . methods . IDENT_13 response = de . IDENT_1 . IDENT_2 . rest . core . client . execute ( method , de . IDENT_1 . IDENT_2 . rest . core . IDENT_14 ) ; int IDENT_15 = response . METHOD_6 ( ) . getStatusCode ( ) ; if ( IDENT_15 == IDENT_16 . IDENT_17 ) { com . google . gson . stream . IDENT_18 IDENT_19 = METHOD_7 ( response ) ; de . IDENT_1 . IDENT_2 . rest . core . domain . IDENT_3 . IDENT_4 IDENT_20 = de . IDENT_1 . IDENT_2 . rest . core . gson . METHOD_8 ( IDENT_19 , . class ) ; method . METHOD_9 ( ) ; return IDENT_20 ; } else { de . IDENT_1 . IDENT_2 . rest . core . util . IDENT_21 IDENT_22 = new de . IDENT_1 . IDENT_2 . rest . core . util . METHOD_10 ( response ) ; response . close ( ) ; method . METHOD_9 ( ) ; throw IDENT_22 ; } } ) ; }
org . junit . Assert . assertNotNull ( IDENT_6 ) 