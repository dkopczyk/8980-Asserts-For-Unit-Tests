METHOD_0 ( ) { final org . apache . maven . project . IDENT_0 project = mock ( org . apache . maven . project . IDENT_0 . class ) ; doReturn ( project ) . when ( IDENT_1 ) . METHOD_1 ( ) ; doReturn ( STRING_0 ) . when ( project ) . METHOD_2 ( ) ; final com . microsoft . azure . maven . IDENT_2 . IDENT_3 . IDENT_4 factory = new com . microsoft . azure . maven . IDENT_2 . IDENT_3 . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( com . microsoft . azure . maven . IDENT_2 . IDENT_5 ) { java . lang . String IDENT_6 = IDENT_1 . METHOD_1 ( ) . METHOD_2 ( ) ; if ( org . IDENT_7 . IDENT_8 . util . StringUtils . isEmpty ( IDENT_6 ) ) { throw new org . apache . maven . plugin . METHOD_5 ( com . microsoft . azure . maven . IDENT_2 . IDENT_3 . METHOD_3 . IDENT_9 ) ; } IDENT_6 = IDENT_6 . toLowerCase ( Locale . IDENT_10 ) . trim ( ) ; switch ( IDENT_6 ) { case STRING_1 : return new com . microsoft . azure . maven . IDENT_2 . IDENT_3 . IDENT_11 . Builder ( ) . METHOD_6 ( IDENT_1 . METHOD_7 ( ) ) . METHOD_8 ( IDENT_1 . getPath ( ) ) ; case STRING_0 : return new com . microsoft . azure . maven . IDENT_2 . IDENT_3 . IDENT_12 . Builder ( ) . METHOD_9 ( IDENT_1 . METHOD_10 ( ) ) . METHOD_11 ( IDENT_1 . METHOD_12 ( ) ) ; default : throw new org . apache . maven . plugin . METHOD_5 ( com . microsoft . azure . maven . IDENT_2 . IDENT_3 . METHOD_3 . IDENT_9 ) ; } }
org . junit . Assert . assertTrue ( ( ( factory . METHOD_4 ( IDENT_1 ) . build ( ) ) instanceof com . microsoft . azure . maven . IDENT_2 . IDENT_3 . IDENT_12 ) ) 