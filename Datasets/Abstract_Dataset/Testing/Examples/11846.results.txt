METHOD_0 ( ) { org . apache . directory . shared . IDENT_0 . components . IDENT_1 IDENT_2 = new org . apache . directory . shared . IDENT_0 . components . METHOD_1 ( org . apache . directory . shared . IDENT_0 . codec . types . IDENT_3 . IDENT_4 , new byte [ ] { 1 , 2 , 3 } ) ; java . nio . ByteBuffer IDENT_5 = java . nio . ByteBuffer . METHOD_2 ( IDENT_2 . METHOD_3 ( ) ) ; IDENT_2 . encode ( IDENT_5 ) ; byte [ ] IDENT_6 = new byte [ ] { INT_0 , 12 , ( ( byte ) ( INT_1 ) ) , 3 , 2 , 1 , 10 , ( ( byte ) ( INT_2 ) ) , 5 , 4 , 3 , 1 , 2 , 3 } ; "<AssertPlaceHolder>" ; } encode ( org . apache . directory . server . IDENT_7 . value . IDENT_8 ) { try ( java . io . ByteArrayOutputStream IDENT_9 = new java . io . ByteArrayOutputStream ( ) ; org . apache . directory . shared . IDENT_10 . IDENT_11 . IDENT_12 IDENT_13 = new org . apache . directory . shared . IDENT_10 . IDENT_11 . METHOD_4 ( IDENT_9 ) ) { org . apache . directory . shared . IDENT_10 . IDENT_11 . IDENT_14 IDENT_15 = METHOD_5 ( data ) ; IDENT_13 . METHOD_6 ( IDENT_15 ) ; IDENT_13 . close ( ) ; return IDENT_9 . toByteArray ( ) ; } }
org . junit . Assert . assertTrue ( java . util . Arrays . equals ( IDENT_6 , IDENT_5 . array ( ) ) ) 