METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . util . helpers . IDENT_3 IDENT_4 = IDENT_5 . METHOD_1 ( IDENT_6 ) . METHOD_2 ( 1 ) . METHOD_3 ( new org . IDENT_0 . framework . util . helpers . METHOD_4 ( IDENT_7 , STRING_0 ) ) . METHOD_5 ( STRING_1 ) . METHOD_6 ( STRING_2 ) . build ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . util . helpers . IDENT_3 IDENT_8 = IDENT_5 . METHOD_1 ( IDENT_6 ) . METHOD_2 ( 2 ) . METHOD_3 ( new org . IDENT_0 . framework . util . helpers . METHOD_4 ( IDENT_7 , STRING_0 ) ) . METHOD_5 ( STRING_1 ) . METHOD_6 ( STRING_3 ) . build ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . util . helpers . IDENT_3 IDENT_9 = IDENT_5 . METHOD_1 ( IDENT_6 ) . METHOD_2 ( 3 ) . METHOD_3 ( new org . IDENT_0 . framework . util . helpers . METHOD_4 ( IDENT_7 , STRING_0 ) ) . METHOD_5 ( STRING_1 ) . METHOD_6 ( STRING_4 ) . build ( ) ; org . IDENT_0 . IDENT_1 . IDENT_10 . business . IDENT_11 IDENT_12 = METHOD_7 ( 2 , 5 , 50 , IDENT_7 ) ; java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . util . helpers . IDENT_3 > IDENT_13 = asList ( IDENT_4 , IDENT_8 , IDENT_9 ) ; java . util . Date IDENT_14 = METHOD_8 ( IDENT_4 , STRING_5 ) ; java . util . List < org . IDENT_0 . platform . IDENT_15 . IDENT_16 > IDENT_17 = IDENT_18 . METHOD_9 ( IDENT_13 , IDENT_12 , IDENT_14 ) ; "<AssertPlaceHolder>" ; } isEmpty ( ) { return ( org . apache . commons . lang . StringUtils . METHOD_10 ( IDENT_19 ) ) && ( org . apache . commons . lang . StringUtils . METHOD_10 ( IDENT_20 ) ) ; }
org . junit . Assert . assertThat ( IDENT_17 . isEmpty ( ) , org . hamcrest . core . Is . is ( true ) ) 