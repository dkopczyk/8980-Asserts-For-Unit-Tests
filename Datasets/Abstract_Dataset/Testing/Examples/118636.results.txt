METHOD_0 ( ) { org . joda . time . IDENT_0 IDENT_1 = new org . joda . time . METHOD_1 ( INT_0 , 6 , INT_1 , 0 , 0 , 0 , 0 ) ; org . joda . time . METHOD_1 next = org . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_2 ( IDENT_1 , INT_2 , 3 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . joda . time . METHOD_1 , int , int ) { final java . util . IDENT_5 IDENT_6 = new java . util . METHOD_3 ( ) ; IDENT_6 . METHOD_4 ( IDENT_7 . METHOD_5 ( ) ) ; IDENT_6 . add ( METHOD_3 . IDENT_8 , IDENT_9 ) ; int IDENT_10 = IDENT_6 . get ( METHOD_3 . IDENT_8 ) ; IDENT_6 . set ( METHOD_3 . IDENT_11 , IDENT_12 ) ; int IDENT_13 = IDENT_6 . get ( METHOD_3 . IDENT_8 ) ; int IDENT_14 = IDENT_12 ; while ( IDENT_10 != IDENT_13 ) { IDENT_6 . set ( METHOD_3 . IDENT_8 , ( ( IDENT_6 . get ( METHOD_3 . IDENT_8 ) ) - 1 ) ) ; IDENT_6 . set ( METHOD_3 . IDENT_11 , ( IDENT_14 - 1 ) ) ; IDENT_13 = IDENT_6 . get ( METHOD_3 . IDENT_8 ) ; IDENT_14 OP_0 ; } return new org . joda . time . METHOD_1 ( IDENT_6 . getTime ( ) . getTime ( ) ) ; }
org . junit . Assert . assertThat ( next , org . hamcrest . CoreMatchers . is ( new org . joda . time . METHOD_1 ( INT_0 , 9 , INT_1 , 0 , 0 , 0 , 0 ) ) ) 