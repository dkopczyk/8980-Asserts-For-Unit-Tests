METHOD_0 ( ) { int IDENT_0 = 1 ; when ( IDENT_1 . METHOD_1 ( IDENT_0 ) ) . METHOD_2 ( new org . IDENT_2 . framework . exceptions . METHOD_3 ( org . IDENT_2 . platform . IDENT_3 . IDENT_4 . IDENT_5 ) ) ; when ( IDENT_6 . METHOD_4 ( STRING_0 ) ) . thenReturn ( "1" ) ; java . lang . String view = IDENT_7 . METHOD_5 ( model , IDENT_6 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_1 ) . METHOD_1 ( IDENT_0 ) ; verify ( IDENT_6 , times ( 1 ) ) . METHOD_4 ( STRING_0 ) ; verify ( model ) . METHOD_6 ( STRING_1 , IDENT_4 . IDENT_5 ) ; } METHOD_5 ( org . springframework . ui . IDENT_8 , javax . servlet . http . IDENT_9 ) { java . lang . String IDENT_0 = IDENT_6 . METHOD_4 ( STRING_0 ) ; try { if ( METHOD_7 ( IDENT_0 ) ) { model . METHOD_6 ( STRING_1 , IDENT_4 . IDENT_10 ) ; } else { org . IDENT_2 . platform . IDENT_3 . service . IDENT_11 IDENT_12 = IDENT_1 . METHOD_1 ( java . lang . Integer . valueOf ( IDENT_0 ) ) ; org . IDENT_2 . platform . IDENT_3 . ui . model . IDENT_13 IDENT_14 = new org . IDENT_2 . platform . IDENT_3 . ui . model . METHOD_8 ( IDENT_12 ) ; model . METHOD_6 ( STRING_2 , IDENT_14 ) ; model . METHOD_6 ( STRING_3 , METHOD_9 ( ) ) ; } } catch ( org . IDENT_2 . framework . exceptions . METHOD_3 e ) { model . METHOD_6 ( STRING_1 , IDENT_4 . IDENT_5 ) ; } return STRING_4 ; }
org . junit . Assert . assertThat ( view , org . hamcrest . core . Is . is ( STRING_4 ) ) 