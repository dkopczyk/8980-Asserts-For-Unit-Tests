METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( STRING_0 ) ) . thenReturn ( null ) ; java . lang . String view = IDENT_1 . METHOD_2 ( model , IDENT_0 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_0 , times ( 1 ) ) . METHOD_1 ( STRING_0 ) ; verify ( IDENT_2 , times ( 0 ) ) . METHOD_3 ( org . mockito . Matchers . METHOD_4 ( ) ) ; verify ( model ) . METHOD_5 ( STRING_1 , IDENT_3 . IDENT_4 ) ; } METHOD_2 ( org . springframework . ui . IDENT_5 , javax . servlet . http . IDENT_6 ) { java . lang . String IDENT_7 = IDENT_0 . METHOD_1 ( STRING_0 ) ; try { if ( METHOD_6 ( IDENT_7 ) ) { model . METHOD_5 ( STRING_1 , IDENT_3 . IDENT_4 ) ; } else { org . IDENT_8 . platform . IDENT_9 . service . IDENT_10 IDENT_11 = IDENT_2 . METHOD_3 ( java . lang . Integer . valueOf ( IDENT_7 ) ) ; org . IDENT_8 . platform . IDENT_9 . ui . model . IDENT_12 IDENT_13 = new org . IDENT_8 . platform . IDENT_9 . ui . model . METHOD_7 ( IDENT_11 ) ; model . METHOD_5 ( STRING_2 , IDENT_13 ) ; model . METHOD_5 ( STRING_3 , METHOD_8 ( ) ) ; } } catch ( org . IDENT_8 . framework . exceptions . IDENT_14 e ) { model . METHOD_5 ( STRING_1 , IDENT_3 . IDENT_15 ) ; } return STRING_4 ; }
org . junit . Assert . assertThat ( view , org . hamcrest . core . Is . is ( STRING_4 ) ) 