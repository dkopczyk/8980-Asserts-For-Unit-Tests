METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( ) ) . thenReturn ( IDENT_1 ) ; METHOD_2 ( new org . IDENT_2 . framework . exceptions . METHOD_3 ( org . IDENT_2 . platform . IDENT_3 . IDENT_4 . IDENT_5 ) ) . when ( IDENT_6 ) . METHOD_4 ( STRING_0 ) ; org . IDENT_2 . platform . IDENT_3 . ui . model . IDENT_7 IDENT_8 = new org . IDENT_2 . platform . IDENT_3 . ui . model . METHOD_5 ( ) ; IDENT_8 . METHOD_6 ( STRING_0 ) ; java . lang . String result = controller . METHOD_7 ( IDENT_8 , IDENT_0 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_0 ) . METHOD_1 ( ) ; verify ( IDENT_1 ) . METHOD_8 ( METHOD_9 ( new org . IDENT_2 . platform . matchers . METHOD_10 ( org . IDENT_2 . platform . IDENT_3 . IDENT_4 . IDENT_5 ) ) ) ; } METHOD_7 ( org . IDENT_2 . platform . IDENT_3 . ui . model . METHOD_5 , org . springframework . IDENT_9 . IDENT_10 . IDENT_11 ) { java . lang . String result = STRING_1 ; if ( METHOD_11 ( IDENT_12 . METHOD_12 ( ) ) ) { METHOD_13 ( IDENT_0 . METHOD_1 ( ) , STRING_2 , STRING_3 , STRING_4 ) ; result = STRING_5 ; } else { try { IDENT_6 . METHOD_4 ( IDENT_12 . METHOD_12 ( ) ) ; } catch ( org . IDENT_2 . platform . IDENT_13 . IDENT_14 e ) { METHOD_14 ( e , IDENT_0 ) ; result = STRING_5 ; } catch ( org . IDENT_2 . framework . exceptions . METHOD_3 e ) { METHOD_13 ( IDENT_0 . METHOD_1 ( ) , e . getKey ( ) , STRING_3 , e . getKey ( ) ) ; result = STRING_5 ; } catch ( java . lang . Exception e ) { METHOD_15 ( IDENT_0 . METHOD_1 ( ) , new org . IDENT_2 . framework . exceptions . METHOD_3 ( e . getMessage ( ) , e ) ) ; result = STRING_5 ; } } return result ; }
org . junit . Assert . assertThat ( result , org . hamcrest . CoreMatchers . is ( STRING_5 ) ) 