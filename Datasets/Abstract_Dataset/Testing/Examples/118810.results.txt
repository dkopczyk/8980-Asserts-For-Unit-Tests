METHOD_0 ( ) { io . IDENT_0 . core . IDENT_1 IDENT_2 = io . IDENT_0 . core . IDENT_1 . parse ( STRING_0 ) ; System . out . println ( IDENT_2 ) ; System . out . println ( io . IDENT_0 . core . IDENT_1 . encode ( IDENT_2 ) ) ; com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 params = com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_7 . METHOD_1 ( STRING_1 ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_8 = new java . util . HashMap < java . lang . String , java . lang . String > ( ) { { put ( STRING_2 , STRING_3 ) ; } } ; "<AssertPlaceHolder>" ; } METHOD_2 ( T , java . lang . Class , java . lang . String [ ] ) { com . fasterxml . jackson . databind . IDENT_9 node = IDENT_10 . IDENT_11 . METHOD_3 ( object ) ; for ( java . lang . String command : commands ) if ( ! ( com . IDENT_3 . IDENT_4 . cli . IDENT_12 . METHOD_2 ( node , command ) ) ) return null ; try { return ( ( T ) ( IDENT_10 . IDENT_11 . METHOD_4 ( node , clazz ) ) ) ; } catch ( com . fasterxml . jackson . core . IDENT_13 e ) { throw new java . lang . IllegalArgumentException ( ) ; } }
org . junit . Assert . assertNotNull ( com . IDENT_3 . IDENT_4 . cli . IDENT_12 . METHOD_2 ( params , com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . class , IDENT_8 ) ) 