METHOD_0 ( ) { org . apache . IDENT_0 . util . IDENT_1 IDENT_2 = org . apache . IDENT_0 . util . IDENT_1 . METHOD_1 ( ) . name ( STRING_0 ) . METHOD_2 ( 1 ) . build ( ) ; java . util . concurrent . atomic . IDENT_3 IDENT_4 = new java . util . concurrent . atomic . METHOD_3 ( 0L ) ; java . util . concurrent . IDENT_5 IDENT_6 = new java . util . concurrent . METHOD_4 ( 1 ) ; java . util . concurrent . IDENT_7 < java . lang . Long > future = org . apache . IDENT_0 . common . concurrent . IDENT_8 . METHOD_5 ( ) ; org . apache . IDENT_0 . common . concurrent . IDENT_8 . METHOD_6 ( future , ( result , IDENT_9 ) -> { IDENT_4 . set ( result ) ; IDENT_6 . METHOD_7 ( ) ; } , IDENT_2 , new java . lang . Object ( ) ) ; org . apache . IDENT_0 . common . concurrent . IDENT_8 . METHOD_8 ( future , INT_0 ) ; IDENT_6 . METHOD_9 ( ) ; "<AssertPlaceHolder>" ; } get ( ) { return IDENT_10 . get ( ) ; }
org . junit . Assert . assertEquals ( INT_0 , IDENT_4 . get ( ) ) 