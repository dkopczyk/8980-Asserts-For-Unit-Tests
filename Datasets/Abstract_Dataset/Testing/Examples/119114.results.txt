METHOD_0 ( ) { int i = 0 ; for ( java . lang . String IDENT_0 : nl . bzk . brp . bijhouding . bericht . model . IDENT_1 . IDENT_2 ) { test ( STRING_0 , IDENT_0 , IDENT_3 . IDENT_4 , IDENT_5 . IDENT_6 ) ; i ++ ; } "<AssertPlaceHolder>" ; } test ( java . lang . String , java . lang . String , nl . bzk . brp . bijhouding . bericht . model . IDENT_3 , nl . bzk . IDENT_7 . dal . domein . brp . IDENT_8 . IDENT_5 [ ] ) { final nl . bzk . brp . bijhouding . bericht . model . IDENT_9 builder = new nl . bzk . brp . bijhouding . bericht . model . METHOD_1 ( ) ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_10 element = builder . METHOD_2 ( STRING_1 , IDENT_11 , IDENT_12 ) ; final nl . bzk . brp . bijhouding . bericht . model . METHOD_1 . IDENT_13 IDENT_14 = new nl . bzk . brp . bijhouding . bericht . model . METHOD_1 . METHOD_3 ( ) ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_15 IDENT_16 = mock ( nl . bzk . brp . bijhouding . bericht . model . IDENT_15 . class ) ; IDENT_14 . METHOD_4 ( java . util . Collections . singletonList ( IDENT_16 ) ) ; IDENT_14 . METHOD_5 ( IDENT_17 ) ; IDENT_14 . METHOD_6 ( STRING_2 ) ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_18 IDENT_19 = builder . METHOD_7 ( STRING_3 , IDENT_14 ) ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_20 bericht = mock ( nl . bzk . brp . bijhouding . bericht . model . IDENT_20 . class ) ; when ( bericht . METHOD_8 ( ) ) . thenReturn ( IDENT_19 ) ; element . METHOD_9 ( bericht ) ; METHOD_10 ( element . METHOD_11 ( ) , IDENT_21 ) ; return element ; }
org . junit . Assert . assertEquals ( i , nl . bzk . brp . bijhouding . bericht . model . IDENT_1 . IDENT_2 . length ) 