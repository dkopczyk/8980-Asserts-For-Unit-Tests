METHOD_0 ( ) { final java . util . List < nl . bzk . brp . bijhouding . bericht . model . IDENT_0 > IDENT_1 = new java . util . ArrayList ( ) ; final long IDENT_2 = 1L ; final nl . bzk . IDENT_3 . dal . domein . brp . entity . IDENT_4 IDENT_5 = new nl . bzk . IDENT_3 . dal . domein . brp . entity . METHOD_1 ( IDENT_6 ) ; IDENT_5 . setId ( IDENT_2 ) ; IDENT_5 . METHOD_2 ( INT_0 ) ; when ( IDENT_6 . METHOD_3 ( ) ) . thenReturn ( java . util . Collections . METHOD_4 ( IDENT_5 ) ) ; when ( IDENT_6 . METHOD_5 ( any ( nl . bzk . brp . bijhouding . bericht . model . IDENT_7 . class ) ) ) . thenReturn ( new nl . bzk . IDENT_3 . dal . domein . brp . entity . METHOD_1 ( IDENT_6 ) ) ; when ( IDENT_6 . METHOD_6 ( ( "" + IDENT_2 ) , nl . bzk . IDENT_3 . dal . domein . brp . entity . METHOD_1 . class ) ) . thenReturn ( IDENT_5 ) ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_8 . IDENT_9 IDENT_10 = new nl . bzk . brp . bijhouding . bericht . model . IDENT_8 . METHOD_7 ( ) ; IDENT_10 . METHOD_8 ( builder . METHOD_9 ( STRING_0 , ( "" + IDENT_2 ) ) ) ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_8 . METHOD_7 IDENT_11 = new nl . bzk . brp . bijhouding . bericht . model . IDENT_8 . METHOD_7 ( ) ; IDENT_11 . METHOD_8 ( builder . METHOD_10 ( STRING_1 , STRING_2 , STRING_3 ) ) ; nl . bzk . brp . bijhouding . bericht . model . IDENT_12 . METHOD_11 ( IDENT_13 , METHOD_12 ( METHOD_13 ( IDENT_10 , IDENT_11 ) ) , IDENT_1 ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_14 . size ( ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_1 . size ( ) ) 