METHOD_0 ( ) { final nl . bzk . brp . bijhouding . bericht . model . IDENT_0 . IDENT_1 IDENT_2 = new nl . bzk . brp . bijhouding . bericht . model . IDENT_0 . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( java . util . Collections . singletonList ( builder . METHOD_3 ( STRING_0 , null , null , null , null , STRING_1 ) ) ) ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_3 IDENT_4 = builder . METHOD_4 ( IDENT_5 , IDENT_2 ) ; final nl . bzk . IDENT_6 . dal . domein . brp . entity . IDENT_7 IDENT_8 = new nl . bzk . IDENT_6 . dal . domein . brp . entity . METHOD_5 ( nl . bzk . IDENT_6 . dal . domein . brp . IDENT_9 . IDENT_10 . IDENT_11 ) ; IDENT_8 . METHOD_6 ( new nl . bzk . IDENT_6 . dal . domein . brp . entity . METHOD_7 ( IDENT_8 , new nl . bzk . IDENT_6 . dal . domein . brp . entity . METHOD_8 ( STRING_2 , STRING_3 ) , nl . bzk . IDENT_6 . dal . domein . brp . IDENT_9 . IDENT_12 . IDENT_13 , nl . bzk . IDENT_6 . dal . domein . brp . IDENT_9 . IDENT_14 . IDENT_15 ) ) ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_16 IDENT_17 = nl . bzk . brp . bijhouding . bericht . model . IDENT_16 . METHOD_9 ( IDENT_8 ) ; when ( bericht . METHOD_10 ( any ( ) , any ( ) ) ) . thenReturn ( IDENT_17 ) ; final java . util . Map < java . lang . String , nl . bzk . brp . bijhouding . bericht . model . IDENT_18 > IDENT_19 = new java . util . HashMap ( ) ; IDENT_19 . put ( nl . bzk . brp . bijhouding . bericht . model . IDENT_20 . IDENT_21 , IDENT_4 ) ; when ( METHOD_11 ( ) . METHOD_12 ( anyString ( ) ) ) . thenReturn ( false ) ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_22 IDENT_23 = METHOD_13 ( nl . bzk . brp . bijhouding . bericht . model . IDENT_20 . IDENT_24 , nl . bzk . brp . bijhouding . bericht . model . IDENT_20 . IDENT_25 ) ; final nl . bzk . brp . bijhouding . bericht . model . IDENT_3 IDENT_26 = IDENT_23 . METHOD_14 ( ) ; IDENT_26 . METHOD_15 ( IDENT_19 ) ; "<AssertPlaceHolder>" ; } METHOD_16 ( ) { final java . util . List < nl . bzk . brp . bijhouding . bericht . model . IDENT_27 > IDENT_28 = new java . util . ArrayList ( ) ; METHOD_17 ( IDENT_28 ) ; METHOD_18 ( IDENT_28 ) ; return IDENT_28 ; }
org . junit . Assert . assertEquals ( 0 , IDENT_23 . METHOD_16 ( ) . size ( ) ) 