METHOD_0 ( ) { final nl . bzk . brp . domain . IDENT_0 . IDENT_1 IDENT_2 = nl . bzk . brp . domain . IDENT_0 . helper . IDENT_3 . METHOD_1 ( ) . build ( ) ; final nl . bzk . brp . service . IDENT_4 . algemeen . IDENT_5 IDENT_6 = new nl . bzk . brp . service . IDENT_4 . algemeen . METHOD_2 ( ) ; final nl . bzk . brp . domain . IDENT_0 . IDENT_2 . IDENT_7 IDENT_8 = new nl . bzk . brp . domain . IDENT_0 . IDENT_2 . METHOD_3 ( IDENT_2 , 0L ) ; final nl . bzk . brp . service . IDENT_4 . algemeen . IDENT_9 IDENT_10 = new nl . bzk . brp . service . IDENT_4 . algemeen . METHOD_4 ( IDENT_6 , IDENT_8 , new nl . bzk . brp . service . IDENT_4 . algemeen . METHOD_5 ( nl . bzk . IDENT_11 . dal . domein . brp . IDENT_12 . IDENT_13 . IDENT_14 ) , null , new nl . bzk . brp . service . IDENT_4 . IDENT_15 . METHOD_6 ( ) ) ; final java . util . List < nl . bzk . brp . domain . IDENT_16 . IDENT_17 > IDENT_18 = IDENT_19 . METHOD_7 ( com . google . common . collect . Lists . newArrayList ( IDENT_10 ) ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_20 . size ( ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_18 . size ( ) ) == 1 ) ) 