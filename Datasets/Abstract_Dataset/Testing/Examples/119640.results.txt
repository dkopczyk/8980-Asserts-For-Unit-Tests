METHOD_0 ( ) { final nl . bzk . IDENT_0 . dal . domein . brp . IDENT_1 . IDENT_2 IDENT_3 = nl . bzk . IDENT_0 . dal . domein . brp . IDENT_1 . IDENT_2 . IDENT_4 ; final nl . bzk . IDENT_0 . dal . domein . brp . entity . IDENT_5 IDENT_6 = nl . bzk . brp . domain . algemeen . IDENT_7 . METHOD_1 ( 1 , IDENT_3 ) ; final nl . bzk . IDENT_0 . dal . domein . brp . entity . IDENT_8 IDENT_9 = new nl . bzk . IDENT_0 . dal . domein . brp . entity . METHOD_2 ( nl . bzk . brp . domain . algemeen . IDENT_10 . METHOD_3 ( ) . METHOD_4 ( 1 ) . METHOD_5 ( STRING_0 ) . build ( ) , nl . bzk . IDENT_0 . dal . domein . brp . IDENT_1 . IDENT_11 . IDENT_12 ) ; final nl . bzk . IDENT_0 . dal . domein . brp . entity . IDENT_13 IDENT_14 = new nl . bzk . IDENT_0 . dal . domein . brp . entity . METHOD_6 ( IDENT_9 , IDENT_6 ) ; final nl . bzk . brp . domain . algemeen . IDENT_15 IDENT_16 = new nl . bzk . brp . domain . algemeen . METHOD_7 ( IDENT_14 , nl . bzk . brp . domain . algemeen . IDENT_17 . METHOD_8 ( IDENT_6 , IDENT_3 ) ) ; final java . util . Map < nl . bzk . brp . domain . algemeen . METHOD_7 , java . util . List < nl . bzk . brp . domain . IDENT_18 . IDENT_19 > > IDENT_20 = new java . util . HashMap ( ) ; final nl . bzk . brp . domain . IDENT_21 . IDENT_22 . IDENT_23 IDENT_24 = nl . bzk . brp . domain . IDENT_21 . helper . IDENT_25 . METHOD_9 ( 1 ) ; final nl . bzk . brp . domain . IDENT_18 . IDENT_19 IDENT_26 = new nl . bzk . brp . domain . IDENT_18 . IDENT_19 . Builder ( IDENT_24 , nl . bzk . brp . domain . IDENT_18 . IDENT_27 . builder ( ) . build ( ) ) . METHOD_10 ( 1 ) . METHOD_11 ( true ) . build ( ) ; IDENT_20 . put ( IDENT_16 , com . google . common . collect . Lists . newArrayList ( IDENT_26 ) ) ; final java . util . Map < nl . bzk . brp . domain . algemeen . METHOD_7 , java . util . Map < nl . bzk . brp . domain . IDENT_21 . IDENT_22 . IDENT_23 , nl . bzk . brp . domain . algemeen . IDENT_28 > > IDENT_29 = new java . util . HashMap ( ) ; java . util . Map < nl . bzk . brp . domain . IDENT_21 . IDENT_22 . IDENT_23 , nl . bzk . brp . domain . algemeen . IDENT_28 > IDENT_30 = new java . util . HashMap ( ) ; IDENT_29 . put ( IDENT_16 , IDENT_30 ) ; IDENT_30 . put ( IDENT_24 , IDENT_28 . IDENT_31 ) ; IDENT_29 . put ( IDENT_16 , IDENT_30 ) ; final java . util . List < nl . bzk . brp . domain . IDENT_18 . IDENT_32 > IDENT_33 = service . METHOD_12 ( IDENT_24 . METHOD_13 ( ) . getId ( ) , IDENT_20 , IDENT_29 ) ; "<AssertPlaceHolder>" ; } isEmpty ( ) { return IDENT_34 . isEmpty ( ) ; }
org . junit . Assert . assertFalse ( IDENT_33 . isEmpty ( ) ) 