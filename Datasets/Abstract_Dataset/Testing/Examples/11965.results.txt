METHOD_0 ( ) { java . lang . String IDENT_0 = runtime . METHOD_1 ( ) ; org . apache . IDENT_1 . IDENT_2 IDENT_3 = ( ( org . apache . IDENT_1 . IDENT_2 ) ( METHOD_2 ( conf , IDENT_0 ) ) ) ; org . apache . IDENT_1 . IDENT_4 . METHOD_3 ( IDENT_3 , 5 , 0 , 1 ) ; java . util . concurrent . IDENT_5 < org . apache . IDENT_1 . IDENT_6 > IDENT_7 = METHOD_4 ( IDENT_3 , 0 ) ; org . apache . IDENT_1 . IDENT_6 IDENT_8 = org . apache . IDENT_1 . util . Utils . METHOD_5 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; IDENT_3 . close ( ) ; } METHOD_5 ( java . util . concurrent . IDENT_5 ) { return org . apache . IDENT_1 . common . concurrent . IDENT_9 . result ( result , ( IDENT_10 ) -> { if ( IDENT_10 instanceof java . io . IOException ) { return ( ( java . io . IOException ) ( IDENT_10 ) ) ; } else if ( IDENT_10 instanceof org . apache . IDENT_11 . IDENT_12 ) { return new org . apache . IDENT_1 . exceptions . METHOD_6 ( STRING_0 , ( ( org . apache . IDENT_11 . IDENT_12 ) ( IDENT_10 ) ) ) ; } else if ( IDENT_10 instanceof org . apache . IDENT_13 . client . IDENT_14 ) { return new org . apache . IDENT_1 . exceptions . METHOD_7 ( STRING_1 , ( ( org . apache . IDENT_13 . client . IDENT_14 ) ( IDENT_10 ) ) . getCode ( ) ) ; } else if ( IDENT_10 instanceof java . lang . IDENT_15 ) { return new org . apache . IDENT_1 . exceptions . METHOD_8 ( STRING_2 , IDENT_10 ) ; } else { return new java . io . IOException ( STRING_3 , IDENT_10 ) ; } } ) ; }
org . junit . Assert . assertEquals ( null , IDENT_8 ) 