METHOD_0 ( ) { final nl . bzk . brp . domain . algemeen . IDENT_0 IDENT_1 = nl . bzk . brp . domain . algemeen . IDENT_2 . METHOD_1 ( IDENT_3 . IDENT_4 ) ; IDENT_1 . METHOD_2 ( ) . METHOD_3 ( IDENT_5 . IDENT_6 . getId ( ) ) ; final java . util . List < nl . bzk . brp . service . IDENT_7 . IDENT_8 . IDENT_9 > IDENT_10 = com . google . common . collect . Lists . newArrayList ( new nl . bzk . brp . service . IDENT_7 . IDENT_8 . METHOD_4 ( IDENT_1 , new nl . bzk . brp . domain . IDENT_11 . IDENT_7 . METHOD_5 ( ) ) ) ; final nl . bzk . brp . domain . IDENT_12 . IDENT_13 . IDENT_14 IDENT_15 = new nl . bzk . brp . domain . IDENT_12 . IDENT_13 . METHOD_6 ( nl . bzk . brp . domain . IDENT_12 . helper . IDENT_16 . METHOD_7 ( ) . build ( ) , 1L ) ; org . mockito . Mockito . when ( IDENT_17 . METHOD_8 ( any ( ) ) ) . thenReturn ( com . google . common . collect . Lists . newArrayList ( new nl . bzk . brp . domain . IDENT_18 . METHOD_9 ( null , IDENT_1 , null ) ) ) ; final java . util . List < nl . bzk . brp . domain . IDENT_18 . METHOD_9 > IDENT_19 = IDENT_20 . METHOD_8 ( IDENT_10 , IDENT_15 ) ; org . mockito . Mockito . verify ( IDENT_17 ) . METHOD_8 ( IDENT_21 . METHOD_10 ( ) ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_22 . size ( ) ; }
org . junit . Assert . assertEquals ( 1 , IDENT_19 . size ( ) ) 