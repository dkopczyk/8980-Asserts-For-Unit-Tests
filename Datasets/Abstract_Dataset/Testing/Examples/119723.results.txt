METHOD_0 ( ) { final nl . bzk . IDENT_0 . dal . domein . brp . entity . IDENT_1 IDENT_2 = nl . bzk . brp . domain . algemeen . IDENT_3 . METHOD_1 ( nl . bzk . brp . domain . algemeen . IDENT_4 . METHOD_2 ( IDENT_5 . IDENT_6 ) , IDENT_5 . IDENT_6 ) ; final nl . bzk . brp . domain . algemeen . IDENT_7 IDENT_8 = new nl . bzk . brp . domain . algemeen . METHOD_3 ( nl . bzk . brp . domain . algemeen . IDENT_4 . METHOD_4 ( IDENT_9 . IDENT_10 , IDENT_2 ) , IDENT_2 ) ; final nl . bzk . IDENT_0 . dal . domein . brp . entity . IDENT_11 IDENT_12 = IDENT_8 . METHOD_5 ( ) ; IDENT_12 . setId ( 1 ) ; org . mockito . Mockito . when ( IDENT_13 . METHOD_6 ( org . mockito . Mockito . METHOD_7 ( ) ) ) . thenReturn ( IDENT_12 ) ; final nl . bzk . brp . domain . IDENT_14 . IDENT_15 . IDENT_16 IDENT_17 = new nl . bzk . brp . domain . IDENT_14 . IDENT_15 . METHOD_8 ( ) ; IDENT_17 . METHOD_9 ( IDENT_12 . getId ( ) ) ; IDENT_17 . METHOD_10 ( 1 ) ; IDENT_17 . METHOD_11 ( 1 ) ; final nl . bzk . brp . domain . algemeen . METHOD_3 IDENT_18 = IDENT_19 . METHOD_12 ( IDENT_17 , 1 ) ; "<AssertPlaceHolder>" ; IDENT_19 . METHOD_12 ( IDENT_17 , 1 ) ; org . mockito . Mockito . verify ( IDENT_13 , times ( 1 ) ) . METHOD_6 ( org . mockito . Mockito . METHOD_7 ( ) ) ; IDENT_19 . METHOD_13 ( ) ; IDENT_19 . METHOD_12 ( IDENT_17 , 1 ) ; org . mockito . Mockito . verify ( IDENT_13 , times ( 2 ) ) . METHOD_6 ( org . mockito . Mockito . METHOD_7 ( ) ) ; IDENT_19 . METHOD_12 ( IDENT_17 , 2 ) ; org . mockito . Mockito . verify ( IDENT_13 , times ( 3 ) ) . METHOD_6 ( org . mockito . Mockito . METHOD_7 ( ) ) ; IDENT_19 . METHOD_12 ( IDENT_17 , 2 ) ; org . mockito . Mockito . verify ( IDENT_13 , times ( 3 ) ) . METHOD_6 ( org . mockito . Mockito . METHOD_7 ( ) ) ; } METHOD_5 ( ) { return this . IDENT_20 ; }
org . junit . Assert . assertEquals ( IDENT_8 . METHOD_5 ( ) , IDENT_18 . METHOD_5 ( ) ) 