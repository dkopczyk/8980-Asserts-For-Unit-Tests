test ( ) { final java . util . List < nl . bzk . migratiebrp . conversie . model . IDENT_0 . IDENT_1 . IDENT_2 > IDENT_3 = new nl . bzk . migratiebrp . bericht . model . IDENT_0 . format . METHOD_0 ( ) . format ( METHOD_1 ( ) ) ; final java . util . List < nl . bzk . migratiebrp . conversie . model . IDENT_0 . IDENT_1 . IDENT_2 > IDENT_4 = IDENT_5 . filter ( null , null , null , null , IDENT_3 , java . util . Arrays . asList ( STRING_0 , STRING_1 4 , STRING_2 , STRING_1 2 , STRING_3 , STRING_4 , STRING_5 0 , STRING_6 , STRING_7 ) ) ; final java . lang . String IDENT_6 = subject . METHOD_2 ( null , null , IDENT_3 , IDENT_4 ) ; nl . bzk . brp . IDENT_7 . IDENT_0 . format . IDENT_8 . LOGGER . info ( IDENT_6 ) ; final java . lang . StringBuilder IDENT_9 = new java . lang . StringBuilder ( ) ; IDENT_9 . append ( STRING_1 0 ) ; IDENT_9 . append ( STRING_5 2 ) ; IDENT_9 . append ( STRING_1 9 ) . append ( STRING_1 7 ) ; IDENT_9 . append ( STRING_1 5 ) . append ( STRING_5 1 ) . append ( STRING_8 ) ; IDENT_9 . append ( STRING_1 3 ) . append ( STRING_5 ) ; IDENT_9 . append ( STRING_1 8 ) . append ( STRING_1 1 ) . append ( STRING_1 6 ) ; IDENT_9 . append ( STRING_1 ) . append ( STRING_9 ) . append ( nl . bzk . brp . IDENT_7 . IDENT_0 . format . IDENT_8 . IDENT_10 ) ; "<AssertPlaceHolder>" ; } toString ( ) { return ( STRING_10 + ( IDENT_11 ) ) + "]" ; }
org . junit . Assert . assertEquals ( IDENT_9 . toString ( ) , IDENT_6 ) 