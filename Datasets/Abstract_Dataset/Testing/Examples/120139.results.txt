METHOD_0 ( ) { IDENT_0 . METHOD_1 ( false ) ; final nl . bzk . migratiebrp . bericht . model . sync . impl . IDENT_1 IDENT_2 = new nl . bzk . migratiebrp . bericht . model . sync . impl . METHOD_2 ( ) ; IDENT_2 . METHOD_3 ( STRING_0 ) ; IDENT_2 . METHOD_4 ( STRING_1 ) ; final nl . bzk . migratiebrp . bericht . model . sync . impl . IDENT_3 IDENT_4 = new nl . bzk . migratiebrp . bericht . model . sync . impl . METHOD_5 ( ) ; org . mockito . Mockito . when ( IDENT_5 . METHOD_6 ( org . mockito . Matchers . eq ( IDENT_2 ) , org . mockito . Matchers . < nl . bzk . IDENT_6 . dal . domein . brp . entity . IDENT_7 > any ( ) ) ) . thenReturn ( IDENT_4 ) ; "<AssertPlaceHolder>" ; org . mockito . Mockito . verify ( IDENT_5 ) . METHOD_6 ( org . mockito . Matchers . eq ( IDENT_2 ) , org . mockito . Matchers . < nl . bzk . IDENT_6 . dal . domein . brp . entity . IDENT_7 > any ( ) ) ; org . mockito . Mockito . METHOD_7 ( IDENT_8 , IDENT_5 , IDENT_9 ) ; } METHOD_8 ( nl . bzk . migratiebrp . bericht . model . sync . impl . IDENT_10 ) { final nl . bzk . migratiebrp . bericht . model . sync . IDENT_11 . IDENT_12 type = new nl . bzk . migratiebrp . bericht . model . sync . IDENT_11 . METHOD_9 ( ) ; type . METHOD_10 ( new nl . bzk . migratiebrp . bericht . model . sync . IDENT_11 . METHOD_11 ( ) ) ; final java . util . List < nl . bzk . migratiebrp . bericht . model . sync . IDENT_11 . IDENT_13 > IDENT_14 = type . METHOD_12 ( ) . METHOD_13 ( ) ; for ( final nl . bzk . migratiebrp . synchronisatie . dal . domein . brp . kern . entity . IDENT_15 IDENT_16 : IDENT_17 . METHOD_14 ( ) ) { final nl . bzk . migratiebrp . bericht . model . sync . IDENT_11 . IDENT_13 IDENT_18 = new nl . bzk . migratiebrp . bericht . model . sync . IDENT_11 . METHOD_15 ( ) ; IDENT_18 . METHOD_16 ( METHOD_17 ( IDENT_16 . getCode ( ) ) ) ; IDENT_18 . METHOD_18 ( METHOD_19 ( IDENT_16 . METHOD_20 ( ) . getCode ( ) ) ) ; if ( ( IDENT_16 . METHOD_20 ( ) . METHOD_21 ( ) ) != null ) { IDENT_18 . METHOD_22 ( java . math . BigInteger . valueOf ( IDENT_16 . METHOD_20 ( ) . METHOD_21 ( ) . METHOD_23 ( ) ) ) ; } IDENT_14 . add ( IDENT_18 ) ; } final nl . bzk . migratiebrp . bericht . model . sync . IDENT_11 . METHOD_15 IDENT_19 = new nl . bzk . migratiebrp . bericht . model . sync . IDENT_11 . METHOD_15 ( ) ; IDENT_19 . METHOD_16 ( nl . bzk . migratiebrp . synchronisatie . runtime . service . IDENT_20 . IDENT_21 ) ; IDENT_19 . METHOD_18 ( nl . bzk . migratiebrp . synchronisatie . runtime . service . IDENT_20 . IDENT_22 ) ; IDENT_14 . add ( IDENT_19 ) ; final nl . bzk . migratiebrp . bericht . model . sync . impl . IDENT_23 IDENT_4 = new nl . bzk . migratiebrp . bericht . model . sync . impl . METHOD_24 ( type ) ; IDENT_4 . METHOD_25 ( IDENT_24 . IDENT_25 ) ; IDENT_4 . METHOD_3 ( nl . bzk . migratiebrp . synchronisatie . runtime . util . IDENT_26 . METHOD_26 ( ) ) ; IDENT_4 . METHOD_27 ( IDENT_2 . METHOD_28 ( ) ) ; return IDENT_4 ; }
org . junit . Assert . assertSame ( IDENT_4 , subject . METHOD_8 ( IDENT_2 ) ) 