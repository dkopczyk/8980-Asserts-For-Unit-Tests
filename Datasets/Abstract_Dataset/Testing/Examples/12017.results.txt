METHOD_0 ( ) { IDENT_0 . IDENT_1 IDENT_2 = new IDENT_0 . METHOD_1 ( ) ; java . util . Collection < IDENT_0 . IDENT_3 > IDENT_4 = org . apache . drill . exec . client . IDENT_5 . application . METHOD_2 ( IDENT_2 ) ; java . util . List < java . lang . String > IDENT_6 = java . util . Arrays . asList ( STRING_0 , STRING_1 ) ; java . util . List < IDENT_0 . IDENT_3 > IDENT_7 = IDENT_4 . stream ( ) . filter ( ( c ) -> c . METHOD_3 ( ) . stream ( ) . METHOD_4 ( IDENT_6 :: contains ) ) . collect ( java . util . stream . IDENT_8 . toList ( ) ) ; "<AssertPlaceHolder>" ; } isEmpty ( ) { return ( IDENT_9 ) == ( org . apache . drill . exec . IDENT_10 . IDENT_11 . impl . IDENT_12 . IDENT_13 ) ; }
org . junit . Assert . assertTrue ( IDENT_7 . isEmpty ( ) ) 