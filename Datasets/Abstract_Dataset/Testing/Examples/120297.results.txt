METHOD_0 ( ) { final nl . bzk . migratiebrp . IDENT_0 . IDENT_1 . client . impl . IDENT_2 factory = new nl . bzk . migratiebrp . IDENT_0 . IDENT_1 . client . impl . METHOD_1 ( ) ; final org . springframework . context . IDENT_3 IDENT_4 = new org . springframework . context . support . METHOD_2 ( STRING_0 ) ; final org . springframework . beans . factory . config . IDENT_5 IDENT_6 = org . mockito . Mockito . mock ( org . springframework . beans . factory . config . IDENT_5 . class ) ; org . springframework . test . util . IDENT_7 . METHOD_3 ( factory , STRING_1 , STRING_2 ) ; org . springframework . test . util . IDENT_7 . METHOD_3 ( factory , STRING_3 , INT_0 ) ; org . springframework . test . util . IDENT_7 . METHOD_3 ( factory , STRING_4 , "" ) ; org . springframework . test . util . IDENT_7 . METHOD_3 ( factory , STRING_5 , STRING_6 0 ) ; org . springframework . test . util . IDENT_7 . METHOD_3 ( factory , STRING_7 , STRING_6 0 ) ; org . springframework . test . util . IDENT_7 . METHOD_3 ( factory , STRING_6 2 , IDENT_4 ) ; org . springframework . test . util . IDENT_7 . METHOD_3 ( IDENT_8 , STRING_6 , factory ) ; org . mockito . Mockito . when ( IDENT_6 . METHOD_4 ( nl . bzk . migratiebrp . IDENT_0 . IDENT_1 . client . IDENT_9 . class ) ) . thenReturn ( IDENT_10 ) ; try { IDENT_8 . connect ( ) ; org . junit . Assert . fail ( STRING_8 ) ; } catch ( final nl . bzk . migratiebrp . IDENT_0 . IDENT_1 . client . exception . IDENT_11 IDENT_12 ) { "<AssertPlaceHolder>" ; } catch ( final java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( ( ( nl . bzk . migratiebrp . IDENT_0 . IDENT_1 . client . impl . IDENT_13 . IDENT_14 ) + e ) ) ; } } getMessage ( ) { return message ; }
org . junit . Assert . assertTrue ( IDENT_12 . getMessage ( ) . startsWith ( STRING_6 1 ) ) 