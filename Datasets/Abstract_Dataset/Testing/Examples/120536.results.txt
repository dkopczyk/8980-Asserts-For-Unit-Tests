METHOD_0 ( ) { nl . bzk . brp . model . IDENT_0 . IDENT_1 IDENT_2 = new nl . bzk . brp . model . IDENT_0 . METHOD_1 ( INT_0 ) ; nl . bzk . brp . model . objecttype . bericht . IDENT_3 IDENT_4 = METHOD_2 ( STRING_0 , STRING_1 , IDENT_2 ) ; nl . bzk . brp . model . objecttype . operationeel . IDENT_5 IDENT_6 = new nl . bzk . brp . model . objecttype . operationeel . METHOD_3 ( IDENT_4 . METHOD_4 ( ) . get ( 0 ) . METHOD_5 ( ) ) ; org . springframework . test . util . IDENT_7 . METHOD_6 ( IDENT_6 , STRING_2 , 1 ) ; nl . bzk . brp . model . objecttype . operationeel . METHOD_3 IDENT_8 = new nl . bzk . brp . model . objecttype . operationeel . METHOD_3 ( IDENT_4 . METHOD_4 ( ) . get ( 1 ) . METHOD_5 ( ) ) ; org . springframework . test . util . IDENT_7 . METHOD_6 ( IDENT_8 , STRING_2 , 2 ) ; org . mockito . Mockito . when ( IDENT_9 . METHOD_7 ( new nl . bzk . brp . model . IDENT_0 . METHOD_8 ( STRING_0 ) ) ) . thenReturn ( IDENT_6 ) ; org . mockito . Mockito . when ( IDENT_9 . METHOD_7 ( new nl . bzk . brp . model . IDENT_0 . METHOD_8 ( STRING_1 ) ) ) . thenReturn ( IDENT_8 ) ; org . mockito . Mockito . when ( IDENT_10 . METHOD_9 ( 1 , IDENT_2 ) ) . thenReturn ( false ) ; org . mockito . Mockito . when ( IDENT_10 . METHOD_9 ( 2 , IDENT_2 ) ) . thenReturn ( false ) ; java . util . List < nl . bzk . brp . model . validatie . IDENT_11 > IDENT_12 = IDENT_13 . METHOD_10 ( null , IDENT_4 , null , null ) ; "<AssertPlaceHolder>" ; org . mockito . Mockito . verify ( IDENT_9 , org . mockito . Mockito . times ( 1 ) ) . METHOD_7 ( new nl . bzk . brp . model . IDENT_0 . METHOD_8 ( STRING_0 ) ) ; org . mockito . Mockito . verify ( IDENT_9 , org . mockito . Mockito . times ( 1 ) ) . METHOD_7 ( new nl . bzk . brp . model . IDENT_0 . METHOD_8 ( STRING_1 ) ) ; org . mockito . Mockito . verify ( IDENT_10 , org . mockito . Mockito . times ( 1 ) ) . METHOD_9 ( 1 , IDENT_2 ) ; org . mockito . Mockito . verify ( IDENT_10 , org . mockito . Mockito . times ( 1 ) ) . METHOD_9 ( 2 , IDENT_2 ) ; } size ( ) { return IDENT_14 . size ( ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_12 . size ( ) ) 