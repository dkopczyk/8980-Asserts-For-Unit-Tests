METHOD_0 ( ) { org . apache . drill . exec . IDENT_0 . impl . IDENT_1 . project . IDENT_2 . IDENT_3 builder = new org . apache . drill . exec . IDENT_0 . impl . IDENT_1 . project . IDENT_2 . METHOD_1 ( ) ; org . apache . hadoop . fs . Path IDENT_4 = new org . apache . hadoop . fs . Path ( STRING_0 ) ; org . apache . hadoop . fs . Path IDENT_5 = new org . apache . hadoop . fs . Path ( STRING_0 1 ) ; org . apache . drill . exec . IDENT_0 . impl . IDENT_1 . file . IDENT_6 IDENT_7 = new org . apache . drill . exec . IDENT_0 . impl . IDENT_1 . file . METHOD_2 ( fixture . METHOD_3 ( ) , METHOD_4 ( org . apache . drill . IDENT_8 . IDENT_9 . com . google . common . collect . Lists . newArrayList ( IDENT_4 , IDENT_5 ) ) ) ; builder . METHOD_5 ( IDENT_7 ) ; builder . METHOD_6 ( org . apache . drill . exec . IDENT_0 . IDENT_10 . impl . IDENT_11 . METHOD_7 ( org . apache . drill . exec . IDENT_0 . impl . IDENT_1 . IDENT_12 . METHOD_8 ( 0 ) , org . apache . drill . exec . IDENT_0 . impl . IDENT_1 . IDENT_12 . METHOD_8 ( 1 ) , IDENT_12 . IDENT_13 , "b" ) ) ; org . apache . drill . exec . IDENT_0 . impl . IDENT_1 . project . IDENT_2 IDENT_14 = new org . apache . drill . exec . IDENT_0 . impl . IDENT_1 . project . METHOD_9 ( fixture . METHOD_10 ( ) , builder ) ; org . apache . drill . exec . record . metadata . IDENT_15 IDENT_16 = new org . apache . drill . exec . record . metadata . METHOD_11 ( ) . add ( "a" , IDENT_17 . IDENT_18 ) . METHOD_12 ( "b" , IDENT_17 . IDENT_19 , 10 ) . METHOD_13 ( ) ; org . apache . drill . exec . record . IDENT_20 IDENT_21 = new org . apache . drill . exec . record . metadata . METHOD_11 ( ) . METHOD_12 ( org . apache . drill . exec . IDENT_0 . impl . IDENT_1 . IDENT_12 . METHOD_8 ( 0 ) , IDENT_17 . IDENT_19 ) . METHOD_12 ( org . apache . drill . exec . IDENT_0 . impl . IDENT_1 . IDENT_12 . METHOD_8 ( 1 ) , IDENT_17 . IDENT_19 ) . add ( IDENT_12 . IDENT_13 , IDENT_17 . IDENT_19 ) . METHOD_12 ( "b" , IDENT_17 . IDENT_19 , 10 ) . build ( ) ; org . apache . drill . exec . IDENT_0 . impl . protocol . IDENT_22 IDENT_23 = new org . apache . drill . exec . IDENT_0 . impl . protocol . METHOD_14 ( ) ; int IDENT_24 ; { IDENT_7 . METHOD_15 ( IDENT_4 ) ; org . apache . drill . exec . IDENT_0 . impl . IDENT_1 . project . IDENT_25 reader = IDENT_14 . METHOD_16 ( ) ; org . apache . drill . exec . IDENT_0 . IDENT_10 . IDENT_26 loader = reader . METHOD_17 ( IDENT_16 ) ; reader . METHOD_18 ( ) ; loader . writer ( ) . METHOD_19 ( 10 , STRING_0 0 ) . METHOD_19 ( 20 , STRING_1 ) ; reader . METHOD_20 ( ) ; IDENT_23 . METHOD_21 ( IDENT_14 . output ( ) ) ; IDENT_24 = IDENT_23 . METHOD_22 ( ) ; org . apache . drill . test . IDENT_10 . IDENT_27 . IDENT_28 expected = fixture . METHOD_23 ( IDENT_21 ) . METHOD_19 ( STRING_2 , STRING_3 , STRING_4 , STRING_0 0 ) . METHOD_19 ( STRING_2 , STRING_3 , STRING_4 , STRING_1 ) . build ( ) ; org . apache . drill . test . IDENT_10 . IDENT_29 . verify ( expected , fixture . METHOD_24 ( IDENT_14 . output ( ) ) ) ; IDENT_14 . METHOD_25 ( ) ; } { IDENT_7 . METHOD_15 ( IDENT_5 ) ; org . apache . drill . exec . IDENT_0 . impl . IDENT_1 . project . IDENT_25 reader = IDENT_14 . METHOD_16 ( ) ; org . apache . drill . exec . IDENT_0 . IDENT_10 . IDENT_26 loader = reader . METHOD_17 ( IDENT_16 ) ; reader . METHOD_18 ( ) ; loader . writer ( ) . METHOD_19 ( INT_0 , STRING_5 ) . METHOD_19 ( INT_1 , STRING_6 ) ; reader . METHOD_20 ( ) ; IDENT_23 . METHOD_21 ( IDENT_14 . output ( ) ) ; "<AssertPlaceHolder>" ; org . apache . drill . test . IDENT_10 . IDENT_27 . IDENT_28 expected = fixture . METHOD_23 ( IDENT_21 ) . METHOD_19 ( STRING_2 , null , STRING_7 , STRING_5 ) . METHOD_19 ( STRING_2 , null , STRING_7 , STRING_6 ) . build ( ) ; org . apache . drill . test . IDENT_10 . IDENT_29 . verify ( expected , fixture . METHOD_24 ( IDENT_14 . output ( ) ) ) ; IDENT_14 . METHOD_25 ( ) ; } IDENT_14 . close ( ) ; } METHOD_22 ( ) { switch ( state ) { case IDENT_30 : case IDENT_31 : case IDENT_32 : case IDENT_33 : return IDENT_34 ; case IDENT_35 : case IDENT_36 : case IDENT_37 : return IDENT_38 ; default : throw new java . lang . IllegalStateException ( ( STRING_8 + ( state ) ) ) ; } }
org . junit . Assert . assertEquals ( METHOD_22 , IDENT_23 . METHOD_22 ( ) ) 