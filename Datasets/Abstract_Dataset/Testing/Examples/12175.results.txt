METHOD_0 ( ) { try ( org . apache . drill . exec . IDENT_0 . IDENT_1 IDENT_0 = METHOD_1 ( 1000 ) ) { org . apache . drill . test . IDENT_2 . test . IDENT_3 . IDENT_4 index = new org . apache . drill . test . IDENT_2 . test . IDENT_3 . METHOD_2 ( ) ; org . apache . drill . exec . IDENT_0 . IDENT_5 . IDENT_6 . IDENT_7 writer = METHOD_3 ( IDENT_0 , index ) ; writer . METHOD_4 ( ) ; java . lang . String base = STRING_0 ; for ( int i = 0 ; i < 10 ; i ++ ) { index . index = i ; writer . METHOD_5 ( ) ; writer . METHOD_6 ( ( base + i ) ) ; writer . METHOD_7 ( ) ; } index . index = 10 ; writer . METHOD_5 ( ) ; java . lang . String IDENT_8 = base + 10 ; writer . METHOD_6 ( IDENT_8 ) ; writer . METHOD_8 ( ) ; byte [ ] IDENT_9 = new byte [ ] { ( ( byte ) ( INT_0 ) ) } ; for ( int i = 0 ; i < INT_1 ; i ++ ) { IDENT_0 . METHOD_9 ( ) . METHOD_10 ( i , IDENT_9 ) ; } for ( int i = 1 ; i < 15 ; i ++ ) { IDENT_0 . METHOD_11 ( ) . METHOD_9 ( ) . set ( i , - INT_2 ) ; } IDENT_0 . METHOD_9 ( ) . METHOD_10 ( 0 , IDENT_8 . getBytes ( IDENT_10 . UTF_8 ) ) ; writer . METHOD_12 ( ) ; index . index = 0 ; writer . METHOD_7 ( ) ; for ( int i = 1 ; i < 5 ; i ++ ) { index . index = i ; writer . METHOD_5 ( ) ; writer . METHOD_6 ( ( base + ( i + 10 ) ) ) ; writer . METHOD_7 ( ) ; } writer . METHOD_13 ( ) ; for ( int i = 0 ; i < 5 ; i ++ ) { "<AssertPlaceHolder>" ; } } } METHOD_14 ( org . apache . drill . exec . IDENT_0 . IDENT_1 , int ) { return new java . lang . String ( IDENT_0 . METHOD_15 ( ) . get ( i ) , org . apache . drill . IDENT_11 . IDENT_12 . com . google . common . base . IDENT_10 . UTF_8 ) ; }
org . junit . Assert . assertEquals ( ( base + ( 10 + i ) ) , METHOD_14 ( IDENT_0 , i ) ) 