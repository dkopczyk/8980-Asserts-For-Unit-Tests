METHOD_0 ( ) { org . apache . IDENT_0 . storage . operation . IDENT_1 IDENT_2 = new org . apache . IDENT_0 . storage . operation . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( STRING_0 ) ; System . out . println ( org . apache . IDENT_0 . common . IDENT_3 . METHOD_3 ( IDENT_4 ) ) ; IDENT_2 . METHOD_4 ( org . apache . IDENT_0 . common . IDENT_3 . METHOD_3 ( IDENT_4 ) ) ; IDENT_2 . METHOD_5 ( org . apache . IDENT_0 . common . IDENT_3 . METHOD_6 ( ( ( IDENT_4 ) + INT_0 ) ) ) ; IDENT_2 . METHOD_7 ( 1000 ) ; org . apache . IDENT_0 . storage . operation . IDENT_5 query = new org . apache . IDENT_0 . storage . operation . METHOD_8 ( IDENT_2 ) ; org . apache . IDENT_0 . storage . result . IDENT_6 < org . apache . IDENT_0 . log . entity . test . IDENT_7 > result = org . apache . IDENT_0 . storage . hbase . spi . IDENT_8 . storage . query ( query , org . apache . IDENT_0 . storage . hbase . spi . IDENT_8 . IDENT_9 ) ; "<AssertPlaceHolder>" ; } query ( org . apache . IDENT_0 . storage . operation . METHOD_8 , org . apache . IDENT_0 . log . entity . meta . IDENT_10 ) { org . apache . IDENT_0 . storage . result . IDENT_6 < IDENT_11 > result = new org . apache . IDENT_0 . storage . result . IDENT_6 < IDENT_11 > ( ) ; try { org . apache . IDENT_0 . query . IDENT_12 reader = org . apache . IDENT_0 . storage . hbase . query . IDENT_13 . select ( query . METHOD_9 ( ) . METHOD_10 ( ) ) . from ( query . METHOD_11 ( ) , query . METHOD_12 ( ) . METHOD_13 ( ) ) . METHOD_14 ( query . METHOD_9 ( ) ) . METHOD_15 ( query . METHOD_16 ( ) , query . METHOD_17 ( ) , query . METHOD_18 ( ) , query . METHOD_19 ( ) ) . METHOD_20 ( query . METHOD_12 ( ) . METHOD_21 ( ) , query . METHOD_12 ( ) . METHOD_22 ( ) ) . METHOD_23 ( query . METHOD_12 ( ) . METHOD_24 ( ) ) . METHOD_25 ( query . METHOD_26 ( ) , query . METHOD_27 ( ) , query . METHOD_28 ( ) ) . METHOD_29 ( query . METHOD_12 ( ) . METHOD_30 ( ) ) . METHOD_31 ( query . METHOD_12 ( ) . METHOD_32 ( ) ) . build ( ) ; java . util . List < IDENT_11 > entities = reader . result ( ) ; result . METHOD_33 ( entities ) ; result . METHOD_34 ( reader . METHOD_35 ( ) ) ; result . METHOD_36 ( reader . METHOD_37 ( ) ) ; result . METHOD_38 ( entities . size ( ) ) ; if ( ! ( query . METHOD_16 ( ) ) ) { result . METHOD_39 ( ( ( java . lang . Class < IDENT_11 > ) ( IDENT_9 . METHOD_40 ( ) ) ) ) ; } else { result . METHOD_39 ( ( ( java . lang . Class < IDENT_11 > ) ( java . util . Map . class ) ) ) ; } result . METHOD_41 ( true ) ; } catch ( java . lang . Exception e ) { org . apache . IDENT_0 . storage . hbase . IDENT_14 . LOG . error ( e . getMessage ( ) , e ) ; throw new java . io . IOException ( e ) ; } return result ; }
org . junit . Assert . assertNotNull ( result ) 