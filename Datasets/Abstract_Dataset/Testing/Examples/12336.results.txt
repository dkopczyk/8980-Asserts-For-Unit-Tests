METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final org . osgi . service . IDENT_1 . Configuration IDENT_2 = mock ( org . osgi . service . IDENT_1 . Configuration . class ) ; when ( IDENT_2 . METHOD_1 ( ) ) . thenReturn ( IDENT_0 ) ; final org . osgi . service . IDENT_1 . IDENT_3 ca = mock ( org . osgi . service . IDENT_1 . IDENT_3 . class ) ; when ( ca . METHOD_2 ( METHOD_3 ( IDENT_0 ) ) ) . thenReturn ( null ) ; when ( ca . METHOD_4 ( STRING_1 , "name" , STRING_2 ) ) . thenReturn ( IDENT_2 ) ; "<AssertPlaceHolder>" ; verify ( ca ) . METHOD_2 ( METHOD_3 ( IDENT_0 ) ) ; verify ( ca ) . METHOD_4 ( STRING_1 , "name" , STRING_2 ) ; METHOD_5 ( ca ) ; } METHOD_6 ( org . osgi . service . IDENT_1 . IDENT_3 , java . lang . String , boolean ) { final java . lang . String filter = ( ( ( STRING_3 + ( org . osgi . framework . Constants . IDENT_4 ) ) + STRING_4 ) + ( org . apache . IDENT_5 . IDENT_6 . impl . IDENT_7 . encode ( IDENT_0 ) ) ) + STRING_5 ; final org . osgi . service . IDENT_1 . Configuration [ ] IDENT_8 = ca . METHOD_2 ( filter ) ; if ( ( IDENT_8 != null ) && ( ( IDENT_8 . length ) > 0 ) ) { return IDENT_8 [ 0 ] ; } if ( ! IDENT_9 ) { return null ; } final int pos = IDENT_0 . indexOf ( STRING_6 ) ; if ( pos != ( - 1 ) ) { final java . lang . String IDENT_10 = IDENT_0 . substring ( 0 , pos ) ; final java . lang . String IDENT_11 = IDENT_0 . substring ( ( pos + 1 ) ) ; return ca . METHOD_4 ( IDENT_10 , IDENT_11 , STRING_2 ) ; } else { return ca . METHOD_7 ( IDENT_0 , STRING_2 ) ; } }
org . junit . Assert . assertEquals ( IDENT_2 , org . apache . IDENT_5 . IDENT_6 . impl . IDENT_7 . METHOD_6 ( ca , IDENT_0 , true ) ) 