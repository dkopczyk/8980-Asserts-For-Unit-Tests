METHOD_0 ( ) { org . osgi . util . converter . IDENT_0 IDENT_1 = new org . osgi . util . converter . METHOD_1 ( ) { @ org . osgi . util . converter . Override public java . lang . Object apply ( java . lang . Object obj , java . lang . reflect . Type IDENT_2 ) throws org . osgi . util . converter . Exception { return INT_0 ; } } ; org . osgi . util . converter . IDENT_3 cb = converter . METHOD_2 ( ) ; org . osgi . util . converter . IDENT_4 c = cb . METHOD_3 ( IDENT_1 ) . build ( ) ; java . util . Map < ? , ? > m = new java . util . HashMap ( ) ; org . osgi . util . converter . IDENT_5 . IDENT_6 i = c . convert ( m ) . to ( org . osgi . util . converter . IDENT_5 . IDENT_6 . class ) ; "<AssertPlaceHolder>" ; } value ( ) { return new java . lang . String [ ] { STRING_0 , STRING_1 } ; }
org . junit . Assert . assertEquals ( INT_0 , i . value ( ) ) 