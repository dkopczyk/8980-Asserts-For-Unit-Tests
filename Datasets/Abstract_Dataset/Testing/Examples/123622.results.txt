METHOD_0 ( ) { final nl . bzk . brp . model . IDENT_0 . impl . kern . IDENT_1 IDENT_2 = nl . bzk . brp . util . IDENT_3 . IDENT_4 . METHOD_1 ( ) ; final nl . bzk . brp . model . IDENT_5 . kern . IDENT_6 IDENT_7 = new nl . bzk . brp . model . IDENT_0 . IDENT_8 . kern . METHOD_2 ( IDENT_2 ) ; final java . util . Set < nl . bzk . brp . model . IDENT_0 . impl . kern . IDENT_9 > IDENT_10 = new java . util . HashSet ( ) ; final nl . bzk . brp . util . IDENT_0 . kern . IDENT_11 IDENT_12 = new nl . bzk . brp . util . IDENT_0 . kern . METHOD_3 ( IDENT_13 . IDENT_14 . METHOD_4 ( ) ) . METHOD_5 ( IDENT_2 . METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( ) ) . METHOD_9 ( ) ; IDENT_10 . add ( IDENT_12 . build ( ) ) ; org . springframework . test . util . IDENT_15 . METHOD_10 ( IDENT_2 , STRING_0 , IDENT_10 ) ; final boolean IDENT_16 = nl . bzk . brp . model . IDENT_0 . util . IDENT_17 . METHOD_11 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_11 ( nl . bzk . brp . model . IDENT_5 . kern . IDENT_6 ) { boolean IDENT_18 = false ; for ( final nl . bzk . brp . model . IDENT_5 . kern . IDENT_19 IDENT_20 : IDENT_7 . METHOD_12 ( ) ) { if ( IDENT_20 . METHOD_13 ( ) . METHOD_4 ( ) . getCode ( ) . equals ( IDENT_21 . IDENT_22 ) ) { IDENT_18 = true ; break ; } } return IDENT_18 ; }
org . junit . Assert . assertFalse ( IDENT_16 ) 