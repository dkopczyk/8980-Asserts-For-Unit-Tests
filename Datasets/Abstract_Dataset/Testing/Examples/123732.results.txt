METHOD_0 ( ) { final java . lang . Long IDENT_0 = new java . util . Date ( ) . getTime ( ) ; final java . lang . Long IDENT_1 = IDENT_0 - INT_0 ; final nl . bzk . brp . IDENT_2 . business . service . IDENT_3 IDENT_4 = new nl . bzk . brp . IDENT_2 . business . service . METHOD_1 ( 1 , IDENT_1 , 1 ) ; final java . lang . String IDENT_5 = METHOD_2 ( IDENT_4 ) ; final java . lang . Integer IDENT_6 = IDENT_7 . METHOD_3 ( IDENT_5 , 1 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , int ) { final byte [ ] IDENT_8 ; try { IDENT_8 = METHOD_4 ( IDENT_5 ) ; final nl . bzk . brp . IDENT_2 . business . service . METHOD_1 IDENT_9 = nl . bzk . brp . IDENT_2 . business . service . METHOD_1 . METHOD_5 ( IDENT_8 ) ; METHOD_6 ( IDENT_9 , IDENT_10 ) ; return IDENT_9 . METHOD_7 ( ) ; } catch ( javax . crypto . IDENT_11 | java . security . IDENT_12 | java . security . IDENT_13 | javax . crypto . IDENT_14 | javax . crypto . IDENT_15 | java . io . IOException e ) { throw new nl . bzk . brp . IDENT_2 . business . service . METHOD_8 ( STRING_0 , e ) ; } }
org . junit . Assert . assertNotNull ( IDENT_6 ) 