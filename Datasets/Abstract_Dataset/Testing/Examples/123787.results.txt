METHOD_0 ( ) { final nl . bzk . brp . model . IDENT_0 . impl . kern . IDENT_1 IDENT_2 = METHOD_1 ( IDENT_3 . IDENT_4 , STRING_0 , STRING_1 , STRING_2 , IDENT_5 . IDENT_6 ) ; final nl . bzk . brp . model . IDENT_0 . impl . kern . IDENT_1 IDENT_7 = METHOD_1 ( IDENT_3 . IDENT_4 , STRING_0 , STRING_3 , STRING_4 , IDENT_5 . IDENT_6 ) ; final nl . bzk . brp . model . IDENT_0 . impl . kern . IDENT_1 IDENT_8 = METHOD_1 ( IDENT_3 . IDENT_4 , STRING_0 , STRING_5 , STRING_6 , IDENT_5 . IDENT_6 ) ; final nl . bzk . brp . model . IDENT_0 . impl . kern . IDENT_9 IDENT_10 = new nl . bzk . brp . util . IDENT_0 . kern . METHOD_2 ( IDENT_8 , IDENT_11 ) . METHOD_3 ( INT_0 , null , INT_0 ) . METHOD_4 ( ) . build ( ) ; IDENT_8 . METHOD_5 ( ) . add ( IDENT_10 ) ; final nl . bzk . brp . model . IDENT_0 . IDENT_12 . kern . IDENT_13 IDENT_14 = METHOD_6 ( IDENT_2 , IDENT_7 , IDENT_8 ) ; final java . util . List < nl . bzk . brp . model . IDENT_15 . IDENT_16 > IDENT_17 = new nl . bzk . brp . bijhouding . business . IDENT_18 . impl . bijhouding . IDENT_19 . IDENT_20 . IDENT_19 . METHOD_7 ( ) . METHOD_8 ( IDENT_14 , METHOD_9 ( ) ) ; "<AssertPlaceHolder>" ; } isEmpty ( ) { return IDENT_21 . isEmpty ( ) ; }
org . junit . Assert . assertTrue ( IDENT_17 . isEmpty ( ) ) 