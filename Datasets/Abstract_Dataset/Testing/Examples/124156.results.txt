METHOD_0 ( ) { final nl . bzk . brp . model . bericht . kern . IDENT_0 IDENT_1 = METHOD_1 ( null , null , null , IDENT_2 . IDENT_3 , null ) ; IDENT_1 . METHOD_2 ( STRING_0 ) ; final nl . bzk . brp . model . bericht . kern . IDENT_0 IDENT_4 = new nl . bzk . brp . model . bericht . kern . METHOD_3 ( ) ; IDENT_4 . METHOD_2 ( STRING_1 ) ; final nl . bzk . brp . model . bericht . kern . IDENT_5 IDENT_6 = new nl . bzk . brp . model . bericht . kern . METHOD_4 ( ) ; IDENT_6 . METHOD_5 ( new java . util . ArrayList < nl . bzk . brp . model . bericht . kern . IDENT_7 > ( ) ) ; final nl . bzk . brp . model . bericht . kern . IDENT_8 IDENT_9 = new nl . bzk . brp . model . bericht . kern . METHOD_6 ( ) ; IDENT_9 . METHOD_7 ( IDENT_4 ) ; IDENT_6 . METHOD_8 ( ) . add ( IDENT_9 ) ; final nl . bzk . brp . model . bericht . kern . IDENT_10 IDENT_11 = new nl . bzk . brp . model . bericht . kern . METHOD_9 ( ) ; IDENT_11 . METHOD_7 ( IDENT_1 ) ; IDENT_6 . METHOD_8 ( ) . add ( IDENT_11 ) ; final java . util . Map < java . lang . String , nl . bzk . brp . model . IDENT_12 . IDENT_13 . kern . IDENT_14 > IDENT_15 = new java . util . HashMap ( ) ; final nl . bzk . brp . model . IDENT_12 . impl . kern . IDENT_16 IDENT_17 = METHOD_10 ( IDENT_18 . IDENT_19 , null ) ; IDENT_15 . put ( IDENT_4 . METHOD_11 ( ) , new nl . bzk . brp . model . IDENT_12 . IDENT_13 . kern . METHOD_12 ( IDENT_17 ) ) ; final java . util . List < nl . bzk . brp . model . IDENT_20 . IDENT_21 > IDENT_22 = new nl . bzk . brp . bijhouding . business . IDENT_23 . impl . IDENT_24 . IDENT_25 . IDENT_26 . METHOD_13 ( ) . METHOD_14 ( null , IDENT_6 , null , IDENT_15 ) ; "<AssertPlaceHolder>" ; } isEmpty ( ) { return IDENT_27 . isEmpty ( ) ; }
org . junit . Assert . assertTrue ( IDENT_22 . isEmpty ( ) ) 