METHOD_0 ( ) { final nl . bzk . brp . model . bericht . kern . IDENT_0 IDENT_1 = METHOD_1 ( "1" ) ; IDENT_1 . METHOD_2 ( STRING_0 ) ; final nl . bzk . brp . model . operationeel . kern . IDENT_2 IDENT_3 = new nl . bzk . brp . model . operationeel . kern . METHOD_3 ( nl . bzk . brp . util . IDENT_4 . METHOD_4 ( STRING_1 ) ) ; when ( IDENT_5 . METHOD_5 ( INT_0 ) ) . thenReturn ( IDENT_3 ) ; final nl . bzk . brp . model . bericht . kern . IDENT_6 IDENT_7 = new nl . bzk . brp . model . bericht . kern . METHOD_6 ( ) ; final nl . bzk . brp . model . bericht . kern . IDENT_8 IDENT_9 = new nl . bzk . brp . model . bericht . kern . METHOD_7 ( ) ; IDENT_9 . METHOD_8 ( IDENT_1 ) ; IDENT_7 . METHOD_9 ( java . util . Arrays . asList ( IDENT_9 ) ) ; final nl . bzk . brp . model . bericht . kern . IDENT_6 IDENT_10 = new nl . bzk . brp . model . bericht . kern . METHOD_10 ( ) ; final nl . bzk . brp . model . bericht . kern . METHOD_7 IDENT_11 = new nl . bzk . brp . model . bericht . kern . METHOD_7 ( ) ; IDENT_11 . METHOD_8 ( IDENT_1 ) ; IDENT_10 . METHOD_9 ( java . util . Arrays . asList ( IDENT_11 ) ) ; final nl . bzk . brp . model . operationeel . kern . IDENT_12 IDENT_13 = METHOD_11 ( ) ; final nl . bzk . brp . model . operationeel . kern . IDENT_12 IDENT_14 = METHOD_11 ( ) ; final java . util . Map < nl . bzk . brp . model . bericht . kern . IDENT_6 , nl . bzk . brp . model . operationeel . kern . IDENT_12 > IDENT_15 = new java . util . HashMap ( ) ; IDENT_15 . put ( IDENT_7 , IDENT_13 ) ; IDENT_15 . put ( IDENT_10 , IDENT_14 ) ; final nl . bzk . brp . model . bericht . kern . IDENT_16 IDENT_17 = new nl . bzk . brp . model . bericht . kern . METHOD_12 ( ) ; IDENT_17 . METHOD_13 ( java . util . Arrays . asList ( IDENT_7 , IDENT_10 ) ) ; when ( IDENT_5 . METHOD_14 ( any ( nl . bzk . brp . model . IDENT_18 . impl . kern . IDENT_19 . class ) ) ) . thenReturn ( IDENT_3 ) ; IDENT_20 . METHOD_15 ( IDENT_15 , IDENT_17 , IDENT_21 ) ; verify ( IDENT_5 , METHOD_16 ( ) ) . METHOD_14 ( any ( nl . bzk . brp . model . IDENT_18 . impl . kern . IDENT_19 . class ) ) ; verify ( IDENT_5 , times ( 2 ) ) . METHOD_5 ( org . mockito . Mockito . METHOD_17 ( ) ) ; verify ( IDENT_5 , times ( 2 ) ) . METHOD_18 ( any ( nl . bzk . brp . model . operationeel . kern . IDENT_12 . class ) , any ( nl . bzk . brp . model . operationeel . kern . METHOD_3 . class ) ) ; "<AssertPlaceHolder>" ; } METHOD_19 ( ) { return java . util . Collections . METHOD_20 ( IDENT_22 ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_21 . METHOD_19 ( ) . size ( ) ) 