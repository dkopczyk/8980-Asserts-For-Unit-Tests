METHOD_0 ( ) { java . lang . String actual = IDENT_0 . IDENT_1 . util . IDENT_2 . METHOD_1 ( STRING_0 , STRING_1 , STRING_2 , STRING_3 , STRING_4 ) ; java . lang . String expected = STRING_5 ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String , java . lang . String , java . lang . String , java . lang . String ) { if ( url . startsWith ( "/" ) ) { url = ( IDENT_3 + STRING_6 ) + url ; } url = IDENT_0 . IDENT_1 . util . IDENT_2 . METHOD_2 ( url , IDENT_4 ) ; java . lang . String token = IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_5 ; int IDENT_6 = url . indexOf ( IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_7 ) ; if ( IDENT_6 != ( - 1 ) ) { token = IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_7 ; url = IDENT_0 . IDENT_1 . util . StringUtils . METHOD_3 ( url , IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_7 , IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_5 ) ; } IDENT_6 = url . indexOf ( IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_5 ) ; if ( ( IDENT_8 == null ) && ( IDENT_6 != ( - 1 ) ) ) { IDENT_0 . IDENT_1 . IDENT_9 me = new IDENT_0 . IDENT_1 . METHOD_4 ( ) ; me . METHOD_5 ( IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_10 , new java . lang . Object [ ] { token } ) ; throw me ; } else if ( ( IDENT_8 != null ) && ( IDENT_6 != ( - 1 ) ) ) { url = IDENT_0 . IDENT_1 . util . StringUtils . METHOD_3 ( url , IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_5 , IDENT_8 ) ; } token = IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_11 ; int IDENT_12 = url . indexOf ( IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_13 ) ; if ( IDENT_12 != ( - 1 ) ) { token = IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_13 ; url = IDENT_0 . IDENT_1 . util . StringUtils . METHOD_3 ( url , IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_13 , IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_11 ) ; } IDENT_12 = url . indexOf ( IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_11 ) ; if ( ( IDENT_14 == null ) && ( IDENT_12 != ( - 1 ) ) ) { IDENT_0 . IDENT_1 . METHOD_4 me = new IDENT_0 . IDENT_1 . METHOD_4 ( ) ; me . METHOD_5 ( IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_10 , new java . lang . Object [ ] { token } ) ; throw me ; } else if ( ( IDENT_14 != null ) && ( IDENT_12 != ( - 1 ) ) ) { url = IDENT_0 . IDENT_1 . util . StringUtils . METHOD_3 ( url , IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_11 , IDENT_14 ) ; } return IDENT_0 . IDENT_1 . util . IDENT_2 . METHOD_6 ( url ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 