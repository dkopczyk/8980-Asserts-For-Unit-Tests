METHOD_0 ( ) { final nl . bzk . brp . util . IDENT_0 . kern . IDENT_1 builder = new nl . bzk . brp . util . IDENT_0 . kern . METHOD_1 ( nl . bzk . brp . model . algemeen . IDENT_2 . kern . IDENT_3 . IDENT_4 ) ; builder . METHOD_2 ( nl . bzk . brp . IDENT_5 . IDENT_6 . mapper . IDENT_7 . METHOD_3 ( INT_0 ) ) . METHOD_4 ( ) ; final nl . bzk . brp . model . IDENT_0 . IDENT_8 . kern . IDENT_9 IDENT_10 = new nl . bzk . brp . model . IDENT_0 . IDENT_8 . kern . METHOD_5 ( builder . build ( ) , null ) ; final nl . bzk . migratiebrp . conversie . model . brp . IDENT_11 < nl . bzk . migratiebrp . conversie . model . brp . IDENT_12 . IDENT_13 > IDENT_14 = mapper . map ( IDENT_10 , new nl . bzk . brp . IDENT_5 . IDENT_6 . mapper . METHOD_6 ( IDENT_10 ) , new nl . bzk . brp . IDENT_5 . IDENT_6 . mapper . METHOD_7 ( ) ) ; "<AssertPlaceHolder>" ; } map ( IDENT_15 , nl . bzk . brp . IDENT_5 . IDENT_6 . mapper . METHOD_6 , nl . bzk . brp . IDENT_5 . IDENT_6 . mapper . IDENT_16 ) { final java . util . List < nl . bzk . migratiebrp . conversie . model . brp . IDENT_17 < IDENT_18 > > IDENT_19 = new java . util . ArrayList ( ) ; final java . lang . IDENT_20 < IDENT_21 > IDENT_22 = METHOD_8 ( IDENT_23 ) ; if ( IDENT_22 != null ) { for ( final IDENT_21 IDENT_24 : IDENT_22 ) { if ( IDENT_24 != null ) { if ( ! ( METHOD_9 ( IDENT_24 ) ) ) { continue ; } final nl . bzk . migratiebrp . conversie . model . brp . IDENT_17 < IDENT_18 > IDENT_12 = METHOD_10 ( IDENT_24 , IDENT_25 , IDENT_26 ) ; if ( IDENT_12 != null ) { IDENT_19 . add ( IDENT_12 ) ; } } } } if ( IDENT_19 . isEmpty ( ) ) { return null ; } else { return new nl . bzk . migratiebrp . conversie . model . brp . IDENT_11 < IDENT_18 > ( IDENT_19 ) ; } }
org . junit . Assert . assertNull ( IDENT_14 ) 