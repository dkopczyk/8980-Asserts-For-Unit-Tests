METHOD_0 ( ) { final java . util . Map < java . lang . Integer , nl . bzk . brp . IDENT_0 . model . IDENT_1 > IDENT_2 = new java . util . HashMap ( ) ; IDENT_2 . put ( 1 , IDENT_1 . IDENT_3 ) ; IDENT_2 . put ( 2 , IDENT_1 . IDENT_4 ) ; final nl . bzk . brp . model . IDENT_5 . kern . IDENT_6 IDENT_7 = mock ( nl . bzk . brp . model . IDENT_5 . kern . IDENT_6 . class ) ; when ( IDENT_7 . METHOD_1 ( ) ) . thenReturn ( 1 ) ; final nl . bzk . brp . model . IDENT_5 . kern . IDENT_6 IDENT_8 = mock ( nl . bzk . brp . model . IDENT_5 . kern . IDENT_6 . class ) ; when ( IDENT_8 . METHOD_1 ( ) ) . thenReturn ( 2 ) ; final java . util . List < nl . bzk . brp . model . IDENT_5 . kern . IDENT_6 > IDENT_9 = java . util . Arrays . asList ( IDENT_7 , IDENT_8 ) ; when ( IDENT_10 . METHOD_2 ( any ( nl . bzk . brp . model . IDENT_5 . kern . IDENT_6 . class ) , any ( nl . bzk . brp . IDENT_0 . model . IDENT_1 . class ) , eq ( IDENT_11 ) , eq ( IDENT_12 ) ) ) . thenReturn ( true ) . thenReturn ( false ) ; when ( IDENT_13 . METHOD_2 ( any ( nl . bzk . brp . model . IDENT_5 . kern . IDENT_6 . class ) , any ( nl . bzk . brp . IDENT_0 . model . IDENT_1 . class ) , eq ( IDENT_11 ) , eq ( IDENT_12 ) ) ) . thenReturn ( true ) . thenReturn ( false ) ; IDENT_14 . METHOD_3 ( IDENT_9 , IDENT_2 , IDENT_11 , IDENT_12 ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_15 . size ( ) ; }
org . junit . Assert . assertThat ( IDENT_2 . size ( ) , org . hamcrest . Matchers . is ( 1 ) ) 