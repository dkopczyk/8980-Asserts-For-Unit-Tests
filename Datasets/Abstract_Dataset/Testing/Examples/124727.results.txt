test ( ) { java . util . List < nl . bzk . brp . IDENT_0 . commands . IDENT_1 > IDENT_2 = new java . util . ArrayList < nl . bzk . brp . IDENT_0 . commands . IDENT_1 > ( ) ; IDENT_2 . add ( new nl . bzk . brp . IDENT_0 . commands . METHOD_0 ( STRING_0 , STRING_1 , INT_0 ) ) ; IDENT_2 . add ( new nl . bzk . brp . IDENT_0 . commands . METHOD_0 ( STRING_0 , STRING_1 , INT_1 ) ) ; IDENT_2 . add ( new nl . bzk . brp . IDENT_0 . commands . METHOD_0 ( STRING_0 , STRING_1 , INT_2 ) ) ; IDENT_2 . add ( new nl . bzk . brp . IDENT_0 . commands . METHOD_0 ( STRING_2 , STRING_3 , INT_3 ) ) ; IDENT_2 . add ( new nl . bzk . brp . IDENT_0 . commands . METHOD_0 ( STRING_2 , STRING_3 , INT_4 ) ) ; IDENT_2 . add ( new nl . bzk . brp . IDENT_0 . commands . METHOD_0 ( STRING_2 , STRING_3 , INT_5 ) ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_3 = new java . util . HashMap < java . lang . String , java . lang . Object > ( 1 ) ; IDENT_3 . put ( STRING_4 , java . util . Collections . emptyList ( ) ) ; when ( context . get ( IDENT_4 . IDENT_5 ) ) . thenReturn ( IDENT_2 ) ; when ( context . get ( IDENT_4 . IDENT_6 ) ) . thenReturn ( STRING_5 ) ; when ( context . get ( IDENT_4 . IDENT_7 ) ) . thenReturn ( java . util . Collections . emptyList ( ) ) ; when ( context . get ( IDENT_4 . IDENT_8 ) ) . thenReturn ( 2 ) ; when ( context . get ( IDENT_4 . IDENT_9 ) ) . thenReturn ( 200 ) ; when ( context . get ( IDENT_4 . IDENT_10 ) ) . thenReturn ( IDENT_3 ) ; when ( context . get ( IDENT_4 . IDENT_11 ) ) . thenReturn ( STRING_6 ) ; when ( context . get ( IDENT_4 . IDENT_12 ) ) . thenReturn ( STRING_7 ) ; boolean result = IDENT_13 . METHOD_1 ( context , null ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( org . apache . commons . IDENT_14 . Context , java . lang . Exception ) { java . util . List < nl . bzk . brp . IDENT_0 . commands . METHOD_0 > IDENT_15 = ( ( java . util . List ) ( context . get ( IDENT_4 . IDENT_5 ) ) ) ; if ( ( IDENT_15 == null ) || ( IDENT_15 . isEmpty ( ) ) ) { nl . bzk . brp . IDENT_0 . commands . IDENT_16 . LOGGER . warn ( STRING_8 ) ; return IDENT_17 ; } java . util . List < java . lang . String > report = new java . util . ArrayList < java . lang . String > ( ) ; this . METHOD_2 ( report , context ) ; this . METHOD_3 ( report , context ) ; this . METHOD_4 ( report , context ) ; this . METHOD_5 ( report , context ) ; this . METHOD_6 ( report , context ) ; this . METHOD_7 ( report , context ) ; this . METHOD_8 ( report ) ; java . lang . String IDENT_18 = ( ( context . get ( IDENT_4 . IDENT_19 ) ) != null ) ? ( ( java . lang . String ) ( context . get ( IDENT_4 . IDENT_19 ) ) ) : ( ( java . lang . String ) ( context . get ( IDENT_4 . IDENT_6 ) ) ) ; this . write ( IDENT_18 , report ) ; for ( java . lang . String line : report ) { nl . bzk . brp . IDENT_0 . commands . IDENT_16 . LOGGER . info ( line ) ; } return IDENT_20 ; }
org . junit . Assert . assertFalse ( result ) 