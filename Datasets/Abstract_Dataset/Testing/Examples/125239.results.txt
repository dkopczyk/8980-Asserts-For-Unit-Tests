METHOD_0 ( ) { int IDENT_0 = 100 ; port = io . IDENT_1 . IDENT_2 . test . IDENT_3 . METHOD_1 ( INT_0 ) ; server = io . IDENT_1 . IDENT_2 . IDENT_4 . api . IDENT_5 . METHOD_2 ( port ) . METHOD_3 ( METHOD_3 ) . build ( ) ; server . METHOD_4 ( ) ; for ( int i = 0 ; i < METHOD_3 ; i ++ ) { new java . net . METHOD_5 ( STRING_0 , port ) ; } java . lang . Thread . sleep ( 50 ) ; io . IDENT_1 . IDENT_2 . io . IDENT_6 IDENT_7 = io . IDENT_1 . IDENT_2 . nio . api . IDENT_8 . METHOD_6 ( new io . IDENT_1 . IDENT_2 . io . METHOD_7 ( ) { } ) ; java . util . concurrent . IDENT_9 < io . IDENT_1 . IDENT_2 . io . IDENT_10 < byte [ ] > > future = IDENT_7 . connect ( STRING_0 , port ) ; io . IDENT_1 . IDENT_2 . io . IDENT_10 < byte [ ] > channel = future . get ( 200 , TimeUnit . IDENT_11 ) ; java . lang . Thread . sleep ( 50 ) ; "<AssertPlaceHolder>" ; System . out . println ( java . lang . String . format ( STRING_1 , io . IDENT_1 . IDENT_2 . test . IDENT_12 . METHOD_8 ( 1 ) ) ) ; } METHOD_9 ( ) { return ( state ) == ( IDENT_13 . IDENT_14 ) ; }
org . junit . Assert . assertFalse ( channel . METHOD_9 ( ) ) 