METHOD_0 ( ) { org . apache . flink . streaming . IDENT_0 . IDENT_1 . model . IDENT_2 IDENT_3 = org . apache . flink . streaming . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 . METHOD_1 ( STRING_0 , 0 ) ; java . util . IDENT_6 < org . apache . flink . streaming . IDENT_0 . IDENT_1 . model . IDENT_7 > IDENT_8 = new java . util . METHOD_2 ( ) ; IDENT_8 . add ( new org . apache . flink . streaming . IDENT_0 . IDENT_1 . model . METHOD_3 ( org . apache . flink . streaming . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_9 . METHOD_4 ( IDENT_3 ) , IDENT_3 , new org . apache . flink . streaming . IDENT_0 . IDENT_1 . model . METHOD_5 ( STRING_1 ) ) ) ; org . apache . flink . streaming . IDENT_0 . IDENT_1 . IDENT_10 . IDENT_11 < java . lang . String > IDENT_12 = new org . apache . flink . streaming . IDENT_0 . IDENT_1 . IDENT_10 . METHOD_6 ( ) ; org . apache . flink . streaming . IDENT_0 . IDENT_1 . IDENT_10 . IDENT_13 < java . lang . String > IDENT_14 = new org . apache . flink . streaming . IDENT_0 . IDENT_1 . IDENT_10 . METHOD_7 ( java . util . Collections . singletonList ( STRING_0 ) , IDENT_12 , new java . util . Properties ( ) , new org . apache . flink . streaming . IDENT_0 . IDENT_1 . serialization . METHOD_8 ( new org . apache . flink . api . common . serialization . METHOD_9 ( ) ) , 10 , 2 , new java . util . concurrent . atomic . METHOD_10 ( ) , IDENT_8 , org . apache . flink . streaming . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_9 . METHOD_11 ( java . util . Collections . singletonList ( STRING_0 ) ) , org . mockito . Mockito . mock ( org . apache . flink . streaming . IDENT_0 . IDENT_1 . proxy . IDENT_15 . class ) ) ; org . apache . flink . streaming . IDENT_0 . IDENT_1 . metrics . IDENT_16 IDENT_17 = new org . apache . flink . streaming . IDENT_0 . IDENT_1 . metrics . METHOD_12 ( ) ; long IDENT_18 = INT_0 ; new org . apache . flink . streaming . IDENT_0 . IDENT_1 . IDENT_4 . METHOD_13 ( IDENT_14 , 0 , IDENT_8 . get ( 0 ) . METHOD_14 ( ) , IDENT_8 . get ( 0 ) . METHOD_15 ( ) , org . apache . flink . streaming . IDENT_0 . IDENT_1 . IDENT_10 . IDENT_19 . METHOD_16 ( 1000 , 9 , IDENT_18 ) , IDENT_17 ) . run ( ) ; "<AssertPlaceHolder>" ; } METHOD_17 ( ) { return IDENT_18 ; }
org . junit . Assert . assertEquals ( IDENT_18 , IDENT_17 . METHOD_17 ( ) ) 