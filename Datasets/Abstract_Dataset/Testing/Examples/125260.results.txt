METHOD_0 ( ) { final java . io . StringWriter IDENT_0 = new java . io . StringWriter ( ) ; final java . io . IDENT_1 IDENT_2 = new java . io . METHOD_1 ( IDENT_0 ) ; final java . lang . IDENT_3 module = new java . lang . METHOD_2 ( STRING_0 , STRING_1 ) ; final de . IDENT_4 . IDENT_5 . backend . IDENT_6 . ast . IDENT_7 IDENT_8 = module . METHOD_3 ( ) ; final de . IDENT_4 . IDENT_5 . backend . IDENT_6 . ast . IDENT_9 IDENT_10 = de . IDENT_4 . IDENT_5 . backend . IDENT_6 . ast . IDENT_11 . param ( STRING_2 2 , IDENT_12 . IDENT_13 ) ; final de . IDENT_4 . IDENT_5 . backend . IDENT_6 . ast . IDENT_9 IDENT_14 = de . IDENT_4 . IDENT_5 . backend . IDENT_6 . ast . IDENT_11 . param ( STRING_3 , IDENT_12 . IDENT_13 ) ; final de . IDENT_4 . IDENT_5 . backend . IDENT_6 . ast . IDENT_15 function = IDENT_8 . METHOD_4 ( STRING_4 , java . util . Arrays . asList ( IDENT_10 , IDENT_14 ) , IDENT_12 . IDENT_13 ) ; final de . IDENT_4 . IDENT_5 . backend . IDENT_6 . ast . IDENT_16 IDENT_17 = function . METHOD_5 ( STRING_5 , IDENT_12 . IDENT_13 ) ; function . flow . ret ( de . IDENT_4 . IDENT_5 . backend . IDENT_6 . ast . IDENT_11 . call ( function , java . util . Arrays . asList ( de . IDENT_4 . IDENT_5 . backend . IDENT_6 . ast . IDENT_11 . METHOD_6 ( IDENT_10 , null ) , de . IDENT_4 . IDENT_5 . backend . IDENT_6 . ast . IDENT_11 . METHOD_6 ( IDENT_14 , null ) ) , null ) , null ) ; final de . IDENT_4 . IDENT_5 . backend . IDENT_6 . ast . IDENT_18 IDENT_19 = new de . IDENT_4 . IDENT_5 . backend . IDENT_6 . ast . METHOD_7 ( METHOD_8 ( ) ) ; IDENT_19 . METHOD_9 ( module , IDENT_2 ) ; final java . lang . String expected = ( ( ( ( ( ( ( ( ( ( ( STRING_6 + ( java . lang . System . METHOD_10 ( ) ) ) + STRING_7 ) + ( java . lang . System . METHOD_10 ( ) ) ) + STRING_2 ) + ( java . lang . System . METHOD_10 ( ) ) ) + STRING_2 1 ) + ( java . lang . System . METHOD_10 ( ) ) ) + STRING_2 0 ) + ( java . lang . System . METHOD_10 ( ) ) ) + STRING_8 ) + ( java . lang . System . METHOD_10 ( ) ) ) + STRING_8 ; "<AssertPlaceHolder>" ; } toString ( ) { return ( ( ( ( STRING_9 + STRING_10 ) + ( IDENT_20 ) ) + STRING_11 ) + ( IDENT_21 ) ) + STRING_12 ; }
org . junit . Assert . assertEquals ( expected , IDENT_0 . toString ( ) ) 