METHOD_0 ( ) { final com . cloud . api . command . admin . IDENT_0 . IDENT_1 IDENT_2 = new com . cloud . api . command . admin . IDENT_0 . METHOD_1 ( ) ; com . cloud . api . IDENT_3 . set ( IDENT_2 , IDENT_4 . IDENT_5 , null ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { java . util . Map < java . lang . String , java . util . List < java . lang . String > > IDENT_6 = null ; if ( ( ( IDENT_7 ) != null ) && ( ! ( IDENT_7 . isEmpty ( ) ) ) ) { IDENT_6 = new java . util . HashMap ( ) ; final java . util . Collection < ? extends java . util . Map < java . lang . String , java . lang . String > > IDENT_8 = IDENT_7 . values ( ) ; final java . util . Iterator < ? extends java . util . Map < java . lang . String , java . lang . String > > IDENT_9 = IDENT_8 . iterator ( ) ; while ( IDENT_9 . hasNext ( ) ) { final java . util . Map < java . lang . String , java . lang . String > obj = IDENT_9 . next ( ) ; if ( com . cloud . api . command . admin . IDENT_0 . METHOD_1 . IDENT_10 . METHOD_3 ( ) ) { com . cloud . api . command . admin . IDENT_0 . METHOD_1 . IDENT_10 . trace ( ( STRING_0 + obj ) ) ; } final java . util . HashMap < java . lang . String , java . lang . String > services = ( ( java . util . HashMap < java . lang . String , java . lang . String > ) ( obj ) ) ; final java . lang . String service = services . get ( STRING_1 ) ; final java . lang . String provider = services . get ( STRING_2 ) ; java . util . List < java . lang . String > IDENT_11 = null ; if ( IDENT_6 . containsKey ( service ) ) { IDENT_11 = IDENT_6 . get ( service ) ; } else { IDENT_11 = new java . util . ArrayList ( ) ; } IDENT_11 . add ( provider ) ; IDENT_6 . put ( service , IDENT_11 ) ; } } return IDENT_6 ; }
org . junit . Assert . assertNull ( IDENT_2 . METHOD_2 ( ) ) 