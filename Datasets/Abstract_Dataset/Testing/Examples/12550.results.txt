METHOD_0 ( ) { try { java . lang . String IDENT_0 = org . apache . flink . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; java . lang . String IDENT_3 = org . apache . flink . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; java . lang . String IDENT_4 = org . apache . flink . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; java . lang . String IDENT_5 = STRING_0 + ( org . apache . flink . IDENT_1 . IDENT_2 . METHOD_1 ( ) ) ; java . lang . String IDENT_6 = STRING_0 + ( org . apache . flink . IDENT_1 . IDENT_2 . METHOD_1 ( ) ) ; java . io . File IDENT_7 = IDENT_8 . METHOD_2 ( IDENT_0 , IDENT_3 , IDENT_4 , IDENT_6 ) ; java . io . File IDENT_9 = IDENT_7 . METHOD_3 ( ) ; java . io . File IDENT_10 = IDENT_9 . METHOD_3 ( ) ; java . io . File IDENT_11 = IDENT_10 . METHOD_3 ( ) ; java . io . File IDENT_12 = IDENT_8 . METHOD_2 ( IDENT_0 , IDENT_5 ) ; java . io . File IDENT_13 = new java . io . File ( IDENT_11 , STRING_1 ) ; IDENT_13 . METHOD_4 ( ) ; org . apache . flink . IDENT_1 . IDENT_2 . METHOD_5 ( IDENT_11 . getAbsolutePath ( ) , STRING_2 ) ; org . apache . flink . IDENT_1 . IDENT_2 . METHOD_5 ( IDENT_10 . getAbsolutePath ( ) , STRING_3 ) ; org . apache . flink . IDENT_1 . IDENT_2 . METHOD_5 ( IDENT_10 . getAbsolutePath ( ) , STRING_4 ) ; org . apache . flink . IDENT_1 . IDENT_2 . METHOD_5 ( IDENT_9 . getAbsolutePath ( ) , STRING_5 ) ; org . apache . flink . IDENT_1 . IDENT_2 . METHOD_5 ( IDENT_12 . getAbsolutePath ( ) , STRING_3 ) ; org . apache . flink . IDENT_1 . IDENT_2 . METHOD_5 ( IDENT_12 . getAbsolutePath ( ) , STRING_4 ) ; org . apache . flink . IDENT_1 . IDENT_2 . METHOD_5 ( IDENT_7 . getAbsolutePath ( ) , STRING_5 ) ; this . format . METHOD_6 ( new org . apache . flink . core . fs . Path ( IDENT_11 . METHOD_7 ( ) . toString ( ) ) ) ; this . config . METHOD_8 ( STRING_6 , true ) ; format . METHOD_9 ( this . config ) ; org . apache . flink . core . fs . IDENT_14 [ ] IDENT_15 = format . METHOD_10 ( 1 ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception ex ) { ex . printStackTrace ( ) ; org . junit . Assert . fail ( ex . getMessage ( ) ) ; } } METHOD_10 ( int ) { return new org . apache . flink . core . io . IDENT_16 [ ] { new org . apache . flink . runtime . IDENT_17 . IDENT_18 . METHOD_11 ( 0 , 1 ) } ; }
org . junit . Assert . assertEquals ( 4 , IDENT_15 . length ) 