METHOD_0 ( ) { db . METHOD_1 ( ) ; java . util . IDENT_0 r = new java . util . METHOD_2 ( 1L ) ; for ( int test = 0 ; test < 100 ; test ++ ) { byte [ ] [ ] b = new byte [ 100 ] [ 16 ] ; for ( int i = 0 ; i < 100 ; i ++ ) { r . METHOD_3 ( b [ i ] ) ; } for ( int i = 0 ; i < 100 ; i ++ ) { db . METHOD_4 ( STRING_0 , ( STRING_1 + i ) ) ; db . METHOD_5 ( STRING_0 , ( STRING_1 + i ) , b [ i ] ) ; db . commit ( ) ; db . METHOD_6 ( STRING_0 , ( STRING_1 + i ) ) ; byte [ ] ret = db . getBytes ( STRING_0 , ( STRING_1 + i ) ) ; "<AssertPlaceHolder>" ; } } } getBytes ( java . lang . String , java . lang . String ) { return METHOD_7 ( IDENT_1 ) . get ( s ) ; }
org . junit . Assert . assertArrayEquals ( b [ i ] , ret ) 