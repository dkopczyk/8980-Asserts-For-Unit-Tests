METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( ) ) . thenReturn ( true ) ; IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 item = new IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_2 ( new IDENT_1 . IDENT_2 . IDENT_3 . METHOD_3 ( IDENT_6 ) . METHOD_4 ( IDENT_0 ) . METHOD_4 ( invoke ) ) ; java . util . List < IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_2 > IDENT_7 = item . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_8 IDENT_9 = METHOD_6 ( ) ; if ( IDENT_9 != null ) { return IDENT_9 . METHOD_5 ( ) ; } java . util . List < IDENT_1 . IDENT_2 . Element > IDENT_7 = this . METHOD_7 ( new IDENT_1 . IDENT_10 . METHOD_8 ( IDENT_1 . IDENT_10 . METHOD_8 . IDENT_11 ) , this . METHOD_9 ( IDENT_12 . IDENT_13 ) ) ; java . util . List < IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_13 > list = new java . util . ArrayList ( ) ; for ( IDENT_1 . IDENT_2 . Element item : IDENT_7 ) { list . add ( new IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_10 ( new IDENT_1 . IDENT_2 . IDENT_3 . METHOD_3 ( item ) ) ) ; } return list ; }
org . junit . Assert . assertEquals ( 0 , IDENT_7 . size ( ) ) 