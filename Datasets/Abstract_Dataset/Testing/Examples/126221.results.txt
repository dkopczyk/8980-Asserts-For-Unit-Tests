METHOD_0 ( ) { java . util . Date value = new java . util . Date ( ) ; "<AssertPlaceHolder>" ; } create ( java . lang . IDENT_0 ) { final java . util . List < org . IDENT_1 . jcr . spi . index . IDENT_2 > IDENT_3 = new java . util . ArrayList ( ) ; for ( org . IDENT_1 . jcr . spi . index . provider . IDENT_4 provider : IDENT_5 ) { if ( provider != null ) { org . IDENT_1 . jcr . spi . index . IDENT_2 writer = provider . METHOD_1 ( ) ; if ( ( writer != null ) && ( ! ( writer . METHOD_2 ( ) ) ) ) IDENT_3 . add ( writer ) ; } } if ( IDENT_3 . isEmpty ( ) ) return org . IDENT_1 . jcr . query . engine . IDENT_6 . INSTANCE ; if ( ( IDENT_3 . size ( ) ) == 1 ) return IDENT_3 . get ( 0 ) ; return new org . IDENT_1 . jcr . query . METHOD_3 ( IDENT_3 ) ; }
org . junit . Assert . assertThat ( factory . create ( value ) , org . hamcrest . core . Is . is ( java . lang . Double . valueOf ( value . getTime ( ) ) ) ) 