METHOD_0 ( ) { final org . apache . flink . core . fs . IDENT_0 writer = METHOD_1 ( ) ; final org . apache . flink . core . fs . Path path = new org . apache . flink . core . fs . Path ( IDENT_1 , STRING_0 ) ; final org . apache . flink . core . fs . IDENT_2 stream = writer . METHOD_2 ( path ) ; stream . write ( org . apache . flink . fs . IDENT_3 . IDENT_4 . METHOD_3 ( org . apache . flink . fs . IDENT_3 . IDENT_4 . IDENT_5 ) ) ; stream . METHOD_4 ( ) ; stream . write ( org . apache . flink . fs . IDENT_3 . IDENT_4 . METHOD_3 ( org . apache . flink . fs . IDENT_3 . IDENT_4 . IDENT_6 ) ) ; stream . METHOD_5 ( ) . commit ( ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( org . apache . flink . core . fs . Path ) { final java . lang . StringBuilder builder = new java . lang . StringBuilder ( ) ; try ( org . apache . flink . core . fs . IDENT_7 IDENT_8 = org . apache . flink . fs . IDENT_3 . IDENT_4 . METHOD_7 ( ) . METHOD_2 ( path ) ; java . io . IDENT_9 reader = new java . io . METHOD_8 ( new java . io . METHOD_9 ( IDENT_8 ) ) ) { java . lang . String line ; while ( ( line = reader . METHOD_10 ( ) ) != null ) { builder . append ( line ) ; } } return builder . toString ( ) ; }
org . junit . Assert . assertEquals ( ( ( org . apache . flink . fs . IDENT_3 . IDENT_4 . IDENT_5 ) + ( org . apache . flink . fs . IDENT_3 . IDENT_4 . IDENT_6 ) ) , METHOD_6 ( path ) ) 