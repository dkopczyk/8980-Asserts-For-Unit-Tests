METHOD_0 ( ) { com . mongodb . IDENT_0 IDENT_1 = mock ( com . mongodb . IDENT_0 . class ) ; com . mongodb . client . IDENT_2 db = new com . github . IDENT_3 . METHOD_1 ( com . github . IDENT_4 . dao . IDENT_5 . IDENT_6 ) . METHOD_2 ( com . github . IDENT_4 . dao . IDENT_5 . IDENT_7 ) ; when ( IDENT_1 . METHOD_2 ( anyString ( ) ) ) . thenReturn ( db ) ; com . github . IDENT_4 . dao . IDENT_8 dao = new com . github . IDENT_4 . dao . METHOD_3 ( com . github . IDENT_4 . dao . IDENT_5 . IDENT_9 , com . github . IDENT_4 . dao . IDENT_5 . IDENT_10 , true , com . github . IDENT_4 . dao . IDENT_5 . IDENT_11 , com . github . IDENT_4 . dao . IDENT_5 . IDENT_12 , com . github . IDENT_4 . dao . IDENT_5 . IDENT_13 ) ; com . github . IDENT_4 . dao . IDENT_14 IDENT_15 = mock ( com . github . IDENT_4 . dao . IDENT_14 . class ) ; when ( IDENT_15 . METHOD_4 ( any ( com . mongodb . client . IDENT_2 . class ) ) ) . thenReturn ( false , true ) ; dao . METHOD_5 ( IDENT_15 ) ; dao . METHOD_6 ( IDENT_1 , com . github . IDENT_4 . dao . IDENT_5 . IDENT_7 ) ; boolean IDENT_16 = dao . METHOD_7 ( ) ; verify ( IDENT_15 , times ( 2 ) ) . METHOD_4 ( any ( com . mongodb . client . IDENT_2 . class ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( com . mongodb . client . IDENT_2 ) { org . bson . Document IDENT_17 = new org . bson . Document ( com . github . IDENT_4 . dao . IDENT_14 . IDENT_18 , com . github . IDENT_4 . dao . IDENT_14 . IDENT_19 ) . append ( STRING_0 , STRING_1 ) ; try { db . METHOD_8 ( IDENT_20 ) . METHOD_9 ( IDENT_17 ) ; } catch ( com . mongodb . IDENT_21 ex ) { if ( ( ex . METHOD_10 ( ) . METHOD_11 ( ) ) == ( com . mongodb . IDENT_22 . IDENT_23 ) ) { com . github . IDENT_4 . dao . IDENT_14 . logger . warn ( STRING_2 ) ; } return false ; } return true ; }
org . junit . Assert . assertTrue ( IDENT_16 ) 