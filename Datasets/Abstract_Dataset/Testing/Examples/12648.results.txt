METHOD_0 ( ) { final org . apache . flink . api . java . tuple . IDENT_0 < java . lang . Class < ? extends org . apache . avro . IDENT_1 . IDENT_2 > , org . apache . avro . IDENT_1 . IDENT_2 , org . apache . flink . types . IDENT_3 > IDENT_4 = org . apache . flink . IDENT_5 . avro . utils . IDENT_6 . METHOD_1 ( ) ; final org . apache . flink . IDENT_5 . avro . IDENT_7 IDENT_8 = new org . apache . flink . IDENT_5 . avro . METHOD_2 ( IDENT_4 . IDENT_9 ) ; final org . apache . flink . IDENT_5 . avro . IDENT_10 IDENT_11 = new org . apache . flink . IDENT_5 . avro . METHOD_3 ( IDENT_4 . IDENT_9 ) ; IDENT_8 . serialize ( IDENT_4 . IDENT_12 ) ; IDENT_8 . serialize ( IDENT_4 . IDENT_12 ) ; final byte [ ] bytes = IDENT_8 . serialize ( IDENT_4 . IDENT_12 ) ; final org . apache . flink . types . IDENT_3 actual = IDENT_11 . METHOD_4 ( bytes ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . apache . flink . core . IDENT_13 . IDENT_14 ) { final int size = source . METHOD_5 ( ) ; final java . util . ArrayList < T > list = new java . util . ArrayList ( size ) ; for ( int i = 0 ; i < size ; i ++ ) { list . add ( IDENT_15 . METHOD_4 ( source ) ) ; } return list ; }
org . junit . Assert . assertEquals ( IDENT_4 . IDENT_12 , actual ) 