METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final java . io . File IDENT_1 = java . io . File . METHOD_1 ( STRING_1 , STRING_2 ) ; IDENT_1 . METHOD_2 ( ) ; java . io . IDENT_2 writer = new java . io . METHOD_3 ( new java . io . METHOD_4 ( IDENT_1 ) ) ; writer . write ( IDENT_0 ) ; writer . close ( ) ; @ org . apache . flink . api . java . io . METHOD_5 ( STRING_3 ) org . apache . flink . api . java . IDENT_3 . IDENT_4 < org . apache . flink . api . java . io . IDENT_5 . IDENT_6 > IDENT_7 = ( ( org . apache . flink . api . java . IDENT_3 . IDENT_4 < org . apache . flink . api . java . io . IDENT_5 . IDENT_6 > ) ( org . apache . flink . api . java . IDENT_3 . IDENT_8 . METHOD_6 ( org . apache . flink . api . java . io . IDENT_5 . IDENT_6 . class ) ) ) ; org . apache . flink . api . java . io . IDENT_9 < org . apache . flink . api . java . io . IDENT_5 . IDENT_6 > IDENT_10 = new org . apache . flink . api . java . io . METHOD_7 ( new org . apache . flink . core . fs . Path ( IDENT_1 . METHOD_8 ( ) . toString ( ) ) , IDENT_7 ) ; IDENT_10 . METHOD_9 ( new org . apache . flink . configuration . Configuration ( ) ) ; org . apache . flink . core . fs . IDENT_11 [ ] IDENT_12 = IDENT_10 . METHOD_10 ( 1 ) ; IDENT_10 . METHOD_11 ( IDENT_12 [ 0 ] ) ; java . util . List < org . apache . flink . api . java . io . IDENT_5 . IDENT_6 > expected = new java . util . ArrayList ( ) ; for ( java . lang . String line : IDENT_0 . split ( "\n" ) ) { java . lang . String [ ] elements = line . split ( STRING_4 ) ; expected . add ( new org . apache . flink . api . java . io . IDENT_5 . METHOD_12 ( elements [ 0 ] , elements [ 1 ] , elements [ 2 ] ) ) ; } java . util . List < org . apache . flink . api . java . io . IDENT_5 . METHOD_12 > actual = new java . util . ArrayList ( ) ; org . apache . flink . api . java . io . IDENT_5 . METHOD_12 IDENT_13 ; while ( ( IDENT_13 = IDENT_10 . METHOD_13 ( new org . apache . flink . api . java . io . IDENT_5 . METHOD_12 ( ) ) ) != null ) { actual . add ( IDENT_13 ) ; } "<AssertPlaceHolder>" ; } add ( org . apache . flink . runtime . IDENT_14 . IDENT_15 ) { org . apache . flink . util . IDENT_16 . METHOD_14 ( task . METHOD_15 ( ) . equals ( IDENT_17 ) , ( STRING_5 + STRING_6 ) ) ; org . apache . flink . util . IDENT_16 . METHOD_14 ( task . METHOD_16 ( ) . equals ( IDENT_18 ) , ( STRING_7 + STRING_8 ) ) ; org . apache . flink . util . IDENT_16 . METHOD_17 ( ( ( IDENT_19 . IDENT_20 ) == ( state ) ) , STRING_9 ) ; org . apache . flink . runtime . IDENT_14 . IDENT_15 IDENT_21 = IDENT_22 . put ( task . METHOD_18 ( ) , task ) ; if ( IDENT_21 != null ) { IDENT_22 . put ( task . METHOD_18 ( ) , IDENT_21 ) ; return false ; } else { return true ; } }
org . junit . Assert . assertEquals ( expected , actual ) 