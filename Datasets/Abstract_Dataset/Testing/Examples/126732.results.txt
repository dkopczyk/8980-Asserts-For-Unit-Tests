METHOD_0 ( ) { org . IDENT_0 . core . IDENT_1 . IDENT_2 plan = org . IDENT_0 . core . IDENT_1 . IDENT_3 . create ( STRING_0 ) ; org . IDENT_0 . core . IDENT_4 . IDENT_5 base = new org . IDENT_0 . core . IDENT_4 . METHOD_1 ( org . IDENT_0 . core . IDENT_1 . IDENT_6 . IDENT_7 . IDENT_8 , org . IDENT_0 . core . IDENT_1 . IDENT_6 . IDENT_7 . IDENT_9 , STRING_1 ) ; org . IDENT_0 . core . IDENT_4 . IDENT_10 IDENT_11 = org . IDENT_0 . core . IDENT_4 . IDENT_10 . create ( new org . IDENT_0 . core . IDENT_4 . METHOD_2 ( org . IDENT_0 . core . IDENT_4 . IDENT_12 . count ( ) , STRING_2 ) , base ) ; IDENT_11 . METHOD_3 ( org . IDENT_0 . core . IDENT_4 . IDENT_12 . METHOD_4 ( new org . IDENT_0 . core . IDENT_4 . METHOD_5 ( STRING_1 , "value" ) , org . IDENT_0 . core . IDENT_4 . IDENT_13 . valueOf ( FLOAT_0 ) ) ) ; org . IDENT_0 . core . IDENT_4 . IDENT_10 IDENT_14 = org . IDENT_0 . core . IDENT_4 . IDENT_10 . create ( new org . IDENT_0 . core . IDENT_4 . METHOD_2 ( org . IDENT_0 . core . IDENT_4 . IDENT_12 . count ( ) , STRING_2 ) , base ) ; IDENT_14 . METHOD_3 ( org . IDENT_0 . core . IDENT_4 . IDENT_12 . METHOD_6 ( new org . IDENT_0 . core . IDENT_4 . METHOD_5 ( STRING_1 , "value" ) , org . IDENT_0 . core . IDENT_4 . IDENT_13 . valueOf ( FLOAT_0 ) ) ) ; org . IDENT_0 . core . IDENT_1 . IDENT_15 IDENT_16 = org . IDENT_0 . core . IDENT_1 . IDENT_15 . create ( plan , IDENT_11 ) ; org . IDENT_0 . core . IDENT_1 . IDENT_15 IDENT_17 = org . IDENT_0 . core . IDENT_1 . IDENT_15 . create ( plan , IDENT_14 ) ; org . IDENT_0 . core . IDENT_1 . IDENT_6 . IDENT_18 IDENT_19 = org . IDENT_0 . core . IDENT_1 . IDENT_6 . IDENT_18 . create ( plan , IDENT_16 , IDENT_17 ) ; org . IDENT_0 . core . IDENT_20 . IDENT_21 reader = org . IDENT_0 . core . IDENT_22 . IDENT_23 . METHOD_7 ( org . IDENT_0 . core . IDENT_1 . IDENT_6 . IDENT_7 . conn , new org . IDENT_0 . core . IDENT_24 . METHOD_8 ( IDENT_19 ) ) ; org . IDENT_0 . core . IDENT_22 . IDENT_25 token = reader . next ( ) ; java . lang . String IDENT_26 = ( ( java . lang . String ) ( token . getValue ( STRING_3 ) ) ) ; java . lang . String tableName = ( ( java . lang . String ) ( token . getValue ( STRING_4 ) ) ) ; org . IDENT_0 . connection . IDENT_27 result = org . IDENT_0 . core . IDENT_1 . IDENT_6 . IDENT_7 . conn . execute ( org . IDENT_0 . IDENT_28 . IDENT_29 . convert ( new org . IDENT_0 . IDENT_30 . METHOD_9 ( ) , org . IDENT_0 . core . IDENT_4 . IDENT_10 . create ( org . IDENT_0 . core . IDENT_4 . IDENT_12 . count ( ) , base ) ) ) ; result . next ( ) ; int IDENT_31 = java . lang . Integer . valueOf ( result . getValue ( 0 ) . toString ( ) ) ; org . IDENT_0 . connection . IDENT_27 IDENT_32 = org . IDENT_0 . core . IDENT_1 . IDENT_6 . IDENT_7 . conn . execute ( org . IDENT_0 . IDENT_28 . IDENT_29 . convert ( new org . IDENT_0 . IDENT_30 . METHOD_9 ( ) , org . IDENT_0 . core . IDENT_4 . IDENT_10 . create ( new org . IDENT_0 . core . IDENT_4 . METHOD_10 ( ) , new org . IDENT_0 . core . IDENT_4 . METHOD_1 ( IDENT_26 , tableName , STRING_1 ) ) ) ) ; IDENT_32 . next ( ) ; int IDENT_33 = java . lang . Integer . valueOf ( IDENT_32 . getValue ( 0 ) . toString ( ) ) ; "<AssertPlaceHolder>" ; org . IDENT_0 . core . IDENT_1 . IDENT_6 . IDENT_7 . conn . execute ( org . IDENT_0 . IDENT_28 . IDENT_29 . convert ( new org . IDENT_0 . IDENT_30 . METHOD_9 ( ) , org . IDENT_0 . core . IDENT_4 . IDENT_34 . create ( IDENT_26 , tableName ) ) ) ; } toString ( ) { return org . apache . commons . lang3 . builder . IDENT_35 . METHOD_11 ( this , org . apache . commons . lang3 . builder . IDENT_36 . IDENT_37 ) ; }
org . junit . Assert . assertEquals ( IDENT_31 , IDENT_33 ) 