METHOD_0 ( ) { int IDENT_0 = 10 ; for ( int i = 0 ; i < IDENT_0 ; i ++ ) { org . IDENT_1 . core . IDENT_2 . IDENT_3 . conn . METHOD_1 ( ) . execute ( java . lang . String . format ( STRING_0 , i , org . apache . commons . lang3 . IDENT_4 . METHOD_2 ( 4 ) ) ) ; } java . lang . String IDENT_5 = STRING_1 ; java . lang . String IDENT_6 = STRING_2 ; java . lang . String IDENT_7 = STRING_3 3 ; java . lang . String IDENT_8 = STRING_3 ; int IDENT_9 = 2 ; org . IDENT_1 . core . IDENT_2 . IDENT_10 method = new org . IDENT_1 . core . IDENT_2 . METHOD_3 ( IDENT_9 ) ; java . util . Map < java . lang . String , java . lang . String > options = new java . util . HashMap ( ) ; options . put ( STRING_3 0 , STRING_4 ) ; options . put ( STRING_5 , STRING_6 ) ; options . put ( STRING_7 , STRING_8 ) ; org . IDENT_1 . core . IDENT_2 . IDENT_3 . conn . METHOD_1 ( ) . execute ( java . lang . String . format ( STRING_3 1 , IDENT_5 , IDENT_6 ) ) ; org . IDENT_1 . core . IDENT_2 . IDENT_11 plan = org . IDENT_1 . core . IDENT_2 . IDENT_11 . create ( IDENT_5 , IDENT_6 , IDENT_7 , IDENT_8 , method , options ) ; org . IDENT_1 . connection . IDENT_12 IDENT_13 = org . IDENT_1 . connection . IDENT_14 . create ( org . IDENT_1 . core . IDENT_2 . IDENT_3 . conn ) ; org . IDENT_1 . core . IDENT_15 . IDENT_16 . METHOD_4 ( IDENT_13 , plan ) ; int IDENT_17 = method . METHOD_5 ( ) ; org . IDENT_1 . connection . IDENT_18 result = IDENT_13 . execute ( java . lang . String . format ( STRING_9 , IDENT_5 , IDENT_6 ) ) ; result . METHOD_6 ( ) ; int IDENT_19 = 0 ; for ( int i = 0 ; i < IDENT_17 ; ++ i ) { org . IDENT_1 . connection . IDENT_18 r = IDENT_13 . execute ( java . lang . String . format ( ( STRING_3 2 + ( org . IDENT_1 . IDENT_20 . IDENT_21 . IDENT_22 ) ) , IDENT_5 , IDENT_6 , i ) ) ; if ( r . next ( ) ) { IDENT_19 += r . METHOD_7 ( 0 ) ; } } "<AssertPlaceHolder>" ; org . IDENT_1 . core . IDENT_2 . IDENT_3 . conn . METHOD_1 ( ) . execute ( STRING_3 4 ) ; } METHOD_7 ( int ) { if ( IDENT_23 == 1 ) { return IDENT_24 ; } METHOD_8 ( IDENT_23 ) ; return IDENT_25 . METHOD_7 ( ( IDENT_23 - 2 ) ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_19 ) 