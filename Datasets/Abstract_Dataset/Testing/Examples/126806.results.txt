METHOD_0 ( ) { org . IDENT_0 . core . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_0 . core . IDENT_1 . METHOD_1 ( STRING_0 , STRING_0 7 , STRING_1 ) ; org . IDENT_0 . core . IDENT_1 . METHOD_1 IDENT_4 = new org . IDENT_0 . core . IDENT_1 . METHOD_1 ( STRING_0 , STRING_2 , STRING_3 ) ; org . IDENT_0 . core . IDENT_1 . IDENT_5 join = org . IDENT_0 . core . IDENT_1 . IDENT_5 . create ( java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_6 > asList ( IDENT_3 , IDENT_4 ) , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_5 . IDENT_7 > asList ( IDENT_5 . IDENT_7 . IDENT_8 ) , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_9 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( STRING_4 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_9 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( STRING_0 3 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_9 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_1 , STRING_0 0 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_3 , STRING_5 ) ) ) , new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( STRING_6 , java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_9 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_3 , STRING_0 1 ) , org . IDENT_0 . core . IDENT_1 . IDENT_10 . valueOf ( STRING_0 4 ) ) ) ) ) ) ) ; org . IDENT_0 . core . IDENT_1 . IDENT_11 IDENT_12 = org . IDENT_0 . core . IDENT_1 . IDENT_11 . create ( java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_13 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_1 , STRING_0 0 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_4 ( new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( STRING_7 , new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_3 , STRING_8 ) ) , STRING_0 2 ) ) , join ) ; IDENT_12 . METHOD_5 ( new org . IDENT_0 . core . IDENT_1 . METHOD_6 ( STRING_0 0 ) ) ; IDENT_12 . METHOD_7 ( STRING_0 6 ) ; org . IDENT_0 . core . IDENT_1 . IDENT_11 IDENT_14 = org . IDENT_0 . core . IDENT_1 . IDENT_11 . create ( java . util . Arrays . asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_0 6 , STRING_0 2 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_4 ( new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( STRING_7 , new org . IDENT_0 . core . IDENT_1 . METHOD_8 ( ) ) , STRING_0 5 ) ) , IDENT_12 ) ; IDENT_14 . METHOD_5 ( new org . IDENT_0 . core . IDENT_1 . METHOD_6 ( STRING_0 2 ) ) ; IDENT_14 . METHOD_9 ( java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_15 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_10 ( STRING_0 5 , STRING_9 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_10 ( STRING_0 2 , STRING_9 ) ) ) ; IDENT_14 . METHOD_11 ( org . IDENT_0 . core . IDENT_1 . IDENT_10 . valueOf ( 1 ) ) ; org . IDENT_0 . IDENT_16 . IDENT_17 IDENT_18 = new org . IDENT_0 . IDENT_16 . METHOD_12 ( new org . IDENT_0 . IDENT_19 . METHOD_13 ( ) ) ; java . lang . String actual = IDENT_18 . METHOD_14 ( IDENT_14 ) ; java . util . List < java . lang . Object [ ] > result = shell . METHOD_15 ( actual ) ; "<AssertPlaceHolder>" ; } METHOD_14 ( org . IDENT_0 . core . IDENT_1 . IDENT_20 ) { java . lang . StringBuilder sql = new java . lang . StringBuilder ( ) ; java . lang . String IDENT_21 = query . METHOD_16 ( ) ; java . lang . String tableName = query . METHOD_17 ( ) ; java . util . List < java . lang . Object > values = query . METHOD_18 ( ) ; sql . append ( STRING_10 ) ; sql . append ( METHOD_19 ( IDENT_21 ) ) ; sql . append ( STRING_11 ) ; sql . append ( METHOD_19 ( tableName ) ) ; sql . append ( STRING_12 ) ; boolean IDENT_22 = true ; for ( java . lang . Object v : values ) { if ( IDENT_22 == false ) { sql . append ( STRING_13 ) ; } if ( v instanceof org . IDENT_0 . commons . IDENT_23 ) { if ( ( IDENT_24 ) instanceof org . IDENT_0 . IDENT_19 . IDENT_25 ) { sql . append ( ( ( STRING_14 + ( v . toString ( ) ) ) + STRING_15 ) ) ; } else { sql . append ( ( ( STRING_15 + ( v . toString ( ) ) ) + STRING_15 ) ) ; } } else if ( v instanceof java . lang . String ) { sql . append ( ( ( STRING_15 + v ) + STRING_15 ) ) ; } else { sql . append ( v . toString ( ) ) ; } IDENT_22 = false ; } sql . append ( STRING_16 ) ; return sql . toString ( ) ; }
org . junit . Assert . assertEquals ( 1 , result . size ( ) ) 