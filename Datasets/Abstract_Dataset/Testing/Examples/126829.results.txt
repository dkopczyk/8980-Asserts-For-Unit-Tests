METHOD_0 ( ) { org . IDENT_0 . core . IDENT_1 . IDENT_2 base = new org . IDENT_0 . core . IDENT_1 . METHOD_1 ( STRING_0 , STRING_1 , STRING_2 ) ; org . IDENT_0 . core . IDENT_1 . IDENT_3 IDENT_4 = org . IDENT_0 . core . IDENT_1 . IDENT_3 . create ( java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_5 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( ) ) , base ) ; IDENT_4 . METHOD_3 ( org . IDENT_0 . core . IDENT_1 . IDENT_6 . METHOD_4 ( new org . IDENT_0 . core . IDENT_1 . METHOD_5 ( STRING_2 , STRING_3 ) , org . IDENT_0 . core . IDENT_1 . IDENT_6 . METHOD_6 ( ) ) ) ; java . lang . String expected = STRING_4 ; org . IDENT_0 . IDENT_7 . IDENT_8 IDENT_9 = new org . IDENT_0 . IDENT_7 . METHOD_7 ( new org . IDENT_0 . IDENT_10 . METHOD_8 ( ) ) ; java . lang . String actual = IDENT_9 . METHOD_9 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( org . IDENT_0 . core . IDENT_1 . IDENT_11 ) { java . lang . StringBuilder sql = new java . lang . StringBuilder ( ) ; java . lang . String IDENT_12 = query . METHOD_10 ( ) ; java . lang . String tableName = query . METHOD_11 ( ) ; java . util . List < java . lang . Object > values = query . METHOD_12 ( ) ; sql . append ( STRING_5 ) ; sql . append ( METHOD_13 ( IDENT_12 ) ) ; sql . append ( STRING_6 ) ; sql . append ( METHOD_13 ( tableName ) ) ; sql . append ( STRING_7 ) ; boolean IDENT_13 = true ; for ( java . lang . Object v : values ) { if ( IDENT_13 == false ) { sql . append ( STRING_8 ) ; } if ( v instanceof org . IDENT_0 . commons . IDENT_14 ) { if ( ( IDENT_15 ) instanceof org . IDENT_0 . IDENT_10 . IDENT_16 ) { sql . append ( ( ( STRING_9 + ( v . toString ( ) ) ) + STRING_10 ) ) ; } else { sql . append ( ( ( STRING_10 + ( v . toString ( ) ) ) + STRING_10 ) ) ; } } else if ( v instanceof java . lang . String ) { sql . append ( ( ( STRING_10 + v ) + STRING_10 ) ) ; } else { sql . append ( v . toString ( ) ) ; } IDENT_13 = false ; } sql . append ( STRING_11 ) ; return sql . toString ( ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 