METHOD_0 ( ) { org . IDENT_0 . core . IDENT_1 . IDENT_2 base = new org . IDENT_0 . core . IDENT_1 . METHOD_1 ( STRING_0 , STRING_1 , STRING_2 ) ; java . util . List < org . IDENT_0 . core . IDENT_1 . IDENT_3 > IDENT_4 = java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_3 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( STRING_2 , STRING_3 ) , new org . IDENT_0 . core . IDENT_1 . METHOD_2 ( STRING_2 , STRING_4 ) ) ; org . IDENT_0 . core . IDENT_1 . IDENT_5 IDENT_6 = org . IDENT_0 . core . IDENT_1 . IDENT_5 . create ( java . util . Arrays . < org . IDENT_0 . core . IDENT_1 . IDENT_7 > asList ( new org . IDENT_0 . core . IDENT_1 . METHOD_3 ( STRING_5 , IDENT_4 ) ) , base ) ; java . lang . String expected = STRING_6 ; org . IDENT_0 . IDENT_8 . IDENT_9 IDENT_10 = new org . IDENT_0 . IDENT_8 . METHOD_4 ( new org . IDENT_0 . IDENT_11 . METHOD_5 ( ) ) ; java . lang . String actual = IDENT_10 . METHOD_6 ( IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( org . IDENT_0 . core . IDENT_1 . IDENT_12 ) { java . lang . StringBuilder sql = new java . lang . StringBuilder ( ) ; java . lang . String IDENT_13 = query . METHOD_7 ( ) ; java . lang . String tableName = query . METHOD_8 ( ) ; java . util . List < java . lang . Object > values = query . METHOD_9 ( ) ; sql . append ( STRING_7 ) ; sql . append ( METHOD_10 ( IDENT_13 ) ) ; sql . append ( STRING_8 ) ; sql . append ( METHOD_10 ( tableName ) ) ; sql . append ( STRING_9 ) ; boolean IDENT_14 = true ; for ( java . lang . Object v : values ) { if ( IDENT_14 == false ) { sql . append ( STRING_10 ) ; } if ( v instanceof org . IDENT_0 . commons . IDENT_15 ) { if ( ( IDENT_16 ) instanceof org . IDENT_0 . IDENT_11 . IDENT_17 ) { sql . append ( ( ( STRING_11 + ( v . toString ( ) ) ) + STRING_12 ) ) ; } else { sql . append ( ( ( STRING_12 + ( v . toString ( ) ) ) + STRING_12 ) ) ; } } else if ( v instanceof java . lang . String ) { sql . append ( ( ( STRING_12 + v ) + STRING_12 ) ) ; } else { sql . append ( v . toString ( ) ) ; } IDENT_14 = false ; } sql . append ( STRING_13 ) ; return sql . toString ( ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 