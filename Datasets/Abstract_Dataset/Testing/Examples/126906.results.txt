METHOD_0 ( ) { net . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = net . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . builder ( ) . build ( ) ; final java . lang . String IDENT_5 = new java . lang . StringBuilder ( ) . append ( STRING_0 ) . append ( java . util . UUID . METHOD_1 ( ) . toString ( ) . replaceAll ( STRING_1 , "" ) ) . toString ( ) ; final java . lang . String IDENT_6 = new java . lang . StringBuilder ( ) . append ( STRING_0 ) . append ( java . util . UUID . METHOD_1 ( ) . toString ( ) . replaceAll ( STRING_1 , "" ) ) . toString ( ) ; java . lang . String IDENT_7 = IDENT_4 . METHOD_2 ( ) ; java . lang . String user = IDENT_4 . METHOD_3 ( ) ; java . lang . String IDENT_8 = IDENT_4 . METHOD_4 ( ) ; try ( java . sql . IDENT_9 connection = java . sql . IDENT_10 . METHOD_5 ( IDENT_7 , user , IDENT_8 ) ) { for ( java . lang . String IDENT_11 : java . util . Arrays . asList ( IDENT_5 , IDENT_6 ) ) { try ( java . sql . IDENT_12 stmt = connection . METHOD_6 ( ) ) { stmt . METHOD_7 ( ( STRING_2 + IDENT_11 ) ) ; } try ( java . sql . IDENT_12 stmt = connection . METHOD_6 ( ) ) { stmt . METHOD_7 ( ( ( ( STRING_3 + IDENT_11 ) + STRING_4 ) + ( net . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_13 . IDENT_14 ) ) ) ; } } java . lang . String [ ] args = new java . lang . String [ ] { ( STRING_5 + IDENT_5 ) + STRING_6 , ( STRING_5 + IDENT_6 ) + STRING_6 } ; net . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_15 . METHOD_8 ( args ) ; } catch ( com . IDENT_1 . jdbc . exceptions . IDENT_16 . IDENT_17 e ) { org . junit . IDENT_18 . METHOD_9 ( STRING_7 , false ) ; return ; } catch ( java . lang . Exception e ) { throw e ; } finally { try ( java . sql . IDENT_9 IDENT_19 = java . sql . IDENT_10 . METHOD_5 ( IDENT_7 , user , IDENT_8 ) ) { for ( java . lang . String IDENT_11 : java . util . Arrays . asList ( IDENT_5 , IDENT_6 ) ) { try ( java . sql . IDENT_12 stmt = IDENT_19 . METHOD_6 ( ) ) { stmt . METHOD_7 ( ( STRING_8 + IDENT_11 ) ) ; } } } catch ( com . IDENT_1 . jdbc . exceptions . IDENT_16 . IDENT_17 e ) { org . junit . IDENT_18 . METHOD_9 ( STRING_7 , false ) ; } } "<AssertPlaceHolder>" ; } METHOD_8 ( java . lang . String [ ] ) { net . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_15 app = new net . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_10 ( ) ; org . IDENT_20 . IDENT_21 . IDENT_22 parser = new org . IDENT_20 . IDENT_21 . METHOD_11 ( app ) ; try { parser . METHOD_12 ( args ) ; } catch ( org . IDENT_20 . IDENT_21 . IDENT_23 e ) { throw new java . lang . IllegalArgumentException ( ( STRING_9 + ( java . util . Arrays . asList ( args ) ) ) ) ; } if ( app . IDENT_24 ) { System . out . println ( java . util . Optional . METHOD_13 ( net . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_10 . class . METHOD_14 ( ) . METHOD_15 ( ) ) . METHOD_16 ( STRING_10 ) ) ; return ; } if ( app . IDENT_25 ) { System . out . println ( net . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_10 . METHOD_17 ( ) ) ; return ; } java . util . List < java . lang . String > IDENT_26 = java . util . Arrays . asList ( java . util . Optional . METHOD_13 ( args ) . METHOD_16 ( new java . lang . String [ 0 ] ) ) ; int IDENT_27 = IDENT_26 . size ( ) ; if ( IDENT_27 != 2 ) { if ( IDENT_27 < 2 ) { System . err . println ( STRING_11 ) ; } else { System . err . println ( STRING_12 ) ; } System . err . println ( ) ; System . err . println ( net . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_10 . METHOD_17 ( ) ) ; java . lang . System . METHOD_18 ( 1 ) ; } java . util . List < java . util . List < net . IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_28 > > IDENT_29 = new java . util . ArrayList ( ) ; for ( java . lang . String IDENT_30 : IDENT_26 ) { java . lang . String schema ; net . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_31 IDENT_32 = new net . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_19 ( ) ; java . io . File file = new java . io . File ( IDENT_30 ) ; if ( file . exists ( ) ) { schema = IDENT_32 . METHOD_20 ( file ) ; } else if ( IDENT_30 . contains ( " " ) ) { net . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_10 . IDENT_33 IDENT_34 = new net . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_10 ( ) . new METHOD_21 ( ) ; org . IDENT_20 . IDENT_21 . METHOD_11 IDENT_35 = new org . IDENT_20 . IDENT_21 . METHOD_11 ( IDENT_34 ) ; try { IDENT_35 . METHOD_12 ( IDENT_30 . substring ( 1 , ( ( IDENT_30 . length ( ) ) - 1 ) ) . split ( " " ) ) ; } catch ( org . IDENT_20 . IDENT_21 . IDENT_23 e ) { throw new java . lang . IllegalArgumentException ( ( STRING_13 + IDENT_30 ) ) ; } if ( ( ( IDENT_34 . IDENT_11 ) == null ) || ( IDENT_34 . IDENT_11 . isEmpty ( ) ) ) { throw new java . lang . IllegalArgumentException ( ( STRING_13 + IDENT_30 ) ) ; } net . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . Builder IDENT_36 = net . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . builder ( ) ; if ( ( IDENT_34 . host ) != null ) { IDENT_36 . host ( IDENT_34 . host ) ; } if ( ( IDENT_34 . user ) != null ) { IDENT_36 . user ( IDENT_34 . user ) ; } if ( ( IDENT_34 . IDENT_8 ) != null ) { IDENT_36 . METHOD_22 ( IDENT_34 . METHOD_22 ) ; } schema = IDENT_32 . METHOD_23 ( IDENT_34 . IDENT_11 , IDENT_36 . build ( ) ) ; } else { schema = IDENT_32 . METHOD_24 ( IDENT_30 ) ; } IDENT_29 . add ( net . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_37 . parse ( schema ) ) ; } java . lang . String IDENT_2 = net . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_38 . METHOD_25 ( IDENT_29 . get ( 0 ) , IDENT_29 . get ( 1 ) ) ; System . out . println ( IDENT_2 ) ; }
org . junit . Assert . assertTrue ( true ) 