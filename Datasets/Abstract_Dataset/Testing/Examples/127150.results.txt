METHOD_0 ( ) { int size = METHOD_1 ( ) ; short [ ] IDENT_0 = new short [ size ] ; java . lang . IDENT_1 [ ] object = new java . lang . IDENT_1 [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { short value = ( ( short ) ( IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . util . IDENT_6 . IDENT_7 . METHOD_2 ( IDENT_1 . MAX_VALUE ) ) ) ; IDENT_0 [ i ] = value ; object [ i ] = new java . lang . METHOD_3 ( value ) ; } "<AssertPlaceHolder>" ; } METHOD_4 ( boolean [ ] ) { if ( array == null ) { return null ; } if ( ( array . length ) == 0 ) { return IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . util . IDENT_8 . IDENT_9 ; } java . lang . Boolean [ ] IDENT_10 = new java . lang . Boolean [ array . length ] ; for ( int i = 0 ; i < ( array . length ) ; i ++ ) { IDENT_10 [ i ] = new java . lang . Boolean ( array [ i ] ) ; } return IDENT_10 ; }
org . junit . Assert . assertArrayEquals ( object , IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . util . IDENT_8 . METHOD_4 ( IDENT_0 ) ) 