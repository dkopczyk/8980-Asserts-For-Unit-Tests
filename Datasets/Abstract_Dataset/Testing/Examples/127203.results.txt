METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = org . IDENT_0 . IDENT_1 . IDENT_2 . tests . IDENT_5 . METHOD_1 ( ) ; byte [ ] IDENT_6 = new byte [ ] { INT_0 , INT_1 , INT_2 , INT_0 , INT_3 , INT_4 , INT_5 , INT_1 , INT_6 , INT_0 , INT_7 , INT_0 } ; byte [ ] IDENT_7 = new byte [ ] { 0 , 0 , 0 , 0 , 0 , 0 , INT_8 , - INT_9 } ; byte [ ] IDENT_8 = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 . METHOD_2 ( IDENT_4 , IDENT_7 , java . util . Arrays . METHOD_3 ( IDENT_6 , IDENT_6 . length ) ) ; byte [ ] IDENT_10 = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 . METHOD_4 ( IDENT_4 , IDENT_7 , java . util . Arrays . METHOD_3 ( IDENT_8 , IDENT_8 . length ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( ) { java . io . File IDENT_11 = org . IDENT_0 . IDENT_1 . IDENT_2 . tests . IDENT_5 . METHOD_5 ( org . IDENT_0 . IDENT_1 . IDENT_2 . tests . IDENT_5 . IDENT_12 ) ; return new org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_6 ( ) . METHOD_7 ( IDENT_11 . getAbsolutePath ( ) ) . METHOD_8 ( org . IDENT_0 . IDENT_1 . IDENT_2 . tests . IDENT_5 . IDENT_13 ) . METHOD_9 ( ) ; }
org . junit . Assert . assertArrayEquals ( IDENT_6 , IDENT_10 ) 