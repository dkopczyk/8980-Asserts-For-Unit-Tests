METHOD_0 ( ) { org . apache . flink . runtime . IDENT_0 . IDENT_1 IDENT_2 = new org . apache . flink . runtime . IDENT_0 . METHOD_1 ( new org . apache . flink . api . common . METHOD_2 ( ) , 0 , 0 , 1 , new java . util . HashMap ( ) , java . util . Collections . emptyList ( ) , org . apache . flink . runtime . IDENT_0 . IDENT_3 . METHOD_3 ( IDENT_4 . IDENT_5 ) , new org . apache . flink . runtime . state . IDENT_6 . METHOD_4 ( ) ) ; org . apache . flink . runtime . IDENT_0 . METHOD_1 IDENT_7 = new org . apache . flink . runtime . IDENT_0 . METHOD_1 ( new org . apache . flink . api . common . METHOD_2 ( ) , 1 , 0 , 1 , new java . util . HashMap ( ) , java . util . Collections . emptyList ( ) , org . apache . flink . runtime . IDENT_0 . IDENT_3 . METHOD_3 ( IDENT_4 . IDENT_5 ) , new org . apache . flink . runtime . state . IDENT_6 . METHOD_4 ( ) ) ; java . util . List < org . apache . flink . runtime . IDENT_0 . METHOD_1 > IDENT_8 = new java . util . ArrayList ( ) ; IDENT_8 . add ( IDENT_2 ) ; IDENT_8 . add ( IDENT_7 ) ; IDENT_8 . add ( IDENT_2 ) ; java . util . List < org . apache . flink . runtime . IDENT_0 . METHOD_1 > IDENT_9 = new java . util . ArrayList ( ) ; IDENT_9 . add ( IDENT_2 ) ; IDENT_9 . add ( IDENT_7 ) ; IDENT_9 . add ( IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . util . Collection , java . util . Collection ) { if ( ( first . size ( ) ) != ( IDENT_10 . size ( ) ) ) { return false ; } java . util . List < org . apache . flink . api . java . tuple . IDENT_11 < java . lang . Long , org . apache . flink . api . common . METHOD_2 > > IDENT_12 = new java . util . ArrayList ( first . size ( ) ) ; for ( org . apache . flink . runtime . IDENT_0 . METHOD_1 IDENT_0 : first ) { IDENT_12 . add ( new org . apache . flink . api . java . tuple . METHOD_6 ( IDENT_0 . METHOD_7 ( ) , IDENT_0 . METHOD_8 ( ) ) ) ; } java . util . List < org . apache . flink . api . java . tuple . METHOD_6 < java . lang . Long , org . apache . flink . api . common . METHOD_2 > > IDENT_13 = new java . util . ArrayList ( IDENT_10 . size ( ) ) ; for ( org . apache . flink . runtime . IDENT_0 . METHOD_1 IDENT_0 : IDENT_10 ) { IDENT_13 . add ( new org . apache . flink . api . java . tuple . METHOD_6 ( IDENT_0 . METHOD_7 ( ) , IDENT_0 . METHOD_8 ( ) ) ) ; } return IDENT_12 . equals ( IDENT_13 ) ; }
org . junit . Assert . assertTrue ( org . apache . flink . runtime . IDENT_0 . METHOD_1 . METHOD_5 ( IDENT_8 , IDENT_9 ) ) 