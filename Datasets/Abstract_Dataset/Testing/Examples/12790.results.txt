METHOD_0 ( ) { long IDENT_0 = INT_0 ; long IDENT_1 = INT_1 ; long IDENT_2 = IDENT_1 + IDENT_0 ; java . util . Map < org . apache . flink . runtime . IDENT_3 . IDENT_4 , org . apache . flink . runtime . IDENT_5 . IDENT_6 > IDENT_7 = new java . util . HashMap ( ) ; org . apache . flink . runtime . IDENT_3 . IDENT_4 IDENT_8 = new org . apache . flink . runtime . IDENT_3 . METHOD_1 ( ) ; IDENT_7 . put ( IDENT_8 , new org . apache . flink . runtime . IDENT_5 . METHOD_2 ( IDENT_8 , 1 ) ) ; org . apache . flink . runtime . IDENT_5 . IDENT_9 IDENT_10 = new org . apache . flink . runtime . IDENT_5 . METHOD_3 ( 0 , IDENT_1 , org . apache . flink . runtime . IDENT_5 . IDENT_11 . METHOD_4 ( IDENT_12 . IDENT_13 ) , 1 , IDENT_7 , 0 , 0 , 0 , IDENT_2 , null , null ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { return java . lang . Math . max ( 0 , ( ( IDENT_2 ) - ( IDENT_1 ) ) ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_10 . METHOD_5 ( ) ) 