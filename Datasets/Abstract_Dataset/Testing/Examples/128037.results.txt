METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . model . IDENT_2 query = connection . METHOD_1 ( IDENT_3 . IDENT_4 , com . IDENT_0 . IDENT_1 . jena . IDENT_5 . IDENT_6 ) ; query . METHOD_2 ( 1 ) ; com . IDENT_0 . commons . lang . IDENT_7 < java . util . Map < java . lang . String , com . IDENT_0 . IDENT_1 . model . IDENT_8 > > IDENT_9 = query . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; while ( IDENT_9 . hasNext ( ) ) { IDENT_9 . next ( ) ; } IDENT_9 . close ( ) ; } hasNext ( ) { try { return IDENT_10 . hasNext ( ) ; } catch ( com . IDENT_0 . IDENT_1 . IDENT_11 . org . IDENT_12 e ) { throw new com . IDENT_0 . IDENT_1 . model . METHOD_4 ( e ) ; } }
org . junit . Assert . assertTrue ( IDENT_9 . hasNext ( ) ) 