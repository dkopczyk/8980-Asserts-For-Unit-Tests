METHOD_0 ( ) { try { final org . apache . flink . runtime . IDENT_0 . IDENT_1 IDENT_2 = new org . apache . flink . runtime . IDENT_0 . METHOD_1 ( ) ; final org . apache . flink . runtime . IDENT_0 . METHOD_1 IDENT_3 = new org . apache . flink . runtime . IDENT_0 . METHOD_1 ( ) ; org . apache . flink . runtime . IDENT_0 . IDENT_4 v1 = new org . apache . flink . runtime . IDENT_0 . METHOD_2 ( STRING_0 , IDENT_2 ) ; org . apache . flink . runtime . IDENT_0 . METHOD_2 v2 = new org . apache . flink . runtime . IDENT_0 . METHOD_2 ( STRING_1 , IDENT_3 ) ; java . util . Map < org . apache . flink . runtime . IDENT_5 . IDENT_6 , org . apache . flink . runtime . IDENT_5 . IDENT_7 > IDENT_8 = METHOD_3 ( v1 , 7 , v2 , 6 ) . IDENT_9 ; for ( org . apache . flink . runtime . IDENT_5 . IDENT_7 e : IDENT_8 . values ( ) ) { e . METHOD_4 ( null ) ; } "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( e . getMessage ( ) ) ; } } size ( ) { return IDENT_10 . size ( ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_8 . size ( ) ) 