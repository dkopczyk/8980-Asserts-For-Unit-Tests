METHOD_0 ( ) { fr . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . resource . IDENT_4 plan = new fr . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . resource . METHOD_1 ( ) ; plan . METHOD_2 ( false ) ; when ( IDENT_3 . METHOD_3 ( anyString ( ) ) ) . thenReturn ( plan ) ; fr . IDENT_0 . IDENT_1 . api . domain . IDENT_5 IDENT_6 = new fr . IDENT_0 . IDENT_1 . api . domain . METHOD_4 ( STRING_0 ) ; boolean IDENT_7 = IDENT_8 . METHOD_5 ( IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( fr . IDENT_0 . IDENT_1 . api . domain . METHOD_4 ) { METHOD_6 ( ) ; METHOD_7 ( IDENT_6 ) ; try { java . lang . String IDENT_9 = IDENT_6 . METHOD_8 ( ) ; fr . IDENT_0 . IDENT_1 . IDENT_2 . hudson . domain . IDENT_10 job = hudson . METHOD_9 ( IDENT_9 ) ; return job . METHOD_10 ( ) ; } catch ( fr . IDENT_0 . IDENT_1 . IDENT_2 . hudson . exception . IDENT_11 e ) { throw new fr . IDENT_0 . IDENT_1 . api . exception . METHOD_11 ( ( STRING_1 + IDENT_6 ) , e ) ; } }
org . junit . Assert . assertTrue ( METHOD_10 ) 