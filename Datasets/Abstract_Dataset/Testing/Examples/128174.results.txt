METHOD_0 ( ) { fr . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . resource . IDENT_4 project = new fr . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . resource . METHOD_1 ( ) ; project . METHOD_2 ( false ) ; when ( IDENT_5 . METHOD_3 ( anyString ( ) ) ) . thenReturn ( project ) ; fr . IDENT_0 . IDENT_1 . api . domain . IDENT_6 IDENT_7 = new fr . IDENT_0 . IDENT_1 . api . domain . METHOD_4 ( STRING_0 ) ; boolean IDENT_8 = IDENT_9 . METHOD_5 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( fr . IDENT_0 . IDENT_1 . api . domain . METHOD_4 ) { METHOD_6 ( ) ; METHOD_7 ( IDENT_7 ) ; try { java . lang . String IDENT_10 = IDENT_7 . METHOD_8 ( ) ; fr . IDENT_0 . IDENT_1 . IDENT_2 . hudson . domain . IDENT_11 job = hudson . METHOD_9 ( IDENT_10 ) ; return job . METHOD_10 ( ) ; } catch ( fr . IDENT_0 . IDENT_1 . IDENT_2 . hudson . exception . IDENT_12 e ) { throw new fr . IDENT_0 . IDENT_1 . api . exception . METHOD_11 ( ( STRING_1 + IDENT_7 ) , e ) ; } }
org . junit . Assert . assertFalse ( METHOD_10 ) 