METHOD_0 ( ) { org . jfree . data . time . IDENT_0 IDENT_1 = new org . jfree . data . time . METHOD_1 ( ) ; IDENT_1 . add ( new org . jfree . data . time . METHOD_2 ( INT_0 ) , FLOAT_0 , STRING_0 ) ; org . jfree . data . time . METHOD_1 IDENT_2 = ( ( org . jfree . data . time . METHOD_1 ) ( org . jfree . chart . IDENT_3 . METHOD_3 ( IDENT_1 ) ) ) ; "<AssertPlaceHolder>" ; } equals ( java . lang . Object ) { if ( obj == ( this ) ) { return true ; } if ( ! ( obj instanceof org . jfree . data . IDENT_4 . IDENT_5 ) ) { return false ; } org . jfree . data . IDENT_4 . IDENT_5 that = ( ( org . jfree . data . IDENT_4 . IDENT_5 ) ( obj ) ) ; if ( ! ( METHOD_4 ( ) . equals ( that . METHOD_4 ( ) ) ) ) { return false ; } if ( ! ( METHOD_5 ( ) . equals ( that . METHOD_5 ( ) ) ) ) { return false ; } int IDENT_6 = METHOD_6 ( ) ; int IDENT_7 = METHOD_7 ( ) ; for ( int r = 0 ; r < IDENT_6 ; r ++ ) { for ( int c = 0 ; c < IDENT_7 ; c ++ ) { java . lang . IDENT_8 v1 = getValue ( r , c ) ; java . lang . IDENT_8 v2 = that . getValue ( r , c ) ; if ( v1 == null ) { if ( v2 != null ) { return false ; } } else if ( ! ( v1 . equals ( v2 ) ) ) { return false ; } } } return true ; }
org . junit . Assert . assertTrue ( IDENT_1 . equals ( IDENT_2 ) ) 