METHOD_0 ( ) { final int IDENT_0 = 255 ; final int IDENT_1 = INT_0 ; final int IDENT_2 = INT_1 ; for ( int i = 0 ; i < IDENT_0 ; ++ i ) { IDENT_3 . METHOD_1 ( STRING_0 ) ; } java . util . Map < org . apache . accumulo . core . data . impl . IDENT_4 , org . apache . accumulo . server . IDENT_5 . state . IDENT_6 > IDENT_7 = new java . util . HashMap ( ) ; java . text . IDENT_8 IDENT_9 = new java . text . METHOD_2 ( STRING_1 ) ; java . util . IDENT_10 IDENT_11 = new java . util . METHOD_3 ( ) ; java . lang . String [ ] IDENT_12 = new java . lang . String [ IDENT_1 ] ; for ( int i = 0 ; i < ( IDENT_12 . length ) ; ++ i ) IDENT_12 [ i ] = STRING_2 + i ; java . util . Arrays . METHOD_4 ( IDENT_12 ) ; IDENT_11 . set ( INT_2 , Calendar . IDENT_13 , 1 , 0 , 0 , 0 ) ; java . lang . String IDENT_14 = null ; for ( int i = 0 ; i < IDENT_2 ; i ++ ) { java . lang . String date = IDENT_9 . format ( IDENT_11 . getTime ( ) ) ; for ( java . lang . String IDENT_15 : IDENT_12 ) { java . lang . String IDENT_16 = date + IDENT_15 ; IDENT_7 . put ( IDENT_17 . IDENT_18 . table . IDENT_19 . IDENT_20 . METHOD_5 ( IDENT_17 . IDENT_18 . table . IDENT_19 . IDENT_20 . IDENT_21 , IDENT_16 , IDENT_14 ) , null ) ; IDENT_14 = IDENT_16 ; } IDENT_11 . add ( Calendar . IDENT_22 , 1 ) ; } int IDENT_23 = IDENT_7 . size ( ) ; java . util . Map < org . apache . accumulo . core . data . impl . IDENT_4 , org . apache . accumulo . server . IDENT_5 . state . IDENT_6 > IDENT_24 = new java . util . HashMap ( ) ; IDENT_25 . METHOD_6 ( IDENT_3 . METHOD_7 ( ) , IDENT_7 , IDENT_24 ) ; IDENT_3 . METHOD_8 ( IDENT_24 ) ; "<AssertPlaceHolder>" ; int IDENT_26 = java . lang . Math . max ( ( IDENT_1 / IDENT_0 ) , 1 ) ; int IDENT_27 = IDENT_1 / IDENT_0 ; if ( ( IDENT_1 OP_0 IDENT_0 ) > 0 ) IDENT_27 ++ ; IDENT_3 . METHOD_9 ( IDENT_26 , IDENT_27 ) ; IDENT_3 . METHOD_10 ( IDENT_25 . METHOD_11 ( ) ) ; IDENT_3 . METHOD_12 ( ) ; METHOD_13 ( 5 ) ; IDENT_3 . METHOD_9 ( IDENT_26 , ( IDENT_27 + 1 ) ) ; IDENT_3 . METHOD_14 ( ) ; } size ( ) { return this . IDENT_28 . size ( ) ; }
org . junit . Assert . assertEquals ( IDENT_23 , IDENT_24 . size ( ) ) 