METHOD_0 ( ) { METHOD_1 ( ) ; METHOD_2 ( new java . lang . Integer [ ] { 3 } ) ; java . lang . String IDENT_0 = METHOD_3 ( ) ; java . lang . String IDENT_1 = IDENT_2 . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; for ( int IDENT_3 = ( IDENT_4 . length ) - 1 ; IDENT_3 >= 0 ; OP_0 IDENT_3 ) { sb . append ( java . lang . String . format ( STRING_0 , IDENT_4 [ IDENT_3 ] , STRING_1 , IDENT_5 [ IDENT_3 ] . size ( ) ) ) ; } sb . append ( "\n" ) ; java . lang . String IDENT_6 = sb . toString ( ) ; IDENT_7 . index . validation . IDENT_8 . log . info ( IDENT_6 ) ; return IDENT_6 ; }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_1 ) 