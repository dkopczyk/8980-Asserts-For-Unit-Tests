METHOD_0 ( ) { java . lang . String query = METHOD_1 ( IDENT_0 , STRING_0 , STRING_1 , Constants . IDENT_1 , STRING_2 , STRING_3 ) ; org . apache . commons . IDENT_2 . IDENT_3 expr = IDENT_4 . query . IDENT_5 . IDENT_6 . IDENT_7 . engine . METHOD_2 ( query ) ; java . util . List < IDENT_4 . IDENT_8 . IDENT_9 . IDENT_10 > IDENT_11 ; java . util . List < IDENT_4 . IDENT_8 . IDENT_9 . IDENT_10 > IDENT_12 ; IDENT_11 = asList ( java . util . Arrays . asList ( 1 , 2 , 3 ) , java . util . Arrays . asList ( 0 , 0 , 0 ) , java . util . Arrays . asList ( ( - FLOAT_0 ) , ( - FLOAT_1 ) , ( - FLOAT_2 ) ) ) ; IDENT_12 = asList ( java . util . Arrays . asList ( 3 , 4 , 5 ) , java . util . Arrays . asList ( 0 , 0 , 0 ) , java . util . Arrays . asList ( ( - FLOAT_3 ) , ( - FLOAT_1 ) , ( - FLOAT_2 ) ) ) ; IDENT_13 . put ( STRING_4 , new IDENT_4 . query . IDENT_5 . IDENT_6 . METHOD_3 ( com . google . common . collect . IDENT_14 . METHOD_4 ( new IDENT_4 . query . IDENT_5 . IDENT_6 . METHOD_3 . METHOD_5 ( STRING_5 , true , IDENT_15 ) , IDENT_11 ) ) ) ; IDENT_13 . put ( STRING_6 , new IDENT_4 . query . IDENT_5 . IDENT_6 . METHOD_3 ( com . google . common . collect . IDENT_14 . METHOD_4 ( new IDENT_4 . query . IDENT_5 . IDENT_6 . METHOD_3 . METHOD_5 ( STRING_5 , true , IDENT_15 ) , IDENT_12 ) ) ) ; context . set ( Constants . IDENT_1 , IDENT_13 ) ; java . lang . Object o = expr . evaluate ( context ) ; "<AssertPlaceHolder>" ; } expect ( java . lang . Object , java . lang . Boolean ) { if ( null == result ) { return Boolean . IDENT_16 . equals ( expected ) ; } if ( result instanceof java . lang . Boolean ) { return result . equals ( expected ) ; } return false ; }
org . junit . Assert . assertTrue ( IDENT_4 . query . IDENT_5 . IDENT_6 . IDENT_7 . expect ( o , false ) ) 