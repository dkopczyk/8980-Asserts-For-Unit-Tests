METHOD_0 ( ) { table . METHOD_1 ( ) ; long IDENT_0 = java . lang . System . currentTimeMillis ( ) ; IDENT_1 . store . IDENT_2 . List < IDENT_1 . model . IDENT_3 > IDENT_4 = new IDENT_1 . store . IDENT_2 . ArrayList ( ) ; IDENT_4 . add ( new IDENT_1 . model . METHOD_2 ( STRING_0 , STRING_1 ) ) ; IDENT_1 . store . IDENT_2 . List < IDENT_1 . model . METHOD_2 > IDENT_5 = new IDENT_1 . store . IDENT_2 . ArrayList ( ) ; IDENT_5 . add ( new IDENT_1 . model . METHOD_2 ( STRING_0 , STRING_2 ) ) ; for ( int i = 0 ; i < 100 ; i ++ ) { IDENT_0 += 1000 ; IDENT_1 . model . IDENT_6 m = new IDENT_1 . model . METHOD_3 ( STRING_3 , IDENT_0 , ( i * 1.0 ) , IDENT_4 ) ; byte [ ] row = IDENT_1 . adapter . accumulo . IDENT_7 . METHOD_4 ( m ) ; org . apache . accumulo . core . data . IDENT_8 k = new org . apache . accumulo . core . data . METHOD_5 ( row , IDENT_4 . get ( 0 ) . join ( ) . getBytes ( IDENT_9 . UTF_8 ) , IDENT_1 . adapter . accumulo . IDENT_7 . METHOD_6 ( IDENT_0 , "" ) , new byte [ 0 ] , IDENT_0 ) ; org . apache . accumulo . core . data . IDENT_10 v = new org . apache . accumulo . core . data . METHOD_7 ( IDENT_1 . adapter . accumulo . IDENT_7 . METHOD_8 ( m . getValue ( ) . METHOD_9 ( ) ) ) ; table . put ( k , v ) ; if ( i < 50 ) { IDENT_1 . model . METHOD_3 IDENT_11 = new IDENT_1 . model . METHOD_3 ( STRING_3 , IDENT_0 , ( i * 2.0 ) , IDENT_5 ) ; byte [ ] IDENT_12 = IDENT_1 . adapter . accumulo . IDENT_7 . METHOD_4 ( IDENT_11 ) ; org . apache . accumulo . core . data . METHOD_5 IDENT_13 = new org . apache . accumulo . core . data . METHOD_5 ( IDENT_12 , IDENT_5 . get ( 0 ) . join ( ) . getBytes ( IDENT_9 . UTF_8 ) , IDENT_1 . adapter . accumulo . IDENT_7 . METHOD_6 ( IDENT_0 , "" ) , new byte [ 0 ] , IDENT_0 ) ; org . apache . accumulo . core . data . METHOD_7 v2 = new org . apache . accumulo . core . data . METHOD_7 ( IDENT_1 . adapter . accumulo . IDENT_7 . METHOD_8 ( IDENT_11 . getValue ( ) . METHOD_9 ( ) ) ) ; table . put ( IDENT_13 , v2 ) ; } } org . apache . accumulo . core . IDENT_2 . IDENT_14 source = new org . apache . accumulo . core . IDENT_2 . METHOD_10 ( table ) ; IDENT_1 . store . IDENT_2 . IDENT_15 IDENT_16 = new IDENT_1 . store . IDENT_2 . METHOD_11 ( ) ; org . apache . accumulo . core . client . IDENT_17 IDENT_18 = new org . apache . accumulo . core . client . METHOD_12 ( 100 , IDENT_1 . store . IDENT_2 . METHOD_11 . class ) ; IDENT_18 . METHOD_13 ( METHOD_11 . IDENT_19 , STRING_4 ) ; IDENT_16 . init ( source , IDENT_18 . METHOD_14 ( ) , IDENT_1 . store . IDENT_2 . IDENT_20 ) ; IDENT_16 . METHOD_15 ( new org . apache . accumulo . core . data . METHOD_16 ( ) , IDENT_1 . store . IDENT_2 . IDENT_21 , true ) ; for ( int i = 4 ; i < 100 ; i ++ ) { System . out . println ( i ) ; METHOD_17 ( IDENT_16 , new double [ ] { i - 4 , i - 3 , i - 2 , i - 1 , i } ) ; } for ( int i = 4 ; i < 50 ; i ++ ) { System . out . println ( i ) ; METHOD_17 ( IDENT_16 , new double [ ] { ( i - 4 ) * 2 , ( i - 3 ) * 2 , ( i - 2 ) * 2 , ( i - 1 ) * 2 , i * 2 } ) ; } "<AssertPlaceHolder>" ; } METHOD_18 ( ) { while ( super . METHOD_18 ( ) ) { IDENT_22 = super . METHOD_19 ( ) ; java . util . Map < java . util . Set < IDENT_1 . model . METHOD_2 > , IDENT_1 . IDENT_23 . IDENT_24 > IDENT_25 = null ; try { IDENT_25 = IDENT_1 . IDENT_23 . IDENT_2 . IDENT_26 . METHOD_20 ( super . METHOD_21 ( ) ) ; } catch ( IDENT_1 . IDENT_23 . IDENT_2 . IOException e ) { throw new java . lang . RuntimeException ( STRING_5 , e ) ; } catch ( java . lang . IDENT_27 e ) { throw new java . lang . RuntimeException ( STRING_6 , e ) ; } for ( Map . Entry < java . util . Set < IDENT_1 . model . METHOD_2 > , IDENT_1 . IDENT_23 . IDENT_24 > entry : IDENT_25 . entrySet ( ) ) { for ( IDENT_1 . IDENT_23 . IDENT_28 IDENT_23 : entry . getValue ( ) ) { IDENT_29 . add ( IDENT_23 . IDENT_30 , IDENT_23 . value ) ; } } try { super . next ( ) ; } catch ( IDENT_1 . IDENT_23 . IDENT_2 . IOException e ) { throw new java . lang . RuntimeException ( STRING_7 , e ) ; } } return ( IDENT_22 ) != null ; }
org . junit . Assert . assertFalse ( IDENT_16 . METHOD_18 ( ) ) 