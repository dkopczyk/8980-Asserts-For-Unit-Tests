test ( ) { if ( ! ( org . IDENT_0 . IDENT_1 . METHOD_0 ( ) ) ) return ; java . lang . IDENT_2 p = java . lang . IDENT_3 . METHOD_1 ( ) . exec ( new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 , STRING_3 } ) ; java . io . IDENT_4 in = new java . io . METHOD_2 ( new java . io . METHOD_3 ( p . METHOD_4 ( ) ) ) ; java . lang . String path ; while ( ( path = in . METHOD_5 ( ) ) != null ) { path = path . trim ( ) ; if ( path . contains ( STRING_4 ) ) continue ; java . io . File f = new java . io . File ( path ) ; try { System . out . println ( ( ( STRING_5 + f ) + STRING_6 ) ) ; org . IDENT_0 . IDENT_5 lib = org . IDENT_0 . IDENT_6 . METHOD_6 ( f . getName ( ) , f ) ; "<AssertPlaceHolder>" ; System . out . println ( ( ( STRING_7 + ( lib . METHOD_7 ( ) . size ( ) ) ) + STRING_3 0 ) ) ; lib . METHOD_8 ( ) ; } catch ( java . lang . Throwable IDENT_7 ) { System . err . println ( ( ( ( STRING_8 + path ) + STRING_9 ) + IDENT_7 ) ) ; } } } getName ( ) { if ( ( name ) == null ) { name = org . IDENT_0 . IDENT_8 . IDENT_9 . METHOD_9 ( this ) . METHOD_10 ( ) ; } return name ; }
org . junit . Assert . assertNotNull ( lib ) 