METHOD_0 ( ) { for ( int size : new int [ ] { 10 , 50 , 100 } ) { org . IDENT_0 . core . IDENT_1 . impl . IDENT_2 IDENT_3 = new org . IDENT_0 . core . IDENT_1 . impl . METHOD_1 ( size , size ) ; org . IDENT_0 . core . IDENT_4 IDENT_5 = METHOD_2 ( ( ( STRING_0 + size ) + STRING_1 ) , IDENT_3 ) . getValue ( ) ; for ( com . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 IDENT_10 : new com . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 [ ] { com . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_11 , com . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_12 } ) { com . IDENT_6 . IDENT_7 . IDENT_13 . IDENT_14 . METHOD_3 ( new com . IDENT_6 . IDENT_7 . IDENT_13 . METHOD_4 ( com . IDENT_6 . IDENT_7 . IDENT_15 . METHOD_5 ( IDENT_10 ) . METHOD_6 ( ) ) ) ; com . IDENT_6 . IDENT_7 . IDENT_16 device = com . IDENT_6 . IDENT_7 . IDENT_13 . METHOD_4 . getInstance ( ) . METHOD_7 ( ) . METHOD_8 ( ) ; com . IDENT_6 . IDENT_7 . IDENT_13 . IDENT_0 . IDENT_17 IDENT_18 = new com . IDENT_6 . IDENT_7 . IDENT_13 . IDENT_0 . METHOD_9 ( size , size ) ; org . IDENT_0 . core . IDENT_4 IDENT_19 = METHOD_2 ( ( ( ( ( STRING_2 + size ) + STRING_3 ) + device ) + STRING_1 ) , IDENT_18 ) . getValue ( ) ; "<AssertPlaceHolder>" ; } } } METHOD_8 ( ) { return device ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_19 ) 