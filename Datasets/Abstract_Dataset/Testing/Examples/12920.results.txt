METHOD_0 ( ) { try { org . apache . flink . runtime . state . IDENT_0 IDENT_1 = METHOD_1 ( ) ; org . apache . flink . runtime . state . IDENT_2 IDENT_3 = new org . apache . flink . runtime . state . METHOD_2 ( ) ; org . apache . flink . runtime . state . IDENT_4 < java . lang . Integer > backend = METHOD_3 ( IDENT_5 . INSTANCE ) ; org . apache . flink . api . common . state . IDENT_6 < java . lang . String > IDENT_7 = new org . apache . flink . api . common . state . METHOD_4 ( STRING_0 , java . lang . String . class ) ; org . apache . flink . runtime . state . IDENT_8 IDENT_9 = METHOD_5 ( backend . METHOD_6 ( INT_0 , 1 , IDENT_1 , org . apache . flink . runtime . IDENT_10 . IDENT_11 . METHOD_7 ( ) ) , IDENT_3 ) ; "<AssertPlaceHolder>" ; backend . METHOD_8 ( ) ; backend = METHOD_9 ( IDENT_5 . INSTANCE , METHOD_6 ) ; backend . METHOD_8 ( ) ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( e . getMessage ( ) ) ; } } METHOD_7 ( ) { return org . apache . flink . runtime . IDENT_10 . IDENT_11 . IDENT_12 ; }
org . junit . Assert . assertNull ( METHOD_6 ) 