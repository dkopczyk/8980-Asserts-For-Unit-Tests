METHOD_0 ( ) { final int IDENT_0 = org . apache . commons . lang3 . IDENT_1 . METHOD_1 ( 1 , com . IDENT_2 . IDENT_3 . common . server . IDENT_4 . codec . IDENT_5 . header . IDENT_6 . IDENT_7 ) ; final int IDENT_8 = org . apache . commons . lang3 . IDENT_1 . METHOD_1 ( 1 , com . IDENT_2 . IDENT_3 . common . server . IDENT_4 . codec . IDENT_5 . header . IDENT_6 . IDENT_7 ) ; final int IDENT_9 = IDENT_0 + IDENT_8 ; java . util . List < java . lang . Integer > IDENT_10 = new java . util . ArrayList < java . lang . Integer > ( IDENT_9 ) ; for ( int i = 0 ; i < IDENT_0 ; i ++ ) { IDENT_10 . add ( 0 ) ; } for ( int i = 0 ; i < IDENT_8 ; i ++ ) { IDENT_10 . add ( com . IDENT_2 . IDENT_3 . common . server . IDENT_4 . codec . IDENT_5 . header . IDENT_6 . IDENT_11 . METHOD_1 ( 5 ) ) ; } com . IDENT_2 . IDENT_3 . common . server . IDENT_4 . codec . IDENT_5 . header . IDENT_12 IDENT_13 = new com . IDENT_2 . IDENT_3 . common . server . IDENT_4 . codec . IDENT_5 . header . METHOD_2 ( ) ; for ( int IDENT_14 : IDENT_10 ) { IDENT_13 . METHOD_3 ( IDENT_14 ) ; } final byte [ ] header = IDENT_13 . METHOD_4 ( ) ; com . IDENT_2 . IDENT_3 . common . server . IDENT_4 . codec . IDENT_5 . header . IDENT_15 IDENT_16 = new com . IDENT_2 . IDENT_3 . common . server . IDENT_4 . codec . IDENT_5 . header . METHOD_5 ( header ) ; java . util . List < java . lang . Integer > IDENT_17 = new java . util . ArrayList < java . lang . Integer > ( IDENT_9 ) ; for ( int i = 0 ; i < IDENT_9 ; i ++ ) { IDENT_17 . add ( IDENT_16 . getCode ( ) ) ; } "<AssertPlaceHolder>" ; } getCode ( ) { return code ; }
org . junit . Assert . assertEquals ( IDENT_10 , IDENT_17 ) 