METHOD_0 ( ) { org . bson . IDENT_0 c = new org . bson . METHOD_1 ( true ) ; org . bson . IDENT_1 document = new org . bson . METHOD_2 ( ) . append ( STRING_0 , new org . bson . METHOD_3 ( FLOAT_0 ) ) . append ( STRING_1 , new org . bson . METHOD_4 ( java . util . Arrays . asList ( c , c , c , c , c , c , c , c , c , c , c , c , c , c , c , c , c , c , c , c , c , c , c , c , c , c , c ) ) ) ; com . mongodb . IDENT_2 query = new com . mongodb . METHOD_5 ( ) ; query . put ( STRING_2 , document ) ; logger . debug ( STRING_3 , document ) ; com . IDENT_3 . IDENT_4 . plugin . IDENT_5 . IDENT_6 IDENT_7 = com . IDENT_3 . IDENT_4 . plugin . IDENT_5 . IDENT_8 . METHOD_6 ( new java . lang . Object [ ] { query } , true ) ; logger . debug ( STRING_4 , IDENT_7 ) ; java . util . List list = IDENT_9 . METHOD_7 ( ( ( STRING_5 + ( IDENT_7 . METHOD_8 ( ) ) ) + "]" ) , java . util . List . class ) ; "<AssertPlaceHolder>" ; java . util . Map < java . lang . String , ? > IDENT_10 = ( ( java . util . Map < java . lang . String , ? > ) ( list . get ( 0 ) ) ) ; METHOD_9 ( IDENT_10 ) ; } size ( ) { return this . queue . size ( ) ; }
org . junit . Assert . assertEquals ( list . size ( ) , 1 ) 