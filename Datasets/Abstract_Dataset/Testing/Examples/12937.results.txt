METHOD_0 ( ) { final org . apache . flink . runtime . IDENT_0 . IDENT_1 IDENT_2 = new org . apache . flink . runtime . IDENT_0 . METHOD_1 ( ) ; final org . apache . flink . runtime . io . network . IDENT_3 . IDENT_4 IDENT_5 = new org . apache . flink . runtime . io . network . IDENT_3 . METHOD_2 ( ) ; final org . apache . flink . runtime . io . network . IDENT_3 . consumer . IDENT_6 IDENT_7 = mock ( org . apache . flink . runtime . io . network . IDENT_3 . consumer . IDENT_6 . class ) ; when ( IDENT_7 . METHOD_3 ( ) ) . thenReturn ( IDENT_2 ) ; final org . apache . flink . runtime . IDENT_8 . IDENT_9 task = new org . apache . flink . runtime . IDENT_8 . IDENT_10 . METHOD_4 ( ) . METHOD_5 ( org . apache . flink . runtime . IDENT_8 . IDENT_10 . IDENT_11 . class ) . build ( ) ; METHOD_6 ( task , IDENT_7 ) ; final java . util . Map < org . apache . flink . runtime . IDENT_12 . IDENT_13 , org . apache . flink . runtime . IDENT_12 . IDENT_13 > expected = new java . util . HashMap ( org . apache . flink . runtime . IDENT_12 . IDENT_13 . values ( ) . length ) ; for ( org . apache . flink . runtime . IDENT_12 . IDENT_13 state : org . apache . flink . runtime . IDENT_12 . IDENT_13 . values ( ) ) { expected . put ( state , IDENT_13 . IDENT_14 ) ; } expected . put ( IDENT_13 . IDENT_15 , IDENT_13 . IDENT_15 ) ; expected . put ( IDENT_13 . IDENT_16 , IDENT_13 . IDENT_15 ) ; expected . put ( IDENT_13 . IDENT_17 , IDENT_13 . IDENT_15 ) ; expected . put ( IDENT_13 . IDENT_18 , IDENT_13 . IDENT_15 ) ; expected . put ( IDENT_13 . IDENT_19 , IDENT_13 . IDENT_20 ) ; expected . put ( IDENT_13 . IDENT_20 , IDENT_13 . IDENT_20 ) ; expected . put ( IDENT_13 . IDENT_14 , IDENT_13 . IDENT_20 ) ; for ( org . apache . flink . runtime . IDENT_12 . IDENT_13 state : org . apache . flink . runtime . IDENT_12 . IDENT_13 . values ( ) ) { METHOD_7 ( task , IDENT_13 . IDENT_15 ) ; task . METHOD_8 ( IDENT_2 , IDENT_5 , state ) ; org . apache . flink . runtime . IDENT_12 . IDENT_13 IDENT_21 = task . METHOD_9 ( ) ; "<AssertPlaceHolder>" ; } verify ( IDENT_7 , times ( 4 ) ) . METHOD_10 ( eq ( IDENT_5 . METHOD_11 ( ) ) ) ; } get ( org . apache . flink . api . common . IDENT_22 ) { return IDENT_23 . get ( IDENT_24 ) ; }
org . junit . Assert . assertEquals ( expected . get ( state ) , IDENT_21 ) 