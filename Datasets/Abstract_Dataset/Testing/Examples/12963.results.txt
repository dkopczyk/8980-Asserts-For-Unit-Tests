METHOD_0 ( ) { final long IDENT_0 = INT_0 ; final long IDENT_1 = 1L ; final java . lang . Exception IDENT_2 = new java . lang . Exception ( STRING_0 ) ; final org . apache . flink . core . fs . IDENT_3 IDENT_4 = new org . apache . flink . core . fs . METHOD_1 ( ) ; org . apache . flink . runtime . state . IDENT_5 context = mock ( org . apache . flink . runtime . state . IDENT_5 . class ) ; METHOD_2 ( org . apache . flink . runtime . state . IDENT_5 . class ) . METHOD_3 ( ) . thenReturn ( context ) ; org . apache . flink . streaming . runtime . IDENT_6 . IDENT_7 < java . lang . IDENT_8 , org . apache . flink . streaming . api . IDENT_9 . IDENT_10 < java . lang . IDENT_8 > > IDENT_11 = mock ( org . apache . flink . streaming . runtime . IDENT_6 . IDENT_7 . class ) ; when ( IDENT_11 . METHOD_4 ( ) ) . thenReturn ( IDENT_4 ) ; org . apache . flink . streaming . api . IDENT_9 . IDENT_10 < java . lang . IDENT_8 > IDENT_12 = mock ( org . apache . flink . streaming . api . IDENT_9 . IDENT_10 . class ) ; when ( IDENT_12 . METHOD_5 ( METHOD_6 ( ) , METHOD_6 ( ) , any ( org . apache . flink . runtime . IDENT_13 . IDENT_14 . class ) , any ( org . apache . flink . runtime . state . IDENT_15 . class ) ) ) . METHOD_7 ( ) ; doReturn ( IDENT_11 ) . when ( IDENT_12 ) . METHOD_8 ( ) ; METHOD_9 ( IDENT_2 ) . when ( IDENT_12 ) . METHOD_5 ( eq ( context ) ) ; try { IDENT_12 . METHOD_5 ( IDENT_0 , IDENT_1 , org . apache . flink . runtime . IDENT_13 . IDENT_14 . METHOD_10 ( ) , new org . apache . flink . runtime . state . IDENT_16 . METHOD_11 ( Integer . MAX_VALUE ) ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( java . lang . Exception e ) { "<AssertPlaceHolder>" ; } verify ( context ) . close ( ) ; } METHOD_12 ( ) { return IDENT_17 ; }
org . junit . Assert . assertEquals ( IDENT_2 , e . METHOD_12 ( ) ) 