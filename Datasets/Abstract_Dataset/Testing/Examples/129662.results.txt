METHOD_0 ( ) { int length = INT_0 ; java . lang . String str = com . IDENT_0 . IDENT_1 . IDENT_2 . util . StringUtils . METHOD_1 ( length ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( int ) { java . lang . String IDENT_3 = null ; if ( length < 0 ) { return IDENT_3 ; } if ( length == 0 ) { return "" ; } char [ ] IDENT_4 = new char [ length ] ; int IDENT_5 = com . IDENT_0 . IDENT_1 . IDENT_2 . util . StringUtils . IDENT_6 . length ; java . util . IDENT_7 random = new java . security . METHOD_2 ( ) ; for ( int i = 0 ; i < length ; ++ i ) { int index = random . METHOD_3 ( IDENT_5 ) ; IDENT_4 [ i ] = ( ( char ) ( com . IDENT_0 . IDENT_1 . IDENT_2 . util . StringUtils . IDENT_6 [ index ] ) ) ; } IDENT_3 = java . lang . String . valueOf ( IDENT_4 ) ; return IDENT_3 ; }
org . junit . Assert . assertNotNull ( str ) 