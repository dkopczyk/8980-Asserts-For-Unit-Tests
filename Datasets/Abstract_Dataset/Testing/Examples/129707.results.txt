METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . util . IDENT_2 buffer = METHOD_1 ( ) ; org . IDENT_0 . IDENT_1 . util . IDENT_2 IDENT_3 = new org . IDENT_0 . IDENT_1 . util . METHOD_2 ( ) ; byte [ ] IDENT_4 = new byte [ ] { INT_0 , INT_1 , INT_2 , INT_3 , INT_4 , INT_5 } ; byte [ ] IDENT_5 = new byte [ ] { INT_6 , INT_7 , INT_8 } ; byte [ ] IDENT_6 = new byte [ ] { INT_9 , INT_10 } ; byte [ ] IDENT_7 = new byte [ ] { INT_11 , INT_12 , INT_13 , INT_14 , INT_15 , INT_16 , INT_17 , INT_18 } ; IDENT_3 . METHOD_3 ( IDENT_4 ) ; IDENT_3 . METHOD_3 ( IDENT_5 ) ; IDENT_3 . METHOD_3 ( IDENT_6 ) ; IDENT_3 . METHOD_3 ( IDENT_7 ) ; byte [ ] IDENT_8 = new byte [ INT_19 ] ; buffer . METHOD_4 ( IDENT_8 ) ; byte [ ] IDENT_9 = new byte [ INT_20 ] ; IDENT_3 . METHOD_4 ( IDENT_9 ) ; buffer . METHOD_3 ( IDENT_3 , 3 ) ; int expected = INT_21 ; int i = 0 ; while ( i < 3 ) { "<AssertPlaceHolder>" ; expected ++ ; i ++ ; } } get ( ) { return value ; }
org . junit . Assert . assertEquals ( expected , buffer . get ( ) ) 