METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; org . neo4j . IDENT_1 . it . IDENT_2 . exec . IDENT_3 IDENT_4 = new org . neo4j . IDENT_1 . it . IDENT_2 . exec . METHOD_1 ( ) ; IDENT_4 . METHOD_2 ( IDENT_0 ) ; IDENT_4 . METHOD_3 ( STRING_1 , STRING_2 ) ; IDENT_4 . METHOD_4 ( ) ; java . io . File IDENT_5 = new java . io . File ( IDENT_0 ) ; java . lang . String [ ] IDENT_6 = IDENT_5 . list ( new java . io . METHOD_5 ( ) { public boolean accept ( java . io . File IDENT_7 , java . lang . String name ) { return name . METHOD_6 ( STRING_3 ) ; } } ) ; "<AssertPlaceHolder>" ; org . IDENT_8 . io . IDENT_9 . delete ( IDENT_5 ) ; } accept ( java . io . File , java . lang . String ) { return name . contains ( STRING_4 ) ; }
org . junit . Assert . assertThat ( IDENT_6 . length , org . hamcrest . core . Is . is ( org . hamcrest . CoreMatchers . equalTo ( 1 ) ) ) 