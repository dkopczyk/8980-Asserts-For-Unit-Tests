METHOD_0 ( ) { try { org . neo4j . kernel . impl . IDENT_0 . store . IDENT_1 . METHOD_1 ( METHOD_2 ( ) ) ; org . neo4j . kernel . impl . IDENT_0 . store . IDENT_2 IDENT_3 = new org . neo4j . kernel . impl . IDENT_0 . store . METHOD_3 ( METHOD_2 ( ) , 3 , 1000 ) ; try { new org . neo4j . kernel . impl . IDENT_0 . store . METHOD_3 ( METHOD_2 ( ) , 3 , 1000 ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( org . neo4j . kernel . impl . IDENT_0 . store . IDENT_4 e ) { } IDENT_3 . close ( ) ; } finally { java . io . File file = new java . io . File ( METHOD_2 ( ) ) ; if ( file . exists ( ) ) { "<AssertPlaceHolder>" ; } } } delete ( ) { IDENT_5 . METHOD_4 ( IDENT_6 ) . delete ( IDENT_5 ) ; }
org . junit . Assert . assertTrue ( file . delete ( ) ) 