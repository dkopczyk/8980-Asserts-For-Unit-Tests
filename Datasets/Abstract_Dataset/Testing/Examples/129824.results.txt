METHOD_0 ( ) { org . neo4j . IDENT_0 . IDENT_1 IDENT_0 = new org . neo4j . IDENT_0 . METHOD_1 ( STRING_0 ) ; java . util . Map < java . lang . String , org . neo4j . IDENT_0 . test . IDENT_2 > out = org . neo4j . IDENT_0 . IDENT_3 . METHOD_2 ( IDENT_0 , db , null ) ; org . neo4j . IDENT_0 . test . IDENT_4 tx = db . METHOD_3 ( ) ; try { "<AssertPlaceHolder>" ; tx . METHOD_4 ( ) ; } finally { tx . close ( ) ; } } METHOD_2 ( org . neo4j . IDENT_0 . METHOD_1 , org . neo4j . IDENT_5 . IDENT_6 , java . util . Map ) { org . neo4j . IDENT_0 . IDENT_7 graph = new org . neo4j . IDENT_0 . METHOD_5 ( IDENT_8 ) ; if ( params != null ) { graph . METHOD_6 ( new java . util . HashMap < java . lang . String , org . neo4j . IDENT_5 . IDENT_2 > ( params ) ) ; } graph . insert ( IDENT_9 ) ; return graph . METHOD_7 ( ) ; }
org . junit . Assert . assertNotNull ( out ) 