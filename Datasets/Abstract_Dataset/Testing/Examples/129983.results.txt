METHOD_0 ( ) { graph . METHOD_1 ( STRING_0 , STRING_1 , ( ( double ) ( 1 ) ) ) ; graph . METHOD_2 ( "a" , STRING_2 , STRING_1 , ( ( double ) ( 4 ) ) ) ; graph . METHOD_2 ( STRING_2 , STRING_3 , STRING_1 , ( - 2 ) ) ; org . neo4j . IDENT_0 . impl . IDENT_1 . IDENT_2 < java . lang . Double > IDENT_3 = new org . neo4j . IDENT_0 . impl . IDENT_1 . METHOD_3 ( 0.0 , graph . METHOD_4 ( "a" ) , graph . METHOD_4 ( STRING_4 ) , org . neo4j . IDENT_0 . IDENT_4 . METHOD_5 ( STRING_1 ) , new org . neo4j . IDENT_0 . impl . util . METHOD_6 ( ) , Double :: compareTo , org . neo4j . IDENT_5 . IDENT_6 . IDENT_7 , IDENT_8 . IDENT_9 ) ; java . util . List < java . util . List < org . neo4j . IDENT_5 . Node > > IDENT_10 = IDENT_3 . METHOD_7 ( ) ; "<AssertPlaceHolder>" ; } size ( ) { return map . size ( ) ; }
org . junit . Assert . assertEquals ( 2 , IDENT_10 . size ( ) ) 