METHOD_0 ( ) { long IDENT_0 = METHOD_1 ( ) ; org . neo4j . IDENT_1 . IDENT_2 IDENT_3 = org . neo4j . IDENT_1 . IDENT_2 . METHOD_2 ( STRING_0 ) ; java . lang . String IDENT_4 = STRING_1 ; try ( org . neo4j . IDENT_1 . IDENT_5 transaction = schema . IDENT_6 . database . METHOD_3 ( ) ) { schema . IDENT_6 . database . schema ( ) . METHOD_4 ( org . neo4j . IDENT_1 . IDENT_2 . METHOD_2 ( STRING_2 ) ) . METHOD_5 ( IDENT_4 ) . create ( ) ; java . util . concurrent . IDENT_7 < ? > IDENT_8 = schema . IDENT_6 . IDENT_9 . METHOD_6 ( METHOD_7 ( IDENT_3 , IDENT_4 ) ) ; IDENT_8 . get ( ) ; transaction . METHOD_8 ( ) ; } METHOD_9 ( ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( ) { try ( org . neo4j . IDENT_1 . IDENT_5 transaction = schema . IDENT_6 . database . METHOD_3 ( ) ) { return org . neo4j . helpers . collection . IDENT_10 . count ( schema . IDENT_6 . database . schema ( ) . METHOD_10 ( ) ) ; } }
org . junit . Assert . assertEquals ( ( IDENT_0 + 2 ) , METHOD_1 ( ) ) 