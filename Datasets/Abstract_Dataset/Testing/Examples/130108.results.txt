METHOD_0 ( ) { org . neo4j . io . fs . IDENT_0 IDENT_1 = fs . get ( ) ; IDENT_1 . METHOD_1 ( IDENT_2 . METHOD_2 ( ) ) ; org . neo4j . kernel . impl . store . id . IDENT_3 IDENT_4 = new org . neo4j . kernel . impl . store . id . METHOD_3 ( IDENT_1 ) ; org . neo4j . kernel . impl . store . IDENT_5 factory = new org . neo4j . kernel . impl . store . METHOD_4 ( IDENT_2 , org . neo4j . kernel . configuration . IDENT_6 . METHOD_5 ( ) , IDENT_4 , IDENT_7 , IDENT_1 , org . neo4j . kernel . impl . store . IDENT_8 . IDENT_9 , org . neo4j . io . IDENT_10 . IDENT_11 . IDENT_12 . context . IDENT_13 . IDENT_14 ) ; org . neo4j . kernel . impl . store . IDENT_15 [ ] IDENT_16 = org . neo4j . kernel . impl . store . IDENT_15 . values ( ) ; org . neo4j . kernel . impl . store . IDENT_15 [ ] IDENT_17 = java . util . Arrays . METHOD_6 ( IDENT_16 , ( ( IDENT_16 . length ) - 1 ) ) ; try ( org . neo4j . kernel . impl . store . IDENT_18 IDENT_19 = factory . METHOD_7 ( true , IDENT_17 ) ) { "<AssertPlaceHolder>" ; } } METHOD_8 ( org . neo4j . io . IDENT_10 . IDENT_20 , org . neo4j . io . layout . IDENT_21 ) { java . io . File IDENT_22 = IDENT_2 . METHOD_9 ( ) ; try ( org . neo4j . io . IDENT_10 . IDENT_23 IDENT_19 = IDENT_7 . map ( IDENT_22 , org . neo4j . kernel . impl . store . IDENT_24 . METHOD_10 ( IDENT_7 ) ) ) { return true ; } catch ( java . io . IOException e ) { return false ; } }
org . junit . Assert . assertFalse ( org . neo4j . kernel . impl . store . IDENT_18 . METHOD_8 ( IDENT_7 , IDENT_2 ) ) 