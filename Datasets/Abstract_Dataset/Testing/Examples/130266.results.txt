METHOD_0 ( ) { org . neo4j . kernel . impl . transaction . command . IDENT_0 . IDENT_1 IDENT_2 = mock ( IDENT_0 . IDENT_1 . class ) ; when ( IDENT_2 . METHOD_1 ( any ( org . neo4j . kernel . impl . api . IDENT_3 . class ) ) ) . METHOD_2 ( ) ; boolean result = IDENT_4 . METHOD_3 ( IDENT_2 ) ; org . mockito . IDENT_5 IDENT_6 = METHOD_4 ( IDENT_7 , IDENT_8 , IDENT_9 ) ; METHOD_4 . verify ( IDENT_7 ) . METHOD_3 ( IDENT_2 ) ; METHOD_4 . verify ( IDENT_8 ) . METHOD_3 ( IDENT_2 ) ; METHOD_4 . verify ( IDENT_9 ) . METHOD_3 ( IDENT_2 ) ; METHOD_4 . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . neo4j . IDENT_10 . api . IDENT_11 ) { int id = channel . METHOD_6 ( ) ; byte IDENT_12 = channel . get ( ) ; boolean IDENT_13 = false ; if ( ( IDENT_12 & ( IDENT_14 . IDENT_15 . METHOD_7 ( ) ) ) == ( IDENT_14 . IDENT_15 . METHOD_7 ( ) ) ) { IDENT_13 = true ; } else if ( IDENT_12 != ( IDENT_14 . IDENT_16 . METHOD_7 ( ) ) ) { throw new java . io . IOException ( ( STRING_0 + IDENT_12 ) ) ; } org . neo4j . kernel . impl . store . record . IDENT_17 record = new org . neo4j . kernel . impl . store . record . METHOD_8 ( id ) ; record . METHOD_9 ( IDENT_13 ) ; record . METHOD_10 ( channel . METHOD_6 ( ) ) ; record . METHOD_11 ( channel . METHOD_6 ( ) ) ; if ( ( METHOD_12 ( channel , record , org . neo4j . kernel . impl . transaction . command . IDENT_18 . IDENT_19 ) ) == ( - 1 ) ) { return null ; } return new org . neo4j . kernel . impl . transaction . command . IDENT_0 . METHOD_13 ( null , record ) ; }
org . junit . Assert . assertFalse ( result ) 