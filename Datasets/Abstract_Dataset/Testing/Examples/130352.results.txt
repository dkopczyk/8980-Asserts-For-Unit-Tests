METHOD_0 ( ) { long IDENT_0 = 0 ; for ( org . neo4j . kernel . api . index . IDENT_1 IDENT_2 : IDENT_3 ) { org . neo4j . kernel . impl . index . schema . IDENT_4 . IDENT_5 . METHOD_1 ( IDENT_2 , java . util . Arrays . asList ( ( IDENT_0 ++ ) , ( IDENT_0 ++ ) ) ) ; } org . neo4j . helpers . collection . IDENT_6 < java . lang . Long > IDENT_7 = IDENT_8 . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { try ( org . neo4j . helpers . collection . IDENT_6 < java . lang . Long > reader = IDENT_9 . METHOD_2 ( ) ) { return reader . METHOD_3 ( ) ; } catch ( java . lang . Exception e ) { throw new java . lang . RuntimeException ( e ) ; } }
org . junit . Assert . assertThat ( IDENT_7 . METHOD_3 ( ) , org . hamcrest . CoreMatchers . is ( IDENT_0 ) ) 