METHOD_0 ( ) { final org . apache . flink . runtime . io . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new org . apache . flink . runtime . io . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; try { final org . apache . flink . api . common . IDENT_4 . IDENT_5 < byte [ ] > serializer = org . apache . flink . api . common . IDENT_4 . base . array . IDENT_6 . INSTANCE ; final org . apache . flink . api . common . IDENT_4 . IDENT_7 < byte [ ] > IDENT_8 = new org . apache . flink . api . common . IDENT_4 . base . array . METHOD_2 ( true ) ; final org . apache . flink . api . common . IDENT_4 . IDENT_7 < byte [ ] > IDENT_9 = new org . apache . flink . api . common . IDENT_4 . base . array . METHOD_2 ( true ) ; @ org . apache . flink . runtime . IDENT_10 . hash . METHOD_3 ( STRING_0 ) final org . apache . flink . api . common . IDENT_4 . IDENT_11 < byte [ ] , byte [ ] > IDENT_12 = new org . apache . flink . api . common . IDENT_4 . METHOD_4 ( new org . apache . flink . api . common . IDENT_4 . base . array . METHOD_2 ( true ) , new org . apache . flink . api . common . IDENT_4 . base . array . METHOD_2 ( true ) ) ; final int IDENT_13 = INT_0 ; final int IDENT_14 = INT_1 ; java . util . List < org . apache . flink . core . IDENT_15 . IDENT_16 > IDENT_15 = org . apache . flink . runtime . IDENT_10 . hash . IDENT_17 . METHOD_5 ( IDENT_14 , IDENT_13 ) ; org . apache . flink . runtime . IDENT_10 . hash . IDENT_18 < byte [ ] , byte [ ] > table = new org . apache . flink . runtime . IDENT_10 . hash . IDENT_18 < byte [ ] , byte [ ] > ( serializer , serializer , IDENT_8 , IDENT_9 , IDENT_12 , IDENT_15 , IDENT_3 , 1 , false ) ; int IDENT_19 = 9 ; table . METHOD_6 ( new org . apache . flink . runtime . IDENT_10 . hash . IDENT_17 . IDENT_20 < byte [ ] > ( new org . apache . flink . runtime . IDENT_10 . hash . IDENT_17 . METHOD_7 ( IDENT_19 , INT_0 , ( ( byte ) ( 0 ) ) ) , new org . apache . flink . runtime . IDENT_10 . hash . IDENT_17 . METHOD_7 ( IDENT_19 , INT_0 , ( ( byte ) ( 1 ) ) ) ) , new org . apache . flink . runtime . IDENT_10 . hash . IDENT_17 . IDENT_20 < byte [ ] > ( new org . apache . flink . runtime . IDENT_10 . hash . IDENT_17 . METHOD_7 ( 1 , INT_0 , ( ( byte ) ( 0 ) ) ) , new org . apache . flink . runtime . IDENT_10 . hash . IDENT_17 . METHOD_7 ( 1 , INT_0 , ( ( byte ) ( 1 ) ) ) ) ) ; while ( table . METHOD_8 ( ) ) { org . apache . flink . util . IDENT_21 < byte [ ] > iterator = table . METHOD_9 ( ) ; int IDENT_22 = 0 ; while ( ( iterator . next ( ) ) != null ) { IDENT_22 ++ ; } "<AssertPlaceHolder>" ; } table . close ( ) ; } finally { IDENT_3 . METHOD_10 ( ) ; } } next ( ) { if ( ! ( hasNext ( ) ) ) { throw new java . util . METHOD_11 ( ( ( STRING_1 + ( state ) ) + "]" ) ) ; } IDENT_23 IDENT_24 = IDENT_25 ; IDENT_25 = null ; return IDENT_24 ; }
org . junit . Assert . assertEquals ( IDENT_19 , IDENT_22 ) 