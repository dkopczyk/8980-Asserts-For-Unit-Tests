METHOD_0 ( ) { try ( org . neo4j . io . IDENT_0 . IDENT_1 IDENT_2 = new org . neo4j . io . IDENT_0 . METHOD_1 ( 1 , ( ( IDENT_3 ) * 10 ) ) ) { int offset = 10 ; IDENT_2 . next ( ) ; org . neo4j . kernel . impl . store . record . IDENT_4 group = new org . neo4j . kernel . impl . store . record . METHOD_2 ( 2 ) . METHOD_3 ( true , ( ( IDENT_5 . MAX_VALUE ) + offset ) , 1 , 2 , 3 , 4 , 5 ) ; IDENT_2 . METHOD_4 ( offset ) ; format . write ( group , IDENT_2 , IDENT_3 ) ; org . neo4j . kernel . impl . store . record . METHOD_2 read = new org . neo4j . kernel . impl . store . record . METHOD_2 ( group . getId ( ) ) ; IDENT_2 . METHOD_4 ( offset ) ; format . read ( read , IDENT_2 , org . neo4j . kernel . impl . store . format . IDENT_6 . IDENT_7 , IDENT_3 ) ; "<AssertPlaceHolder>" ; } } read ( IDENT_8 extends org . neo4j . kernel . impl . store . record . IDENT_9 , org . neo4j . io . IDENT_0 . IDENT_1 , org . neo4j . kernel . impl . store . record . IDENT_10 , int ) { actual . read ( record , IDENT_2 , IDENT_11 , IDENT_3 ) ; }
org . junit . Assert . assertEquals ( group , read ) 