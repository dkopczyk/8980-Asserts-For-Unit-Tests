METHOD_0 ( ) { final int IDENT_0 = 2 ; final org . neo4j . kernel . impl . transaction . log . IDENT_1 . IDENT_2 IDENT_3 = new org . neo4j . kernel . impl . transaction . log . IDENT_1 . METHOD_1 ( IDENT_0 ) ; IDENT_3 . init ( ) ; IDENT_3 . METHOD_2 ( file , version , source ) ; final boolean result = IDENT_3 . METHOD_2 ( file , version , source ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . io . File , long , org . neo4j . kernel . impl . transaction . log . IDENT_4 ) { try { long IDENT_5 = source . METHOD_3 ( ( version + 1 ) ) ; if ( IDENT_5 == ( - 1 ) ) { throw new java . lang . IllegalStateException ( ( STRING_0 + STRING_1 ) ) ; } long IDENT_6 = source . METHOD_4 ( ) ; return ( IDENT_6 - IDENT_5 ) >= ( IDENT_7 ) ; } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( e ) ; } }
org . junit . Assert . assertTrue ( result ) 