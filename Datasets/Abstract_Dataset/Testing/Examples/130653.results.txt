METHOD_0 ( ) { long n = org . neo4j . server . plugins . IDENT_0 . IDENT_1 . METHOD_1 ( ) . METHOD_2 ( ) ; java . util . Map < java . lang . String , java . lang . Object > map = org . neo4j . server . plugins . IDENT_2 . METHOD_3 ( org . neo4j . server . plugins . IDENT_0 . IDENT_1 . METHOD_4 ( n ) ) ; map = ( ( java . util . Map < java . lang . String , java . lang . Object > ) ( map . get ( STRING_0 ) ) ) ; map = ( ( java . util . Map < java . lang . String , java . lang . Object > ) ( map . get ( org . neo4j . server . plugins . IDENT_3 . class . METHOD_5 ( ) ) ) ) ; java . util . List < java . lang . String > nodes = java . util . Arrays . asList ( org . neo4j . server . plugins . IDENT_0 . IDENT_1 . METHOD_4 ( org . neo4j . server . plugins . IDENT_0 . IDENT_1 . METHOD_1 ( ) . METHOD_2 ( ) ) , org . neo4j . server . plugins . IDENT_0 . IDENT_1 . METHOD_4 ( org . neo4j . server . plugins . IDENT_0 . IDENT_1 . METHOD_1 ( ) . METHOD_2 ( ) ) , org . neo4j . server . plugins . IDENT_0 . IDENT_1 . METHOD_4 ( org . neo4j . server . plugins . IDENT_0 . IDENT_1 . METHOD_1 ( ) . METHOD_2 ( ) ) ) ; java . lang . String uri = ( ( java . lang . String ) ( map . get ( STRING_1 ) ) ) ; java . util . List < java . util . Map < java . lang . String , java . lang . Object > > response = org . neo4j . server . plugins . IDENT_2 . METHOD_6 ( uri , org . neo4j . helpers . collection . IDENT_4 . map ( STRING_2 , STRING_3 , STRING_4 , nodes ) ) ; "<AssertPlaceHolder>" ; METHOD_7 ( response ) ; } size ( ) { return map . size ( ) ; }
org . junit . Assert . assertEquals ( nodes . size ( ) , response . size ( ) ) 