METHOD_0 ( ) { org . neo4j . IDENT_0 . Node node = org . neo4j . server . rest . domain . IDENT_1 . db . METHOD_1 ( ) ; org . neo4j . server . rest . domain . IDENT_1 . IDENT_2 . setProperty ( node , "name" , STRING_0 ) ; "<AssertPlaceHolder>" ; } getProperty ( java . lang . String ) { if ( null == key ) { throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } org . neo4j . kernel . api . IDENT_3 transaction = spi . METHOD_2 ( ) ; int IDENT_4 = transaction . METHOD_3 ( ) . METHOD_4 ( key ) ; if ( METHOD_4 == ( org . neo4j . internal . kernel . api . IDENT_5 . IDENT_6 ) ) { throw new org . neo4j . IDENT_0 . METHOD_5 ( java . lang . String . format ( STRING_2 , key ) ) ; } org . neo4j . internal . kernel . api . IDENT_7 IDENT_8 = transaction . METHOD_6 ( ) ; org . neo4j . internal . kernel . api . IDENT_9 properties = transaction . METHOD_7 ( ) ; METHOD_8 ( transaction , IDENT_8 ) ; IDENT_8 . properties ( properties ) ; while ( properties . next ( ) ) { if ( METHOD_4 == ( properties . METHOD_4 ( ) ) ) { org . neo4j . values . IDENT_10 . IDENT_11 value = properties . METHOD_9 ( ) ; if ( value == ( org . neo4j . values . IDENT_10 . IDENT_12 . IDENT_13 ) ) { throw new org . neo4j . IDENT_0 . METHOD_5 ( java . lang . String . format ( STRING_2 , key ) ) ; } return value . METHOD_10 ( ) ; } } throw new org . neo4j . IDENT_0 . METHOD_5 ( java . lang . String . format ( STRING_2 , key ) ) ; }
org . junit . Assert . assertThat ( node . getProperty ( "name" ) , org . hamcrest . Matchers . is ( STRING_0 ) ) 