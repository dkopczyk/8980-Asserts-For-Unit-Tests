METHOD_0 ( ) { final javax . ws . rs . core . Response . IDENT_0 IDENT_1 = mock ( Response . IDENT_0 . class ) ; when ( IDENT_1 . entity ( any ( byte [ ] . class ) ) ) . thenReturn ( IDENT_1 ) ; org . mockito . Mockito . verify ( IDENT_1 , METHOD_1 ( ) ) . entity ( METHOD_2 ( javax . ws . rs . core . IDENT_2 . class ) ) ; when ( IDENT_1 . type ( org . mockito . IDENT_3 . < javax . ws . rs . core . IDENT_4 > any ( ) ) ) . thenReturn ( IDENT_1 ) ; when ( IDENT_1 . build ( ) ) . thenReturn ( null ) ; org . neo4j . server . rest . IDENT_5 . IDENT_6 format = repository . METHOD_3 ( asList ( IDENT_4 . IDENT_7 ) , new java . net . URI ( STRING_0 ) , METHOD_4 ( ) ) ; "<AssertPlaceHolder>" ; format . response ( IDENT_1 , new org . neo4j . server . rest . IDENT_5 . METHOD_5 ( new java . lang . RuntimeException ( ) ) ) ; } METHOD_4 ( ) { javax . ws . rs . core . IDENT_8 < java . lang . String , java . lang . String > headers = mock ( javax . ws . rs . core . IDENT_8 . class ) ; when ( headers . METHOD_6 ( IDENT_9 . IDENT_10 ) ) . thenReturn ( STRING_1 ) ; return headers ; }
org . junit . Assert . assertNotNull ( format ) 