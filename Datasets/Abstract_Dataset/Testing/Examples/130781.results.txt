METHOD_0 ( ) { System . out . println ( STRING_0 ) ; IDENT_0 . backend . IDENT_1 . IDENT_2 instance = new IDENT_0 . backend . IDENT_1 . METHOD_1 ( ) ; int IDENT_3 = 0 ; int IDENT_4 = 0 ; int IDENT_5 = 1 ; int IDENT_6 = 1 ; try { instance . METHOD_2 ( IDENT_3 , IDENT_4 , IDENT_5 , IDENT_6 ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . Exception ex ) { } try { java . lang . Object object = new java . lang . Object ( ) ; instance . insert ( object , IDENT_3 , IDENT_4 ) ; instance . METHOD_2 ( IDENT_3 , IDENT_4 , IDENT_5 , IDENT_6 ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception ex ) { org . junit . Assert . fail ( ) ; } try { IDENT_3 = - 1 ; IDENT_4 = - 5 ; java . lang . Object object = new java . lang . Object ( ) ; instance . insert ( object , IDENT_3 , IDENT_4 ) ; instance . METHOD_2 ( IDENT_3 , IDENT_4 , IDENT_5 , IDENT_6 ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . Exception ex ) { } } get ( int , int ) { IDENT_0 . backend . IDENT_7 IDENT_8 = elements . get ( x , y ) ; if ( ( IDENT_8 != null ) && ( IDENT_8 instanceof IDENT_0 . backend . IDENT_9 ) ) { return ( ( IDENT_0 . backend . IDENT_9 ) ( IDENT_8 ) ) ; } return null ; }
org . junit . Assert . assertEquals ( object , instance . get ( IDENT_5 , IDENT_6 ) ) 