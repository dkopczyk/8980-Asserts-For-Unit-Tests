METHOD_0 ( ) { byte [ ] expected = new byte [ ] { ( ( byte ) ( 255 ) ) , ( ( byte ) ( 0 ) ) , ( ( byte ) ( 0 ) ) , ( ( byte ) ( 0 ) ) , ( ( byte ) ( 0 ) ) , ( ( byte ) ( 0 ) ) , ( ( byte ) ( 0 ) ) , ( ( byte ) ( 0 ) ) } ; "<AssertPlaceHolder>" ; } METHOD_1 ( int , long ) { byte [ ] packet = new byte [ size ] ; if ( size == 8 ) { packet [ 0 ] = ( ( byte ) ( ( value > > 0 ) & 255 ) ) ; packet [ 1 ] = ( ( byte ) ( ( value > > 8 ) & 255 ) ) ; packet [ 2 ] = ( ( byte ) ( ( value > > 16 ) & 255 ) ) ; packet [ 3 ] = ( ( byte ) ( ( value > > INT_0 ) & 255 ) ) ; packet [ 4 ] = ( ( byte ) ( ( value > > INT_1 ) & 255 ) ) ; packet [ 5 ] = ( ( byte ) ( ( value > > INT_2 ) & 255 ) ) ; packet [ 6 ] = ( ( byte ) ( ( value > > INT_3 ) & 255 ) ) ; packet [ 7 ] = ( ( byte ) ( ( value > > INT_4 ) & 255 ) ) ; } else if ( size == 6 ) { packet [ 0 ] = ( ( byte ) ( ( value > > 0 ) & 255 ) ) ; packet [ 1 ] = ( ( byte ) ( ( value > > 8 ) & 255 ) ) ; packet [ 2 ] = ( ( byte ) ( ( value > > 16 ) & 255 ) ) ; packet [ 3 ] = ( ( byte ) ( ( value > > INT_0 ) & 255 ) ) ; packet [ 4 ] = ( ( byte ) ( ( value > > INT_1 ) & 255 ) ) ; packet [ 5 ] = ( ( byte ) ( ( value > > INT_2 ) & 255 ) ) ; } else if ( size == 4 ) { packet [ 0 ] = ( ( byte ) ( ( value > > 0 ) & 255 ) ) ; packet [ 1 ] = ( ( byte ) ( ( value > > 8 ) & 255 ) ) ; packet [ 2 ] = ( ( byte ) ( ( value > > 16 ) & 255 ) ) ; packet [ 3 ] = ( ( byte ) ( ( value > > INT_0 ) & 255 ) ) ; } else if ( size == 3 ) { packet [ 0 ] = ( ( byte ) ( ( value > > 0 ) & 255 ) ) ; packet [ 1 ] = ( ( byte ) ( ( value > > 8 ) & 255 ) ) ; packet [ 2 ] = ( ( byte ) ( ( value > > 16 ) & 255 ) ) ; } else if ( size == 2 ) { packet [ 0 ] = ( ( byte ) ( ( value > > 0 ) & 255 ) ) ; packet [ 1 ] = ( ( byte ) ( ( value > > 8 ) & 255 ) ) ; } else if ( size == 1 ) { packet [ 0 ] = ( ( byte ) ( ( value > > 0 ) & 255 ) ) ; } else { com . IDENT_0 . server . IDENT_1 . IDENT_2 . IDENT_3 . logger . error ( ( ( ( ( STRING_0 + size ) + STRING_1 ) + value ) + STRING_2 ) ) ; return null ; } return packet ; }
org . junit . Assert . assertArrayEquals ( expected , com . IDENT_0 . server . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( 8 , 255 ) ) 