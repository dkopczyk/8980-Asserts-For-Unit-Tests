METHOD_0 ( ) { METHOD_1 ( com . google . common . collect . Lists . newArrayList ( com . github . IDENT_0 . model . g . IDENT_1 . class . METHOD_2 ( ) . getName ( ) ) , METHOD_3 ( ) ) ; java . lang . String json = parser . parse ( ) ; java . lang . String expected = ( ( ( ( ( ( ( ( STRING_0 + ( com . github . IDENT_0 . IDENT_2 . IDENT_3 ) ) + STRING_1 ) + ( com . github . IDENT_0 . model . g . IDENT_1 . class . METHOD_4 ( ) ) ) + STRING_2 ) + ( com . github . IDENT_0 . IDENT_2 . IDENT_3 ) ) + STRING_3 ) + ( com . github . IDENT_0 . IDENT_2 . IDENT_3 ) ) + STRING_4 ) + ( com . github . IDENT_0 . IDENT_2 . IDENT_3 ) ; "<AssertPlaceHolder>" ; } parse ( ) { java . util . Map < java . lang . String , com . github . IDENT_0 . IDENT_4 > IDENT_5 = new java . util . HashMap ( ) ; for ( java . lang . Class clazz : IDENT_6 . METHOD_5 ( ) ) { if ( clazz != null ) { com . github . IDENT_0 . IDENT_4 IDENT_7 = new com . github . IDENT_0 . METHOD_6 ( clazz , options . METHOD_7 ( ) , IDENT_8 ) . METHOD_8 ( ) ; if ( ( IDENT_7 . size ( ) ) > 0 ) { java . lang . String name = ( options . METHOD_9 ( ) ) ? clazz . getName ( ) : clazz . METHOD_4 ( ) ; IDENT_5 . put ( name , IDENT_7 ) ; } } } return METHOD_10 ( IDENT_5 ) ; }
org . junit . Assert . assertThat ( json , org . hamcrest . Matchers . startsWith ( expected ) ) 