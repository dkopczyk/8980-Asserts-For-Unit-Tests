METHOD_0 ( ) { org . apache . IDENT_0 . impl . IDENT_1 . schema . Schema IDENT_2 = METHOD_1 ( ) ; org . apache . IDENT_0 . data . IDENT_3 IDENT_4 = IDENT_5 . METHOD_2 ( ) ; org . apache . IDENT_0 . data . IDENT_3 expected = IDENT_5 . METHOD_2 ( ) ; { IDENT_4 = this . METHOD_3 ( "1" , "1" , "1" , STRING_0 , STRING_1 , STRING_2 2 , STRING_3 , STRING_4 , STRING_2 1 , STRING_5 ) ; expected = this . METHOD_4 ( "1" , "1" , "1" , STRING_0 , STRING_1 , STRING_2 2 , STRING_3 , STRING_4 , STRING_2 1 , STRING_5 , FLOAT_0 ) ; } org . IDENT_6 . IDENT_0 . IDENT_7 IDENT_8 = new org . IDENT_6 . IDENT_0 . METHOD_5 ( this . IDENT_9 ) ; org . apache . IDENT_0 . impl . IDENT_1 . schema . Schema IDENT_10 = IDENT_8 . METHOD_6 ( IDENT_2 ) ; org . apache . IDENT_0 . data . IDENT_3 IDENT_11 = IDENT_8 . exec ( IDENT_4 ) ; if ( expected . equals ( IDENT_11 ) ) { System . out . println ( STRING_2 0 ) ; } else { System . out . println ( STRING_2 ) ; System . out . println ( ( STRING_6 + ( expected . toString ( ) ) ) ) ; System . out . println ( ( STRING_7 + ( IDENT_11 . toString ( ) ) ) ) ; System . out . println ( STRING_8 ) ; } "<AssertPlaceHolder>" ; } exec ( org . apache . IDENT_0 . data . IDENT_3 ) { if ( ( this . IDENT_12 ) == null ) { this . IDENT_12 = METHOD_7 ( ) . METHOD_8 ( 0 ) . schema . METHOD_8 ( 0 ) . schema ; } if ( ! ( ( ( ( ( this . IDENT_12 . METHOD_8 ( this . IDENT_13 ) . type ) == ( org . apache . IDENT_0 . data . IDENT_14 . IDENT_15 ) ) || ( ( this . IDENT_12 . METHOD_8 ( this . IDENT_13 ) . type ) == ( org . apache . IDENT_0 . data . IDENT_14 . IDENT_16 ) ) ) || ( ( this . IDENT_12 . METHOD_8 ( this . IDENT_13 ) . type ) == ( org . apache . IDENT_0 . data . IDENT_14 . IDENT_17 ) ) ) || ( ( this . IDENT_12 . METHOD_8 ( this . IDENT_13 ) . type ) == ( org . apache . IDENT_0 . data . IDENT_14 . IDENT_18 ) ) ) ) { throw new java . lang . RuntimeException ( java . lang . String . format ( STRING_9 , this . IDENT_13 , org . apache . IDENT_0 . data . IDENT_14 . METHOD_9 ( this . IDENT_12 . METHOD_8 ( this . IDENT_13 ) . type ) ) ) ; } org . apache . IDENT_0 . data . IDENT_19 IDENT_20 = ( ( org . apache . IDENT_0 . data . IDENT_19 ) ( input . get ( 0 ) ) ) ; org . apache . IDENT_0 . data . IDENT_21 IDENT_22 = org . apache . IDENT_0 . data . IDENT_21 . getInstance ( ) ; org . apache . IDENT_0 . data . IDENT_23 IDENT_24 = org . apache . IDENT_0 . data . IDENT_23 . getInstance ( ) ; java . util . List < org . apache . IDENT_0 . data . IDENT_3 > IDENT_25 = new java . util . ArrayList < org . apache . IDENT_0 . data . IDENT_3 > ( ) ; java . util . Iterator < org . apache . IDENT_0 . data . IDENT_3 > IDENT_26 = IDENT_20 . iterator ( ) ; while ( IDENT_26 . hasNext ( ) ) { org . apache . IDENT_0 . data . IDENT_3 tuple = IDENT_26 . next ( ) ; IDENT_25 . add ( tuple ) ; } if ( ( IDENT_25 . size ( ) ) != ( ( this . IDENT_27 ) * ( this . IDENT_28 ) ) ) { throw new java . lang . RuntimeException ( STRING_10 ) ; } double [ ] IDENT_29 = new double [ ( this . IDENT_27 ) * ( this . IDENT_28 ) ] ; java . lang . Integer IDENT_30 = 0 ; for ( int n = 0 ; n < ( IDENT_29 . length ) ; n ++ ) { if ( ( this . IDENT_12 . METHOD_8 ( this . IDENT_13 ) . type ) == ( org . apache . IDENT_0 . data . IDENT_14 . IDENT_17 ) ) { IDENT_29 [ n ] = ( ( java . lang . Double ) ( IDENT_25 . get ( n ) . get ( this . IDENT_12 . METHOD_10 ( this . IDENT_13 ) ) ) ) ; } else if ( ( this . IDENT_12 . METHOD_8 ( this . IDENT_13 ) . type ) == ( org . apache . IDENT_0 . data . IDENT_14 . IDENT_18 ) ) { IDENT_29 [ n ] = ( ( java . lang . IDENT_31 ) ( IDENT_25 . get ( n ) . get ( this . IDENT_12 . METHOD_10 ( this . IDENT_13 ) ) ) ) ; } else if ( ( this . IDENT_12 . METHOD_8 ( this . IDENT_13 ) . type ) == ( org . apache . IDENT_0 . data . IDENT_14 . IDENT_15 ) ) { IDENT_29 [ n ] = ( ( java . lang . Long ) ( IDENT_25 . get ( n ) . get ( this . IDENT_12 . METHOD_10 ( this . IDENT_13 ) ) ) ) ; } else if ( ( this . IDENT_12 . METHOD_8 ( this . IDENT_13 ) . type ) == ( org . apache . IDENT_0 . data . IDENT_14 . IDENT_16 ) ) { IDENT_29 [ n ] = ( ( java . lang . Integer ) ( IDENT_25 . get ( n ) . get ( this . IDENT_12 . METHOD_10 ( this . IDENT_13 ) ) ) ) ; } else { throw new java . lang . RuntimeException ( java . lang . String . format ( STRING_9 , this . IDENT_13 , org . apache . IDENT_0 . data . IDENT_14 . METHOD_9 ( this . IDENT_12 . METHOD_8 ( this . IDENT_13 ) . type ) ) ) ; } if ( ( java . lang . Math . METHOD_11 ( IDENT_29 [ n ] ) ) > ( IDENT_32 ) ) IDENT_30 ++ ; } if ( IDENT_30 >= ( this . IDENT_33 ) ) { org . IDENT_6 . math . IDENT_34 IDENT_35 = new org . IDENT_6 . math . METHOD_12 ( IDENT_29 ) ; double [ ] IDENT_36 = IDENT_29 ; if ( ( ( this . IDENT_37 ) == null ) && ( IDENT_35 . METHOD_13 ( ) ) ) { IDENT_36 = IDENT_35 . METHOD_14 ( ) ; } else if ( this . IDENT_37 ) { IDENT_36 = IDENT_35 . METHOD_14 ( ) ; } if ( ( this . IDENT_38 ) == null ) { this . IDENT_39 = this . IDENT_40 ; this . IDENT_38 = ( this . IDENT_41 ) / ( java . lang . Math . METHOD_15 ( java . lang . Math . max ( this . IDENT_28 , this . IDENT_27 ) ) ) ; } double IDENT_42 = 0 ; for ( int n = 0 ; n < ( IDENT_36 . length ) ; n ++ ) { IDENT_42 += IDENT_36 [ n ] ; } IDENT_42 OP_0 IDENT_36 . length ; double IDENT_43 = 0 ; for ( int n = 0 ; n < ( IDENT_36 . length ) ; n ++ ) { IDENT_43 += java . lang . Math . METHOD_16 ( ( ( IDENT_36 [ n ] ) - IDENT_42 ) , 2 ) ; } IDENT_43 = java . lang . Math . METHOD_15 ( ( IDENT_43 / ( ( IDENT_36 . length ) - 1 ) ) ) ; for ( int n = 0 ; n < ( IDENT_36 . length ) ; n ++ ) { IDENT_36 [ n ] = ( ( IDENT_36 [ n ] ) - IDENT_42 ) / IDENT_43 ; } double [ ] [ ] IDENT_44 = new double [ this . IDENT_27 ] [ this . IDENT_28 ] ; IDENT_44 = METHOD_17 ( IDENT_36 , this . IDENT_27 , this . IDENT_28 ) ; org . IDENT_6 . math . IDENT_45 IDENT_46 = new org . IDENT_6 . math . METHOD_18 ( IDENT_44 , this . IDENT_39 , this . IDENT_38 ) ; double [ ] [ ] IDENT_47 = IDENT_46 . METHOD_19 ( ) . METHOD_20 ( ) ; double [ ] [ ] IDENT_48 = IDENT_46 . METHOD_21 ( ) . METHOD_20 ( ) ; double [ ] [ ] IDENT_49 = IDENT_46 . METHOD_22 ( ) . METHOD_20 ( ) ; org . apache . IDENT_0 . data . IDENT_19 IDENT_50 = IDENT_24 . METHOD_23 ( ) ; for ( int n = 0 ; n < ( IDENT_29 . length ) ; n ++ ) { int i = n OP_1 ( this . IDENT_27 ) ; int j = ( ( int ) ( java . lang . Math . METHOD_24 ( ( n / ( this . IDENT_27 ) ) ) ) ) ; org . apache . IDENT_0 . data . IDENT_3 IDENT_51 = IDENT_25 . get ( n ) ; org . apache . IDENT_0 . data . IDENT_3 METHOD_2 = IDENT_22 . METHOD_2 ( ( ( IDENT_51 . size ( ) ) + 4 ) ) ; int IDENT_52 = 0 ; for ( int k = 0 ; k < ( IDENT_51 . size ( ) ) ; k ++ ) { METHOD_2 . set ( ( IDENT_52 ++ ) , IDENT_51 . get ( k ) ) ; } METHOD_2 . set ( ( IDENT_52 ++ ) , IDENT_36 [ n ] ) ; METHOD_2 . set ( ( IDENT_52 ++ ) , ( ( ( IDENT_49 [ i ] [ j ] ) * IDENT_43 ) + IDENT_42 ) ) ; METHOD_2 . set ( ( IDENT_52 ++ ) , ( ( IDENT_48 [ i ] [ j ] ) * IDENT_43 ) ) ; METHOD_2 . set ( ( IDENT_52 ++ ) , ( ( IDENT_47 [ i ] [ j ] ) * IDENT_43 ) ) ; IDENT_50 . add ( METHOD_2 ) ; } return IDENT_50 ; } else { org . apache . IDENT_0 . data . IDENT_19 IDENT_50 = IDENT_24 . METHOD_23 ( ) ; for ( int n = 0 ; n < ( IDENT_29 . length ) ; n ++ ) { int i = n OP_1 ( this . IDENT_27 ) ; int j = ( ( int ) ( java . lang . Math . METHOD_24 ( ( n / ( this . IDENT_27 ) ) ) ) ) ; org . apache . IDENT_0 . data . IDENT_3 IDENT_51 = IDENT_25 . get ( n ) ; org . apache . IDENT_0 . data . IDENT_3 METHOD_2 = IDENT_22 . METHOD_2 ( ( ( IDENT_51 . size ( ) ) + 4 ) ) ; int IDENT_52 = 0 ; for ( int k = 0 ; k < ( IDENT_51 . size ( ) ) ; k ++ ) { METHOD_2 . set ( ( IDENT_52 ++ ) , IDENT_51 . get ( k ) ) ; } IDENT_50 . add ( METHOD_2 ) ; } return IDENT_50 ; } }
org . junit . Assert . assertEquals ( expected , IDENT_11 ) 