METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; java . util . Map < java . lang . String , java . lang . String > IDENT_2 = new java . util . HashMap ( ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_3 = new java . util . HashMap ( ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_4 = new java . util . HashMap ( ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_5 = new java . util . HashMap ( ) ; java . lang . String IDENT_6 = "1" ; java . lang . String IDENT_7 = STRING_2 ; IDENT_5 . put ( org . IDENT_8 . IDENT_9 . test . IDENT_10 , IDENT_6 ) ; IDENT_5 . put ( org . IDENT_8 . IDENT_9 . test . IDENT_11 , IDENT_7 ) ; org . IDENT_8 . IDENT_9 . model . IDENT_12 IDENT_13 = METHOD_1 ( org . IDENT_8 . IDENT_9 . test . IDENT_14 , IDENT_5 , true ) ; java . lang . String IDENT_15 = STRING_3 ; java . lang . String IDENT_16 = STRING_4 ; IDENT_2 . put ( org . IDENT_8 . IDENT_9 . test . IDENT_11 , IDENT_0 ) ; IDENT_2 . put ( org . IDENT_8 . IDENT_9 . test . IDENT_10 , IDENT_15 ) ; IDENT_2 . put ( org . IDENT_8 . IDENT_9 . test . IDENT_17 , IDENT_16 ) ; IDENT_2 . put ( org . IDENT_8 . IDENT_9 . test . IDENT_18 , IDENT_6 ) ; org . IDENT_8 . IDENT_9 . model . IDENT_12 IDENT_19 = METHOD_1 ( org . IDENT_8 . IDENT_9 . test . IDENT_20 , IDENT_2 , true ) ; IDENT_3 . put ( org . IDENT_8 . IDENT_9 . test . IDENT_11 , IDENT_1 . replace ( org . IDENT_8 . IDENT_9 . test . IDENT_21 , org . IDENT_8 . IDENT_9 . test . IDENT_22 ) ) ; IDENT_3 . put ( org . IDENT_8 . IDENT_9 . test . IDENT_10 , IDENT_16 ) ; org . IDENT_8 . IDENT_9 . model . IDENT_12 IDENT_23 = METHOD_1 ( org . IDENT_8 . IDENT_9 . test . IDENT_24 , IDENT_3 , true ) ; IDENT_4 . put ( org . IDENT_8 . IDENT_9 . test . IDENT_25 , IDENT_15 ) ; org . IDENT_8 . IDENT_9 . model . IDENT_12 IDENT_26 = METHOD_1 ( org . IDENT_8 . IDENT_9 . test . IDENT_27 , IDENT_4 , false ) ; org . IDENT_8 . IDENT_9 . model . IDENT_28 IDENT_29 = new org . IDENT_8 . IDENT_9 . model . METHOD_2 ( IDENT_15 ) ; IDENT_29 . METHOD_3 ( IDENT_16 , IDENT_23 ) ; IDENT_29 . METHOD_4 ( IDENT_15 , IDENT_19 ) ; IDENT_29 . METHOD_5 ( IDENT_6 , IDENT_13 ) ; org . IDENT_8 . IDENT_9 . model . IDENT_30 IDENT_31 = org . IDENT_8 . IDENT_9 . test . IDENT_32 . METHOD_6 ( IDENT_1 , IDENT_0 , new java . lang . Class [ 0 ] , int . class ) ; java . lang . String IDENT_33 = IDENT_26 . METHOD_7 ( ) . get ( org . IDENT_8 . IDENT_9 . test . IDENT_25 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( org . IDENT_8 . IDENT_9 . model . IDENT_30 , java . lang . String , org . IDENT_8 . IDENT_9 . model . IDENT_28 ) { boolean result = false ; org . IDENT_8 . IDENT_9 . model . IDENT_12 IDENT_34 = IDENT_29 . METHOD_9 ( IDENT_15 ) ; java . lang . StringBuilder builder = null ; if ( IDENT_35 ) { builder = new java . lang . StringBuilder ( ) ; builder . append ( java . lang . String . format ( STRING_5 , IDENT_15 , ( IDENT_34 != null ? IDENT_34 . toString ( true ) : STRING_6 ) ) ) . append ( org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_37 ) ; builder . append ( java . lang . String . format ( STRING_7 , IDENT_31 . toString ( ) ) ) . append ( org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_37 ) ; } if ( IDENT_34 != null ) { java . util . Map < java . lang . String , java . lang . String > IDENT_38 = IDENT_34 . METHOD_7 ( ) ; java . lang . String IDENT_16 = IDENT_38 . get ( org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_17 ) ; org . IDENT_8 . IDENT_9 . model . IDENT_12 IDENT_39 = IDENT_29 . METHOD_10 ( IDENT_16 ) ; if ( IDENT_39 != null ) { if ( IDENT_35 ) { builder . append ( java . lang . String . format ( STRING_8 , IDENT_39 . toString ( false ) ) ) . append ( org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_37 ) ; } java . lang . String IDENT_40 = IDENT_39 . METHOD_7 ( ) . get ( org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_11 ) ; java . lang . String IDENT_41 = org . IDENT_8 . IDENT_9 . util . IDENT_42 . METHOD_11 ( IDENT_38 . get ( org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_11 ) ) ; if ( IDENT_40 != null ) { IDENT_40 = IDENT_40 . replace ( org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_22 , org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_21 ) ; } java . lang . String IDENT_43 = org . IDENT_8 . IDENT_9 . util . IDENT_44 . METHOD_12 ( IDENT_34 , IDENT_29 ) ; java . util . List < java . lang . String > IDENT_45 = org . IDENT_8 . IDENT_9 . util . IDENT_44 . METHOD_13 ( IDENT_34 , IDENT_29 ) ; if ( IDENT_35 ) { builder . append ( java . lang . String . format ( STRING_9 , IDENT_31 . METHOD_14 ( ) , IDENT_41 ) ) . append ( org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_37 ) ; builder . append ( java . lang . String . format ( STRING_10 0 , IDENT_31 . METHOD_15 ( ) . METHOD_16 ( ) , IDENT_40 ) ) . append ( org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_37 ) ; builder . append ( java . lang . String . format ( STRING_11 , IDENT_31 . METHOD_17 ( ) , IDENT_43 ) ) . append ( org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_37 ) ; builder . append ( java . lang . String . format ( STRING_10 1 , org . IDENT_8 . IDENT_9 . util . IDENT_42 . METHOD_18 ( IDENT_31 . METHOD_19 ( ) ) , org . IDENT_8 . IDENT_9 . util . IDENT_42 . METHOD_20 ( IDENT_45 ) ) ) . append ( org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_37 ) ; } boolean IDENT_46 ; if ( org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_47 . equals ( IDENT_41 ) ) { if ( IDENT_35 ) { builder . append ( java . lang . String . format ( STRING_10 , IDENT_31 . METHOD_14 ( ) , IDENT_40 ) ) . append ( org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_37 ) ; } java . lang . String IDENT_48 = org . IDENT_8 . IDENT_9 . util . IDENT_42 . METHOD_21 ( IDENT_40 ) ; IDENT_46 = IDENT_31 . METHOD_14 ( ) . equals ( IDENT_48 ) ; } else { IDENT_46 = IDENT_31 . METHOD_14 ( ) . equals ( IDENT_41 ) ; } boolean IDENT_49 = IDENT_31 . METHOD_15 ( ) . METHOD_16 ( ) . equals ( IDENT_40 ) ; boolean IDENT_50 = IDENT_31 . METHOD_17 ( ) . equals ( IDENT_43 ) ; boolean IDENT_51 = true ; if ( ( IDENT_31 . METHOD_19 ( ) . length ) == ( IDENT_45 . size ( ) ) ) { for ( int pos = 0 ; pos < ( IDENT_31 . METHOD_19 ( ) . length ) ; pos ++ ) { java . lang . String IDENT_52 = IDENT_31 . METHOD_19 ( ) [ pos ] ; java . lang . String IDENT_53 = IDENT_45 . get ( pos ) ; if ( IDENT_35 ) { builder . append ( java . lang . String . format ( STRING_12 , IDENT_52 , IDENT_53 ) ) . append ( org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_37 ) ; } if ( ! ( IDENT_52 . equals ( IDENT_53 ) ) ) { IDENT_51 = false ; break ; } } } else { IDENT_51 = false ; } result = ( ( IDENT_46 && IDENT_49 ) && IDENT_50 ) && IDENT_51 ; if ( IDENT_35 ) { builder . append ( java . lang . String . format ( STRING_13 , IDENT_46 , IDENT_49 , IDENT_50 , IDENT_51 ) ) . append ( org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_37 ) ; builder . append ( java . lang . String . format ( STRING_14 , IDENT_31 , result ) ) . append ( org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_37 ) ; if ( ! result ) { org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_54 . logger . error ( builder . toString ( ) ) ; } } } } return result ; }
org . junit . Assert . assertTrue ( org . IDENT_8 . IDENT_9 . IDENT_36 . IDENT_54 . METHOD_8 ( IDENT_31 , IDENT_33 , IDENT_29 ) ) 