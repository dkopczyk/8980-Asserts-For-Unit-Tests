METHOD_0 ( ) { final java . util . concurrent . atomic . IDENT_0 IDENT_1 = new java . util . concurrent . atomic . METHOD_1 ( ) ; final java . util . concurrent . IDENT_2 IDENT_3 = new java . util . concurrent . METHOD_2 ( 1 ) ; IDENT_4 = new java . lang . Thread ( new java . lang . METHOD_3 ( ) { @ io . netty . util . internal . Override public void run ( ) { try { IDENT_3 . METHOD_4 ( ) ; } catch ( java . lang . IDENT_5 IDENT_6 ) { } } } ) ; IDENT_4 . start ( ) ; io . netty . util . internal . IDENT_7 . METHOD_5 ( IDENT_4 , new java . lang . METHOD_3 ( ) { @ io . netty . util . internal . Override public void run ( ) { IDENT_1 . set ( true ) ; } } ) ; IDENT_3 . METHOD_6 ( ) ; IDENT_4 . join ( ) ; "<AssertPlaceHolder>" ; IDENT_4 = null ; while ( ! ( IDENT_1 . get ( ) ) ) { java . lang . System . METHOD_7 ( ) ; java . lang . System . METHOD_8 ( ) ; java . lang . Thread . sleep ( 100 ) ; } } get ( ) { return METHOD_9 ( ) ; }
org . junit . Assert . assertFalse ( IDENT_1 . get ( ) ) 