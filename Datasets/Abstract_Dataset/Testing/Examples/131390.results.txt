METHOD_0 ( ) { org . junit . IDENT_0 . METHOD_1 ( io . netty . channel . IDENT_1 . IDENT_2 . METHOD_2 ( 3 , 9 , 0 ) ) ; io . netty . IDENT_3 . IDENT_4 IDENT_3 = io . netty . channel . IDENT_1 . IDENT_2 . METHOD_3 ( ) ; IDENT_3 . METHOD_4 ( IDENT_5 . IDENT_6 , true ) ; final java . util . concurrent . atomic . IDENT_7 IDENT_8 = new java . util . concurrent . atomic . METHOD_5 ( ) ; IDENT_3 . METHOD_6 ( new io . netty . channel . IDENT_1 . IDENT_2 . METHOD_7 ( IDENT_8 ) ) ; io . netty . channel . IDENT_9 future = IDENT_3 . METHOD_8 ( ) . METHOD_9 ( ) ; java . net . IDENT_10 IDENT_11 = ( ( java . net . IDENT_10 ) ( future . channel ( ) . METHOD_10 ( ) ) ) ; final java . util . concurrent . atomic . METHOD_5 IDENT_12 = new java . util . concurrent . atomic . METHOD_5 ( ) ; IDENT_3 . METHOD_6 ( new io . netty . channel . IDENT_1 . IDENT_2 . METHOD_7 ( IDENT_12 ) ) ; io . netty . channel . IDENT_9 IDENT_13 = IDENT_3 . METHOD_8 ( IDENT_11 ) . METHOD_9 ( ) ; java . net . IDENT_10 IDENT_14 = ( ( java . net . IDENT_10 ) ( IDENT_13 . channel ( ) . METHOD_10 ( ) ) ) ; "<AssertPlaceHolder>" ; while ( ( ! ( IDENT_8 . get ( ) ) ) || ( ! ( IDENT_12 . get ( ) ) ) ) { java . net . IDENT_15 IDENT_16 = new java . net . METHOD_11 ( IDENT_11 . METHOD_12 ( ) , IDENT_11 . METHOD_13 ( ) ) ; IDENT_16 . METHOD_14 ( true ) ; IDENT_16 . close ( ) ; } future . channel ( ) . close ( ) . METHOD_9 ( ) ; IDENT_13 . channel ( ) . close ( ) . METHOD_9 ( ) ; } METHOD_10 ( ) { return IDENT_3 . METHOD_10 ( ) ; }
org . junit . Assert . assertEquals ( IDENT_11 , IDENT_14 ) 