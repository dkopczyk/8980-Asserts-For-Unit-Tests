METHOD_0 ( ) { final io . netty . util . concurrent . IDENT_0 IDENT_1 = new io . netty . util . concurrent . METHOD_1 ( 1 ) ; try { final io . netty . util . concurrent . IDENT_2 < java . lang . IDENT_3 > IDENT_4 = IDENT_1 . next ( ) . METHOD_2 ( ) ; final java . util . concurrent . atomic . IDENT_5 IDENT_6 = new java . util . concurrent . atomic . METHOD_3 ( ) ; final java . lang . Exception exception = new java . lang . RuntimeException ( ) ; io . netty . channel . IDENT_7 pipeline = new io . netty . channel . IDENT_8 . METHOD_4 ( ) . pipeline ( ) ; pipeline . METHOD_5 ( IDENT_1 , new io . netty . channel . IDENT_9 . METHOD_6 ( exception , IDENT_4 ) ) ; pipeline . METHOD_7 ( new io . netty . channel . METHOD_8 ( ) { @ io . netty . channel . Override public void METHOD_9 ( io . netty . channel . IDENT_10 ctx ) throws io . netty . channel . Exception { METHOD_9 . set ( true ) ; throw exception ; } } ) ; "<AssertPlaceHolder>" ; io . netty . channel . IDENT_9 . group . METHOD_10 ( pipeline . channel ( ) ) ; IDENT_4 . METHOD_11 ( ) ; } finally { IDENT_1 . METHOD_12 ( ) ; } } get ( ) { return METHOD_13 ( ) ; }
org . junit . Assert . assertFalse ( METHOD_9 . get ( ) ) 