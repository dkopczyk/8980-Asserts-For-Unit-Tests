METHOD_0 ( ) { for ( java . lang . String IDENT_0 : com . IDENT_1 . schema . IDENT_2 . IDENT_3 ) { "<AssertPlaceHolder>" ; } } METHOD_1 ( java . lang . String ) { if ( ( str == null ) || ( str . equals ( "" ) ) ) { return false ; } int i = 0 ; int len = str . length ( ) ; if ( ( ( str . charAt ( i ) ) == ( com . IDENT_1 . schema . IDENT_4 . IDENT_5 ) ) || ( ( str . charAt ( i ) ) == ( com . IDENT_1 . schema . IDENT_4 . IDENT_6 ) ) ) { if ( ( str . length ( ) ) == 1 ) { return false ; } i = 1 ; } char c = str . charAt ( ( i ++ ) ) ; if ( c == ( com . IDENT_1 . schema . IDENT_4 . IDENT_7 ) ) { if ( i < len ) { c = str . charAt ( ( i ++ ) ) ; if ( ( ( c != ( com . IDENT_1 . schema . IDENT_4 . IDENT_8 ) ) && ( c != ( com . IDENT_1 . schema . IDENT_4 . IDENT_9 ) ) ) && ( c != ( com . IDENT_1 . schema . IDENT_4 . IDENT_10 ) ) ) { return false ; } } } else if ( ( ( com . IDENT_1 . schema . IDENT_4 . IDENT_11 ) <= c ) && ( c <= ( com . IDENT_1 . schema . IDENT_4 . IDENT_12 ) ) ) { while ( ( ( i < len ) && ( ( com . IDENT_1 . schema . IDENT_4 . IDENT_7 ) <= c ) ) && ( c <= ( com . IDENT_1 . schema . IDENT_4 . IDENT_12 ) ) ) { c = str . charAt ( ( i ++ ) ) ; } } else { return false ; } if ( c == ( com . IDENT_1 . schema . IDENT_4 . IDENT_8 ) ) { if ( i >= len ) { return false ; } c = str . charAt ( ( i ++ ) ) ; while ( ( ( i < len ) && ( ( com . IDENT_1 . schema . IDENT_4 . IDENT_7 ) <= c ) ) && ( c <= ( com . IDENT_1 . schema . IDENT_4 . IDENT_12 ) ) ) { c = str . charAt ( ( i ++ ) ) ; } } if ( ( c == ( com . IDENT_1 . schema . IDENT_4 . IDENT_9 ) ) || ( c == ( com . IDENT_1 . schema . IDENT_4 . IDENT_10 ) ) ) { if ( i >= len ) { return false ; } c = str . charAt ( ( i ++ ) ) ; if ( ( c == ( com . IDENT_1 . schema . IDENT_4 . IDENT_6 ) ) || ( c == ( com . IDENT_1 . schema . IDENT_4 . IDENT_5 ) ) ) { if ( i >= len ) { return false ; } c = str . charAt ( ( i ++ ) ) ; } while ( ( ( i < len ) && ( ( com . IDENT_1 . schema . IDENT_4 . IDENT_7 ) <= c ) ) && ( c <= ( com . IDENT_1 . schema . IDENT_4 . IDENT_12 ) ) ) { c = str . charAt ( ( i ++ ) ) ; } } return ( i >= len ) && ( ( ( com . IDENT_1 . schema . IDENT_4 . IDENT_7 ) <= c ) && ( c <= ( com . IDENT_1 . schema . IDENT_4 . IDENT_12 ) ) ) ; }
org . junit . Assert . assertFalse ( IDENT_0 , com . IDENT_1 . schema . IDENT_4 . METHOD_1 ( IDENT_0 ) ) 