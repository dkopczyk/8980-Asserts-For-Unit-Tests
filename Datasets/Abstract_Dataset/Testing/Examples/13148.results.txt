METHOD_0 ( ) { byte [ ] [ ] IDENT_0 = new byte [ ] [ ] { new byte [ ] { org . apache . IDENT_1 . IDENT_2 . parser . IDENT_3 . IDENT_4 } } ; for ( byte [ ] b : IDENT_0 ) { try { new org . apache . IDENT_1 . IDENT_2 . parser . METHOD_1 ( new java . io . ByteArrayInputStream ( b ) ) . METHOD_2 ( ) ; org . junit . Assert . fail ( ( STRING_0 + ( org . apache . IDENT_1 . IDENT_2 . parser . IDENT_3 . METHOD_3 ( b ) ) ) ) ; } catch ( java . io . IDENT_5 IDENT_6 ) { } } byte [ ] [ ] IDENT_7 = new byte [ ] [ ] { new byte [ ] { } , new byte [ ] { org . apache . IDENT_1 . IDENT_2 . parser . IDENT_3 . IDENT_8 } , new byte [ ] { org . apache . IDENT_1 . IDENT_2 . parser . IDENT_3 . IDENT_9 } } ; for ( byte [ ] b : IDENT_7 ) { org . apache . IDENT_1 . IDENT_2 . parser . IDENT_10 IDENT_11 = new org . apache . IDENT_1 . IDENT_2 . parser . METHOD_1 ( new java . io . ByteArrayInputStream ( b ) ) . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } } METHOD_2 ( ) { do { if ( ( IDENT_12 . METHOD_4 ( ) ) == 0 ) { return null ; } } while ( ( IDENT_12 . METHOD_5 ( ) ) != ( org . apache . IDENT_1 . IDENT_2 . parser . METHOD_1 . IDENT_4 ) ) ; byte [ ] IDENT_13 = new byte [ org . apache . IDENT_1 . IDENT_2 . parser . METHOD_1 . IDENT_14 ] ; IDENT_12 . METHOD_6 ( IDENT_13 ) ; org . apache . IDENT_1 . IDENT_2 . parser . IDENT_10 . IDENT_15 IDENT_16 = new org . apache . IDENT_1 . IDENT_2 . parser . IDENT_10 . METHOD_7 ( IDENT_13 ) ; int IDENT_17 = ( IDENT_16 . METHOD_8 ( ) ) - ( org . apache . IDENT_1 . IDENT_2 . parser . METHOD_1 . IDENT_14 ) ; byte [ ] IDENT_18 = null ; if ( IDENT_16 . METHOD_9 ( ) ) { short IDENT_19 = 0 ; IDENT_19 = ( ( short ) ( ( IDENT_12 . METHOD_5 ( ) ) & 255 ) ) ; if ( IDENT_19 > 0 ) { IDENT_18 = new byte [ IDENT_19 - 1 ] ; IDENT_12 . METHOD_6 ( IDENT_18 ) ; IDENT_17 OP_0 IDENT_19 ; } } byte [ ] data = new byte [ IDENT_17 ] ; IDENT_12 . METHOD_6 ( data ) ; org . apache . IDENT_1 . IDENT_2 . parser . IDENT_10 sf = new org . apache . IDENT_1 . IDENT_2 . parser . METHOD_10 ( IDENT_16 , data , IDENT_18 ) ; if ( org . apache . IDENT_1 . IDENT_2 . parser . METHOD_1 . LOG . METHOD_11 ( ) ) { org . apache . IDENT_1 . IDENT_2 . parser . METHOD_1 . LOG . trace ( sf ) ; } return sf ; }
org . junit . Assert . assertNull ( IDENT_11 ) 