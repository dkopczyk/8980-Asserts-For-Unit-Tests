METHOD_0 ( ) { java . util . List < com . IDENT_0 . android . datamodel . IDENT_1 > IDENT_2 = new java . util . ArrayList ( ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_0 ) . METHOD_2 ( ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_1 ) . METHOD_2 ( ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_2 3 ) . METHOD_2 ( ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_2 9 ) . METHOD_2 ( ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_2 0 ) . METHOD_2 ( ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_2 2 ) . METHOD_2 ( ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_3 ) . METHOD_2 ( ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_4 ) . METHOD_2 ( ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_5 ) . METHOD_2 ( ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_2 7 ) . METHOD_2 ( ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_2 8 ) . METHOD_2 ( ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_2 6 ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_6 ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_2 4 ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_2 ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_7 ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_2 5 ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_2 1 ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_8 ) ) ; IDENT_2 . add ( new com . IDENT_0 . android . datamodel . METHOD_1 ( STRING_9 ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . util . List ) { return test ( IDENT_3 , METHOD_4 ( IDENT_3 ) ) ; }
org . junit . Assert . assertTrue ( METHOD_3 ( IDENT_2 ) ) 