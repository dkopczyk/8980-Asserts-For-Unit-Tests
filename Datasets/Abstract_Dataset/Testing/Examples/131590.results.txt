METHOD_0 ( ) { java . util . List < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 > IDENT_4 = new java . util . ArrayList < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 > ( 1 ) ; java . util . List < java . lang . String > IDENT_5 = java . util . Arrays . asList ( "foo" ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 spec = new com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( "foo" , IDENT_5 , METHOD_1 . IDENT_6 . IDENT_7 ) ; IDENT_4 . add ( spec ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_8 op = new com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 ( IDENT_4 ) ; com . IDENT_0 . IDENT_1 . IDENT_9 IDENT_10 = new com . IDENT_0 . IDENT_1 . METHOD_3 ( "foo" , null , 1 ) ; com . IDENT_0 . IDENT_1 . IDENT_11 . IDENT_12 . IDENT_13 IDENT_14 = METHOD_4 ( new com . IDENT_0 . IDENT_1 . IDENT_11 . IDENT_12 . METHOD_5 ( "" ) ) ; IDENT_10 . METHOD_6 ( IDENT_14 ) ; doReturn ( STRING_0 ) . when ( IDENT_14 ) . METHOD_7 ( "foo" ) ; op . METHOD_8 ( IDENT_10 ) ; java . util . IDENT_15 < java . lang . String , java . lang . String > actual = IDENT_10 . METHOD_9 ( ) ; java . util . IDENT_15 < java . lang . String , java . lang . String > expected = new java . util . IDENT_15 < java . lang . String , java . lang . String > ( 1 ) ; expected . put ( "foo" , STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( ) { java . util . IDENT_15 < java . lang . String , java . lang . String > IDENT_16 = super . METHOD_9 ( ) ; if ( IDENT_16 == null ) { IDENT_16 = new java . util . IDENT_15 < java . lang . String , java . lang . String > ( 1 ) ; super . METHOD_10 ( IDENT_16 ) ; } IDENT_16 . put ( com . IDENT_0 . IDENT_1 . handler . IDENT_17 . IDENT_18 . IDENT_19 , this . IDENT_20 ) ; return IDENT_16 ; }
org . junit . Assert . assertEquals ( expected , actual ) 