METHOD_0 ( ) { java . util . stream . IDENT_0 < com . IDENT_1 . IDENT_2 . IDENT_3 > input = IDENT_4 . stream ( ) ; java . util . stream . IDENT_0 < com . IDENT_1 . IDENT_2 . IDENT_3 > output = op . METHOD_1 ( input ) ; java . util . List < java . lang . String > actual = output . map ( IDENT_3 :: IDENT_5 ) . collect ( java . util . stream . IDENT_6 . toList ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . util . stream . IDENT_0 ) { queue . METHOD_2 ( IDENT_7 . METHOD_3 ( ) ) ; } ) ; } ) ; for ( com . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 < com . IDENT_1 . IDENT_2 . IDENT_3 > queue : IDENT_13 ) { queue . close ( ) ; } } } ) . start ( ) ; return IDENT_14 . METHOD_4 ( ) ; }
org . junit . Assert . assertEquals ( 0 , actual . size ( ) ) 