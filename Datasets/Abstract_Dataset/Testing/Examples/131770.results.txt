METHOD_0 ( ) { com . IDENT_0 . json . IDENT_1 now = com . IDENT_0 . json . IDENT_1 . now ( ) ; com . IDENT_0 . json . IDENT_2 IDENT_3 = new com . IDENT_0 . json . METHOD_1 ( null ) ; com . IDENT_0 . json . IDENT_4 . serialize ( now , IDENT_3 ) ; com . IDENT_0 . json . IDENT_5 IDENT_6 = new com . IDENT_0 . json . METHOD_2 ( IDENT_3 . toString ( ) . getBytes ( STRING_0 ) , null ) ; IDENT_6 . read ( ) ; com . IDENT_0 . json . IDENT_1 value = com . IDENT_0 . json . IDENT_4 . METHOD_3 ( IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( com . IDENT_0 . json . METHOD_2 ) { final char [ ] IDENT_7 = reader . METHOD_4 ( ) ; final int len = ( ( reader . METHOD_5 ( ) ) - ( reader . METHOD_6 ( ) ) ) - 1 ; if ( ( ( ( ( ( ( ( len > INT_0 ) && ( len < INT_1 ) ) && ( ( IDENT_7 [ 4 ] ) == STRING_1 ) ) && ( ( IDENT_7 [ 7 ] ) == STRING_1 ) ) && ( ( ( ( IDENT_7 [ 10 ] ) == STRING_2 ) || ( ( IDENT_7 [ 10 ] ) == STRING_3 ) ) || ( ( IDENT_7 [ 10 ] ) == STRING_4 ) ) ) && ( ( IDENT_7 [ INT_2 ] ) == STRING_5 ) ) && ( ( IDENT_7 [ 16 ] ) == STRING_5 ) ) && ( com . IDENT_0 . json . IDENT_4 . METHOD_7 ( IDENT_7 , 20 , len ) ) ) { final int IDENT_8 = com . IDENT_0 . json . IDENT_9 . METHOD_8 ( IDENT_7 , 0 ) ; final int IDENT_10 = com . IDENT_0 . json . IDENT_9 . METHOD_9 ( IDENT_7 , 5 ) ; final int IDENT_11 = com . IDENT_0 . json . IDENT_9 . METHOD_9 ( IDENT_7 , 8 ) ; final int IDENT_12 = com . IDENT_0 . json . IDENT_9 . METHOD_9 ( IDENT_7 , INT_3 ) ; final int min = com . IDENT_0 . json . IDENT_9 . METHOD_9 ( IDENT_7 , INT_4 ) ; final int IDENT_13 = com . IDENT_0 . json . IDENT_9 . METHOD_9 ( IDENT_7 , INT_5 ) ; if ( ( len > INT_6 ) && ( ( IDENT_7 [ INT_6 ] ) == STRING_6 ) ) { final int IDENT_14 = com . IDENT_0 . json . IDENT_4 . METHOD_10 ( IDENT_7 , len ) ; return com . IDENT_0 . json . IDENT_1 . of ( IDENT_8 , IDENT_10 , IDENT_11 , IDENT_12 , min , IDENT_13 , IDENT_14 ) ; } return com . IDENT_0 . json . IDENT_1 . of ( IDENT_8 , IDENT_10 , IDENT_11 , IDENT_12 , min , IDENT_13 ) ; } else { return com . IDENT_0 . json . IDENT_1 . parse ( new java . lang . String ( IDENT_7 , 0 , len ) ) ; } }
org . junit . Assert . assertEquals ( now , value ) 