METHOD_0 ( ) { net . sourceforge . IDENT_0 . IDENT_1 . logger . info ( STRING_0 ) ; java . lang . String expResult = IDENT_2 ; java . io . File IDENT_3 = new java . io . File ( this . IDENT_4 , STRING_1 ) ; java . awt . image . IDENT_5 image = javax . IDENT_6 . IDENT_7 . read ( IDENT_3 ) ; java . nio . ByteBuffer buf = net . sourceforge . IDENT_0 . util . IDENT_8 . METHOD_1 ( image ) ; int IDENT_9 = image . METHOD_2 ( ) . METHOD_3 ( ) ; int IDENT_10 = IDENT_9 / 8 ; int IDENT_11 = ( ( int ) ( java . lang . Math . METHOD_4 ( ( ( ( image . METHOD_5 ( ) ) * IDENT_9 ) / FLOAT_0 ) ) ) ) ; net . sourceforge . IDENT_0 . IDENT_12 . METHOD_6 ( IDENT_13 , IDENT_14 , IDENT_15 ) ; net . sourceforge . IDENT_0 . IDENT_12 . METHOD_7 ( IDENT_13 , IDENT_16 . IDENT_17 ) ; com . sun . IDENT_18 . IDENT_19 IDENT_20 = net . sourceforge . IDENT_0 . IDENT_12 . METHOD_8 ( IDENT_13 , buf , IDENT_10 , IDENT_11 , 0 , 0 , image . METHOD_5 ( ) , image . METHOD_9 ( ) ) ; java . lang . String result = IDENT_20 . getString ( 0 ) ; net . sourceforge . IDENT_0 . IDENT_12 . METHOD_10 ( IDENT_20 ) ; net . sourceforge . IDENT_0 . IDENT_1 . logger . info ( result ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( com . sun . IDENT_18 . IDENT_19 ) { throw new java . lang . METHOD_11 ( STRING_2 ) ; }
org . junit . Assert . assertEquals ( expResult , result . substring ( 0 , expResult . length ( ) ) ) 