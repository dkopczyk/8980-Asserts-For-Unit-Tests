METHOD_0 ( ) { net . sourceforge . IDENT_0 . IDENT_1 . logger . info ( STRING_0 ) ; int expResult = IDENT_2 . IDENT_3 ; java . nio . IDENT_4 IDENT_5 = java . nio . IDENT_4 . METHOD_1 ( 1 ) ; java . nio . IDENT_4 IDENT_6 = java . nio . IDENT_4 . METHOD_1 ( 1 ) ; java . nio . IDENT_4 order = java . nio . IDENT_4 . METHOD_1 ( 1 ) ; java . nio . IDENT_7 IDENT_8 = java . nio . IDENT_7 . METHOD_1 ( 1 ) ; java . io . File IDENT_9 = new java . io . File ( this . IDENT_10 , STRING_1 ) ; java . awt . image . IDENT_11 image = javax . IDENT_12 . IDENT_13 . read ( new java . io . METHOD_2 ( IDENT_9 ) ) ; java . nio . ByteBuffer buf = net . sourceforge . IDENT_0 . util . IDENT_14 . METHOD_3 ( image ) ; int IDENT_15 = image . METHOD_4 ( ) . METHOD_5 ( ) ; int IDENT_16 = IDENT_15 / 8 ; int IDENT_17 = ( ( int ) ( java . lang . Math . METHOD_6 ( ( ( ( image . METHOD_7 ( ) ) * IDENT_15 ) / FLOAT_0 ) ) ) ) ; api . METHOD_8 ( IDENT_18 , IDENT_19 , IDENT_20 ) ; api . METHOD_9 ( IDENT_18 , IDENT_2 . IDENT_3 ) ; int IDENT_21 = api . METHOD_10 ( IDENT_18 ) ; net . sourceforge . IDENT_0 . IDENT_1 . logger . info ( ( STRING_2 + ( net . sourceforge . IDENT_0 . util . Utils . METHOD_11 ( IDENT_21 , net . sourceforge . IDENT_0 . IDENT_2 . class ) ) ) ) ; api . METHOD_12 ( IDENT_18 , buf , image . METHOD_7 ( ) , image . METHOD_13 ( ) , IDENT_16 , IDENT_17 ) ; int IDENT_22 = api . METHOD_14 ( IDENT_18 , null ) ; if ( IDENT_22 == 0 ) { net . sourceforge . IDENT_0 . IDENT_23 IDENT_24 = api . METHOD_15 ( IDENT_18 ) ; api . METHOD_16 ( IDENT_24 , IDENT_5 , IDENT_6 , order , IDENT_8 ) ; net . sourceforge . IDENT_0 . IDENT_1 . logger . info ( java . lang . String . format ( STRING_3 , net . sourceforge . IDENT_0 . util . Utils . METHOD_11 ( IDENT_5 . get ( ) , net . sourceforge . IDENT_0 . IDENT_25 . class ) , net . sourceforge . IDENT_0 . util . Utils . METHOD_11 ( IDENT_6 . get ( ) , net . sourceforge . IDENT_0 . IDENT_26 . class ) , net . sourceforge . IDENT_0 . util . Utils . METHOD_11 ( order . get ( ) , net . sourceforge . IDENT_0 . IDENT_27 . class ) , IDENT_8 . get ( ) ) ) ; } "<AssertPlaceHolder>" ; } METHOD_11 ( java . lang . Object , java . lang . Class ) { for ( java . lang . reflect . Field f : c . METHOD_17 ( ) ) { int IDENT_28 = f . METHOD_18 ( ) ; if ( ( ( java . lang . reflect . IDENT_29 . METHOD_19 ( IDENT_28 ) ) && ( java . lang . reflect . IDENT_29 . METHOD_20 ( IDENT_28 ) ) ) && ( java . lang . reflect . IDENT_29 . METHOD_21 ( IDENT_28 ) ) ) { try { if ( f . get ( null ) . equals ( value ) ) { return f . getName ( ) ; } } catch ( java . lang . IDENT_30 e ) { return java . lang . String . valueOf ( value ) ; } } } return java . lang . String . valueOf ( value ) ; }
org . junit . Assert . assertEquals ( expResult , IDENT_21 ) 