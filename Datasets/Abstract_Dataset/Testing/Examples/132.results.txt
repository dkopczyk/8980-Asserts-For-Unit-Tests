METHOD_0 ( ) { org . springframework . data . IDENT_0 . util . IDENT_1 . IDENT_2 entity = new org . springframework . data . IDENT_0 . util . IDENT_1 . METHOD_1 ( ) ; java . util . Map < java . lang . String , java . lang . String > attributes = org . springframework . data . IDENT_0 . IDENT_3 . IDENT_4 . METHOD_2 ( entity ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . Object ) { java . lang . Class < ? > clazz = object . getClass ( ) ; for ( java . lang . reflect . Field f : clazz . METHOD_3 ( ) ) { org . springframework . data . IDENT_0 . annotation . IDENT_5 attributes = f . METHOD_4 ( org . springframework . data . IDENT_0 . annotation . IDENT_5 . class ) ; if ( attributes != null ) { try { f . METHOD_5 ( true ) ; return ( ( java . util . Map < java . lang . String , java . lang . String > ) ( f . get ( object ) ) ) ; } catch ( java . lang . IDENT_6 e ) { org . springframework . data . IDENT_0 . IDENT_3 . IDENT_4 . LOGGER . error ( STRING_0 , e ) ; } } } return null ; }
org . junit . Assert . assertNotNull ( attributes ) 