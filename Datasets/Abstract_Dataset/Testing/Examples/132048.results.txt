METHOD_0 ( ) { io . IDENT_0 . IDENT_1 . insert ( STRING_0 , STRING_1 , STRING_2 ) ; io . IDENT_0 . IDENT_1 . insert ( STRING_0 , STRING_1 , STRING_3 ) ; io . IDENT_0 . IDENT_1 . insert ( STRING_0 , STRING_1 , STRING_4 ) ; io . IDENT_0 . IDENT_1 . insert ( STRING_5 0 , STRING_5 , STRING_6 ) ; io . IDENT_0 . IDENT_1 . insert ( STRING_5 0 , STRING_5 , STRING_7 ) ; io . IDENT_0 . IDENT_1 . insert ( STRING_5 0 , STRING_5 , STRING_5 1 ) ; io . IDENT_0 . IDENT_2 < io . IDENT_0 . it . fixture . IDENT_3 . IDENT_4 > response = METHOD_1 ( ) . select ( io . IDENT_0 . it . fixture . IDENT_3 . IDENT_4 . class ) . get ( ) ; java . util . Collection < io . IDENT_0 . it . fixture . IDENT_3 . IDENT_5 > IDENT_6 = response . METHOD_2 ( io . IDENT_0 . it . fixture . IDENT_3 . IDENT_5 . class , STRING_8 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . util . Collection ) { return IDENT_6 . stream ( ) . map ( ( o ) -> ( ( o . METHOD_4 ( ) . METHOD_5 ( ) ) + STRING_9 ) + ( org . apache . IDENT_3 . IDENT_7 . METHOD_6 ( o ) ) ) . collect ( METHOD_7 ( STRING_10 ) ) ; }
org . junit . Assert . assertEquals ( "" , METHOD_3 ( IDENT_6 ) ) 