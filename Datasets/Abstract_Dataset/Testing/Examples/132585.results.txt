METHOD_0 ( ) { java . util . Set < java . lang . String > IDENT_0 = com . google . common . collect . IDENT_1 . METHOD_1 ( ) ; final java . util . List < edu . IDENT_2 . cs . IDENT_3 . IDENT_4 . IDENT_5 . data . IDENT_6 . IDENT_7 . IDENT_8 > tokens = edu . IDENT_2 . cs . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 . IDENT_10 . IDENT_11 . METHOD_2 ( ) ; for ( edu . IDENT_2 . cs . IDENT_3 . IDENT_4 . IDENT_5 . data . IDENT_6 . IDENT_7 . IDENT_8 token : tokens ) { IDENT_0 . add ( ( ( ( token . METHOD_3 ( ) ) + STRING_0 ) + ( token . METHOD_4 ( ) ) ) ) ; } final edu . IDENT_2 . cs . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 . IDENT_12 IDENT_13 = new edu . IDENT_2 . cs . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 . METHOD_5 ( IDENT_0 ) ; final java . util . List < java . util . List < java . lang . Integer > > IDENT_9 = IDENT_13 . METHOD_6 ( edu . IDENT_2 . cs . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 . IDENT_10 . IDENT_11 ) ; final java . lang . Integer [ ] IDENT_14 = new java . lang . Integer [ ] { 0 , 1 , 2 , 4 , 7 , 8 , 9 , 10 , 12 , INT_0 , 16 , INT_1 , INT_2 , 20 , INT_3 , INT_4 } ; for ( int i : METHOD_7 ( IDENT_14 . length ) ) { java . lang . Integer [ ] IDENT_15 = new java . lang . Integer [ ] { IDENT_14 [ i ] } ; "<AssertPlaceHolder>" ; } } get ( java . lang . String ) { if ( ! ( IDENT_16 . containsKey ( IDENT_17 ) ) ) { System . err . println ( ( STRING_1 + IDENT_17 ) ) ; return "" ; } return IDENT_16 . get ( IDENT_17 ) ; }
org . junit . Assert . assertArrayEquals ( IDENT_15 , IDENT_9 . get ( i ) . toArray ( ) ) 