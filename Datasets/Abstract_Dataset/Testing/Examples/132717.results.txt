METHOD_0 ( ) { java . io . InputStream in = java . lang . Thread . METHOD_1 ( ) . METHOD_2 ( ) . getResourceAsStream ( STRING_0 ) ; IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 f = null ; try { f = new IDENT_0 . IDENT_1 . IDENT_2 . METHOD_3 ( new IDENT_0 . IDENT_1 . IDENT_2 . IDENT_4 . METHOD_4 ( ) . METHOD_5 ( in ) ) ; "<AssertPlaceHolder>" ; } finally { IDENT_0 . IDENT_1 . util . IDENT_5 . close ( f ) ; } } METHOD_6 ( ) { if ( ( ( this . IDENT_6 ) == null ) || ( this . IDENT_7 ) ) { if ( ( this . IDENT_6 ) == null ) { IDENT_0 . IDENT_1 . IDENT_2 . METHOD_3 . LOG . METHOD_7 ( STRING_1 ) ; } return null ; } if ( ( ( this . IDENT_6 ) instanceof IDENT_0 . IDENT_1 . util . IDENT_8 ) && ( ( this . IDENT_9 ) > 0 ) ) { IDENT_0 . IDENT_1 . IDENT_2 . IDENT_10 . METHOD_8 ( this . IDENT_6 , this . IDENT_9 ) ; } IDENT_0 . IDENT_1 . IDENT_2 . IDENT_11 IDENT_12 = IDENT_0 . IDENT_1 . IDENT_2 . IDENT_11 . METHOD_9 ( this . IDENT_6 ) ; if ( IDENT_12 == null ) { this . IDENT_7 = true ; return null ; } IDENT_0 . IDENT_1 . IDENT_2 . IDENT_13 data = IDENT_12 . METHOD_10 ( ) ; try { data . read ( this . IDENT_6 ) ; } catch ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_14 e ) { e . METHOD_11 ( IDENT_12 ) ; if ( ! ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_15 . METHOD_12 ( ) ) ) { throw e ; } } this . IDENT_9 = IDENT_0 . IDENT_1 . IDENT_2 . IDENT_10 . METHOD_13 ( this . IDENT_6 ) ; IDENT_0 . IDENT_1 . IDENT_2 . IDENT_16 < IDENT_0 . IDENT_1 . IDENT_2 . IDENT_13 > IDENT_17 = IDENT_0 . IDENT_1 . IDENT_2 . IDENT_15 . METHOD_14 ( IDENT_12 , data ) ; this . IDENT_18 . add ( IDENT_17 ) ; return IDENT_17 ; }
org . junit . Assert . assertNotNull ( f . METHOD_6 ( ) ) 