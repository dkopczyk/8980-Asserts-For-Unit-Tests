METHOD_0 ( ) { eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 description = METHOD_1 ( ) . METHOD_2 ( IDENT_4 ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 IDENT_6 = description . METHOD_3 ( ) . get ( 1 ) ; org . eclipse . IDENT_7 . common . util . URI IDENT_8 = METHOD_1 ( ) . METHOD_4 ( IDENT_4 , IDENT_6 , IDENT_9 . IDENT_10 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . eclipse . IDENT_7 . common . util . URI , eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_11 , eu . IDENT_0 . IDENT_1 . internal . IDENT_9 ) { java . lang . String IDENT_12 = IDENT_13 . METHOD_5 ( ) . METHOD_6 ( ) ; if ( IDENT_14 == ( IDENT_9 . IDENT_15 ) ) { eu . IDENT_0 . IDENT_1 . internal . IDENT_16 IDENT_17 = IDENT_18 . get ( IDENT_19 ) ; if ( ! ( IDENT_17 . METHOD_7 ( ) ) ) { java . lang . String IDENT_20 = IDENT_12 + ( eu . IDENT_0 . IDENT_1 . IDENT_21 . IDENT_22 . IDENT_23 ) ; for ( java . lang . String IDENT_24 : IDENT_17 . METHOD_8 ( ) . METHOD_9 ( ) ) { org . eclipse . IDENT_7 . common . util . URI IDENT_25 = IDENT_19 . METHOD_10 ( new java . lang . String [ ] { IDENT_24 , IDENT_20 } ) ; if ( IDENT_18 . containsKey ( IDENT_25 ) ) { return IDENT_25 ; } } } else { java . lang . String IDENT_20 = IDENT_12 + ( eu . IDENT_0 . IDENT_1 . IDENT_21 . IDENT_22 . IDENT_23 ) ; for ( org . eclipse . IDENT_7 . common . util . URI location : IDENT_18 . METHOD_11 ( ) ) { if ( location . METHOD_12 ( ) . equals ( IDENT_20 ) ) { eu . IDENT_0 . IDENT_1 . internal . IDENT_16 IDENT_26 = IDENT_18 . get ( location ) ; if ( IDENT_26 != null ) { return IDENT_26 . METHOD_4 ( ) ; } } } } org . eclipse . IDENT_7 . common . util . URI location = IDENT_27 . METHOD_4 ( IDENT_12 ) ; if ( location != null ) { if ( IDENT_18 . containsKey ( location ) ) { return location ; } IDENT_18 . put ( location , METHOD_13 ( location , true ) ) ; return location ; } } else { for ( org . eclipse . IDENT_7 . common . util . URI location : IDENT_18 . METHOD_11 ( ) ) { if ( location . METHOD_12 ( ) . equals ( IDENT_12 ) ) { eu . IDENT_0 . IDENT_1 . internal . IDENT_16 IDENT_26 = IDENT_18 . get ( location ) ; if ( IDENT_26 != null ) { return IDENT_26 . METHOD_4 ( ) ; } } } } return null ; }
org . junit . Assert . assertNull ( IDENT_8 ) 