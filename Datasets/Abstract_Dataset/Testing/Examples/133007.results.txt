METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . network . IDENT_2 . IDENT_3 < java . io . File > IDENT_2 = org . IDENT_0 . IDENT_1 . network . IDENT_2 . IDENT_3 . create ( IDENT_4 :: create , org . IDENT_0 . IDENT_1 . network . IDENT_2 . IDENT_5 . create ( IDENT_6 :: path , "" , org . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . path ( STRING_0 ) ) ) ; org . IDENT_0 . IDENT_1 . IDENT_9 p = org . IDENT_0 . IDENT_1 . network . IDENT_10 . METHOD_1 ( ) . METHOD_2 ( ) ; p = p . METHOD_3 ( org . IDENT_0 . IDENT_1 . network . IDENT_10 . METHOD_4 ( ) ) ; p . set ( IDENT_11 . IDENT_12 , new org . IDENT_0 . IDENT_1 . util . METHOD_5 ( INT_0 ) ) ; p . set ( IDENT_11 . IDENT_13 , Boolean . IDENT_14 ) ; p . set ( IDENT_11 . IDENT_15 , org . IDENT_0 . IDENT_1 . network . IDENT_10 . METHOD_6 ( STRING_1 , org . IDENT_0 . IDENT_1 . IDENT_16 . IDENT_17 . class ) ) ; org . IDENT_0 . IDENT_1 . network . IDENT_2 . IDENT_18 < java . io . File > IDENT_19 = ( ( org . IDENT_0 . IDENT_1 . network . IDENT_2 . IDENT_18 < java . io . File > ) ( IDENT_2 ) ) ; org . IDENT_0 . IDENT_1 . network . IDENT_20 n = org . IDENT_0 . IDENT_1 . network . IDENT_20 . create ( STRING_2 , p ) ; final org . IDENT_0 . IDENT_1 . network . IDENT_21 < int [ ] > l = new org . IDENT_0 . IDENT_1 . network . METHOD_7 ( n ) ; l . add ( IDENT_19 ) ; l . METHOD_8 ( new IDENT_22 . IDENT_23 < org . IDENT_0 . IDENT_1 . network . IDENT_24 > ( ) { @ org . IDENT_0 . IDENT_1 . network . Override public void METHOD_9 ( ) { } @ org . IDENT_0 . IDENT_1 . network . Override public void METHOD_10 ( java . lang . Throwable e ) { e . printStackTrace ( ) ; } @ org . IDENT_0 . IDENT_1 . network . Override public void METHOD_11 ( org . IDENT_0 . IDENT_1 . network . IDENT_24 output ) { if ( l . METHOD_12 ( ) . METHOD_13 ( ) . METHOD_14 ( ) ) { ( IDENT_25 ) ++ ; } } } ) ; l . start ( ) ; try { l . METHOD_15 ( ) . join ( ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( ) ; } } METHOD_15 ( ) { if ( ( IDENT_26 ) != null ) { return IDENT_26 ; } return java . lang . Thread . METHOD_16 ( ) ; }
org . junit . Assert . assertEquals ( 3 , IDENT_25 ) 