METHOD_0 ( ) { java . lang . Object [ ] n = new java . lang . Object [ ] { STRING_0 , org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . path ( STRING_1 ) } ; org . IDENT_0 . IDENT_1 . network . IDENT_4 . IDENT_5 < java . io . File > IDENT_4 = ( ( org . IDENT_0 . IDENT_1 . network . IDENT_4 . IDENT_5 < java . io . File > ) ( org . IDENT_0 . IDENT_1 . network . IDENT_4 . IDENT_6 . create ( IDENT_7 :: create , org . IDENT_0 . IDENT_1 . network . IDENT_4 . IDENT_8 . create ( IDENT_9 :: path , n ) ) ) ) ; org . IDENT_0 . IDENT_1 . IDENT_10 p = METHOD_1 ( ) ; p = p . METHOD_2 ( org . IDENT_0 . IDENT_1 . network . IDENT_11 . IDENT_11 . METHOD_3 ( ) ) ; IDENT_4 . METHOD_4 ( p ) ; org . IDENT_0 . IDENT_1 . serialize . IDENT_12 config = new org . IDENT_0 . IDENT_1 . serialize . METHOD_5 ( STRING_2 , org . IDENT_0 . IDENT_1 . serialize . METHOD_5 . IDENT_13 ) ; org . IDENT_0 . IDENT_1 . network . IDENT_14 api = org . IDENT_0 . IDENT_1 . network . IDENT_15 . get ( config ) ; byte [ ] bytes = api . write ( IDENT_4 ) ; org . IDENT_0 . IDENT_1 . network . IDENT_4 . IDENT_5 < java . io . File > IDENT_16 = api . read ( bytes ) ; boolean b = com . IDENT_17 . util . IDENT_18 . METHOD_6 ( IDENT_16 , IDENT_4 ) ; METHOD_7 ( IDENT_16 , IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( java . lang . Object , java . lang . Object ) { try { org . junit . Assert . assertTrue ( com . IDENT_17 . util . IDENT_18 . METHOD_6 ( IDENT_19 , IDENT_20 ) ) ; System . out . println ( ( ( ( ( ( ( ( STRING_3 + ( IDENT_19 . getClass ( ) . METHOD_8 ( ) ) ) + STRING_4 ) + IDENT_19 ) + STRING_5 ) + ( IDENT_19 . getClass ( ) . METHOD_8 ( ) ) ) + STRING_4 ) + IDENT_20 ) ) ; } catch ( java . lang . IDENT_21 IDENT_22 ) { System . out . println ( ( ( ( ( ( ( ( STRING_3 + ( IDENT_19 . getClass ( ) . METHOD_8 ( ) ) ) + STRING_4 ) + IDENT_19 ) + STRING_6 ) + ( IDENT_19 . getClass ( ) . METHOD_8 ( ) ) ) + STRING_4 ) + IDENT_20 ) ) ; } }
org . junit . Assert . assertTrue ( b ) 