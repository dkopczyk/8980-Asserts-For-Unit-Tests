METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . network . IDENT_2 IDENT_3 = org . IDENT_0 . IDENT_1 . network . IDENT_2 . builder ( ) . METHOD_1 ( STRING_0 ) . METHOD_1 ( STRING_1 ) . METHOD_1 ( STRING_2 ) . build ( ) ; org . IDENT_0 . IDENT_1 . network . IDENT_4 . IDENT_5 < java . lang . String [ ] > IDENT_6 = new org . IDENT_0 . IDENT_1 . network . IDENT_4 . METHOD_2 ( org . IDENT_0 . IDENT_1 . network . IDENT_4 . IDENT_7 . create ( IDENT_8 :: IDENT_9 , new java . lang . Object [ ] { "name" , IDENT_3 } ) ) ; org . IDENT_0 . IDENT_1 . serialize . IDENT_10 config = new org . IDENT_0 . IDENT_1 . serialize . METHOD_3 ( STRING_3 , org . IDENT_0 . IDENT_1 . serialize . METHOD_3 . IDENT_11 ) ; org . IDENT_0 . IDENT_1 . network . IDENT_12 api = org . IDENT_0 . IDENT_1 . network . IDENT_13 . get ( config ) ; byte [ ] bytes = api . write ( IDENT_6 ) ; org . IDENT_0 . IDENT_1 . network . IDENT_4 . METHOD_2 < java . lang . String [ ] > IDENT_14 = api . read ( bytes ) ; boolean b = com . IDENT_15 . util . IDENT_16 . METHOD_4 ( IDENT_14 , IDENT_6 ) ; METHOD_5 ( IDENT_14 , IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . Object , java . lang . Object ) { try { org . junit . Assert . assertTrue ( com . IDENT_15 . util . IDENT_16 . METHOD_4 ( IDENT_17 , IDENT_18 ) ) ; System . out . println ( ( ( ( ( ( ( ( STRING_4 + ( IDENT_17 . getClass ( ) . METHOD_6 ( ) ) ) + STRING_5 ) + IDENT_17 ) + STRING_6 ) + ( IDENT_17 . getClass ( ) . METHOD_6 ( ) ) ) + STRING_5 ) + IDENT_18 ) ) ; } catch ( java . lang . IDENT_19 IDENT_20 ) { System . out . println ( ( ( ( ( ( ( ( STRING_4 + ( IDENT_17 . getClass ( ) . METHOD_6 ( ) ) ) + STRING_5 ) + IDENT_17 ) + STRING_7 ) + ( IDENT_17 . getClass ( ) . METHOD_6 ( ) ) ) + STRING_5 ) + IDENT_18 ) ) ; } }
org . junit . Assert . assertTrue ( b ) 