METHOD_0 ( ) { java . util . List < java . lang . Integer > IDENT_0 = java . util . Arrays . asList ( new java . lang . Integer [ ] { 7 , 12 , 16 } ) ; java . util . List < java . lang . Integer > IDENT_1 = java . util . Arrays . asList ( new java . lang . Integer [ ] { 3 , 4 , 5 } ) ; java . util . List < java . lang . Integer > IDENT_2 = java . util . Arrays . asList ( new java . lang . Integer [ ] { 3 , 3 , 4 , 5 } ) ; java . util . List < java . lang . Integer > IDENT_3 = java . util . Arrays . asList ( new java . lang . Integer [ ] { 3 , 3 , 4 , 5 } ) ; java . util . function . IDENT_4 < java . lang . Integer , java . lang . Integer > IDENT_5 = java . util . function . IDENT_4 . METHOD_1 ( ) ; java . util . function . IDENT_4 < java . lang . Integer , java . lang . Integer > IDENT_6 = ( x ) -> x * 3 ; java . util . function . IDENT_4 < java . lang . Integer , java . lang . Integer > IDENT_7 = ( x ) -> x * 4 ; java . util . function . IDENT_4 < java . lang . Integer , java . lang . Integer > IDENT_8 = ( x ) -> x * 5 ; @ org . IDENT_9 . IDENT_10 . util . METHOD_2 ( { STRING_0 , STRING_1 } ) org . IDENT_9 . IDENT_10 . util . IDENT_11 < java . lang . Integer > m = org . IDENT_9 . IDENT_10 . util . IDENT_11 . of ( new IDENT_12 . lang . METHOD_3 ( IDENT_0 , METHOD_1 ) , new IDENT_12 . lang . METHOD_3 ( IDENT_1 , IDENT_6 ) , new IDENT_12 . lang . METHOD_3 ( IDENT_2 , IDENT_7 ) , new IDENT_12 . lang . METHOD_3 ( IDENT_3 , IDENT_8 ) ) ; java . util . List < org . IDENT_9 . IDENT_10 . util . IDENT_13 > IDENT_14 = java . util . Arrays . asList ( new org . IDENT_9 . IDENT_10 . util . IDENT_13 [ ] { new org . IDENT_9 . IDENT_10 . util . METHOD_4 ( 7 , list ( 7 ) , IDENT_15 , IDENT_15 , IDENT_15 ) , new org . IDENT_9 . IDENT_10 . util . METHOD_4 ( 9 , IDENT_15 , list ( 3 ) , IDENT_15 , IDENT_15 ) , new org . IDENT_9 . IDENT_10 . util . METHOD_4 ( 12 , list ( 12 ) , list ( 4 ) , list ( 3 , 3 ) , IDENT_15 ) , new org . IDENT_9 . IDENT_10 . util . METHOD_4 ( 15 , IDENT_15 , list ( 5 ) , IDENT_15 , list ( 3 , 3 ) ) , new org . IDENT_9 . IDENT_10 . util . METHOD_4 ( 16 , list ( 16 ) , IDENT_15 , list ( 4 ) , IDENT_15 ) , new org . IDENT_9 . IDENT_10 . util . METHOD_4 ( 20 , IDENT_15 , IDENT_15 , list ( 5 ) , list ( 4 ) ) , new org . IDENT_9 . IDENT_10 . util . METHOD_4 ( INT_0 , IDENT_15 , IDENT_15 , IDENT_15 , list ( 5 ) ) } ) ; int i = 0 ; for ( org . IDENT_9 . IDENT_10 . util . METHOD_4 t : m ) { int j = 0 ; for ( java . lang . Object o : t . METHOD_5 ( ) ) { "<AssertPlaceHolder>" ; j ++ ; } i ++ ; } } get ( int ) { return IDENT_16 . get ( key ) ; }
org . junit . Assert . assertEquals ( o , IDENT_14 . get ( i ) . get ( j ) ) 