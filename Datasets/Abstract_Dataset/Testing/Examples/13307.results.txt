METHOD_0 ( ) { org . apache . hadoop . conf . Configuration conf = new org . apache . hadoop . conf . Configuration ( ) ; conf . METHOD_1 ( IDENT_0 . IDENT_1 , 3 ) ; org . apache . hadoop . crypto . key . IDENT_2 . IDENT_3 IDENT_4 = mock ( org . apache . hadoop . crypto . key . IDENT_2 . IDENT_3 . class ) ; when ( IDENT_4 . METHOD_2 ( org . mockito . Mockito . anyString ( ) , org . mockito . Mockito . any ( org . apache . hadoop . crypto . key . IDENT_5 . IDENT_6 . class ) ) ) . METHOD_3 ( new org . apache . hadoop . security . METHOD_4 ( STRING_0 ) ) ; org . apache . hadoop . crypto . key . IDENT_2 . IDENT_3 IDENT_7 = mock ( org . apache . hadoop . crypto . key . IDENT_2 . IDENT_3 . class ) ; when ( IDENT_7 . METHOD_2 ( org . mockito . Mockito . anyString ( ) , org . mockito . Mockito . any ( org . apache . hadoop . crypto . key . IDENT_5 . IDENT_6 . class ) ) ) . METHOD_3 ( new java . io . IOException ( STRING_1 ) ) ; org . apache . hadoop . crypto . key . IDENT_2 . IDENT_3 IDENT_8 = mock ( org . apache . hadoop . crypto . key . IDENT_2 . IDENT_3 . class ) ; when ( IDENT_8 . METHOD_2 ( org . mockito . Mockito . anyString ( ) , org . mockito . Mockito . any ( org . apache . hadoop . crypto . key . IDENT_5 . IDENT_6 . class ) ) ) . METHOD_3 ( new java . io . IOException ( STRING_2 ) ) ; when ( IDENT_4 . METHOD_5 ( ) ) . thenReturn ( STRING_0 ) ; when ( IDENT_7 . METHOD_5 ( ) ) . thenReturn ( STRING_1 ) ; when ( IDENT_8 . METHOD_5 ( ) ) . thenReturn ( STRING_2 ) ; org . apache . hadoop . crypto . key . IDENT_2 . IDENT_9 IDENT_10 = new org . apache . hadoop . crypto . key . IDENT_2 . METHOD_6 ( new org . apache . hadoop . crypto . key . IDENT_2 . IDENT_3 [ ] { IDENT_4 , IDENT_7 , IDENT_8 } , 0 , conf ) ; try { IDENT_10 . METHOD_2 ( STRING_3 , new org . apache . hadoop . crypto . key . IDENT_5 . METHOD_7 ( conf ) ) ; org . junit . Assert . fail ( STRING_4 ) ; } catch ( java . lang . Exception e ) { "<AssertPlaceHolder>" ; } verify ( IDENT_4 , org . mockito . Mockito . times ( 1 ) ) . METHOD_2 ( org . mockito . Mockito . eq ( STRING_3 ) , org . mockito . Mockito . any ( org . apache . hadoop . crypto . key . IDENT_5 . METHOD_7 . class ) ) ; verify ( IDENT_7 , org . mockito . Mockito . METHOD_8 ( ) ) . METHOD_2 ( org . mockito . Mockito . eq ( STRING_3 ) , org . mockito . Mockito . any ( org . apache . hadoop . crypto . key . IDENT_5 . METHOD_7 . class ) ) ; verify ( IDENT_8 , org . mockito . Mockito . METHOD_8 ( ) ) . METHOD_2 ( org . mockito . Mockito . eq ( STRING_3 ) , org . mockito . Mockito . any ( org . apache . hadoop . crypto . key . IDENT_5 . METHOD_7 . class ) ) ; } fail ( java . lang . String ) { System . err . println ( message ) ; System . err . println ( STRING_5 ) ; throw new java . lang . IllegalArgumentException ( message ) ; }
org . junit . Assert . assertTrue ( ( e instanceof org . apache . hadoop . security . METHOD_4 ) ) 