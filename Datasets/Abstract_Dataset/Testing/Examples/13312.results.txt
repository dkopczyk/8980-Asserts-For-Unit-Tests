METHOD_0 ( ) { org . apache . hadoop . conf . Configuration conf = new org . apache . hadoop . conf . Configuration ( ) ; conf . METHOD_1 ( IDENT_0 . IDENT_1 , 2 ) ; final java . lang . String IDENT_2 = "test" ; final java . lang . String IDENT_3 = STRING_0 ; org . apache . hadoop . crypto . key . IDENT_4 . IDENT_5 IDENT_6 = mock ( org . apache . hadoop . crypto . key . IDENT_4 . IDENT_5 . class ) ; java . lang . Exception IDENT_7 = new java . net . METHOD_2 ( IDENT_3 ) ; when ( IDENT_6 . METHOD_3 ( org . mockito . Mockito . anyString ( ) ) ) . METHOD_4 ( IDENT_7 ) ; org . apache . hadoop . crypto . key . IDENT_4 . IDENT_5 IDENT_8 = mock ( org . apache . hadoop . crypto . key . IDENT_4 . IDENT_5 . class ) ; when ( IDENT_8 . METHOD_3 ( org . mockito . Mockito . anyString ( ) ) ) . METHOD_4 ( new java . net . METHOD_2 ( STRING_1 ) ) ; when ( IDENT_6 . METHOD_5 ( ) ) . thenReturn ( STRING_2 ) ; when ( IDENT_8 . METHOD_5 ( ) ) . thenReturn ( STRING_3 ) ; org . apache . hadoop . crypto . key . IDENT_4 . IDENT_9 IDENT_10 = new org . apache . hadoop . crypto . key . IDENT_4 . METHOD_6 ( new org . apache . hadoop . crypto . key . IDENT_4 . IDENT_5 [ ] { IDENT_6 , IDENT_8 } , 0 , conf ) ; java . lang . Exception IDENT_11 = METHOD_7 ( java . net . METHOD_2 . class , ( STRING_4 + IDENT_3 ) , ( ) -> IDENT_10 . METHOD_3 ( IDENT_2 ) ) ; "<AssertPlaceHolder>" ; verify ( IDENT_6 , org . mockito . Mockito . times ( 2 ) ) . METHOD_3 ( org . mockito . Mockito . eq ( IDENT_2 ) ) ; verify ( IDENT_8 , org . mockito . Mockito . times ( 1 ) ) . METHOD_3 ( org . mockito . Mockito . eq ( IDENT_2 ) ) ; } METHOD_3 ( java . lang . String ) { return null ; }
org . junit . Assert . assertEquals ( IDENT_7 , IDENT_11 ) 