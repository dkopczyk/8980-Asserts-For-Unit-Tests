METHOD_0 ( ) { org . nuxeo . ecm . core . storage . sql . IDENT_0 IDENT_1 = repository . METHOD_1 ( ) ; org . nuxeo . ecm . core . storage . sql . Node IDENT_2 = IDENT_1 . METHOD_2 ( ) ; org . nuxeo . ecm . core . storage . sql . Node IDENT_3 = IDENT_1 . METHOD_3 ( IDENT_2 , "foo" , null , STRING_0 , false ) ; IDENT_1 . save ( ) ; org . nuxeo . ecm . core . storage . sql . IDENT_0 IDENT_4 = repository . METHOD_1 ( ) ; org . nuxeo . ecm . core . storage . sql . Node IDENT_5 = IDENT_4 . METHOD_2 ( ) ; org . nuxeo . ecm . core . storage . sql . Node IDENT_6 = IDENT_4 . METHOD_3 ( IDENT_5 , "foo" , null , STRING_0 , false ) ; try { IDENT_4 . save ( ) ; } catch ( org . nuxeo . ecm . core . api . IDENT_7 e ) { return ; } org . nuxeo . ecm . core . storage . sql . IDENT_0 IDENT_8 = repository . METHOD_1 ( ) ; org . nuxeo . ecm . core . storage . sql . Node IDENT_9 = IDENT_8 . METHOD_2 ( ) ; org . nuxeo . ecm . core . storage . sql . Node IDENT_10 = IDENT_8 . METHOD_4 ( IDENT_9 , "foo" , false ) ; "<AssertPlaceHolder>" ; } getId ( ) { return id ; }
org . junit . Assert . assertTrue ( ( ( IDENT_10 . getId ( ) . equals ( IDENT_3 . getId ( ) ) ) || ( IDENT_10 . getId ( ) . equals ( IDENT_6 . getId ( ) ) ) ) ) 