METHOD_0 ( ) { org . nuxeo . ecm . core . api . IDENT_0 doc = session . METHOD_1 ( "/" , STRING_0 , STRING_1 ) ; doc . METHOD_2 ( STRING_2 , ( ( java . io . IDENT_1 ) ( java . util . Arrays . asList ( org . nuxeo . ecm . core . IDENT_2 . map ( "foo" , STRING_3 , "bar" , STRING_4 ) ) ) ) ) ; doc = session . METHOD_3 ( doc ) ; session . save ( ) ; java . util . List < java . util . Map < java . lang . String , java . io . IDENT_1 > > IDENT_3 = java . util . Arrays . asList ( org . nuxeo . ecm . core . IDENT_2 . map ( "foo" , STRING_5 ) ) ; doc . METHOD_2 ( STRING_2 , ( ( java . io . IDENT_1 ) ( IDENT_3 ) ) ) ; doc = session . METHOD_4 ( doc ) ; session . save ( ) ; @ org . nuxeo . ecm . core . METHOD_5 ( STRING_6 ) java . util . List < java . util . Map < java . lang . String , java . io . IDENT_1 > > IDENT_4 = ( ( java . util . List < java . util . Map < java . lang . String , java . io . IDENT_1 > > ) ( doc . METHOD_6 ( STRING_2 ) ) ) ; java . util . List < java . util . Map < java . lang . String , java . io . IDENT_1 > > IDENT_5 ; if ( IDENT_6 . METHOD_7 ( ) ) { IDENT_5 = java . util . Arrays . asList ( org . nuxeo . ecm . core . IDENT_2 . map ( "foo" , STRING_5 , "bar" , null ) ) ; } else { IDENT_5 = java . util . Arrays . asList ( org . nuxeo . ecm . core . IDENT_2 . map ( "foo" , STRING_5 , "bar" , STRING_4 ) ) ; } "<AssertPlaceHolder>" ; } METHOD_7 ( ) { return IDENT_7 ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_4 ) 