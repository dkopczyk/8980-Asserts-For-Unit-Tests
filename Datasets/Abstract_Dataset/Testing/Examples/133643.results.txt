METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; final long IDENT_2 = INT_0 ; for ( int i = 0 ; i < IDENT_2 ; i ++ ) { if ( ( i OP_0 2 ) == 0 ) { org . nuxeo . ecm . core . api . IDENT_3 IDENT_4 = IDENT_5 . METHOD_1 ( ) ; IDENT_4 . setProperty ( STRING_2 , STRING_3 , ( IDENT_0 + i ) ) ; IDENT_4 = IDENT_5 . METHOD_2 ( IDENT_4 ) ; if ( i == 0 ) { IDENT_5 . METHOD_3 ( IDENT_4 ) ; } } else { org . nuxeo . ecm . core . api . IDENT_3 IDENT_6 = IDENT_5 . METHOD_4 ( ) ; IDENT_6 . setProperty ( STRING_4 , STRING_5 , ( IDENT_1 + i ) ) ; IDENT_6 = IDENT_5 . METHOD_5 ( IDENT_6 ) ; if ( i == ( IDENT_2 - 1 ) ) { IDENT_5 . METHOD_6 ( IDENT_6 ) ; } } } org . nuxeo . elasticsearch . IDENT_7 . METHOD_7 ( ) ; java . util . Map < java . lang . String , java . io . IDENT_8 > props = new java . util . HashMap < java . lang . String , java . io . IDENT_8 > ( ) ; props . put ( IDENT_9 . IDENT_10 , ( ( java . io . IDENT_8 ) ( session ) ) ) ; org . nuxeo . ecm . platform . query . api . IDENT_11 < ? > IDENT_12 = IDENT_13 . METHOD_8 ( IDENT_14 . IDENT_15 , null , IDENT_2 , 0L , props , session . METHOD_9 ( ) . getId ( ) ) ; java . util . List < org . nuxeo . ecm . core . api . IDENT_3 > IDENT_16 = ( ( java . util . List < org . nuxeo . ecm . core . api . IDENT_3 > ) ( IDENT_12 . METHOD_10 ( ) ) ) ; "<AssertPlaceHolder>" ; } size ( ) { return METHOD_11 ( ) . size ( ) ; }
org . junit . Assert . assertEquals ( ( IDENT_2 - 2 ) , IDENT_16 . size ( ) ) 