METHOD_0 ( ) { java . lang . String token = com . IDENT_0 . IDENT_1 . IDENT_2 . create ( ) . METHOD_1 ( org . nuxeo . ecm . IDENT_1 . IDENT_3 . IDENT_4 ) . METHOD_2 ( org . nuxeo . ecm . IDENT_1 . IDENT_5 . IDENT_6 ) . METHOD_3 ( com . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . METHOD_4 ( org . nuxeo . ecm . IDENT_1 . IDENT_5 . IDENT_9 ) ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . String ) { java . util . IDENT_10 . METHOD_6 ( token ) ; com . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 algorithm = METHOD_7 ( ) ; if ( algorithm == null ) { org . nuxeo . ecm . IDENT_1 . IDENT_3 . log . debug ( STRING_0 ) ; return null ; } com . IDENT_0 . IDENT_1 . IDENT_11 IDENT_12 = com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_8 ( algorithm ) . METHOD_1 ( org . nuxeo . ecm . IDENT_1 . IDENT_3 . IDENT_4 ) . build ( ) ; com . IDENT_0 . IDENT_1 . interfaces . IDENT_13 IDENT_1 ; try { IDENT_1 = IDENT_12 . verify ( token ) ; } catch ( com . IDENT_0 . IDENT_1 . exceptions . IDENT_14 e ) { if ( org . nuxeo . ecm . IDENT_1 . IDENT_3 . log . METHOD_9 ( ) ) { org . nuxeo . ecm . IDENT_1 . IDENT_3 . log . trace ( ( STRING_1 + ( e . toString ( ) ) ) ) ; } return null ; } java . lang . Object payload = org . nuxeo . ecm . IDENT_1 . IDENT_3 . METHOD_10 ( IDENT_1 , STRING_2 ) ; java . util . Map < java . lang . String , com . fasterxml . jackson . databind . IDENT_15 > tree = org . nuxeo . ecm . IDENT_1 . IDENT_3 . METHOD_10 ( payload , STRING_3 ) ; return tree . entrySet ( ) . stream ( ) . collect ( java . util . stream . IDENT_16 . METHOD_11 ( Entry :: getKey , ( e ) -> METHOD_12 ( e . getValue ( ) ) ) ) ; }
org . junit . Assert . assertNotNull ( service . METHOD_5 ( token ) ) 