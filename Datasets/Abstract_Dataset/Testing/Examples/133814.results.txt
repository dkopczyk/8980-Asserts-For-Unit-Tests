METHOD_0 ( ) { org . nuxeo . ecm . platform . url . codec . IDENT_0 codec = new org . nuxeo . ecm . platform . url . codec . METHOD_1 ( ) ; java . lang . String url = STRING_0 ; org . nuxeo . ecm . platform . url . api . IDENT_1 IDENT_2 = codec . METHOD_2 ( url ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { final java . util . regex . IDENT_3 pattern = java . util . regex . IDENT_3 . METHOD_3 ( ( ( METHOD_4 ( ) ) + ( org . nuxeo . ecm . platform . IDENT_4 . codec . IDENT_5 . IDENT_6 ) ) ) ; java . util . regex . IDENT_7 m = pattern . matcher ( url ) ; if ( m . matches ( ) ) { final java . lang . String server = m . group ( 1 ) ; java . lang . String IDENT_8 = m . group ( 2 ) ; final org . nuxeo . ecm . core . api . IDENT_9 IDENT_10 = new org . nuxeo . ecm . core . api . METHOD_5 ( IDENT_8 ) ; java . util . Map < java . lang . String , java . lang . String > params = new java . util . HashMap ( ) ; final java . lang . String property = m . group ( 3 ) ; params . put ( org . nuxeo . ecm . platform . IDENT_4 . codec . IDENT_5 . IDENT_11 , property ) ; final org . nuxeo . ecm . core . api . IDENT_12 IDENT_13 = new org . nuxeo . ecm . core . api . impl . METHOD_6 ( server , IDENT_10 ) ; final org . nuxeo . ecm . platform . url . api . IDENT_1 IDENT_2 = new org . nuxeo . ecm . platform . url . METHOD_7 ( IDENT_13 , null , params ) ; return IDENT_2 ; } return null ; }
org . junit . Assert . assertNull ( IDENT_2 ) 