METHOD_0 ( ) { gov . IDENT_0 . IDENT_1 . model . job . IDENT_2 IDENT_3 = new gov . IDENT_0 . IDENT_1 . model . job . METHOD_1 ( ) ; IDENT_3 . METHOD_2 ( IDENT_4 ) ; IDENT_3 . METHOD_3 ( STRING_0 ) ; IDENT_3 . METHOD_4 ( 1000 ) ; IDENT_3 . METHOD_5 ( STRING_1 ) ; int res = IDENT_5 . METHOD_6 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( gov . IDENT_0 . IDENT_1 . model . job . METHOD_1 ) { java . lang . String sql = ( ( STRING_2 + ( METHOD_7 ( ) ) ) + STRING_3 ) + STRING_4 ; try { return run . query ( sql , new org . apache . commons . IDENT_6 . IDENT_7 < java . lang . Integer > ( ) { @ gov . IDENT_0 . IDENT_1 . dao . model . Override public gov . IDENT_0 . IDENT_1 . dao . model . Integer METHOD_8 ( java . sql . ResultSet rs ) throws java . sql . IDENT_8 { return rs . next ( ) ? rs . METHOD_9 ( STRING_5 ) : - 1 ; } } , p . METHOD_10 ( ) . getId ( ) , p . METHOD_11 ( ) , p . METHOD_12 ( ) , p . METHOD_13 ( ) , p . METHOD_14 ( ) , p . METHOD_15 ( ) , p . METHOD_16 ( ) , p . METHOD_17 ( ) , p . METHOD_18 ( ) ) ; } catch ( java . sql . IDENT_8 ex ) { logger . error ( STRING_6 , ex ) ; } return - 1 ; }
org . junit . Assert . assertNotNull ( res ) 