METHOD_0 ( ) { org . apache . hadoop . fs . shell . find . IDENT_0 and = new org . apache . hadoop . fs . shell . find . METHOD_1 ( ) ; org . apache . hadoop . fs . shell . IDENT_1 IDENT_2 = mock ( org . apache . hadoop . fs . shell . IDENT_1 . class ) ; org . apache . hadoop . fs . shell . find . IDENT_3 first = mock ( org . apache . hadoop . fs . shell . find . IDENT_3 . class ) ; when ( first . apply ( IDENT_2 , ( - 1 ) ) ) . thenReturn ( Result . IDENT_4 ) ; org . apache . hadoop . fs . shell . find . IDENT_3 IDENT_5 = mock ( org . apache . hadoop . fs . shell . find . IDENT_3 . class ) ; when ( IDENT_5 . apply ( IDENT_2 , ( - 1 ) ) ) . thenReturn ( Result . IDENT_6 ) ; java . util . IDENT_7 < org . apache . hadoop . fs . shell . find . IDENT_3 > IDENT_8 = new java . util . IDENT_9 < org . apache . hadoop . fs . shell . find . IDENT_3 > ( ) ; IDENT_8 . add ( IDENT_5 ) ; IDENT_8 . add ( first ) ; and . METHOD_2 ( IDENT_8 ) ; "<AssertPlaceHolder>" ; verify ( first ) . apply ( IDENT_2 , ( - 1 ) ) ; verify ( IDENT_5 ) . apply ( IDENT_2 , ( - 1 ) ) ; METHOD_3 ( first ) ; METHOD_3 ( IDENT_5 ) ; } apply ( org . apache . hadoop . fs . shell . IDENT_1 , int ) { java . lang . String name = getPath ( item ) . getName ( ) ; if ( ! ( IDENT_10 ) ) { name = org . apache . hadoop . util . StringUtils . toLowerCase ( name ) ; } if ( IDENT_11 . matches ( name ) ) { return Result . IDENT_4 ; } else { return Result . IDENT_12 ; } }
org . junit . Assert . assertEquals ( Result . IDENT_6 , and . apply ( IDENT_2 , ( - 1 ) ) ) 