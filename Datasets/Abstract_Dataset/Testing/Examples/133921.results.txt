METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . String > spec = org . mockito . Mockito . mock ( org . IDENT_0 . IDENT_1 . IDENT_2 . message . IDENT_3 . IDENT_4 . class ) ; doReturn ( new org . IDENT_0 . IDENT_1 . IDENT_2 . message . Response ( org . IDENT_0 . IDENT_1 . IDENT_2 . message . Response . IDENT_5 , spec ) ) . when ( target ) . METHOD_1 ( STRING_0 , spec ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . message . Response IDENT_6 = org . IDENT_7 . reflect . IDENT_8 . METHOD_2 ( target , STRING_1 , STRING_2 , spec ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . Object ) { org . IDENT_0 . IDENT_1 . core . component . IDENT_9 . log . debug ( "" ) ; try { org . IDENT_0 . IDENT_1 . IDENT_2 . message . Response IDENT_6 = METHOD_3 ( IDENT_10 . Method . IDENT_11 , path , body ) ; if ( IDENT_6 . METHOD_4 ( STRING_3 ) ) { org . IDENT_0 . IDENT_1 . core . component . IDENT_9 . log . warn ( STRING_4 , IDENT_6 . IDENT_12 ) ; } return IDENT_6 ; } catch ( java . lang . Exception e ) { org . IDENT_0 . IDENT_1 . core . component . IDENT_9 . log . error ( STRING_5 , e ) ; return new org . IDENT_0 . IDENT_1 . IDENT_2 . message . Response ( org . IDENT_0 . IDENT_1 . IDENT_2 . message . Response . IDENT_13 , null ) ; } }
org . junit . Assert . assertThat ( IDENT_6 . IDENT_12 , org . hamcrest . CoreMatchers . is ( Response . IDENT_5 ) ) 