METHOD_0 ( ) { org . IDENT_0 . type . IDENT_1 value = org . IDENT_0 . type . IDENT_2 . METHOD_1 ( STRING_0 ) ; "<AssertPlaceHolder>" ; verify ( target , times ( 1 ) ) . METHOD_2 ( value ) ; } METHOD_2 ( org . IDENT_0 . type . IDENT_1 ) { org . IDENT_0 . type . IDENT_3 map = value . METHOD_3 ( ) ; org . IDENT_0 . type . IDENT_1 IDENT_4 = map . get ( org . IDENT_0 . type . IDENT_2 . METHOD_1 ( STRING_1 ) ) ; if ( IDENT_4 != null ) { IDENT_5 = IDENT_4 . METHOD_4 ( ) . getString ( ) ; } else { return false ; } org . IDENT_0 . type . IDENT_1 IDENT_6 = map . get ( org . IDENT_0 . type . IDENT_2 . METHOD_1 ( STRING_2 ) ) ; if ( IDENT_6 != null ) { org . IDENT_0 . type . IDENT_3 IDENT_7 = IDENT_6 . METHOD_3 ( ) ; for ( java . util . Map . Entry < org . IDENT_0 . type . IDENT_1 , org . IDENT_0 . type . IDENT_1 > entry : IDENT_7 . entrySet ( ) ) { if ( ( entry . getKey ( ) . METHOD_5 ( ) ) || ( entry . getValue ( ) . METHOD_5 ( ) ) ) { return false ; } java . lang . String IDENT_8 = entry . getKey ( ) . METHOD_4 ( ) . getString ( ) ; org . IDENT_0 . type . IDENT_9 IDENT_10 = entry . getValue ( ) . METHOD_6 ( ) ; for ( org . IDENT_0 . type . IDENT_1 IDENT_11 : IDENT_10 ) { java . lang . String event = IDENT_11 . METHOD_4 ( ) . getString ( ) ; METHOD_7 ( IDENT_8 , event ) ; } } } return true ; }
org . junit . Assert . assertThat ( target . METHOD_2 ( value ) , org . hamcrest . CoreMatchers . is ( false ) ) 