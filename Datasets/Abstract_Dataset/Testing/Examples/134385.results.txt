METHOD_0 ( ) { org . IDENT_0 . type . IDENT_1 IDENT_2 = org . IDENT_0 . type . IDENT_3 . METHOD_1 ( STRING_0 ) ; org . IDENT_0 . type . IDENT_1 IDENT_4 = org . IDENT_0 . type . IDENT_3 . METHOD_1 ( STRING_1 ) ; org . IDENT_0 . type . IDENT_1 IDENT_5 = org . IDENT_0 . type . IDENT_3 . METHOD_1 ( STRING_2 ) ; org . IDENT_0 . type . IDENT_1 IDENT_6 = org . IDENT_0 . type . IDENT_3 . METHOD_1 ( STRING_3 ) ; org . IDENT_0 . type . IDENT_1 IDENT_7 = org . IDENT_0 . type . IDENT_3 . METHOD_1 ( STRING_4 ) ; org . IDENT_0 . type . IDENT_1 IDENT_8 = org . IDENT_0 . type . IDENT_3 . METHOD_1 ( STRING_5 ) ; org . IDENT_0 . type . IDENT_1 IDENT_9 = org . IDENT_0 . type . IDENT_3 . METHOD_2 ( new org . IDENT_0 . type . IDENT_1 [ ] { IDENT_7 , IDENT_8 } ) ; org . IDENT_0 . type . IDENT_1 IDENT_10 = org . IDENT_0 . type . IDENT_3 . METHOD_3 ( new org . IDENT_0 . type . IDENT_1 [ ] { IDENT_6 , IDENT_9 } ) ; org . IDENT_0 . type . IDENT_1 IDENT_11 = org . IDENT_0 . type . IDENT_3 . METHOD_3 ( new org . IDENT_0 . type . IDENT_1 [ ] { IDENT_2 , IDENT_4 , IDENT_5 , IDENT_10 } ) ; boolean result = IDENT_12 . METHOD_4 ( IDENT_11 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . IDENT_0 . type . IDENT_1 ) { org . IDENT_0 . type . IDENT_13 map = value . METHOD_5 ( ) ; org . IDENT_0 . type . IDENT_1 IDENT_14 = map . get ( org . IDENT_0 . type . IDENT_3 . METHOD_1 ( STRING_0 ) ) ; if ( IDENT_14 != null ) { IDENT_15 = IDENT_14 . METHOD_6 ( ) . getString ( ) ; } else { return false ; } org . IDENT_0 . type . IDENT_1 IDENT_16 = map . get ( org . IDENT_0 . type . IDENT_3 . METHOD_1 ( STRING_2 ) ) ; if ( IDENT_16 != null ) { org . IDENT_0 . type . IDENT_13 IDENT_17 = IDENT_16 . METHOD_5 ( ) ; for ( java . util . Map . Entry < org . IDENT_0 . type . IDENT_1 , org . IDENT_0 . type . IDENT_1 > entry : IDENT_17 . entrySet ( ) ) { if ( ( entry . getKey ( ) . METHOD_7 ( ) ) || ( entry . getValue ( ) . METHOD_7 ( ) ) ) { return false ; } java . lang . String IDENT_18 = entry . getKey ( ) . METHOD_6 ( ) . getString ( ) ; org . IDENT_0 . type . IDENT_19 IDENT_20 = entry . getValue ( ) . METHOD_8 ( ) ; for ( org . IDENT_0 . type . IDENT_1 IDENT_21 : IDENT_20 ) { java . lang . String event = IDENT_21 . METHOD_6 ( ) . getString ( ) ; METHOD_9 ( IDENT_18 , event ) ; } } } return true ; }
org . junit . Assert . assertThat ( result , org . hamcrest . CoreMatchers . is ( true ) ) 