METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . test . IDENT_2 IDENT_3 = IDENT_4 . METHOD_1 ( ) ; com . IDENT_0 . IDENT_1 . test . IDENT_5 IDENT_6 = IDENT_3 . METHOD_2 ( STRING_0 ) ; IDENT_6 . METHOD_3 ( new com . IDENT_0 . IDENT_1 . core . METHOD_4 ( STRING_1 ) . METHOD_5 ( STRING_2 , STRING_3 ) ) ; IDENT_6 . METHOD_3 ( new com . IDENT_0 . IDENT_1 . core . METHOD_4 ( STRING_4 ) . METHOD_5 ( STRING_2 , STRING_3 ) ) ; IDENT_6 . METHOD_3 ( new com . IDENT_0 . IDENT_1 . core . METHOD_4 ( STRING_5 ) . METHOD_5 ( STRING_2 , STRING_6 ) ) ; IDENT_6 . METHOD_3 ( new com . IDENT_0 . IDENT_1 . core . METHOD_4 ( STRING_7 ) . METHOD_5 ( STRING_2 , STRING_6 ) ) ; try { com . IDENT_0 . IDENT_1 . api . session . query . IDENT_7 builder = com . IDENT_0 . IDENT_1 . api . session . query . IDENT_7 . METHOD_6 ( IDENT_8 . IDENT_9 ) ; builder . METHOD_7 ( com . IDENT_0 . IDENT_1 . api . session . query . IDENT_7 . METHOD_6 ( ) . field ( STRING_8 ) . value ( STRING_5 ) ) ; builder . METHOD_7 ( com . IDENT_0 . IDENT_1 . api . session . query . IDENT_7 . METHOD_6 ( ) . field ( STRING_2 ) . value ( STRING_6 ) ) ; com . IDENT_0 . IDENT_1 . api . session . query . IDENT_10 executor = IDENT_6 . find ( builder ) ; try ( com . IDENT_0 . IDENT_1 . api . session . query . IDENT_11 result = executor . execute ( ) ) { "<AssertPlaceHolder>" ; } } finally { IDENT_3 . METHOD_8 ( ) ; com . IDENT_0 . IDENT_1 . service . IDENT_12 . METHOD_9 ( ) ; } } size ( ) { return size ; }
org . junit . Assert . assertThat ( result . size ( ) , org . hamcrest . CoreMatchers . is ( 0L ) ) 