METHOD_0 ( ) { int length = 4 ; byte [ ] IDENT_0 = new byte [ length ] ; byte [ ] IDENT_1 = new byte [ length ] ; byte [ ] IDENT_2 = new byte [ length ] ; com . IDENT_3 . IDENT_4 . util . math . IDENT_5 . METHOD_1 ( INT_0 , IDENT_0 , 2 , length , 3 ) ; com . IDENT_3 . IDENT_4 . util . math . IDENT_5 . METHOD_1 ( INT_1 , IDENT_1 , 2 , length , 3 ) ; com . IDENT_3 . IDENT_4 . util . math . IDENT_5 . METHOD_2 ( IDENT_0 , 2 , length , 3 , IDENT_1 , 2 , length , 3 , IDENT_2 , 2 , length , 3 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( byte [ ] , int , int , int ) { int value = 1 ; while ( ( OP_0 length ) >= 0 ) { int j = target [ ( ( offset + length ) & IDENT_6 ) ] ; if ( j < 0 ) { throw new java . lang . METHOD_4 ( STRING_0 ) ; } while ( ( OP_0 j ) >= 0 ) { value = value * ( com . IDENT_3 . IDENT_4 . util . math . IDENT_5 . METHOD_5 ( length ) ) ; } } return value ; }
org . junit . Assert . assertEquals ( ( INT_0 * INT_1 ) , com . IDENT_3 . IDENT_4 . util . math . IDENT_5 . METHOD_3 ( IDENT_2 , 2 , length , 3 ) ) 