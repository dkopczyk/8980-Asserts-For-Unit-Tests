METHOD_0 ( ) { final java . lang . String IDENT_0 = org . apache . hadoop . test . IDENT_1 . METHOD_1 ( ) ; java . io . File IDENT_2 = new java . io . File ( org . apache . hadoop . io . IDENT_3 . IDENT_4 . IDENT_5 , ( IDENT_0 + STRING_0 ) ) ; java . io . File IDENT_6 = new java . io . File ( org . apache . hadoop . io . IDENT_3 . IDENT_4 . IDENT_5 , ( IDENT_0 + STRING_1 ) ) ; final int IDENT_7 = INT_0 ; final int IDENT_8 = INT_1 ; final int IDENT_9 = INT_2 ; final int IDENT_10 = IDENT_7 / IDENT_9 ; java . util . IDENT_11 IDENT_12 = new java . util . METHOD_2 ( IDENT_8 ) ; java . nio . IDENT_13 . IDENT_14 channel = null ; java . io . IDENT_15 IDENT_16 = null ; try { IDENT_16 = new java . io . METHOD_3 ( IDENT_2 , STRING_2 ) ; channel = IDENT_16 . METHOD_4 ( ) ; byte [ ] IDENT_17 = new byte [ IDENT_9 ] ; java . nio . IDENT_18 IDENT_19 ; IDENT_19 = channel . map ( IDENT_20 . IDENT_21 , 0 , IDENT_7 ) ; for ( int i = 0 ; i < IDENT_10 ; i ++ ) { IDENT_12 . METHOD_5 ( IDENT_17 ) ; IDENT_19 . put ( IDENT_17 ) ; } org . apache . hadoop . io . IDENT_3 . IDENT_22 . METHOD_6 ( IDENT_2 , IDENT_6 ) ; "<AssertPlaceHolder>" ; } finally { org . apache . hadoop . io . IDENT_23 . METHOD_7 ( org . apache . hadoop . io . IDENT_3 . IDENT_4 . LOG , channel ) ; org . apache . hadoop . io . IDENT_23 . METHOD_7 ( org . apache . hadoop . io . IDENT_3 . IDENT_4 . LOG , IDENT_16 ) ; org . apache . commons . io . IDENT_24 . METHOD_8 ( org . apache . hadoop . io . IDENT_3 . IDENT_4 . IDENT_5 ) ; } } length ( ) { return IDENT_25 . length ; }
org . junit . Assert . assertEquals ( IDENT_2 . length ( ) , IDENT_6 . length ( ) ) 