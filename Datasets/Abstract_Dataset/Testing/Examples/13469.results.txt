METHOD_0 ( ) { java . io . File IDENT_0 = new java . io . File ( org . apache . hadoop . io . IDENT_1 . IDENT_2 . IDENT_3 , STRING_0 ) ; java . io . File IDENT_4 = new java . io . File ( "/" ) ; java . io . File IDENT_5 = new java . io . File ( org . apache . hadoop . io . IDENT_1 . IDENT_2 . IDENT_3 , STRING_1 ) ; IDENT_5 . METHOD_1 ( ) ; try { org . apache . hadoop . io . IDENT_1 . IDENT_6 . create ( STRING_2 , new java . lang . String [ ] { IDENT_0 . getAbsolutePath ( ) , IDENT_4 . getAbsolutePath ( ) } ) ; org . junit . Assert . fail ( ) ; } catch ( java . io . IOException e ) { } org . apache . hadoop . io . IDENT_1 . IDENT_6 factory = org . apache . hadoop . io . IDENT_1 . IDENT_6 . create ( STRING_2 , new java . lang . String [ ] { IDENT_0 . getAbsolutePath ( ) , IDENT_4 . getAbsolutePath ( ) , IDENT_5 . getAbsolutePath ( ) } ) ; "<AssertPlaceHolder>" ; org . apache . hadoop . fs . IDENT_7 . METHOD_2 ( IDENT_5 ) ; } getAbsolutePath ( ) { final java . lang . String path = getValue ( ) ; return path == null ? null : "/" + path ; }
org . junit . Assert . assertEquals ( IDENT_5 . getAbsolutePath ( ) , factory . getPath ( ) ) 