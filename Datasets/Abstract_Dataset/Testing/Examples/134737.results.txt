METHOD_0 ( ) { org . ocpsoft . IDENT_0 . servlet . config . URL url = org . ocpsoft . IDENT_0 . servlet . config . URL . matches ( STRING_0 ) ; org . ocpsoft . IDENT_0 . mock . IDENT_1 context = new org . ocpsoft . IDENT_0 . mock . METHOD_1 ( ) ; org . ocpsoft . IDENT_0 . util . IDENT_2 . METHOD_2 ( context , url ) ; org . ocpsoft . IDENT_0 . param . IDENT_3 store = org . ocpsoft . IDENT_0 . param . IDENT_4 . getInstance ( context ) ; ( ( org . ocpsoft . IDENT_0 . param . IDENT_5 < ? > ) ( store . get ( STRING_1 ) ) ) . METHOD_3 ( new org . ocpsoft . IDENT_0 . param . METHOD_4 ( STRING_2 ) ) ; ( ( org . ocpsoft . IDENT_0 . param . IDENT_5 < ? > ) ( store . get ( STRING_3 ) ) ) . METHOD_3 ( new org . ocpsoft . IDENT_0 . param . METHOD_4 ( STRING_4 ) ) ; "<AssertPlaceHolder>" ; } evaluate ( org . ocpsoft . IDENT_0 . event . IDENT_6 , org . ocpsoft . IDENT_0 . context . IDENT_7 ) { if ( ( IDENT_8 ) != null ) return condition . matches ( new org . joda . time . METHOD_5 ( IDENT_8 ) ) ; else return condition . matches ( new org . joda . time . METHOD_5 ( ) ) ; }
org . junit . Assert . assertTrue ( url . evaluate ( IDENT_0 , context ) ) 