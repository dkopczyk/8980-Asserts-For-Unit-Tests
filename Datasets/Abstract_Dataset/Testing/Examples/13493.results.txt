METHOD_0 ( ) { final org . apache . hadoop . IDENT_0 . lib . IDENT_1 r = new org . apache . hadoop . IDENT_0 . lib . METHOD_1 ( STRING_0 8 ) ; r . METHOD_2 ( STRING_1 , STRING_2 , 1 ) ; r . METHOD_3 ( STRING_3 , STRING_4 , 1 ) ; r . METHOD_4 ( STRING_0 4 , STRING_5 2 , STRING_0 1 , STRING_6 , 1 ) ; METHOD_5 ( ( STRING_5 5 + STRING_5 0 ) , new java . lang . METHOD_6 ( ) { @ org . apache . hadoop . IDENT_0 . lib . Override public void run ( ) { r . METHOD_2 ( STRING_5 , STRING_5 4 , 2 ) ; } } ) ; METHOD_5 ( ( STRING_5 1 + STRING_5 0 ) , new java . lang . METHOD_6 ( ) { @ org . apache . hadoop . IDENT_0 . lib . Override public void run ( ) { r . METHOD_2 ( STRING_0 5 , STRING_0 6 , 3 ) ; } } ) ; METHOD_5 ( ( STRING_7 + STRING_5 0 ) , new java . lang . METHOD_6 ( ) { @ org . apache . hadoop . IDENT_0 . lib . Override public void run ( ) { r . METHOD_2 ( STRING_0 3 , STRING_0 9 , 4 ) ; } } ) ; METHOD_5 ( ( STRING_0 7 + STRING_5 0 ) , new java . lang . METHOD_6 ( ) { @ org . apache . hadoop . IDENT_0 . lib . Override public void run ( ) { r . METHOD_2 ( STRING_8 , STRING_0 2 , 5 ) ; } } ) ; METHOD_5 ( ( STRING_9 + STRING_5 0 ) , new java . lang . METHOD_6 ( ) { @ org . apache . hadoop . IDENT_0 . lib . Override public void run ( ) { r . METHOD_2 ( STRING_0 , STRING_0 0 , 6 ) ; } } ) ; "<AssertPlaceHolder>" ; } metrics ( ) { return metrics ; }
org . junit . Assert . assertEquals ( STRING_5 3 , 3 , r . metrics ( ) . size ( ) ) 