METHOD_0 ( ) { IDENT_0 . METHOD_1 ( context ) ; java . util . List < eu . IDENT_1 . IDENT_2 . common . IDENT_3 . IDENT_4 . IDENT_5 > result = IDENT_0 . METHOD_2 ( null ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . util . List ) { if ( IDENT_6 == null ) { return null ; } java . util . Set < java . lang . IDENT_7 > IDENT_8 = new java . util . HashSet ( ) ; for ( eu . IDENT_1 . IDENT_2 . IDENT_9 . IDENT_4 . IDENT_10 IDENT_11 : IDENT_6 ) { IDENT_8 . add ( IDENT_11 . METHOD_3 ( ) ) ; } return IDENT_8 . stream ( ) . map ( ( id ) -> eu . IDENT_1 . IDENT_2 . common . IDENT_4 . IDENT_12 . METHOD_4 ( ) . setId ( id ) . build ( ) ) . collect ( java . util . stream . IDENT_13 . toList ( ) ) ; }
org . junit . Assert . assertNull ( result ) 