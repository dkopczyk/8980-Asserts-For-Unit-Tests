METHOD_0 ( ) { eu . IDENT_0 . IDENT_1 . common . IDENT_2 . IDENT_3 IDENT_4 = new eu . IDENT_0 . IDENT_1 . common . IDENT_2 . METHOD_1 ( STRING_0 , eu . IDENT_0 . IDENT_1 . common . IDENT_2 . IDENT_5 . IDENT_6 , STRING_1 ) ; com . google . gson . IDENT_7 json = converter . METHOD_0 ( IDENT_4 ) ; com . google . gson . IDENT_7 IDENT_8 = new com . google . gson . METHOD_2 ( ) . parse ( STRING_2 ) ; "<AssertPlaceHolder>" ; } parse ( java . lang . String [ ] ) { org . apache . commons . cli . IDENT_9 options = new org . apache . commons . cli . METHOD_3 ( ) ; @ eu . IDENT_0 . IDENT_1 . common . java . METHOD_4 ( STRING_3 ) org . apache . commons . cli . IDENT_10 IDENT_11 = org . apache . commons . cli . IDENT_12 . METHOD_5 ( STRING_4 ) . METHOD_6 ( ) . METHOD_7 ( STRING_5 ) . METHOD_8 ( STRING_6 ) . create ( eu . IDENT_0 . IDENT_1 . common . java . IDENT_13 . IDENT_14 ) ; options . METHOD_9 ( IDENT_11 ) ; @ eu . IDENT_0 . IDENT_1 . common . java . METHOD_4 ( STRING_3 ) org . apache . commons . cli . IDENT_10 IDENT_15 = org . apache . commons . cli . IDENT_12 . METHOD_5 ( STRING_7 6 ) . METHOD_10 ( 2 ) . METHOD_11 ( ) . METHOD_7 ( STRING_7 0 ) . METHOD_8 ( STRING_8 ) . create ( eu . IDENT_0 . IDENT_1 . common . java . IDENT_13 . IDENT_16 ) ; options . METHOD_9 ( IDENT_15 ) ; @ eu . IDENT_0 . IDENT_1 . common . java . METHOD_4 ( STRING_3 ) org . apache . commons . cli . IDENT_10 IDENT_17 = org . apache . commons . cli . IDENT_12 . METHOD_5 ( STRING_7 6 ) . METHOD_10 ( 2 ) . METHOD_11 ( ) . METHOD_7 ( STRING_7 1 ) . create ( eu . IDENT_0 . IDENT_1 . common . java . IDENT_13 . IDENT_18 ) ; options . METHOD_9 ( IDENT_17 ) ; @ eu . IDENT_0 . IDENT_1 . common . java . METHOD_4 ( STRING_3 ) org . apache . commons . cli . IDENT_10 IDENT_19 = org . apache . commons . cli . IDENT_12 . METHOD_5 ( STRING_9 ) . METHOD_10 ( 2 ) . METHOD_11 ( ) . METHOD_7 ( java . lang . String . format ( ( STRING_10 + STRING_7 2 ) , org . apache . commons . lang3 . StringUtils . join ( eu . IDENT_0 . IDENT_1 . common . java . IDENT_13 . IDENT_20 , STRING_7 4 ) ) ) . create ( eu . IDENT_0 . IDENT_1 . common . java . IDENT_13 . IDENT_21 ) ; options . METHOD_9 ( IDENT_19 ) ; @ eu . IDENT_0 . IDENT_1 . common . java . METHOD_4 ( STRING_3 ) org . apache . commons . cli . IDENT_10 IDENT_22 = org . apache . commons . cli . IDENT_12 . METHOD_5 ( STRING_9 ) . METHOD_10 ( 2 ) . METHOD_11 ( ) . METHOD_7 ( java . lang . String . format ( STRING_7 ) ) . create ( eu . IDENT_0 . IDENT_1 . common . java . IDENT_13 . IDENT_23 ) ; options . METHOD_9 ( IDENT_22 ) ; org . apache . commons . cli . IDENT_10 IDENT_24 = new org . apache . commons . cli . METHOD_12 ( STRING_7 3 , STRING_11 ) ; options . METHOD_9 ( IDENT_24 ) ; org . apache . commons . cli . IDENT_25 parser = new org . apache . commons . cli . METHOD_13 ( ) ; try { org . apache . commons . cli . IDENT_26 IDENT_27 = parser . parse ( options , args ) ; if ( IDENT_27 . METHOD_14 ( STRING_7 3 ) ) { org . apache . commons . cli . IDENT_28 IDENT_29 = new org . apache . commons . cli . METHOD_15 ( ) ; IDENT_29 . METHOD_16 ( "" , options ) ; java . lang . System . METHOD_17 ( 1 ) ; } return IDENT_27 ; } catch ( org . apache . commons . cli . IDENT_30 e ) { throw new eu . IDENT_0 . IDENT_1 . common . java . METHOD_18 ( STRING_7 5 , e ) ; } }
org . junit . Assert . assertEquals ( IDENT_8 , json ) 