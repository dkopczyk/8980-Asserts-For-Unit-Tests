METHOD_0 ( ) { java . io . InputStream stream = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . class . getResourceAsStream ( STRING_0 ) ; java . io . IDENT_4 reader = new java . io . METHOD_1 ( stream ) ; org . json . simple . IDENT_5 expected = ( ( org . json . simple . IDENT_5 ) ( new org . json . simple . parser . METHOD_2 ( ) . parse ( reader ) ) ) ; org . json . simple . IDENT_5 actual = ( ( org . json . simple . IDENT_5 ) ( parser . parse ( io . IDENT_6 . IDENT_7 . METHOD_3 ( ) . METHOD_4 ( STRING_1 , STRING_2 ) . expect ( ) . METHOD_5 ( IDENT_8 . IDENT_9 ) . METHOD_6 ( IDENT_10 . IDENT_11 ) . when ( ) . get ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_12 . host ( STRING_3 ) ) . METHOD_7 ( ) ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ) { return new org . IDENT_0 . util . data . IDENT_13 < IDENT_14 , org . IDENT_0 . util . data . IDENT_15 < java . lang . String > > ( ) { @ org . IDENT_0 . util . data . IDENT_16 . Override public org . IDENT_0 . util . data . IDENT_15 < java . lang . String > apply ( IDENT_14 a ) { return org . IDENT_0 . util . data . IDENT_16 . IDENT_17 . METHOD_7 ( a ) ; } } ; }
org . junit . Assert . assertEquals ( expected , actual ) 