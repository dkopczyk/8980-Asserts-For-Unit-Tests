METHOD_0 ( ) { java . util . List < java . lang . String > params = new java . util . ArrayList ( ) ; params . add ( STRING_0 ) ; params . add ( ( ( STRING_1 + ( org . IDENT_0 . execute . impl . IDENT_1 . IDENT_2 ) ) + STRING_2 ) ) ; org . IDENT_0 . IDENT_3 . IDENT_4 IDENT_5 = null ; java . lang . String result = org . IDENT_0 . execute . impl . IDENT_1 . executor . METHOD_1 ( params , IDENT_5 , null , null ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . util . List , org . IDENT_0 . IDENT_3 . IDENT_6 , java . lang . String , org . IDENT_0 . IDENT_3 . IDENT_6 . Type ) { java . lang . String params = IDENT_7 . remove ( 1 ) ; IDENT_7 . addAll ( METHOD_2 ( params ) ) ; java . io . File IDENT_8 = null ; try { java . io . File IDENT_9 = IDENT_10 . get ( element . METHOD_3 ( ) ) ; if ( IDENT_11 != null ) IDENT_8 = new java . io . File ( IDENT_9 . METHOD_4 ( ) , IDENT_11 ) ; for ( int i = 1 ; i < ( IDENT_7 . size ( ) ) ; i ++ ) { if ( IDENT_7 . get ( i ) . contains ( org . IDENT_0 . execute . impl . IDENT_12 ) ) { IDENT_7 . set ( i , IDENT_7 . get ( i ) . replace ( org . IDENT_0 . execute . impl . IDENT_12 , IDENT_9 . getAbsolutePath ( ) ) ) ; continue ; } if ( IDENT_7 . get ( i ) . contains ( org . IDENT_0 . execute . impl . IDENT_13 ) ) { if ( IDENT_8 != null ) { IDENT_7 . set ( i , IDENT_7 . get ( i ) . replace ( org . IDENT_0 . execute . impl . IDENT_13 , IDENT_8 . getAbsolutePath ( ) ) ) ; continue ; } else { org . IDENT_0 . execute . impl . IDENT_14 . logger . error ( STRING_3 , org . IDENT_0 . execute . impl . IDENT_13 ) ; throw new org . IDENT_0 . execute . api . METHOD_5 ( ( ( IDENT_13 ) + STRING_4 ) ) ; } } } return METHOD_6 ( IDENT_7 , IDENT_8 , IDENT_15 ) ; } catch ( java . io . IOException e ) { org . IDENT_0 . execute . impl . IDENT_14 . logger . error ( STRING_5 , element . METHOD_3 ( ) ) ; throw new org . IDENT_0 . execute . api . METHOD_5 ( ( STRING_6 + ( element . METHOD_3 ( ) ) ) , e ) ; } catch ( org . IDENT_0 . util . IDENT_16 e ) { org . IDENT_0 . execute . impl . IDENT_14 . logger . error ( STRING_7 , element . METHOD_3 ( ) ) ; throw new org . IDENT_0 . execute . api . METHOD_5 ( ( ( STRING_8 + ( element . METHOD_3 ( ) ) ) + STRING_9 ) ) ; } }
org . junit . Assert . assertEquals ( result , "" ) 