METHOD_0 ( ) { METHOD_1 ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_0 . IDENT_1 . METHOD_2 ( STRING_0 , STRING_1 ) ; java . lang . String IDENT_4 = ( ( ( org . IDENT_0 . IDENT_5 . impl . IDENT_6 . IDENT_7 ) + STRING_2 ) + ( org . IDENT_0 . IDENT_5 . impl . IDENT_6 . IDENT_8 ) ) + STRING_3 ; java . lang . String IDENT_9 = service . METHOD_3 ( org . IDENT_0 . IDENT_5 . impl . IDENT_6 . IDENT_7 , org . IDENT_0 . IDENT_5 . impl . IDENT_6 . IDENT_8 , org . IDENT_0 . IDENT_5 . impl . IDENT_6 . IDENT_10 , IDENT_3 , STRING_4 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , java . lang . String , java . lang . String , org . IDENT_0 . IDENT_1 . METHOD_2 , java . lang . String ) { final java . util . regex . IDENT_11 IDENT_12 = java . util . regex . IDENT_11 . METHOD_4 ( STRING_5 ) ; java . util . regex . IDENT_13 matcher = IDENT_12 . matcher ( IDENT_14 ) ; java . lang . StringBuffer sb = new java . lang . StringBuffer ( ) ; while ( matcher . find ( ) ) { if ( matcher . group ( 1 ) . equals ( org . IDENT_0 . IDENT_5 . impl . IDENT_15 . IDENT_16 ) ) { matcher . METHOD_5 ( sb , IDENT_17 ) ; } else if ( matcher . group ( 1 ) . equals ( org . IDENT_0 . IDENT_5 . impl . IDENT_15 . IDENT_18 ) ) { matcher . METHOD_5 ( sb , ( ( ( IDENT_3 . getType ( ) ) + STRING_2 ) + ( IDENT_3 . METHOD_6 ( ) ) ) ) ; } else if ( matcher . group ( 1 ) . equals ( org . IDENT_0 . IDENT_5 . impl . IDENT_15 . IDENT_19 ) ) { matcher . METHOD_5 ( sb , IDENT_20 ) ; } else if ( matcher . group ( 1 ) . equals ( org . IDENT_0 . IDENT_5 . impl . IDENT_15 . IDENT_21 ) ) { matcher . METHOD_5 ( sb , IDENT_22 ) ; } } matcher . METHOD_7 ( sb ) ; return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_4 , IDENT_9 ) 