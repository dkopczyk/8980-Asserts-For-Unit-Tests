METHOD_0 ( ) { java . net . URI IDENT_0 = org . IDENT_1 . IDENT_2 . impl . IDENT_3 . class . getResource ( STRING_0 ) . METHOD_1 ( ) ; org . IDENT_1 . search . api . IDENT_4 IDENT_5 = org . IDENT_1 . search . api . IDENT_6 . valueOf ( IDENT_0 . METHOD_2 ( ) . METHOD_3 ( ) ) ; org . easymock . EasyMock . expect ( IDENT_7 . METHOD_4 ( ( ( org . IDENT_1 . search . api . IDENT_8 ) ( org . easymock . EasyMock . METHOD_5 ( ) ) ) ) ) . andReturn ( IDENT_5 ) ; METHOD_6 ( ) ; org . IDENT_1 . IDENT_9 . IDENT_10 IDENT_11 = service . METHOD_7 ( org . IDENT_1 . IDENT_2 . impl . IDENT_3 . IDENT_12 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( java . lang . String ) { org . IDENT_1 . search . api . IDENT_8 query = new org . IDENT_1 . search . api . METHOD_8 ( ) . METHOD_9 ( IDENT_13 ) ; org . IDENT_1 . search . api . IDENT_4 result = IDENT_7 . METHOD_4 ( query ) ; if ( ( result . size ( ) ) == 0 ) { org . IDENT_1 . IDENT_2 . impl . IDENT_14 . logger . debug ( STRING_1 , IDENT_13 ) ; return null ; } else if ( ( result . size ( ) ) > 1 ) { org . IDENT_1 . IDENT_2 . impl . IDENT_14 . logger . warn ( STRING_2 , IDENT_13 ) ; throw new org . IDENT_1 . IDENT_2 . api . METHOD_10 ( ( ( STRING_3 + IDENT_13 ) + STRING_4 ) ) ; } return result . METHOD_11 ( ) [ 0 ] . METHOD_12 ( ) ; }
org . junit . Assert . assertNull ( IDENT_11 ) 