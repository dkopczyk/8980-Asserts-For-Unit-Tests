METHOD_0 ( ) { long IDENT_0 = java . lang . System . currentTimeMillis ( ) ; final java . lang . String IDENT_1 = STRING_0 ; final org . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = org . IDENT_2 . IDENT_6 . impl . IDENT_7 . METHOD_1 ( com . IDENT_8 . IDENT_9 . data . IDENT_10 . < java . lang . String > METHOD_2 ( ) ) ; final java . util . Date IDENT_11 = new java . util . Date ( ( IDENT_0 - ( 20 * 1000 ) ) ) ; final java . util . Date IDENT_12 = new java . util . Date ( ( IDENT_0 - ( 10 * 1000 ) ) ) ; final org . IDENT_2 . metadata . IDENT_13 . IDENT_14 IDENT_15 = org . IDENT_2 . IDENT_6 . impl . IDENT_7 . METHOD_1 ( STRING_1 , com . IDENT_8 . IDENT_9 . data . IDENT_10 . < java . lang . String > METHOD_2 ( ) , com . IDENT_8 . IDENT_9 . data . IDENT_10 . METHOD_3 ( IDENT_1 ) , IDENT_11 , IDENT_12 ) ; java . lang . String IDENT_16 = METHOD_4 ( com . IDENT_8 . IDENT_9 . data . IDENT_10 . < java . lang . String > METHOD_2 ( ) , IDENT_5 , IDENT_15 ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_17 = map ( tuple ( STRING_2 , STRING_3 ) , tuple ( STRING_4 , STRING_5 ) ) ; org . IDENT_2 . IDENT_6 . impl . IDENT_7 . IDENT_18 . METHOD_5 ( IDENT_11 , IDENT_12 , STRING_1 , java . util . Collections . < java . lang . String > METHOD_6 ( ) , IDENT_5 , org . IDENT_2 . IDENT_6 . impl . IDENT_7 . IDENT_19 , IDENT_17 , com . IDENT_8 . IDENT_9 . data . IDENT_10 . < java . lang . String > METHOD_2 ( ) ) ; org . IDENT_2 . IDENT_3 . IDENT_4 IDENT_20 = org . IDENT_2 . IDENT_6 . impl . IDENT_7 . IDENT_18 . METHOD_7 ( IDENT_5 . METHOD_8 ( ) . METHOD_9 ( ) ) ; "<AssertPlaceHolder>" ; final java . lang . String IDENT_21 = STRING_6 ; final org . IDENT_2 . metadata . IDENT_13 . IDENT_14 IDENT_22 = org . IDENT_2 . IDENT_6 . impl . IDENT_7 . METHOD_1 ( STRING_1 , com . IDENT_8 . IDENT_9 . data . IDENT_10 . METHOD_3 ( IDENT_5 . METHOD_8 ( ) . METHOD_9 ( ) ) , com . IDENT_8 . IDENT_9 . data . IDENT_10 . METHOD_3 ( IDENT_21 ) , IDENT_11 , IDENT_12 ) ; METHOD_4 ( com . IDENT_8 . IDENT_9 . data . IDENT_10 . METHOD_3 ( IDENT_16 ) , IDENT_5 , IDENT_22 ) ; org . IDENT_2 . IDENT_6 . impl . IDENT_7 . IDENT_18 . METHOD_10 ( IDENT_5 . METHOD_8 ( ) . METHOD_9 ( ) , com . IDENT_8 . IDENT_9 . data . IDENT_10 . < java . util . Date > METHOD_2 ( ) , com . IDENT_8 . IDENT_9 . data . IDENT_10 . < java . util . Date > METHOD_2 ( ) , com . IDENT_8 . IDENT_9 . data . IDENT_10 . < java . lang . String > METHOD_2 ( ) , com . IDENT_8 . IDENT_9 . data . IDENT_10 . < java . util . Set < java . lang . String > > METHOD_2 ( ) , com . IDENT_8 . IDENT_9 . data . IDENT_10 . METHOD_3 ( IDENT_5 ) , com . IDENT_8 . IDENT_9 . data . IDENT_10 . METHOD_3 ( org . IDENT_2 . IDENT_6 . impl . IDENT_7 . IDENT_23 ) , com . IDENT_8 . IDENT_9 . data . IDENT_10 . < java . util . Map < java . lang . String , java . lang . String > > METHOD_2 ( ) ) ; org . junit . Assert . fail ( STRING_7 ) ; } METHOD_9 ( ) { return id . replaceAll ( "/" , STRING_8 ) . replaceAll ( STRING_9 , STRING_8 ) ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_20 ) 