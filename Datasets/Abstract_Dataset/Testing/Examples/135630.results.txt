METHOD_0 ( ) { if ( ( IDENT_0 . IDENT_1 ) != null ) IDENT_0 . IDENT_1 . METHOD_1 ( ) ; IDENT_0 . IDENT_1 = java . util . concurrent . IDENT_2 . METHOD_2 ( 1 ) ; IDENT_0 . METHOD_3 ( null ) ; java . util . IDENT_3 < java . lang . String , java . lang . String > properties = new java . util . METHOD_4 ( ) ; properties . put ( STRING_0 , STRING_1 ) ; IDENT_0 . METHOD_5 ( properties ) ; METHOD_6 ( ) ; IDENT_0 . IDENT_4 . put ( 0L , org . IDENT_5 . IDENT_6 . impl . IDENT_7 . IDENT_8 ) ; org . IDENT_5 . job . api . IDENT_9 IDENT_10 = IDENT_0 . METHOD_7 ( org . IDENT_5 . IDENT_6 . impl . IDENT_7 . IDENT_8 , org . IDENT_5 . IDENT_6 . impl . IDENT_7 . IDENT_11 , org . IDENT_5 . IDENT_6 . impl . IDENT_7 . IDENT_12 , null , null , true , null ) ; org . IDENT_5 . job . api . IDENT_13 IDENT_14 = new org . IDENT_5 . job . api . METHOD_8 ( null , IDENT_0 , IDENT_10 ) ; try { IDENT_14 . METHOD_9 ( INT_0 ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . Exception e ) { "<AssertPlaceHolder>" ; } } size ( ) { return count ; }
org . junit . Assert . assertEquals ( 0 , IDENT_0 . IDENT_4 . size ( ) ) 