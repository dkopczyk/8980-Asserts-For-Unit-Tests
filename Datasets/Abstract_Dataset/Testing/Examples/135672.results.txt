METHOD_0 ( ) { org . IDENT_0 . commons . datastore . core . Query query = new org . IDENT_0 . commons . datastore . core . Query ( STRING_0 , STRING_1 ) . append ( STRING_2 , STRING_3 ) ; org . IDENT_0 . commons . datastore . core . IDENT_1 options = new org . IDENT_0 . commons . datastore . core . METHOD_1 ( org . IDENT_0 . commons . datastore . core . METHOD_1 . IDENT_2 , java . util . Arrays . asList ( STRING_0 , STRING_2 ) ) ; org . IDENT_0 . IDENT_3 . core . models . User . IDENT_4 filter = new org . IDENT_0 . IDENT_3 . core . models . User . METHOD_2 ( STRING_4 , STRING_5 , File . IDENT_5 . IDENT_6 , query , options ) ; IDENT_7 . METHOD_3 ( IDENT_8 . getId ( ) , filter ) ; IDENT_7 . METHOD_4 ( IDENT_8 . getId ( ) , filter . getName ( ) ) ; org . IDENT_0 . commons . datastore . core . IDENT_9 < org . IDENT_0 . IDENT_3 . core . models . User > IDENT_10 = IDENT_7 . get ( IDENT_8 . getId ( ) , new org . IDENT_0 . commons . datastore . core . METHOD_1 ( ) , null ) ; org . IDENT_0 . IDENT_3 . core . models . User . IDENT_11 IDENT_12 = IDENT_10 . first ( ) . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( ) { java . lang . Object object = get ( org . IDENT_0 . IDENT_3 . core . models . User . IDENT_11 . IDENT_13 ) ; if ( object == null ) { return new org . IDENT_0 . IDENT_3 . core . models . METHOD_7 ( ) ; } if ( METHOD_8 ( object ) ) { return ( ( org . IDENT_0 . IDENT_3 . core . models . List < org . IDENT_0 . IDENT_3 . core . models . User . METHOD_2 > ) ( object ) ) ; } else { org . IDENT_0 . IDENT_3 . core . models . List < org . IDENT_0 . IDENT_3 . core . models . User . METHOD_2 > filters = new org . IDENT_0 . IDENT_3 . core . models . ArrayList ( ) ; try { if ( ( IDENT_14 ) == null ) { IDENT_14 = new com . fasterxml . jackson . databind . METHOD_9 ( ) ; IDENT_15 = IDENT_14 . METHOD_10 ( org . IDENT_0 . IDENT_3 . core . models . User . METHOD_2 . class ) ; } for ( java . lang . Object IDENT_16 : ( ( org . IDENT_0 . IDENT_3 . core . models . List ) ( object ) ) ) { filters . add ( IDENT_15 . METHOD_11 ( IDENT_14 . METHOD_12 ( IDENT_16 ) ) ) ; } METHOD_13 ( filters ) ; return filters ; } catch ( java . io . IOException e ) { throw new java . io . METHOD_14 ( e ) ; } } }
org . junit . Assert . assertTrue ( ( ( IDENT_12 . METHOD_6 ( ) . size ( ) ) == 0 ) ) 