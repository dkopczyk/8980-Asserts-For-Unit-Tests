METHOD_0 ( ) { IDENT_0 . METHOD_1 ( ) . METHOD_2 ( IDENT_1 , STRING_0 , new org . IDENT_2 . IDENT_3 . catalog . IDENT_4 . METHOD_3 ( STRING_1 , METHOD_3 . IDENT_5 . IDENT_6 ) , IDENT_7 ) ; org . IDENT_2 . IDENT_3 . catalog . IDENT_4 . IDENT_8 IDENT_9 = IDENT_0 . METHOD_1 ( ) . METHOD_4 ( IDENT_1 , STRING_1 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String , java . lang . String ) { if ( org . apache . commons . lang3 . StringUtils . isEmpty ( IDENT_10 ) ) { throw new org . IDENT_2 . IDENT_3 . catalog . exceptions . METHOD_5 ( STRING_2 ) ; } java . lang . String IDENT_11 = "" ; java . lang . String IDENT_12 = "" ; boolean IDENT_13 = false ; if ( org . apache . commons . lang3 . StringUtils . METHOD_6 ( IDENT_14 ) ) { if ( org . IDENT_2 . IDENT_3 . catalog . utils . IDENT_15 . METHOD_7 ( IDENT_14 ) ) { IDENT_13 = true ; } else { java . lang . String [ ] split = IDENT_14 . split ( STRING_3 ) ; if ( ( split . length ) == 1 ) { IDENT_11 = IDENT_14 ; } else if ( ( split . length ) == 2 ) { IDENT_12 = split [ 0 ] ; IDENT_11 = split [ 1 ] ; } else { throw new org . IDENT_2 . IDENT_3 . catalog . exceptions . METHOD_5 ( ( IDENT_14 + STRING_4 ) ) ; } } } org . IDENT_2 . commons . datastore . core . IDENT_16 IDENT_17 = new org . IDENT_2 . commons . datastore . core . METHOD_8 ( ) . append ( METHOD_8 . IDENT_18 , org . IDENT_2 . IDENT_3 . catalog . IDENT_4 . Arrays . asList ( IDENT_19 . IDENT_20 . IDENT_21 . key ( ) , IDENT_19 . IDENT_20 . UUID . key ( ) , IDENT_19 . IDENT_20 . IDENT_22 . key ( ) , IDENT_19 . IDENT_20 . IDENT_23 . key ( ) , IDENT_19 . IDENT_20 . IDENT_24 . key ( ) ) ) ; if ( ( org . apache . commons . lang3 . StringUtils . isEmpty ( IDENT_12 ) ) || ( IDENT_12 . equals ( IDENT_10 ) ) ) { org . IDENT_2 . commons . datastore . core . Query query = new org . IDENT_2 . commons . datastore . core . Query ( IDENT_19 . IDENT_20 . IDENT_25 . key ( ) , IDENT_10 ) ; if ( IDENT_13 ) { query . METHOD_9 ( IDENT_19 . IDENT_20 . UUID . key ( ) , IDENT_14 ) ; } else { query . METHOD_9 ( IDENT_19 . IDENT_20 . IDENT_22 . key ( ) , IDENT_11 ) ; } org . IDENT_2 . commons . datastore . core . IDENT_26 < org . IDENT_2 . IDENT_3 . catalog . IDENT_4 . IDENT_27 > IDENT_28 = IDENT_29 . get ( query , IDENT_17 ) ; if ( ( IDENT_28 . METHOD_10 ( ) ) > 1 ) { throw new org . IDENT_2 . IDENT_3 . catalog . exceptions . METHOD_5 ( ( ( STRING_5 + IDENT_10 ) + STRING_3 3 ) ) ; } else if ( ( IDENT_28 . METHOD_10 ( ) ) == 1 ) { return IDENT_28 . first ( ) ; } } org . IDENT_2 . commons . datastore . core . Query query = new org . IDENT_2 . commons . datastore . core . Query ( ) ; query . METHOD_9 ( IDENT_30 . IDENT_20 . IDENT_31 . key ( ) , IDENT_12 ) ; if ( IDENT_13 ) { query . METHOD_9 ( IDENT_30 . IDENT_20 . IDENT_32 . key ( ) , IDENT_14 ) ; } else { query . METHOD_9 ( IDENT_30 . IDENT_20 . IDENT_33 . key ( ) , IDENT_11 ) ; } org . IDENT_2 . commons . datastore . core . METHOD_8 IDENT_34 = new org . IDENT_2 . commons . datastore . core . METHOD_8 ( org . IDENT_2 . commons . datastore . core . METHOD_8 . IDENT_18 , IDENT_30 . IDENT_20 . IDENT_23 . key ( ) ) ; org . IDENT_2 . commons . datastore . core . IDENT_26 < org . IDENT_2 . IDENT_3 . catalog . IDENT_4 . IDENT_8 > IDENT_35 = IDENT_36 . get ( query , IDENT_34 , IDENT_10 ) ; if ( ( IDENT_35 . METHOD_10 ( ) ) > 0 ) { org . IDENT_2 . IDENT_3 . catalog . IDENT_4 . Set < java . lang . String > IDENT_37 = new org . IDENT_2 . IDENT_3 . catalog . IDENT_4 . HashSet ( ) ; for ( org . IDENT_2 . IDENT_3 . catalog . IDENT_4 . IDENT_8 IDENT_9 : IDENT_35 . METHOD_11 ( ) ) { IDENT_37 . add ( org . apache . commons . lang3 . StringUtils . split ( IDENT_9 . METHOD_12 ( ) , STRING_3 2 ) [ 0 ] ) ; } if ( ( IDENT_37 . size ( ) ) == 1 ) { query = new org . IDENT_2 . commons . datastore . core . Query ( IDENT_19 . IDENT_20 . IDENT_23 . key ( ) , IDENT_37 ) ; return IDENT_29 . get ( query , IDENT_17 ) . first ( ) ; } else { throw new org . IDENT_2 . IDENT_3 . catalog . exceptions . METHOD_5 ( ( ( ( STRING_6 + IDENT_10 ) + STRING_7 ) + STRING_8 ) ) ; } } else { if ( org . apache . commons . lang3 . StringUtils . METHOD_6 ( IDENT_14 ) ) { if ( ( IDENT_36 . count ( query ) . first ( ) ) == 0 ) { throw new org . IDENT_2 . IDENT_3 . catalog . exceptions . METHOD_5 ( ( ( STRING_3 4 + IDENT_14 ) + STRING_3 0 ) ) ; } else { throw org . IDENT_2 . IDENT_3 . catalog . exceptions . IDENT_38 . METHOD_13 ( IDENT_10 , STRING_9 , STRING_10 , IDENT_14 , null ) ; } } else { throw new org . IDENT_2 . IDENT_3 . catalog . exceptions . METHOD_5 ( ( STRING_3 1 + IDENT_10 ) ) ; } } }
org . junit . Assert . assertTrue ( ( IDENT_9 != null ) ) 