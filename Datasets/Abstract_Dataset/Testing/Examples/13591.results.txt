METHOD_0 ( ) { final java . util . List < java . lang . String > IDENT_0 = java . util . Arrays . asList ( org . apache . hadoop . hdfs . IDENT_1 . METHOD_1 ( IDENT_2 . IDENT_3 ) , STRING_0 , STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ; final java . util . List < org . IDENT_4 . IDENT_5 > IDENT_6 = new java . util . ArrayList ( ) ; for ( java . lang . String IDENT_7 : IDENT_0 ) { IDENT_6 . add ( new org . IDENT_4 . METHOD_2 ( IDENT_7 . getBytes ( IDENT_8 . UTF_8 ) , new org . IDENT_4 . METHOD_3 ( ) ) ) ; } final org . IDENT_4 . IDENT_9 options = org . apache . hadoop . utils . db . IDENT_10 . METHOD_4 ( STRING_6 , IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String , java . util . List ) { com . google . common . base . IDENT_11 . METHOD_5 ( IDENT_12 ) ; com . google . common . base . IDENT_11 . METHOD_5 ( IDENT_13 ) ; com . google . common . base . IDENT_11 . METHOD_6 ( ( ( IDENT_13 . size ( ) ) > 0 ) ) ; org . IDENT_4 . IDENT_14 IDENT_15 = org . IDENT_4 . IDENT_14 . METHOD_7 ( ) ; org . IDENT_4 . IDENT_9 options = null ; java . io . File IDENT_16 = org . apache . hadoop . utils . db . IDENT_10 . METHOD_8 ( ) ; if ( ( IDENT_16 != null ) && ( org . eclipse . IDENT_17 . util . IDENT_18 . METHOD_9 ( IDENT_16 . toString ( ) ) ) ) { java . nio . file . Path IDENT_19 = java . nio . file . IDENT_20 . get ( IDENT_16 . toString ( ) , org . apache . hadoop . utils . db . IDENT_10 . METHOD_10 ( IDENT_12 ) ) ; if ( IDENT_19 . METHOD_11 ( ) . exists ( ) ) { options = new org . IDENT_4 . METHOD_12 ( ) ; try { org . IDENT_4 . IDENT_21 . METHOD_13 ( IDENT_19 . toString ( ) , IDENT_15 , options , IDENT_13 , true ) ; } catch ( org . IDENT_4 . IDENT_22 IDENT_23 ) { org . apache . hadoop . utils . db . IDENT_24 . METHOD_14 ( STRING_7 , IDENT_23 ) ; } } } return options ; }
org . junit . Assert . assertNull ( options ) 