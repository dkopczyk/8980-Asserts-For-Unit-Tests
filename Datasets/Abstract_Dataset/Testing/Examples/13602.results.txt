METHOD_0 ( ) { java . lang . String IDENT_0 = org . apache . hadoop . test . IDENT_1 . METHOD_1 ( ( ( org . apache . hadoop . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . class . getName ( ) ) + ( java . util . UUID . METHOD_2 ( ) ) ) ) ; try { org . apache . hadoop . IDENT_2 . server . events . IDENT_6 IDENT_7 = new org . apache . hadoop . IDENT_2 . server . events . METHOD_3 ( ) ; java . util . List < org . apache . hadoop . IDENT_2 . IDENT_3 . container . IDENT_8 > IDENT_9 = new java . util . ArrayList ( ) ; IDENT_9 . addAll ( org . apache . hadoop . IDENT_2 . IDENT_3 . IDENT_10 . METHOD_4 ( 1 ) ) ; org . apache . hadoop . IDENT_2 . conf . IDENT_11 config = new org . apache . hadoop . IDENT_2 . conf . METHOD_5 ( ) ; org . apache . hadoop . IDENT_2 . IDENT_3 . container . IDENT_12 IDENT_13 = new org . apache . hadoop . IDENT_2 . IDENT_3 . container . METHOD_6 ( true , 12 ) ; config . set ( IDENT_14 . IDENT_15 , IDENT_0 ) ; config . METHOD_7 ( IDENT_14 . IDENT_16 , true ) ; org . apache . hadoop . IDENT_2 . IDENT_3 . pipeline . IDENT_17 IDENT_18 = new org . apache . hadoop . IDENT_2 . IDENT_3 . pipeline . METHOD_8 ( config , IDENT_13 , IDENT_7 ) ; org . apache . hadoop . IDENT_2 . IDENT_3 . pipeline . IDENT_19 IDENT_20 = new org . apache . hadoop . IDENT_2 . IDENT_3 . pipeline . METHOD_9 ( IDENT_13 , IDENT_18 . METHOD_10 ( ) , config ) ; IDENT_18 . METHOD_11 ( IDENT_21 . IDENT_22 . IDENT_23 , IDENT_20 ) ; org . apache . hadoop . IDENT_2 . IDENT_3 . pipeline . IDENT_24 IDENT_25 = IDENT_18 . METHOD_12 ( IDENT_21 . IDENT_22 . IDENT_23 , IDENT_21 . IDENT_26 . IDENT_27 ) ; org . apache . hadoop . IDENT_2 . IDENT_3 . pipeline . IDENT_24 IDENT_28 = IDENT_18 . METHOD_12 ( IDENT_21 . IDENT_22 . IDENT_23 , IDENT_21 . IDENT_26 . IDENT_27 ) ; org . apache . hadoop . IDENT_2 . IDENT_3 . pipeline . IDENT_24 IDENT_29 = IDENT_18 . METHOD_12 ( IDENT_21 . IDENT_22 . IDENT_23 , IDENT_21 . IDENT_26 . IDENT_27 ) ; org . apache . hadoop . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_30 IDENT_31 = new org . apache . hadoop . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_13 ( config , IDENT_9 , IDENT_18 , IDENT_7 ) ; org . apache . hadoop . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_32 IDENT_33 = IDENT_31 . METHOD_14 ( ) ; "<AssertPlaceHolder>" ; METHOD_15 ( IDENT_25 , IDENT_7 ) ; org . apache . hadoop . test . IDENT_1 . METHOD_16 ( ( ) -> IDENT_33 . validate ( ) , 1000 , INT_0 ) ; } finally { org . apache . hadoop . fs . IDENT_34 . METHOD_17 ( new java . io . File ( IDENT_0 ) ) ; } } validate ( ) { int i = 0 ; if ( ( IDENT_35 [ i ] ) != null ) { for ( i ++ ; ( i < ( IDENT_35 . length ) ) && ( ( IDENT_35 [ i ] ) != null ) ; i ++ ) { final org . apache . hadoop . hdfs . server . IDENT_36 . IDENT_37 IDENT_38 = IDENT_35 [ i ] . METHOD_18 ( ) ; final org . apache . hadoop . hdfs . server . IDENT_36 . IDENT_37 IDENT_39 = IDENT_35 [ ( i - 1 ) ] . METHOD_18 ( ) ; if ( ( IDENT_38 != ( IDENT_35 [ ( i - 1 ) ] ) ) && ( ( ( IDENT_39 == null ) || ( ! ( IDENT_39 . METHOD_19 ( ) ) ) ) || ( IDENT_38 != IDENT_39 ) ) ) { throw new java . lang . METHOD_20 ( ( ( ( ( ( ( ( ( ( ( ( ( ( STRING_0 + i ) + STRING_1 ) + ( i - 1 ) ) + STRING_2 ) + i ) + STRING_3 ) + ( IDENT_35 [ i ] . METHOD_21 ( ) ) ) + STRING_4 ) + ( i - 1 ) ) + STRING_3 ) + ( IDENT_35 [ ( i - 1 ) ] . METHOD_21 ( ) ) ) + STRING_5 ) + ( toString ( false ) ) ) ) ; } } } if ( i != ( IDENT_35 . length ) ) { throw new java . lang . METHOD_20 ( ( ( ( ( ( STRING_6 + i ) + STRING_7 ) + ( IDENT_35 . length ) ) + STRING_8 ) + ( toString ( false ) ) ) ) ; } }
org . junit . Assert . assertFalse ( IDENT_33 . validate ( ) ) 