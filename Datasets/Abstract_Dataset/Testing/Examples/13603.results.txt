METHOD_0 ( ) { int nodes = INT_0 ; int IDENT_0 = 7 ; int IDENT_1 = 0 ; METHOD_1 ( nodes , IDENT_0 , IDENT_1 ) ; org . apache . hadoop . test . IDENT_2 . IDENT_3 IDENT_4 = IDENT_2 . IDENT_3 . METHOD_2 ( org . IDENT_5 . IDENT_6 . METHOD_3 ( org . apache . hadoop . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 . class ) ) ; java . util . List < org . apache . hadoop . IDENT_7 . IDENT_8 . pipeline . IDENT_11 > IDENT_12 = IDENT_13 . METHOD_4 ( ) ; for ( int i = 0 ; i < ( IDENT_0 - 1 ) ; i ++ ) { METHOD_5 ( IDENT_12 . get ( i ) ) ; } org . apache . hadoop . test . IDENT_2 . METHOD_6 ( ( ) -> IDENT_4 . METHOD_7 ( ) . contains ( STRING_0 ) , 1000 , INT_1 ) ; "<AssertPlaceHolder>" ; METHOD_5 ( IDENT_12 . get ( ( IDENT_0 - 1 ) ) ) ; org . apache . hadoop . test . IDENT_2 . METHOD_6 ( ( ) -> rule . validate ( ) , 1000 , INT_1 ) ; } validate ( ) { int i = 0 ; if ( ( IDENT_14 [ i ] ) != null ) { for ( i ++ ; ( i < ( IDENT_14 . length ) ) && ( ( IDENT_14 [ i ] ) != null ) ; i ++ ) { final org . apache . hadoop . hdfs . server . IDENT_15 . IDENT_16 IDENT_17 = IDENT_14 [ i ] . METHOD_8 ( ) ; final org . apache . hadoop . hdfs . server . IDENT_15 . IDENT_16 IDENT_18 = IDENT_14 [ ( i - 1 ) ] . METHOD_8 ( ) ; if ( ( IDENT_17 != ( IDENT_14 [ ( i - 1 ) ] ) ) && ( ( ( IDENT_18 == null ) || ( ! ( IDENT_18 . METHOD_9 ( ) ) ) ) || ( IDENT_17 != IDENT_18 ) ) ) { throw new java . lang . METHOD_10 ( ( ( ( ( ( ( ( ( ( ( ( ( ( STRING_1 + i ) + STRING_2 ) + ( i - 1 ) ) + STRING_3 ) + i ) + STRING_4 ) + ( IDENT_14 [ i ] . METHOD_11 ( ) ) ) + STRING_5 ) + ( i - 1 ) ) + STRING_4 ) + ( IDENT_14 [ ( i - 1 ) ] . METHOD_11 ( ) ) ) + STRING_6 ) + ( toString ( false ) ) ) ) ; } } } if ( i != ( IDENT_14 . length ) ) { throw new java . lang . METHOD_10 ( ( ( ( ( ( STRING_7 + i ) + STRING_8 ) + ( IDENT_14 . length ) ) + STRING_9 ) + ( toString ( false ) ) ) ) ; } }
org . junit . Assert . assertFalse ( rule . validate ( ) ) 