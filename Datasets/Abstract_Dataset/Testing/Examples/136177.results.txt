METHOD_0 ( ) { object ( ) . METHOD_1 ( IDENT_0 . IDENT_1 . IDENT_2 , IDENT_0 . IDENT_1 . IDENT_3 ) ; final org . opendaylight . controller . cluster . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 IDENT_8 = object ( ) . METHOD_2 ( transaction , IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . opendaylight . controller . cluster . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_10 , org . opendaylight . controller . cluster . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 ) { final org . opendaylight . controller . cluster . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_1 IDENT_11 = state ( ) ; switch ( IDENT_11 ) { case IDENT_3 : return super . METHOD_2 ( tx , IDENT_9 ) ; case IDENT_2 : throw new java . lang . IllegalStateException ( java . lang . String . format ( STRING_0 , this , tx . METHOD_3 ( ) ) ) ; case IDENT_12 : METHOD_1 ( IDENT_11 , IDENT_1 . IDENT_2 ) ; return super . METHOD_2 ( tx , IDENT_9 ) ; default : throw new java . lang . IllegalStateException ( java . lang . String . format ( STRING_1 , this , IDENT_11 ) ) ; } }
org . junit . Assert . assertEquals ( IDENT_9 , IDENT_8 ) 