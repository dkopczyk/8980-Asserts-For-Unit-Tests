METHOD_0 ( ) { final int count = 100 ; final io . IDENT_0 . log . IDENT_1 IDENT_2 = METHOD_1 ( count ) ; final java . util . concurrent . IDENT_3 IDENT_4 = new java . util . concurrent . METHOD_2 ( count ) ; for ( int i = 0 ; i < count ; i ++ ) { new java . lang . Thread ( ) { public void run ( ) { try { IDENT_2 . append ( new io . IDENT_0 . log . METHOD_3 ( null , null , 0 ) ) ; } finally { IDENT_4 . METHOD_4 ( ) ; } } } . start ( ) ; } IDENT_4 . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( ) { return IDENT_5 . get ( ) ; }
org . junit . Assert . assertEquals ( ( count + count ) , IDENT_2 . METHOD_6 ( ) . size ( ) ) 