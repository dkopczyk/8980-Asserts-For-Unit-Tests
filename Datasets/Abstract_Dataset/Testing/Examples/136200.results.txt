METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = METHOD_1 ( ) . METHOD_2 ( IDENT_0 . IDENT_1 . IDENT_4 . create ( org . opendaylight . controller . cluster . IDENT_5 . utils . IDENT_6 . class ) ) ; IDENT_0 . IDENT_1 . IDENT_2 IDENT_7 = METHOD_1 ( ) . METHOD_2 ( org . opendaylight . controller . cluster . datastore . utils . IDENT_8 . IDENT_9 . props ( true , IDENT_3 ) ) ; org . opendaylight . controller . cluster . datastore . utils . IDENT_10 IDENT_11 = new org . opendaylight . controller . cluster . datastore . utils . METHOD_3 ( METHOD_1 ( ) , IDENT_7 , mock ( org . opendaylight . controller . cluster . datastore . IDENT_12 . class ) , mock ( org . opendaylight . controller . cluster . datastore . config . Configuration . class ) ) ; IDENT_0 . IDENT_1 . IDENT_13 IDENT_1 = IDENT_11 . METHOD_4 ( IDENT_3 . path ( ) ) ; java . lang . Object out = IDENT_11 . METHOD_5 ( IDENT_1 , STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( IDENT_0 . IDENT_1 . IDENT_13 , java . lang . Object ) { IDENT_14 . concurrent . IDENT_15 < java . lang . Object > future = METHOD_6 ( IDENT_1 , message ) ; try { return IDENT_14 . concurrent . IDENT_16 . result ( future , IDENT_17 ) ; } catch ( java . lang . Exception e ) { throw new org . opendaylight . controller . cluster . datastore . exceptions . METHOD_7 ( ( ( ( ( STRING_1 + ( message . getClass ( ) . toString ( ) ) ) + STRING_2 ) + ( IDENT_1 . toString ( ) ) ) + STRING_3 ) , e ) ; } }
org . junit . Assert . assertEquals ( STRING_0 , out ) 