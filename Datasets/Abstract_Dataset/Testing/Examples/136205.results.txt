METHOD_0 ( ) { java . lang . RuntimeException IDENT_0 = new java . lang . RuntimeException ( ) ; doReturn ( null ) . when ( IDENT_1 ) . METHOD_1 ( ) ; METHOD_2 ( IDENT_0 ) . when ( IDENT_2 ) . commit ( any ( ) , any ( ) , any ( ) ) ; org . opendaylight . controller . IDENT_3 . IDENT_4 . dom . IDENT_5 . impl . IDENT_6 < org . opendaylight . controller . IDENT_4 . core . spi . data . IDENT_7 > IDENT_8 = new org . opendaylight . controller . IDENT_3 . IDENT_4 . dom . IDENT_5 . impl . METHOD_3 ( new java . lang . Object ( ) , java . util . Collections . METHOD_4 ( IDENT_9 . IDENT_10 , IDENT_1 ) , IDENT_2 ) ; com . google . common . util . concurrent . IDENT_11 < java . lang . IDENT_12 , org . opendaylight . controller . IDENT_3 . IDENT_4 . common . api . data . IDENT_13 > IDENT_14 = IDENT_8 . METHOD_5 ( ) ; try { IDENT_14 . METHOD_6 ( ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( org . opendaylight . controller . IDENT_3 . IDENT_4 . common . api . data . IDENT_13 e ) { "<AssertPlaceHolder>" ; IDENT_8 . METHOD_7 ( ) ; } } METHOD_8 ( ) { return IDENT_15 ; }
org . junit . Assert . assertTrue ( ( ( e . METHOD_8 ( ) ) == IDENT_0 ) ) 