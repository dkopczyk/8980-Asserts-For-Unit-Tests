METHOD_0 ( ) { final org . opendaylight . yang . gen . v1 . IDENT_0 . opendaylight . params . xml . IDENT_1 . yang . IDENT_2 . test . binding . IDENT_3 . IDENT_4 . IDENT_5 . list . IDENT_6 IDENT_7 = new org . opendaylight . yang . gen . v1 . IDENT_0 . opendaylight . params . xml . IDENT_1 . yang . IDENT_2 . test . binding . IDENT_3 . IDENT_4 . IDENT_5 . list . METHOD_1 ( ) . METHOD_2 ( org . opendaylight . IDENT_2 . binding . dom . codec . test . IDENT_8 . IDENT_9 ) . METHOD_3 ( new org . opendaylight . yang . gen . v1 . IDENT_0 . opendaylight . params . xml . IDENT_1 . yang . IDENT_2 . test . IDENT_10 . IDENT_11 . IDENT_12 . IDENT_13 . list . IDENT_13 . in . IDENT_13 . list . METHOD_4 ( org . opendaylight . IDENT_2 . binding . dom . codec . test . IDENT_8 . METHOD_5 ( ) ) . build ( ) ) . build ( ) ; final org . opendaylight . yang . gen . v1 . IDENT_0 . opendaylight . params . xml . IDENT_1 . yang . IDENT_2 . test . binding . IDENT_3 . IDENT_4 . IDENT_5 . list . IDENT_6 IDENT_14 = new org . opendaylight . yang . gen . v1 . IDENT_0 . opendaylight . params . xml . IDENT_1 . yang . IDENT_2 . test . binding . IDENT_3 . IDENT_4 . IDENT_5 . list . METHOD_1 ( ) . METHOD_2 ( org . opendaylight . IDENT_2 . binding . dom . codec . test . IDENT_8 . IDENT_9 ) . METHOD_3 ( new org . opendaylight . yang . gen . v1 . IDENT_0 . opendaylight . params . xml . IDENT_1 . yang . IDENT_2 . test . IDENT_10 . IDENT_11 . put . IDENT_12 . input . IDENT_13 . list . IDENT_13 . in . IDENT_13 . list . METHOD_6 ( org . opendaylight . IDENT_2 . binding . dom . codec . test . IDENT_8 . METHOD_5 ( ) ) . build ( ) ) . build ( ) ; final org . opendaylight . yangtools . yang . data . api . schema . IDENT_15 < ? , ? > IDENT_16 = registry . METHOD_7 ( org . opendaylight . IDENT_2 . binding . dom . codec . test . IDENT_8 . IDENT_17 , IDENT_14 ) . getValue ( ) ; final org . opendaylight . yangtools . yang . data . api . schema . IDENT_15 < ? , ? > IDENT_18 = registry . METHOD_7 ( org . opendaylight . IDENT_2 . binding . dom . codec . test . IDENT_8 . IDENT_17 , IDENT_7 ) . getValue ( ) ; "<AssertPlaceHolder>" ; } getValue ( ) { return value ; }
org . junit . Assert . assertEquals ( IDENT_16 , IDENT_18 ) 