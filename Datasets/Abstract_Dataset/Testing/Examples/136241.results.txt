METHOD_0 ( ) { final org . opendaylight . yangtools . yang . binding . IDENT_0 < org . opendaylight . yang . gen . v1 . IDENT_1 . opendaylight . params . xml . IDENT_2 . yang . IDENT_3 . test . binding . IDENT_4 . IDENT_5 . IDENT_6 . list . IDENT_7 > IDENT_8 = org . opendaylight . IDENT_3 . binding . dom . codec . test . IDENT_9 . IDENT_10 ; final java . util . List < org . opendaylight . yang . gen . v1 . IDENT_1 . opendaylight . params . xml . IDENT_2 . yang . IDENT_3 . test . binding . IDENT_4 . IDENT_5 . IDENT_6 . list . IDENT_11 . IDENT_6 . list . IDENT_12 > IDENT_13 = new java . util . ArrayList ( ) ; IDENT_13 . add ( new org . opendaylight . yang . gen . v1 . IDENT_1 . opendaylight . params . xml . IDENT_2 . yang . IDENT_3 . test . binding . IDENT_4 . IDENT_5 . IDENT_6 . list . IDENT_11 . IDENT_6 . list . METHOD_1 ( ) . METHOD_2 ( new org . opendaylight . yang . gen . v1 . IDENT_1 . opendaylight . params . xml . IDENT_2 . yang . IDENT_3 . test . binding . IDENT_4 . IDENT_5 . IDENT_6 . list . IDENT_11 . IDENT_6 . list . METHOD_3 ( "foo" ) ) . build ( ) ) ; IDENT_13 . add ( new org . opendaylight . yang . gen . v1 . IDENT_1 . opendaylight . params . xml . IDENT_2 . yang . IDENT_3 . test . binding . IDENT_4 . IDENT_5 . IDENT_6 . list . IDENT_11 . IDENT_6 . list . METHOD_1 ( ) . METHOD_2 ( new org . opendaylight . yang . gen . v1 . IDENT_1 . opendaylight . params . xml . IDENT_2 . yang . IDENT_3 . test . binding . IDENT_4 . IDENT_5 . IDENT_6 . list . IDENT_11 . IDENT_6 . list . METHOD_3 ( "bar" ) ) . build ( ) ) ; final org . opendaylight . yang . gen . v1 . IDENT_1 . opendaylight . params . xml . IDENT_2 . yang . IDENT_3 . test . binding . IDENT_4 . IDENT_5 . IDENT_6 . list . IDENT_7 IDENT_14 = new org . opendaylight . yang . gen . v1 . IDENT_1 . opendaylight . params . xml . IDENT_2 . yang . IDENT_3 . test . binding . IDENT_4 . IDENT_5 . IDENT_6 . list . METHOD_4 ( ) . METHOD_2 ( org . opendaylight . IDENT_3 . binding . dom . codec . test . IDENT_9 . IDENT_15 ) . METHOD_5 ( IDENT_13 ) . build ( ) ; final java . util . Map . Entry < org . opendaylight . yangtools . yang . data . api . IDENT_16 , org . opendaylight . yangtools . yang . data . api . schema . IDENT_17 < ? , ? > > entry = registry . METHOD_6 ( IDENT_8 , IDENT_14 ) ; final org . opendaylight . yangtools . yang . data . api . schema . IDENT_18 IDENT_19 = METHOD_7 ( ) . METHOD_8 ( new org . opendaylight . yangtools . yang . data . api . IDENT_16 . METHOD_9 ( org . opendaylight . IDENT_3 . binding . dom . codec . test . IDENT_9 . IDENT_20 , org . opendaylight . IDENT_3 . binding . dom . codec . test . IDENT_9 . IDENT_21 , org . opendaylight . IDENT_3 . binding . dom . codec . test . IDENT_9 . IDENT_22 ) ) . METHOD_10 ( METHOD_11 ( org . opendaylight . IDENT_3 . binding . dom . codec . test . IDENT_9 . IDENT_21 , org . opendaylight . IDENT_3 . binding . dom . codec . test . IDENT_9 . IDENT_22 ) ) . METHOD_10 ( org . opendaylight . yangtools . yang . data . impl . schema . builder . impl . IDENT_23 . create ( ) . METHOD_8 ( new org . opendaylight . yangtools . yang . data . api . IDENT_16 . METHOD_12 ( org . opendaylight . IDENT_3 . binding . dom . codec . test . IDENT_9 . IDENT_24 ) ) . METHOD_10 ( METHOD_13 ( org . opendaylight . IDENT_3 . binding . dom . codec . test . IDENT_9 . IDENT_24 , org . opendaylight . IDENT_3 . binding . dom . codec . test . IDENT_9 . IDENT_25 , "foo" ) ) . METHOD_10 ( METHOD_13 ( org . opendaylight . IDENT_3 . binding . dom . codec . test . IDENT_9 . IDENT_24 , org . opendaylight . IDENT_3 . binding . dom . codec . test . IDENT_9 . IDENT_25 , "bar" ) ) . build ( ) ) . build ( ) ; "<AssertPlaceHolder>" ; } getValue ( ) { return value ; }
org . junit . Assert . assertEquals ( IDENT_19 , entry . getValue ( ) ) 