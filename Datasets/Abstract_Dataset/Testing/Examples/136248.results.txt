METHOD_0 ( ) { final org . opendaylight . yangtools . yang . common . IDENT_0 IDENT_1 = org . opendaylight . yangtools . yang . common . IDENT_0 . create ( module . METHOD_1 ( ) , STRING_0 ) ; org . opendaylight . yangtools . yang . model . api . IDENT_2 IDENT_3 = ( ( org . opendaylight . yangtools . yang . model . api . IDENT_2 ) ( module . METHOD_2 ( IDENT_1 ) . get ( ) ) ) ; final org . opendaylight . yangtools . yang . common . IDENT_0 IDENT_4 = org . opendaylight . yangtools . yang . common . IDENT_0 . create ( module . METHOD_1 ( ) , STRING_1 ) ; org . opendaylight . yangtools . yang . model . api . IDENT_2 IDENT_5 = ( ( org . opendaylight . yangtools . yang . model . api . IDENT_2 ) ( IDENT_3 . METHOD_2 ( IDENT_4 ) . get ( ) ) ) ; final org . opendaylight . yangtools . yang . common . IDENT_0 IDENT_6 = org . opendaylight . yangtools . yang . common . IDENT_0 . create ( module . METHOD_1 ( ) , STRING_2 ) ; org . opendaylight . yangtools . yang . model . api . IDENT_2 IDENT_7 = ( ( org . opendaylight . yangtools . yang . model . api . IDENT_2 ) ( IDENT_5 . METHOD_2 ( IDENT_6 ) . get ( ) ) ) ; final org . opendaylight . yangtools . yang . common . IDENT_0 IDENT_8 = org . opendaylight . yangtools . yang . common . IDENT_0 . create ( module . METHOD_1 ( ) , STRING_3 ) ; org . opendaylight . yangtools . yang . model . api . IDENT_9 IDENT_10 = ( ( org . opendaylight . yangtools . yang . model . api . IDENT_9 ) ( IDENT_7 . METHOD_2 ( IDENT_8 ) . get ( ) ) ) ; java . lang . String actual = provider . METHOD_3 ( IDENT_10 ) ; java . lang . String expected = ( STRING_4 + ( org . opendaylight . IDENT_11 . binding . generator . impl . IDENT_12 . IDENT_13 ) ) + STRING_5 ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . opendaylight . yangtools . yang . model . api . IDENT_9 ) { return null ; }
org . junit . Assert . assertEquals ( expected , actual ) 