METHOD_0 ( ) { final org . opendaylight . yangtools . yang . binding . IDENT_0 < org . opendaylight . yangtools . yang . binding . IDENT_1 > IDENT_2 = org . opendaylight . yangtools . yang . binding . IDENT_0 . create ( org . opendaylight . yangtools . yang . binding . IDENT_1 . class ) ; final org . opendaylight . IDENT_3 . binding . api . IDENT_4 < org . opendaylight . yangtools . yang . binding . IDENT_1 > IDENT_5 = org . opendaylight . IDENT_3 . binding . api . IDENT_4 . create ( IDENT_6 . IDENT_7 , IDENT_2 ) ; final org . opendaylight . IDENT_8 . IDENT_3 . IDENT_9 . impl . IDENT_10 < org . opendaylight . yangtools . yang . binding . IDENT_1 > op = new org . opendaylight . IDENT_8 . IDENT_3 . IDENT_9 . impl . IDENT_10 < org . opendaylight . yangtools . yang . binding . IDENT_1 > ( IDENT_2 ) { @ org . opendaylight . IDENT_8 . IDENT_3 . IDENT_9 . impl . Override public void METHOD_1 ( final java . util . Collection < org . opendaylight . IDENT_3 . binding . api . IDENT_11 < org . opendaylight . yangtools . yang . binding . IDENT_1 > > collection ) { } } ; doReturn ( null ) . when ( IDENT_12 ) . METHOD_2 ( any ( ) , any ( ) ) ; org . mockito . IDENT_13 < org . opendaylight . IDENT_3 . binding . api . IDENT_4 > IDENT_14 = org . mockito . IDENT_13 . METHOD_3 ( org . opendaylight . IDENT_3 . binding . api . IDENT_4 . class ) ; op . METHOD_4 ( IDENT_12 ) ; verify ( IDENT_12 ) . METHOD_2 ( IDENT_14 . METHOD_5 ( ) , any ( ) ) ; "<AssertPlaceHolder>" ; } getValue ( ) { return value ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_14 . getValue ( ) ) 