METHOD_0 ( ) { org . opendaylight . IDENT_0 . client . IDENT_1 IDENT_2 = mock ( org . opendaylight . IDENT_0 . client . IDENT_1 . class ) ; io . netty . util . IDENT_3 IDENT_4 = new io . netty . util . METHOD_1 ( ) ; org . opendaylight . IDENT_0 . api . IDENT_5 < org . opendaylight . IDENT_0 . client . IDENT_1 > IDENT_6 = mock ( org . opendaylight . IDENT_0 . api . IDENT_5 . class ) ; doReturn ( IDENT_2 ) . when ( IDENT_6 ) . METHOD_2 ( ) ; io . netty . channel . IDENT_7 channel = mock ( io . netty . channel . IDENT_7 . class ) ; io . netty . util . concurrent . IDENT_8 < org . opendaylight . IDENT_0 . client . IDENT_9 > IDENT_10 = mock ( io . netty . util . concurrent . IDENT_8 . class ) ; org . opendaylight . IDENT_0 . client . IDENT_11 IDENT_12 = new org . opendaylight . IDENT_0 . client . METHOD_3 ( IDENT_4 , java . util . Optional . empty ( ) , INT_0 ) ; org . opendaylight . IDENT_0 . client . IDENT_13 IDENT_14 = IDENT_12 . METHOD_4 ( IDENT_6 , channel , IDENT_10 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . opendaylight . IDENT_0 . api . IDENT_5 , io . netty . channel . IDENT_7 , io . netty . util . concurrent . IDENT_8 ) { org . opendaylight . IDENT_0 . api . IDENT_15 IDENT_16 = org . opendaylight . IDENT_0 . IDENT_17 . handler . IDENT_18 . IDENT_19 . create ( options , org . opendaylight . IDENT_0 . client . METHOD_3 . IDENT_20 ) ; org . opendaylight . IDENT_0 . api . messages . IDENT_21 IDENT_22 = org . opendaylight . IDENT_0 . api . messages . IDENT_21 . METHOD_5 ( IDENT_23 , IDENT_24 ) ; org . opendaylight . IDENT_0 . api . IDENT_25 IDENT_26 = new org . opendaylight . IDENT_0 . api . METHOD_6 ( IDENT_22 , IDENT_16 ) ; return new org . opendaylight . IDENT_0 . client . METHOD_7 ( IDENT_26 , IDENT_10 , channel , IDENT_4 , IDENT_27 . METHOD_2 ( ) , IDENT_28 ) ; }
org . junit . Assert . assertNotNull ( IDENT_14 ) 