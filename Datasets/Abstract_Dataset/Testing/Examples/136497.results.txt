METHOD_0 ( ) { byte [ ] [ ] IDENT_0 = new byte [ ] [ ] { new byte [ ] { ( ( byte ) ( 255 ) ) , ( ( byte ) ( 255 ) ) , ( ( byte ) ( 255 ) ) , ( ( byte ) ( 255 ) ) } , new byte [ ] { ( ( byte ) ( 255 ) ) , ( ( byte ) ( 255 ) ) , ( ( byte ) ( INT_0 ) ) , 0 } , new byte [ ] { ( ( byte ) ( INT_1 ) ) , 0 , 0 , 0 } , new byte [ ] { 0 , 0 , 0 , 0 } } ; int [ ] IDENT_1 = new int [ ] { INT_2 , INT_3 , 1 , 0 } ; for ( int i = 0 ; i < ( IDENT_0 . length ) ; i ++ ) { int IDENT_2 = org . opendaylight . IDENT_3 . IDENT_4 . IDENT_5 . core . IDENT_6 . IDENT_7 . common . IDENT_8 . METHOD_1 ( IDENT_0 [ i ] ) ; "<AssertPlaceHolder>" ; } } METHOD_1 ( byte [ ] ) { int IDENT_9 = 0 ; for ( byte b : IDENT_2 ) { IDENT_9 += java . lang . Integer . METHOD_2 ( com . google . common . IDENT_10 . IDENT_11 . METHOD_3 ( b ) ) ; } return IDENT_9 ; }
org . junit . Assert . assertEquals ( IDENT_1 [ i ] , IDENT_2 ) 