METHOD_0 ( ) { org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . service . function . IDENT_5 . IDENT_6 data = METHOD_1 ( ) ; IDENT_7 = new org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . METHOD_2 ( IDENT_11 , data , IDENT_12 , org . opendaylight . controller . IDENT_13 . IDENT_14 . common . api . data . IDENT_15 . IDENT_16 ) ; boolean result = ( ( boolean ) ( IDENT_7 . call ( ) ) ) ; "<AssertPlaceHolder>" ; } call ( ) { switch ( IDENT_17 ) { case IDENT_18 : { try { com . google . common . base . IDENT_19 . METHOD_3 ( data ) ; org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . IDENT_20 IDENT_21 = ( ( org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . IDENT_20 ) ( data ) ) ; org . opendaylight . yangtools . yang . binding . IDENT_22 < org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . IDENT_20 > IDENT_23 = org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . IDENT_24 . METHOD_4 ( IDENT_21 . key ( ) ) ; return METHOD_5 ( IDENT_23 , IDENT_21 ) ; } catch ( java . lang . IDENT_25 e ) { org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . METHOD_2 . LOG . error ( STRING_0 , data , e ) ; } break ; } case IDENT_26 : { try { com . google . common . base . IDENT_19 . METHOD_3 ( data ) ; org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_27 . params . xml . IDENT_28 . yang . IDENT_8 . common . IDENT_29 . IDENT_30 IDENT_21 = ( ( org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_27 . params . xml . IDENT_28 . yang . IDENT_8 . common . IDENT_29 . IDENT_30 ) ( data ) ) ; org . opendaylight . yangtools . yang . binding . IDENT_22 < org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . IDENT_20 > IDENT_23 = org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . IDENT_24 . METHOD_4 ( new org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . METHOD_6 ( IDENT_21 . getValue ( ) ) ) ; return METHOD_7 ( IDENT_23 ) ; } catch ( java . lang . IDENT_25 e ) { org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . METHOD_2 . LOG . error ( STRING_0 , data , e ) ; } break ; } case IDENT_31 : { try { com . google . common . base . IDENT_19 . METHOD_3 ( data ) ; org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . METHOD_6 IDENT_32 = ( ( org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . METHOD_6 ) ( data ) ) ; org . opendaylight . yangtools . yang . binding . IDENT_22 < org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . IDENT_20 > IDENT_23 = org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . IDENT_24 . METHOD_4 ( IDENT_32 ) ; return METHOD_8 ( IDENT_23 ) ; } catch ( java . lang . IDENT_25 e ) { org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . METHOD_2 . LOG . error ( STRING_0 , data , e ) ; } break ; } case IDENT_33 : { try { com . google . common . base . IDENT_19 . METHOD_3 ( data ) ; org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . service . function . IDENT_5 . IDENT_34 IDENT_35 = ( ( org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . service . function . IDENT_5 . IDENT_34 ) ( data ) ) ; org . opendaylight . yangtools . yang . binding . IDENT_22 < org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . service . function . IDENT_5 . IDENT_34 > IDENT_36 = org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . IDENT_24 . METHOD_9 ( ) ; return METHOD_5 ( IDENT_36 , IDENT_35 ) ; } catch ( java . lang . IDENT_25 e ) { org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . METHOD_2 . LOG . error ( STRING_1 , data , e ) ; } break ; } case IDENT_37 : { org . opendaylight . yangtools . yang . binding . IDENT_22 < org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . service . function . IDENT_5 . IDENT_34 > IDENT_36 = org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . IDENT_24 . METHOD_9 ( ) ; return METHOD_7 ( IDENT_36 ) ; } case IDENT_38 : { org . opendaylight . yangtools . yang . binding . IDENT_22 < org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . service . function . IDENT_5 . IDENT_34 > IDENT_36 = org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . IDENT_24 . METHOD_9 ( ) ; return METHOD_8 ( IDENT_36 ) ; } case IDENT_12 : { try { com . google . common . base . IDENT_19 . METHOD_3 ( data ) ; org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . service . function . IDENT_5 . IDENT_6 IDENT_39 = ( ( org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . service . function . IDENT_5 . IDENT_6 ) ( data ) ) ; org . opendaylight . yangtools . yang . binding . IDENT_22 < org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . service . function . IDENT_5 . IDENT_6 > IDENT_40 = org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . IDENT_24 . METHOD_10 ( IDENT_39 ) ; return METHOD_5 ( IDENT_40 , IDENT_39 ) ; } catch ( java . lang . IDENT_25 e ) { org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . METHOD_2 . LOG . error ( STRING_2 , data , e ) ; } break ; } case IDENT_41 : { try { com . google . common . base . IDENT_19 . METHOD_3 ( data ) ; org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . service . function . IDENT_5 . IDENT_6 IDENT_39 = ( ( org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . service . function . IDENT_5 . IDENT_6 ) ( data ) ) ; org . opendaylight . yangtools . yang . binding . IDENT_22 < org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . service . function . IDENT_5 . IDENT_6 > IDENT_40 = org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . IDENT_24 . METHOD_10 ( IDENT_39 ) ; return METHOD_8 ( IDENT_40 ) ; } catch ( java . lang . IDENT_25 e ) { org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . METHOD_2 . LOG . error ( STRING_2 , data , e ) ; } break ; } case IDENT_42 : { try { com . google . common . base . IDENT_19 . METHOD_3 ( data ) ; org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_27 . params . xml . IDENT_28 . yang . IDENT_8 . common . IDENT_29 . IDENT_43 IDENT_44 = ( ( org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_27 . params . xml . IDENT_28 . yang . IDENT_8 . common . IDENT_29 . IDENT_43 ) ( data ) ) ; org . opendaylight . yangtools . yang . binding . IDENT_22 < org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . service . function . IDENT_5 . IDENT_6 > IDENT_40 = org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . IDENT_24 . METHOD_10 ( IDENT_44 ) ; return METHOD_7 ( IDENT_40 ) ; } catch ( java . lang . IDENT_25 e ) { org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . METHOD_2 . LOG . error ( STRING_3 , data , e ) ; } break ; } case IDENT_45 : { try { com . google . common . base . IDENT_19 . METHOD_3 ( data ) ; org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . IDENT_46 path = ( ( org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . IDENT_46 ) ( data ) ) ; org . opendaylight . yangtools . yang . binding . IDENT_22 < org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . IDENT_46 > IDENT_47 = org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . IDENT_24 . METHOD_11 ( path . key ( ) ) ; return METHOD_5 ( IDENT_47 , path ) ; } catch ( java . lang . IDENT_25 e ) { org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . METHOD_2 . LOG . error ( STRING_4 , data , e ) ; } break ; } case IDENT_48 : { try { com . google . common . base . IDENT_19 . METHOD_3 ( data ) ; org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . IDENT_49 IDENT_50 = ( ( org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . IDENT_49 ) ( data ) ) ; org . opendaylight . yangtools . yang . binding . IDENT_22 < org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . IDENT_46 > IDENT_47 = org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . IDENT_24 . METHOD_11 ( IDENT_50 ) ; return METHOD_7 ( IDENT_47 ) ; } catch ( java . lang . IDENT_25 e ) { org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . METHOD_2 . LOG . error ( STRING_4 , data , e ) ; } break ; } case IDENT_51 : { try { com . google . common . base . IDENT_19 . METHOD_3 ( data ) ; org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . IDENT_49 IDENT_50 = ( ( org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . IDENT_49 ) ( data ) ) ; org . opendaylight . yangtools . yang . binding . IDENT_22 < org . opendaylight . yang . gen . v1 . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . service . IDENT_4 . IDENT_46 > IDENT_47 = org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . IDENT_24 . METHOD_11 ( IDENT_50 ) ; return METHOD_8 ( IDENT_47 ) ; } catch ( java . lang . IDENT_25 e ) { org . opendaylight . IDENT_8 . IDENT_9 . IDENT_10 . utils . METHOD_2 . LOG . error ( STRING_5 , data , e ) ; } break ; } default : break ; } return null ; }
org . junit . Assert . assertTrue ( result ) 