METHOD_0 ( ) { final org . opendaylight . yangtools . yang . data . api . schema . tree . IDENT_0 IDENT_1 = new org . opendaylight . yangtools . yang . data . impl . schema . tree . METHOD_1 ( ) . create ( new org . opendaylight . yangtools . yang . data . api . schema . tree . IDENT_2 . Builder ( org . opendaylight . yangtools . yang . data . api . schema . tree . IDENT_3 . IDENT_4 ) . METHOD_2 ( true ) . METHOD_3 ( IDENT_5 . IDENT_6 ) . METHOD_4 ( true ) . build ( ) , org . opendaylight . yangtools . yang . data . impl . schema . tree . IDENT_7 ) ; final org . opendaylight . yangtools . yang . data . api . schema . IDENT_8 < java . lang . String > IDENT_9 = org . opendaylight . yangtools . yang . data . impl . schema . builder . impl . IDENT_10 . < java . lang . String > create ( ) . METHOD_5 ( new org . opendaylight . yangtools . yang . data . api . IDENT_11 . METHOD_6 ( IDENT_5 . IDENT_12 ) ) . METHOD_7 ( STRING_0 ) . build ( ) ; final org . opendaylight . yangtools . yang . data . api . schema . tree . IDENT_13 IDENT_14 = IDENT_1 . METHOD_8 ( ) . METHOD_9 ( ) ; IDENT_14 . write ( IDENT_5 . IDENT_15 , IDENT_9 ) ; IDENT_14 . METHOD_10 ( ) ; IDENT_16 . validate ( IDENT_14 ) ; final org . opendaylight . yangtools . yang . data . api . schema . tree . IDENT_17 IDENT_18 = IDENT_16 . METHOD_11 ( IDENT_14 ) ; IDENT_16 . commit ( IDENT_18 ) ; final org . opendaylight . yangtools . yang . data . api . schema . tree . IDENT_13 METHOD_9 = IDENT_16 . METHOD_8 ( ) . METHOD_9 ( ) ; final org . opendaylight . yangtools . yang . data . api . schema . tree . IDENT_17 IDENT_19 = org . opendaylight . yangtools . yang . data . api . schema . tree . IDENT_20 . METHOD_12 ( IDENT_5 . IDENT_6 , IDENT_18 . METHOD_13 ( ) ) ; try { IDENT_19 . METHOD_13 ( ) . METHOD_14 ( ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . IllegalStateException e ) { org . opendaylight . yangtools . yang . data . impl . schema . tree . IDENT_21 . LOG . debug ( STRING_1 , e ) ; } org . opendaylight . yangtools . yang . data . api . schema . tree . IDENT_20 . METHOD_15 ( METHOD_9 , IDENT_19 ) ; final org . opendaylight . yangtools . yang . data . api . schema . IDENT_8 < ? > IDENT_22 = ( ( org . opendaylight . yangtools . yang . data . api . schema . IDENT_8 < ? > ) ( METHOD_9 . METHOD_16 ( IDENT_5 . IDENT_23 ) . get ( ) ) ) ; "<AssertPlaceHolder>" ; } get ( ) { METHOD_17 ( ) ; return super . get ( ) ; }
org . junit . Assert . assertEquals ( IDENT_22 , IDENT_9 ) 