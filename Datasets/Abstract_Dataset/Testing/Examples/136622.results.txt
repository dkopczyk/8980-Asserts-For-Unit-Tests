METHOD_0 ( ) { final org . opendaylight . yangtools . yang . model . api . IDENT_0 IDENT_1 = org . opendaylight . yangtools . yang . model . util . IDENT_2 . METHOD_1 ( org . opendaylight . yangtools . yang . model . util . IDENT_2 . IDENT_3 ) ; final org . opendaylight . yangtools . yang . model . api . IDENT_4 IDENT_5 = org . opendaylight . yangtools . yang . model . util . IDENT_2 . METHOD_2 ( IDENT_1 ) ; final org . opendaylight . yangtools . yang . model . util . IDENT_6 IDENT_7 = org . opendaylight . yangtools . yang . model . util . IDENT_2 . METHOD_3 ( IDENT_5 , new java . util . HashSet ( ) , IDENT_1 ) ; final org . opendaylight . yangtools . yang . model . api . IDENT_8 IDENT_9 = mock ( org . opendaylight . yangtools . yang . model . api . IDENT_8 . class ) ; final java . util . Set < org . opendaylight . yangtools . yang . model . api . IDENT_8 > IDENT_10 = java . util . Collections . METHOD_4 ( IDENT_9 ) ; doReturn ( IDENT_10 ) . when ( IDENT_1 ) . METHOD_5 ( ) ; final java . util . Set < org . opendaylight . yangtools . yang . model . api . IDENT_8 > IDENT_11 = IDENT_7 . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } contains ( java . lang . Object ) { return delegate . contains ( o ) ; }
org . junit . Assert . assertTrue ( IDENT_11 . contains ( IDENT_9 ) ) 