METHOD_0 ( ) { final org . opendaylight . yangtools . yang . model . util . type . IDENT_0 IDENT_1 = IDENT_0 . INSTANCE ; final org . opendaylight . yangtools . yang . model . util . type . IDENT_0 IDENT_2 = ( ( org . opendaylight . yangtools . yang . model . util . type . IDENT_0 ) ( org . opendaylight . yangtools . yang . model . util . type . IDENT_3 . METHOD_1 ( ) ) ) ; org . opendaylight . yangtools . yang . model . util . type . IDENT_4 . METHOD_2 ( IDENT_1 , IDENT_2 ) ; "<AssertPlaceHolder>" ; final org . opendaylight . yangtools . yang . model . util . type . IDENT_5 IDENT_6 = ( ( org . opendaylight . yangtools . yang . model . util . type . IDENT_5 ) ( org . opendaylight . yangtools . yang . model . util . type . IDENT_7 . METHOD_3 ( IDENT_1 , org . opendaylight . yangtools . yang . model . util . type . IDENT_4 . IDENT_8 ) . build ( ) ) ) ; final org . opendaylight . yangtools . yang . model . util . type . IDENT_5 IDENT_9 = ( ( org . opendaylight . yangtools . yang . model . util . type . IDENT_5 ) ( org . opendaylight . yangtools . yang . model . util . type . IDENT_7 . METHOD_3 ( IDENT_2 , org . opendaylight . yangtools . yang . model . util . type . IDENT_4 . IDENT_8 ) . build ( ) ) ) ; org . opendaylight . yangtools . yang . model . util . type . IDENT_4 . METHOD_2 ( IDENT_6 , IDENT_9 ) ; final org . opendaylight . yangtools . yang . model . util . type . IDENT_10 IDENT_11 = org . opendaylight . yangtools . yang . model . util . type . IDENT_12 . METHOD_4 ( IDENT_1 , org . opendaylight . yangtools . yang . model . util . type . IDENT_4 . IDENT_8 ) ; IDENT_11 . METHOD_5 ( true ) ; final org . opendaylight . yangtools . yang . model . api . type . IDENT_13 IDENT_14 = IDENT_11 . METHOD_6 ( ) ; final org . opendaylight . yangtools . yang . model . util . type . IDENT_10 IDENT_15 = org . opendaylight . yangtools . yang . model . util . type . IDENT_12 . METHOD_4 ( IDENT_1 , org . opendaylight . yangtools . yang . model . util . type . IDENT_4 . IDENT_8 ) ; IDENT_15 . METHOD_5 ( true ) ; final org . opendaylight . yangtools . yang . model . api . type . IDENT_13 IDENT_16 = IDENT_15 . METHOD_6 ( ) ; org . opendaylight . yangtools . yang . model . util . type . IDENT_4 . METHOD_2 ( IDENT_16 , IDENT_14 ) ; org . opendaylight . yangtools . yang . model . util . type . IDENT_4 . METHOD_7 ( IDENT_1 , IDENT_6 ) ; } METHOD_8 ( ) { return METHOD_8 ; }
org . junit . Assert . assertFalse ( IDENT_1 . METHOD_8 ( ) ) 