METHOD_0 ( ) { context = org . opendaylight . yangtools . yang . stmt . TestUtils . METHOD_1 ( getClass ( ) . getResource ( STRING_0 ) . METHOD_2 ( ) ) ; final org . opendaylight . yangtools . yang . model . api . IDENT_0 IDENT_1 = org . opendaylight . yangtools . yang . stmt . TestUtils . METHOD_3 ( context , STRING_1 ) . get ( ) ; final org . opendaylight . yangtools . yang . model . api . IDENT_2 IDENT_3 = ( ( org . opendaylight . yangtools . yang . model . api . IDENT_2 ) ( IDENT_1 . METHOD_4 ( org . opendaylight . yangtools . yang . common . IDENT_4 . create ( IDENT_1 . METHOD_5 ( ) , STRING_2 ) ) ) ) ; final java . util . Set < org . opendaylight . yangtools . yang . model . api . IDENT_5 > IDENT_6 = IDENT_3 . METHOD_6 ( ) ; for ( final org . opendaylight . yangtools . yang . model . api . IDENT_5 IDENT_7 : IDENT_6 ) { "<AssertPlaceHolder>" ; } } METHOD_7 ( ) { return IDENT_8 ; }
org . junit . Assert . assertTrue ( IDENT_7 . METHOD_7 ( ) . isEmpty ( ) ) 