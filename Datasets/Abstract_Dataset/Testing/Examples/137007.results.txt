METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . String > original = com . google . common . collect . ImmutableMap . of ( "foo" , "bar" ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_0 = com . google . common . collect . ImmutableMap . of ( "foo" , "bar" , "test" , STRING_0 ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_1 = com . google . common . collect . ImmutableMap . of ( "foo" , "bar" ) ; com . google . common . collect . IDENT_2 < java . lang . String , java . lang . String > IDENT_3 = com . google . common . collect . IDENT_4 . METHOD_1 ( IDENT_0 , IDENT_1 ) ; java . util . Map < java . lang . String , java . lang . String > result = org . IDENT_5 . core . util . IDENT_6 . METHOD_2 ( original , METHOD_1 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . util . Map , com . google . common . collect . IDENT_2 ) { java . util . Map < IDENT_7 , IDENT_8 > result = new java . util . HashMap < IDENT_7 , IDENT_8 > ( original ) ; if ( IDENT_9 . METHOD_3 ( ) ) { return result ; } for ( java . util . Map . Entry < IDENT_7 , IDENT_8 > entry : IDENT_9 . METHOD_4 ( ) . entrySet ( ) ) { IDENT_8 IDENT_10 = original . get ( entry . getKey ( ) ) ; if ( org . apache . commons . lang . IDENT_11 . equals ( IDENT_10 , entry . getValue ( ) ) ) { result . remove ( entry . getKey ( ) ) ; } } for ( java . util . Map . Entry < IDENT_7 , IDENT_8 > entry : IDENT_9 . METHOD_5 ( ) . entrySet ( ) ) { IDENT_7 key = entry . getKey ( ) ; if ( original . containsKey ( key ) ) { if ( org . apache . commons . lang . IDENT_11 . METHOD_6 ( original . get ( key ) , entry . getValue ( ) ) ) { throw new org . IDENT_5 . core . util . METHOD_7 ( java . lang . String . format ( STRING_1 , key , original . get ( key ) , entry . getValue ( ) ) ) ; } } result . put ( entry . getKey ( ) , entry . getValue ( ) ) ; } for ( java . util . Map . Entry < IDENT_7 , com . google . common . collect . IDENT_2 . IDENT_12 < IDENT_8 > > entry : IDENT_9 . METHOD_8 ( ) . entrySet ( ) ) { IDENT_7 key = entry . getKey ( ) ; IDENT_8 IDENT_10 = original . get ( entry . getKey ( ) ) ; if ( org . apache . commons . lang . IDENT_11 . equals ( IDENT_10 , entry . getValue ( ) . METHOD_9 ( ) ) ) { result . put ( key , entry . getValue ( ) . METHOD_10 ( ) ) ; } else if ( org . apache . commons . lang . IDENT_11 . equals ( IDENT_10 , entry . getValue ( ) . METHOD_10 ( ) ) ) { result . put ( key , IDENT_10 ) ; } else { java . lang . String IDENT_13 = java . lang . String . format ( ( STRING_2 + STRING_3 ) , entry . getKey ( ) , original . get ( entry . getKey ( ) ) , entry . getValue ( ) ) ; throw new org . IDENT_5 . core . util . METHOD_7 ( IDENT_13 ) ; } } return result ; }
org . junit . Assert . assertThat ( result , org . hamcrest . CoreMatchers . is ( original ) ) 