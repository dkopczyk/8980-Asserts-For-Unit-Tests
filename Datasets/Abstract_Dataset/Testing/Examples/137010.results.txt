METHOD_0 ( ) { final java . util . concurrent . atomic . IDENT_0 IDENT_1 = new java . util . concurrent . atomic . METHOD_1 ( 0 ) ; java . lang . IDENT_2 command = new java . lang . METHOD_2 ( ) { @ org . IDENT_3 . core . util . Override public void run ( ) { if ( ( org . IDENT_3 . core . api . context . IDENT_4 . get ( ) . METHOD_3 ( ) ) == ( IDENT_5 . get ( ) ) ) { IDENT_1 . METHOD_4 ( ) ; } } } ; pool . METHOD_5 ( command ) . get ( ) ; org . IDENT_3 . core . api . context . IDENT_4 . get ( ) . METHOD_6 ( "1" ) ; IDENT_5 . set ( "1" ) ; java . util . Collection < java . util . concurrent . IDENT_6 < java . lang . Object > > commands = new java . util . ArrayList < java . util . concurrent . IDENT_6 < java . lang . Object > > ( ) ; commands . add ( java . util . concurrent . IDENT_7 . METHOD_7 ( command ) ) ; commands . add ( java . util . concurrent . IDENT_7 . METHOD_7 ( command ) ) ; java . util . List < java . util . concurrent . IDENT_8 < java . lang . Object > > IDENT_9 = pool . METHOD_8 ( commands ) ; for ( java . util . concurrent . IDENT_8 < java . lang . Object > f : METHOD_8 ) { f . get ( ) ; } "<AssertPlaceHolder>" ; } get ( ) { return commit ; }
org . junit . Assert . assertThat ( IDENT_1 . get ( ) , org . hamcrest . CoreMatchers . is ( 3 ) ) 