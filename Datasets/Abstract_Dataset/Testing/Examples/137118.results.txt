METHOD_0 ( ) { java . util . HashMap < java . lang . Integer , java . lang . String > IDENT_0 = new java . util . HashMap < java . lang . Integer , java . lang . String > ( ) ; IDENT_0 . put ( 0 , STRING_0 ) ; IDENT_0 . put ( INT_0 , STRING_1 ) ; IDENT_0 . put ( 50 , STRING_2 ) ; IDENT_0 . put ( INT_1 , STRING_3 ) ; IDENT_0 . put ( 100 , STRING_4 ) ; for ( int key : IDENT_0 . METHOD_1 ( ) ) { IDENT_1 = base . METHOD_2 ( INT_2 , INT_3 , 1 , 0 , new org . IDENT_2 . core . library . types . METHOD_3 ( key ) ) ; "<AssertPlaceHolder>" ; } } get ( byte [ ] ) { }
org . junit . Assert . assertEquals ( IDENT_0 . get ( key ) , IDENT_1 ) 