METHOD_0 ( ) { java . io . IDENT_0 out = mock ( java . io . IDENT_0 . class ) ; IDENT_1 . config . IDENT_2 . put ( STRING_0 , new org . IDENT_3 . io . IDENT_4 . internal . dto . METHOD_1 ( STRING_0 ) ) ; int result = IDENT_5 . METHOD_2 ( IDENT_6 . IDENT_7 , "" , out , STRING_0 , java . nio . file . IDENT_8 . get ( "/" ) , java . nio . file . IDENT_8 . get ( "" ) , false ) ; "<AssertPlaceHolder>" ; } get ( java . lang . String ) { for ( org . IDENT_3 . binding . IDENT_9 . internal . IDENT_10 . IDENT_11 c : org . IDENT_3 . binding . IDENT_9 . internal . IDENT_10 . IDENT_11 . values ( ) ) { if ( c . text . equals ( IDENT_12 ) ) { return c ; } } throw new java . lang . IllegalArgumentException ( STRING_1 ) ; }
org . junit . Assert . assertEquals ( 200 , result ) 