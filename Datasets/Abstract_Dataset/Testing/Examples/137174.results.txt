METHOD_0 ( ) { factory . METHOD_1 ( provider ) ; factory . METHOD_2 ( provider ) ; java . util . Collection < org . eclipse . IDENT_0 . core . IDENT_1 . IDENT_2 > IDENT_3 = factory . METHOD_3 ( IDENT_4 , IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . eclipse . IDENT_0 . core . IDENT_1 . IDENT_6 , com . IDENT_7 . IDENT_8 . IDENT_9 ) { java . util . Map < org . eclipse . IDENT_0 . core . IDENT_1 . type . IDENT_10 , org . eclipse . IDENT_0 . core . IDENT_1 . IDENT_2 > IDENT_3 = new java . util . HashMap ( ) ; java . lang . reflect . IDENT_11 < ? extends org . IDENT_12 . binding . IDENT_8 . converter . IDENT_13 > IDENT_14 ; for ( java . lang . Class < ? > IDENT_15 : IDENT_16 . values ( ) ) { try { IDENT_14 = ( ( java . lang . reflect . IDENT_11 < ? extends org . IDENT_12 . binding . IDENT_8 . converter . IDENT_13 > ) ( IDENT_15 . METHOD_4 ( ) ) ) ; org . IDENT_12 . binding . IDENT_8 . converter . IDENT_13 converter = IDENT_14 . newInstance ( ) ; org . eclipse . IDENT_0 . core . IDENT_1 . IDENT_2 channel = converter . METHOD_5 ( IDENT_4 , IDENT_5 ) ; if ( channel != null ) { IDENT_3 . put ( channel . METHOD_6 ( ) , channel ) ; } } catch ( java . lang . IDENT_17 | java . lang . IDENT_18 | java . lang . IllegalArgumentException | java . lang . reflect . IDENT_19 | java . lang . IDENT_20 | java . lang . IDENT_21 e ) { logger . debug ( STRING_0 , IDENT_5 . METHOD_7 ( ) , e ) ; } } for ( Map . Entry < org . eclipse . IDENT_0 . core . IDENT_1 . type . IDENT_10 , org . eclipse . IDENT_0 . core . IDENT_1 . type . IDENT_10 > IDENT_22 : IDENT_23 . entrySet ( ) ) { if ( ( IDENT_3 . containsKey ( IDENT_22 . getKey ( ) ) ) && ( IDENT_3 . containsKey ( IDENT_22 . getValue ( ) ) ) ) { logger . debug ( STRING_1 , IDENT_5 . METHOD_7 ( ) , IDENT_22 . getValue ( ) , IDENT_22 . getKey ( ) ) ; IDENT_3 . remove ( IDENT_22 . getValue ( ) ) ; } } return IDENT_3 . values ( ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_3 . size ( ) ) 