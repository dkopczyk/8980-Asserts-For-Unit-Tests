METHOD_0 ( ) { if ( ! ( net . IDENT_0 . IDENT_1 . core . IDENT_2 . METHOD_1 ( ) ) ) return ; try ( final net . IDENT_0 . IDENT_1 . map . IDENT_3 < java . lang . IDENT_4 , java . lang . IDENT_4 > map = net . IDENT_0 . IDENT_1 . map . IDENT_5 . of ( net . IDENT_0 . IDENT_1 . map . IDENT_4 . class , net . IDENT_0 . IDENT_1 . map . IDENT_4 . class ) . METHOD_2 ( FLOAT_0 ) . METHOD_3 ( FLOAT_0 ) . METHOD_4 ( INT_0 ) . METHOD_5 ( INT_1 ) . create ( ) ) { for ( int i = 0 ; i < INT_0 ; ++ i ) { java . lang . String s = java . lang . String . valueOf ( i ) ; map . put ( s , s ) ; } for ( int i = 0 ; i < INT_0 ; ++ i ) { java . lang . String s = java . lang . String . valueOf ( i ) ; "<AssertPlaceHolder>" ; } } } get ( java . lang . Object ) { return METHOD_6 ( new net . IDENT_0 . IDENT_1 . map . IDENT_6 . IDENT_7 < IDENT_8 , IDENT_9 > ( ) { @ net . IDENT_0 . IDENT_1 . map . Override public java . lang . Object method ( java . util . concurrent . IDENT_10 < IDENT_8 , IDENT_9 > map ) { return map . get ( key ) ; } } ) ; }
org . junit . Assert . assertEquals ( s , map . get ( s ) . toString ( ) ) 