METHOD_0 ( ) { @ org . IDENT_0 . IDENT_1 . IDENT_2 net . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 IDENT_5 = new net . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_1 ( METHOD_2 ( ) ) ; @ org . IDENT_0 . IDENT_1 . IDENT_2 final net . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_7 out = IDENT_5 . METHOD_3 ( ) ; @ org . IDENT_0 . IDENT_1 . IDENT_2 final net . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_8 in = IDENT_5 . METHOD_4 ( ) ; for ( int t = 0 ; t < 200 ; t ++ ) { IDENT_5 . METHOD_5 ( ) ; double d = t / FLOAT_0 ; out . METHOD_6 ( d ) ; final double v = in . METHOD_6 ( ) ; "<AssertPlaceHolder>" ; final long size = IDENT_5 . bytes ( ) . METHOD_7 ( ) ; System . out . println ( ( ( d + STRING_0 ) + size ) ) ; } } METHOD_6 ( ) { @ org . IDENT_0 . IDENT_1 . IDENT_2 net . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 IDENT_5 = METHOD_8 ( ) ; IDENT_5 . write ( ) . METHOD_6 ( 1 ) ; IDENT_5 . write ( net . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 . IDENT_10 . IDENT_11 ) . METHOD_6 ( 2 ) ; IDENT_5 . write ( ( ) -> STRING_1 ) . METHOD_6 ( 3 ) ; METHOD_9 ( IDENT_5 , STRING_2 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 ) ; if ( ( IDENT_5 . METHOD_3 ( ) ) instanceof net . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_1 . IDENT_12 ) METHOD_10 ( IDENT_5 ) ; else METHOD_11 ( IDENT_5 ) ; IDENT_5 . write ( ) . METHOD_6 ( 0 ) ; class IDENT_13 { double f ; public void set ( double d ) { f = d ; } } @ org . IDENT_0 . IDENT_1 . IDENT_2 IDENT_13 n = new METHOD_12 ( ) ; java . util . stream . IDENT_14 . METHOD_13 ( 1 , 3 ) . METHOD_14 ( ( e ) -> { IDENT_5 . read ( ) . METHOD_6 ( n , net . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_12 :: set ) ; assertEquals ( e , n . f , 0.0 ) ; } ) ; org . junit . Assert . assertEquals ( 0.0 , IDENT_5 . read ( ) . METHOD_6 ( ) , 0.0 ) ; org . junit . Assert . assertEquals ( 0 , bytes . METHOD_15 ( ) ) ; IDENT_5 . read ( ) ; }
org . junit . Assert . assertEquals ( d , v , 0.0 ) 