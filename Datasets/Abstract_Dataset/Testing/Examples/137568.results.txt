METHOD_0 ( ) { net . IDENT_0 . IDENT_1 . bytes . IDENT_2 < java . nio . ByteBuffer > bytes = net . IDENT_0 . IDENT_1 . bytes . IDENT_2 . METHOD_1 ( ) ; net . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 IDENT_3 = new net . IDENT_0 . IDENT_1 . IDENT_3 . METHOD_2 ( bytes ) ; net . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_5 . IDENT_6 IDENT_7 = new net . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_5 . METHOD_3 ( 1 , true , ( ( byte ) ( 2 ) ) , STRING_0 , ( ( short ) ( 4 ) ) , 5 , 6 , 7 , 8 , STRING_1 ) ; IDENT_7 . METHOD_4 ( IDENT_3 ) ; java . nio . ByteBuffer IDENT_8 = bytes . METHOD_5 ( ) ; IDENT_8 . position ( ( ( int ) ( bytes . METHOD_6 ( ) ) ) ) ; IDENT_8 . METHOD_7 ( ( ( int ) ( bytes . METHOD_8 ( ) ) ) ) ; net . IDENT_0 . IDENT_1 . bytes . IDENT_2 < java . nio . ByteBuffer > IDENT_9 = net . IDENT_0 . IDENT_1 . bytes . IDENT_2 . METHOD_1 ( ) ; IDENT_9 . METHOD_9 ( IDENT_8 . METHOD_10 ( ) ) ; java . nio . ByteBuffer IDENT_10 = IDENT_9 . METHOD_5 ( ) ; IDENT_10 . METHOD_11 ( ) ; IDENT_10 . put ( IDENT_8 ) ; IDENT_9 . METHOD_6 ( 0 ) ; IDENT_9 . METHOD_8 ( IDENT_10 . position ( ) ) ; net . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 IDENT_11 = new net . IDENT_0 . IDENT_1 . IDENT_3 . METHOD_2 ( IDENT_9 ) ; net . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_5 . METHOD_3 IDENT_12 = net . IDENT_0 . IDENT_1 . core . util . IDENT_13 . newInstance ( net . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_5 . METHOD_3 . class ) ; IDENT_12 . METHOD_12 ( IDENT_11 ) ; "<AssertPlaceHolder>" ; bytes . METHOD_13 ( ) ; IDENT_9 . METHOD_13 ( ) ; } METHOD_12 ( net . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_14 ) { if ( IDENT_3 instanceof net . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_15 ) { METHOD_12 ( ( ( net . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_15 ) ( IDENT_3 ) ) . bytes ) ; } else { super . METHOD_12 ( IDENT_3 ) ; } }
org . junit . Assert . assertEquals ( IDENT_7 , IDENT_12 ) 