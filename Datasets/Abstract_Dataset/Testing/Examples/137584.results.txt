METHOD_0 ( ) { java . util . List < java . lang . reflect . Field > fields = net . IDENT_0 . lang . io . serialization . IDENT_1 . IDENT_2 . METHOD_1 ( STRING_0 , STRING_1 , STRING_2 , STRING_3 , STRING_4 ) ; java . util . List < java . lang . reflect . Field > IDENT_3 = fields . METHOD_2 ( 0 , 4 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . util . List ) { java . util . ArrayList < java . lang . reflect . Field > IDENT_4 = new java . util . ArrayList < java . lang . reflect . Field > ( ) ; for ( java . lang . reflect . Field f : fields ) { if ( net . IDENT_0 . lang . io . serialization . IDENT_1 . IDENT_5 . METHOD_4 ( f ) ) { IDENT_4 . add ( f ) ; } else { break ; } } return IDENT_4 . isEmpty ( ) ? java . util . Collections . < java . lang . reflect . Field > emptyList ( ) : IDENT_4 ; }
org . junit . Assert . assertEquals ( IDENT_3 , net . IDENT_0 . lang . io . serialization . IDENT_1 . IDENT_5 . METHOD_3 ( fields ) ) 