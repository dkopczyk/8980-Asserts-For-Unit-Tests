METHOD_0 ( ) { float [ ] [ ] IDENT_0 = new float [ ] [ ] { new float [ ] { FLOAT_0 , FLOAT_1 , FLOAT_1 } , new float [ ] { FLOAT_1 , FLOAT_0 , FLOAT_1 } , new float [ ] { FLOAT_1 , FLOAT_1 , FLOAT_0 } , new float [ ] { FLOAT_2 , FLOAT_3 , FLOAT_0 } } ; int [ ] IDENT_1 = new int [ ] { 4 , 10 , 20 } ; org . IDENT_2 . math . IDENT_3 . IDENT_4 . IDENT_5 IDENT_6 = new org . IDENT_2 . math . IDENT_3 . IDENT_4 . METHOD_1 ( IDENT_1 ) ; for ( float [ ] val : IDENT_0 ) { int [ ] IDENT_7 = METHOD_2 ( val , IDENT_1 ) ; "<AssertPlaceHolder>" ; } } METHOD_3 ( org . IDENT_2 . math . IDENT_3 . IDENT_4 . METHOD_1 , int [ ] ) { int index = IDENT_6 . METHOD_4 ( IDENT_8 ) ; int [ ] IDENT_9 = IDENT_6 . METHOD_5 ( index ) ; return java . util . Arrays . equals ( IDENT_8 , IDENT_9 ) ; }
org . junit . Assert . assertTrue ( METHOD_3 ( IDENT_6 , METHOD_2 ) ) 