METHOD_0 ( ) { METHOD_1 ( ) ; final int IDENT_0 = INT_0 ; final int IDENT_1 = 3 ; final java . lang . String IDENT_2 = STRING_0 ; final org . apache . hadoop . fs . Path IDENT_3 = new org . apache . hadoop . fs . Path ( IDENT_2 ) ; org . apache . hadoop . conf . Configuration configuration = new org . apache . hadoop . hdfs . METHOD_2 ( ) ; configuration . METHOD_3 ( org . apache . hadoop . hdfs . IDENT_4 . IDENT_5 , INT_1 ) ; configuration . METHOD_3 ( org . apache . hadoop . hdfs . IDENT_4 . IDENT_6 , 2 ) ; configuration . METHOD_4 ( org . apache . hadoop . hdfs . IDENT_4 . IDENT_7 , IDENT_0 ) ; org . apache . hadoop . hdfs . IDENT_8 cluster = null ; try { cluster = new org . apache . hadoop . hdfs . IDENT_8 . Builder ( configuration ) . METHOD_5 ( 5 ) . build ( ) ; cluster . METHOD_6 ( ) ; final org . apache . hadoop . hdfs . IDENT_9 IDENT_10 = cluster . METHOD_7 ( ) ; final org . apache . hadoop . hdfs . server . IDENT_11 . IDENT_12 IDENT_13 = cluster . METHOD_8 ( ) ; org . apache . hadoop . fs . IDENT_14 out = IDENT_10 . create ( IDENT_3 , ( ( short ) ( IDENT_1 ) ) ) ; out . write ( org . apache . hadoop . hdfs . IDENT_15 . METHOD_9 ( 0 , IDENT_0 ) ) ; out . METHOD_10 ( ) ; org . apache . hadoop . hdfs . IDENT_16 IDENT_17 = new org . apache . hadoop . hdfs . METHOD_11 ( new java . net . METHOD_12 ( STRING_1 , cluster . METHOD_13 ( ) ) , configuration ) ; org . apache . hadoop . hdfs . protocol . IDENT_18 IDENT_19 = IDENT_17 . METHOD_14 ( ) . METHOD_15 ( IDENT_2 , 0 , IDENT_0 ) . METHOD_16 ( ) ; java . util . List < org . apache . hadoop . hdfs . protocol . IDENT_20 > IDENT_21 = java . util . Arrays . asList ( IDENT_19 . METHOD_17 ( ) ) ; "<AssertPlaceHolder>" ; for ( org . apache . hadoop . hdfs . protocol . IDENT_20 IDENT_22 : IDENT_21 . METHOD_18 ( 0 , ( IDENT_1 - 1 ) ) ) { cluster . METHOD_19 ( IDENT_22 . getName ( ) ) ; } org . apache . hadoop . test . IDENT_23 . METHOD_20 ( new com . google . common . base . IDENT_24 < java . lang . Boolean > ( ) { @ org . apache . hadoop . hdfs . server . IDENT_25 . Override public org . apache . hadoop . hdfs . server . IDENT_25 . Boolean get ( ) { return ( IDENT_13 . METHOD_21 ( ) ) == 2 ; } } , INT_2 , INT_3 ) ; cluster . METHOD_22 ( INT_4 , INT_4 ) ; org . apache . hadoop . test . IDENT_23 . METHOD_20 ( new com . google . common . base . IDENT_24 < java . lang . Boolean > ( ) { @ org . apache . hadoop . hdfs . server . IDENT_25 . Override public org . apache . hadoop . hdfs . server . IDENT_25 . Boolean get ( ) { try { return IDENT_10 . METHOD_23 ( IDENT_3 ) ; } catch ( java . io . IOException e ) { } return false ; } } , INT_2 , INT_3 ) ; org . apache . hadoop . hdfs . IDENT_26 . METHOD_24 ( cluster , org . apache . hadoop . hdfs . IDENT_26 . METHOD_25 ( IDENT_10 , IDENT_3 ) , 1 , IDENT_1 , 0 ) ; } finally { if ( cluster != null ) { cluster . METHOD_26 ( ) ; } } } size ( ) { return IDENT_27 . size ( ) ; }
org . junit . Assert . assertEquals ( IDENT_21 . size ( ) , IDENT_1 ) 