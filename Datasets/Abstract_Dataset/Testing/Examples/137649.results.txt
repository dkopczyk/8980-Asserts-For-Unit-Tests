METHOD_0 ( ) { final java . io . File IDENT_0 = IDENT_1 . METHOD_1 ( STRING_0 ) ; IDENT_0 . delete ( ) ; java . lang . String [ ] args = new java . lang . String [ ] { STRING_1 2 , STRING_2 , STRING_3 , STRING_1 0 , STRING_4 , "1" , STRING_5 , STRING_6 , STRING_7 , IDENT_0 . getAbsolutePath ( ) , IDENT_2 [ 0 ] , IDENT_2 [ 1 ] , IDENT_2 [ 2 ] } ; org . IDENT_3 . tools . IDENT_4 . IDENT_5 options = new org . IDENT_3 . tools . IDENT_4 . METHOD_2 ( args ) ; options . METHOD_3 ( ) ; final byte [ ] [ ] IDENT_6 = org . IDENT_3 . tools . IDENT_4 . IDENT_7 . METHOD_4 ( options ) ; args = new java . lang . String [ ] { STRING_1 1 , STRING_8 , STRING_3 , STRING_1 0 , STRING_4 , "1" , STRING_1 , IDENT_1 . METHOD_1 ( STRING_1 3 ) . getAbsolutePath ( ) , STRING_7 , IDENT_0 . getAbsolutePath ( ) } ; options = new org . IDENT_3 . tools . IDENT_4 . METHOD_2 ( args ) ; options . METHOD_3 ( ) ; options . METHOD_5 ( ) ; final byte [ ] [ ] IDENT_8 = options . METHOD_6 ( ) ; for ( int i = 0 ; i < ( IDENT_6 . length ) ; i ++ ) { for ( int j = 0 ; j < ( IDENT_6 [ i ] . length ) ; j ++ ) { "<AssertPlaceHolder>" ; } } } METHOD_6 ( ) { return IDENT_9 ; }
org . junit . Assert . assertTrue ( ( ( IDENT_6 [ i ] [ j ] ) == ( IDENT_8 [ i ] [ j ] ) ) ) 