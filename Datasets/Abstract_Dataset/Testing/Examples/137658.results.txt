METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . io . File IDENT_1 = IDENT_2 . METHOD_1 ( STRING_1 ) ; java . lang . String IDENT_3 = java . lang . String . format ( IDENT_4 , IDENT_5 , IDENT_1 , IDENT_0 , STRING_2 ) ; IDENT_3 += STRING_3 ; java . lang . String [ ] IDENT_6 = IDENT_3 . split ( " " ) ; org . IDENT_7 . tools . IDENT_8 . IDENT_9 . METHOD_2 ( IDENT_6 ) ; org . IDENT_7 . IDENT_8 . collection . IDENT_10 < org . IDENT_7 . IDENT_8 . IDENT_11 > IDENT_12 = org . IDENT_7 . IDENT_8 . collection . IDENT_13 . METHOD_3 ( IDENT_1 , STRING_4 ) ; org . IDENT_7 . tools . IDENT_8 . IDENT_14 . IDENT_15 . IDENT_16 IDENT_17 = new org . IDENT_7 . tools . IDENT_8 . IDENT_14 . IDENT_15 . METHOD_4 ( ) ; org . IDENT_7 . tools . IDENT_8 . IDENT_14 . IDENT_15 . IDENT_18 IDENT_19 = new org . IDENT_7 . tools . IDENT_8 . IDENT_14 . IDENT_15 . METHOD_5 ( ) ; for ( org . IDENT_7 . IDENT_8 . IDENT_11 IDENT_20 : IDENT_12 ) { java . util . Map < java . lang . String , java . lang . Object > a = org . IDENT_7 . tools . IDENT_8 . IDENT_14 . IDENT_15 . METHOD_4 . results ( IDENT_20 , IDENT_17 ) ; boolean IDENT_21 = org . IDENT_7 . text . IDENT_22 . IDENT_23 . isValid ( ( ( java . lang . String ) ( a . get ( STRING_5 ) ) ) ) ; java . util . Map < java . lang . String , java . util . List < java . lang . String > > tokens = org . IDENT_7 . tools . IDENT_8 . IDENT_14 . IDENT_15 . METHOD_5 . results ( IDENT_20 , IDENT_19 ) ; boolean IDENT_24 = ( tokens . size ( ) ) != 0 ; boolean IDENT_25 = ( IDENT_24 && IDENT_21 ) || ( ( ! IDENT_24 ) && ( ! IDENT_21 ) ) ; if ( ! IDENT_25 ) { System . out . println ( ( STRING_6 + ( a . get ( STRING_5 ) ) ) ) ; System . out . println ( ( STRING_7 + tokens ) ) ; } "<AssertPlaceHolder>" ; } IDENT_1 . delete ( ) ; } get ( int ) { int IDENT_26 = 0 ; for ( final org . IDENT_7 . tools . IDENT_27 . IDENT_28 IDENT_29 : this ) { if ( ( IDENT_26 ++ ) == index ) return IDENT_29 ; } return null ; }
org . junit . Assert . assertTrue ( IDENT_25 ) 