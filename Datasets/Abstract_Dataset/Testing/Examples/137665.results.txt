METHOD_0 ( ) { final java . io . InputStream stream = org . IDENT_0 . IDENT_1 . IDENT_2 . class . getResourceAsStream ( STRING_0 ) ; final org . IDENT_0 . IDENT_1 . collection . IDENT_3 < org . IDENT_0 . IDENT_1 . IDENT_2 > status = org . IDENT_0 . IDENT_1 . collection . IDENT_4 . METHOD_1 ( stream , org . IDENT_0 . IDENT_1 . IDENT_5 . class ) ; final org . IDENT_0 . IDENT_1 . collection . IDENT_3 < org . IDENT_0 . IDENT_1 . IDENT_2 > IDENT_6 = new org . IDENT_0 . IDENT_1 . collection . IDENT_7 < org . IDENT_0 . IDENT_1 . IDENT_2 > ( status ) ; final java . io . File IDENT_8 = IDENT_9 . METHOD_2 ( ( ( STRING_1 + ( stream . hashCode ( ) ) ) + STRING_2 ) ) ; org . IDENT_0 . io . IDENT_10 . METHOD_3 ( IDENT_8 , IDENT_6 ) ; final org . IDENT_0 . IDENT_1 . collection . IDENT_3 < org . IDENT_0 . IDENT_1 . IDENT_2 > IDENT_11 = org . IDENT_0 . IDENT_1 . collection . IDENT_7 . read ( IDENT_8 ) ; "<AssertPlaceHolder>" ; IDENT_8 . delete ( ) ; } equals ( java . lang . Object ) { return ( obj instanceof ch . IDENT_12 . IDENT_13 . IDENT_14 ) && ( IDENT_15 . equals ( ( ( ch . IDENT_12 . IDENT_13 . IDENT_14 ) ( obj ) ) . IDENT_15 ) ) ; }
org . junit . Assert . assertTrue ( IDENT_6 . equals ( IDENT_11 ) ) 