METHOD_0 ( ) { com . ibm . IDENT_0 . IDENT_1 . log . IDENT_2 . METHOD_1 ( com . ibm . ws . kernel . IDENT_3 . IDENT_4 . c , IDENT_5 . METHOD_2 ( ) ) ; java . lang . String [ ] IDENT_6 = new java . lang . String [ 2 ] ; IDENT_6 [ 0 ] = STRING_0 7 ; IDENT_6 [ 1 ] = com . ibm . ws . kernel . IDENT_3 . IDENT_4 . IDENT_7 ; java . util . Properties IDENT_8 = new java . util . Properties ( ) ; IDENT_8 . put ( STRING_0 6 , STRING_0 4 ) ; METHOD_3 ( ) ; java . io . IDENT_9 IDENT_10 = new java . io . METHOD_4 ( new java . io . METHOD_5 ( com . ibm . ws . kernel . IDENT_3 . IDENT_4 . IDENT_11 ) , STRING_0 0 ) ; java . io . IDENT_12 IDENT_13 = new java . io . METHOD_6 ( IDENT_10 ) ; IDENT_13 . write ( STRING_1 ) ; IDENT_13 . close ( ) ; com . ibm . IDENT_0 . IDENT_1 . IDENT_14 IDENT_15 = com . ibm . ws . kernel . IDENT_3 . IDENT_4 . server . METHOD_7 ( ) . execute ( com . ibm . ws . kernel . IDENT_3 . IDENT_4 . IDENT_16 , IDENT_6 , com . ibm . ws . kernel . IDENT_3 . IDENT_4 . IDENT_17 , IDENT_8 ) ; com . ibm . IDENT_0 . IDENT_1 . log . IDENT_2 . info ( com . ibm . ws . kernel . IDENT_3 . IDENT_4 . c , IDENT_5 . METHOD_2 ( ) , ( STRING_2 + ( IDENT_15 . METHOD_8 ( ) ) ) ) ; com . ibm . IDENT_0 . IDENT_1 . log . IDENT_2 . info ( com . ibm . ws . kernel . IDENT_3 . IDENT_4 . c , IDENT_5 . METHOD_2 ( ) , ( STRING_3 + ( IDENT_15 . METHOD_9 ( ) ) ) ) ; com . ibm . ws . kernel . IDENT_3 . IDENT_4 . server . METHOD_10 ( STRING_4 ) ; com . ibm . ws . kernel . IDENT_3 . IDENT_4 . server . METHOD_11 ( ) ; com . ibm . ws . kernel . IDENT_3 . IDENT_4 . server . METHOD_12 ( ) ; java . io . File [ ] IDENT_18 = new java . io . File ( ( ( ( com . ibm . ws . kernel . IDENT_3 . IDENT_4 . IDENT_17 ) + STRING_5 ) + ( com . ibm . ws . kernel . IDENT_3 . IDENT_4 . IDENT_7 ) ) ) . METHOD_13 ( ) ; java . io . File IDENT_19 = new java . io . File ( STRING_0 1 ) ; for ( java . io . File f : IDENT_18 ) { java . lang . String IDENT_20 = f . getName ( ) ; com . ibm . IDENT_0 . IDENT_1 . log . IDENT_2 . info ( com . ibm . ws . kernel . IDENT_3 . IDENT_4 . c , IDENT_5 . METHOD_2 ( ) , ( STRING_0 2 + IDENT_20 ) ) ; if ( ( IDENT_20 . startsWith ( ( ( com . ibm . ws . kernel . IDENT_3 . IDENT_4 . IDENT_7 ) + STRING_6 ) ) ) && ( IDENT_20 . METHOD_14 ( STRING_7 ) ) ) { IDENT_19 = f ; break ; } } if ( ( IDENT_19 . getPath ( ) . compareTo ( STRING_0 1 ) ) == 0 ) { org . junit . Assert . fail ( STRING_0 3 ) ; } java . util . IDENT_21 . IDENT_22 IDENT_23 = new java . util . IDENT_21 . METHOD_15 ( IDENT_19 ) ; boolean IDENT_24 = false ; for ( java . util . IDENT_25 < ? extends java . util . IDENT_21 . IDENT_26 > IDENT_27 = IDENT_23 . METHOD_16 ( ) ; IDENT_27 . METHOD_17 ( ) ; ) { java . util . IDENT_21 . IDENT_26 entry = IDENT_27 . METHOD_18 ( ) ; java . lang . String IDENT_28 = entry . getName ( ) ; if ( IDENT_28 . METHOD_14 ( STRING_8 ) ) { java . io . InputStream IDENT_29 = IDENT_23 . METHOD_19 ( entry ) ; java . io . IDENT_30 reader = new java . io . METHOD_20 ( new java . io . METHOD_21 ( IDENT_29 ) ) ; java . lang . String line ; int i = 0 ; while ( ( line = reader . METHOD_22 ( ) ) != null ) { com . ibm . IDENT_0 . IDENT_1 . log . IDENT_2 . info ( com . ibm . ws . kernel . IDENT_3 . IDENT_4 . c , IDENT_5 . METHOD_2 ( ) , ( ( ( STRING_9 + i ) + STRING_0 5 ) + line ) ) ; if ( line . contains ( STRING_1 ) ) { IDENT_24 = true ; break ; } i ++ ; } reader . close ( ) ; IDENT_29 . close ( ) ; } } IDENT_23 . close ( ) ; IDENT_19 . delete ( ) ; "<AssertPlaceHolder>" ; com . ibm . ws . kernel . IDENT_3 . IDENT_4 . server . METHOD_23 ( ) ; } delete ( ) { com . ibm . ws . IDENT_31 . internal . IDENT_32 . close ( IDENT_21 ) ; super . delete ( ) ; }
org . junit . Assert . assertTrue ( STRING_0 , IDENT_24 ) 