METHOD_0 ( ) { com . ibm . ws . logging . json . IDENT_0 . IDENT_1 . METHOD_1 ( com . ibm . ws . logging . json . IDENT_0 . IDENT_1 . IDENT_2 ) ; com . ibm . IDENT_3 . IDENT_4 . IDENT_5 IDENT_6 = com . ibm . ws . logging . json . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 ( ) ; line = com . ibm . ws . logging . json . IDENT_0 . IDENT_1 . METHOD_3 ( com . ibm . ws . logging . json . IDENT_0 . IDENT_1 . IDENT_7 , IDENT_6 , com . ibm . ws . logging . json . IDENT_0 . IDENT_1 . IDENT_2 ) ; boolean IDENT_8 = METHOD_4 ( com . ibm . ws . logging . json . IDENT_0 . IDENT_1 . IDENT_9 , IDENT_6 , com . ibm . ws . logging . json . IDENT_0 . IDENT_1 . IDENT_2 ) ; "<AssertPlaceHolder>" ; com . ibm . ws . logging . json . IDENT_0 . IDENT_1 . METHOD_5 ( com . ibm . ws . logging . json . IDENT_0 . IDENT_1 . IDENT_2 ) ; } METHOD_4 ( java . lang . String [ ] , com . ibm . IDENT_3 . IDENT_4 . IDENT_5 , IDENT_10 . IDENT_11 . impl . IDENT_12 ) { com . ibm . ws . logging . json . IDENT_0 . TestUtils . METHOD_6 ( server , STRING_0 ) ; java . util . List < java . lang . String > results ; for ( java . lang . String message : IDENT_13 ) { results = server . METHOD_7 ( message , IDENT_14 ) ; if ( ! ( results . isEmpty ( ) ) ) { return false ; } } return true ; }
org . junit . Assert . assertFalse ( IDENT_8 ) 