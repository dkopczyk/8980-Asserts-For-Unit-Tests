METHOD_0 ( ) { java . lang . String host = STRING_0 ; java . lang . String IDENT_0 = STRING_1 ; java . lang . String url = host + STRING_2 ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String ) { if ( ( IDENT_0 . startsWith ( "/" ) ) || ( ( IDENT_0 . length ( ) ) == 0 ) ) { int IDENT_1 = url . indexOf ( STRING_3 ) ; int IDENT_2 = url . indexOf ( "/" , ( IDENT_1 + 2 ) ) ; IDENT_0 = ( url . substring ( 0 , IDENT_2 ) ) + IDENT_0 ; } else { try { java . net . URL IDENT_3 = new java . net . URL ( IDENT_0 ) ; java . lang . String IDENT_4 = IDENT_3 . METHOD_2 ( ) ; if ( ( IDENT_4 == null ) || ( ( IDENT_4 . length ( ) ) == 0 ) ) { java . net . URL IDENT_5 = new java . net . URL ( url ) ; java . lang . String IDENT_6 = IDENT_5 . METHOD_2 ( ) ; int IDENT_1 = IDENT_0 . indexOf ( STRING_3 ) ; java . lang . StringBuffer IDENT_7 = new java . lang . StringBuffer ( IDENT_0 ) ; IDENT_7 . insert ( ( IDENT_1 + 2 ) , IDENT_6 ) ; IDENT_0 = IDENT_7 . toString ( ) ; } } catch ( com . ibm . ws . IDENT_8 . security . internal . java e ) { if ( ( com . ibm . IDENT_9 . IDENT_10 . IDENT_11 . METHOD_3 ( ) ) && ( com . ibm . ws . IDENT_8 . security . internal . IDENT_12 . tc . METHOD_4 ( ) ) ) { com . ibm . IDENT_9 . IDENT_10 . IDENT_13 . debug ( com . ibm . ws . IDENT_8 . security . internal . IDENT_12 . tc , STRING_4 , new java . lang . Object [ ] { e } ) ; } } } return IDENT_0 ; }
org . junit . Assert . assertEquals ( ( host + IDENT_0 ) , handler . METHOD_1 ( IDENT_0 , url ) ) 