METHOD_0 ( ) { mock . METHOD_1 ( new org . IDENT_0 . METHOD_2 ( ) { { METHOD_3 ( conn ) . METHOD_4 ( ) ; METHOD_5 ( METHOD_6 ( request ) ) ; METHOD_3 ( conn ) . METHOD_7 ( ) ; METHOD_5 ( METHOD_6 ( true ) ) ; METHOD_3 ( conn ) . METHOD_8 ( STRING_0 ) ; METHOD_5 ( METHOD_6 ( null ) ) ; METHOD_3 ( conn ) . METHOD_8 ( STRING_1 ) ; METHOD_5 ( METHOD_6 ( null ) ) ; METHOD_3 ( conn ) . METHOD_8 ( STRING_2 ) ; METHOD_5 ( METHOD_6 ( STRING_3 ) ) ; METHOD_3 ( request ) . METHOD_9 ( ) ; METHOD_5 ( METHOD_6 ( STRING_4 ) ) ; } } ) ; java . util . Map < java . lang . String , java . lang . Object > config = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; config . put ( STRING_5 , "" ) ; com . ibm . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_10 ( config ) ; com . ibm . ws . IDENT_2 . osgi . request . IDENT_4 IDENT_5 = new com . ibm . ws . IDENT_2 . osgi . request . METHOD_11 ( conn ) ; java . lang . String IDENT_6 = IDENT_5 . METHOD_9 ( ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( ) { try { IDENT_7 . METHOD_12 ( IDENT_8 ) ; return request . METHOD_9 ( ) ; } finally { IDENT_7 . METHOD_13 ( ) ; } }
org . junit . Assert . assertEquals ( STRING_3 , IDENT_6 ) 