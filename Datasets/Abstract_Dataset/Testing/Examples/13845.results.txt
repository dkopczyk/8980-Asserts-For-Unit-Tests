METHOD_0 ( ) { java . io . File IDENT_0 = new java . io . File ( IDENT_1 . IDENT_2 , STRING_0 ) ; java . util . List < java . net . URI > IDENT_3 = java . util . Collections . singletonList ( IDENT_0 . METHOD_1 ( ) ) ; org . apache . hadoop . hdfs . server . IDENT_4 . IDENT_5 storage = org . apache . hadoop . hdfs . server . IDENT_4 . IDENT_1 . METHOD_2 ( IDENT_3 , 5 ) ; org . apache . hadoop . hdfs . server . common . IDENT_6 . IDENT_7 IDENT_8 = storage . METHOD_3 ( IDENT_9 . IDENT_10 ) . next ( ) ; "<AssertPlaceHolder>" ; org . apache . hadoop . fs . IDENT_11 . METHOD_4 ( IDENT_0 , false ) ; org . apache . hadoop . hdfs . server . IDENT_4 . IDENT_12 IDENT_13 = null ; try { IDENT_13 = new org . apache . hadoop . hdfs . server . IDENT_4 . METHOD_5 ( conf , IDENT_8 , storage ) ; exception . expect ( java . io . IOException . class ) ; if ( org . apache . hadoop . util . IDENT_14 . METHOD_6 ( ) ) { exception . METHOD_7 ( STRING_1 ) ; } IDENT_13 . METHOD_8 ( ) ; } finally { org . apache . hadoop . io . IDENT_15 . METHOD_9 ( org . apache . hadoop . hdfs . server . IDENT_4 . IDENT_16 . LOG , IDENT_13 ) ; org . apache . hadoop . fs . IDENT_11 . METHOD_4 ( IDENT_0 , true ) ; org . apache . hadoop . fs . IDENT_11 . METHOD_10 ( IDENT_0 ) ; } } next ( ) { return remote . next ( ) ; }
org . junit . Assert . assertNotNull ( IDENT_8 ) 