METHOD_0 ( ) { org . openmrs . IDENT_0 IDENT_1 = new org . openmrs . METHOD_1 ( ) ; IDENT_1 . METHOD_2 ( new org . openmrs . METHOD_3 ( STRING_0 2 , new java . util . Locale ( STRING_0 1 ) ) ) ; IDENT_1 . METHOD_2 ( new org . openmrs . METHOD_3 ( STRING_1 , new java . util . Locale ( STRING_0 1 , STRING_2 ) ) ) ; IDENT_1 . METHOD_2 ( new org . openmrs . METHOD_3 ( STRING_3 , new java . util . Locale ( STRING_0 1 , STRING_0 ) ) ) ; IDENT_1 . METHOD_2 ( new org . openmrs . METHOD_3 ( STRING_0 0 , new java . util . Locale ( STRING_4 , STRING_5 ) ) ) ; IDENT_1 . METHOD_2 ( new org . openmrs . METHOD_3 ( STRING_6 , new java . util . Locale ( STRING_0 1 , STRING_7 ) ) ) ; IDENT_1 . METHOD_2 ( new org . openmrs . METHOD_3 ( STRING_8 , new java . util . Locale ( STRING_0 1 , STRING_2 ) ) ) ; IDENT_1 . METHOD_2 ( new org . openmrs . METHOD_3 ( STRING_9 , new java . util . Locale ( STRING_0 1 , STRING_0 ) ) ) ; java . util . Set < java . util . Locale > IDENT_2 = IDENT_1 . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } size ( ) { return METHOD_5 ( ) . stream ( ) . filter ( ( m ) -> ! ( m . METHOD_6 ( ) ) ) . collect ( java . util . stream . IDENT_3 . toList ( ) ) . size ( ) ; }
org . junit . Assert . assertEquals ( 5 , IDENT_2 . size ( ) ) 