METHOD_0 ( ) { java . util . Calendar IDENT_0 = java . util . Calendar . getInstance ( ) ; IDENT_0 . set ( INT_0 , Calendar . IDENT_1 , 2 ) ; java . util . Calendar IDENT_2 = java . util . Calendar . getInstance ( ) ; IDENT_2 . set ( INT_1 , Calendar . IDENT_1 , 3 ) ; java . util . Calendar IDENT_3 = java . util . Calendar . getInstance ( ) ; IDENT_3 . set ( INT_2 , Calendar . IDENT_1 , 3 ) ; org . openmrs . Person person = new org . openmrs . Person ( ) ; person . METHOD_1 ( IDENT_0 . getTime ( ) ) ; person . METHOD_2 ( true ) ; person . METHOD_3 ( IDENT_2 . getTime ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . util . Date ) { if ( ( IDENT_0 ) == null ) { return null ; } java . util . Calendar IDENT_4 = java . util . Calendar . getInstance ( ) ; if ( IDENT_5 != null ) { IDENT_4 . METHOD_5 ( IDENT_5 ) ; } if ( ( ( METHOD_6 ( ) ) != null ) && ( IDENT_4 . getTime ( ) . METHOD_7 ( METHOD_6 ( ) ) ) ) { IDENT_4 . METHOD_5 ( METHOD_6 ( ) ) ; } java . util . Calendar IDENT_6 = java . util . Calendar . getInstance ( ) ; IDENT_6 . METHOD_5 ( IDENT_0 ) ; int IDENT_7 = ( IDENT_4 . get ( Calendar . IDENT_8 ) ) - ( IDENT_6 . get ( Calendar . IDENT_8 ) ) ; int IDENT_9 = IDENT_4 . get ( Calendar . IDENT_10 ) ; int IDENT_11 = IDENT_6 . get ( Calendar . IDENT_10 ) ; int IDENT_12 = IDENT_4 . get ( Calendar . IDENT_13 ) ; int IDENT_14 = IDENT_6 . get ( Calendar . IDENT_13 ) ; if ( IDENT_9 < IDENT_11 ) { IDENT_7 OP_0 ; } else if ( ( IDENT_9 == IDENT_11 ) && ( IDENT_12 < IDENT_14 ) ) { IDENT_7 OP_0 ; } return IDENT_7 ; }
org . junit . Assert . assertEquals ( 10 , person . METHOD_4 ( IDENT_3 . getTime ( ) ) , 0 ) 