METHOD_0 ( ) { org . openmrs . module . IDENT_0 resource = new org . openmrs . module . METHOD_1 ( ) ; resource . METHOD_2 ( STRING_0 ) ; resource . METHOD_3 ( STRING_1 ) ; IDENT_1 . METHOD_4 ( ) . add ( resource ) ; boolean result = org . openmrs . module . IDENT_2 . METHOD_5 ( IDENT_1 , java . net . URI . create ( STRING_2 ) . METHOD_6 ( ) , STRING_3 , IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . IDENT_4 , java . net . URL , java . lang . String , java . util . Map ) { boolean IDENT_5 = true ; for ( org . openmrs . module . METHOD_1 IDENT_6 : module . METHOD_4 ( ) ) { if ( IDENT_7 . getPath ( ) . matches ( ( ( STRING_4 + ( IDENT_6 . getPath ( ) ) ) + STRING_5 ) ) ) { IDENT_5 = false ; if ( org . apache . commons . lang3 . StringUtils . METHOD_7 ( IDENT_6 . METHOD_8 ( ) ) ) { IDENT_5 = org . openmrs . module . IDENT_8 . METHOD_9 ( IDENT_9 , IDENT_6 . METHOD_8 ( ) ) ; if ( ! IDENT_5 ) { return false ; } } if ( ( IDENT_6 . METHOD_10 ( ) ) != null ) { for ( org . openmrs . module . METHOD_1 . IDENT_10 IDENT_11 : IDENT_6 . METHOD_10 ( ) ) { if ( STRING_6 . equals ( IDENT_11 . METHOD_11 ( ) ) ) { IDENT_5 = ! ( org . openmrs . module . IDENT_12 . METHOD_12 ( IDENT_11 . METHOD_13 ( ) ) ) ; if ( ! IDENT_5 ) { return false ; } } else { java . lang . String IDENT_13 = IDENT_14 . get ( IDENT_11 . METHOD_13 ( ) ) ; if ( IDENT_13 != null ) { IDENT_5 = org . openmrs . module . IDENT_8 . METHOD_9 ( IDENT_13 , IDENT_11 . METHOD_11 ( ) ) ; if ( ! IDENT_5 ) { return false ; } } } } } } } return IDENT_5 ; }
org . junit . Assert . assertThat ( result , org . hamcrest . Matchers . is ( true ) ) 