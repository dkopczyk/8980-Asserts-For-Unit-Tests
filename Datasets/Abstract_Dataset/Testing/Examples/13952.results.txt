METHOD_0 ( ) { org . apache . hadoop . mapreduce . v2 . api . records . IDENT_0 IDENT_1 = mock ( org . apache . hadoop . mapreduce . v2 . api . records . IDENT_0 . class ) ; org . apache . hadoop . mapreduce . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = mock ( org . apache . hadoop . mapreduce . IDENT_2 . IDENT_3 . IDENT_4 . class ) ; java . util . Map < org . apache . hadoop . mapreduce . IDENT_6 , org . apache . hadoop . mapreduce . IDENT_2 . IDENT_3 . IDENT_7 > IDENT_8 = new java . util . IDENT_9 < org . apache . hadoop . mapreduce . IDENT_6 , org . apache . hadoop . mapreduce . IDENT_2 . IDENT_3 . IDENT_7 > ( ) ; org . apache . hadoop . mapreduce . IDENT_6 id = new org . apache . hadoop . mapreduce . METHOD_1 ( STRING_0 , 0 , org . apache . hadoop . mapreduce . IDENT_10 . IDENT_11 , 0 , 0 ) ; org . apache . hadoop . mapreduce . IDENT_2 . IDENT_3 . IDENT_7 info = mock ( org . apache . hadoop . mapreduce . IDENT_2 . IDENT_3 . IDENT_7 . class ) ; when ( info . METHOD_2 ( ) ) . thenReturn ( id ) ; when ( info . METHOD_3 ( ) ) . thenReturn ( INT_0 ) ; IDENT_8 . put ( id , info ) ; id = new org . apache . hadoop . mapreduce . METHOD_1 ( "1" , 0 , org . apache . hadoop . mapreduce . IDENT_10 . IDENT_11 , 1 , 1 ) ; info = mock ( org . apache . hadoop . mapreduce . IDENT_2 . IDENT_3 . IDENT_7 . class ) ; when ( info . METHOD_2 ( ) ) . thenReturn ( id ) ; when ( info . METHOD_3 ( ) ) . thenReturn ( INT_1 ) ; IDENT_8 . put ( id , info ) ; when ( IDENT_5 . METHOD_4 ( ) ) . thenReturn ( IDENT_8 ) ; org . apache . hadoop . mapreduce . v2 . IDENT_12 . IDENT_13 task = new org . apache . hadoop . mapreduce . v2 . IDENT_12 . METHOD_5 ( IDENT_1 , IDENT_5 ) ; org . apache . hadoop . mapreduce . v2 . api . records . IDENT_14 report = task . METHOD_6 ( ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { return this . IDENT_15 ; }
org . junit . Assert . assertTrue ( ( ( report . METHOD_3 ( ) ) == 10 ) ) 