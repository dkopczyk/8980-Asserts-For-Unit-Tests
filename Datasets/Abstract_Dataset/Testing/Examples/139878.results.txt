METHOD_0 ( ) { IDENT_0 . METHOD_1 ( METHOD_2 ( ) ) ; replay ( IDENT_0 ) ; java . lang . String location = ( org . onosproject . IDENT_1 . web . IDENT_2 . IDENT_3 ) + STRING_0 ; final javax . ws . rs . client . IDENT_4 IDENT_5 = target ( ) ; java . io . InputStream IDENT_6 = org . onosproject . IDENT_1 . web . IDENT_2 . class . getResourceAsStream ( STRING_1 ) ; javax . ws . rs . core . Response response = IDENT_5 . path ( location ) . request ( IDENT_7 . IDENT_8 ) . put ( javax . ws . rs . client . Entity . json ( IDENT_6 ) ) ; final int status = response . getStatus ( ) ; "<AssertPlaceHolder>" ; verify ( IDENT_0 ) ; } is ( java . lang . Class ) { return true ; }
org . junit . Assert . assertThat ( status , org . hamcrest . Matchers . is ( 200 ) ) 