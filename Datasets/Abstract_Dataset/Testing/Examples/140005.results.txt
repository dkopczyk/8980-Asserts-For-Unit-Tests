METHOD_0 ( ) { org . onosproject . net . resource . IDENT_0 original = org . onosproject . net . resource . IDENT_1 . METHOD_1 ( org . onosproject . store . resource . impl . IDENT_2 . IDENT_3 , org . onosproject . store . resource . impl . IDENT_2 . IDENT_4 , org . IDENT_5 . util . IDENT_6 . class ) . resource ( org . IDENT_5 . util . IDENT_6 . METHOD_2 ( 1 ) . METHOD_3 ( ) ) ; org . onosproject . net . resource . IDENT_0 IDENT_7 = org . onosproject . net . resource . IDENT_1 . METHOD_1 ( org . onosproject . store . resource . impl . IDENT_2 . IDENT_3 , org . onosproject . store . resource . impl . IDENT_2 . IDENT_4 , org . IDENT_5 . util . IDENT_6 . class ) . resource ( org . IDENT_5 . util . IDENT_6 . METHOD_4 ( INT_0 ) . METHOD_3 ( ) ) ; org . onosproject . net . resource . IDENT_8 consumer = org . onosproject . net . IDENT_9 . IDENT_10 . valueOf ( 1 ) ; org . onosproject . store . resource . impl . IDENT_11 IDENT_12 = new org . onosproject . store . resource . impl . METHOD_5 ( original , com . google . common . collect . ImmutableList . of ( new org . onosproject . net . resource . METHOD_6 ( IDENT_7 , consumer ) ) ) ; org . onosproject . net . resource . IDENT_0 request = org . onosproject . net . resource . IDENT_1 . METHOD_1 ( org . onosproject . store . resource . impl . IDENT_2 . IDENT_3 , org . onosproject . store . resource . impl . IDENT_2 . IDENT_4 , org . IDENT_5 . util . IDENT_6 . class ) . resource ( org . IDENT_5 . util . IDENT_6 . METHOD_4 ( INT_1 ) . METHOD_3 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( org . onosproject . net . resource . IDENT_0 ) { double IDENT_7 = IDENT_13 . stream ( ) . filter ( ( x ) -> ( x . resource ( ) ) instanceof org . onosproject . net . resource . IDENT_0 ) . map ( ( x ) -> ( ( org . onosproject . net . resource . IDENT_0 ) ( x . resource ( ) ) ) ) . METHOD_8 ( IDENT_0 :: value ) . METHOD_9 ( ) ; double IDENT_14 = ( original . value ( ) ) - IDENT_7 ; return ( request . value ( ) ) <= IDENT_14 ; }
org . junit . Assert . assertThat ( IDENT_12 . METHOD_7 ( request ) , org . hamcrest . Matchers . is ( false ) ) 