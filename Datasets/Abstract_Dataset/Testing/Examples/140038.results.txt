METHOD_0 ( ) { org . onosproject . net . resource . IDENT_0 IDENT_1 = org . onosproject . net . resource . IDENT_2 . METHOD_1 ( org . onosproject . net . IDENT_3 . METHOD_2 ( "a" ) ) . resource ( ) ; org . onosproject . net . resource . IDENT_0 IDENT_4 = org . onosproject . net . resource . IDENT_2 . METHOD_1 ( org . onosproject . net . IDENT_3 . METHOD_2 ( "b" ) ) . resource ( ) ; org . onosproject . store . resource . impl . IDENT_5 IDENT_6 = org . onosproject . store . resource . impl . IDENT_7 . of ( com . google . common . collect . IDENT_8 . of ( IDENT_1 , IDENT_4 ) ) ; org . onosproject . store . resource . impl . IDENT_5 IDENT_9 = org . onosproject . store . resource . impl . IDENT_7 . of ( com . google . common . collect . IDENT_8 . of ( IDENT_1 ) ) ; org . onosproject . store . resource . impl . IDENT_5 IDENT_10 = IDENT_6 . METHOD_3 ( IDENT_9 ) ; "<AssertPlaceHolder>" ; } decode ( com . fasterxml . jackson . databind . node . IDENT_11 ) { com . fasterxml . jackson . databind . IDENT_12 IDENT_13 = json . get ( org . onosproject . net . IDENT_14 . rest . IDENT_15 . IDENT_16 ) ; if ( ! ( IDENT_13 . METHOD_4 ( ) ) ) { throw new java . lang . IllegalArgumentException ( org . onosproject . net . IDENT_14 . rest . IDENT_15 . IDENT_17 ) ; } org . onosproject . net . IDENT_18 IDENT_19 = codec ( org . onosproject . net . IDENT_18 . class ) . decode ( ( ( com . fasterxml . jackson . databind . node . IDENT_11 ) ( IDENT_13 ) ) , this ) ; com . fasterxml . jackson . databind . IDENT_12 IDENT_20 = json . get ( org . onosproject . net . IDENT_14 . rest . IDENT_15 . IDENT_21 ) ; if ( ! ( IDENT_20 . METHOD_4 ( ) ) ) { throw new java . lang . IllegalArgumentException ( org . onosproject . net . IDENT_14 . rest . IDENT_15 . IDENT_17 ) ; } org . onosproject . net . IDENT_18 IDENT_22 = codec ( org . onosproject . net . IDENT_18 . class ) . decode ( ( ( com . fasterxml . jackson . databind . node . IDENT_11 ) ( IDENT_20 ) ) , this ) ; com . fasterxml . jackson . databind . IDENT_12 IDENT_23 = json . get ( org . onosproject . net . IDENT_14 . rest . IDENT_15 . IDENT_24 ) ; boolean IDENT_25 = ( IDENT_23 != null ) ? IDENT_23 . METHOD_5 ( ) : false ; com . fasterxml . jackson . databind . IDENT_12 IDENT_26 = json . get ( org . onosproject . net . IDENT_14 . rest . IDENT_15 . IDENT_27 ) ; org . onosproject . net . IDENT_28 IDENT_29 = null ; if ( IDENT_26 != null ) { if ( ! ( IDENT_26 . METHOD_4 ( ) ) ) { throw new java . lang . IllegalArgumentException ( org . onosproject . net . IDENT_14 . rest . IDENT_15 . IDENT_17 ) ; } else { IDENT_29 = org . onosproject . net . IDENT_14 . json . IDENT_30 . decode ( ( ( com . fasterxml . jackson . databind . node . IDENT_11 ) ( IDENT_26 ) ) ) ; } } java . lang . String IDENT_31 = METHOD_6 ( json . get ( org . onosproject . net . IDENT_14 . rest . IDENT_15 . IDENT_32 ) , ( ( org . onosproject . net . IDENT_14 . rest . IDENT_15 . IDENT_32 ) + ( org . onosproject . net . IDENT_14 . rest . IDENT_15 . IDENT_33 ) ) ) . METHOD_7 ( ) ; org . onosproject . core . IDENT_34 service = METHOD_8 ( org . onosproject . core . IDENT_34 . class ) ; org . onosproject . core . IDENT_35 IDENT_36 = METHOD_9 ( service . METHOD_10 ( IDENT_31 ) , org . onosproject . net . IDENT_14 . rest . IDENT_15 . IDENT_37 ) ; org . onosproject . net . IDENT_38 . IDENT_39 key = null ; org . onosproject . net . device . IDENT_40 IDENT_41 = get ( org . onosproject . net . device . IDENT_40 . class ) ; com . fasterxml . jackson . databind . IDENT_12 IDENT_42 = json . get ( org . onosproject . net . IDENT_14 . rest . IDENT_15 . IDENT_43 ) ; org . onosproject . net . IDENT_44 IDENT_45 = null ; org . onosproject . net . IDENT_46 . IDENT_47 IDENT_48 = get ( org . onosproject . net . IDENT_46 . IDENT_47 . class ) ; if ( IDENT_42 != null ) { if ( ! ( IDENT_42 . METHOD_4 ( ) ) ) { throw new java . lang . IllegalArgumentException ( org . onosproject . net . IDENT_14 . rest . IDENT_15 . IDENT_17 ) ; } else { com . fasterxml . jackson . databind . node . IDENT_49 IDENT_50 = METHOD_6 ( ( ( com . fasterxml . jackson . databind . node . IDENT_49 ) ( IDENT_42 . get ( STRING_0 ) ) ) , STRING_1 ) ; java . util . List < org . onosproject . net . IDENT_51 > IDENT_52 = new java . util . ArrayList ( ) ; for ( com . fasterxml . jackson . databind . IDENT_12 node : IDENT_50 ) { java . lang . String IDENT_53 = node . get ( STRING_2 ) . METHOD_7 ( ) ; java . lang . String IDENT_54 = node . get ( STRING_3 ) . METHOD_7 ( ) ; org . onosproject . net . IDENT_18 IDENT_55 = org . onosproject . net . IDENT_18 . METHOD_11 ( IDENT_53 ) ; org . onosproject . net . IDENT_18 IDENT_56 = org . onosproject . net . IDENT_18 . METHOD_11 ( IDENT_54 ) ; org . onosproject . net . IDENT_51 IDENT_46 = IDENT_48 . METHOD_12 ( IDENT_55 , IDENT_56 ) ; if ( IDENT_46 == null ) { org . onosproject . net . IDENT_14 . rest . IDENT_15 . log . warn ( STRING_4 , IDENT_55 , IDENT_56 ) ; throw new java . lang . IllegalArgumentException ( STRING_5 ) ; } IDENT_52 . add ( IDENT_46 ) ; } if ( ( ( ( ! ( IDENT_52 . get ( 0 ) . METHOD_13 ( ) . METHOD_2 ( ) . equals ( IDENT_19 . METHOD_2 ( ) ) ) ) || ( ! ( IDENT_52 . get ( 0 ) . METHOD_13 ( ) . port ( ) . equals ( IDENT_19 . port ( ) ) ) ) ) || ( ! ( IDENT_52 . get ( ( ( IDENT_52 . size ( ) ) - 1 ) ) . METHOD_14 ( ) . METHOD_2 ( ) . equals ( IDENT_22 . METHOD_2 ( ) ) ) ) ) || ( ! ( IDENT_52 . get ( ( ( IDENT_52 . size ( ) ) - 1 ) ) . METHOD_14 ( ) . port ( ) . equals ( IDENT_22 . port ( ) ) ) ) ) { throw new java . lang . IllegalArgumentException ( STRING_6 ) ; } if ( ! ( METHOD_15 ( IDENT_52 ) ) ) { throw new java . lang . IllegalArgumentException ( STRING_7 ) ; } IDENT_45 = new org . onosproject . net . METHOD_16 ( org . onosproject . net . IDENT_14 . rest . IDENT_15 . IDENT_57 , IDENT_52 , new org . IDENT_58 . graph . METHOD_17 ( 1 ) ) ; org . onosproject . net . IDENT_14 . rest . IDENT_15 . log . debug ( STRING_8 , IDENT_45 ) ; } } return METHOD_18 ( IDENT_19 , IDENT_22 , IDENT_41 , key , IDENT_36 , IDENT_25 , IDENT_29 , IDENT_45 ) ; }
org . junit . Assert . assertThat ( serializer . decode ( serializer . encode ( METHOD_3 ) ) , org . hamcrest . Matchers . is ( METHOD_3 ) ) 