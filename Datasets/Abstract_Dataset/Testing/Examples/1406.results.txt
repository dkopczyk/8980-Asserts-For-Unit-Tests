METHOD_0 ( ) { int i = 0 ; for ( int x = 1 ; x <= ( IDENT_0 . IDENT_1 ) ; x ++ ) { java . lang . String IDENT_2 = STRING_0 + x ; com . IDENT_3 . client . IDENT_4 name = new com . IDENT_3 . client . METHOD_1 ( "name" , ( STRING_1 + x ) ) ; com . IDENT_3 . client . METHOD_1 IDENT_5 = new com . IDENT_3 . client . METHOD_1 ( STRING_2 , IDENT_6 [ i ] ) ; com . IDENT_3 . client . METHOD_1 IDENT_7 = new com . IDENT_3 . client . METHOD_1 ( STRING_3 , IDENT_8 [ i ] ) ; com . IDENT_3 . client . METHOD_1 IDENT_9 = new com . IDENT_3 . client . METHOD_1 ( STRING_4 , IDENT_10 [ i ] ) ; java . util . List < com . IDENT_3 . client . METHOD_1 > IDENT_11 = java . util . Arrays . asList ( name , IDENT_5 , IDENT_7 , IDENT_9 ) ; com . IDENT_3 . client . IDENT_12 key = new com . IDENT_3 . client . METHOD_2 ( IDENT_0 . IDENT_13 , IDENT_0 . IDENT_14 , IDENT_2 ) ; this . client . delete ( null , key ) ; com . IDENT_3 . helper . query . IDENT_15 IDENT_16 = new com . IDENT_3 . helper . query . METHOD_3 ( key . IDENT_17 ) ; com . IDENT_3 . client . query . IDENT_18 stmt = new com . IDENT_3 . client . query . METHOD_4 ( ) ; stmt . METHOD_5 ( IDENT_0 . IDENT_13 ) ; stmt . METHOD_6 ( IDENT_0 . IDENT_14 ) ; IDENT_19 . insert ( stmt , IDENT_16 , IDENT_11 ) ; com . IDENT_3 . client . IDENT_20 record = this . client . get ( null , key ) ; "<AssertPlaceHolder>" ; i ++ ; if ( i == 5 ) i = 0 ; } } get ( com . IDENT_3 . client . policy . IDENT_21 , com . IDENT_3 . client . METHOD_2 [ ] ) { if ( policy == null ) { policy = IDENT_22 ; } com . IDENT_3 . client . IDENT_20 [ ] records = new com . IDENT_3 . client . IDENT_20 [ keys . length ] ; com . IDENT_3 . client . command . IDENT_23 . execute ( cluster , policy , keys , null , records , null , ( ( com . IDENT_3 . client . command . IDENT_24 . IDENT_25 ) | ( com . IDENT_3 . client . command . IDENT_24 . IDENT_26 ) ) ) ; return records ; }
org . junit . Assert . assertNotNull ( record ) 