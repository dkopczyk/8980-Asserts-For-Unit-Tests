METHOD_0 ( ) { com . IDENT_0 . client . IDENT_1 [ ] keys = new com . IDENT_0 . client . IDENT_1 [ com . IDENT_0 . test . sync . IDENT_2 . IDENT_3 . size ] ; for ( int i = 0 ; i < ( com . IDENT_0 . test . sync . IDENT_2 . IDENT_3 . size ) ; i ++ ) { keys [ i ] = new com . IDENT_0 . client . METHOD_1 ( args . IDENT_4 , args . set , ( ( com . IDENT_0 . test . sync . IDENT_2 . IDENT_3 . IDENT_5 ) + ( i + 1 ) ) ) ; } boolean [ ] IDENT_6 = client . exists ( null , keys ) ; "<AssertPlaceHolder>" ; for ( int i = 0 ; i < ( IDENT_6 . length ) ; i ++ ) { if ( ! ( IDENT_6 [ i ] ) ) { org . junit . Assert . fail ( STRING_0 ) ; } } } exists ( com . IDENT_0 . client . IDENT_7 . IDENT_8 , com . IDENT_0 . client . IDENT_7 . METHOD_1 ) { return IDENT_7 . core . IDENT_9 . IDENT_10 . create ( ( IDENT_11 ) -> IDENT_12 . exists ( IDENT_13 . next ( ) , new com . IDENT_0 . client . IDENT_7 . METHOD_2 ( IDENT_11 ) , policy , key ) ) ; }
org . junit . Assert . assertEquals ( com . IDENT_0 . test . sync . IDENT_2 . IDENT_3 . size , IDENT_6 . length ) 