METHOD_0 ( ) { template . METHOD_0 ( "foo" , STRING_0 ) ; java . util . List < java . lang . String > IDENT_0 = new java . util . ArrayList < java . lang . String > ( ) ; for ( com . IDENT_1 . IDENT_2 . model . template . IDENT_3 param : template . METHOD_1 ( ) . values ( ) ) { IDENT_0 . add ( java . lang . String . format ( STRING_1 , param . getName ( ) , param . getValue ( ) ) ) ; } java . lang . String [ ] exp = new java . lang . String [ ] { STRING_2 , STRING_3 , STRING_4 } ; java . lang . String [ ] IDENT_4 = IDENT_0 . toArray ( new java . lang . String [ ] { } ) ; java . util . Arrays . METHOD_2 ( exp ) ; java . util . Arrays . METHOD_2 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } getValue ( ) { return METHOD_3 ( METHOD_4 ( ) , METHOD_5 ( ) , com . IDENT_1 . internal . IDENT_2 . model . IDENT_5 ) ; }
org . junit . Assert . assertArrayEquals ( exp , IDENT_4 ) 