METHOD_0 ( ) { new org . openqa . selenium . IDENT_0 . METHOD_1 ( driver ) . METHOD_2 ( STRING_0 ) . METHOD_2 ( ( ( org . openqa . selenium . IDENT_1 . IDENT_2 ) + "a" ) ) . METHOD_2 ( ( ( org . openqa . selenium . IDENT_1 . IDENT_2 ) + STRING_1 ) ) . METHOD_2 ( IDENT_3 , ( ( org . openqa . selenium . IDENT_1 . IDENT_2 ) + STRING_2 ) ) . build ( ) . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String ) { METHOD_5 ( ) ; if ( IDENT_4 . equalsIgnoreCase ( "value" ) ) { return METHOD_6 ( ( STRING_3 + ( ( STRING_4 + STRING_5 ) + STRING_6 ) ) ) ; } else { return METHOD_6 ( ( ( ( ( STRING_7 + ( IDENT_5 . IDENT_6 ) ) + STRING_8 ) + IDENT_4 ) + STRING_9 ) ) ; } }
org . junit . Assert . assertEquals ( STRING_0 , IDENT_3 . METHOD_4 ( "value" ) ) 