METHOD_0 ( ) { runner . start ( ) ; runner . METHOD_1 ( new org . apache . hadoop . yarn . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 ( 0 ) ) ; org . apache . hadoop . yarn . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 . IDENT_3 . METHOD_3 ( INT_0 , TimeUnit . IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( long , java . util . concurrent . TimeUnit ) { int count = IDENT_5 . METHOD_4 ( ) . size ( ) ; int IDENT_6 = 0 ; long IDENT_7 = IDENT_8 . METHOD_5 ( IDENT_9 ) ; long IDENT_10 = org . apache . hadoop . util . IDENT_11 . METHOD_6 ( ) ; java . util . List < java . util . concurrent . IDENT_12 < org . apache . hadoop . IDENT_13 . container . common . IDENT_14 . IDENT_15 . IDENT_16 > > results = new java . util . METHOD_7 ( ) ; while ( ( IDENT_6 < count ) && ( IDENT_7 > 0 ) ) { java . util . concurrent . IDENT_12 < org . apache . hadoop . IDENT_13 . container . common . IDENT_14 . IDENT_15 . IDENT_16 > result = IDENT_17 . METHOD_8 ( IDENT_7 , TimeUnit . IDENT_4 ) ; if ( result != null ) { results . add ( result ) ; IDENT_6 ++ ; } IDENT_7 = IDENT_7 - ( ( org . apache . hadoop . util . IDENT_11 . METHOD_6 ( ) ) - IDENT_10 ) ; } return METHOD_9 ( results ) ; }
org . junit . Assert . assertTrue ( org . apache . hadoop . yarn . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 . first ) 