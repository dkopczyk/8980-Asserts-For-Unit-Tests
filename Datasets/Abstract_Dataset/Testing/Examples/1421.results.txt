METHOD_0 ( ) { int IDENT_0 = 1 ; int end = 10 ; com . IDENT_1 . client . query . IDENT_2 stmt = new com . IDENT_1 . client . query . METHOD_1 ( ) ; stmt . METHOD_2 ( args . IDENT_3 ) ; stmt . METHOD_3 ( com . IDENT_1 . test . sync . query . IDENT_4 . setName ) ; stmt . METHOD_4 ( com . IDENT_1 . client . query . IDENT_5 . range ( com . IDENT_1 . test . sync . query . IDENT_4 . IDENT_6 , IDENT_0 , end ) ) ; stmt . METHOD_5 ( com . IDENT_1 . client . query . IDENT_7 . METHOD_6 ( STRING_0 ) , com . IDENT_1 . client . query . IDENT_7 . METHOD_7 ( STRING_1 ) , com . IDENT_1 . client . query . IDENT_7 . METHOD_8 ( ) , com . IDENT_1 . client . query . IDENT_7 . METHOD_9 ( STRING_2 ) , com . IDENT_1 . client . query . IDENT_7 . METHOD_10 ( STRING_0 ) ) ; com . IDENT_1 . client . query . IDENT_8 rs = client . query ( null , stmt ) ; try { int count = 0 ; while ( rs . next ( ) ) { count ++ ; } "<AssertPlaceHolder>" ; } finally { rs . close ( ) ; } } next ( ) { int IDENT_9 = ( IDENT_10 ) ++ ; IDENT_9 = IDENT_9 OP_0 ( IDENT_11 . length ) ; if ( IDENT_9 < 0 ) { IDENT_9 += IDENT_11 . length ; } return IDENT_11 [ IDENT_9 ] ; }
org . junit . Assert . assertEquals ( 7 , count ) 