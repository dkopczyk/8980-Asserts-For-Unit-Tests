METHOD_0 ( ) { final java . util . Map < com . orientechnologies . common . util . IDENT_0 , java . lang . Object > IDENT_1 = new java . util . HashMap < com . orientechnologies . common . util . IDENT_0 , java . lang . Object > ( ) ; final com . orientechnologies . common . util . IDENT_0 IDENT_2 = new com . orientechnologies . common . util . METHOD_1 ( java . util . Arrays . asList ( new java . lang . String [ ] { "a" , "b" } ) ) ; IDENT_1 . put ( IDENT_2 , new java . lang . Object ( ) ) ; final com . orientechnologies . common . util . METHOD_1 IDENT_3 = new com . orientechnologies . common . util . METHOD_1 ( java . util . Arrays . asList ( new java . lang . String [ ] { "b" , "a" } ) ) ; final java . lang . Object IDENT_4 = IDENT_1 . get ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } get ( com . tinkerpop . IDENT_5 . IDENT_6 . orient . IDENT_7 ) { javax . script . IDENT_8 engine = super . get ( ) ; if ( engine != null ) { final com . tinkerpop . IDENT_5 . IDENT_6 . orient . IDENT_7 IDENT_9 = ( ( com . tinkerpop . IDENT_5 . IDENT_6 . orient . IDENT_7 ) ( engine . METHOD_2 ( IDENT_10 . IDENT_11 ) . get ( STRING_0 ) ) ) ; if ( ( IDENT_9 == IDENT_12 ) || ( ( IDENT_9 != null ) && ( IDENT_9 . METHOD_3 ( ) . METHOD_4 ( ) . equals ( IDENT_12 . METHOD_3 ( ) . METHOD_4 ( ) ) ) ) ) { engine . METHOD_2 ( IDENT_10 . IDENT_11 ) . put ( STRING_0 , IDENT_12 ) ; return engine ; } } engine = new com . tinkerpop . IDENT_13 . IDENT_14 . IDENT_15 . METHOD_5 ( ) ; engine . METHOD_2 ( IDENT_10 . IDENT_11 ) . put ( STRING_0 , IDENT_12 ) ; set ( engine ) ; return engine ; }
org . junit . Assert . assertNotNull ( IDENT_4 ) 