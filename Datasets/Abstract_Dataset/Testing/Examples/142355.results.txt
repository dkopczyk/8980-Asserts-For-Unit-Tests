METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; db . METHOD_1 ( IDENT_0 ) ; final com . orientechnologies . orient . core . record . IDENT_1 v = db . newInstance ( IDENT_0 ) ; v . setProperty ( STRING_1 , 0 ) ; v . save ( ) ; int IDENT_2 = 4 ; java . util . List < java . lang . Thread > IDENT_3 = new java . util . ArrayList ( ) ; for ( int i = 0 ; i < IDENT_2 ; i ++ ) { java . lang . Thread IDENT_4 = new java . lang . Thread ( ) { @ com . orientechnologies . orient . core . db . document . Override public void run ( ) { com . orientechnologies . orient . core . db . document . IDENT_5 IDENT_6 = db . METHOD_2 ( ) ; IDENT_6 . METHOD_3 ( ) ; IDENT_6 . METHOD_4 ( ) ; IDENT_6 . METHOD_5 ( 10 , ( db ) -> { com . orientechnologies . orient . core . record . IDENT_1 IDENT_7 = ( ( com . orientechnologies . orient . core . record . IDENT_1 ) ( db . load ( v . METHOD_6 ( ) ) ) ) ; try { java . lang . Thread . sleep ( 1000 ) ; } catch ( e ) { } IDENT_7 . setProperty ( STRING_1 , ( ( ( int ) ( IDENT_7 . getProperty ( STRING_1 ) ) ) + 1 ) ) ; db . save ( IDENT_7 ) ; return IDENT_7 ; } ) ; IDENT_6 . commit ( ) ; IDENT_6 . close ( ) ; } } ; IDENT_3 . add ( IDENT_4 ) ; IDENT_4 . start ( ) ; } for ( java . lang . Thread t : IDENT_3 ) { t . join ( ) ; } v . METHOD_7 ( ) ; "<AssertPlaceHolder>" ; } getProperty ( java . lang . String ) { return getProperty ( IDENT_8 , null ) ; }
org . junit . Assert . assertEquals ( IDENT_2 , ( ( int ) ( v . getProperty ( STRING_1 ) ) ) ) 