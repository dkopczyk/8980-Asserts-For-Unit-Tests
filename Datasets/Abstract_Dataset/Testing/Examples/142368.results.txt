METHOD_0 ( ) { final com . orientechnologies . orient . core . record . impl . IDENT_0 doc = new com . orientechnologies . orient . core . record . impl . METHOD_1 ( ) ; final com . orientechnologies . orient . core . db . record . IDENT_1 < java . lang . String > IDENT_2 = new com . orientechnologies . orient . core . db . record . IDENT_1 < java . lang . String > ( doc ) ; IDENT_2 . add ( STRING_0 ) ; IDENT_2 . add ( STRING_1 ) ; IDENT_2 . add ( STRING_2 ) ; IDENT_2 . add ( STRING_3 ) ; IDENT_2 . add ( STRING_4 ) ; final java . util . Set < java . lang . String > original = new java . util . HashSet < java . lang . String > ( IDENT_2 ) ; final java . util . List < com . orientechnologies . orient . core . db . record . IDENT_3 < java . lang . String , java . lang . String > > IDENT_4 = new java . util . ArrayList < com . orientechnologies . orient . core . db . record . IDENT_3 < java . lang . String , java . lang . String > > ( ) ; IDENT_2 . METHOD_2 ( new com . orientechnologies . orient . core . db . record . IDENT_5 < java . lang . String , java . lang . String > ( ) { public void METHOD_3 ( final com . orientechnologies . orient . core . db . record . IDENT_3 < java . lang . String , java . lang . String > event ) { IDENT_4 . add ( event ) ; } } ) ; IDENT_2 . add ( STRING_5 ) ; IDENT_2 . remove ( STRING_1 ) ; IDENT_2 . remove ( STRING_4 ) ; IDENT_2 . add ( STRING_6 ) ; IDENT_2 . add ( STRING_7 ) ; IDENT_2 . remove ( STRING_6 ) ; IDENT_2 . add ( STRING_8 ) ; IDENT_2 . add ( STRING_9 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( com . orientechnologies . orient . core . db . record . List ) { final com . orientechnologies . orient . core . db . record . Set < com . orientechnologies . orient . core . db . record . IDENT_6 > IDENT_7 = new com . orientechnologies . orient . core . db . record . HashSet < com . orientechnologies . orient . core . db . record . IDENT_6 > ( this ) ; final com . orientechnologies . orient . core . db . record . IDENT_8 < com . orientechnologies . orient . core . db . record . IDENT_3 < com . orientechnologies . orient . core . db . record . IDENT_6 , com . orientechnologies . orient . core . db . record . IDENT_6 > > IDENT_9 = events . METHOD_5 ( events . size ( ) ) ; while ( METHOD_5 . METHOD_6 ( ) ) { final com . orientechnologies . orient . core . db . record . IDENT_3 < com . orientechnologies . orient . core . db . record . IDENT_6 , com . orientechnologies . orient . core . db . record . IDENT_6 > event = METHOD_5 . METHOD_7 ( ) ; switch ( event . METHOD_8 ( ) ) { case IDENT_10 : IDENT_7 . remove ( event . getKey ( ) ) ; break ; case IDENT_11 : IDENT_7 . add ( event . METHOD_9 ( ) ) ; break ; default : throw new java . lang . IllegalArgumentException ( ( STRING_10 + ( event . METHOD_8 ( ) ) ) ) ; } } return IDENT_7 ; }
org . junit . Assert . assertEquals ( original , IDENT_2 . METHOD_4 ( IDENT_4 ) ) 