METHOD_0 ( ) { conf . METHOD_1 ( IDENT_0 . IDENT_1 , true ) ; java . lang . String IDENT_2 = STRING_0 + ( ( ( ( ( ( ( ( ( STRING_1 + STRING_2 0 ) + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_2 ) + STRING_8 ) + STRING_9 ) ; IDENT_3 = new org . apache . hadoop . yarn . server . IDENT_4 . IDENT_5 . IDENT_6 . resources . IDENT_7 . METHOD_2 ( mock ( org . apache . hadoop . yarn . server . IDENT_4 . Context . class ) ) { @ org . apache . hadoop . yarn . server . IDENT_4 . IDENT_5 . IDENT_6 . resources . IDENT_7 . Override java . lang . String METHOD_3 ( org . apache . hadoop . conf . Configuration config ) throws org . apache . hadoop . yarn . exceptions . IDENT_8 { return IDENT_2 ; } } ; IDENT_3 . init ( conf ) ; java . util . Collection < org . apache . hadoop . yarn . server . IDENT_4 . IDENT_5 . IDENT_6 . resources . IDENT_7 . IDENT_9 > IDENT_10 = IDENT_3 . METHOD_4 ( ) ; java . util . Collection < org . apache . hadoop . yarn . server . IDENT_4 . IDENT_5 . IDENT_6 . resources . IDENT_7 . IDENT_9 > IDENT_11 = METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { java . util . Collection < org . apache . hadoop . yarn . server . IDENT_4 . IDENT_5 . IDENT_6 . resources . IDENT_7 . IDENT_9 > IDENT_11 = new java . util . ArrayList ( 2 ) ; IDENT_11 . add ( new org . apache . hadoop . yarn . server . IDENT_4 . IDENT_5 . IDENT_6 . resources . IDENT_7 . METHOD_6 ( STRING_10 , INT_0 , 4 ) ) ; IDENT_11 . add ( new org . apache . hadoop . yarn . server . IDENT_4 . IDENT_5 . IDENT_6 . resources . IDENT_7 . METHOD_6 ( "1" , INT_1 , 4 ) ) ; return IDENT_11 ; }
org . junit . Assert . assertEquals ( IDENT_11 , IDENT_10 ) 