METHOD_0 ( ) { for ( org . IDENT_0 . IDENT_1 IDENT_2 : org . IDENT_0 . IDENT_1 . values ( ) ) { java . lang . String name = IDENT_2 . toString ( ) . replaceAll ( STRING_0 , " " ) . toLowerCase ( java . util . Locale . IDENT_3 ) ; "<AssertPlaceHolder>" ; } } METHOD_1 ( java . lang . String ) { org . apache . commons . lang . IDENT_4 . METHOD_2 ( name , STRING_1 ) ; org . IDENT_0 . IDENT_1 result = null ; try { result = org . IDENT_0 . IDENT_1 . METHOD_3 ( java . lang . Integer . METHOD_4 ( name ) ) ; } catch ( java . lang . IDENT_5 ex ) { } if ( result == null ) { java . lang . String IDENT_6 = name . METHOD_5 ( java . util . Locale . IDENT_3 ) ; IDENT_6 = IDENT_6 . replaceAll ( STRING_2 , STRING_0 ) . replaceAll ( STRING_3 , "" ) ; result = org . IDENT_0 . IDENT_1 . IDENT_7 . get ( IDENT_6 ) ; } return result ; }
org . junit . Assert . assertThat ( org . IDENT_0 . IDENT_1 . METHOD_1 ( name ) , is ( IDENT_2 ) ) 