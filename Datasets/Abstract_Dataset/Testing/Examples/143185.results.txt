test ( ) { IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = METHOD_0 ( STRING_0 ) ; IDENT_0 . IDENT_1 . rules . IDENT_4 rule = new IDENT_0 . IDENT_1 . rules . IDENT_5 . METHOD_1 ( graph , IDENT_6 ) ; java . util . List < IDENT_0 . IDENT_1 . IDENT_7 > IDENT_8 = IDENT_3 . METHOD_2 ( ) ; java . util . List < IDENT_0 . IDENT_1 . rules . IDENT_9 > IDENT_10 = new java . util . ArrayList < IDENT_0 . IDENT_1 . rules . IDENT_9 > ( ) ; for ( IDENT_0 . IDENT_1 . IDENT_7 annotation : IDENT_8 ) { java . util . Set < IDENT_0 . IDENT_1 . rules . IDENT_9 > IDENT_11 = rule . METHOD_3 ( annotation ) ; if ( ( IDENT_11 != null ) && ( ! ( IDENT_11 . isEmpty ( ) ) ) ) { IDENT_10 . addAll ( IDENT_11 ) ; } } "<AssertPlaceHolder>" ; } size ( ) { return this . IDENT_12 ; }
org . junit . Assert . assertEquals ( 2 , IDENT_10 . size ( ) ) 