METHOD_0 ( ) { java . lang . String IDENT_0 = new java . io . File ( java . lang . System . getProperty ( STRING_0 , STRING_1 0 ) ) . getAbsolutePath ( ) ; java . io . File IDENT_1 = null ; java . lang . String IDENT_2 = ( org . apache . hadoop . util . IDENT_3 . IDENT_4 ) ? STRING_2 : STRING_3 ; java . lang . String IDENT_5 = IDENT_2 . trim ( ) ; try { IDENT_1 = new java . io . File ( IDENT_0 , STRING_1 ) ; java . io . IDENT_6 IDENT_7 = new java . io . METHOD_1 ( IDENT_1 ) ; IDENT_7 . println ( " " ) ; IDENT_7 . println ( "" ) ; IDENT_7 . println ( STRING_4 ) ; IDENT_7 . println ( STRING_5 ) ; IDENT_7 . println ( STRING_6 ) ; IDENT_7 . println ( IDENT_2 ) ; IDENT_7 . println ( STRING_7 ) ; IDENT_7 . close ( ) ; java . lang . String IDENT_8 = null ; IDENT_8 = org . apache . hadoop . yarn . server . IDENT_9 . util . IDENT_10 . METHOD_2 ( new org . apache . hadoop . fs . Path ( ( ( IDENT_0 + ( org . apache . hadoop . fs . Path . IDENT_11 ) ) + STRING_1 ) ) ) ; "<AssertPlaceHolder>" ; } finally { if ( ( IDENT_1 != null ) && ( IDENT_1 . exists ( ) ) ) { IDENT_1 . delete ( ) ; } } } METHOD_2 ( org . apache . hadoop . fs . Path ) { if ( path == null ) { throw new java . io . IOException ( STRING_8 ) ; } org . apache . hadoop . yarn . server . IDENT_9 . util . IDENT_10 . LOG . debug ( STRING_9 , path ) ; java . lang . String IDENT_8 = null ; java . io . IDENT_12 IDENT_13 = null ; try { java . io . File file = new java . io . File ( path . toString ( ) ) ; if ( file . exists ( ) ) { java . io . IDENT_14 IDENT_15 = new java . io . METHOD_3 ( file ) ; IDENT_13 = new java . io . METHOD_4 ( new java . io . METHOD_5 ( IDENT_15 , STRING_10 ) ) ; while ( true ) { java . lang . String line = IDENT_13 . METHOD_6 ( ) ; if ( line == null ) { break ; } java . lang . String IDENT_16 = line . trim ( ) ; if ( ! ( IDENT_16 . isEmpty ( ) ) ) { if ( org . apache . hadoop . util . IDENT_3 . IDENT_4 ) { try { org . apache . hadoop . yarn . api . records . IDENT_17 . METHOD_7 ( IDENT_16 ) ; IDENT_8 = IDENT_16 ; break ; } catch ( java . lang . Exception e ) { } } else { try { long IDENT_18 = java . lang . Long . METHOD_8 ( IDENT_16 ) ; if ( IDENT_18 > 0 ) { IDENT_8 = IDENT_16 ; break ; } } catch ( java . lang . Exception e ) { } } } } } } finally { if ( IDENT_13 != null ) { IDENT_13 . close ( ) ; } } org . apache . hadoop . yarn . server . IDENT_9 . util . IDENT_10 . LOG . debug ( STRING_11 , ( IDENT_8 != null ? IDENT_8 : STRING_12 ) , path ) ; return IDENT_8 ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_8 ) 