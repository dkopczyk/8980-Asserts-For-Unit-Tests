METHOD_0 ( ) { IDENT_0 . io . IDENT_1 IDENT_2 = new IDENT_0 . io . METHOD_1 ( ) ; IDENT_3 = IDENT_2 . METHOD_2 ( METHOD_3 ( STRING_0 ) ) ; g = new IDENT_0 . graph . METHOD_4 ( IDENT_3 ) ; METHOD_5 ( getResource ( STRING_1 ) , g ) ; IDENT_4 = new IDENT_0 . io . METHOD_6 ( g ) ; final int IDENT_5 = 200 ; org . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 IDENT_8 = new org . IDENT_6 . IDENT_10 . IDENT_7 . METHOD_7 ( ) . METHOD_8 ( IDENT_3 ) ; try { METHOD_9 ( ) ; LOG . info ( ( STRING_2 + ( IDENT_11 . METHOD_10 ( ) ) ) ) ; IDENT_0 . IDENT_12 . IDENT_13 IDENT_14 = new IDENT_0 . IDENT_12 . METHOD_11 ( g , IDENT_11 ) ; IDENT_8 . METHOD_12 ( ) ; for ( org . IDENT_6 . IDENT_7 . model . IDENT_15 i : IDENT_3 . METHOD_13 ( ) ) { for ( org . IDENT_6 . IDENT_7 . model . IDENT_15 j : IDENT_3 . METHOD_13 ( ) ) { java . lang . String IDENT_16 = IDENT_14 . METHOD_14 ( IDENT_11 . METHOD_15 ( i ) , IDENT_11 . METHOD_15 ( j ) ) ; if ( ( IDENT_16 . length ( ) ) < IDENT_5 ) LOG . warn ( IDENT_16 ) ; else LOG . info ( ( STRING_3 + ( IDENT_16 . substring ( 0 , IDENT_5 ) ) ) ) ; } } IDENT_17 = g . METHOD_16 ( ) ; org . IDENT_6 . IDENT_7 . model . IDENT_18 IDENT_19 = IDENT_17 . METHOD_17 ( org . IDENT_6 . IDENT_7 . model . IDENT_20 . create ( STRING_4 ) ) ; java . util . Set < org . IDENT_6 . IDENT_7 . model . IDENT_18 > IDENT_21 = java . util . Collections . METHOD_18 ( IDENT_19 ) ; boolean IDENT_22 = false ; try { IDENT_14 . METHOD_14 ( IDENT_21 , IDENT_21 ) ; } catch ( IDENT_0 . IDENT_12 . IDENT_23 e ) { IDENT_22 = true ; } "<AssertPlaceHolder>" ; IDENT_14 . METHOD_14 ( IDENT_21 , IDENT_21 , true ) ; org . IDENT_6 . IDENT_7 . model . IDENT_18 IDENT_24 = IDENT_17 . METHOD_19 ( ) ; java . util . Set < org . IDENT_6 . IDENT_7 . model . IDENT_18 > IDENT_25 = java . util . Collections . METHOD_18 ( IDENT_19 ) ; LOG . info ( ( STRING_5 + ( IDENT_14 . METHOD_14 ( IDENT_25 , IDENT_25 , true ) ) ) ) ; } finally { IDENT_8 . METHOD_20 ( ) ; } } METHOD_14 ( java . util . Set , java . util . Set ) { com . google . gson . IDENT_26 gson = new com . google . gson . METHOD_21 ( ) ; return METHOD_14 ( IDENT_27 , IDENT_28 , false ) ; }
org . junit . Assert . assertTrue ( IDENT_22 ) 