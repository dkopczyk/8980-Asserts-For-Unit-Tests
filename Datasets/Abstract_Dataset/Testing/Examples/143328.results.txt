METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . model . IDENT_2 IDENT_3 = m . METHOD_1 ( org . IDENT_0 . IDENT_1 . api . test . IDENT_4 . IDENT_5 . create ( STRING_0 ) ) ; org . IDENT_0 . IDENT_1 . model . IDENT_6 IDENT_7 = new org . IDENT_0 . IDENT_1 . util . METHOD_2 ( ) ; IDENT_7 . METHOD_3 ( STRING_1 , STRING_0 ) ; org . IDENT_0 . IDENT_1 . model . IDENT_8 IDENT_9 = IDENT_10 . METHOD_4 ( STRING_2 , IDENT_7 ) ; org . IDENT_0 . IDENT_1 . model . IDENT_11 IDENT_12 = IDENT_10 . METHOD_5 ( IDENT_9 ) ; m . METHOD_6 ( IDENT_3 , IDENT_12 ) ; org . IDENT_0 . IDENT_1 . IDENT_13 . IDENT_14 IDENT_15 = new org . IDENT_0 . IDENT_1 . IDENT_13 . METHOD_7 ( ) ; IDENT_15 . METHOD_8 ( IDENT_7 ) ; m . METHOD_9 ( IDENT_3 , IDENT_15 ) ; org . IDENT_0 . IDENT_1 . io . IDENT_16 IDENT_17 = new org . IDENT_0 . IDENT_1 . io . METHOD_10 ( ) ; m . METHOD_11 ( IDENT_3 , IDENT_17 ) ; "<AssertPlaceHolder>" ; } toString ( ) { java . lang . StringBuilder sb = new java . lang . StringBuilder ( IDENT_18 ) ; sb . append ( STRING_3 ) ; for ( java . lang . Object IDENT_19 : values ) { sb . append ( STRING_4 ) ; sb . append ( IDENT_19 ) ; } if ( ! ( IDENT_20 . isEmpty ( ) ) ) { sb . append ( STRING_5 ) ; for ( org . IDENT_21 . IDENT_22 . model . IDENT_23 IDENT_24 : IDENT_20 ) { sb . append ( IDENT_24 ) ; sb . append ( STRING_4 ) ; } sb . append ( STRING_6 ) ; } if ( ! ( IDENT_25 . isEmpty ( ) ) ) { sb . append ( STRING_7 ) ; for ( org . IDENT_21 . IDENT_22 . model . IDENT_26 x : IDENT_25 ) { sb . append ( x ) ; sb . append ( STRING_4 ) ; } sb . append ( STRING_8 ) ; } sb . append ( STRING_9 ) ; return sb . toString ( ) ; }
org . junit . Assert . assertTrue ( IDENT_17 . toString ( ) . contains ( STRING_2 ) ) 