METHOD_0 ( ) { java . io . File IDENT_0 = new java . io . File ( STRING_0 , ( ( this . getClass ( ) . METHOD_1 ( ) ) + STRING_1 ) ) ; if ( IDENT_0 . exists ( ) ) { org . apache . commons . io . IDENT_1 . METHOD_2 ( IDENT_0 ) ; } IDENT_0 . METHOD_3 ( ) ; java . lang . String IDENT_2 = IDENT_0 . METHOD_4 ( ) . toString ( ) ; conf . set ( IDENT_3 . IDENT_4 , IDENT_2 ) ; conf . METHOD_5 ( IDENT_3 . IDENT_5 , true ) ; org . apache . hadoop . yarn . server . IDENT_6 . IDENT_7 IDENT_8 = new org . apache . hadoop . yarn . server . IDENT_6 . METHOD_6 ( conf ) { @ org . apache . hadoop . yarn . server . IDENT_6 . Override MOD_0 org . apache . hadoop . yarn . server . IDENT_6 . IDENT_9 . IDENT_10 METHOD_7 ( ) { org . apache . hadoop . yarn . server . IDENT_6 . IDENT_9 . IDENT_10 IDENT_11 = new org . apache . hadoop . yarn . server . IDENT_6 . IDENT_9 . METHOD_8 ( ) ; IDENT_11 . init ( METHOD_9 ( ) ) ; return IDENT_11 ; } } ; IDENT_8 . init ( conf ) ; IDENT_8 . start ( ) ; org . apache . hadoop . yarn . server . IDENT_6 . IDENT_9 . METHOD_8 IDENT_12 = IDENT_8 . METHOD_10 ( ) . METHOD_11 ( ) ; java . util . Set < java . lang . String > IDENT_13 = new java . util . HashSet < java . lang . String > ( ) ; IDENT_13 . add ( STRING_2 ) ; IDENT_13 . add ( STRING_3 ) ; IDENT_12 . METHOD_12 ( IDENT_13 ) ; org . apache . hadoop . yarn . api . records . IDENT_14 IDENT_15 = org . apache . hadoop . yarn . api . records . IDENT_14 . newInstance ( STRING_4 , INT_0 ) ; org . apache . hadoop . yarn . api . records . IDENT_14 IDENT_16 = org . apache . hadoop . yarn . api . records . IDENT_14 . newInstance ( STRING_4 , INT_1 ) ; org . apache . hadoop . yarn . api . records . IDENT_14 IDENT_17 = org . apache . hadoop . yarn . api . records . IDENT_14 . newInstance ( STRING_4 , 0 ) ; IDENT_12 . METHOD_13 ( com . google . common . collect . ImmutableMap . of ( IDENT_15 , METHOD_14 ( STRING_2 ) ) ) ; IDENT_12 . METHOD_13 ( com . google . common . collect . ImmutableMap . of ( IDENT_16 , METHOD_14 ( STRING_2 ) ) ) ; IDENT_12 . METHOD_13 ( com . google . common . collect . ImmutableMap . of ( IDENT_17 , METHOD_14 ( STRING_3 ) ) ) ; IDENT_12 . METHOD_13 ( com . google . common . collect . ImmutableMap . of ( IDENT_15 , METHOD_14 ( STRING_2 ) ) ) ; org . apache . hadoop . yarn . server . IDENT_6 . METHOD_6 IDENT_18 = null ; for ( int i = 0 ; i < 2 ; i ++ ) { IDENT_18 = new org . apache . hadoop . yarn . server . IDENT_6 . METHOD_6 ( conf , IDENT_8 . METHOD_15 ( ) ) { @ org . apache . hadoop . yarn . server . IDENT_6 . Override MOD_0 org . apache . hadoop . yarn . server . IDENT_6 . IDENT_9 . METHOD_8 METHOD_7 ( ) { org . apache . hadoop . yarn . server . IDENT_6 . IDENT_9 . METHOD_8 IDENT_11 = new org . apache . hadoop . yarn . server . IDENT_6 . IDENT_9 . METHOD_8 ( ) ; IDENT_11 . init ( METHOD_9 ( ) ) ; return IDENT_11 ; } } ; IDENT_18 . init ( conf ) ; IDENT_18 . start ( ) ; IDENT_12 = IDENT_18 . METHOD_10 ( ) . METHOD_11 ( ) ; java . util . Map < java . lang . String , java . util . Set < org . apache . hadoop . yarn . api . records . IDENT_14 > > IDENT_19 = IDENT_12 . METHOD_16 ( METHOD_14 ( STRING_2 ) ) ; "<AssertPlaceHolder>" ; } IDENT_8 . METHOD_17 ( ) ; IDENT_18 . METHOD_17 ( ) ; } get ( java . lang . Class ) { METHOD_18 ( ) ; long start = METHOD_19 ( ) ; java . util . List < T > ret = new java . util . ArrayList ( ) ; java . lang . String IDENT_20 = METHOD_20 ( clazz ) ; try { java . util . List < java . lang . String > IDENT_21 = IDENT_22 . METHOD_21 ( IDENT_20 ) ; for ( java . lang . String child : IDENT_21 ) { try { java . lang . String path = METHOD_22 ( IDENT_20 , child ) ; org . apache . IDENT_23 . data . IDENT_24 IDENT_25 = new org . apache . IDENT_23 . data . METHOD_23 ( ) ; java . lang . String data = IDENT_22 . METHOD_24 ( path , IDENT_25 ) ; boolean IDENT_26 = false ; if ( ( data == null ) || ( data . equals ( "" ) ) ) { IDENT_26 = true ; } else { try { T record = METHOD_25 ( data , IDENT_25 , clazz ) ; ret . add ( record ) ; } catch ( java . io . IOException e ) { org . apache . hadoop . hdfs . server . IDENT_27 . store . driver . impl . IDENT_28 . LOG . error ( STRING_5 , clazz . METHOD_1 ( ) , data , e . getMessage ( ) ) ; IDENT_26 = true ; } } if ( IDENT_26 ) { org . apache . hadoop . hdfs . server . IDENT_27 . store . driver . impl . IDENT_28 . LOG . error ( STRING_6 , child , path ) ; IDENT_22 . delete ( path ) ; } } catch ( java . lang . Exception e ) { org . apache . hadoop . hdfs . server . IDENT_27 . store . driver . impl . IDENT_28 . LOG . error ( STRING_7 , child , e . getMessage ( ) ) ; } } } catch ( java . lang . Exception e ) { METHOD_26 ( ) . METHOD_27 ( ( ( METHOD_19 ( ) ) - start ) ) ; java . lang . String msg = ( ( STRING_8 + IDENT_20 ) + STRING_9 ) + ( e . getMessage ( ) ) ; org . apache . hadoop . hdfs . server . IDENT_27 . store . driver . impl . IDENT_28 . LOG . error ( msg ) ; throw new java . io . IOException ( msg ) ; } long end = METHOD_19 ( ) ; METHOD_26 ( ) . METHOD_28 ( ( end - start ) ) ; return new org . apache . hadoop . hdfs . server . IDENT_27 . store . records . IDENT_29 < T > ( ret , getTime ( ) ) ; }
org . junit . Assert . assertEquals ( 1 , ( null == ( IDENT_19 . get ( STRING_2 ) ) ? 0 : IDENT_19 . get ( STRING_2 ) . size ( ) ) ) 