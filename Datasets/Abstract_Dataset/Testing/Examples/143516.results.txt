METHOD_0 ( ) { java . util . List < eu . IDENT_0 . IDENT_1 . user . IDENT_2 . IDENT_3 > IDENT_4 = new java . util . ArrayList < eu . IDENT_0 . IDENT_1 . user . IDENT_2 . IDENT_3 > ( ) ; IDENT_4 . add ( new eu . IDENT_0 . IDENT_1 . user . IDENT_2 . METHOD_1 ( STRING_0 ) ) ; java . util . List < eu . IDENT_0 . IDENT_1 . user . IDENT_5 > IDENT_6 = METHOD_2 ( ) ; IDENT_6 . add ( new eu . IDENT_0 . IDENT_1 . user . METHOD_3 ( new eu . IDENT_0 . IDENT_7 . METHOD_4 ( ) ) ) ; boolean IDENT_8 = true ; for ( eu . IDENT_0 . IDENT_1 . user . IDENT_2 . METHOD_1 IDENT_9 : IDENT_4 ) { System . out . METHOD_5 ( ( ( IDENT_9 . name ) + STRING_1 ) ) ; for ( eu . IDENT_0 . IDENT_1 . user . IDENT_5 cs : IDENT_6 ) { try { int size = METHOD_6 ( cs , IDENT_9 . IDENT_10 , IDENT_9 . name ) ; System . out . METHOD_5 ( ( ( ( ( cs . METHOD_7 ( ) ) + STRING_2 ) + size ) + " " ) ) ; } catch ( java . lang . Exception e ) { System . out . println ( STRING_3 ) ; IDENT_8 = false ; } } System . out . println ( ) ; } "<AssertPlaceHolder>" ; } METHOD_7 ( ) { return 0 ; }
org . junit . Assert . assertTrue ( IDENT_8 ) 