METHOD_0 ( ) { au . edu . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new au . edu . IDENT_0 . IDENT_1 . METHOD_1 ( 0 , IDENT_4 , ( - 10 ) , 0 , IDENT_5 , INT_0 ) ; java . util . List < au . edu . IDENT_0 . IDENT_1 . IDENT_6 > IDENT_7 = com . google . common . collect . Lists . newArrayList ( new au . edu . IDENT_0 . IDENT_1 . METHOD_2 ( METHOD_3 ( ) , com . google . common . collect . ImmutableList . < au . edu . IDENT_0 . IDENT_1 . IDENT_8 > of ( new au . edu . IDENT_0 . IDENT_1 . METHOD_4 ( IDENT_3 ) ) . iterator ( ) , IDENT_4 , IDENT_5 , new au . edu . IDENT_0 . IDENT_1 . METHOD_5 ( "test" ) ) ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_9 . size ( ) ; }
org . junit . Assert . assertEquals ( 2 , IDENT_7 . size ( ) ) 