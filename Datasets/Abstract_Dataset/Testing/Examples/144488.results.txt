METHOD_0 ( ) { java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; for ( int i = 0 ; i <= 100 ; i ++ ) { sb . append ( i ) ; sb . append ( STRING_0 ) ; sb . append ( ( i + FLOAT_0 ) ) ; sb . append ( STRING_1 ) ; } com . google . common . io . IDENT_0 . write ( METHOD_1 ( sb . toString ( ) ) , input ) ; au . edu . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new au . edu . IDENT_1 . IDENT_2 . METHOD_2 ( input ) ; for ( int i = 0 ; i <= 100 ; i ++ ) { "<AssertPlaceHolder>" ; } } METHOD_3 ( int ) { if ( IDENT_5 < 0 ) throw new java . lang . IllegalArgumentException ( STRING_2 ) ; if ( IDENT_5 > 100 ) throw new java . lang . IllegalArgumentException ( STRING_3 ) ; return IDENT_6 [ IDENT_5 ] ; }
org . junit . Assert . assertEquals ( ( i + FLOAT_0 ) , IDENT_4 . METHOD_3 ( i ) , 0 ) 