METHOD_0 ( ) { org . apache . hadoop . yarn . api . records . IDENT_0 IDENT_1 = org . apache . hadoop . yarn . api . records . IDENT_0 . newInstance ( 0 , 1 ) ; java . lang . String IDENT_2 = org . apache . hadoop . yarn . server . IDENT_3 . storage . common . IDENT_4 . METHOD_1 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { java . lang . StringBuffer buf = new java . lang . StringBuffer ( ) ; java . util . Iterator < java . lang . String > it = org . apache . hadoop . yarn . api . records . IDENT_5 . IDENT_6 . IDENT_7 . split ( IDENT_8 ) . iterator ( ) ; if ( ! ( it . next ( ) . equals ( org . apache . hadoop . yarn . api . records . IDENT_5 . IDENT_6 . IDENT_9 ) ) ) { throw new java . lang . IllegalArgumentException ( ( STRING_0 + IDENT_8 ) ) ; } org . apache . hadoop . yarn . api . records . IDENT_0 IDENT_10 = org . apache . hadoop . yarn . api . records . IDENT_0 . newInstance ( java . lang . Long . METHOD_3 ( it . next ( ) ) , java . lang . Integer . METHOD_4 ( it . next ( ) ) ) ; buf . append ( it . next ( ) ) ; while ( it . hasNext ( ) ) { buf . append ( STRING_1 ) ; buf . append ( it . next ( ) ) ; } return org . apache . hadoop . yarn . api . records . IDENT_5 . IDENT_6 . newInstance ( IDENT_10 , buf . toString ( ) ) ; }
org . junit . Assert . assertEquals ( IDENT_1 , org . apache . hadoop . yarn . api . records . IDENT_0 . METHOD_2 ( IDENT_2 ) ) 