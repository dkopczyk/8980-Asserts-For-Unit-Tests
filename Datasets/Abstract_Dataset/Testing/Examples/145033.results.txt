METHOD_0 ( ) { final java . io . IDENT_0 writer = new java . io . METHOD_1 ( System . out ) ; final com . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new com . IDENT_1 . IDENT_2 . METHOD_2 ( ) ; final java . lang . Thread IDENT_5 = new java . lang . Thread ( IDENT_4 , STRING_0 ) ; IDENT_5 . start ( ) ; while ( ( IDENT_4 . IDENT_6 . get ( ) ) < ( com . IDENT_1 . IDENT_2 . IDENT_7 ) ) { java . lang . Thread . sleep ( 1000 ) ; } final java . io . File file = java . io . File . METHOD_3 ( STRING_1 , STRING_2 ) ; file . METHOD_4 ( ) ; final com . IDENT_1 . IDENT_8 IDENT_9 = ( ( com . IDENT_1 . IDENT_8 ) ( com . IDENT_1 . IDENT_10 . METHOD_5 ( IDENT_11 , ( STRING_3 + ( file . getAbsolutePath ( ) ) ) ) ) ) ; IDENT_9 . METHOD_6 ( writer ) ; IDENT_9 . METHOD_7 ( IDENT_11 ) ; IDENT_9 . METHOD_8 ( 1 , ( STRING_4 + ( file . getAbsolutePath ( ) ) ) , STRING_5 , 0 , 5 ) ; IDENT_4 . IDENT_12 . set ( true ) ; IDENT_9 . run ( ) ; IDENT_4 . IDENT_13 . set ( true ) ; IDENT_5 . join ( ) ; final com . IDENT_1 . Configuration config = IDENT_11 . METHOD_9 ( ) ; IDENT_11 . METHOD_10 ( ) ; com . IDENT_1 . unit . IDENT_14 . METHOD_11 ( new java . io . File ( com . IDENT_1 . unit . IDENT_14 . IDENT_15 ) ) ; final com . IDENT_1 . IDENT_8 IDENT_16 = new com . IDENT_1 . METHOD_12 ( ) ; IDENT_16 . METHOD_6 ( writer ) ; IDENT_16 . METHOD_7 ( IDENT_11 ) ; IDENT_16 . METHOD_13 ( file . getAbsolutePath ( ) ) ; config . METHOD_14 ( true ) ; IDENT_11 = new com . IDENT_1 . METHOD_15 ( config ) ; IDENT_11 . METHOD_16 ( ) ; final com . IDENT_1 . IDENT_17 IDENT_18 = IDENT_11 . METHOD_17 ( STRING_6 , STRING_7 , false ) ; IDENT_18 . to ( IDENT_19 . IDENT_20 ) ; int IDENT_21 = 0 ; while ( IDENT_18 . next ( ) ) { final int key = IDENT_18 . getKey ( ) . METHOD_18 ( ) . METHOD_19 ( ) ; final boolean found = IDENT_4 . IDENT_22 . remove ( key ) ; if ( ! found ) { IDENT_21 ++ ; } } "<AssertPlaceHolder>" ; } isEmpty ( ) { if ( ( IDENT_23 . METHOD_20 ( ) ) == ( IDENT_24 ) ) { return ( IDENT_25 ) == 0 ; } try { METHOD_21 ( ) ; if ( IDENT_23 . METHOD_22 ( IDENT_19 . IDENT_26 , false ) ) { if ( ( ( IDENT_27 ) != null ) && ( ( IDENT_23 . getKey ( ) . compareTo ( IDENT_27 ) ) >= 0 ) ) { IDENT_25 = 0 ; IDENT_24 = IDENT_23 . METHOD_20 ( ) ; return true ; } else { return false ; } } else { return true ; } } catch ( final com . IDENT_1 . exception . IDENT_28 de ) { throw new com . IDENT_1 . IDENT_29 . METHOD_23 ( de ) ; } }
org . junit . Assert . assertTrue ( IDENT_4 . IDENT_22 . isEmpty ( ) ) 