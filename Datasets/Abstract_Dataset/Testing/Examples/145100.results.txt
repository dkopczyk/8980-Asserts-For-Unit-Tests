METHOD_0 ( ) { int [ ] IDENT_0 = METHOD_1 ( ) ; java . lang . String expected = METHOD_2 ( IDENT_0 , IDENT_1 ) ; java . lang . String IDENT_2 = METHOD_3 ( STRING_0 ) . METHOD_4 ( STRING_1 , IDENT_0 , IDENT_1 ) . METHOD_5 ( ) ; METHOD_6 ( STRING_2 , IDENT_2 , expected ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( java . lang . String , java . lang . String , java . lang . String ) { System . out . println ( ( ( ( ( ( ( ( STRING_3 + IDENT_3 ) + STRING_4 ) + ( IDENT_4 . name ( ) ) ) + " " ) + ( IDENT_4 . METHOD_7 ( ) ) ) + ( IDENT_4 . METHOD_8 ( ) ) ) + STRING_5 ) ) ; java . lang . StringBuilder message = new java . lang . StringBuilder ( ) ; int IDENT_5 = ( IDENT_6 ) - ( IDENT_3 . length ( ) ) ; if ( IDENT_5 < 0 ) { IDENT_5 = 0 ; message . append ( STRING_6 ) . append ( IDENT_3 . substring ( 0 , ( ( IDENT_6 ) - 3 ) ) ) . append ( STRING_7 ) ; } else { message . append ( STRING_6 ) . append ( IDENT_3 ) ; } for ( int i = 0 ; i < IDENT_5 ; i ++ ) { message . append ( " " ) ; } message . append ( STRING_8 ) . append ( expected ) ; System . out . println ( message . toString ( ) ) ; METHOD_6 ( IDENT_3 , result ) ; }
org . junit . Assert . assertEquals ( IDENT_2 , expected ) 