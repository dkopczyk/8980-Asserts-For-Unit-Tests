METHOD_0 ( ) { final com . IDENT_0 . IDENT_1 . IDENT_2 engine = new com . IDENT_0 . IDENT_1 . IDENT_2 . Builder ( ) . METHOD_1 ( false ) . build ( ) ; final java . util . concurrent . IDENT_3 IDENT_4 = java . util . concurrent . IDENT_5 . METHOD_2 ( ) ; final java . util . concurrent . atomic . IDENT_6 IDENT_7 = new java . util . concurrent . atomic . METHOD_3 ( ) ; int IDENT_8 = java . lang . Math . min ( 4 , java . lang . IDENT_9 . METHOD_4 ( ) . METHOD_5 ( ) ) ; final java . util . concurrent . IDENT_10 IDENT_11 = new java . util . concurrent . METHOD_6 ( IDENT_8 ) ; for ( int i = 0 ; i < INT_0 ; i ++ ) { IDENT_11 . METHOD_7 ( ) ; IDENT_4 . METHOD_8 ( ( ) -> { try { com . IDENT_0 . IDENT_1 . template . IDENT_12 template = engine . METHOD_9 ( STRING_0 ) ; int a = com . IDENT_0 . IDENT_1 . IDENT_13 . r . METHOD_10 ( ) ; int b = com . IDENT_0 . IDENT_1 . IDENT_13 . r . METHOD_10 ( ) ; int c = com . IDENT_0 . IDENT_1 . IDENT_13 . r . METHOD_10 ( ) ; com . IDENT_0 . IDENT_1 . IDENT_14 IDENT_15 = new com . IDENT_0 . IDENT_1 . METHOD_11 ( a , b , c ) ; java . io . StringWriter writer = new java . io . StringWriter ( ) ; Map < java . lang . String , java . lang . Object > context = new com . IDENT_0 . IDENT_1 . HashMap < > ( ) ; context . put ( "test" , IDENT_15 ) ; template . evaluate ( writer , context ) ; java . lang . String IDENT_16 = ( ( ( a + STRING_1 ) + b ) + STRING_1 ) + c ; java . lang . String IDENT_17 = writer . toString ( ) ; if ( ! ( IDENT_16 . equals ( IDENT_17 ) ) ) { System . out . println ( ( STRING_2 + IDENT_16 ) ) ; System . out . println ( ( STRING_3 + IDENT_17 ) ) ; IDENT_7 . METHOD_12 ( ) ; } } catch ( java . io . IOException | com . IDENT_0 . IDENT_1 . error . IDENT_18 e ) { com . IDENT_0 . IDENT_1 . e . printStackTrace ( ) ; IDENT_7 . METHOD_12 ( ) ; } finally { IDENT_11 . METHOD_13 ( ) ; } } ) ; if ( ( IDENT_7 . METHOD_14 ( ) ) > 0 ) { break ; } } IDENT_11 . METHOD_7 ( IDENT_8 ) ; IDENT_4 . METHOD_15 ( ) ; "<AssertPlaceHolder>" ; } METHOD_14 ( ) { return this . getValue ( ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_7 . METHOD_14 ( ) ) 