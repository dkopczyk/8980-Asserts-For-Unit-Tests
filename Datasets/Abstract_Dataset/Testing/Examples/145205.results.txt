METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 IDENT_1 = new com . IDENT_0 . IDENT_1 . IDENT_2 . Builder ( ) . loader ( new com . IDENT_0 . IDENT_1 . loader . METHOD_1 ( ) ) . METHOD_2 ( false ) . build ( ) ; java . lang . String source = STRING_0 + ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( STRING_1 + "b" 4 ) + "b" 1 ) + STRING_2 ) + "b" 9 ) + STRING_3 ) + STRING_4 3 ) + "b" 3 ) + STRING_4 0 ) + STRING_5 ) + "b" 7 ) + "b" 2 ) + STRING_6 ) + "b" 6 ) + "b" 5 ) + STRING_7 ) + STRING_4 2 ) + STRING_8 ) + STRING_4 ) ; com . IDENT_0 . IDENT_1 . template . IDENT_3 template = IDENT_1 . METHOD_3 ( source ) ; java . util . Map < java . lang . String , java . lang . Object > context = new java . util . HashMap ( ) ; context . put ( "b" , null ) ; context . put ( "b" 8 , false ) ; context . put ( "b" 0 , true ) ; java . io . IDENT_4 writer = new java . io . StringWriter ( ) ; template . evaluate ( writer , context ) ; "<AssertPlaceHolder>" ; } toString ( ) { return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( ( STRING_4 1 + ( ( ( STRING_4 1 + STRING_4 1 ) + STRING_4 1 ) + STRING_4 1 ) ) , writer . toString ( ) ) 