METHOD_0 ( ) { final java . lang . String xml = STRING_0 ; METHOD_1 ( new org . mockito . IDENT_0 . IDENT_1 < java . lang . IDENT_2 > ( ) { @ com . pentaho . IDENT_3 . data . IDENT_4 . impl . IDENT_5 . hbase . mapping . Override public com . pentaho . IDENT_3 . data . IDENT_4 . impl . IDENT_5 . hbase . mapping . IDENT_2 METHOD_2 ( org . mockito . IDENT_6 . IDENT_7 IDENT_6 ) throws java . lang . Throwable { ( ( java . lang . StringBuffer ) ( IDENT_6 . METHOD_3 ( ) [ 0 ] ) ) . append ( xml ) ; return null ; } } ) . when ( delegate ) . METHOD_4 ( any ( com . pentaho . IDENT_3 . data . IDENT_4 . impl . IDENT_5 . hbase . mapping . StringBuffer . class ) ) ; java . lang . StringBuilder IDENT_8 = new java . lang . StringBuilder ( ) ; IDENT_9 . METHOD_4 ( IDENT_8 ) ; "<AssertPlaceHolder>" ; } toString ( ) { java . lang . String IDENT_10 = IDENT_11 . entrySet ( ) . stream ( ) . map ( ( entry ) -> ( ( entry . getKey ( ) ) + STRING_1 ) + ( entry . getValue ( ) ) ) . filter ( IDENT_12 :: IDENT_13 ) . METHOD_5 ( String :: IDENT_14 ) . collect ( java . util . stream . IDENT_15 . METHOD_6 ( STRING_2 ) ) ; java . lang . String path = uri . getPath ( ) ; int IDENT_16 = path . indexOf ( STRING_3 ) ; if ( IDENT_16 >= 0 ) { path = path . substring ( 0 , IDENT_16 ) ; } return ( ( ( ( ( ( STRING_4 + ( uri . METHOD_7 ( ) ) ) + STRING_5 ) + ( uri . METHOD_8 ( ) ) ) + STRING_6 ) + ( uri . METHOD_9 ( ) ) ) + path ) + ( ( IDENT_10 != null ) && ( ( IDENT_10 . length ( ) ) > 0 ) ? STRING_2 + IDENT_10 : "" ) ; }
org . junit . Assert . assertEquals ( xml , IDENT_8 . toString ( ) ) 