METHOD_0 ( ) { org . pentaho . di . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = ( ( org . pentaho . di . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) ( IDENT_5 . IDENT_6 ) ) ; org . pentaho . di . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 IDENT_8 = ( ( org . pentaho . di . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 ) ( IDENT_5 . IDENT_9 ) ) ; final java . lang . String IDENT_10 = STRING_0 ; final java . lang . String IDENT_11 = STRING_1 ; final java . lang . String IDENT_12 = STRING_2 ; final java . lang . String IDENT_13 = STRING_3 ; final java . lang . String IDENT_14 = "" ; when ( IDENT_4 . METHOD_1 ( ) ) . thenReturn ( IDENT_10 ) ; when ( IDENT_4 . METHOD_2 ( ) ) . thenReturn ( IDENT_11 ) ; when ( IDENT_4 . METHOD_3 ( ) ) . thenReturn ( IDENT_12 ) ; when ( IDENT_4 . METHOD_4 ( ) ) . thenReturn ( IDENT_13 ) ; when ( IDENT_4 . METHOD_5 ( ) ) . thenReturn ( IDENT_14 ) ; org . apache . http . client . methods . IDENT_15 IDENT_16 = mock ( org . apache . http . client . methods . IDENT_15 . class ) ; when ( IDENT_17 . create ( org . pentaho . di . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_18 . METHOD_6 ( IDENT_10 , org . pentaho . di . core . IDENT_19 . METHOD_7 ( IDENT_11 , INT_0 ) , IDENT_12 , IDENT_13 , IDENT_14 ) ) ) . thenReturn ( IDENT_16 ) ; org . apache . http . client . IDENT_20 IDENT_21 = mock ( org . apache . http . client . IDENT_20 . class ) ; doReturn ( IDENT_21 ) . when ( IDENT_22 ) . METHOD_8 ( anyString ( ) , anyString ( ) ) ; org . apache . http . IDENT_23 IDENT_24 = mock ( org . apache . http . IDENT_23 . class ) ; org . apache . http . IDENT_25 IDENT_26 = mock ( org . apache . http . IDENT_25 . class ) ; doReturn ( IDENT_24 ) . when ( IDENT_21 ) . execute ( METHOD_9 ( ) ) ; doReturn ( IDENT_26 ) . when ( IDENT_24 ) . METHOD_10 ( ) ; doReturn ( 200 ) . when ( IDENT_26 ) . getStatusCode ( ) ; "<AssertPlaceHolder>" ; } init ( org . pentaho . di . IDENT_0 . IDENT_27 . IDENT_28 , org . pentaho . di . IDENT_0 . IDENT_27 . IDENT_29 ) { init ( IDENT_30 ) ; return super . init ( IDENT_30 , IDENT_31 ) ; }
org . junit . Assert . assertFalse ( IDENT_22 . init ( IDENT_4 , IDENT_8 ) ) 