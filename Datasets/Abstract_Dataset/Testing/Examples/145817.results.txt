METHOD_0 ( ) { java . net . IDENT_0 IDENT_1 = java . net . IDENT_0 . METHOD_1 ( STRING_0 ) ; byte [ ] address = IDENT_1 . METHOD_2 ( ) ; java . io . ByteArrayOutputStream IDENT_2 = new java . io . ByteArrayOutputStream ( ) ; java . io . IDENT_3 IDENT_4 = new java . io . METHOD_3 ( IDENT_2 ) ; IDENT_4 . METHOD_4 ( false ) ; IDENT_4 . METHOD_5 ( address . length ) ; IDENT_4 . write ( address ) ; java . io . IDENT_5 IDENT_6 = new java . io . METHOD_6 ( new java . io . ByteArrayInputStream ( IDENT_2 . toByteArray ( ) ) ) ; org . pentaho . di . core . row . value . IDENT_7 IDENT_8 = new org . pentaho . di . core . row . value . METHOD_7 ( ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( org . w3c . dom . Node ) { org . w3c . dom . Node fields = org . pentaho . di . core . xml . IDENT_9 . METHOD_9 ( IDENT_10 , STRING_1 ) ; int IDENT_11 = org . pentaho . di . core . xml . IDENT_9 . METHOD_10 ( fields , STRING_2 ) ; METHOD_11 ( IDENT_11 ) ; for ( int i = 0 ; i < IDENT_11 ; i ++ ) { org . w3c . dom . Node line = org . pentaho . di . core . xml . IDENT_9 . METHOD_12 ( fields , STRING_2 , i ) ; IDENT_12 [ i ] = org . pentaho . di . core . xml . IDENT_9 . METHOD_13 ( line , "name" ) ; type [ i ] = org . pentaho . di . core . row . value . IDENT_13 . METHOD_14 ( org . pentaho . di . core . xml . IDENT_9 . METHOD_13 ( line , STRING_3 ) ) ; length [ i ] = org . pentaho . di . core . IDENT_14 . METHOD_15 ( org . pentaho . di . core . xml . IDENT_9 . METHOD_13 ( line , STRING_4 ) , ( - 2 ) ) ; IDENT_15 [ i ] = org . pentaho . di . core . IDENT_14 . METHOD_15 ( org . pentaho . di . core . xml . IDENT_9 . METHOD_13 ( line , STRING_5 ) , ( - 2 ) ) ; } }
org . junit . Assert . assertEquals ( IDENT_1 , IDENT_8 . METHOD_8 ( IDENT_6 ) ) 