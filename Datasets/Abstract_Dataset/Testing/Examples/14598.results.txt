METHOD_0 ( ) { int IDENT_0 = IDENT_1 . METHOD_1 ( ) . size ( ) ; METHOD_2 ( "bar" , 3 ) ; org . apache . hadoop . hbase . IDENT_2 . IDENT_3 . METHOD_3 ( tableName , org . apache . hadoop . hbase . util . IDENT_4 . METHOD_4 ( STRING_0 ) ) ; IDENT_1 . METHOD_5 ( org . apache . hbase . IDENT_5 . com . google . common . collect . IDENT_6 . METHOD_6 ( tableName ) , "bar" ) ; org . apache . hadoop . hbase . IDENT_2 . IDENT_7 IDENT_8 = IDENT_1 . METHOD_7 ( "bar" ) ; try { IDENT_1 . METHOD_8 ( IDENT_8 . getName ( ) ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( java . io . IOException e ) { } try { IDENT_1 . METHOD_9 ( IDENT_8 . METHOD_10 ( ) , IDENT_7 . IDENT_9 ) ; org . junit . Assert . fail ( STRING_2 ) ; } catch ( java . io . IOException e ) { } IDENT_1 . METHOD_5 ( IDENT_8 . METHOD_11 ( ) , IDENT_7 . IDENT_9 ) ; try { IDENT_1 . METHOD_8 ( IDENT_8 . getName ( ) ) ; org . junit . Assert . fail ( STRING_2 ) ; } catch ( java . io . IOException e ) { } IDENT_1 . METHOD_9 ( IDENT_8 . METHOD_10 ( ) , IDENT_7 . IDENT_9 ) ; IDENT_1 . METHOD_8 ( IDENT_8 . getName ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( ) { try { java . util . List < org . apache . hadoop . hbase . IDENT_10 . IDENT_11 . IDENT_12 . IDENT_7 > IDENT_13 = IDENT_14 . METHOD_12 ( null , org . apache . hadoop . hbase . IDENT_10 . IDENT_11 . IDENT_15 . IDENT_16 . METHOD_13 ( ) ) . METHOD_14 ( ) ; java . util . List < org . apache . hadoop . hbase . IDENT_2 . IDENT_7 > result = new java . util . ArrayList ( IDENT_13 . size ( ) ) ; for ( org . apache . hadoop . hbase . IDENT_10 . IDENT_11 . IDENT_12 . IDENT_7 entry : IDENT_13 ) { result . add ( org . apache . hadoop . hbase . IDENT_2 . IDENT_17 . METHOD_15 ( entry ) ) ; } return result ; } catch ( com . google . IDENT_10 . IDENT_18 e ) { throw org . apache . hadoop . hbase . IDENT_10 . IDENT_19 . METHOD_16 ( e ) ; } }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_1 . METHOD_1 ( ) . size ( ) ) 