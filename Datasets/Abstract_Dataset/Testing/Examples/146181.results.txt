METHOD_0 ( ) { final org . pentaho . IDENT_0 . api . IDENT_1 IDENT_2 = mock ( org . pentaho . IDENT_0 . api . IDENT_1 . class ) ; when ( IDENT_3 . METHOD_1 ( anyString ( ) ) ) . thenReturn ( IDENT_2 ) ; final org . pentaho . IDENT_0 . api . IDENT_1 IDENT_4 = org . pentaho . di . IDENT_5 . IDENT_0 . IDENT_6 . METHOD_2 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_4 , times ( 1 ) ) . setName ( IDENT_6 . IDENT_7 ) ; verify ( IDENT_4 , times ( 1 ) ) . METHOD_3 ( IDENT_6 . IDENT_8 ) ; verify ( IDENT_3 , times ( 1 ) ) . METHOD_4 ( anyString ( ) , eq ( IDENT_2 ) ) ; } METHOD_2 ( org . pentaho . IDENT_0 . api . IDENT_9 ) { org . pentaho . IDENT_0 . api . IDENT_1 IDENT_10 = IDENT_3 . METHOD_1 ( org . pentaho . di . IDENT_5 . IDENT_0 . IDENT_6 . IDENT_11 ) ; IDENT_10 . setName ( org . pentaho . di . IDENT_5 . IDENT_0 . IDENT_6 . IDENT_7 ) ; IDENT_10 . METHOD_3 ( org . pentaho . di . IDENT_5 . IDENT_0 . IDENT_6 . IDENT_8 ) ; IDENT_3 . METHOD_4 ( org . pentaho . di . IDENT_5 . IDENT_0 . IDENT_6 . IDENT_11 , IDENT_10 ) ; return IDENT_10 ; }
org . junit . Assert . assertEquals ( IDENT_4 , IDENT_2 ) 