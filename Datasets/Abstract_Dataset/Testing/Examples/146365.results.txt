METHOD_0 ( ) { org . pentaho . platform . web . http . api . resources . services . IDENT_0 fs = mock ( org . pentaho . platform . web . http . api . resources . services . IDENT_0 . class ) ; METHOD_1 ( ) . when ( fs ) . METHOD_2 ( anyString ( ) ) ; METHOD_1 ( ) . when ( fs ) . decode ( anyString ( ) ) ; doReturn ( STRING_0 ) . when ( fs ) . METHOD_3 ( anyString ( ) ) ; doReturn ( true ) . when ( fs ) . METHOD_4 ( STRING_0 ) ; java . lang . StringBuffer sb = new java . lang . StringBuffer ( STRING_1 ) ; doReturn ( sb ) . when ( fs ) . METHOD_5 ( ) ; METHOD_6 ( org . pentaho . platform . web . http . api . resources . utils . IDENT_1 . class ) ; when ( org . pentaho . platform . web . http . api . resources . utils . IDENT_1 . METHOD_7 ( anyString ( ) , any ( ) ) ) . thenReturn ( false ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { if ( ( IDENT_2 . indexOf ( STRING_2 ) ) != ( - 1 ) ) { throw new org . pentaho . platform . web . http . api . resources . services . IDENT_0 . METHOD_8 ( ) ; } java . lang . String path = METHOD_3 ( IDENT_2 ) ; if ( ( path . indexOf ( STRING_3 ) ) != ( - 1 ) ) { throw new org . pentaho . platform . web . http . api . resources . services . IDENT_0 . METHOD_8 ( ) ; } if ( ! ( METHOD_9 ( path ) ) ) { throw new org . pentaho . platform . web . http . api . resources . services . IDENT_0 . METHOD_8 ( ) ; } return METHOD_4 ( path ) ; }
org . junit . Assert . assertTrue ( fs . METHOD_2 ( STRING_0 ) ) 