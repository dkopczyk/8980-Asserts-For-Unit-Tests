METHOD_0 ( ) { org . pentaho . platform . plugin . services . security . IDENT_0 . ldap . IDENT_1 mapper = new org . pentaho . platform . plugin . services . security . IDENT_0 . ldap . METHOD_1 ( ) ; mapper . METHOD_2 ( STRING_0 ) ; mapper . METHOD_3 ( "" ) ; mapper . METHOD_4 ( new java . lang . String [ ] { STRING_1 } ) ; org . springframework . ldap . core . IDENT_2 ctx = new org . springframework . security . ldap . METHOD_5 ( METHOD_6 ( ) ) . METHOD_7 ( STRING_2 , null ) ; java . util . Set < java . lang . String > IDENT_3 = new org . springframework . security . ldap . METHOD_5 ( METHOD_6 ( ) ) . METHOD_8 ( STRING_3 , STRING_4 1 , new java . lang . String [ ] { STRING_4 , STRING_5 } , STRING_0 ) ; java . util . List < org . springframework . security . core . IDENT_4 > IDENT_5 = new java . util . ArrayList ( ) ; for ( java . lang . String IDENT_6 : IDENT_3 ) { IDENT_5 . add ( new org . springframework . security . core . IDENT_7 . METHOD_9 ( IDENT_6 ) ) ; } org . springframework . security . core . IDENT_8 . IDENT_9 IDENT_10 = mapper . METHOD_10 ( ctx , STRING_5 , IDENT_5 ) ; System . out . println ( IDENT_10 ) ; java . util . Collection < ? extends org . springframework . security . core . IDENT_4 > IDENT_11 = new java . util . ArrayList < org . springframework . security . core . IDENT_4 > ( ) { { add ( new org . springframework . security . core . IDENT_7 . METHOD_9 ( STRING_4 0 ) ) ; add ( new org . springframework . security . core . IDENT_7 . METHOD_9 ( STRING_6 ) ) ; add ( new org . springframework . security . core . IDENT_7 . METHOD_9 ( STRING_7 ) ) ; add ( new org . springframework . security . core . IDENT_7 . METHOD_9 ( STRING_8 ) ) ; } } ; java . util . Collection < ? extends org . springframework . security . core . IDENT_4 > IDENT_12 = IDENT_10 . METHOD_11 ( ) ; "<AssertPlaceHolder>" ; } METHOD_11 ( ) { throw new java . lang . IllegalStateException ( org . pentaho . platform . plugin . services . security . IDENT_0 . IDENT_13 . IDENT_14 ) ; }
org . junit . Assert . assertEquals ( IDENT_11 , IDENT_12 ) 