METHOD_0 ( ) { org . pentaho . platform . web . http . api . resources . services . IDENT_0 . IDENT_1 IDENT_2 = mock ( IDENT_0 . IDENT_1 . class ) ; doReturn ( IDENT_2 ) . when ( IDENT_3 . IDENT_4 ) . METHOD_1 ( org . pentaho . platform . web . http . api . resources . IDENT_5 . IDENT_6 ) ; javax . ws . rs . core . Response IDENT_7 = mock ( javax . ws . rs . core . Response . class ) ; doReturn ( IDENT_7 ) . when ( IDENT_3 ) . METHOD_2 ( IDENT_2 ) ; javax . ws . rs . core . Response IDENT_8 = IDENT_3 . METHOD_1 ( org . pentaho . platform . web . http . api . resources . IDENT_5 . IDENT_6 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_3 . IDENT_4 , times ( 1 ) ) . METHOD_1 ( org . pentaho . platform . web . http . api . resources . IDENT_5 . IDENT_6 ) ; verify ( IDENT_3 , times ( 1 ) ) . METHOD_2 ( IDENT_2 ) ; } METHOD_1 ( java . lang . String ) { java . lang . String path = null ; org . pentaho . platform . api . IDENT_9 . IDENT_10 . IDENT_11 IDENT_12 = null ; path = METHOD_3 ( IDENT_13 ) ; if ( METHOD_4 ( path ) ) { if ( ! ( METHOD_5 ( path ) ) ) { throw new java . lang . IllegalArgumentException ( ) ; } IDENT_12 = METHOD_6 ( ) . METHOD_7 ( path ) ; } else { IDENT_12 = METHOD_6 ( ) . METHOD_8 ( IDENT_13 ) ; } if ( IDENT_12 == null ) { throw new java . io . METHOD_9 ( ) ; } if ( ! ( METHOD_10 ( ) . accept ( IDENT_12 . getName ( ) ) ) ) { if ( ! ( METHOD_11 ( ) . METHOD_12 ( IDENT_14 . IDENT_15 ) ) ) { throw new java . lang . IllegalArgumentException ( ) ; } } try { org . pentaho . platform . api . IDENT_9 . IDENT_10 . data . simple . IDENT_16 IDENT_17 = METHOD_6 ( ) . METHOD_13 ( IDENT_12 . getId ( ) , org . pentaho . platform . api . IDENT_9 . IDENT_10 . data . simple . IDENT_16 . class ) ; final java . io . InputStream is = IDENT_17 . METHOD_14 ( ) ; javax . ws . rs . core . IDENT_18 IDENT_19 = METHOD_15 ( is ) ; org . pentaho . platform . web . http . api . resources . services . IDENT_0 . IDENT_1 IDENT_20 = new org . pentaho . platform . web . http . api . resources . services . IDENT_0 . METHOD_16 ( ) ; IDENT_20 . METHOD_17 ( IDENT_19 ) ; IDENT_20 . METHOD_18 ( IDENT_12 ) ; return IDENT_20 ; } catch ( java . lang . Exception e ) { org . pentaho . platform . web . http . api . resources . services . IDENT_0 . logger . error ( org . pentaho . platform . web . http . messages . IDENT_21 . getInstance ( ) . getString ( STRING_0 , ( ( ( IDENT_12 . getName ( ) ) + " " ) + ( e . getMessage ( ) ) ) ) , e ) ; throw new java . lang . METHOD_19 ( ) ; } }
org . junit . Assert . assertEquals ( IDENT_7 , IDENT_8 ) 