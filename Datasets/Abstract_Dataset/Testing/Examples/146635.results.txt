METHOD_0 ( ) { org . pentaho . platform . web . http . api . resources . IDENT_0 IDENT_1 = mock ( org . pentaho . platform . web . http . api . resources . IDENT_0 . class ) ; java . lang . String IDENT_2 = STRING_0 ; doReturn ( IDENT_2 ) . when ( IDENT_1 ) . METHOD_1 ( ) ; org . pentaho . platform . api . IDENT_3 . IDENT_4 IDENT_5 = mock ( org . pentaho . platform . api . IDENT_3 . IDENT_4 . class ) ; doReturn ( IDENT_5 ) . when ( IDENT_6 . IDENT_7 ) . METHOD_2 ( IDENT_2 ) ; org . pentaho . platform . api . IDENT_3 . IDENT_4 . IDENT_8 IDENT_9 = IDENT_4 . IDENT_8 . IDENT_10 ; doReturn ( IDENT_9 ) . when ( IDENT_5 ) . METHOD_3 ( ) ; javax . ws . rs . core . Response IDENT_11 = mock ( javax . ws . rs . core . Response . class ) ; doReturn ( IDENT_11 ) . when ( IDENT_6 ) . METHOD_4 ( IDENT_9 . name ( ) ) ; javax . ws . rs . core . Response IDENT_12 = IDENT_6 . METHOD_2 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_1 , times ( 1 ) ) . METHOD_1 ( ) ; verify ( IDENT_6 . IDENT_7 , times ( 1 ) ) . METHOD_2 ( IDENT_2 ) ; verify ( IDENT_5 , times ( 1 ) ) . METHOD_3 ( ) ; verify ( IDENT_6 , times ( 1 ) ) . METHOD_4 ( IDENT_9 . name ( ) ) ; } METHOD_2 ( java . lang . String ) { org . pentaho . platform . api . IDENT_3 . IDENT_4 job = METHOD_5 ( ) . METHOD_6 ( IDENT_2 ) ; if ( METHOD_7 ( ) . METHOD_8 ( IDENT_13 . IDENT_14 ) ) { METHOD_5 ( ) . METHOD_2 ( IDENT_2 ) ; } else { if ( METHOD_9 ( ) . getName ( ) . equals ( job . METHOD_10 ( ) ) ) { METHOD_5 ( ) . METHOD_2 ( IDENT_2 ) ; } } job = METHOD_5 ( ) . METHOD_6 ( IDENT_2 ) ; return job ; }
org . junit . Assert . assertEquals ( IDENT_11 , IDENT_12 ) 