METHOD_0 ( ) { final org . pentaho . platform . plugin . action . IDENT_0 . mapper . IDENT_1 mapper = new org . pentaho . platform . plugin . action . IDENT_0 . mapper . METHOD_1 ( ) ; mapper . METHOD_2 ( STRING_0 ) ; try { java . lang . String [ ] IDENT_2 = org . pentaho . platform . engine . security . IDENT_3 . getInstance ( ) . METHOD_3 ( STRING_1 , new java . util . concurrent . IDENT_4 < java . lang . String [ ] > ( ) { @ org . pentaho . test . platform . plugin . Override public java . lang . String [ ] call ( ) throws org . pentaho . test . platform . plugin . Exception { return mapper . METHOD_4 ( org . pentaho . platform . engine . core . IDENT_5 . IDENT_6 . METHOD_5 ( ) , STRING_2 ) ; } } ) ; "<AssertPlaceHolder>" ; } catch ( org . pentaho . platform . api . engine . IDENT_7 e ) { org . junit . Assert . fail ( e . getMessage ( ) ) ; } } METHOD_5 ( ) { return org . pentaho . platform . engine . core . IDENT_5 . IDENT_6 . strategy . METHOD_5 ( ) ; }
org . junit . Assert . assertNull ( IDENT_2 ) 