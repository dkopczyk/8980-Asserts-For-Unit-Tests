METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . String > IDENT_0 = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; IDENT_0 . put ( STRING_0 , STRING_1 ) ; IDENT_0 . put ( STRING_2 , STRING_3 ) ; final org . pentaho . platform . plugin . action . IDENT_1 . mapper . IDENT_2 mapper = new org . pentaho . platform . plugin . action . IDENT_1 . mapper . METHOD_1 ( ) ; mapper . METHOD_2 ( IDENT_0 ) ; mapper . METHOD_3 ( true ) ; try { org . pentaho . platform . engine . security . IDENT_3 . getInstance ( ) . METHOD_4 ( STRING_4 , new java . util . concurrent . IDENT_4 < java . lang . String [ ] > ( ) { @ org . pentaho . test . platform . plugin . Override public java . lang . String [ ] call ( ) throws org . pentaho . test . platform . plugin . Exception { return mapper . METHOD_5 ( org . pentaho . platform . engine . core . IDENT_5 . IDENT_6 . METHOD_6 ( ) , STRING_5 ) ; } } ) ; org . junit . Assert . fail ( ) ; } catch ( org . pentaho . platform . api . engine . IDENT_7 e ) { } mapper . METHOD_3 ( false ) ; try { java . lang . String [ ] IDENT_8 = org . pentaho . platform . engine . security . IDENT_3 . getInstance ( ) . METHOD_4 ( STRING_4 , new java . util . concurrent . IDENT_4 < java . lang . String [ ] > ( ) { @ org . pentaho . test . platform . plugin . Override public java . lang . String [ ] call ( ) throws org . pentaho . test . platform . plugin . Exception { return mapper . METHOD_5 ( org . pentaho . platform . engine . core . IDENT_5 . IDENT_6 . METHOD_6 ( ) , STRING_5 ) ; } } ) ; "<AssertPlaceHolder>" ; } catch ( org . pentaho . platform . api . engine . IDENT_7 e ) { org . junit . Assert . fail ( e . getMessage ( ) ) ; } } METHOD_6 ( ) { return org . pentaho . platform . engine . core . IDENT_5 . IDENT_6 . strategy . METHOD_6 ( ) ; }
org . junit . Assert . assertNull ( IDENT_8 ) 