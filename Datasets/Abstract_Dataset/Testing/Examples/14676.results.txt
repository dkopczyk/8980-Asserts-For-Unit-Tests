METHOD_0 ( ) { org . apache . hadoop . hbase . IDENT_0 IDENT_1 = org . apache . hadoop . hbase . IDENT_0 . valueOf ( name . METHOD_1 ( ) ) ; org . apache . hadoop . hbase . client . IDENT_2 conn = org . apache . hadoop . hbase . client . IDENT_3 . IDENT_4 . METHOD_2 ( ) ; org . apache . hadoop . hbase . client . IDENT_5 admin = conn . METHOD_3 ( ) ; org . apache . hadoop . hbase . client . IDENT_6 table = ( ( org . apache . hadoop . hbase . client . IDENT_6 ) ( conn . METHOD_4 ( IDENT_1 ) ) ) ; try { org . apache . hadoop . hbase . IDENT_7 cluster = org . apache . hadoop . hbase . client . IDENT_3 . IDENT_4 . METHOD_5 ( ) ; org . apache . hadoop . hbase . client . IDENT_8 IDENT_9 = org . apache . hadoop . hbase . client . IDENT_8 . METHOD_6 ( IDENT_10 ) ; org . apache . hadoop . hbase . client . IDENT_11 IDENT_12 = org . apache . hadoop . hbase . client . IDENT_11 . METHOD_6 ( IDENT_1 ) . METHOD_7 ( IDENT_9 . build ( ) ) ; admin . METHOD_8 ( IDENT_12 . build ( ) ) ; org . apache . hadoop . hbase . client . IDENT_13 put = new org . apache . hadoop . hbase . client . METHOD_9 ( row ) ; put . METHOD_10 ( IDENT_10 , IDENT_14 , value ) ; table . put ( put ) ; org . apache . hadoop . hbase . client . IDENT_15 get = new org . apache . hadoop . hbase . client . METHOD_11 ( row ) ; org . apache . hadoop . hbase . client . Result result = table . get ( get ) ; org . apache . hadoop . hbase . IDENT_16 IDENT_17 = null ; for ( org . apache . hadoop . hbase . util . IDENT_18 . IDENT_19 IDENT_20 : cluster . METHOD_12 ( ) ) { org . apache . hadoop . hbase . IDENT_16 name = IDENT_20 . METHOD_13 ( ) . METHOD_14 ( ) ; if ( ! ( name . equals ( cluster . METHOD_15 ( ) ) ) ) { IDENT_17 = name ; break ; } } admin . METHOD_16 ( IDENT_21 . IDENT_22 . METHOD_17 ( ) , IDENT_17 ) ; org . apache . hadoop . hbase . client . IDENT_3 . LOG . debug ( STRING_0 ) ; org . apache . hadoop . hbase . client . IDENT_23 IDENT_24 = table . METHOD_18 ( ) . METHOD_19 ( row ) . METHOD_20 ( ) ; org . apache . hadoop . hbase . IDENT_16 IDENT_25 = cluster . METHOD_21 ( IDENT_1 , IDENT_24 . METHOD_22 ( ) ) ; for ( org . apache . hadoop . hbase . util . IDENT_18 . IDENT_19 IDENT_20 : cluster . METHOD_12 ( ) ) { org . apache . hadoop . hbase . IDENT_16 name = IDENT_20 . METHOD_13 ( ) . METHOD_14 ( ) ; if ( ! ( name . equals ( IDENT_25 ) ) ) { IDENT_17 = name ; break ; } } admin . METHOD_16 ( IDENT_24 . METHOD_17 ( ) , IDENT_17 ) ; org . apache . hadoop . hbase . client . IDENT_3 . LOG . debug ( STRING_1 ) ; put = new org . apache . hadoop . hbase . client . METHOD_9 ( row ) ; put . METHOD_10 ( IDENT_10 , IDENT_14 , IDENT_26 ) ; table . put ( put ) ; result = table . get ( get ) ; org . apache . hadoop . hbase . client . IDENT_3 . LOG . debug ( ( STRING_2 + ( org . apache . hadoop . hbase . util . IDENT_27 . toString ( result . getValue ( IDENT_10 , IDENT_14 ) ) ) ) ) ; "<AssertPlaceHolder>" ; } finally { admin . close ( ) ; table . close ( ) ; } } getValue ( byte [ ] , byte [ ] ) { org . apache . hadoop . hbase . IDENT_28 IDENT_29 = METHOD_23 ( IDENT_10 , IDENT_14 ) ; if ( IDENT_29 == null ) { return null ; } return org . apache . hadoop . hbase . IDENT_30 . METHOD_24 ( IDENT_29 ) ; }
org . junit . Assert . assertArrayEquals ( IDENT_26 , result . getValue ( IDENT_10 , IDENT_14 ) ) 