METHOD_0 ( ) { try { IDENT_0 = org . apache . hadoop . hbase . util . IDENT_1 . METHOD_1 ( STRING_0 ) ; int IDENT_2 = INT_0 ; int IDENT_3 = org . apache . hadoop . hbase . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_2 ( org . apache . hadoop . hbase . IDENT_7 . valueOf ( IDENT_0 ) ) ; METHOD_3 ( IDENT_2 ) ; java . lang . Thread . sleep ( INT_1 ) ; int IDENT_8 = org . apache . hadoop . hbase . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_2 ( org . apache . hadoop . hbase . IDENT_7 . valueOf ( IDENT_0 ) ) ; "<AssertPlaceHolder>" ; METHOD_4 ( IDENT_2 ) ; } catch ( java . lang . IDENT_9 e ) { org . apache . hadoop . hbase . IDENT_4 . IDENT_5 . LOG . info ( ( STRING_1 + ( e . getMessage ( ) ) ) ) ; org . junit . Assert . fail ( ) ; } catch ( java . io . IOException e ) { org . apache . hadoop . hbase . IDENT_4 . IDENT_5 . LOG . info ( ( STRING_2 + ( e . getMessage ( ) ) ) ) ; org . junit . Assert . fail ( ) ; } } valueOf ( byte [ ] ) { for ( org . apache . hadoop . hbase . IDENT_7 IDENT_10 : org . apache . hadoop . hbase . IDENT_7 . IDENT_11 ) { if ( java . util . Arrays . equals ( IDENT_10 . getName ( ) , IDENT_12 ) ) { return IDENT_10 ; } } int IDENT_13 = org . apache . hbase . IDENT_14 . com . google . common . IDENT_15 . IDENT_1 . METHOD_5 ( IDENT_12 , ( ( byte ) ( org . apache . hadoop . hbase . IDENT_7 . IDENT_16 ) ) ) ; if ( IDENT_13 < 0 ) { return org . apache . hadoop . hbase . IDENT_7 . METHOD_6 ( java . nio . ByteBuffer . METHOD_7 ( IDENT_17 . IDENT_18 ) , java . nio . ByteBuffer . METHOD_7 ( IDENT_12 ) ) ; } else { return org . apache . hadoop . hbase . IDENT_7 . METHOD_6 ( java . nio . ByteBuffer . METHOD_7 ( IDENT_12 , 0 , IDENT_13 ) , java . nio . ByteBuffer . METHOD_7 ( IDENT_12 , ( IDENT_13 + 1 ) , ( ( IDENT_12 . length ) - ( IDENT_13 + 1 ) ) ) ) ; } }
org . junit . Assert . assertTrue ( ( IDENT_8 >= ( IDENT_3 + IDENT_2 ) ) ) 