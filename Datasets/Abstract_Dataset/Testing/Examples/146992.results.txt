METHOD_0 ( ) { "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { if ( string == null ) { return null ; } boolean IDENT_0 = false ; java . util . List < java . lang . String > IDENT_1 = com . IDENT_2 . IDENT_3 . util . StringUtils . METHOD_2 ( string ) ; if ( ( ! ( IDENT_1 . isEmpty ( ) ) ) && ( STRING_0 . equals ( IDENT_1 . get ( 0 ) ) ) ) { IDENT_0 = true ; IDENT_1 . remove ( 0 ) ; } java . lang . StringBuilder IDENT_4 = new java . lang . StringBuilder ( ) ; for ( java . lang . String IDENT_5 : IDENT_1 ) { if ( ( IDENT_5 . length ( ) ) == 0 ) { continue ; } if ( com . IDENT_2 . IDENT_3 . util . StringUtils . IDENT_6 . contains ( IDENT_5 ) ) { IDENT_4 . append ( IDENT_5 . METHOD_3 ( Locale . IDENT_7 ) ) ; } else { IDENT_4 . append ( java . lang . IDENT_8 . METHOD_3 ( IDENT_5 . charAt ( 0 ) ) ) ; IDENT_4 . append ( IDENT_5 . substring ( 1 ) ) ; } IDENT_4 . append ( STRING_1 ) ; } if ( ( IDENT_4 . length ( ) ) > 0 ) { IDENT_4 . METHOD_4 ( ( ( IDENT_4 . length ( ) ) - 1 ) ) ; } if ( IDENT_0 ) { IDENT_4 . append ( STRING_2 ) ; } return IDENT_4 . toString ( ) ; }
org . junit . Assert . assertEquals ( null , com . IDENT_2 . IDENT_3 . util . StringUtils . METHOD_1 ( null ) ) 