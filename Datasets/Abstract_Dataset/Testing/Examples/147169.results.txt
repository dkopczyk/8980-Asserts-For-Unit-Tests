METHOD_0 ( ) { byte [ ] input = new byte [ ] { INT_0 , 15 } ; byte [ ] expected = new byte [ ] { INT_0 , 3 } ; de . IDENT_0 . IDENT_1 . utils . IDENT_2 field = new de . IDENT_0 . IDENT_1 . utils . METHOD_1 ( 10 , input ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { int length = ( METHOD_3 ( ) ) / 8 ; if ( ( ( METHOD_3 ( ) ) OP_0 8 ) > 0 ) { length ++ ; } byte [ ] result = new byte [ length ] ; for ( int i = 0 ; i < ( length * 8 ) ; i ++ ) { result [ ( i / 8 ) ] OP_1 ( ( byte ) ( ( METHOD_4 ( i ) ) ? INT_1 : 0 ) ) ; if ( ( ( i + 1 ) OP_0 8 ) != 0 ) { result [ ( i / 8 ) ] = ( ( byte ) ( ( result [ ( i / 8 ) ] ) > > 1 ) ) ; result [ ( i / 8 ) ] OP_2 INT_2 ; } } return result ; }
org . junit . Assert . assertArrayEquals ( expected , field . METHOD_2 ( ) ) 