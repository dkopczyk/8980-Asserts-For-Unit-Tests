METHOD_0 ( ) { java . lang . String s = STRING_0 ; byte [ ] exp = new byte [ ] { ( ( byte ) ( INT_0 ) ) } ; byte [ ] IDENT_0 = de . IDENT_1 . IDENT_2 . utils . IDENT_3 . toByteArray ( s ) ; "<AssertPlaceHolder>" ; } toByteArray ( java . lang . String ) { IDENT_4 = IDENT_4 . replaceAll ( STRING_1 , "" ) ; if ( ( ( IDENT_4 . length ( ) ) OP_0 2 ) != 0 ) { throw new java . lang . IllegalArgumentException ( STRING_2 ) ; } if ( ( IDENT_4 . length ( ) ) == 0 ) { return new byte [ 0 ] ; } byte [ ] result = new byte [ ( IDENT_4 . length ( ) ) / 2 ] ; for ( int i = 0 ; i < ( IDENT_4 . length ( ) ) ; i = i + 2 ) { int v = java . lang . Integer . METHOD_1 ( IDENT_4 . substring ( i , ( i + 2 ) ) , 16 ) ; result [ ( i / 2 ) ] = ( ( byte ) ( v ) ) ; } return result ; }
org . junit . Assert . assertArrayEquals ( exp , IDENT_0 ) 