METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 state = new IDENT_0 . IDENT_1 . METHOD_1 ( ) ; state . METHOD_2 ( IDENT_0 . IDENT_1 . IDENT_3 ) ; state . METHOD_2 ( IDENT_0 . IDENT_1 . IDENT_4 ) ; state . METHOD_2 ( IDENT_0 . IDENT_1 . IDENT_5 ) ; state . METHOD_2 ( IDENT_0 . IDENT_1 . IDENT_6 ) ; state . METHOD_2 ( IDENT_0 . IDENT_1 . IDENT_7 ) ; state . METHOD_2 ( IDENT_0 . IDENT_1 . IDENT_8 ) ; state . METHOD_2 ( IDENT_0 . IDENT_1 . IDENT_9 ) ; state . METHOD_2 ( IDENT_0 . IDENT_1 . IDENT_10 ) ; state . METHOD_2 ( IDENT_0 . IDENT_1 . IDENT_11 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { boolean IDENT_12 = true ; for ( IDENT_0 . IDENT_1 . IDENT_13 . IDENT_13 state : IDENT_14 . METHOD_4 ( ) ) { if ( ( ( state . equals ( IDENT_0 . IDENT_1 . IDENT_11 ) ) && ( IDENT_14 . get ( IDENT_0 . IDENT_1 . IDENT_11 ) . METHOD_5 ( ) ) ) || ( ( state . equals ( IDENT_0 . IDENT_1 . IDENT_10 ) ) && ( IDENT_14 . get ( IDENT_0 . IDENT_1 . IDENT_10 ) . METHOD_5 ( ) ) ) ) { return false ; } if ( ( state . equals ( IDENT_0 . IDENT_1 . IDENT_11 ) ) || ( state . equals ( IDENT_0 . IDENT_1 . IDENT_10 ) ) ) { continue ; } IDENT_12 = IDENT_12 && ( IDENT_14 . get ( state ) . METHOD_5 ( ) ) ; } return IDENT_12 ; }
org . junit . Assert . assertFalse ( state . METHOD_3 ( ) ) 