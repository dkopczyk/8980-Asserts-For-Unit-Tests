METHOD_0 ( ) { for ( int i = 0 ; i < INT_0 ; i ++ ) { int len = ( ( int ) ( java . lang . Math . METHOD_1 ( ( ( java . lang . Math . random ( ) ) * 100 ) ) ) ) + 1 ; long offset = ( ( long ) ( java . lang . Math . METHOD_1 ( ( ( ( java . lang . Math . random ( ) ) * ( org . apache . hadoop . hbase . io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) ) OP_0 ( ( org . apache . hadoop . hbase . io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) - len ) ) ) ) ) ; if ( i < ( org . apache . hadoop . hbase . io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_4 . size ( ) ) ) { offset = org . apache . hadoop . hbase . io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_4 . get ( i ) ; } else if ( ( i - ( org . apache . hadoop . hbase . io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_4 . size ( ) ) ) < ( org . apache . hadoop . hbase . io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . size ( ) ) ) { offset = ( ( org . apache . hadoop . hbase . io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . get ( ( i - ( org . apache . hadoop . hbase . io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_4 . size ( ) ) ) ) ) - len ) + 1 ; } else if ( ( i OP_0 2 ) == 0 ) { offset = ( ( java . lang . Math . max ( 1 , ( i OP_0 ( org . apache . hadoop . hbase . io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . length ) ) ) ) * ( org . apache . hadoop . hbase . io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 ) ) - ( len / 2 ) ; } byte [ ] IDENT_8 = new byte [ len ] ; for ( int j = 0 ; j < ( IDENT_8 . length ) ; ++ j ) { IDENT_8 [ j ] = ( ( byte ) ( ( java . lang . Math . random ( ) ) * 255 ) ) ; } IDENT_9 . write ( java . nio . ByteBuffer . METHOD_2 ( IDENT_8 ) , offset ) ; org . apache . hadoop . hbase . io . IDENT_0 . IDENT_1 . IDENT_10 . IDENT_11 IDENT_12 = new org . apache . hadoop . hbase . io . IDENT_0 . IDENT_1 . IDENT_10 . METHOD_3 ( ) ; IDENT_9 . read ( offset , len , IDENT_12 ) ; org . apache . hadoop . hbase . nio . IDENT_13 IDENT_14 = IDENT_12 . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } } array ( ) { throw new java . lang . METHOD_5 ( ) ; }
org . junit . Assert . assertArrayEquals ( IDENT_8 , IDENT_14 . array ( ) ) 