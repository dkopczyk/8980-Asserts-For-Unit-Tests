METHOD_0 ( ) { java . sql . ResultSet rs = METHOD_1 ( ) ; "<AssertPlaceHolder>" ; java . sql . IDENT_0 xml = rs . METHOD_2 ( 1 ) ; xml . METHOD_3 ( ) ; xml . METHOD_3 ( ) ; try { xml . getString ( ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . sql . IDENT_1 IDENT_2 ) { } } next ( ) { METHOD_4 ( ) ; if ( IDENT_3 ) { throw new org . IDENT_4 . util . METHOD_5 ( org . IDENT_4 . util . IDENT_5 . METHOD_6 ( STRING_1 ) , org . IDENT_4 . util . IDENT_6 . IDENT_7 ) ; } if ( ( ( IDENT_8 ) + 1 ) >= ( IDENT_9 . size ( ) ) ) { if ( ( ( IDENT_10 ) == null ) || ( ( ( IDENT_11 ) > 0 ) && ( ( ( IDENT_12 ) + ( IDENT_9 . size ( ) ) ) >= ( IDENT_11 ) ) ) ) { IDENT_8 = IDENT_9 . size ( ) ; IDENT_13 = null ; IDENT_14 = null ; return false ; } IDENT_12 += IDENT_9 . size ( ) ; int IDENT_15 = IDENT_16 ; if ( ( IDENT_11 ) != 0 ) { if ( ( IDENT_15 == 0 ) || ( ( ( IDENT_12 ) + IDENT_15 ) > ( IDENT_11 ) ) ) { IDENT_15 = ( IDENT_11 ) - ( IDENT_12 ) ; } } connection . METHOD_7 ( ) . METHOD_8 ( IDENT_10 , new org . IDENT_4 . jdbc . IDENT_17 . METHOD_9 ( ) , IDENT_15 ) ; IDENT_8 = 0 ; if ( IDENT_9 . isEmpty ( ) ) { IDENT_13 = null ; IDENT_14 = null ; return false ; } } else { ( IDENT_8 ) ++ ; } METHOD_10 ( ) ; return true ; }
org . junit . Assert . assertTrue ( rs . next ( ) ) 