METHOD_0 ( ) { IDENT_0 . METHOD_1 ( 1L , IDENT_1 , IDENT_2 , IDENT_3 , false ) ; ca . IDENT_4 . IDENT_5 . IDENT_6 . model . IDENT_7 . IDENT_8 . IDENT_9 IDENT_8 = METHOD_2 ( ) ; java . util . List < ca . IDENT_4 . IDENT_5 . IDENT_6 . model . IDENT_7 . analysis . IDENT_10 > errors = IDENT_11 . METHOD_3 ( IDENT_8 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ca . IDENT_4 . IDENT_5 . IDENT_6 . model . IDENT_7 . IDENT_8 . IDENT_9 ) { java . lang . String IDENT_12 = IDENT_13 . METHOD_4 ( ) ; com . github . IDENT_14 . IDENT_15 . IDENT_16 . beans . IDENT_17 IDENT_18 = IDENT_19 . METHOD_5 ( IDENT_12 ) ; java . util . List < java . lang . String > IDENT_20 = IDENT_18 . METHOD_6 ( ) . get ( IDENT_21 . IDENT_22 . toString ( ) ) ; java . util . List < com . github . IDENT_14 . IDENT_15 . IDENT_16 . beans . IDENT_23 > IDENT_24 = IDENT_20 . stream ( ) . map ( ( x ) -> IDENT_19 . METHOD_7 ( IDENT_12 , x ) ) . collect ( java . util . stream . IDENT_25 . toList ( ) ) ; java . util . Map < java . lang . String , java . util . List < com . github . IDENT_14 . IDENT_15 . IDENT_16 . beans . IDENT_23 > > IDENT_26 = IDENT_24 . stream ( ) . collect ( java . util . stream . IDENT_25 . METHOD_8 ( IDENT_23 :: IDENT_27 ) ) ; java . util . List < ca . IDENT_4 . IDENT_5 . IDENT_6 . model . IDENT_7 . analysis . IDENT_10 > IDENT_28 = new java . util . ArrayList ( ) ; for ( Map . Entry < java . lang . String , java . util . List < com . github . IDENT_14 . IDENT_15 . IDENT_16 . beans . IDENT_23 > > entry : IDENT_26 . entrySet ( ) ) { java . lang . String IDENT_29 = entry . getKey ( ) ; com . github . IDENT_14 . IDENT_15 . IDENT_16 . beans . IDENT_30 IDENT_31 = IDENT_32 . METHOD_9 ( IDENT_29 ) ; com . github . IDENT_14 . IDENT_15 . IDENT_16 . beans . IDENT_23 p = entry . getValue ( ) . iterator ( ) . next ( ) ; com . github . IDENT_14 . IDENT_15 . IDENT_16 . beans . IDENT_33 IDENT_34 = IDENT_35 . METHOD_10 ( p . METHOD_11 ( ) ) ; IDENT_28 . add ( new ca . IDENT_4 . IDENT_5 . IDENT_6 . model . IDENT_7 . analysis . METHOD_12 ( IDENT_13 , IDENT_31 , p , IDENT_34 ) ) ; } return IDENT_28 ; }
org . junit . Assert . assertTrue ( errors . isEmpty ( ) ) 