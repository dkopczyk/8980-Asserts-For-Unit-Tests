METHOD_0 ( ) { java . lang . Long IDENT_0 = 1L ; ca . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . unit . web . IDENT_5 . List < java . lang . Long > IDENT_6 = com . google . common . collect . ImmutableList . of ( INT_0 , INT_1 ) ; java . lang . Long IDENT_7 = INT_2 ; boolean IDENT_8 = false ; ca . IDENT_1 . IDENT_2 . IDENT_3 . model . project . IDENT_9 IDENT_10 = new ca . IDENT_1 . IDENT_2 . IDENT_3 . model . project . METHOD_1 ( STRING_0 ) ; ca . IDENT_1 . IDENT_2 . IDENT_3 . model . project . METHOD_1 IDENT_11 = new ca . IDENT_1 . IDENT_2 . IDENT_3 . model . project . METHOD_1 ( STRING_1 ) ; ca . IDENT_1 . IDENT_2 . IDENT_3 . model . IDENT_12 . IDENT_13 IDENT_14 = new ca . IDENT_1 . IDENT_2 . IDENT_3 . model . IDENT_12 . METHOD_2 ( STRING_2 ) ; ca . IDENT_1 . IDENT_2 . IDENT_3 . model . IDENT_12 . METHOD_2 IDENT_15 = new ca . IDENT_1 . IDENT_2 . IDENT_3 . model . IDENT_12 . METHOD_2 ( STRING_3 ) ; ca . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . unit . web . IDENT_5 . ArrayList < ca . IDENT_1 . IDENT_2 . IDENT_3 . model . IDENT_12 . METHOD_2 > IDENT_16 = com . google . common . collect . Lists . newArrayList ( IDENT_14 , IDENT_15 ) ; boolean IDENT_17 = true ; when ( IDENT_18 . read ( IDENT_0 ) ) . thenReturn ( IDENT_10 ) ; when ( IDENT_18 . read ( IDENT_7 ) ) . thenReturn ( IDENT_11 ) ; when ( IDENT_19 . METHOD_3 ( any ( ca . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . unit . web . IDENT_5 . IDENT_20 . class ) ) ) . thenReturn ( IDENT_16 ) ; when ( IDENT_18 . METHOD_4 ( IDENT_10 , IDENT_11 , IDENT_16 , IDENT_17 ) ) . METHOD_5 ( new ca . IDENT_1 . IDENT_2 . IDENT_3 . exceptions . METHOD_6 ( STRING_4 ) ) ; ca . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . unit . web . IDENT_5 . Map < java . lang . String , java . lang . Object > IDENT_21 = controller . METHOD_7 ( IDENT_0 , IDENT_6 , IDENT_7 , IDENT_8 , true , Locale . IDENT_22 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_18 ) . read ( IDENT_0 ) ; verify ( IDENT_18 ) . read ( IDENT_7 ) ; } METHOD_7 ( java . lang . Long , ca . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . web . IDENT_5 . List , java . lang . Long , boolean , boolean , ca . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . web . IDENT_5 . Locale ) { ca . IDENT_1 . IDENT_2 . IDENT_3 . model . project . METHOD_1 IDENT_23 = IDENT_18 . read ( IDENT_0 ) ; ca . IDENT_1 . IDENT_2 . IDENT_3 . model . project . METHOD_1 IDENT_11 = IDENT_18 . read ( IDENT_7 ) ; ca . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . web . IDENT_5 . Map < java . lang . String , java . lang . Object > response = new ca . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . web . IDENT_5 . HashMap ( ) ; ca . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . web . IDENT_5 . List < java . lang . String > IDENT_24 = new ca . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . web . IDENT_5 . ArrayList ( ) ; java . lang . IDENT_20 < ca . IDENT_1 . IDENT_2 . IDENT_3 . model . IDENT_12 . METHOD_2 > IDENT_25 = IDENT_19 . METHOD_3 ( IDENT_6 ) ; ca . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . web . IDENT_5 . List < ca . IDENT_1 . IDENT_2 . IDENT_3 . model . IDENT_26 . impl . IDENT_27 > IDENT_28 = new ca . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . web . IDENT_5 . ArrayList ( ) ; try { if ( remove ) { IDENT_28 = IDENT_18 . METHOD_8 ( IDENT_23 , IDENT_11 , com . google . common . collect . Lists . newArrayList ( IDENT_25 ) ) ; } else { IDENT_28 = IDENT_18 . METHOD_4 ( IDENT_23 , IDENT_11 , com . google . common . collect . Lists . newArrayList ( IDENT_25 ) , IDENT_29 ) ; } } catch ( ca . IDENT_1 . IDENT_2 . IDENT_3 . exceptions . METHOD_6 ex ) { ca . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . web . IDENT_5 . IDENT_30 . logger . warn ( STRING_5 , ex ) ; IDENT_24 . add ( ex . METHOD_9 ( ) ) ; } catch ( org . springframework . security . IDENT_31 . IDENT_32 ex ) { ca . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . web . IDENT_5 . IDENT_30 . logger . warn ( ( STRING_6 + IDENT_7 ) , ex ) ; java . lang . String msg = ( remove ) ? STRING_7 2 : STRING_8 ; IDENT_24 . add ( IDENT_33 . getMessage ( msg , new java . lang . Object [ ] { IDENT_11 . getName ( ) } , IDENT_34 ) ) ; } if ( ( ! ( IDENT_24 . isEmpty ( ) ) ) || ( ( IDENT_28 . size ( ) ) == 0 ) ) { response . put ( STRING_9 , STRING_10 ) ; response . put ( STRING_11 , IDENT_24 ) ; } else { response . put ( STRING_9 , STRING_7 3 ) ; } if ( ( IDENT_28 . size ( ) ) == 1 ) { if ( remove ) { response . put ( STRING_7 1 , IDENT_33 . getMessage ( STRING_7 0 , new java . lang . Object [ ] { IDENT_28 . get ( 0 ) . METHOD_10 ( ) . METHOD_11 ( ) , IDENT_11 . getName ( ) } , IDENT_34 ) ) ; } else { response . put ( STRING_7 1 , IDENT_33 . getMessage ( STRING_7 , new java . lang . Object [ ] { IDENT_28 . get ( 0 ) . METHOD_10 ( ) . METHOD_11 ( ) , IDENT_11 . getName ( ) } , IDENT_34 ) ) ; } } else if ( ( IDENT_28 . size ( ) ) > 1 ) { if ( remove ) { response . put ( STRING_7 1 , IDENT_33 . getMessage ( STRING_12 , new java . lang . Object [ ] { IDENT_28 . size ( ) , IDENT_11 . getName ( ) } , IDENT_34 ) ) ; } else { response . put ( STRING_7 1 , IDENT_33 . getMessage ( STRING_13 , new java . lang . Object [ ] { IDENT_28 . size ( ) , IDENT_11 . getName ( ) } , IDENT_34 ) ) ; } } response . put ( STRING_14 , IDENT_28 . stream ( ) . map ( IDENT_27 :: getId ) . collect ( java . util . stream . IDENT_35 . toList ( ) ) ) ; return response ; }
org . junit . Assert . assertTrue ( IDENT_21 . containsKey ( STRING_11 ) ) 