METHOD_0 ( ) { ca . IDENT_0 . IDENT_1 . IDENT_2 . utils . model . IDENT_3 IDENT_4 = new ca . IDENT_0 . IDENT_1 . IDENT_2 . utils . model . METHOD_1 ( ) ; IDENT_4 . METHOD_2 ( STRING_0 ) ; IDENT_4 . METHOD_3 ( Integer . IDENT_5 ) ; java . lang . Long id = 1L ; IDENT_4 . setId ( id ) ; java . lang . String IDENT_6 = STRING_1 ; when ( IDENT_7 . exists ( id ) ) . thenReturn ( Boolean . IDENT_8 ) ; when ( IDENT_7 . METHOD_4 ( id ) ) . thenReturn ( IDENT_4 ) ; org . mockito . IDENT_9 < ca . IDENT_0 . IDENT_1 . IDENT_2 . utils . model . METHOD_1 > IDENT_10 = org . mockito . IDENT_9 . METHOD_5 ( ca . IDENT_0 . IDENT_1 . IDENT_2 . utils . model . METHOD_1 . class ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_11 = new java . util . HashMap ( ) ; IDENT_11 . put ( STRING_2 , IDENT_6 ) ; java . lang . Thread . sleep ( INT_0 ) ; IDENT_12 . METHOD_6 ( id , IDENT_11 ) ; verify ( IDENT_7 ) . save ( IDENT_10 . METHOD_7 ( ) ) ; ca . IDENT_0 . IDENT_1 . IDENT_2 . utils . model . METHOD_1 IDENT_13 = IDENT_10 . getValue ( ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( ) { return IDENT_14 ; }
org . junit . Assert . assertEquals ( IDENT_6 , IDENT_13 . METHOD_8 ( ) ) 