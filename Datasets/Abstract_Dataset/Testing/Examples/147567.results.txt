METHOD_0 ( ) { ca . IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_3 . IDENT_4 IDENT_5 = new ca . IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_3 . METHOD_1 ( ) ; IDENT_5 . setId ( 1L ) ; when ( IDENT_6 . METHOD_2 ( IDENT_5 ) ) . thenReturn ( com . google . common . collect . Lists . newArrayList ( ) ) ; long IDENT_7 = IDENT_8 . METHOD_3 ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ca . IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_3 . METHOD_1 ) { METHOD_4 ( IDENT_3 , STRING_0 ) ; long IDENT_9 = 0 ; ca . IDENT_0 . IDENT_1 . IDENT_2 . service . impl . IDENT_3 . List < ca . IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_3 . IDENT_10 > IDENT_11 = IDENT_6 . METHOD_2 ( IDENT_3 ) ; for ( ca . IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_3 . IDENT_10 join : IDENT_11 ) { for ( ca . IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_12 . IDENT_13 IDENT_12 : join . METHOD_5 ( ) . METHOD_6 ( ) ) { final ca . IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_14 . analysis . IDENT_15 IDENT_16 = IDENT_17 . METHOD_7 ( IDENT_12 ) ; if ( ( IDENT_16 == null ) || ( ( IDENT_16 . METHOD_8 ( ) ) == null ) ) { throw new ca . IDENT_0 . IDENT_1 . IDENT_2 . exceptions . METHOD_9 ( ( ( STRING_1 + ( IDENT_12 . getId ( ) ) ) + "]" ) ) ; } IDENT_9 += IDENT_16 . METHOD_8 ( ) ; } } return IDENT_9 ; }
org . junit . Assert . assertEquals ( 0 , IDENT_7 ) 