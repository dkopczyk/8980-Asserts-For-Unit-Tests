METHOD_0 ( ) { com . github . IDENT_0 . IDENT_1 . maven . IDENT_2 . IDENT_3 . Builder IDENT_4 = new com . github . IDENT_0 . IDENT_1 . maven . IDENT_2 . IDENT_3 . Builder ( IDENT_5 ) . METHOD_1 ( new java . io . File ( STRING_0 ) ) ; "<AssertPlaceHolder>" ; } build ( com . github . IDENT_0 . IDENT_1 . maven . IDENT_2 . IDENT_3 ) { final java . util . List < java . lang . String > IDENT_6 = new java . util . ArrayList < java . lang . String > ( ) ; final java . io . File IDENT_7 = context . METHOD_2 ( ) ; IDENT_6 . add ( STRING_1 ) ; IDENT_6 . add ( STRING_2 ) ; IDENT_6 . add ( replace ( new java . io . File ( IDENT_7 , ( ( STRING_2 3 + ( java . io . File . IDENT_8 ) ) + STRING_3 ) ) . toString ( ) ) ) ; IDENT_6 . add ( STRING_4 ) ; for ( final java . lang . String module : com . github . IDENT_0 . IDENT_1 . maven . IDENT_2 . IDENT_9 . IDENT_10 ) { IDENT_6 . add ( STRING_5 ) ; IDENT_6 . add ( METHOD_3 ( new java . io . File ( IDENT_7 , module ) ) ) ; } IDENT_6 . add ( replace ( new java . io . File ( IDENT_7 , STRING_6 ) . toString ( ) ) ) ; if ( context . METHOD_4 ( ) ) { IDENT_6 . add ( STRING_2 1 ) ; } if ( context . METHOD_5 ( ) ) { IDENT_6 . add ( STRING_7 ) ; } if ( ( context . METHOD_6 ( ) ) != null ) { IDENT_6 . add ( STRING_8 ) ; IDENT_6 . add ( context . METHOD_6 ( ) . toString ( ) ) ; } if ( context . METHOD_7 ( ) ) { IDENT_6 . add ( STRING_2 2 ) ; } if ( ( context . METHOD_8 ( ) ) != null ) { IDENT_6 . add ( STRING_9 ) ; IDENT_6 . add ( context . METHOD_8 ( ) . toString ( ) ) ; } if ( ( context . METHOD_9 ( ) ) != null ) { IDENT_6 . add ( STRING_2 0 ) ; IDENT_6 . add ( context . METHOD_9 ( ) . toString ( ) ) ; } IDENT_6 . add ( STRING_10 ) ; IDENT_6 . add ( context . METHOD_10 ( ) . toString ( ) ) ; for ( final java . io . File IDENT_11 : context . METHOD_11 ( ) ) { IDENT_6 . add ( IDENT_11 . toString ( ) ) ; } return IDENT_6 ; }
org . junit . Assert . assertTrue ( builder . build ( IDENT_4 . build ( ) ) . contains ( STRING_8 ) ) 