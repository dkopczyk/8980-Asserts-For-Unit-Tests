METHOD_0 ( ) { final java . lang . String expected = ( ( ( ( com . IDENT_0 . IDENT_1 . util . IDENT_2 . class . METHOD_1 ( ) . getName ( ) ) + STRING_0 ) + ( com . IDENT_0 . IDENT_1 . util . IDENT_2 . class . METHOD_2 ( ) ) ) + STRING_0 ) + STRING_1 ; final java . lang . String name = com . IDENT_0 . IDENT_1 . util . IDENT_3 . METHOD_3 ( com . IDENT_0 . IDENT_1 . util . IDENT_2 . IDENT_4 . class ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . Class ) { com . IDENT_0 . IDENT_1 . util . IDENT_5 . METHOD_4 ( IDENT_6 , STRING_2 ) ; final java . lang . StringBuilder name = new java . lang . StringBuilder ( ) ; name . append ( IDENT_6 . METHOD_1 ( ) . getName ( ) ) . append ( STRING_3 ) ; java . lang . Class < ? > IDENT_7 = IDENT_6 ; final java . util . List < java . lang . Class < ? > > IDENT_8 = new java . util . ArrayList ( ) ; while ( ( IDENT_7 = IDENT_7 . METHOD_5 ( ) ) != null ) IDENT_8 . add ( IDENT_7 ) ; for ( int i = ( IDENT_8 . size ( ) ) - 1 ; i >= 0 ; i OP_0 ) name . append ( IDENT_8 . get ( i ) . METHOD_2 ( ) ) . append ( STRING_3 ) ; name . append ( IDENT_6 . METHOD_2 ( ) ) ; return name . toString ( ) ; }
org . junit . Assert . assertEquals ( expected , name ) 