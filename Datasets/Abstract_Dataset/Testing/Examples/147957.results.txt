METHOD_0 ( ) { doReturn ( null ) . when ( this . IDENT_0 ) . METHOD_1 ( org . IDENT_1 . data . internal . controller . IDENT_2 . IDENT_3 ) ; org . json . JSONObject json = new org . json . JSONObject ( ) ; java . util . Collection < java . lang . String > IDENT_4 = new java . util . METHOD_2 ( ) ; this . component . METHOD_3 ( this . IDENT_0 , json , IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . IDENT_1 . data . IDENT_5 , org . json . JSONObject , java . util . Collection ) { if ( ( IDENT_6 == null ) || ( IDENT_6 . contains ( org . IDENT_1 . data . internal . controller . IDENT_7 . IDENT_8 ) ) ) { org . IDENT_1 . data . IDENT_9 < java . lang . Object > IDENT_10 = IDENT_0 . METHOD_1 ( org . IDENT_1 . data . internal . controller . IDENT_7 . IDENT_8 ) ; if ( ( IDENT_10 != null ) && ( IDENT_10 . METHOD_4 ( ) ) ) { org . json . JSONObject result = json . METHOD_5 ( org . IDENT_1 . data . internal . controller . IDENT_7 . IDENT_8 ) ; if ( result == null ) { result = new org . json . JSONObject ( ) ; } java . util . Iterator < java . util . Map . Entry < java . lang . String , java . lang . Object > > data = IDENT_10 . METHOD_6 ( ) ; while ( data . hasNext ( ) ) { java . util . Map . Entry < java . lang . String , java . lang . Object > IDENT_11 = data . next ( ) ; result . put ( IDENT_11 . getKey ( ) , IDENT_11 . getValue ( ) ) ; } json . put ( org . IDENT_1 . data . internal . controller . IDENT_7 . IDENT_8 , result ) ; } } }
org . junit . Assert . assertEquals ( 0 , json . length ( ) ) 