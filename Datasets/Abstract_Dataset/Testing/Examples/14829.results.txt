METHOD_0 ( ) { org . apache . hadoop . hbase . IDENT_0 . IDENT_1 . LOG . info ( STRING_0 ) ; org . apache . hadoop . hbase . IDENT_2 . METHOD_1 ( ) ; final java . lang . String IDENT_3 = STRING_1 ; final org . apache . hadoop . hbase . IDENT_4 IDENT_5 = org . apache . hadoop . hbase . IDENT_4 . valueOf ( STRING_2 ) ; final int IDENT_6 = 3 ; org . apache . hadoop . conf . Configuration IDENT_7 = org . apache . hadoop . hbase . IDENT_8 . create ( org . apache . hadoop . hbase . IDENT_0 . IDENT_1 . IDENT_9 . METHOD_2 ( ) ) ; IDENT_7 . METHOD_3 ( org . apache . hadoop . hbase . IDENT_10 . IDENT_11 , IDENT_6 ) ; org . apache . hadoop . hbase . IDENT_0 . IDENT_12 IDENT_13 = METHOD_4 ( IDENT_5 ) ; for ( int i = 0 ; i < IDENT_6 ; i ++ ) { IDENT_14 . METHOD_5 ( ) . create ( org . apache . hadoop . hbase . IDENT_15 . IDENT_16 . METHOD_6 ( IDENT_14 , ( IDENT_3 + i ) ) , new org . apache . hadoop . hbase . IDENT_17 . METHOD_7 ( org . apache . hadoop . hbase . IDENT_4 . valueOf ( STRING_3 ) ) . toByteArray ( ) , IDENT_18 . IDENT_19 , IDENT_20 . IDENT_21 ) ; } org . apache . hadoop . hbase . IDENT_0 . IDENT_22 IDENT_23 = new org . apache . hadoop . hbase . IDENT_0 . METHOD_8 ( IDENT_24 , IDENT_7 , IDENT_13 , IDENT_25 ) ; IDENT_23 . start ( ) ; try { METHOD_9 ( IDENT_2 . IDENT_26 , 0 , IDENT_6 , org . apache . hadoop . hbase . IDENT_0 . IDENT_1 . IDENT_27 ) ; for ( int i = 0 ; i < IDENT_6 ; i ++ ) { byte [ ] bytes = org . apache . hadoop . hbase . IDENT_15 . IDENT_28 . METHOD_10 ( IDENT_14 , org . apache . hadoop . hbase . IDENT_15 . IDENT_16 . METHOD_6 ( IDENT_14 , ( IDENT_3 + i ) ) ) ; org . apache . hadoop . hbase . IDENT_17 IDENT_29 = org . apache . hadoop . hbase . IDENT_17 . METHOD_11 ( bytes ) ; "<AssertPlaceHolder>" ; } } finally { METHOD_12 ( IDENT_23 ) ; } } METHOD_13 ( org . apache . hadoop . hbase . IDENT_4 ) { return ( this . IDENT_30 . equals ( IDENT_31 ) ) && ( METHOD_13 ( ) ) ; }
org . junit . Assert . assertTrue ( IDENT_29 . METHOD_13 ( IDENT_5 ) ) 