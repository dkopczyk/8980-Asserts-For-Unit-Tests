METHOD_0 ( ) { org . junit . IDENT_0 . METHOD_1 ( this . IDENT_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ; org . apache . tinkerpop . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = this . IDENT_1 . METHOD_4 ( T . IDENT_6 , STRING_0 , "name" , STRING_1 ) ; IDENT_5 . property ( STRING_2 , new java . lang . Boolean [ ] { true , false } ) ; this . IDENT_1 . tx ( ) . commit ( ) ; "<AssertPlaceHolder>" ; } property ( java . lang . String ) { this . IDENT_1 . tx ( ) . METHOD_5 ( ) ; if ( this . IDENT_7 ) { throw new java . lang . IllegalStateException ( java . lang . String . format ( STRING_3 , id ( ) . toString ( ) ) ) ; } else { if ( ! ( IDENT_1 . tx ( ) . METHOD_6 ( ) ) ) { org . IDENT_8 . IDENT_9 . IDENT_3 . IDENT_10 IDENT_11 = this . IDENT_1 . tx ( ) . METHOD_7 ( this ) ; if ( IDENT_11 != ( this ) ) { this . properties = IDENT_11 . properties ; } } return ( ( org . IDENT_8 . IDENT_9 . IDENT_3 . IDENT_12 < IDENT_13 > ) ( super . property ( key ) ) ) ; } }
org . junit . Assert . assertArrayEquals ( new java . lang . Boolean [ ] { true , false } , ( ( java . lang . Boolean [ ] ) ( IDENT_5 . property ( STRING_2 ) . value ( ) ) ) ) 