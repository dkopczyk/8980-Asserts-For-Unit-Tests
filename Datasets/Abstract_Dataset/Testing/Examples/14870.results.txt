METHOD_0 ( ) { java . util . List < org . apache . hadoop . hbase . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 > IDENT_5 = new java . util . ArrayList ( 3 ) ; java . util . List < org . apache . hadoop . hbase . IDENT_6 > IDENT_7 = new java . util . ArrayList ( ) ; for ( int i = 0 ; i < 3 ; i ++ ) { IDENT_5 . add ( METHOD_1 ( org . apache . hadoop . hbase . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_11 , i , IDENT_12 . Type . IDENT_13 , IDENT_7 ) ) ; } org . apache . hadoop . hbase . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_14 . METHOD_2 ( IDENT_5 , org . apache . hadoop . hbase . IDENT_15 . METHOD_3 ( IDENT_7 . iterator ( ) ) , org . apache . hadoop . hbase . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_16 , org . apache . hadoop . hbase . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_17 , org . apache . hadoop . hbase . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_18 ) ; IDENT_5 = new java . util . ArrayList ( 3 ) ; IDENT_7 = new java . util . ArrayList ( ) ; IDENT_5 . add ( METHOD_1 ( org . apache . hadoop . hbase . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_11 , 0 , IDENT_12 . Type . IDENT_19 , IDENT_7 ) ) ; IDENT_5 . add ( METHOD_1 ( org . apache . hadoop . hbase . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_11 , 1 , IDENT_12 . Type . IDENT_20 , IDENT_7 ) ) ; IDENT_5 . add ( METHOD_1 ( org . apache . hadoop . hbase . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_11 , 2 , IDENT_12 . Type . IDENT_19 , IDENT_7 ) ) ; org . apache . hadoop . hbase . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_14 . METHOD_2 ( IDENT_5 , org . apache . hadoop . hbase . IDENT_15 . METHOD_3 ( IDENT_7 . iterator ( ) ) , org . apache . hadoop . hbase . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_16 , org . apache . hadoop . hbase . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_17 , org . apache . hadoop . hbase . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_18 ) ; org . apache . hadoop . hbase . client . IDENT_21 IDENT_22 = new org . apache . hadoop . hbase . client . METHOD_4 ( ) ; org . apache . hadoop . hbase . client . IDENT_23 IDENT_24 = org . apache . hadoop . hbase . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_25 . METHOD_5 ( IDENT_22 ) ; "<AssertPlaceHolder>" ; } next ( int ) { java . lang . StringBuilder sb = new java . lang . StringBuilder ( uri ) ; sb . append ( STRING_0 ) ; sb . append ( IDENT_26 ) ; for ( int i = 0 ; i < ( IDENT_27 ) ; i ++ ) { org . apache . hadoop . hbase . rest . client . Response response = client . get ( sb . toString ( ) , Constants . IDENT_28 ) ; int code = response . getCode ( ) ; switch ( code ) { case 200 : org . apache . hadoop . hbase . rest . model . IDENT_29 model = new org . apache . hadoop . hbase . rest . model . METHOD_6 ( ) ; model . METHOD_7 ( response . METHOD_8 ( ) ) ; return METHOD_9 ( model ) ; case INT_0 : case INT_1 : return null ; case INT_2 : try { java . lang . Thread . sleep ( IDENT_30 ) ; } catch ( java . lang . IDENT_31 e ) { throw ( ( java . io . IDENT_32 ) ( new java . io . METHOD_10 ( ) . METHOD_11 ( e ) ) ) ; } break ; default : throw new java . io . IOException ( ( STRING_1 + code ) ) ; } } throw new java . io . IOException ( STRING_2 ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_24 . next ( 3 ) . length ) 