METHOD_0 ( ) { final net . sourceforge . IDENT_0 . eclipse . runtime . properties . IDENT_1 IDENT_2 = net . sourceforge . IDENT_0 . eclipse . plugin . IDENT_3 . METHOD_1 ( ) . METHOD_2 ( ) ; final net . sourceforge . IDENT_0 . eclipse . runtime . properties . IDENT_4 model = IDENT_2 . METHOD_3 ( this . IDENT_5 ) ; model . METHOD_4 ( true ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { net . sourceforge . IDENT_0 . eclipse . runtime . properties . impl . IDENT_6 . LOG . debug ( ( ( ( STRING_0 + ( project . getName ( ) ) ) + STRING_1 ) + ( ( IDENT_7 ) && ( IDENT_8 ) ) ) ) ; net . sourceforge . IDENT_0 . eclipse . runtime . properties . impl . IDENT_6 . LOG . debug ( ( STRING_2 + ( IDENT_7 ) ) ) ; net . sourceforge . IDENT_0 . eclipse . runtime . properties . impl . IDENT_6 . LOG . debug ( ( STRING_3 + ( IDENT_8 ) ) ) ; if ( IDENT_9 ) { for ( java . io . File f : METHOD_6 ( ) ) { if ( f != null ) { IDENT_8 OP_0 ( f . METHOD_7 ( ) ) > ( IDENT_10 ) ; } } } return ( IDENT_7 ) && ( IDENT_8 ) ; }
org . junit . Assert . assertTrue ( model . METHOD_5 ( ) ) 