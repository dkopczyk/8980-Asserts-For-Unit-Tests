METHOD_0 ( ) { net . sourceforge . IDENT_0 . IDENT_1 . renderer . IDENT_2 renderer = new net . sourceforge . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; java . util . List < net . sourceforge . IDENT_0 . IDENT_1 . IDENT_3 > list = new java . util . ArrayList ( ) ; java . lang . String IDENT_4 = STRING_0 ; net . sourceforge . IDENT_0 . IDENT_1 . IDENT_5 IDENT_6 = METHOD_2 ( STRING_1 , STRING_2 , INT_0 , 10 , IDENT_4 ) ; net . sourceforge . IDENT_0 . IDENT_1 . IDENT_5 IDENT_7 = METHOD_2 ( STRING_3 , STRING_4 , INT_1 , 20 , IDENT_4 ) ; net . sourceforge . IDENT_0 . IDENT_1 . IDENT_3 match = new net . sourceforge . IDENT_0 . IDENT_1 . METHOD_3 ( INT_2 , IDENT_6 , IDENT_7 ) ; list . add ( match ) ; java . io . StringWriter IDENT_8 = new java . io . StringWriter ( ) ; renderer . render ( list . iterator ( ) , IDENT_8 ) ; java . lang . String report = IDENT_8 . toString ( ) ; java . lang . String IDENT_9 = ( ( STRING_5 + ( net . sourceforge . IDENT_0 . IDENT_10 . IDENT_11 ) ) + STRING_6 ) + ( net . sourceforge . IDENT_0 . IDENT_10 . IDENT_11 ) ; "<AssertPlaceHolder>" ; } toString ( ) { java . lang . String res = ( ( ( STRING_7 + ( this . METHOD_4 ( ) ) ) + STRING_8 ) + ( type ) ) + STRING_9 ; if ( ( ( ( node ) instanceof net . sourceforge . IDENT_0 . lang . IDENT_12 . ast . IDENT_13 ) || ( ( node ) instanceof net . sourceforge . IDENT_0 . lang . IDENT_12 . ast . IDENT_14 ) ) || ( ( node ) instanceof net . sourceforge . IDENT_0 . lang . IDENT_12 . ast . IDENT_15 ) ) { res += ( ( ( node ) instanceof net . sourceforge . IDENT_0 . lang . IDENT_12 . ast . IDENT_13 ) || ( ( node ) instanceof net . sourceforge . IDENT_0 . lang . IDENT_12 . ast . IDENT_14 ) ) ? STRING_10 : STRING_11 ; } else { res += super . toString ( ) ; } return res ; }
org . junit . Assert . assertEquals ( IDENT_9 , report ) 