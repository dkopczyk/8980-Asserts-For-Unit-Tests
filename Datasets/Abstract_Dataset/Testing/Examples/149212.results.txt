METHOD_0 ( ) { java . lang . String key = "test" ; com . github . IDENT_0 . IDENT_1 . state . testing . IDENT_2 IDENT_3 = com . github . IDENT_0 . IDENT_1 . state . testing . IDENT_2 . random ( ) ; com . github . IDENT_0 . IDENT_1 . state . testing . IDENT_2 IDENT_4 = com . github . IDENT_0 . IDENT_1 . state . testing . IDENT_2 . random ( ) ; com . github . IDENT_0 . IDENT_1 . state . testing . IDENT_2 IDENT_5 = com . github . IDENT_0 . IDENT_1 . state . testing . IDENT_2 . random ( ) ; this . state . put ( key , new com . github . IDENT_0 . IDENT_1 . state . IDENT_6 . IDENT_7 < com . github . IDENT_0 . IDENT_1 . state . testing . IDENT_2 > ( FLOAT_0 , IDENT_3 ) ) ; this . state . put ( key , new com . github . IDENT_0 . IDENT_1 . state . IDENT_6 . IDENT_7 < com . github . IDENT_0 . IDENT_1 . state . testing . IDENT_2 > ( FLOAT_1 , IDENT_4 ) ) ; this . state . put ( key , new com . github . IDENT_0 . IDENT_1 . state . IDENT_6 . IDENT_7 < com . github . IDENT_0 . IDENT_1 . state . testing . IDENT_2 > ( FLOAT_2 , IDENT_5 ) ) ; long IDENT_8 = this . state . METHOD_1 ( key ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( IDENT_9 ) { return template . METHOD_1 ( id , key ) ; }
org . junit . Assert . assertEquals ( 3 , IDENT_8 ) 