METHOD_0 ( ) { java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 } ; cc . redberry . rings . IDENT_1 . IDENT_2 < cc . redberry . rings . IDENT_1 . IDENT_3 . IDENT_4 < cc . redberry . rings . IDENT_5 . BigInteger > > IDENT_6 = cc . redberry . rings . IDENT_7 . METHOD_1 ( IDENT_0 . length , cc . redberry . rings . io . IDENT_8 ) ; java . util . HashMap < java . lang . String , cc . redberry . rings . IDENT_1 . IDENT_3 . IDENT_4 < cc . redberry . rings . IDENT_5 . BigInteger > > IDENT_9 = new java . util . HashMap ( ) ; for ( int i = 0 ; i < ( IDENT_0 . length ) ; i ++ ) IDENT_9 . put ( IDENT_0 [ i ] , IDENT_6 . METHOD_2 ( i ) ) ; cc . redberry . rings . IDENT_1 . METHOD_1 < cc . redberry . rings . IDENT_1 . IDENT_3 . IDENT_4 < cc . redberry . rings . IDENT_5 . BigInteger > > IDENT_10 = IDENT_6 ; java . util . HashMap < java . lang . String , cc . redberry . rings . IDENT_1 . IDENT_3 . IDENT_4 < cc . redberry . rings . IDENT_5 . BigInteger > > IDENT_11 = IDENT_9 ; cc . redberry . rings . io . IDENT_12 < cc . redberry . rings . IDENT_1 . IDENT_3 . IDENT_4 < cc . redberry . rings . IDENT_5 . BigInteger > , ? , ? > IDENT_13 = cc . redberry . rings . io . IDENT_12 . METHOD_3 ( IDENT_10 , IDENT_11 , null , null , null ) ; cc . redberry . rings . io . IDENT_12 < cc . redberry . rings . IDENT_1 . IDENT_3 . IDENT_4 < cc . redberry . rings . IDENT_5 . BigInteger > , ? , ? > IDENT_14 = cc . redberry . rings . io . IDENT_12 . METHOD_3 ( IDENT_10 , IDENT_11 , IDENT_6 , IDENT_9 , cc . redberry . rings . util . IDENT_15 . METHOD_4 ( ) ) ; java . lang . String IDENT_16 = STRING_3 ; cc . redberry . rings . IDENT_1 . IDENT_3 . IDENT_4 < cc . redberry . rings . IDENT_5 . BigInteger > a = IDENT_13 . parse ( cc . redberry . rings . io . IDENT_17 . METHOD_5 ( IDENT_16 ) ) ; cc . redberry . rings . IDENT_1 . IDENT_3 . IDENT_4 < cc . redberry . rings . IDENT_5 . BigInteger > b = IDENT_14 . parse ( cc . redberry . rings . io . IDENT_17 . METHOD_5 ( IDENT_16 ) ) ; "<AssertPlaceHolder>" ; } parse ( java . lang . String ) { return valueOf ( factory . METHOD_6 ( string ) ) ; }
org . junit . Assert . assertEquals ( a , b ) 