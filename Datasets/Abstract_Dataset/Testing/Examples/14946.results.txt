METHOD_0 ( ) { org . apache . hadoop . hive . accumulo . IDENT_0 . IDENT_1 IDENT_2 = org . mockito . Mockito . mock ( org . apache . hadoop . hive . accumulo . IDENT_0 . IDENT_1 . class ) ; org . apache . hadoop . hive . IDENT_3 . plan . IDENT_4 root = org . mockito . Mockito . mock ( org . apache . hadoop . hive . IDENT_3 . plan . IDENT_4 . class ) ; java . lang . String IDENT_5 = STRING_0 ; org . apache . accumulo . core . data . IDENT_6 IDENT_7 = new org . apache . accumulo . core . data . METHOD_1 ( "a" ) ; org . apache . accumulo . core . data . METHOD_1 IDENT_8 = new org . apache . accumulo . core . data . METHOD_1 ( STRING_1 ) ; org . mockito . Mockito . when ( IDENT_2 . METHOD_2 ( conf , IDENT_9 ) ) . METHOD_3 ( ) ; org . mockito . Mockito . when ( IDENT_2 . METHOD_4 ( conf , IDENT_9 , IDENT_5 , root ) ) . thenReturn ( java . util . Arrays . asList ( IDENT_7 , IDENT_8 ) ) ; org . mockito . Mockito . when ( IDENT_2 . METHOD_5 ( conf ) ) . thenReturn ( root ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . apache . hadoop . conf . Configuration , org . apache . hadoop . hive . accumulo . IDENT_10 . IDENT_11 ) { if ( ! ( IDENT_9 . METHOD_6 ( ) ) ) { return org . apache . hadoop . hive . accumulo . IDENT_0 . IDENT_1 . IDENT_12 ; } int IDENT_13 = IDENT_9 . METHOD_7 ( ) ; java . lang . String [ ] IDENT_14 = conf . METHOD_8 ( IDENT_15 . IDENT_16 ) ; if ( null == IDENT_14 ) { throw new java . lang . IllegalArgumentException ( STRING_2 ) ; } java . lang . String IDENT_5 = IDENT_14 [ IDENT_13 ] ; org . apache . hadoop . hive . IDENT_3 . plan . IDENT_4 root = this . METHOD_5 ( conf ) ; if ( null == root ) { return org . apache . hadoop . hive . accumulo . IDENT_0 . IDENT_1 . IDENT_12 ; } java . lang . Object result = METHOD_4 ( conf , IDENT_9 , IDENT_5 , root ) ; if ( null == result ) { org . apache . hadoop . hive . accumulo . IDENT_0 . IDENT_1 . LOG . info ( STRING_3 ) ; return org . apache . hadoop . hive . accumulo . IDENT_0 . IDENT_1 . IDENT_12 ; } else if ( result instanceof org . apache . accumulo . core . data . METHOD_1 ) { org . apache . hadoop . hive . accumulo . IDENT_0 . IDENT_1 . LOG . info ( ( STRING_4 + result ) ) ; return java . util . Collections . singletonList ( ( ( org . apache . accumulo . core . data . METHOD_1 ) ( result ) ) ) ; } else if ( result instanceof java . util . List ) { org . apache . hadoop . hive . accumulo . IDENT_0 . IDENT_1 . LOG . info ( ( STRING_5 + result ) ) ; @ org . apache . hadoop . hive . accumulo . IDENT_0 . METHOD_9 ( STRING_6 ) java . util . List < org . apache . accumulo . core . data . METHOD_1 > IDENT_17 = ( ( java . util . List < org . apache . accumulo . core . data . METHOD_1 > ) ( result ) ) ; return IDENT_17 ; } else { throw new java . lang . IllegalArgumentException ( ( STRING_7 + result ) ) ; } }
org . junit . Assert . assertEquals ( java . util . Arrays . asList ( IDENT_7 , IDENT_8 ) , IDENT_2 . METHOD_2 ( conf , IDENT_9 ) ) 