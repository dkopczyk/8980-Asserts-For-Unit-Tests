METHOD_0 ( ) { location . METHOD_1 ( 0 ) ; IDENT_0 . METHOD_2 ( location ) ; com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = factory . METHOD_3 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( com . IDENT_1 . IDENT_2 . entities . IDENT_6 ) { int IDENT_7 = ( random . METHOD_4 ( 5 ) ) + 1 ; if ( IDENT_7 <= ( IDENT_0 . METHOD_5 ( ) . METHOD_6 ( ) ) ) { switch ( IDENT_0 . METHOD_7 ( ) ) { case IDENT_8 : return METHOD_8 ( IDENT_0 . METHOD_9 ( ) ) ; case IDENT_9 : return METHOD_10 ( IDENT_0 . METHOD_9 ( ) ) ; case IDENT_10 : return METHOD_11 ( IDENT_0 . METHOD_9 ( ) ) ; case IDENT_11 : return METHOD_12 ( IDENT_0 . METHOD_9 ( ) ) ; case IDENT_12 : return METHOD_13 ( IDENT_0 . METHOD_9 ( ) ) ; default : return null ; } } else { return null ; } }
org . junit . Assert . assertNull ( IDENT_5 ) 