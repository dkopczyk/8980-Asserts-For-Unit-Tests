METHOD_0 ( ) { org . apache . hadoop . hive . common . type . IDENT_0 IDENT_1 = new org . apache . hadoop . hive . common . type . METHOD_1 ( - INT_0 , INT_1 , 0 , 0 ) ; org . apache . hadoop . hive . common . type . METHOD_1 IDENT_2 = new org . apache . hadoop . hive . common . type . METHOD_1 ( - INT_2 , 3 , 0 , 0 ) ; java . math . BigInteger IDENT_3 = IDENT_1 . METHOD_2 ( ) ; java . math . BigInteger IDENT_4 = IDENT_2 . METHOD_2 ( ) ; IDENT_1 . METHOD_3 ( IDENT_2 , new org . apache . hadoop . hive . common . type . METHOD_1 ( ) ) ; java . math . BigInteger IDENT_5 = IDENT_3 . METHOD_4 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { java . math . BigInteger IDENT_6 = java . math . BigInteger . valueOf ( ( ( v [ 3 ] ) & ( IDENT_7 . IDENT_8 ) ) ) ; IDENT_6 = IDENT_6 . METHOD_5 ( INT_3 ) ; IDENT_6 = IDENT_6 . add ( java . math . BigInteger . valueOf ( ( ( v [ 2 ] ) & ( IDENT_7 . IDENT_8 ) ) ) ) ; IDENT_6 = IDENT_6 . METHOD_5 ( INT_3 ) ; IDENT_6 = IDENT_6 . add ( java . math . BigInteger . valueOf ( ( ( v [ 1 ] ) & ( IDENT_7 . IDENT_8 ) ) ) ) ; IDENT_6 = IDENT_6 . METHOD_5 ( INT_3 ) ; IDENT_6 = IDENT_6 . add ( java . math . BigInteger . valueOf ( ( ( v [ 0 ] ) & ( IDENT_7 . IDENT_8 ) ) ) ) ; return IDENT_6 ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_1 . METHOD_2 ( ) ) 