METHOD_0 ( ) { boolean error = false ; char c ; for ( final fr . gouv . vitam . common . error . IDENT_0 service : fr . gouv . vitam . common . error . IDENT_0 . values ( ) ) { if ( ( service . getCode ( ) . length ( ) ) != 2 ) { error = true ; fr . gouv . vitam . common . error . IDENT_1 . LOGGER . error ( ( ( fr . gouv . vitam . common . error . IDENT_1 . IDENT_2 ) + ( java . lang . String . format ( fr . gouv . vitam . common . error . IDENT_1 . IDENT_3 , service . name ( ) , service . getCode ( ) ) ) ) ) ; } else { for ( int i = 0 ; i < ( service . getCode ( ) . length ( ) ) ; i ++ ) { c = service . getCode ( ) . charAt ( i ) ; if ( ( ( c < INT_0 ) || ( c > INT_1 ) ) && ( ( c < INT_2 ) || ( c > INT_3 ) ) ) { error = true ; fr . gouv . vitam . common . error . IDENT_1 . LOGGER . error ( ( ( fr . gouv . vitam . common . error . IDENT_1 . IDENT_2 ) + ( java . lang . String . format ( fr . gouv . vitam . common . error . IDENT_1 . IDENT_4 , service . getCode ( ) , service . name ( ) ) ) ) ) ; break ; } } } } "<AssertPlaceHolder>" ; } name ( ) { return name ; }
org . junit . Assert . assertFalse ( error ) 