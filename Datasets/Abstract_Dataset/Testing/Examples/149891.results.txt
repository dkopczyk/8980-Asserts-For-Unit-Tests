METHOD_0 ( ) { when ( fr . gouv . vitam . metadata . client . IDENT_0 . mock . METHOD_1 ( ) ) . thenReturn ( javax . ws . rs . core . Response . status ( Status . IDENT_1 ) . entity ( fr . gouv . vitam . common . json . IDENT_2 . METHOD_2 ( ) ) . build ( ) ) ; com . fasterxml . jackson . databind . IDENT_3 IDENT_4 = fr . gouv . vitam . metadata . client . IDENT_0 . client . METHOD_3 ( new fr . gouv . vitam . common . database . parameter . METHOD_4 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( fr . gouv . vitam . common . database . parameter . METHOD_4 ) { fr . gouv . vitam . common . IDENT_5 . METHOD_5 ( STRING_0 , IDENT_6 ) ; javax . ws . rs . core . Response response = null ; try { response = METHOD_6 ( javax . ws . rs . IDENT_7 . IDENT_8 , fr . gouv . vitam . metadata . client . IDENT_9 . IDENT_10 , null , IDENT_6 , javax . ws . rs . core . IDENT_11 . IDENT_12 , javax . ws . rs . core . IDENT_11 . IDENT_12 ) ; return response . METHOD_7 ( com . fasterxml . jackson . databind . IDENT_3 . class ) ; } catch ( fr . gouv . vitam . common . exception . IDENT_13 e ) { throw new fr . gouv . vitam . metadata . api . exception . METHOD_8 ( STRING_1 , e ) ; } finally { METHOD_9 ( response ) ; } }
org . junit . Assert . assertNotNull ( IDENT_4 ) 