METHOD_0 ( ) { fr . gouv . vitam . common . IDENT_0 . IDENT_1 . METHOD_1 ( ) . METHOD_2 ( 0 ) ; final com . fasterxml . jackson . databind . IDENT_2 IDENT_3 = fr . gouv . vitam . storage . engine . server . IDENT_4 . impl . IDENT_5 . IDENT_6 . METHOD_3 ( fr . gouv . vitam . storage . engine . server . IDENT_4 . impl . IDENT_5 . IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String ) { java . lang . Integer IDENT_8 = fr . gouv . vitam . common . parameter . IDENT_9 . METHOD_4 ( ) ; fr . gouv . vitam . common . IDENT_10 . METHOD_5 ( fr . gouv . vitam . storage . engine . server . IDENT_4 . impl . IDENT_11 . IDENT_12 , IDENT_13 ) ; fr . gouv . vitam . storage . engine . common . IDENT_14 . model . IDENT_15 IDENT_16 = METHOD_6 ( IDENT_13 ) ; final java . util . List < fr . gouv . vitam . storage . engine . common . IDENT_14 . model . IDENT_17 > IDENT_18 = METHOD_7 ( IDENT_16 ) ; com . fasterxml . jackson . databind . node . IDENT_19 IDENT_20 = fr . gouv . vitam . common . json . IDENT_21 . METHOD_8 ( ) ; for ( fr . gouv . vitam . storage . engine . common . IDENT_14 . model . IDENT_17 IDENT_22 : IDENT_18 ) { IDENT_20 . add ( METHOD_9 ( IDENT_22 , IDENT_8 , IDENT_16 . METHOD_10 ( ) ) ) ; } return fr . gouv . vitam . common . json . IDENT_21 . METHOD_11 ( ) . set ( fr . gouv . vitam . storage . engine . server . IDENT_4 . impl . IDENT_11 . IDENT_23 , IDENT_20 ) ; }
org . junit . Assert . assertNotNull ( IDENT_3 ) 