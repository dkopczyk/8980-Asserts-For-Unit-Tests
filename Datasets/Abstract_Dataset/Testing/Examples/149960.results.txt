METHOD_0 ( ) { org . openmrs . IDENT_0 IDENT_1 = new org . openmrs . METHOD_1 ( ) ; org . openmrs . IDENT_2 IDENT_3 = METHOD_2 ( STRING_0 , IDENT_4 . IDENT_5 ) ; org . openmrs . IDENT_2 IDENT_6 = METHOD_2 ( STRING_1 , IDENT_4 . IDENT_7 ) ; org . openmrs . IDENT_2 fr = METHOD_2 ( STRING_2 , new java . util . Locale ( STRING_3 ) ) ; IDENT_1 . METHOD_3 ( java . util . Arrays . asList ( IDENT_3 , IDENT_6 , fr ) ) ; java . lang . String name = new org . openmrs . IDENT_8 . METHOD_4 ( new java . util . Locale ( STRING_3 ) ) . METHOD_5 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( org . openmrs . METHOD_1 ) { java . lang . String IDENT_9 = IDENT_10 . METHOD_6 ( ) ; java . util . Locale . Builder builder = new java . util . Locale . Builder ( ) . METHOD_7 ( IDENT_10 ) ; if ( ! ( org . openmrs . IDENT_8 . METHOD_4 . IDENT_11 . equals ( IDENT_9 ) ) ) { builder . METHOD_8 ( org . openmrs . IDENT_8 . METHOD_4 . IDENT_11 ) ; if ( "" . equals ( IDENT_10 . METHOD_9 ( ) ) ) { builder . METHOD_10 ( org . openmrs . IDENT_8 . METHOD_4 . IDENT_12 ) ; } } java . lang . String name = METHOD_11 ( IDENT_1 , builder . build ( ) ) ; if ( name != null ) return name ; name = METHOD_11 ( IDENT_1 , IDENT_10 ) ; if ( name != null ) return name ; if ( "" . equals ( IDENT_10 . METHOD_9 ( ) ) ) { name = METHOD_11 ( IDENT_1 , new java . util . Locale ( IDENT_10 . METHOD_12 ( ) ) ) ; if ( name != null ) return name ; } name = METHOD_11 ( IDENT_1 , org . openmrs . IDENT_8 . METHOD_4 . IDENT_7 ) ; if ( name != null ) return name ; name = METHOD_11 ( IDENT_1 , org . openmrs . IDENT_8 . METHOD_4 . IDENT_5 ) ; if ( name != null ) return name ; org . openmrs . IDENT_2 IDENT_13 = IDENT_1 . getName ( ) ; if ( IDENT_13 == null ) { org . openmrs . IDENT_8 . METHOD_4 . log . error ( ( ( ( STRING_4 + ( IDENT_1 . METHOD_13 ( ) ) ) + STRING_5 ) + ( IDENT_1 . getId ( ) ) ) ) ; return ( STRING_6 + ( IDENT_1 . getId ( ) ) ) + "]" ; } return IDENT_13 . getName ( ) ; }
org . junit . Assert . assertEquals ( STRING_2 , name ) 