test ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; java . lang . String IDENT_2 = ( ( ( ( ( ( STRING_2 + ( ( ( STRING_3 + STRING_4 ) + STRING_5 ) + STRING_2 0 ) ) + IDENT_0 ) + STRING_6 ) + IDENT_1 ) + STRING_2 1 ) + STRING_7 ) + ( IDENT_3 . IDENT_4 ) ; br . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_3 IDENT_9 = new br . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_0 ( ) ; java . sql . IDENT_10 IDENT_11 = IDENT_9 . METHOD_1 ( ) ; java . sql . ResultSet rs = IDENT_9 . METHOD_2 ( IDENT_11 , IDENT_2 ) ; int IDENT_12 = 0 ; try { while ( rs . next ( ) ) { IDENT_12 ++ ; } "<AssertPlaceHolder>" ; } catch ( java . sql . IDENT_13 e ) { org . junit . Assert . fail ( ( ( ( ( STRING_8 + IDENT_12 ) + STRING_9 ) + IDENT_2 ) + ( e . toString ( ) ) ) ) ; } } METHOD_2 ( java . sql . IDENT_10 , java . lang . String ) { java . sql . IDENT_14 stmt = null ; try { stmt = IDENT_11 . METHOD_3 ( ) ; stmt . METHOD_4 ( br . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_0 . IDENT_4 ) ; } catch ( java . sql . IDENT_13 e ) { org . junit . Assert . fail ( ( STRING_10 + ( e . toString ( ) ) ) ) ; } try { stmt . METHOD_5 ( ( STRING_11 + ( br . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_0 . IDENT_15 ) ) ) ; } catch ( java . sql . IDENT_13 e ) { org . junit . Assert . fail ( ( ( STRING_12 + ( br . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_0 . IDENT_15 ) ) + ( e . toString ( ) ) ) ) ; } java . sql . ResultSet rs = null ; try { rs = stmt . METHOD_5 ( query ) ; } catch ( java . sql . IDENT_13 e ) { org . junit . Assert . fail ( ( ( STRING_13 + query ) + ( e . toString ( ) ) ) ) ; } return rs ; }
org . junit . Assert . assertTrue ( ( IDENT_12 == 10 ) ) 