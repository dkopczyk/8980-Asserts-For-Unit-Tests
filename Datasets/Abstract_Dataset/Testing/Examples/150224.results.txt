METHOD_0 ( ) { ws . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new ws . IDENT_0 . IDENT_4 . METHOD_1 ( ) ; ws . IDENT_0 . IDENT_1 . IDENT_5 IDENT_6 = new ws . IDENT_0 . IDENT_4 . METHOD_2 ( ) ; ws . IDENT_0 . IDENT_7 . IDENT_8 parser = new ws . IDENT_0 . IDENT_7 . METHOD_3 ( STRING_0 , new java . lang . Object [ ] { } ) ; try { java . util . List < ws . IDENT_0 . IDENT_1 . IDENT_9 > rules = parser . parse ( IDENT_3 , IDENT_6 , STRING_0 ) ; int [ ] IDENT_10 = new int [ ] { 3 } ; int i = 0 ; for ( ws . IDENT_0 . IDENT_1 . IDENT_9 rule : rules ) { if ( ( rule . METHOD_4 ( ) ) == null ) { ws . IDENT_0 . IDENT_1 . IDENT_11 engine = new ws . IDENT_0 . IDENT_4 . METHOD_5 ( IDENT_3 , rule ) ; engine . run ( ) ; "<AssertPlaceHolder>" ; IDENT_6 . METHOD_6 ( ) . METHOD_7 ( ) ; } } } catch ( ws . IDENT_0 . IDENT_7 . IDENT_12 e ) { e . printStackTrace ( ) ; } catch ( java . io . IOException e ) { e . printStackTrace ( ) ; } } METHOD_6 ( ) { return IDENT_13 ; }
org . junit . Assert . assertEquals ( IDENT_6 . METHOD_6 ( ) . size ( ) , IDENT_10 [ ( i ++ ) ] ) 