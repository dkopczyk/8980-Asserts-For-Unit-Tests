METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = org . apache . hadoop . hive . IDENT_2 . parse . IDENT_3 . METHOD_1 ( IDENT_0 , org . apache . hadoop . hive . IDENT_2 . parse . IDENT_3 . driver ) ; java . lang . String IDENT_4 = IDENT_1 + STRING_1 ; java . lang . String tableName = STRING_1 0 ; org . apache . hadoop . hive . IDENT_2 . parse . IDENT_3 . run ( ( ( STRING_1 1 + ( org . apache . hadoop . hive . IDENT_2 . IDENT_5 . IDENT_6 . METHOD_2 ( IDENT_1 , tableName ) ) ) + STRING_1 8 ) , org . apache . hadoop . hive . IDENT_2 . parse . IDENT_3 . driver ) ; java . lang . String [ ] IDENT_7 = new java . lang . String [ ] { STRING_2 , STRING_3 } ; java . lang . String IDENT_8 = new org . apache . hadoop . fs . Path ( org . apache . hadoop . hive . IDENT_2 . parse . IDENT_3 . IDENT_9 , ( IDENT_0 + STRING_1 4 ) ) . METHOD_3 ( ) . getPath ( ) ; org . apache . hadoop . hive . IDENT_2 . parse . IDENT_3 . METHOD_4 ( IDENT_8 , IDENT_7 ) ; org . apache . hadoop . hive . IDENT_2 . parse . IDENT_3 . run ( ( ( ( ( STRING_4 + IDENT_8 ) + STRING_1 2 ) + IDENT_1 ) + STRING_5 ) , org . apache . hadoop . hive . IDENT_2 . parse . IDENT_3 . driver ) ; METHOD_5 ( ( ( STRING_6 + IDENT_1 ) + STRING_5 ) , IDENT_7 , org . apache . hadoop . hive . IDENT_2 . parse . IDENT_3 . driver ) ; java . lang . String IDENT_10 = METHOD_6 ( IDENT_1 , null , null , null ) . IDENT_11 ; org . apache . hadoop . hive . IDENT_2 . parse . IDENT_3 . IDENT_12 . close ( ) ; org . apache . hadoop . hive . IDENT_2 . parse . IDENT_3 . run ( ( ( ( ( STRING_1 3 + IDENT_4 ) + STRING_1 6 ) + IDENT_10 ) + STRING_1 5 ) , org . apache . hadoop . hive . IDENT_2 . parse . IDENT_3 . IDENT_12 ) ; org . apache . hadoop . hive . IDENT_2 . parse . IDENT_3 . IDENT_12 . close ( ) ; org . apache . hadoop . fs . Path IDENT_13 = new org . apache . hadoop . fs . Path ( java . lang . System . getProperty ( STRING_7 , STRING_1 7 ) ) ; org . apache . hadoop . fs . IDENT_14 fs = org . apache . hadoop . fs . IDENT_14 . get ( IDENT_13 . METHOD_3 ( ) , org . apache . hadoop . hive . IDENT_2 . parse . IDENT_3 . IDENT_15 ) ; try { org . apache . hadoop . fs . Path path = new org . apache . hadoop . fs . Path ( IDENT_13 , ( ( ( IDENT_4 + STRING_8 ) + ( org . apache . hadoop . fs . Path . IDENT_16 ) ) + tableName ) ) ; if ( ! ( fs . exists ( path ) ) ) { return ; } org . apache . hadoop . fs . IDENT_17 filter = new org . apache . hadoop . fs . METHOD_7 ( ) { @ org . apache . hadoop . hive . IDENT_2 . parse . Override public boolean accept ( org . apache . hadoop . fs . Path path ) { return path . getName ( ) . startsWith ( org . apache . hadoop . hive . conf . IDENT_18 . METHOD_8 ( org . apache . hadoop . hive . IDENT_2 . parse . IDENT_3 . IDENT_15 , IDENT_18 . IDENT_19 . IDENT_20 ) ) ; } } ; org . apache . hadoop . fs . IDENT_21 [ ] IDENT_22 = fs . METHOD_9 ( path , filter ) ; "<AssertPlaceHolder>" ; } catch ( java . io . IOException e ) { org . apache . hadoop . hive . IDENT_2 . parse . IDENT_3 . LOG . error ( ( STRING_9 + IDENT_13 ) , e ) ; assert false ; } } METHOD_9 ( org . apache . hadoop . IDENT_23 . IDENT_24 , org . apache . hadoop . fs . Path ) { java . util . ArrayList < org . apache . hadoop . fs . IDENT_21 > result = new java . util . ArrayList < org . apache . hadoop . fs . IDENT_21 > ( ) ; java . util . List < java . io . IOException > errors = new java . util . ArrayList < java . io . IOException > ( ) ; org . apache . hadoop . fs . IDENT_14 fs = IDENT_25 . METHOD_10 ( job ) ; org . apache . hadoop . fs . IDENT_21 [ ] matches = fs . METHOD_11 ( IDENT_25 , IDENT_26 . IDENT_27 ) ; if ( matches == null ) { errors . add ( new java . io . IOException ( ( STRING_10 + IDENT_25 ) ) ) ; } else if ( ( matches . length ) == 0 ) { errors . add ( new java . io . IOException ( ( ( STRING_11 + IDENT_25 ) + STRING_12 ) ) ) ; } else { for ( org . apache . hadoop . fs . IDENT_21 IDENT_28 : matches ) { org . apache . hadoop . hive . common . IDENT_26 . METHOD_12 ( fs , IDENT_28 , result ) ; } } if ( ! ( errors . isEmpty ( ) ) ) { throw new org . apache . hadoop . IDENT_23 . METHOD_13 ( errors ) ; } org . apache . hadoop . hive . IDENT_2 . io . IDENT_29 . LOG . debug ( ( ( ( STRING_13 + IDENT_25 ) + STRING_14 ) + result ) ) ; org . apache . hadoop . hive . IDENT_2 . io . IDENT_29 . LOG . info ( ( ( ( STRING_15 + ( result . size ( ) ) ) + STRING_16 ) + IDENT_25 ) ) ; return result . toArray ( new org . apache . hadoop . fs . IDENT_21 [ result . size ( ) ] ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_22 . length ) 