METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 + ( ( ( ( ( ( ( "\n" + STRING_1 0 ) + STRING_2 ) + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_1 ) + STRING_6 ) ; org . IDENT_1 . parser . IDENT_2 parser = new org . IDENT_1 . parser . METHOD_1 ( IDENT_3 . IDENT_4 . METHOD_2 ( true ) ) ; org . IDENT_1 . unit . IDENT_5 . IDENT_6 IDENT_7 = ( ( org . IDENT_1 . unit . IDENT_5 . IDENT_6 ) ( parser . parse ( IDENT_8 . IDENT_9 , IDENT_0 ) ) ) ; final org . IDENT_1 . pattern . IDENT_10 < org . IDENT_1 . unit . IDENT_5 . IDENT_11 > IDENT_12 = org . IDENT_1 . pattern . IDENT_13 . METHOD_3 ( STRING_7 ) ; IDENT_7 = IDENT_7 . METHOD_4 ( IDENT_12 , new org . IDENT_1 . pattern . IDENT_14 < org . IDENT_1 . unit . IDENT_5 . IDENT_11 > ( ) { @ org . IDENT_1 . unit . IDENT_5 . Override public org . IDENT_1 . unit . IDENT_5 . IDENT_11 METHOD_5 ( org . IDENT_1 . unit . IDENT_5 . IDENT_11 METHOD_3 , org . IDENT_1 . pattern . IDENT_15 s ) { return ( ( org . IDENT_1 . unit . IDENT_5 . IDENT_16 ) ( IDENT_12 . build ( ) ) ) . METHOD_6 ( METHOD_7 ( ) ) . METHOD_8 ( STRING_8 ) ; } } ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( org . IDENT_1 . tree . IDENT_17 , boolean ) { java . io . StringWriter writer = new java . io . StringWriter ( ) ; org . IDENT_1 . IDENT_5 . IDENT_18 . METHOD_10 ( tree , new java . io . METHOD_11 ( writer ) , format ) ; return writer . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , org . IDENT_1 . IDENT_5 . IDENT_18 . METHOD_9 ( IDENT_7 , false ) ) 