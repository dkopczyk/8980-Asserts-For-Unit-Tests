METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . util . IDENT_2 parser = new com . IDENT_0 . IDENT_1 . util . METHOD_1 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } matches ( com . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 . IDENT_5 ) { if ( IDENT_6 . METHOD_2 ( ) . equals ( "/" ) ) return true ; java . lang . Object [ ] IDENT_7 = IDENT_6 . METHOD_3 ( ) ; if ( ( METHOD_4 ( ) ) < ( IDENT_6 . METHOD_4 ( ) ) ) return false ; java . util . Iterator < java . lang . String > IDENT_8 = IDENT_9 . iterator ( ) ; int i = 0 ; while ( IDENT_8 . hasNext ( ) ) { if ( ! ( IDENT_8 . next ( ) . equals ( IDENT_7 [ ( i ++ ) ] ) ) ) return false ; if ( i == ( IDENT_7 . length ) ) break ; } return true ; }
org . junit . Assert . assertTrue ( parser . matches ( STRING_0 ) ) 