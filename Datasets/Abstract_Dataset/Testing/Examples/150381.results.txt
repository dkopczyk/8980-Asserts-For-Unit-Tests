METHOD_0 ( ) { java . lang . String sql = STRING_0 ; com . IDENT_0 . IDENT_1 . IDENT_2 . query . sql . IDENT_3 IDENT_4 = org . mockito . Mockito . mock ( com . IDENT_0 . IDENT_1 . IDENT_2 . query . sql . IDENT_3 . class , Mockito . IDENT_5 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . query . sql . IDENT_3 . IDENT_6 IDENT_7 = IDENT_4 . parse ( sql ) ; com . IDENT_8 . sql . parser . IDENT_9 IDENT_10 = IDENT_7 . METHOD_1 ( ) ; com . IDENT_8 . sql . parser . IDENT_11 IDENT_12 = IDENT_7 . METHOD_2 ( ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_13 = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; IDENT_13 . put ( STRING_1 , STRING_1 ) ; try { IDENT_4 . METHOD_3 ( IDENT_10 , IDENT_12 , IDENT_13 ) ; org . junit . Assert . fail ( STRING_2 ) ; } catch ( com . IDENT_0 . IDENT_1 . IDENT_2 . exception . IDENT_14 ex ) { "<AssertPlaceHolder>" ; } } METHOD_3 ( com . IDENT_8 . sql . parser . IDENT_9 , com . IDENT_8 . sql . parser . IDENT_11 , java . util . Map ) { com . IDENT_8 . sql . parser . IDENT_15 IDENT_16 = IDENT_12 . METHOD_4 ( ) ; com . IDENT_8 . sql . parser . IDENT_17 IDENT_18 = IDENT_10 . METHOD_5 ( ) ; if ( ( IDENT_18 == null ) || ( ( IDENT_18 . size ( ) ) == 0 ) ) { if ( ( IDENT_16 != null ) && ( ( IDENT_16 . size ( ) ) > 0 ) ) { throw new com . IDENT_0 . IDENT_1 . IDENT_2 . exception . METHOD_6 ( ( ( IDENT_19 . IDENT_20 . METHOD_7 ( ) ) + STRING_3 ) ) ; } if ( ( IDENT_13 . size ( ) ) > 0 ) { throw new com . IDENT_0 . IDENT_1 . IDENT_2 . exception . METHOD_6 ( ( ( ( IDENT_19 . IDENT_21 . METHOD_7 ( ) ) + STRING_4 ) + ( IDENT_13 . values ( ) ) ) ) ; } } else { java . util . Set < java . lang . String > IDENT_22 = com . google . common . collect . IDENT_23 . METHOD_8 ( ) ; int IDENT_24 = IDENT_18 . size ( ) ; for ( int i = 0 ; i < IDENT_24 ; i ++ ) { com . IDENT_8 . sql . parser . IDENT_25 IDENT_26 = ( ( com . IDENT_8 . sql . parser . IDENT_25 ) ( IDENT_18 . get ( i ) ) ) ; com . IDENT_8 . sql . parser . IDENT_27 IDENT_28 = IDENT_26 . METHOD_9 ( ) ; if ( IDENT_28 instanceof com . IDENT_8 . sql . parser . IDENT_29 ) { com . IDENT_8 . sql . parser . IDENT_29 column = ( ( com . IDENT_8 . sql . parser . IDENT_29 ) ( IDENT_28 ) ) ; java . lang . String IDENT_30 = column . METHOD_10 ( ) ; if ( ! ( IDENT_13 . containsKey ( IDENT_30 ) ) ) { throw new com . IDENT_0 . IDENT_1 . IDENT_2 . exception . METHOD_6 ( ( ( ( IDENT_19 . IDENT_21 . METHOD_7 ( ) ) + STRING_5 ) + IDENT_30 ) ) ; } IDENT_22 . add ( IDENT_30 ) ; } else { throw new com . IDENT_0 . IDENT_1 . IDENT_2 . exception . METHOD_6 ( ( ( IDENT_19 . IDENT_21 . METHOD_7 ( ) ) + STRING_6 ) ) ; } } for ( Map . Entry < java . lang . String , java . lang . String > entry : IDENT_13 . entrySet ( ) ) { java . lang . String key = entry . getKey ( ) ; if ( ! ( IDENT_22 . contains ( key ) ) ) { throw new com . IDENT_0 . IDENT_1 . IDENT_2 . exception . METHOD_6 ( ( ( ( IDENT_19 . IDENT_21 . METHOD_7 ( ) ) + STRING_7 ) + key ) ) ; } } } }
org . junit . Assert . assertTrue ( true ) 