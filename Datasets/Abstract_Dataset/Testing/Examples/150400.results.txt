METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . storage . spi . IDENT_2 configuration = com . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 . METHOD_1 ( ) ; com . IDENT_0 . IDENT_1 . storage . spi . IDENT_5 storage = com . IDENT_0 . IDENT_1 . storage . api . IDENT_6 . METHOD_2 ( configuration ) ; java . io . File directory = new java . io . File ( ( ( "/" + ( com . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . class . METHOD_3 ( ) ) ) + STRING_0 ) ) ; if ( storage . exists ( directory ) ) { storage . METHOD_4 ( directory , true ) ; } com . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_9 IDENT_10 = new com . IDENT_0 . IDENT_1 . IDENT_7 . METHOD_5 ( com . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_11 . of ( STRING_1 ) , directory ) ; try ( com . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_12 store = com . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_12 . create ( storage , IDENT_10 , new com . IDENT_0 . IDENT_1 . IDENT_3 . METHOD_6 ( ) ) ) { com . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_13 IDENT_14 = new com . IDENT_0 . IDENT_1 . IDENT_7 . METHOD_7 ( ) ; IDENT_14 . put ( com . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_11 . of ( STRING_2 ) , com . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_15 . of ( STRING_3 ) ) ; store . put ( com . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_11 . of ( STRING_4 ) , IDENT_14 ) ; } try ( com . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_12 store = com . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_12 . METHOD_8 ( storage , directory ) ) { "<AssertPlaceHolder>" ; } } toString ( byte [ ] ) { return com . IDENT_0 . IDENT_1 . commons . IDENT_16 . converter . toString ( bytes , com . IDENT_0 . IDENT_1 . commons . IDENT_16 . IDENT_17 ) ; }
org . junit . Assert . assertEquals ( STRING_3 , com . IDENT_0 . IDENT_1 . commons . IDENT_16 . toString ( store . get ( com . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_11 . of ( STRING_4 ) ) . get ( com . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_11 . of ( STRING_2 ) ) . getBytes ( ) ) ) 