METHOD_0 ( ) { java . lang . String IDENT_0 = org . apache . hive . jdbc . IDENT_1 . IDENT_2 . class . getName ( ) ; java . sql . IDENT_3 IDENT_4 = org . apache . hive . jdbc . IDENT_1 . IDENT_5 . METHOD_1 ( ) ; IDENT_4 . execute ( ( ( STRING_0 + IDENT_0 ) + STRING_1 ) ) ; IDENT_4 . close ( ) ; final java . sql . IDENT_3 stmt = org . apache . hive . jdbc . IDENT_1 . IDENT_5 . METHOD_1 ( ) ; java . lang . Thread IDENT_6 = new java . lang . Thread ( new java . lang . METHOD_2 ( ) { @ org . apache . hive . jdbc . Override public void run ( ) { try { System . out . println ( STRING_2 ) ; stmt . METHOD_3 ( ( ( ( ( ( STRING_3 + STRING_4 ) + ( org . apache . hive . jdbc . IDENT_1 . tableName ) ) + STRING_5 ) + ( org . apache . hive . jdbc . IDENT_1 . tableName ) ) + STRING_6 ) ) ; org . junit . Assert . fail ( STRING_7 ) ; } catch ( java . sql . IDENT_7 e ) { "<AssertPlaceHolder>" ; System . out . println ( e . toString ( ) ) ; } } } ) ; java . lang . Thread IDENT_8 = new java . lang . Thread ( new java . lang . METHOD_2 ( ) { @ org . apache . hive . jdbc . Override public void run ( ) { try { java . lang . Thread . sleep ( 100 ) ; System . out . println ( STRING_8 ) ; stmt . METHOD_4 ( ) ; } catch ( java . lang . Exception e ) { } } } ) ; IDENT_6 . start ( ) ; IDENT_8 . start ( ) ; IDENT_6 . join ( ) ; IDENT_8 . join ( ) ; stmt . close ( ) ; } fail ( org . apache . calcite . IDENT_9 . IDENT_10 ) { METHOD_5 ( ( ( STRING_9 + ( node . METHOD_6 ( ) ) ) + STRING_10 ) ) ; METHOD_7 ( node ) ; throw IDENT_11 . IDENT_12 . IDENT_13 ; }
org . junit . Assert . assertNotNull ( e ) 