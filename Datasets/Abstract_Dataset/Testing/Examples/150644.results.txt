METHOD_0 ( ) { METHOD_1 ( METHOD_2 ( ) ) ; boolean result = IDENT_0 . METHOD_3 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_1 , times ( 4 ) ) . METHOD_4 ( org . mockito . Mockito . any ( com . IDENT_2 . model . api . IDENT_3 . class ) , org . mockito . Mockito . anyString ( ) ) ; } METHOD_3 ( com . IDENT_2 . model . api . Entity ) { com . IDENT_2 . IDENT_4 . IDENT_1 . IDENT_5 . Date IDENT_6 = IDENT_1 . METHOD_5 ( IDENT_7 . IDENT_8 ) ; com . IDENT_2 . model . api . Entity IDENT_9 = IDENT_1 . METHOD_6 ( IDENT_7 . IDENT_10 ) ; com . IDENT_2 . model . api . Entity factory = IDENT_1 . METHOD_6 ( IDENT_7 . IDENT_11 ) ; com . IDENT_2 . model . api . Entity IDENT_12 = IDENT_1 . METHOD_6 ( IDENT_7 . IDENT_13 ) ; com . IDENT_2 . IDENT_4 . IDENT_1 . IDENT_14 . IDENT_15 criteria = com . IDENT_2 . IDENT_4 . IDENT_1 . IDENT_14 . IDENT_15 . empty ( ) ; com . IDENT_2 . model . api . search . IDENT_16 IDENT_17 = eq ( IDENT_7 . IDENT_8 , IDENT_6 ) ; criteria . METHOD_7 ( METHOD_8 ( IDENT_9 . getId ( ) ) ) ; criteria . METHOD_9 ( METHOD_8 ( factory . getId ( ) ) ) ; if ( IDENT_12 != null ) { criteria . METHOD_10 ( METHOD_8 ( IDENT_12 . getId ( ) ) ) ; } else { IDENT_17 = and ( IDENT_17 , METHOD_11 ( IDENT_7 . IDENT_13 ) ) ; } if ( ( IDENT_1 . getId ( ) ) != null ) { IDENT_17 = and ( IDENT_17 , METHOD_12 ( IDENT_1 . getId ( ) ) ) ; } criteria . METHOD_13 ( IDENT_17 ) ; for ( com . IDENT_2 . model . api . Entity IDENT_18 : IDENT_19 . find ( criteria , com . google . common . base . Optional . of ( METHOD_14 ( id ( ) , STRING_0 ) ) ) . METHOD_15 ( ) ) { METHOD_16 ( IDENT_1 . METHOD_17 ( ) , IDENT_1 ) ; return false ; } return true ; }
org . junit . Assert . assertFalse ( result ) 