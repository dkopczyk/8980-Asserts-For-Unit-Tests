METHOD_0 ( ) { METHOD_1 ( IDENT_0 . METHOD_2 ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 ) ) . METHOD_3 ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_6 . METHOD_4 ( ) ) ; METHOD_1 ( IDENT_0 . METHOD_5 ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_7 ) ) . METHOD_3 ( time ) ; METHOD_1 ( IDENT_0 . METHOD_6 ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_8 ) ) . METHOD_3 ( null ) ; METHOD_1 ( IDENT_0 . METHOD_6 ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_9 ) ) . METHOD_3 ( null ) ; boolean result = IDENT_10 . METHOD_7 ( IDENT_11 , IDENT_0 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_0 , times ( 2 ) ) . METHOD_8 ( org . mockito . Mockito . any ( com . IDENT_1 . model . api . IDENT_12 . class ) , org . mockito . Mockito . anyString ( ) ) ; } METHOD_7 ( com . IDENT_1 . model . api . IDENT_13 , com . IDENT_1 . model . api . Entity ) { boolean isValid = true ; boolean result = true ; java . lang . String type = IDENT_0 . METHOD_2 ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 ) ; java . util . Date time = ( ( java . util . Date ) ( IDENT_0 . METHOD_5 ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_7 ) ) ) ; if ( type == null ) { IDENT_0 . METHOD_8 ( IDENT_11 . METHOD_5 ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 ) , com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_14 . IDENT_15 ) ; isValid = false ; } else { result = METHOD_9 ( IDENT_11 , IDENT_0 , type ) ; } if ( time == null ) { IDENT_0 . METHOD_8 ( IDENT_11 . METHOD_5 ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_7 ) , com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_14 . IDENT_16 ) ; isValid = false ; } if ( isValid ) { isValid = result ; } return isValid ; }
org . junit . Assert . assertFalse ( result ) 