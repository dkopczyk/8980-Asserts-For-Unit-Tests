METHOD_0 ( ) { METHOD_1 ( IDENT_0 . METHOD_2 ( ) ) . METHOD_3 ( IDENT_1 ) ; METHOD_1 ( IDENT_1 . METHOD_4 ( ) ) . METHOD_3 ( IDENT_2 ) ; METHOD_1 ( IDENT_1 . METHOD_5 ( STRING_0 ) ) . METHOD_3 ( STRING_1 ) ; boolean isValid = IDENT_3 . METHOD_6 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( com . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 ) { com . IDENT_4 . model . api . Entity IDENT_8 = IDENT_0 . METHOD_2 ( ) ; com . IDENT_4 . model . api . Entity IDENT_1 = IDENT_8 . METHOD_4 ( ) . get ( IDENT_8 . getId ( ) ) ; java . util . List < java . lang . String > messages = IDENT_9 . METHOD_6 ( IDENT_1 ) ; if ( ! ( messages . isEmpty ( ) ) ) { IDENT_0 . METHOD_7 ( STRING_2 ) ; java . lang . StringBuilder builder = new java . lang . StringBuilder ( ) ; for ( java . lang . String message : messages ) { builder . append ( message ) ; builder . append ( STRING_3 ) ; } IDENT_0 . METHOD_8 ( STRING_4 , IDENT_10 . IDENT_11 , false , builder . toString ( ) ) ; } return messages . isEmpty ( ) ; }
org . junit . Assert . assertTrue ( isValid ) 