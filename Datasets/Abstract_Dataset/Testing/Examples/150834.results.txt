METHOD_0 ( ) { final com . google . common . base . IDENT_0 < org . joda . time . IDENT_1 , org . joda . time . IDENT_1 > IDENT_2 = new com . google . common . base . IDENT_0 < org . joda . time . IDENT_1 , org . joda . time . IDENT_1 > ( ) { @ com . IDENT_3 . commons . IDENT_4 . Override public org . joda . time . IDENT_1 apply ( final org . joda . time . IDENT_1 IDENT_5 ) { int IDENT_6 = IDENT_5 . METHOD_1 ( ) ; if ( IDENT_6 == 5 ) { return IDENT_5 . METHOD_2 ( 3 ) ; } if ( IDENT_6 == 6 ) { return IDENT_5 . METHOD_2 ( 2 ) ; } return IDENT_5 . METHOD_2 ( 1 ) ; } } ; org . joda . time . IDENT_1 IDENT_7 = new org . joda . time . METHOD_3 ( INT_0 , 8 , INT_1 ) ; com . IDENT_3 . commons . IDENT_4 . IDENT_8 < org . joda . time . METHOD_3 > stream = com . IDENT_3 . commons . IDENT_4 . IDENT_8 . create ( IDENT_7 , IDENT_2 ) ; java . util . List < org . joda . time . METHOD_3 > IDENT_9 = com . google . common . collect . IDENT_10 . from ( stream ) . METHOD_4 ( 4 ) . toList ( ) ; org . joda . time . METHOD_3 IDENT_11 = IDENT_7 . METHOD_2 ( 1 ) ; org . joda . time . METHOD_3 IDENT_12 = IDENT_11 . METHOD_2 ( 3 ) ; org . joda . time . METHOD_3 IDENT_13 = IDENT_12 . METHOD_2 ( 1 ) ; "<AssertPlaceHolder>" ; } create ( IDENT_14 , com . google . common . base . IDENT_0 ) { return new com . IDENT_3 . commons . IDENT_4 . IDENT_8 < IDENT_14 > ( IDENT_15 , IDENT_16 ) ; }
org . junit . Assert . assertEquals ( com . google . common . collect . Lists . newArrayList ( IDENT_7 , IDENT_11 , IDENT_12 , IDENT_13 ) , IDENT_9 ) 