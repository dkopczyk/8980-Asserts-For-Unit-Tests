METHOD_0 ( ) { METHOD_1 ( IDENT_0 . getId ( ) ) . METHOD_2 ( 1L ) ; METHOD_1 ( IDENT_0 . METHOD_3 ( com . IDENT_1 . IDENT_0 . internal . IDENT_2 . IDENT_3 ) ) . METHOD_2 ( null ) ; METHOD_1 ( IDENT_0 . METHOD_3 ( com . IDENT_1 . IDENT_0 . internal . IDENT_2 . IDENT_4 ) ) . METHOD_2 ( null ) ; METHOD_1 ( IDENT_0 . METHOD_3 ( com . IDENT_1 . IDENT_0 . internal . IDENT_2 . IDENT_5 ) ) . METHOD_2 ( null ) ; METHOD_1 ( IDENT_6 . find ( ) ) . METHOD_2 ( IDENT_7 ) ; METHOD_1 ( IDENT_7 . add ( org . mockito . Mockito . any ( com . IDENT_1 . model . api . search . IDENT_8 . class ) ) ) . METHOD_2 ( IDENT_7 ) ; METHOD_1 ( IDENT_7 . list ( ) ) . METHOD_2 ( IDENT_9 ) ; METHOD_1 ( IDENT_9 . METHOD_4 ( ) ) . METHOD_2 ( IDENT_10 ) ; METHOD_1 ( IDENT_10 . isEmpty ( ) ) . METHOD_2 ( true ) ; boolean result = IDENT_11 . METHOD_5 ( IDENT_6 , IDENT_0 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_0 , METHOD_6 ( ) ) . METHOD_7 ( org . mockito . Mockito . any ( com . IDENT_1 . model . api . IDENT_12 . class ) , org . mockito . Mockito . anyString ( ) ) ; } METHOD_5 ( com . IDENT_1 . model . api . IDENT_13 , com . IDENT_1 . model . api . Entity ) { java . lang . String IDENT_14 = IDENT_0 . METHOD_3 ( com . IDENT_1 . IDENT_0 . internal . IDENT_2 . IDENT_3 ) ; java . lang . String IDENT_15 = IDENT_0 . METHOD_3 ( com . IDENT_1 . IDENT_0 . internal . IDENT_2 . IDENT_5 ) ; java . lang . String key = IDENT_0 . METHOD_3 ( com . IDENT_1 . IDENT_0 . internal . IDENT_2 . IDENT_4 ) ; com . IDENT_1 . model . api . search . IDENT_16 IDENT_7 = IDENT_6 . find ( ) . add ( com . IDENT_1 . model . api . search . IDENT_17 . eq ( com . IDENT_1 . IDENT_0 . internal . IDENT_2 . IDENT_3 , IDENT_14 ) ) . add ( com . IDENT_1 . model . api . search . IDENT_17 . eq ( com . IDENT_1 . IDENT_0 . internal . IDENT_2 . IDENT_5 , IDENT_15 ) ) . add ( com . IDENT_1 . model . api . search . IDENT_17 . eq ( com . IDENT_1 . IDENT_0 . internal . IDENT_2 . IDENT_4 , key ) ) ; if ( ( IDENT_0 . getId ( ) ) != null ) { IDENT_7 . add ( com . IDENT_1 . model . api . search . IDENT_17 . METHOD_8 ( STRING_0 , IDENT_0 . getId ( ) ) ) ; } com . IDENT_1 . model . api . search . IDENT_18 IDENT_9 = IDENT_7 . list ( ) ; if ( ! ( IDENT_9 . METHOD_4 ( ) . isEmpty ( ) ) ) { IDENT_0 . METHOD_7 ( IDENT_6 . METHOD_9 ( com . IDENT_1 . IDENT_0 . internal . IDENT_2 . IDENT_4 ) , STRING_1 ) ; return false ; } return true ; }
org . junit . Assert . assertTrue ( result ) 