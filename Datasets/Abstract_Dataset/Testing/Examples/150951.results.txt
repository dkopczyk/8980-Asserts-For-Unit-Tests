METHOD_0 ( ) { com . IDENT_0 . model . api . IDENT_1 IDENT_2 = mock ( com . IDENT_0 . model . api . IDENT_1 . class ) ; METHOD_1 ( STRING_0 , IDENT_3 , IDENT_2 ) ; com . IDENT_0 . model . api . IDENT_1 IDENT_4 = mock ( com . IDENT_0 . model . api . IDENT_1 . class ) ; METHOD_1 ( STRING_1 , IDENT_2 , IDENT_4 ) ; com . IDENT_0 . model . api . IDENT_1 IDENT_5 = mock ( com . IDENT_0 . model . api . IDENT_1 . class ) ; METHOD_1 ( STRING_2 , IDENT_4 , IDENT_5 ) ; com . IDENT_0 . model . api . IDENT_1 IDENT_6 = mock ( com . IDENT_0 . model . api . IDENT_1 . class ) ; METHOD_1 ( STRING_3 , IDENT_5 , IDENT_6 ) ; com . IDENT_0 . model . api . IDENT_7 IDENT_8 = METHOD_2 ( STRING_4 , java . lang . String . class , IDENT_6 ) ; java . lang . String field = STRING_5 ; final com . IDENT_0 . model . api . IDENT_7 res = com . IDENT_0 . view . internal . components . grid . IDENT_9 . METHOD_3 ( IDENT_3 , field ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( com . IDENT_0 . model . api . IDENT_1 , java . lang . String ) { java . lang . String [ ] path = field . split ( STRING_6 ) ; for ( int i = 0 ; i < ( path . length ) ; i ++ ) { if ( ( IDENT_3 . METHOD_4 ( path [ i ] ) ) == null ) { return null ; } com . IDENT_0 . model . api . IDENT_7 IDENT_8 = IDENT_3 . METHOD_4 ( path [ i ] ) ; if ( i < ( ( path . length ) - 1 ) ) { if ( ( IDENT_8 . getType ( ) ) instanceof com . IDENT_0 . model . api . types . IDENT_10 ) { IDENT_3 = ( ( com . IDENT_0 . model . api . types . IDENT_10 ) ( IDENT_8 . getType ( ) ) ) . METHOD_5 ( ) ; continue ; } else { return null ; } } return IDENT_8 ; } return null ; }
org . junit . Assert . assertEquals ( IDENT_8 , res ) 