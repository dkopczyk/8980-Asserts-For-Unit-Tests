METHOD_0 ( ) { java . util . List < java . lang . Long > collection = new java . util . ArrayList < java . lang . Long > ( ) ; IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . remote . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_1 ( ) . METHOD_2 ( ) ; IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . remote . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_9 = IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . remote . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_10 . METHOD_3 ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . remote . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_9 ) ; IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . remote . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_1 ( ) . commit ( ) ; collection . add ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . remote . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_9 . METHOD_4 ( ) ) ; int result = IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . remote . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_10 . METHOD_5 ( collection ) ; "<AssertPlaceHolder>" ; IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . remote . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_9 = null ; } METHOD_5 ( java . util . List ) { int IDENT_11 = 0 ; if ( ( IDENT_12 != null ) && ( ! ( IDENT_12 . isEmpty ( ) ) ) ) { logger . info ( ( STRING_0 + ( IDENT_12 . size ( ) ) ) ) ; org . hibernate . IDENT_13 session = METHOD_6 ( ) ; try { org . hibernate . IDENT_14 tx = session . METHOD_7 ( ) ; for ( java . lang . Long IDENT_15 : IDENT_12 ) { IDENT_11 += METHOD_8 ( IDENT_15 ) ; } tx . commit ( ) ; } catch ( java . lang . Exception e ) { logger . error ( STRING_1 ) ; logger . error ( STRING_2 , e ) ; } } return IDENT_11 ; }
org . junit . Assert . assertEquals ( 1 , result ) 