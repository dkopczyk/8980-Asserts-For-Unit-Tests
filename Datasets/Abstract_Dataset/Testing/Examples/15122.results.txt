METHOD_0 ( ) { org . apache . hadoop . hive . IDENT_0 . exec . IDENT_1 . IDENT_2 IDENT_3 = org . apache . hadoop . hive . IDENT_0 . exec . IDENT_1 . util . IDENT_4 . METHOD_1 ( INT_0 , 2 , INT_1 ) ; org . apache . hadoop . hive . IDENT_0 . exec . IDENT_1 . expressions . gen . IDENT_5 expr = new org . apache . hadoop . hive . IDENT_0 . exec . IDENT_1 . expressions . gen . METHOD_2 ( 0 , 1 ) ; expr . evaluate ( IDENT_3 ) ; long [ ] IDENT_6 = ( ( org . apache . hadoop . hive . IDENT_0 . exec . IDENT_1 . IDENT_7 ) ( IDENT_3 . IDENT_8 [ 0 ] ) ) . IDENT_1 ; long [ ] IDENT_9 = ( ( org . apache . hadoop . hive . IDENT_0 . exec . IDENT_1 . IDENT_7 ) ( IDENT_3 . IDENT_8 [ 1 ] ) ) . IDENT_1 ; for ( int i = 0 ; i < ( IDENT_9 . length ) ; i ++ ) { "<AssertPlaceHolder>" ; } } evaluate ( org . apache . hadoop . hive . IDENT_0 . exec . IDENT_1 . IDENT_2 ) { if ( ( IDENT_10 ) != null ) { this . METHOD_3 ( batch ) ; } }
org . junit . Assert . assertEquals ( 0 , ( ( IDENT_6 [ i ] ) + ( IDENT_9 [ i ] ) ) ) 