METHOD_0 ( ) { int IDENT_0 = 10 ; com . IDENT_1 . elasticsearch . IDENT_2 . IDENT_3 config = new com . IDENT_1 . elasticsearch . IDENT_2 . METHOD_1 ( STRING_0 , IDENT_0 , java . util . Optional . empty ( ) ) ; io . IDENT_4 . client . IDENT_5 client = mock ( io . IDENT_4 . client . IDENT_5 . class ) ; java . util . concurrent . atomic . IDENT_6 IDENT_7 = new java . util . concurrent . atomic . METHOD_2 ( 0 ) ; com . IDENT_1 . elasticsearch . IDENT_2 loader = new com . IDENT_1 . elasticsearch . METHOD_3 ( config , client , java . util . Optional . of ( ( IDENT_8 ) -> IDENT_7 . METHOD_4 ( ) ) ) ; loader . start ( ) ; java . util . stream . IDENT_9 . range ( 0 , 10 ) . METHOD_5 ( ( i ) -> { try { loader . METHOD_6 ( "test" , METHOD_7 ( ) ) ; } catch ( IDENT_10 ) { } } ) ; "<AssertPlaceHolder>" ; loader . METHOD_6 ( "test" , METHOD_7 ( ) ) ; METHOD_8 ( ) . METHOD_9 ( INT_0 , TimeUnit . IDENT_11 ) . METHOD_10 ( ( ) -> ( IDENT_7 . get ( ) ) == 1 ) ; loader . METHOD_11 ( ) ; } METHOD_7 ( ) { long IDENT_12 = INT_1 ; com . IDENT_1 . IDENT_13 . elasticsearch . IDENT_14 key = com . IDENT_1 . IDENT_13 . elasticsearch . IDENT_14 . METHOD_12 ( ) . METHOD_13 ( IDENT_15 . IDENT_16 ) . setId ( STRING_1 ) . build ( ) ; return new com . IDENT_1 . elasticsearch . METHOD_3 . METHOD_14 ( key , STRING_2 , STRING_3 , IDENT_12 , STRING_4 ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_7 . get ( ) ) 