METHOD_0 ( ) { io . IDENT_0 . core . schema . operations . IDENT_1 operation = io . IDENT_0 . core . schema . operations . IDENT_2 . METHOD_1 ( STRING_0 , "name" ) . METHOD_2 ( STRING_1 ) ; IDENT_3 . METHOD_3 ( STRING_2 , STRING_3 , operation ) ; IDENT_4 . METHOD_4 ( catalog , IDENT_5 , IDENT_3 . METHOD_5 ( ) , operation ) ; io . IDENT_0 . core . schema . IDENT_6 . IDENT_7 IDENT_8 = catalog . METHOD_6 ( STRING_0 ) ; io . IDENT_0 . core . schema . IDENT_6 . IDENT_7 IDENT_9 = METHOD_7 ( IDENT_8 ) ; io . IDENT_0 . core . schema . IDENT_6 . IDENT_7 IDENT_10 = new io . IDENT_0 . core . schema . IDENT_6 . METHOD_8 ( IDENT_9 . getName ( ) ) . METHOD_9 ( new io . IDENT_0 . core . schema . IDENT_6 . METHOD_10 ( STRING_4 , METHOD_11 ( ) , IDENT_11 , IDENT_12 , IDENT_13 ) ) . METHOD_9 ( new io . IDENT_0 . core . schema . IDENT_6 . METHOD_10 ( "name" , METHOD_12 ( 255 ) , STRING_1 , IDENT_12 ) ) ; "<AssertPlaceHolder>" ; } METHOD_12 ( int ) { return new io . IDENT_0 . core . schema . IDENT_6 . METHOD_13 ( METHOD_13 . Type . IDENT_14 , true , ( ( STRING_5 + length ) + STRING_6 ) , ( ) -> "" , ( statement , position , value ) -> statement . METHOD_14 ( position , value . toString ( ) ) ) ; }
org . junit . Assert . assertEquals ( IDENT_10 , IDENT_9 ) 