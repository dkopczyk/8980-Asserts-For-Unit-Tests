METHOD_0 ( ) { org . apache . hadoop . hive . IDENT_0 . IDENT_1 . IDENT_2 ctx = new org . apache . hadoop . hive . IDENT_0 . IDENT_1 . METHOD_1 ( null ) ; org . apache . hadoop . hive . IDENT_0 . plan . IDENT_3 IDENT_4 = new org . apache . hadoop . hive . IDENT_0 . plan . METHOD_2 ( org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 , "a" ) ; org . apache . hadoop . hive . IDENT_0 . plan . METHOD_2 IDENT_9 = new org . apache . hadoop . hive . IDENT_0 . plan . METHOD_2 ( org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_10 , "b" ) ; java . util . List < org . apache . hadoop . hive . IDENT_0 . plan . IDENT_11 > list = new java . util . ArrayList ( ) ; list . add ( IDENT_4 ) ; list . add ( IDENT_9 ) ; org . apache . hadoop . hive . IDENT_0 . IDENT_12 . IDENT_13 . IDENT_14 IDENT_12 = mock ( org . apache . hadoop . hive . IDENT_0 . IDENT_12 . IDENT_13 . IDENT_14 . class ) ; org . apache . hadoop . hive . IDENT_0 . plan . IDENT_11 IDENT_15 = new org . apache . hadoop . hive . IDENT_0 . plan . METHOD_3 ( org . apache . hadoop . hive . IDENT_0 . IDENT_1 . IDENT_16 . IDENT_17 , IDENT_12 , STRING_0 , list ) ; org . apache . hadoop . hive . IDENT_0 . plan . IDENT_11 IDENT_18 = new org . apache . hadoop . hive . IDENT_0 . plan . METHOD_4 ( org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_10 , IDENT_15 , "foo" , false ) ; final java . util . List < org . apache . hadoop . hive . IDENT_0 . IDENT_1 . IDENT_19 > IDENT_20 = java . util . Arrays . asList ( new org . apache . hadoop . hive . IDENT_0 . IDENT_1 . METHOD_5 ( STRING_1 ) ) ; org . apache . hadoop . hive . IDENT_0 . exec . IDENT_21 IDENT_22 = METHOD_6 ( java . util . Arrays . asList ( IDENT_18 ) , IDENT_20 ) ; java . util . List < org . apache . hadoop . hive . IDENT_0 . IDENT_1 . METHOD_5 > IDENT_23 = ctx . METHOD_7 ( IDENT_22 , IDENT_20 ) ; "<AssertPlaceHolder>" ; } size ( ) { return size ; }
org . junit . Assert . assertEquals ( 0 , IDENT_23 . size ( ) ) 