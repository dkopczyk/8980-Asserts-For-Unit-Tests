METHOD_0 ( ) { com . querydsl . core . types . IDENT_0 . IDENT_1 . IDENT_2 c = METHOD_1 ( com . querydsl . core . types . IDENT_0 . IDENT_1 . IDENT_2 . class , STRING_0 ) ; com . querydsl . core . types . IDENT_0 . IDENT_3 < java . util . Date > IDENT_4 = METHOD_2 ( c . METHOD_3 ( ) ) . when ( INT_0 ) . METHOD_4 ( new java . util . Date ( 0 ) ) . METHOD_5 ( new java . util . Date ( 0 ) ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( com . querydsl . core . types . IDENT_0 . IDENT_5 ) { IDENT_6 . add ( 0 , new com . querydsl . core . types . IDENT_0 . IDENT_7 . IDENT_8 < IDENT_9 > ( null , METHOD_5 ) ) ; com . querydsl . core . types . IDENT_0 . IDENT_5 < T > IDENT_10 = null ; for ( com . querydsl . core . types . IDENT_0 . IDENT_7 . IDENT_8 < IDENT_9 > element : IDENT_6 ) { if ( IDENT_10 == null ) { IDENT_10 = com . querydsl . core . types . IDENT_0 . IDENT_11 . operation ( ( ( java . lang . Class < T > ) ( type ) ) , IDENT_12 . IDENT_13 , element . METHOD_6 ( ) ) ; } else { IDENT_10 = com . querydsl . core . types . IDENT_0 . IDENT_11 . operation ( ( ( java . lang . Class < T > ) ( type ) ) , IDENT_12 . IDENT_14 , base , element . METHOD_7 ( ) , element . METHOD_6 ( ) , IDENT_10 ) ; } } return METHOD_8 ( ( ( java . lang . Class < T > ) ( type ) ) , IDENT_10 ) ; }
org . junit . Assert . assertNotNull ( IDENT_4 ) 