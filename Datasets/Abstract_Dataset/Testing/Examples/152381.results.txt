METHOD_0 ( ) { final long IDENT_0 = INT_0 ; final com . IDENT_1 . IDENT_2 . service . IDENT_3 IDENT_4 = com . IDENT_1 . IDENT_2 . service . IDENT_3 . METHOD_1 ( STRING_0 , ( STRING_1 + ( METHOD_2 ( 8 ) ) ) ) ; com . IDENT_1 . IDENT_2 . service . IDENT_5 IDENT_6 = com . IDENT_1 . IDENT_2 . service . IDENT_7 . METHOD_3 ( ) . METHOD_4 ( ) ; final com . IDENT_1 . IDENT_2 . service . List < com . IDENT_1 . IDENT_2 . service . IDENT_8 > metrics = new com . IDENT_1 . IDENT_2 . service . ArrayList < com . IDENT_1 . IDENT_2 . service . IDENT_8 > ( ) ; for ( int i = 0 ; i < 100 ; i ++ ) { final com . IDENT_1 . IDENT_2 . service . IDENT_9 IDENT_10 = new com . IDENT_1 . IDENT_2 . service . METHOD_5 ( IDENT_4 , i , ( IDENT_0 + ( i * 1000 ) ) , new com . IDENT_1 . IDENT_2 . utils . METHOD_6 ( 1 , java . util . concurrent . TimeUnit . IDENT_11 ) , STRING_2 ) ; metrics . add ( IDENT_10 ) ; IDENT_6 . METHOD_7 ( metrics ) ; metrics . METHOD_8 ( ) ; } int count = 0 ; com . IDENT_1 . IDENT_2 . service . IDENT_12 < com . IDENT_1 . IDENT_2 . service . IDENT_13 > IDENT_14 = IDENT_6 . METHOD_9 ( IDENT_4 , IDENT_15 . IDENT_16 , new com . IDENT_1 . IDENT_2 . service . METHOD_10 ( IDENT_0 , ( IDENT_0 + INT_1 ) ) , IDENT_17 . IDENT_18 ) ; for ( Map . Entry < java . lang . Long , com . IDENT_1 . IDENT_2 . service . IDENT_12 . IDENT_19 < com . IDENT_1 . IDENT_2 . service . IDENT_13 > > data : IDENT_14 . METHOD_11 ( ) . entrySet ( ) ) { com . IDENT_1 . IDENT_2 . service . IDENT_12 . IDENT_19 < com . IDENT_1 . IDENT_2 . service . IDENT_13 > IDENT_20 = data . getValue ( ) ; "<AssertPlaceHolder>" ; count ++ ; } } METHOD_12 ( ) { return data ; }
org . junit . Assert . assertEquals ( count , IDENT_20 . METHOD_12 ( ) . getValue ( ) ) 