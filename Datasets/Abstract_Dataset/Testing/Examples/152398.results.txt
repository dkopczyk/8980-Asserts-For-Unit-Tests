METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . service . IDENT_2 IDENT_3 = com . IDENT_0 . IDENT_1 . service . IDENT_4 . METHOD_1 ( ) ; final com . IDENT_0 . IDENT_1 . service . IDENT_5 IDENT_6 = new com . IDENT_0 . IDENT_1 . service . METHOD_2 ( 1 ) ; com . IDENT_0 . IDENT_1 . service . IDENT_7 < java . lang . IDENT_8 > IDENT_9 = IDENT_3 . METHOD_3 ( new com . IDENT_0 . IDENT_1 . service . IDENT_10 < java . lang . IDENT_8 > ( ) { @ com . IDENT_0 . IDENT_1 . service . Override public com . IDENT_0 . IDENT_1 . service . IDENT_8 call ( ) throws com . IDENT_0 . IDENT_1 . service . Exception { IDENT_6 . METHOD_4 ( ) ; for ( int i = 0 ; i < 1000 ; i ++ ) { IDENT_11 . METHOD_5 ( 1 ) ; } return null ; } } ) ; com . IDENT_0 . IDENT_1 . service . IDENT_7 < java . lang . IDENT_8 > IDENT_12 = IDENT_3 . METHOD_3 ( new com . IDENT_0 . IDENT_1 . service . IDENT_10 < java . lang . IDENT_8 > ( ) { @ com . IDENT_0 . IDENT_1 . service . Override public com . IDENT_0 . IDENT_1 . service . IDENT_8 call ( ) throws com . IDENT_0 . IDENT_1 . service . Exception { IDENT_6 . METHOD_4 ( ) ; for ( int i = 0 ; i < 1000 ; i ++ ) { IDENT_11 . contains ( 1 ) ; } return null ; } } ) ; IDENT_6 . METHOD_6 ( ) ; IDENT_9 . get ( ) ; IDENT_12 . get ( ) ; "<AssertPlaceHolder>" ; } contains ( int ) { return ( ( IDENT_13 . size ( ) ) != 0 ) && ( IDENT_13 . contains ( IDENT_14 ) ) ; }
org . junit . Assert . assertTrue ( IDENT_11 . contains ( 1 ) ) 