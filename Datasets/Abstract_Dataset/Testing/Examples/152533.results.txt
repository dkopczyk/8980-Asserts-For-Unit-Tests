METHOD_0 ( ) { org . IDENT_0 . core . IDENT_1 store = new org . IDENT_0 . core . METHOD_1 ( ) ; org . IDENT_0 . IDENT_2 . core . IDENT_3 x = new org . IDENT_0 . IDENT_2 . core . METHOD_2 ( store , STRING_0 , FLOAT_0 , FLOAT_0 ) ; org . IDENT_0 . IDENT_2 . core . METHOD_2 y = new org . IDENT_0 . IDENT_2 . core . METHOD_2 ( store , STRING_1 , FLOAT_1 , FLOAT_1 ) ; org . IDENT_0 . IDENT_2 . core . METHOD_2 [ ] v = new org . IDENT_0 . IDENT_2 . core . METHOD_2 [ ] { x , y } ; store . METHOD_3 ( new org . IDENT_0 . IDENT_4 . METHOD_4 ( new org . IDENT_0 . IDENT_2 . IDENT_4 . METHOD_5 ( v , new double [ ] { 1 , - 1 } , STRING_2 , 0 ) ) ) ; System . out . println ( ( STRING_3 + ( org . IDENT_0 . IDENT_2 . core . IDENT_5 . METHOD_6 ( ) ) ) ) ; org . IDENT_0 . search . IDENT_6 < org . IDENT_0 . IDENT_2 . core . METHOD_2 > IDENT_7 = new org . IDENT_0 . search . IDENT_8 < org . IDENT_0 . IDENT_2 . core . METHOD_2 > ( ) ; org . IDENT_0 . IDENT_2 . search . IDENT_9 < org . IDENT_0 . IDENT_2 . core . METHOD_2 > select = new org . IDENT_0 . IDENT_2 . search . IDENT_9 < org . IDENT_0 . IDENT_2 . core . METHOD_2 > ( store , v , null ) ; IDENT_7 . METHOD_7 ( new org . IDENT_0 . search . IDENT_10 < org . IDENT_0 . IDENT_2 . core . METHOD_2 > ( ) ) ; boolean result = IDENT_7 . METHOD_8 ( store , select ) ; if ( result ) { System . out . println ( STRING_4 ) ; IDENT_7 . METHOD_9 ( ) ; } else System . out . println ( STRING_5 ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( ) { if ( IDENT_11 ) { System . out . println ( STRING_6 ) ; System . out . println ( ( STRING_7 + ( IDENT_12 ) ) ) ; for ( int i = 0 ; i < ( IDENT_13 [ 0 ] . length ) ; i ++ ) { System . out . METHOD_10 ( ( ( IDENT_14 [ i ] . id ( ) ) + " " ) ) ; } System . out . println ( ) ; for ( int s = 0 ; s < ( IDENT_12 ) ; s ++ ) { for ( int i = 0 ; i < ( IDENT_13 [ 0 ] . length ) ; i ++ ) { System . out . METHOD_10 ( ( ( IDENT_13 [ s ] [ i ] ) + " " ) ) ; } System . out . println ( ) ; } } else { if ( ( IDENT_12 ) > 0 ) { System . out . println ( STRING_8 ) ; System . out . println ( ( STRING_7 + ( IDENT_12 ) ) ) ; for ( int i = 0 ; i < ( IDENT_13 [ 0 ] . length ) ; i ++ ) { System . out . METHOD_10 ( ( ( IDENT_14 [ i ] . id ( ) ) + " " ) ) ; } System . out . println ( ) ; for ( int i = 0 ; i < ( IDENT_13 [ 0 ] . length ) ; i ++ ) { System . out . METHOD_10 ( ( ( IDENT_13 [ 0 ] [ i ] ) + " " ) ) ; } System . out . println ( ) ; } else { System . out . println ( STRING_9 ) ; } } }
org . junit . Assert . assertEquals ( true , result ) 