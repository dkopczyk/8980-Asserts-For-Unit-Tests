METHOD_0 ( ) { net . IDENT_0 . entities . IDENT_1 IDENT_2 = new net . IDENT_0 . entities . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( STRING_0 ) ; IDENT_2 . METHOD_3 ( STRING_1 ) ; net . IDENT_0 . entities . METHOD_1 IDENT_3 = new net . IDENT_0 . entities . METHOD_1 ( ) ; IDENT_3 . METHOD_2 ( STRING_2 ) ; IDENT_3 . METHOD_3 ( STRING_3 ) ; when ( container . METHOD_4 ( net . IDENT_0 . repository . IDENT_4 . class ) ) . thenReturn ( repository ) ; when ( repository . METHOD_5 ( ) ) . thenReturn ( java . util . Arrays . asList ( IDENT_2 , IDENT_3 ) ) ; when ( config . getValue ( IDENT_5 . IDENT_6 ) ) . thenReturn ( STRING_4 ) ; java . lang . String input = STRING_5 ; java . lang . String expected = STRING_6 + ( STRING_7 + STRING_8 ) ; net . IDENT_0 . IDENT_7 . IDENT_8 options = new net . IDENT_0 . IDENT_7 . METHOD_6 ( false , true , false , false , "" ) ; net . IDENT_0 . IDENT_7 . IDENT_9 IDENT_10 = new net . IDENT_0 . IDENT_7 . METHOD_7 ( config , container ) ; "<AssertPlaceHolder>" ; } format ( java . lang . String , net . IDENT_0 . IDENT_7 . METHOD_6 ) { return this . IDENT_11 . METHOD_8 ( text ) ; }
org . junit . Assert . assertEquals ( expected , IDENT_10 . format ( input , options ) ) 