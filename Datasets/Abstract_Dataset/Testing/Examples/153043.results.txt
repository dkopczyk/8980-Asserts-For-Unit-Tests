METHOD_0 ( java . lang . String , java . lang . String , java . lang . String ) { final IDENT_0 . host . domain . parser . IDENT_1 IDENT_2 = new IDENT_0 . host . domain . parser . METHOD_1 ( null ) ; IDENT_2 . METHOD_2 ( com . google . common . collect . ImmutableList . of ( STRING_0 , "" , STRING_1 , version , IDENT_3 ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String ) { if ( ( IDENT_4 ) == null ) { IDENT_4 = "" ; } IDENT_0 . host . domain . parser . METHOD_1 . LOG . METHOD_4 ( ( ( ( STRING_2 + ( IDENT_4 ) ) + STRING_3 ) + IDENT_5 ) ) ; final java . util . Locale IDENT_6 = new java . util . Locale ( IDENT_4 , "" ) ; final java . util . IDENT_7 IDENT_8 = java . util . IDENT_7 . METHOD_5 ( STRING_4 , IDENT_6 ) ; java . lang . String IDENT_9 = null ; try { IDENT_9 = IDENT_8 . getString ( ( STRING_5 + IDENT_5 ) ) ; } catch ( final java . lang . Exception e ) { final java . lang . StringBuilder buf = new java . lang . StringBuilder ( IDENT_5 ) ; for ( int i = ( IDENT_5 . length ( ) ) - 1 ; i >= 0 ; i OP_0 ) { try { IDENT_9 = IDENT_8 . getString ( ( ( STRING_5 + ( buf . toString ( ) ) ) + STRING_6 ) ) ; } catch ( final java . lang . Exception IDENT_10 ) { IDENT_9 = null ; } if ( IDENT_9 != null ) { break ; } buf . METHOD_6 ( i ) ; } if ( IDENT_9 == null ) { IDENT_9 = IDENT_5 ; } } IDENT_0 . host . domain . parser . METHOD_1 . LOG . METHOD_4 ( ( STRING_7 + IDENT_9 ) ) ; return IDENT_9 ; }
org . junit . Assert . assertThat ( IDENT_2 . METHOD_3 ( version ) , org . hamcrest . core . Is . is ( IDENT_9 ) ) 