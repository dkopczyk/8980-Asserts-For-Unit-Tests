METHOD_0 ( ) { "<AssertPlaceHolder>" ; graph . METHOD_1 ( T . id , id ( 10 ) , T . IDENT_0 , "a" , STRING_0 , INT_0 ) ; graph . METHOD_1 ( T . id , id ( INT_0 ) , T . IDENT_0 , "a" , STRING_0 , 12 ) ; graph . METHOD_1 ( T . id , id ( 12 ) , T . IDENT_0 , "a" , STRING_1 , 12 ) ; graph . METHOD_1 ( T . id , id ( INT_1 ) , T . IDENT_0 , "a" , STRING_0 , INT_0 ) ; graph . METHOD_1 ( T . id , id ( INT_2 ) , T . IDENT_0 , "b" , STRING_0 , INT_0 ) ; io . IDENT_1 . IDENT_2 IDENT_3 = graph . configuration ( ) ; org . apache . hadoop . hbase . client . IDENT_4 conn = graph . connection ( ) ; org . apache . hadoop . hbase . client . IDENT_5 table = conn . METHOD_2 ( io . IDENT_1 . IDENT_6 . METHOD_3 ( IDENT_3 , Constants . IDENT_7 ) ) ; graph . METHOD_4 ( IDENT_8 . IDENT_9 , "a" , STRING_0 , false , true , false ) ; METHOD_5 ( table , 3 ) ; table . close ( ) ; } METHOD_6 ( ) { final io . IDENT_1 . IDENT_10 . IDENT_11 parser = new io . IDENT_1 . IDENT_10 . METHOD_7 ( graph ) ; org . apache . hadoop . hbase . client . IDENT_12 IDENT_13 = null ; try { IDENT_13 = table . METHOD_8 ( new org . apache . hadoop . hbase . client . METHOD_9 ( ) ) ; return io . IDENT_1 . models . IDENT_6 . METHOD_10 ( IDENT_13 , parser :: parse ) ; } catch ( java . io . IOException e ) { throw new io . IDENT_1 . models . METHOD_11 ( e ) ; } }
org . junit . Assert . assertEquals ( 0 , count ( graph . METHOD_6 ( ) ) ) 