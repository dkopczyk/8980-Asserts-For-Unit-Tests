METHOD_0 ( ) { java . lang . Exception IDENT_0 = null ; try { uk . ac . IDENT_1 . IDENT_2 . IDENT_3 . util . IDENT_4 . METHOD_1 ( null ) ; } catch ( java . lang . IDENT_5 e ) { IDENT_0 = e ; } "<AssertPlaceHolder>" ; uk . ac . IDENT_1 . IDENT_2 . IDENT_3 . util . IDENT_4 . METHOD_2 ( null ) ; } METHOD_1 ( float [ ] ) { if ( arr == null ) throw new java . lang . METHOD_3 ( STRING_0 ) ; return new java . util . IDENT_6 < java . lang . IDENT_7 > ( ) { @ uk . ac . IDENT_1 . IDENT_2 . IDENT_3 . util . Override public uk . ac . IDENT_1 . IDENT_2 . IDENT_3 . util . IDENT_7 get ( int index ) { return arr [ index ] ; } @ uk . ac . IDENT_1 . IDENT_2 . IDENT_3 . util . Override public int size ( ) { return arr . length ; } } ; }
org . junit . Assert . assertNotNull ( IDENT_0 ) 