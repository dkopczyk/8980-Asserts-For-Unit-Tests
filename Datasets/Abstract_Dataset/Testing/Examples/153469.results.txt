METHOD_0 ( ) { IDENT_0 = IDENT_1 . IDENT_2 . application . service . IDENT_3 . matchers . IDENT_4 . METHOD_1 ( message ) ; METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } matches ( IDENT_1 . IDENT_2 . IDENT_5 . Message , java . util . List ) { if ( IDENT_6 . IDENT_7 . IDENT_8 . collections . IDENT_9 . Lists . isEmpty ( matchers ) ) { return false ; } java . util . List < IDENT_1 . IDENT_2 . application . service . IDENT_3 . matchers . IDENT_10 > IDENT_11 = matchers . stream ( ) . map ( IDENT_12 :: IDENT_13 ) . filter ( IDENT_14 :: IDENT_15 ) . collect ( toList ( ) ) ; long IDENT_16 = IDENT_11 . stream ( ) . filter ( ( matcher ) -> matcher . matches ( message ) ) . count ( ) ; return IDENT_16 >= 1 ; }
org . junit . Assert . assertThat ( instance . matches ( message , matchers ) , is ( true ) ) 