METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . String > m = new java . util . HashMap ( ) ; m . put ( STRING_0 , STRING_1 ) ; m . put ( STRING_2 , "" ) ; m . put ( STRING_3 , null ) ; java . util . Map < java . lang . String , java . lang . String > expected = com . google . common . collect . ImmutableMap . of ( STRING_0 , STRING_1 , STRING_2 , "" ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_0 = org . apache . hadoop . hive . IDENT_1 . utils . IDENT_2 . METHOD_1 ( m , false ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . util . Map , boolean ) { if ( IDENT_3 == null ) { return null ; } if ( IDENT_4 ) { return com . google . common . collect . IDENT_5 . METHOD_2 ( com . google . common . collect . IDENT_5 . METHOD_3 ( IDENT_3 , IDENT_6 ) ) ; } else { return com . google . common . collect . IDENT_5 . METHOD_2 ( com . google . common . collect . IDENT_5 . METHOD_4 ( IDENT_3 , com . google . common . base . IDENT_7 . METHOD_5 ( ) ) ) ; } }
org . junit . Assert . assertThat ( IDENT_0 , org . hamcrest . core . Is . is ( expected ) ) 