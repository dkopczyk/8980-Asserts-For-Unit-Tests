METHOD_0 ( ) { java . math . BigDecimal IDENT_0 = new java . math . BigDecimal ( java . lang . String . valueOf ( Double . MAX_VALUE ) ) . METHOD_1 ( BigDecimal . IDENT_1 ) ; java . math . BigDecimal IDENT_2 = IDENT_0 . METHOD_2 ( ) ; java . util . Collection < java . lang . IDENT_3 > input = new java . util . ArrayList < java . lang . IDENT_3 > ( ) ; java . util . Collections . addAll ( input , IDENT_2 , BigDecimal . IDENT_4 , BigDecimal . IDENT_5 , IDENT_0 ) ; java . lang . String expected = ( ( ( ( ( ( ( STRING_0 + ( IDENT_2 . toString ( ) ) ) + STRING_1 ) + ( BigDecimal . IDENT_4 . toString ( ) ) ) + STRING_1 ) + ( BigDecimal . IDENT_5 . toString ( ) ) ) + STRING_1 ) + ( IDENT_0 . toString ( ) ) ) + "]" ; java . lang . String output = IDENT_6 . serialize ( input , null ) ; "<AssertPlaceHolder>" ; } serialize ( java . util . Collection , io . IDENT_7 . IDENT_8 . serialization . IDENT_9 ) { java . lang . StringBuilder sb = new java . lang . StringBuilder ( STRING_2 ) ; for ( io . IDENT_7 . IDENT_8 . examples . IDENT_10 . IDENT_11 . IDENT_12 . IDENT_13 IDENT_14 : IDENT_15 ) { sb . append ( serialize ( IDENT_14 , context ) ) ; } return sb . append ( STRING_3 ) . toString ( ) ; }
org . junit . Assert . assertEquals ( expected , output ) 