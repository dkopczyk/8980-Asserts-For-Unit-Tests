METHOD_0 ( ) { "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { int len = s . length ( ) ; if ( len == 1 ) { char ch = s . charAt ( 0 ) ; if ( ch == ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 ) ) { return new IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 ( ( STRING_0 + ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 ) ) ) ; } IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_5 IDENT_6 = new IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_3 ( new char [ ] { ch } , 0 , 1 , null ) ; return java . util . Arrays . asList ( IDENT_6 ) ; } java . util . List < IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_3 > IDENT_7 = new java . util . METHOD_4 ( ) ; for ( java . lang . String IDENT_8 : s . split ( STRING_1 ) ) { if ( ( IDENT_8 . length ( ) ) > 0 ) { IDENT_7 . add ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_5 ( IDENT_8 ) ) ; } } return IDENT_7 ; }
org . junit . Assert . assertThat ( ( ( java . util . List < IDENT_0 . IDENT_1 . IDENT_2 . METHOD_3 > ) ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( "a" ) ) ) , contains ( METHOD_6 ( "a" ) ) ) 