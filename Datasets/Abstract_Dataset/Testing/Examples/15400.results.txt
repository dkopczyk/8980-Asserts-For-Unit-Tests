METHOD_0 ( ) { final org . apache . hc . core5 . http . IDENT_0 host = new org . apache . hc . core5 . http . METHOD_1 ( STRING_0 ) ; final org . apache . hc . core5 . http . IDENT_1 req = new org . apache . hc . IDENT_2 . http . IDENT_3 . methods . METHOD_2 ( STRING_1 ) ; final org . apache . hc . core5 . http . IDENT_4 IDENT_5 = org . apache . hc . IDENT_2 . http . impl . cache . IDENT_6 . METHOD_3 ( ) ; IDENT_5 . METHOD_4 ( STRING_2 , STRING_3 ) ; final java . lang . String key = IDENT_7 . INSTANCE . METHOD_5 ( host , new org . apache . hc . IDENT_2 . http . IDENT_3 . methods . METHOD_2 ( STRING_3 ) ) ; final org . apache . hc . IDENT_2 . http . cache . IDENT_8 entry = org . apache . hc . IDENT_2 . http . impl . cache . IDENT_6 . METHOD_6 ( new org . apache . hc . core5 . http . IDENT_9 [ ] { new org . apache . hc . core5 . http . message . METHOD_7 ( STRING_4 , org . apache . hc . IDENT_2 . http . utils . IDENT_10 . METHOD_8 ( new java . util . Date ( ) ) ) , new org . apache . hc . core5 . http . message . METHOD_7 ( STRING_5 , STRING_6 ) } ) ; IDENT_11 . map . put ( key , entry ) ; impl . METHOD_9 ( host , req , IDENT_5 ) ; "<AssertPlaceHolder>" ; } get ( int ) { return this . IDENT_12 . get ( index ) ; }
org . junit . Assert . assertEquals ( entry , IDENT_11 . map . get ( key ) ) 