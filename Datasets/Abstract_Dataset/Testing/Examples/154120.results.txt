METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String [ ] expResult = new java . lang . String [ ] { "foo" , "bar" , STRING_1 } ; java . util . List < org . IDENT_1 . security . IDENT_2 > result = org . IDENT_1 . ext . IDENT_3 . internal . IDENT_4 . METHOD_1 ( IDENT_0 ) ; for ( int i = 0 ; i < 3 ; i ++ ) { "<AssertPlaceHolder>" ; } } get ( org . IDENT_1 . resource . IDENT_5 ) { try { IDENT_6 . get ( ) . write ( System . out ) ; } catch ( org . IDENT_1 . resource . IDENT_7 e ) { System . out . println ( ( STRING_2 + ( e . getStatus ( ) ) ) ) ; System . out . println ( ( STRING_3 + ( e . getMessage ( ) ) ) ) ; IDENT_6 . METHOD_2 ( ) . METHOD_3 ( ) ; } }
org . junit . Assert . assertEquals ( expResult [ i ] , result . get ( i ) . getName ( ) ) 