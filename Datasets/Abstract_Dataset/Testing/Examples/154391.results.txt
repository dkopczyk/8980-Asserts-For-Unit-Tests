METHOD_0 ( ) { METHOD_1 ( new java . util . HashMap < java . lang . String , java . lang . String > ( ) { { put ( STRING_0 , STRING_0 ) ; } } ) ; javax . IDENT_0 . component . IDENT_1 IDENT_2 = mock ( javax . IDENT_0 . component . IDENT_1 . class ) ; javax . IDENT_0 . component . IDENT_3 IDENT_4 = mock ( javax . IDENT_0 . component . IDENT_3 . class ) ; when ( IDENT_5 . METHOD_2 ( ) ) . thenReturn ( IDENT_4 ) ; when ( IDENT_5 . METHOD_2 ( ) . METHOD_3 ( STRING_0 ) ) . thenReturn ( IDENT_2 ) ; when ( IDENT_5 . METHOD_4 ( ) ) . thenReturn ( true ) ; javax . IDENT_0 . component . IDENT_6 result = utils . METHOD_5 ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( javax . IDENT_0 . context . IDENT_7 ) { if ( ! ( IDENT_5 . METHOD_4 ( ) ) ) { return null ; } for ( java . util . Map . Entry < java . lang . String , java . lang . String > entry : IDENT_5 . METHOD_6 ( ) . METHOD_7 ( ) . entrySet ( ) ) { final java . lang . String name = entry . getKey ( ) ; final java . lang . String value = entry . getValue ( ) ; if ( METHOD_8 ( name , value ) ) { javax . IDENT_0 . component . IDENT_6 component = METHOD_9 ( IDENT_5 . METHOD_2 ( ) , name ) ; javax . IDENT_0 . component . IDENT_6 IDENT_2 = METHOD_10 ( component ) ; return IDENT_2 ; } } IDENT_5 . METHOD_11 ( null , new javax . IDENT_0 . application . METHOD_12 ( STRING_1 , STRING_2 ) ) ; return null ; }
org . junit . Assert . assertEquals ( IDENT_2 , result ) 