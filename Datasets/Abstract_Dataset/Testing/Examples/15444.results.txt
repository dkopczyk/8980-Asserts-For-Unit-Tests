METHOD_0 ( ) { final org . apache . hc . core5 . http . IDENT_0 [ ] headers = new org . apache . hc . core5 . http . IDENT_0 [ ] { new org . apache . hc . core5 . http . message . METHOD_1 ( STRING_0 , org . apache . hc . IDENT_1 . http . utils . IDENT_2 . METHOD_2 ( IDENT_3 ) ) , new org . apache . hc . core5 . http . message . METHOD_1 ( STRING_1 , STRING_2 ) } ; final org . apache . hc . IDENT_1 . http . cache . IDENT_4 entry = org . apache . hc . IDENT_1 . http . impl . cache . IDENT_5 . METHOD_3 ( now , now , headers ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . apache . hc . IDENT_1 . http . cache . IDENT_4 , java . util . Date ) { final java . util . Iterator < org . apache . hc . core5 . http . IDENT_6 > it = org . apache . hc . core5 . http . message . IDENT_7 . METHOD_5 ( entry , IDENT_8 . IDENT_9 ) ; while ( it . hasNext ( ) ) { final org . apache . hc . core5 . http . IDENT_6 IDENT_10 = it . next ( ) ; if ( IDENT_8 . IDENT_11 . equalsIgnoreCase ( IDENT_10 . getName ( ) ) ) { try { final int IDENT_12 = java . lang . Integer . METHOD_6 ( IDENT_10 . getValue ( ) ) ; if ( ( METHOD_7 ( entry , now ) ) <= IDENT_12 ) { return true ; } } catch ( final java . lang . IDENT_13 IDENT_14 ) { } } } return false ; }
org . junit . Assert . assertFalse ( impl . METHOD_4 ( entry , now ) ) 