METHOD_0 ( ) { final com . github . IDENT_0 . IDENT_1 . core . model . IDENT_2 . IDENT_3 IDENT_4 = new com . github . IDENT_0 . IDENT_1 . core . model . IDENT_2 . IDENT_5 . METHOD_1 ( com . github . IDENT_0 . IDENT_1 . core . model . IDENT_2 . IDENT_6 . builder ( ) . METHOD_2 ( new com . github . IDENT_0 . IDENT_1 . geom . METHOD_3 ( 1 , 1 ) ) . build ( ) ) ; IDENT_7 . METHOD_4 ( IDENT_4 ) ; model . METHOD_4 ( IDENT_4 ) ; final com . github . IDENT_0 . IDENT_1 . core . model . IDENT_2 . IDENT_8 IDENT_9 = com . github . IDENT_0 . IDENT_1 . core . model . IDENT_2 . IDENT_8 . builder ( new com . github . IDENT_0 . IDENT_1 . geom . METHOD_3 ( 0 , 0 ) , new com . github . IDENT_0 . IDENT_1 . geom . METHOD_3 ( 2 , 2 ) ) . METHOD_5 ( 2.0 ) . build ( ) ; IDENT_7 . METHOD_4 ( IDENT_9 ) ; model . METHOD_4 ( IDENT_9 ) ; IDENT_7 . METHOD_6 ( IDENT_9 , IDENT_4 ) ; "<AssertPlaceHolder>" ; model . METHOD_7 ( IDENT_4 , IDENT_9 , com . github . IDENT_0 . IDENT_1 . core . model . time . IDENT_10 . create ( 0 , 100 ) ) ; } METHOD_8 ( com . github . IDENT_0 . IDENT_1 . core . model . IDENT_11 . IDENT_12 , com . github . IDENT_0 . IDENT_1 . core . model . IDENT_11 . IDENT_12 ) { return METHOD_9 ( IDENT_13 ) . equals ( METHOD_9 ( IDENT_14 ) ) ; }
org . junit . Assert . assertTrue ( IDENT_7 . METHOD_8 ( IDENT_4 , IDENT_9 ) ) 