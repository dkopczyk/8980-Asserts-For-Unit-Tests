METHOD_0 ( ) { net . ripe . IDENT_0 . commons . crypto . IDENT_1 . IDENT_2 subject = net . ripe . IDENT_0 . commons . crypto . IDENT_1 . IDENT_3 . METHOD_1 ( ) ; net . ripe . IDENT_0 . commons . validation . IDENT_4 result = net . ripe . IDENT_0 . commons . validation . IDENT_4 . METHOD_2 ( net . ripe . IDENT_0 . commons . crypto . IDENT_1 . IDENT_3 . IDENT_5 ) ; net . ripe . IDENT_0 . commons . crypto . IDENT_1 . IDENT_6 IDENT_7 = mock ( net . ripe . IDENT_0 . commons . crypto . IDENT_1 . IDENT_6 . class ) ; net . ripe . IDENT_0 . commons . crypto . IDENT_8 . IDENT_9 IDENT_10 = METHOD_3 ( ) ; net . ripe . IDENT_0 . commons . validation . IDENT_11 . IDENT_12 context = new net . ripe . IDENT_0 . commons . validation . IDENT_11 . METHOD_4 ( net . ripe . IDENT_0 . commons . crypto . IDENT_1 . IDENT_3 . IDENT_5 , IDENT_10 ) ; subject . validate ( net . ripe . IDENT_0 . commons . crypto . IDENT_1 . IDENT_3 . IDENT_5 . toString ( ) , context , IDENT_7 , net . ripe . IDENT_0 . commons . crypto . IDENT_1 . IDENT_3 . IDENT_13 , result ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { for ( java . util . Map < net . ripe . IDENT_0 . commons . validation . IDENT_14 , java . util . List < net . ripe . IDENT_0 . commons . validation . IDENT_15 > > IDENT_16 : this . results . values ( ) ) { java . util . List < net . ripe . IDENT_0 . commons . validation . IDENT_15 > errors = IDENT_16 . get ( IDENT_14 . IDENT_17 ) ; if ( ( errors != null ) && ( ! ( errors . isEmpty ( ) ) ) ) { return true ; } } return false ; }
org . junit . Assert . assertFalse ( result . METHOD_5 ( ) ) 