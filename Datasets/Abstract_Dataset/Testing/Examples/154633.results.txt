METHOD_0 ( ) { byte [ ] IDENT_0 = com . google . common . io . IDENT_1 . toByteArray ( new java . io . File ( ( ( net . ripe . IDENT_2 . commons . IDENT_3 . IDENT_4 . IDENT_5 ) + STRING_0 ) ) ) ; java . lang . String location = STRING_1 ; net . ripe . IDENT_2 . commons . validation . IDENT_6 result = net . ripe . IDENT_2 . commons . validation . IDENT_6 . METHOD_1 ( location ) ; net . ripe . IDENT_2 . commons . crypto . IDENT_7 . IDENT_8 . IDENT_9 IDENT_10 = new net . ripe . IDENT_2 . commons . crypto . IDENT_7 . IDENT_8 . METHOD_2 ( ) ; IDENT_10 . parse ( result , IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { for ( java . util . Map < net . ripe . IDENT_2 . commons . validation . IDENT_11 , java . util . List < net . ripe . IDENT_2 . commons . validation . IDENT_12 > > IDENT_13 : this . results . values ( ) ) { java . util . List < net . ripe . IDENT_2 . commons . validation . IDENT_12 > errors = IDENT_13 . get ( IDENT_11 . IDENT_14 ) ; if ( ( errors != null ) && ( ! ( errors . isEmpty ( ) ) ) ) { return true ; } } return false ; }
org . junit . Assert . assertFalse ( result . METHOD_3 ( ) ) 