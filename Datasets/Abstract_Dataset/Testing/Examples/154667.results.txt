METHOD_0 ( ) { child = METHOD_1 ( ) . METHOD_2 ( java . util . IDENT_0 . METHOD_3 ( net . ripe . IDENT_1 . IDENT_2 . class ) ) . METHOD_4 ( net . ripe . IDENT_3 . commons . validation . IDENT_4 . IDENT_5 ) . build ( ) ; net . ripe . IDENT_3 . commons . validation . IDENT_6 . IDENT_7 validator = new net . ripe . IDENT_3 . commons . validation . IDENT_6 . METHOD_5 ( options , result , root , IDENT_8 , root . METHOD_6 ( ) ) ; validate ( validator , child ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ) { for ( java . util . Map < net . ripe . IDENT_3 . commons . validation . IDENT_9 , java . util . List < net . ripe . IDENT_3 . commons . validation . IDENT_10 > > IDENT_11 : this . results . values ( ) ) { java . util . List < net . ripe . IDENT_3 . commons . validation . IDENT_10 > errors = IDENT_11 . get ( IDENT_9 . IDENT_12 ) ; if ( ( errors != null ) && ( ! ( errors . isEmpty ( ) ) ) ) { return true ; } } return false ; }
org . junit . Assert . assertTrue ( result . METHOD_7 ( ) ) 