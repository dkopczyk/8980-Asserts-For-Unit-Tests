METHOD_0 ( ) { net . ripe . IDENT_0 . commons . crypto . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = net . ripe . IDENT_0 . commons . crypto . IDENT_1 . IDENT_2 . IDENT_5 . METHOD_1 ( ) ; java . lang . String xml = IDENT_6 . METHOD_2 ( IDENT_4 ) ; net . ripe . IDENT_0 . commons . crypto . IDENT_1 . IDENT_2 . IDENT_3 IDENT_7 = ( ( net . ripe . IDENT_0 . commons . crypto . IDENT_1 . IDENT_2 . IDENT_3 ) ( IDENT_6 . METHOD_3 ( xml ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( ) { net . ripe . IDENT_0 . commons . crypto . IDENT_1 . IDENT_2 . IDENT_8 builder = net . ripe . IDENT_0 . commons . crypto . IDENT_1 . IDENT_2 . IDENT_5 . METHOD_4 ( ) ; for ( java . util . Map . Entry < java . lang . String , byte [ ] > entry : net . ripe . IDENT_0 . commons . crypto . IDENT_1 . IDENT_2 . IDENT_5 . IDENT_9 . entrySet ( ) ) { builder . METHOD_5 ( entry . getKey ( ) , entry . getValue ( ) ) ; } return builder . build ( net . ripe . IDENT_0 . commons . crypto . IDENT_1 . IDENT_2 . IDENT_5 . IDENT_10 . METHOD_6 ( ) ) ; }
org . junit . Assert . assertEquals ( IDENT_4 , IDENT_7 ) 