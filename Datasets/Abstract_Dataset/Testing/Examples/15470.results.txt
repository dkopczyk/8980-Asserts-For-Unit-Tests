METHOD_0 ( ) { final org . apache . hc . core5 . http . IDENT_0 IDENT_1 = new org . apache . hc . core5 . http . message . METHOD_1 ( STRING_0 , STRING_1 ) ; impl = new org . apache . hc . IDENT_2 . http . impl . cache . METHOD_2 ( org . apache . hc . IDENT_2 . http . impl . cache . IDENT_3 . METHOD_3 ( ) . build ( ) ) ; final org . apache . hc . core5 . http . IDENT_4 [ ] headers = new org . apache . hc . core5 . http . IDENT_4 [ ] { new org . apache . hc . core5 . http . message . METHOD_4 ( STRING_2 , org . apache . hc . IDENT_2 . http . utils . IDENT_5 . METHOD_5 ( IDENT_6 ) ) , new org . apache . hc . core5 . http . message . METHOD_4 ( STRING_3 , STRING_4 ) , new org . apache . hc . core5 . http . message . METHOD_4 ( STRING_5 , STRING_6 ) } ; entry = org . apache . hc . IDENT_2 . http . impl . cache . IDENT_7 . METHOD_6 ( headers ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( org . apache . hc . core5 . http . IDENT_8 , org . apache . hc . core5 . http . IDENT_0 , org . apache . hc . IDENT_2 . http . cache . IDENT_9 , java . util . Date ) { if ( ! ( METHOD_8 ( entry , request , now ) ) ) { log . debug ( STRING_7 ) ; return false ; } if ( ( METHOD_9 ( request ) ) && ( ! ( IDENT_10 . METHOD_10 ( entry ) ) ) ) { log . debug ( STRING_8 1 ) ; return false ; } if ( METHOD_11 ( request ) ) { log . debug ( STRING_9 ) ; return false ; } if ( ( ! ( METHOD_12 ( request ) ) ) && ( ( entry . getStatus ( ) ) == ( org . apache . hc . core5 . http . IDENT_11 . IDENT_12 ) ) ) { log . debug ( STRING_8 2 ) ; return false ; } if ( ( METHOD_12 ( request ) ) && ( ! ( METHOD_13 ( request , entry , now ) ) ) ) { log . debug ( STRING_8 ) ; return false ; } if ( METHOD_14 ( request , entry ) ) { log . debug ( ( STRING_10 + STRING_11 ) ) ; return false ; } final java . util . Iterator < org . apache . hc . core5 . http . IDENT_13 > it = org . apache . hc . core5 . http . message . IDENT_14 . METHOD_15 ( request , IDENT_15 . IDENT_16 ) ; while ( it . hasNext ( ) ) { final org . apache . hc . core5 . http . IDENT_13 IDENT_17 = it . next ( ) ; if ( IDENT_15 . IDENT_18 . equals ( IDENT_17 . getName ( ) ) ) { log . debug ( STRING_12 ) ; return false ; } if ( IDENT_15 . IDENT_19 . equals ( IDENT_17 . getName ( ) ) ) { log . debug ( STRING_13 ) ; return false ; } if ( IDENT_15 . IDENT_20 . equals ( IDENT_17 . getName ( ) ) ) { try { final int IDENT_21 = java . lang . Integer . METHOD_16 ( IDENT_17 . getValue ( ) ) ; if ( ( IDENT_10 . METHOD_17 ( entry , now ) ) > IDENT_21 ) { log . debug ( STRING_14 ) ; return false ; } } catch ( final java . lang . IDENT_22 ex ) { log . debug ( ( STRING_8 4 + ( ex . getMessage ( ) ) ) ) ; return false ; } } if ( IDENT_15 . IDENT_23 . equals ( IDENT_17 . getName ( ) ) ) { try { final int IDENT_24 = java . lang . Integer . METHOD_16 ( IDENT_17 . getValue ( ) ) ; if ( ( IDENT_10 . METHOD_18 ( entry ) ) > IDENT_24 ) { log . debug ( STRING_15 ) ; return false ; } } catch ( final java . lang . IDENT_22 ex ) { log . debug ( ( STRING_8 3 + ( ex . getMessage ( ) ) ) ) ; return false ; } } if ( IDENT_15 . IDENT_25 . equals ( IDENT_17 . getName ( ) ) ) { try { final long IDENT_26 = java . lang . Long . METHOD_19 ( IDENT_17 . getValue ( ) ) ; if ( IDENT_26 < 0L ) { return false ; } final long IDENT_27 = IDENT_10 . METHOD_17 ( entry , now ) ; final long IDENT_28 = IDENT_10 . METHOD_18 ( entry ) ; if ( ( IDENT_28 - IDENT_27 ) < IDENT_26 ) { log . debug ( ( STRING_8 0 + STRING_8 5 ) ) ; return false ; } } catch ( final java . lang . IDENT_22 ex ) { log . debug ( ( STRING_8 3 + ( ex . getMessage ( ) ) ) ) ; return false ; } } } log . debug ( STRING_16 ) ; return true ; }
org . junit . Assert . assertTrue ( impl . METHOD_7 ( host , IDENT_1 , entry , now ) ) 