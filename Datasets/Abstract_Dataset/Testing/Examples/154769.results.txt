METHOD_0 ( ) { final net . ripe . db . whois . common . IDENT_0 . IDENT_1 IDENT_2 = net . ripe . db . whois . common . IDENT_0 . IDENT_1 . parse ( STRING_0 ) ; final net . ripe . db . whois . common . IDENT_0 . IDENT_1 result = IDENT_3 . METHOD_1 ( IDENT_2 , IDENT_4 ) ; "<AssertPlaceHolder>" ; METHOD_2 ( IDENT_4 ) ; } METHOD_1 ( net . ripe . db . whois . common . IDENT_0 . IDENT_1 , net . ripe . db . whois . common . IDENT_0 . IDENT_5 ) { final java . util . Map < net . ripe . db . whois . common . IDENT_0 . IDENT_6 , net . ripe . db . whois . common . IDENT_0 . IDENT_6 > IDENT_7 = com . google . common . collect . IDENT_8 . METHOD_3 ( ) ; for ( final net . ripe . db . whois . common . IDENT_0 . IDENT_6 IDENT_9 : object . METHOD_4 ( ) ) { final net . ripe . db . whois . common . IDENT_0 . IDENT_10 type = IDENT_9 . getType ( ) ; java . lang . String IDENT_11 = null ; final net . ripe . db . whois . common . IDENT_0 . IDENT_12 . IDENT_13 IDENT_14 = IDENT_15 . get ( type ) ; if ( IDENT_14 == null ) { continue ; } try { IDENT_11 = IDENT_14 . METHOD_1 ( IDENT_9 ) ; } catch ( java . lang . IllegalArgumentException IDENT_16 ) { LOGGER . debug ( STRING_1 , IDENT_16 . getClass ( ) . getName ( ) , IDENT_16 . getMessage ( ) ) ; } if ( IDENT_11 == null ) { continue ; } final java . util . List < net . ripe . db . whois . common . Message > IDENT_17 = com . google . common . collect . Lists . newArrayList ( ) ; if ( ( ! ( IDENT_14 . METHOD_5 ( ) ) ) && ( ! ( IDENT_9 . METHOD_6 ( ) . toString ( ) . equals ( IDENT_11 ) ) ) ) { IDENT_17 . add ( net . ripe . db . whois . common . IDENT_0 . IDENT_18 . METHOD_7 ( IDENT_9 . METHOD_6 ( ) , IDENT_11 ) ) ; } if ( ( IDENT_19 . contains ( type ) ) && ( ( IDENT_9 . getValue ( ) . indexOf ( STRING_2 ) ) != ( - 1 ) ) ) { IDENT_17 . add ( net . ripe . db . whois . common . IDENT_0 . IDENT_18 . METHOD_8 ( ) ) ; } if ( ( IDENT_19 . contains ( type ) ) && ( ( IDENT_9 . getValue ( ) . indexOf ( STRING_3 ) ) != ( - 1 ) ) ) { IDENT_17 . add ( net . ripe . db . whois . common . IDENT_0 . IDENT_18 . METHOD_9 ( ) ) ; } final java . lang . String IDENT_20 = IDENT_11 + ( METHOD_10 ( IDENT_9 ) ) ; final net . ripe . db . whois . common . IDENT_0 . IDENT_6 IDENT_21 = new net . ripe . db . whois . common . IDENT_0 . METHOD_11 ( IDENT_9 . getKey ( ) , IDENT_20 ) ; IDENT_7 . put ( IDENT_9 , IDENT_21 ) ; for ( final net . ripe . db . whois . common . Message IDENT_22 : IDENT_17 ) { IDENT_4 . METHOD_12 ( IDENT_21 , IDENT_22 ) ; } } return new net . ripe . db . whois . common . IDENT_0 . METHOD_13 ( object ) . METHOD_14 ( IDENT_7 ) . get ( ) ; }
org . junit . Assert . assertThat ( result , org . hamcrest . Matchers . is ( IDENT_2 ) ) 