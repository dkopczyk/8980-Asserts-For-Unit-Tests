METHOD_0 ( ) { METHOD_1 ( new java . lang . RuntimeException ( STRING_0 ) ) . when ( IDENT_0 ) . METHOD_2 ( anyString ( ) , METHOD_3 ( ) ) ; final java . lang . String result = subject . METHOD_2 ( STRING_1 , STRING_2 ) ; verify ( IDENT_0 ) . METHOD_2 ( STRING_1 , false ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String , boolean ) { final java . util . Set < net . ripe . db . whois . common . domain . IDENT_1 > IDENT_2 = METHOD_4 ( IDENT_3 ) ; net . ripe . db . whois . IDENT_4 . task . IDENT_5 . IDENT_6 . LOGGER . info ( STRING_3 , IDENT_2 ) ; final java . util . List < java . util . concurrent . IDENT_7 > IDENT_8 = com . google . common . collect . Lists . METHOD_5 ( IDENT_2 . size ( ) ) ; for ( final net . ripe . db . whois . common . domain . IDENT_1 IDENT_9 : IDENT_2 ) { final net . ripe . db . whois . IDENT_4 . task . IDENT_5 . IDENT_10 IDENT_11 = IDENT_12 . get ( IDENT_9 ) ; if ( IDENT_11 == null ) { net . ripe . db . whois . IDENT_4 . task . IDENT_5 . IDENT_6 . LOGGER . warn ( STRING_4 , IDENT_9 ) ; continue ; } IDENT_8 . add ( IDENT_13 . METHOD_6 ( new java . lang . METHOD_7 ( ) { @ net . ripe . db . whois . IDENT_4 . task . IDENT_5 . Override public void run ( ) { if ( ! ( IDENT_14 . add ( IDENT_9 ) ) ) { IDENT_11 . METHOD_8 ( ) . warn ( STRING_5 ) ; return ; } try { net . ripe . db . whois . IDENT_4 . task . IDENT_5 . IDENT_6 . LOGGER . info ( STRING_6 , IDENT_9 ) ; IDENT_15 . METHOD_2 ( IDENT_11 , IDENT_16 ) ; } catch ( java . lang . RuntimeException e ) { IDENT_11 . METHOD_8 ( ) . error ( STRING_7 , e ) ; } finally { IDENT_14 . remove ( IDENT_9 ) ; } } } ) ) ; } return IDENT_8 ; }
org . junit . Assert . assertNull ( result ) 