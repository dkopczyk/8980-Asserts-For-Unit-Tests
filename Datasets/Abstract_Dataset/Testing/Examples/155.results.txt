METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . route . IDENT_2 IDENT_3 = mock ( com . IDENT_0 . IDENT_1 . route . IDENT_2 . class ) ; com . IDENT_0 . IDENT_1 . IDENT_4 . helpers . IDENT_5 helper = new com . IDENT_0 . IDENT_1 . IDENT_4 . helpers . METHOD_1 ( ) ; com . github . IDENT_6 . IDENT_4 . Context context = com . github . IDENT_6 . IDENT_4 . Context . METHOD_2 ( new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ) ; context . data ( STRING_0 , IDENT_3 ) ; com . github . IDENT_6 . IDENT_4 . IDENT_7 template = mock ( com . github . IDENT_6 . IDENT_4 . IDENT_7 . class ) ; com . github . IDENT_6 . IDENT_4 . IDENT_8 options = new com . github . IDENT_6 . IDENT_4 . METHOD_3 ( new com . github . IDENT_6 . IDENT_4 . METHOD_4 ( ) , "name" , com . github . IDENT_6 . IDENT_4 . IDENT_9 . IDENT_10 , context , template , template , new java . lang . Object [ 0 ] , new java . util . HashMap < java . lang . String , java . lang . Object > ( ) , new java . util . ArrayList < java . lang . String > ( ) ) ; java . lang . String result = helper . route ( STRING_1 , options ) ; "<AssertPlaceHolder>" ; } route ( java . lang . String , com . github . IDENT_6 . IDENT_4 . METHOD_3 ) { com . IDENT_0 . IDENT_1 . route . IDENT_2 IDENT_11 = options . get ( STRING_0 ) ; com . IDENT_0 . IDENT_1 . route . IDENT_12 route = IDENT_11 . METHOD_5 ( name ) ; java . lang . String url = "" ; if ( route != null ) { url = route . METHOD_6 ( options . hash ) . METHOD_7 ( ) ; } return url ; }
org . junit . Assert . assertThat ( result , org . hamcrest . Matchers . is ( "" ) ) 