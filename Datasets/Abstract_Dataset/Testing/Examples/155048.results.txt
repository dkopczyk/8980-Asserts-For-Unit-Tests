METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; byte [ ] IDENT_4 = IDENT_5 ; java . lang . String IDENT_6 = STRING_0 ; byte [ ] IDENT_7 = getBytes ( IDENT_6 ) ; final int IDENT_8 = INT_0 ; final int IDENT_9 = 50 ; java . lang . Integer [ ] IDENT_10 = new java . lang . Integer [ ] { INT_1 } ; java . util . List < java . lang . Integer > IDENT_11 = IDENT_3 . METHOD_2 ( IDENT_4 , METHOD_2 , IDENT_8 , IDENT_9 ) ; java . lang . Integer [ ] IDENT_12 = IDENT_11 . toArray ( new java . lang . Integer [ ] { } ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( byte [ ] , byte [ ] , int , int ) { final int IDENT_13 = METHOD_2 . length ; final java . util . List < java . lang . Integer > IDENT_14 = new java . util . ArrayList < java . lang . Integer > ( ) ; int IDENT_15 = IDENT_16 ; while ( IDENT_15 < ( IDENT_17 + 1 ) ) { final int index = indexOf ( IDENT_4 , METHOD_2 , IDENT_15 , IDENT_17 ) ; if ( index >= 0 ) { IDENT_14 . add ( index ) ; IDENT_15 = index + IDENT_13 ; } else { IDENT_15 ++ ; } } return IDENT_14 ; }
org . junit . Assert . assertTrue ( java . util . Arrays . equals ( IDENT_10 , IDENT_12 ) ) 