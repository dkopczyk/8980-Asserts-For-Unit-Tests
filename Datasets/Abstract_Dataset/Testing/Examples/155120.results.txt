METHOD_0 ( ) { byte [ ] IDENT_0 = org . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( INT_0 ) ; final java . lang . String IDENT_4 = STRING_0 ; org . IDENT_1 . IDENT_2 . IDENT_5 IDENT_6 = new org . IDENT_1 . IDENT_2 . METHOD_2 ( ) ; byte [ ] data = IDENT_6 . METHOD_3 ( IDENT_0 , IDENT_4 . METHOD_4 ( ) ) ; data [ ( ( data . length ) - 1 ) ] = ( ( byte ) ( ( data [ ( ( data . length ) - 1 ) ] ) + 1 ) ) ; java . io . InputStream in = new org . IDENT_1 . IDENT_2 . METHOD_5 ( new java . io . ByteArrayInputStream ( data ) , IDENT_4 . METHOD_4 ( ) ) ; try { byte [ ] result = new byte [ IDENT_0 . length ] ; org . apache . commons . io . IDENT_7 . METHOD_6 ( in , result ) ; "<AssertPlaceHolder>" ; } finally { in . close ( ) ; } } METHOD_3 ( byte [ ] , char [ ] ) { org . IDENT_1 . IDENT_2 . IDENT_8 . METHOD_7 ( IDENT_0 , STRING_1 ) ; org . IDENT_1 . IDENT_2 . IDENT_8 . METHOD_7 ( IDENT_4 , STRING_2 ) ; org . IDENT_1 . IDENT_2 . IDENT_8 . METHOD_8 ( ( ( IDENT_4 . length ) > 0 ) , STRING_3 ) ; byte [ ] IDENT_9 = org . IDENT_1 . IDENT_2 . METHOD_2 . METHOD_9 ( org . IDENT_1 . IDENT_2 . METHOD_2 . IDENT_10 ) ; byte [ ] IDENT_11 = org . IDENT_1 . IDENT_2 . METHOD_2 . METHOD_9 ( org . IDENT_1 . IDENT_2 . METHOD_2 . IDENT_10 ) ; byte [ ] IDENT_12 = org . IDENT_1 . IDENT_2 . METHOD_2 . METHOD_9 ( org . IDENT_1 . IDENT_2 . METHOD_2 . IDENT_13 ) ; return METHOD_3 ( IDENT_0 , IDENT_4 , IDENT_9 , IDENT_11 , IDENT_12 ) ; }
org . junit . Assert . assertArrayEquals ( IDENT_0 , result ) 