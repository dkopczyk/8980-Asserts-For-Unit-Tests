METHOD_0 ( ) { org . IDENT_0 . IDENT_1 container = new org . IDENT_0 . METHOD_1 ( org . IDENT_0 . IDENT_2 . METHOD_2 ( ) , ( 1 << 15 ) ) ; container . IDENT_3 [ INT_0 ] = 0L ; container . IDENT_4 OP_0 INT_1 ; "<AssertPlaceHolder>" ; } METHOD_3 ( int ) { int x = i > > 6 ; long IDENT_5 = IDENT_3 . get ( x ) ; IDENT_5 OP_1 i ; if ( IDENT_5 != 0 ) { return i + ( java . lang . Long . METHOD_4 ( IDENT_5 ) ) ; } for ( ++ x ; x < ( ( org . IDENT_0 . buffer . IDENT_6 . IDENT_7 ) / INT_2 ) ; ++ x ) { long IDENT_8 = IDENT_3 . get ( x ) ; if ( IDENT_8 != 0 ) { return ( x * INT_2 ) + ( java . lang . Long . METHOD_4 ( IDENT_8 ) ) ; } } return - 1 ; }
org . junit . Assert . assertEquals ( ( - 1 ) , container . METHOD_3 ( ( ( INT_2 * INT_0 ) + 5 ) ) ) 