METHOD_0 ( ) { final java . util . Date now = new java . util . Date ( ) ; final java . util . Date IDENT_0 = new java . util . Date ( ( ( now . getTime ( ) ) - ( 10 * INT_0 ) ) ) ; final org . apache . hc . core5 . http . IDENT_1 IDENT_2 = new org . apache . hc . core5 . http . message . METHOD_1 ( STRING_0 , "/" ) ; final org . apache . hc . core5 . http . IDENT_3 IDENT_4 = org . apache . hc . IDENT_5 . http . impl . cache . IDENT_6 . METHOD_2 ( ) ; IDENT_4 . METHOD_3 ( STRING_1 , org . apache . hc . IDENT_5 . http . utils . IDENT_7 . METHOD_4 ( IDENT_0 ) ) ; IDENT_4 . METHOD_3 ( STRING_2 , STRING_3 ) ; IDENT_4 . METHOD_3 ( STRING_2 0 , STRING_4 ) ; METHOD_5 ( IDENT_4 ) ; final org . apache . hc . core5 . http . IDENT_1 IDENT_8 = new org . apache . hc . core5 . http . message . METHOD_1 ( STRING_0 , "/" ) ; IDENT_8 . METHOD_3 ( STRING_2 , STRING_5 ) ; final org . apache . hc . core5 . http . IDENT_3 IDENT_9 = org . apache . hc . IDENT_5 . http . impl . cache . IDENT_6 . METHOD_2 ( ) ; final org . easymock . IDENT_10 < org . apache . hc . core5 . http . IDENT_1 > IDENT_11 = org . easymock . EasyMock . METHOD_6 ( ) ; org . easymock . EasyMock . expect ( IDENT_12 . METHOD_7 ( org . easymock . EasyMock . METHOD_8 ( IDENT_11 ) , org . easymock . EasyMock . METHOD_9 ( IDENT_13 . IDENT_14 . class ) ) ) . andReturn ( IDENT_9 ) . times ( 0 , 1 ) ; METHOD_10 ( ) ; execute ( IDENT_2 ) ; final org . apache . hc . core5 . http . IDENT_3 result = execute ( IDENT_8 ) ; METHOD_11 ( ) ; if ( ! ( IDENT_11 . METHOD_12 ( ) ) ) { boolean IDENT_15 = false ; final java . util . Iterator < org . apache . hc . core5 . http . IDENT_16 > it = org . apache . hc . core5 . http . message . IDENT_17 . METHOD_13 ( result , IDENT_18 . IDENT_19 ) ; while ( it . hasNext ( ) ) { final org . apache . hc . core5 . http . IDENT_16 IDENT_20 = it . next ( ) ; final java . lang . String [ ] IDENT_21 = IDENT_20 . getName ( ) . split ( STRING_6 ) ; if ( STRING_7 . equals ( IDENT_21 [ 0 ] ) ) { IDENT_15 = true ; break ; } } "<AssertPlaceHolder>" ; } } split ( java . lang . String ) { if ( org . apache . hc . core5 . util . IDENT_22 . METHOD_14 ( s ) ) { return null ; } return s . split ( STRING_8 ) ; }
org . junit . Assert . assertTrue ( IDENT_15 ) 