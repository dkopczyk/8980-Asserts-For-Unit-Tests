select ( ) { java . nio . IDENT_0 buffer = java . nio . IDENT_0 . METHOD_0 ( ( ( org . IDENT_1 . buffer . IDENT_2 . IDENT_3 ) / INT_0 ) ) ; buffer . put ( ( OP_0 0L ) ) ; buffer . put ( ( OP_0 0L ) ) ; org . IDENT_1 . buffer . IDENT_4 IDENT_5 = new org . IDENT_1 . buffer . METHOD_1 ( buffer . METHOD_2 ( ) , INT_0 ) ; "<AssertPlaceHolder>" ; } select ( int ) { long IDENT_6 = org . IDENT_1 . IDENT_7 . METHOD_3 ( j ) ; for ( int i = 0 ; i < ( this . IDENT_8 . size ( ) ) ; i ++ ) { int IDENT_9 = this . IDENT_8 . METHOD_4 ( i ) ; if ( IDENT_9 > IDENT_6 ) { int IDENT_10 = ( this . IDENT_8 . METHOD_5 ( i ) ) << 16 ; org . IDENT_1 . buffer . IDENT_4 c = this . IDENT_8 . METHOD_6 ( i ) ; int IDENT_11 = org . IDENT_1 . buffer . IDENT_12 . IDENT_12 . METHOD_7 ( c . select ( ( ( int ) ( IDENT_6 ) ) ) ) ; return IDENT_11 + IDENT_10 ; } IDENT_6 OP_1 IDENT_9 ; } throw new java . lang . IllegalArgumentException ( ( ( ( ( STRING_0 + j ) + STRING_1 ) + ( this . METHOD_4 ( ) ) ) + STRING_2 ) ) ; }
org . junit . Assert . assertEquals ( 100 , IDENT_5 . select ( 100 ) ) 