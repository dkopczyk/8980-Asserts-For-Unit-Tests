METHOD_0 ( ) { java . lang . String url = STRING_0 ; java . lang . String IDENT_0 = STRING_1 ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . net . URI , java . lang . String ) { if ( IDENT_1 == null ) throw new java . lang . IllegalArgumentException ( STRING_2 ) ; IDENT_1 = IDENT_1 . replaceAll ( STRING_3 , "/" ) ; java . net . URI IDENT_2 = null ; try { IDENT_2 = net . IDENT_3 . core . utils . IDENT_4 . METHOD_2 ( new java . net . URL ( IDENT_1 ) ) ; } catch ( java . lang . Exception e ) { try { if ( ( ! ( IDENT_5 . toString ( ) . METHOD_3 ( "/" ) ) ) && ( ! ( IDENT_1 . startsWith ( "/" ) ) ) ) IDENT_5 = new java . net . URI ( ( ( IDENT_5 . toString ( ) ) + "/" ) ) ; IDENT_2 = IDENT_5 . resolve ( new java . net . URI ( null , IDENT_1 , null ) ) ; } catch ( java . lang . Exception IDENT_6 ) { java . lang . String msg = ( ( ( STRING_4 + ( IDENT_5 . toString ( ) ) ) + STRING_5 ) + IDENT_1 ) + STRING_6 ; throw new java . net . METHOD_4 ( msg , IDENT_6 . getMessage ( ) ) ; } } return IDENT_2 . METHOD_5 ( ) ; }
org . junit . Assert . assertEquals ( new java . net . URI ( ( ( url + "/" ) + IDENT_0 ) ) , net . IDENT_3 . core . utils . IDENT_4 . METHOD_1 ( new java . net . URI ( url ) , IDENT_0 ) ) 