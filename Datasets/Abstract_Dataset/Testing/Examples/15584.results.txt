METHOD_0 ( ) { request = new org . apache . hc . core5 . http . message . METHOD_1 ( STRING_0 , STRING_1 ) ; response = new org . apache . hc . core5 . http . message . METHOD_2 ( org . apache . hc . core5 . http . IDENT_0 . IDENT_1 , STRING_2 ) ; response . METHOD_3 ( IDENT_2 . IDENT_3 ) ; response . METHOD_4 ( STRING_3 , org . apache . hc . IDENT_4 . http . utils . IDENT_5 . METHOD_5 ( now ) ) ; response . METHOD_4 ( STRING_4 , org . apache . hc . IDENT_4 . http . utils . IDENT_5 . METHOD_5 ( IDENT_6 ) ) ; response . METHOD_4 ( STRING_5 , STRING_6 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( org . apache . hc . core5 . http . IDENT_7 , org . apache . hc . core5 . http . IDENT_8 ) { final org . apache . hc . core5 . http . IDENT_9 version = ( ( request . METHOD_7 ( ) ) != null ) ? request . METHOD_7 ( ) : org . apache . hc . core5 . http . IDENT_2 . IDENT_10 ; if ( ( version . METHOD_8 ( IDENT_2 . IDENT_11 ) ) > 0 ) { if ( log . METHOD_9 ( ) ) { log . debug ( ( ( STRING_7 + version ) + STRING_8 ) ) ; } return false ; } final java . lang . String [ ] IDENT_12 = new java . lang . String [ ] { org . apache . hc . IDENT_4 . http . cache . IDENT_13 . IDENT_14 } ; if ( METHOD_10 ( request , IDENT_12 ) ) { log . debug ( STRING_9 ) ; return false ; } if ( request . METHOD_11 ( ) . contains ( STRING_10 ) ) { if ( ( IDENT_15 ) && ( METHOD_12 ( response ) ) ) { log . debug ( STRING_11 ) ; return false ; } else if ( ! ( METHOD_13 ( response ) ) ) { log . debug ( STRING_12 ) ; return false ; } } if ( METHOD_14 ( response ) ) { log . debug ( STRING_13 ) ; return false ; } if ( IDENT_16 ) { if ( ( ( request . METHOD_15 ( IDENT_13 . IDENT_17 ) ) > 0 ) && ( ! ( METHOD_10 ( response , org . apache . hc . IDENT_4 . http . impl . cache . IDENT_18 . IDENT_19 ) ) ) ) { log . debug ( STRING_14 ) ; return false ; } } final java . lang . String method = request . METHOD_16 ( ) ; return METHOD_6 ( method , response ) ; }
org . junit . Assert . assertTrue ( policy . METHOD_6 ( request , response ) ) 