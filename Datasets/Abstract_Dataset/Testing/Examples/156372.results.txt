METHOD_0 ( ) { com . IDENT_0 . plan . db . IDENT_1 . db . METHOD_1 ( com . IDENT_0 . plan . db . IDENT_2 . METHOD_2 ( ) ) ; METHOD_3 ( com . IDENT_0 . plan . db . IDENT_2 . METHOD_4 ( ) ) ; METHOD_3 ( com . IDENT_0 . plan . db . IDENT_2 . METHOD_5 ( ) ) ; com . IDENT_0 . plan . db . IDENT_3 IDENT_4 = com . IDENT_0 . plan . db . IDENT_2 . METHOD_6 ( ) ; com . IDENT_0 . plan . db . IDENT_3 IDENT_5 = com . IDENT_0 . plan . db . IDENT_2 . METHOD_7 ( ) ; com . IDENT_0 . plan . data . store . IDENT_6 . IDENT_7 . IDENT_8 factory = METHOD_8 ( ) ; com . IDENT_0 . plan . data . store . IDENT_6 . IDENT_7 IDENT_9 = factory . METHOD_9 ( com . IDENT_0 . plan . db . IDENT_1 . db . query ( com . IDENT_0 . plan . db . IDENT_10 . IDENT_11 . IDENT_6 . IDENT_12 . METHOD_10 ( IDENT_13 . IDENT_14 ) ) ) ; com . IDENT_0 . plan . db . Map < com . IDENT_0 . plan . db . UUID , java . lang . String > expected = new com . IDENT_0 . plan . db . HashMap ( ) ; expected . put ( IDENT_4 . METHOD_11 ( ) , IDENT_4 . getName ( ) ) ; expected . put ( IDENT_5 . METHOD_11 ( ) , IDENT_5 . getName ( ) ) ; com . IDENT_0 . plan . db . Map < com . IDENT_0 . plan . db . UUID , java . lang . String > result = IDENT_9 . getValue ( IDENT_15 . IDENT_16 ) . METHOD_12 ( IDENT_17 :: new ) ; "<AssertPlaceHolder>" ; } getValue ( com . IDENT_0 . plan . data . store . IDENT_18 ) { java . util . function . IDENT_19 < T > IDENT_20 = METHOD_13 ( key ) ; if ( IDENT_20 == null ) { return java . util . Optional . empty ( ) ; } try { return java . util . Optional . METHOD_14 ( IDENT_20 . get ( ) ) ; } catch ( java . lang . IDENT_21 e ) { return java . util . Optional . empty ( ) ; } }
org . junit . Assert . assertEquals ( expected , result ) 