METHOD_0 ( ) { IDENT_0 . javascript . IDENT_1 IDENT_2 = mock ( IDENT_0 . javascript . IDENT_1 . class ) ; com . IDENT_3 . IDENT_4 . javascript . IDENT_5 IDENT_6 = mock ( com . IDENT_3 . IDENT_4 . javascript . IDENT_5 . class ) ; java . lang . Object [ ] IDENT_7 = new java . lang . Object [ ] { IDENT_6 } ; java . lang . Object [ ] IDENT_8 = new java . lang . Object [ ] { IDENT_2 } ; java . lang . String function = STRING_0 ; java . lang . String result = STRING_1 ; when ( IDENT_6 . METHOD_1 ( ) ) . thenReturn ( IDENT_2 ) ; when ( IDENT_9 . call ( function , IDENT_8 ) ) . thenReturn ( result ) ; java . lang . Object IDENT_10 = IDENT_11 . METHOD_2 ( function , IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String , java . lang . Object [ ] ) { java . lang . Object [ ] IDENT_12 = new java . lang . Object [ args . length ] ; for ( int i = 0 ; i < ( IDENT_12 . length ) ; i ++ ) { if ( ( args [ i ] ) instanceof com . IDENT_3 . IDENT_4 . javascript . IDENT_5 ) { IDENT_12 [ i ] = ( ( com . IDENT_3 . IDENT_4 . javascript . IDENT_5 ) ( args [ i ] ) ) . METHOD_1 ( ) ; } else if ( ( args [ i ] ) instanceof com . IDENT_3 . IDENT_4 . javascript . IDENT_13 ) { IDENT_12 [ i ] = ( ( com . IDENT_3 . IDENT_4 . javascript . IDENT_13 ) ( args [ i ] ) ) . METHOD_3 ( ) ; } else { IDENT_12 [ i ] = args [ i ] ; } } return METHOD_4 ( IDENT_14 . call ( function , ( ( java . lang . Object [ ] ) ( IDENT_12 ) ) ) ) ; }
org . junit . Assert . assertEquals ( result , IDENT_10 ) 