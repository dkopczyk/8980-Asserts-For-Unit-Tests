METHOD_0 ( ) { byte [ ] IDENT_0 = new byte [ 8 ] ; byte [ ] IDENT_1 = de . IDENT_2 . IDENT_3 . IDENT_4 . util . IDENT_5 . METHOD_1 ( de . IDENT_2 . IDENT_3 . IDENT_4 . util . IDENT_5 . METHOD_2 ( STRING_0 ) , IDENT_0 ) ; byte [ ] key = de . IDENT_2 . IDENT_3 . IDENT_4 . util . IDENT_5 . METHOD_2 ( STRING_1 ) ; byte [ ] IDENT_6 = de . IDENT_2 . IDENT_3 . IDENT_4 . util . IDENT_5 . METHOD_2 ( STRING_2 ) ; byte [ ] IDENT_7 = de . IDENT_2 . IDENT_3 . IDENT_4 . util . IDENT_5 . METHOD_2 ( STRING_3 ) ; byte [ ] IDENT_8 = de . IDENT_2 . IDENT_3 . IDENT_4 . util . IDENT_5 . METHOD_2 ( STRING_4 ) ; de . IDENT_2 . IDENT_3 . IDENT_9 . core . crypto . IDENT_10 . IDENT_11 IDENT_12 = new de . IDENT_2 . IDENT_3 . IDENT_9 . core . crypto . IDENT_10 . METHOD_3 ( key ) ; byte [ ] IDENT_13 = IDENT_12 . METHOD_4 ( IDENT_1 , 16 , IDENT_6 , IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( de . IDENT_2 . IDENT_3 . IDENT_9 . core . IDENT_14 . IDENT_15 , byte [ ] , byte [ ] , byte [ ] ) { byte [ ] result = new byte [ 0 ] ; try { byte [ ] IDENT_7 = de . IDENT_2 . IDENT_3 . IDENT_9 . core . util . IDENT_16 . METHOD_5 ( IDENT_17 , IDENT_18 . METHOD_6 ( ) ) ; javax . crypto . IDENT_19 IDENT_10 = javax . crypto . IDENT_19 . getInstance ( IDENT_18 . METHOD_7 ( ) ) ; de . IDENT_2 . IDENT_3 . IDENT_9 . core . IDENT_14 . IDENT_20 IDENT_21 = de . IDENT_2 . IDENT_3 . IDENT_9 . core . IDENT_14 . IDENT_20 . METHOD_8 ( IDENT_18 ) ; javax . crypto . spec . IDENT_22 IDENT_23 = new javax . crypto . spec . METHOD_9 ( key , IDENT_21 . METHOD_7 ( ) ) ; javax . crypto . spec . IDENT_24 IDENT_25 = new javax . crypto . spec . METHOD_10 ( IDENT_1 ) ; IDENT_10 . init ( IDENT_19 . IDENT_26 , IDENT_23 , IDENT_25 ) ; result = IDENT_10 . METHOD_11 ( IDENT_7 ) ; } catch ( java . security . IDENT_27 | java . security . IDENT_28 | javax . crypto . IDENT_29 | javax . crypto . IDENT_30 | javax . crypto . IDENT_31 | java . security . IDENT_32 ex ) { throw new de . IDENT_2 . IDENT_3 . IDENT_9 . core . exceptions . METHOD_12 ( STRING_5 , ex ) ; } return result ; }
org . junit . Assert . assertArrayEquals ( IDENT_8 , IDENT_13 ) 