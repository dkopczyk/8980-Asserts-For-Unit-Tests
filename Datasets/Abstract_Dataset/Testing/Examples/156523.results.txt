METHOD_0 ( ) { de . IDENT_0 . IDENT_1 . IDENT_2 . core . crypto . IDENT_3 . IDENT_4 IDENT_3 = new de . IDENT_0 . IDENT_1 . IDENT_2 . core . crypto . IDENT_3 . METHOD_1 ( ) ; byte [ ] IDENT_5 = IDENT_3 . METHOD_2 ( IDENT_6 , IDENT_7 , IDENT_8 , IDENT_9 ) ; IDENT_3 . METHOD_3 ( IDENT_8 ) ; byte [ ] IDENT_10 = IDENT_3 . METHOD_4 ( IDENT_6 , IDENT_7 , IDENT_8 , IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( byte [ ] , int , byte [ ] , byte [ ] ) { this . IDENT_3 . init ( false , new org . IDENT_11 . crypto . params . METHOD_5 ( new org . IDENT_11 . crypto . params . METHOD_6 ( this . key , 0 , this . key . length ) , this . IDENT_12 , 0 , de . IDENT_0 . IDENT_1 . IDENT_2 . core . record . IDENT_3 . IDENT_13 . IDENT_14 ) ) ; IDENT_15 = IDENT_16 . length ; int IDENT_17 = ( IDENT_18 . length ) - ( de . IDENT_0 . IDENT_1 . IDENT_2 . core . record . IDENT_3 . IDENT_13 . IDENT_19 ) ; byte [ ] IDENT_20 = new byte [ METHOD_7 ( false , IDENT_18 . length ) ] ; int IDENT_21 = IDENT_22 . length ; byte [ ] IDENT_23 = org . IDENT_11 . util . Arrays . METHOD_8 ( IDENT_22 , ( IDENT_21 - ( de . IDENT_0 . IDENT_1 . IDENT_2 . core . record . IDENT_3 . IDENT_13 . IDENT_24 ) ) , IDENT_21 ) ; byte [ ] IDENT_25 = org . IDENT_11 . util . Arrays . METHOD_8 ( IDENT_22 , 0 , ( IDENT_21 - ( de . IDENT_0 . IDENT_1 . IDENT_2 . core . record . IDENT_3 . IDENT_13 . IDENT_24 ) ) ) ; byte [ ] IDENT_26 = METHOD_9 ( IDENT_23 , IDENT_25 ) ; this . IDENT_3 . init ( false , new org . IDENT_11 . crypto . params . METHOD_5 ( null , IDENT_26 ) ) ; METHOD_10 ( ) ; METHOD_11 ( IDENT_16 , 0 , IDENT_15 ) ; METHOD_11 ( IDENT_18 , 0 , IDENT_17 ) ; byte [ ] IDENT_27 = de . IDENT_0 . IDENT_1 . IDENT_28 . util . IDENT_29 . METHOD_12 ( de . IDENT_0 . IDENT_1 . IDENT_28 . util . IDENT_29 . METHOD_13 ( java . lang . Long . valueOf ( IDENT_15 ) , 8 ) ) ; byte [ ] IDENT_30 = de . IDENT_0 . IDENT_1 . IDENT_28 . util . IDENT_29 . METHOD_12 ( de . IDENT_0 . IDENT_1 . IDENT_28 . util . IDENT_29 . METHOD_13 ( java . lang . Long . valueOf ( IDENT_17 ) , 8 ) ) ; byte [ ] IDENT_31 = de . IDENT_0 . IDENT_1 . IDENT_28 . util . IDENT_29 . METHOD_14 ( IDENT_27 , IDENT_30 , 8 ) ; this . IDENT_32 . update ( IDENT_31 , 0 , IDENT_13 . IDENT_19 ) ; this . IDENT_32 . METHOD_15 ( IDENT_31 , 0 ) ; byte [ ] IDENT_33 = org . IDENT_11 . util . Arrays . METHOD_8 ( IDENT_18 , IDENT_17 , IDENT_18 . length ) ; if ( ! ( org . IDENT_11 . util . Arrays . METHOD_16 ( IDENT_31 , IDENT_33 ) ) ) { de . IDENT_0 . IDENT_1 . IDENT_2 . core . crypto . IDENT_3 . IDENT_34 . LOGGER . warn ( STRING_0 ) ; } this . IDENT_3 . METHOD_17 ( IDENT_18 , 0 , IDENT_17 , IDENT_20 , 0 ) ; return IDENT_20 ; }
org . junit . Assert . assertArrayEquals ( IDENT_9 , IDENT_10 ) 