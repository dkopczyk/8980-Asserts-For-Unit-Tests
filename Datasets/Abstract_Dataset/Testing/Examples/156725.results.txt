METHOD_0 ( ) { IDENT_0 . ByteArrayOutputStream out = new IDENT_0 . ByteArrayOutputStream ( ) ; IDENT_0 . IDENT_1 [ ] IDENT_2 = new IDENT_0 . IDENT_1 [ ] { STRING_0 , 1 , STRING_1 } ; try ( IDENT_0 . IDENT_3 IDENT_4 = new IDENT_0 . METHOD_1 ( out , IDENT_0 . IDENT_5 . conf ) ) { for ( IDENT_0 . IDENT_1 o : IDENT_2 ) { IDENT_4 . METHOD_2 ( o ) ; } } byte [ ] buf = out . toByteArray ( ) ; IDENT_0 . InputStream in = new IDENT_0 . ByteArrayInputStream ( buf ) ; IDENT_0 . IDENT_6 IDENT_7 = new IDENT_0 . METHOD_3 ( in , IDENT_0 . IDENT_5 . conf ) ; for ( java . lang . Object o : IDENT_2 ) { java . lang . Object obj = IDENT_7 . METHOD_4 ( ) ; System . out . println ( obj ) ; "<AssertPlaceHolder>" ; } } METHOD_4 ( ) { byte type = METHOD_5 ( ) ; if ( type == ( IDENT_8 . IDENT_9 ) ) { METHOD_6 ( ) ; return IDENT_8 . IDENT_10 ; } if ( org . IDENT_11 . serialization . IDENT_12 . IDENT_8 . METHOD_7 ( type ) ) { if ( org . IDENT_11 . serialization . IDENT_12 . IDENT_8 . METHOD_8 ( type ) ) { return METHOD_9 ( ) ; } switch ( type ) { case IDENT_8 . IDENT_13 : return ( ( byte ) ( METHOD_10 ( ) ) ) ; case IDENT_8 . IDENT_14 : return ( ( short ) ( METHOD_10 ( ) ) ) ; case IDENT_8 . IDENT_15 : return ( ( char ) ( METHOD_10 ( ) ) ) ; case IDENT_8 . IDENT_16 : return ( ( int ) ( METHOD_10 ( ) ) ) ; case IDENT_8 . IDENT_17 : return ( ( long ) ( METHOD_10 ( ) ) ) ; default : throw new java . lang . RuntimeException ( ( STRING_2 + type ) ) ; } } else { if ( ( org . IDENT_11 . serialization . IDENT_12 . IDENT_8 . METHOD_11 ( type ) ) == ( IDENT_8 . IDENT_18 ) ) { return new org . IDENT_11 . serialization . IDENT_12 . METHOD_12 ( ( ( java . lang . Integer ) ( METHOD_13 ( METHOD_6 ( ) ) ) ) ) ; } return METHOD_13 ( METHOD_6 ( ) ) ; } }
org . junit . Assert . assertEquals ( o , obj ) 