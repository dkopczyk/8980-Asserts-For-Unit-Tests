METHOD_0 ( ) { IDENT_0 . IDENT_1 < java . lang . Integer > range = IDENT_0 . IDENT_1 . range ( 0 , ( ( examples . IDENT_2 . IDENT_3 . IDENT_4 ) / 4 ) ) ; org . IDENT_5 . IDENT_6 < java . lang . Integer > pub = IDENT_0 . IDENT_7 . METHOD_1 ( range ) ; org . IDENT_8 . IDENT_9 . IDENT_5 . IDENT_10 . get ( ) . METHOD_2 ( pub ) . METHOD_3 ( new org . IDENT_8 . IDENT_9 . IDENT_11 . IDENT_12 . METHOD_4 ( ) . port ( INT_0 ) ) ; org . IDENT_8 . IDENT_9 . util . IDENT_13 IDENT_14 = new org . IDENT_8 . IDENT_9 . util . METHOD_5 ( STRING_0 ) ; org . IDENT_8 . IDENT_9 . IDENT_5 . IDENT_15 < java . lang . Integer > IDENT_16 = org . IDENT_8 . IDENT_9 . IDENT_5 . IDENT_10 . get ( ) . connect ( examples . IDENT_2 . Integer . class , new org . IDENT_8 . IDENT_9 . IDENT_11 . IDENT_12 . METHOD_6 ( ) . host ( STRING_1 ) . port ( INT_0 ) ) ; java . util . concurrent . IDENT_17 IDENT_18 = new java . util . concurrent . METHOD_7 ( ( ( examples . IDENT_2 . IDENT_3 . IDENT_4 ) / 4 ) ) ; IDENT_0 . IDENT_7 . METHOD_8 ( IDENT_16 ) . METHOD_9 ( ( i ) -> { IDENT_14 . count ( ) ; IDENT_18 . METHOD_10 ( ) ; } ) ; IDENT_18 . METHOD_11 ( 50 , TimeUnit . IDENT_19 ) ; "<AssertPlaceHolder>" ; } METHOD_12 ( ) { return count . get ( ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_18 . METHOD_12 ( ) ) == 0 ) ) 