METHOD_0 ( ) { javax . crypto . IDENT_0 IDENT_1 = javax . crypto . IDENT_0 . getInstance ( STRING_0 ) ; IDENT_1 . init ( INT_0 ) ; javax . crypto . IDENT_2 k = IDENT_1 . METHOD_1 ( ) ; byte [ ] IDENT_3 = IDENT_4 . IDENT_5 . serialization . IDENT_6 . serialize ( k ) ; javax . crypto . IDENT_2 IDENT_7 = IDENT_4 . IDENT_5 . serialization . IDENT_6 . METHOD_2 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( byte [ ] ) { try { return ( ( javax . crypto . IDENT_2 ) ( IDENT_4 . IDENT_5 . serialization . IDENT_6 . METHOD_3 ( bytes ) ) ) ; } catch ( java . lang . IDENT_8 e ) { throw new IDENT_4 . IDENT_5 . serialization . METHOD_4 ( STRING_1 , e ) ; } }
org . junit . Assert . assertEquals ( k , IDENT_7 ) 