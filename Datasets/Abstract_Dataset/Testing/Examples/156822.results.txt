METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; byte [ ] IDENT_1 = IDENT_2 . METHOD_1 ( IDENT_0 ) ; java . lang . String IDENT_3 = IDENT_2 . METHOD_2 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( byte [ ] ) { java . lang . StringBuilder out = new java . lang . StringBuilder ( ) ; for ( int i = 0 ; i < ( IDENT_4 . length ) ; i ++ ) { char b = ( ( char ) ( 255 & ( IDENT_4 [ i ] ) ) ) ; if ( b == INT_0 ) { out . append ( ( ( char ) ( IDENT_4 [ ( ++ i ) ] ) ) ) ; } else if ( b == 255 ) { byte length = IDENT_4 [ ( ++ i ) ] ; for ( int j = 1 ; j <= length ; j ++ ) { out . append ( ( ( char ) ( IDENT_4 [ ( i + j ) ] ) ) ) ; } i += length ; } else { int IDENT_5 = 255 & b ; out . append ( com . github . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 [ IDENT_5 ] ) ; } } return out . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_3 ) 