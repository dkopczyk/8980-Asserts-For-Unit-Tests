METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . util . Map < java . lang . String , java . lang . String > query = new java . util . HashMap < java . lang . String , java . lang . String > ( ) { { put ( STRING_1 , STRING_2 ) ; } } ; java . lang . String IDENT_1 = STRING_3 ; java . lang . String IDENT_2 = STRING_4 ; java . lang . String IDENT_3 = org . IDENT_4 . utils . IDENT_5 . METHOD_1 ( IDENT_0 , query , IDENT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . util . Map , java . lang . String ) { javax . crypto . spec . IDENT_6 IDENT_7 = new javax . crypto . spec . METHOD_2 ( IDENT_1 . getBytes ( org . IDENT_4 . utils . IDENT_5 . UTF_8 ) , org . IDENT_4 . utils . IDENT_5 . IDENT_8 ) ; java . util . List < java . lang . String > values = new java . util . ArrayList < java . lang . String > ( params . size ( ) ) ; for ( java . lang . String key : org . IDENT_4 . utils . IDENT_9 . METHOD_3 ( params ) ) { values . add ( java . lang . String . format ( STRING_5 , key , params . get ( key ) ) ) ; } java . lang . String IDENT_10 = java . lang . String . format ( STRING_6 , IDENT_0 , org . apache . commons . lang3 . StringUtils . join ( values , STRING_7 ) ) ; try { javax . crypto . IDENT_11 IDENT_12 = javax . crypto . IDENT_11 . getInstance ( org . IDENT_4 . utils . IDENT_5 . IDENT_8 ) ; IDENT_12 . init ( IDENT_7 ) ; byte [ ] result = IDENT_12 . METHOD_4 ( IDENT_10 . getBytes ( org . IDENT_4 . utils . IDENT_5 . UTF_8 ) ) ; return org . apache . commons . codec . IDENT_13 . IDENT_14 . METHOD_5 ( result ) ; } catch ( java . security . IDENT_15 e ) { throw new org . IDENT_4 . exceptions . METHOD_6 ( STRING_8 , e ) ; } catch ( java . security . IDENT_16 e ) { throw new org . IDENT_4 . exceptions . METHOD_6 ( ( STRING_9 + IDENT_1 ) , e ) ; } }
org . junit . Assert . assertEquals ( IDENT_2 , METHOD_1 ) 