METHOD_0 ( ) { final org . apache . hc . core5 . testing . framework . IDENT_0 adapter = new org . apache . hc . core5 . testing . framework . METHOD_1 ( ) { @ org . apache . hc . core5 . testing . framework . Override public java . util . Map < java . lang . String , java . lang . Object > execute ( final java . lang . String IDENT_1 , final java . util . Map < java . lang . String , java . lang . Object > request , final org . apache . hc . core5 . testing . framework . IDENT_2 IDENT_3 , final java . util . Map < java . lang . String , java . lang . Object > IDENT_4 ) throws org . apache . hc . core5 . testing . framework . IDENT_5 { final java . lang . String body = ( ( java . lang . String ) ( request . get ( org . apache . hc . core5 . testing . framework . IDENT_6 . IDENT_7 ) ) ) ; "<AssertPlaceHolder>" ; request . put ( org . apache . hc . core5 . testing . framework . IDENT_6 . IDENT_7 , ( ( request . get ( org . apache . hc . core5 . testing . framework . IDENT_6 . IDENT_7 ) ) + STRING_0 ) ) ; return super . execute ( IDENT_1 , request , IDENT_3 , IDENT_4 ) ; } } ; final org . apache . hc . core5 . testing . framework . IDENT_8 framework = METHOD_2 ( adapter ) ; framework . METHOD_3 ( ) ; try { framework . METHOD_4 ( ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( final org . apache . hc . core5 . testing . framework . IDENT_5 e ) { } } get ( int ) { int i = ( ( IDENT_9 ) - index ) - 1 ; if ( i < 0 ) { i = ( array . length ) + i ; } return array [ i ] ; }
org . junit . Assert . assertNotNull ( body ) 