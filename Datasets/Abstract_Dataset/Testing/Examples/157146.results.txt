METHOD_0 ( ) { java . lang . String path = STRING_0 ; java . lang . String id = IDENT_0 . METHOD_1 ( path ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { java . util . Map < java . lang . String , java . lang . Object > params = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; java . lang . String sql = org . sagebionetworks . repo . model . IDENT_1 . dao . IDENT_2 . METHOD_2 ( path , params ) ; try { java . util . List < java . util . Map < java . lang . String , java . lang . Object > > list = IDENT_3 . METHOD_3 ( sql , params ) ; if ( ( list == null ) || ( ( list . size ( ) ) < 1 ) ) return null ; if ( ( list . size ( ) ) > 1 ) throw new java . lang . IllegalStateException ( ( STRING_1 + path ) ) ; java . util . Map < java . lang . String , java . lang . Object > row = list . get ( 0 ) ; java . lang . Long id = ( ( java . lang . Long ) ( row . get ( org . sagebionetworks . repo . model . IDENT_1 . dao . IDENT_4 ) ) ) ; return org . sagebionetworks . repo . model . IDENT_5 . IDENT_6 . METHOD_4 ( id ) ; } catch ( org . springframework . jdbc . IDENT_7 e ) { if ( ( e . getMessage ( ) . indexOf ( STRING_2 ) ) > 0 ) return null ; throw e ; } }
org . junit . Assert . assertEquals ( null , id ) 