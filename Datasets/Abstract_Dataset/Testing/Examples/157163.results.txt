METHOD_0 ( ) { java . util . List < java . lang . String > IDENT_0 = com . google . common . collect . Lists . newArrayList ( ) ; byte [ ] bytes = org . sagebionetworks . repo . model . IDENT_1 . dao . IDENT_2 . METHOD_1 ( IDENT_0 ) ; java . util . List < java . lang . String > results = org . sagebionetworks . repo . model . IDENT_1 . dao . IDENT_2 . METHOD_2 ( bytes ) ; java . util . List < java . lang . String > expected = com . google . common . collect . Lists . newArrayList ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( byte [ ] ) { if ( IDENT_3 == null ) throw new java . lang . IllegalArgumentException ( STRING_0 ) ; try { java . util . List < java . lang . String > result = new java . util . IDENT_4 < java . lang . String > ( ) ; java . lang . String string = new java . lang . String ( IDENT_3 , STRING_1 ) ; if ( string . isEmpty ( ) ) { return result ; } java . lang . String [ ] split = string . split ( org . sagebionetworks . repo . model . IDENT_1 . dao . IDENT_2 . IDENT_5 ) ; for ( java . lang . String IDENT_6 : split ) { long value = java . lang . Long . METHOD_3 ( IDENT_6 ) ; result . add ( java . lang . Long . toString ( value ) ) ; } return result ; } catch ( java . io . IDENT_7 e ) { throw new java . lang . RuntimeException ( e ) ; } }
org . junit . Assert . assertEquals ( expected , results ) 