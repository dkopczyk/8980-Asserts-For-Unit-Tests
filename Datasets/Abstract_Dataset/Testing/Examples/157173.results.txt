METHOD_0 ( ) { org . sagebionetworks . repo . model . IDENT_0 dto = new org . sagebionetworks . repo . model . METHOD_1 ( ) ; dto . METHOD_2 ( STRING_0 ) ; dto . METHOD_3 ( "foo" ) ; dto . METHOD_4 ( "bar" ) ; dto . METHOD_5 ( STRING_1 ) ; dto . METHOD_6 ( STRING_2 ) ; java . lang . String IDENT_1 = org . sagebionetworks . schema . generator . IDENT_2 . METHOD_7 ( org . sagebionetworks . repo . model . METHOD_1 . class ) ; org . sagebionetworks . schema . IDENT_3 schema = new org . sagebionetworks . schema . METHOD_8 ( new org . sagebionetworks . schema . adapter . org . json . METHOD_9 ( IDENT_1 ) ) ; byte [ ] IDENT_4 = org . sagebionetworks . repo . model . IDENT_5 . dao . IDENT_6 . METHOD_10 ( dto , schema ) ; org . sagebionetworks . repo . model . METHOD_1 IDENT_7 = new org . sagebionetworks . repo . model . METHOD_1 ( ) ; org . sagebionetworks . repo . model . IDENT_5 . dao . IDENT_8 . METHOD_11 ( IDENT_4 , IDENT_7 , schema ) ; "<AssertPlaceHolder>" ; } METHOD_11 ( byte [ ] , java . lang . Object , org . sagebionetworks . schema . METHOD_8 ) { org . sagebionetworks . repo . model . IDENT_9 properties = null ; try { properties = org . sagebionetworks . repo . model . IDENT_10 . IDENT_11 . METHOD_12 ( IDENT_12 ) ; } catch ( java . io . IOException e ) { throw new org . sagebionetworks . repo . model . METHOD_13 ( e ) ; } java . util . Map < java . lang . String , org . sagebionetworks . schema . METHOD_8 > IDENT_13 = schema . METHOD_14 ( ) ; org . sagebionetworks . repo . model . IDENT_14 a = properties . METHOD_15 ( ) ; java . util . Map < java . lang . String , java . util . List < java . lang . String > > IDENT_15 = a . METHOD_16 ( ) ; for ( java . lang . String IDENT_16 : IDENT_13 . METHOD_17 ( ) ) { try { java . lang . reflect . Field field = dto . getClass ( ) . METHOD_18 ( IDENT_16 ) ; field . METHOD_19 ( true ) ; java . lang . Class IDENT_17 = field . getType ( ) ; if ( ! ( IDENT_17 . equals ( org . sagebionetworks . repo . model . IDENT_5 . dao . String . class ) ) ) { continue ; } java . util . List < java . lang . String > values = IDENT_15 . get ( IDENT_16 ) ; if ( ( values != null ) && ( ( values . size ( ) ) > 0 ) ) { field . set ( dto , values . get ( 0 ) ) ; } } catch ( java . lang . IDENT_18 | java . lang . IDENT_19 e ) { throw new java . lang . RuntimeException ( e ) ; } } }
org . junit . Assert . assertEquals ( dto , IDENT_7 ) 