METHOD_0 ( ) { final java . lang . String input = STRING_0 ; final org . apache . hc . core5 . http . io . IDENT_0 IDENT_1 = new org . apache . hc . core5 . http . impl . io . METHOD_1 ( 16 ) ; final java . io . ByteArrayOutputStream IDENT_2 = new java . io . ByteArrayOutputStream ( ) ; final org . apache . hc . core5 . http . impl . io . IDENT_3 out = new org . apache . hc . core5 . http . impl . io . METHOD_2 ( IDENT_1 , IDENT_2 , INT_0 ) ; out . write ( input . getBytes ( IDENT_4 . IDENT_5 ) ) ; out . METHOD_3 ( ) ; out . close ( ) ; out . close ( ) ; final org . apache . hc . core5 . http . io . IDENT_6 IDENT_7 = new org . apache . hc . core5 . http . impl . io . METHOD_4 ( 16 ) ; final java . io . ByteArrayInputStream IDENT_8 = new java . io . ByteArrayInputStream ( IDENT_2 . toByteArray ( ) ) ; final org . apache . hc . core5 . http . impl . io . IDENT_9 in = new org . apache . hc . core5 . http . impl . io . METHOD_5 ( IDENT_7 , IDENT_8 ) ; final byte [ ] d = new byte [ 10 ] ; final java . io . ByteArrayOutputStream result = new java . io . ByteArrayOutputStream ( ) ; int len = 0 ; while ( ( len = in . read ( d ) ) > 0 ) { result . write ( d , 0 , len ) ; } final java . lang . String output = new java . lang . String ( result . toByteArray ( ) , java . nio . IDENT_10 . IDENT_4 . IDENT_5 ) ; "<AssertPlaceHolder>" ; in . close ( ) ; } toByteArray ( ) { final java . nio . ByteBuffer IDENT_11 = this . buf . METHOD_6 ( ) ; IDENT_11 . METHOD_7 ( ) ; final byte [ ] bytes = new byte [ IDENT_11 . METHOD_8 ( ) ] ; IDENT_11 . get ( bytes ) ; return bytes ; }
org . junit . Assert . assertEquals ( input , output ) 