METHOD_0 ( ) { IDENT_0 . remove ( org . sagebionetworks . IDENT_1 . IDENT_2 . IDENT_3 ) ; when ( IDENT_4 . METHOD_1 ( ) ) . thenReturn ( IDENT_0 ) ; when ( IDENT_4 . METHOD_2 ( ) ) . thenReturn ( null ) ; org . sagebionetworks . IDENT_1 . IDENT_5 IDENT_6 = METHOD_3 ( ) ; com . amazonaws . auth . IDENT_7 IDENT_8 = IDENT_6 . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; verify ( IDENT_9 , times ( 1 ) ) . METHOD_4 ( ) ; } METHOD_4 ( ) { try { java . util . Properties properties = METHOD_5 ( ) ; if ( properties != null ) { java . lang . String IDENT_10 = com . amazonaws . util . StringUtils . trim ( properties . getProperty ( org . sagebionetworks . IDENT_1 . IDENT_2 . IDENT_3 ) ) ; java . lang . String IDENT_11 = com . amazonaws . util . StringUtils . trim ( properties . getProperty ( org . sagebionetworks . IDENT_1 . IDENT_2 . IDENT_12 ) ) ; if ( ( IDENT_10 != null ) && ( IDENT_11 != null ) ) { return new com . amazonaws . auth . METHOD_6 ( IDENT_10 , IDENT_11 ) ; } } throw new java . lang . IllegalStateException ( org . sagebionetworks . IDENT_1 . IDENT_2 . IDENT_13 ) ; } catch ( java . lang . Exception e ) { throw new java . lang . RuntimeException ( e ) ; } }
org . junit . Assert . assertNotNull ( IDENT_8 ) 