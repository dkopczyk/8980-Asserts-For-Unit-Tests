METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . entities . IDENT_2 entity = new com . IDENT_0 . IDENT_1 . entities . METHOD_1 ( ) ; entity . METHOD_2 ( STRING_0 ) ; entity = com . IDENT_0 . IDENT_1 . IDENT_3 . em . insert ( entity ) ; java . io . IDENT_4 out = null ; java . io . ByteArrayOutputStream IDENT_5 = new java . io . ByteArrayOutputStream ( ) ; try { out = new java . io . METHOD_3 ( IDENT_5 ) ; out . METHOD_4 ( entity ) ; } catch ( java . lang . Exception exp ) { org . junit . Assert . fail ( exp . toString ( ) ) ; } finally { com . IDENT_0 . IDENT_1 . IDENT_6 . close ( out ) ; } com . IDENT_0 . IDENT_1 . entities . METHOD_1 IDENT_7 = null ; java . io . IDENT_8 in = null ; try { in = new java . io . METHOD_5 ( new java . io . ByteArrayInputStream ( IDENT_5 . toByteArray ( ) ) ) ; IDENT_7 = ( ( com . IDENT_0 . IDENT_1 . entities . METHOD_1 ) ( in . METHOD_6 ( ) ) ) ; } catch ( java . lang . Exception exp ) { org . junit . Assert . fail ( exp . toString ( ) ) ; } finally { com . IDENT_0 . IDENT_1 . IDENT_6 . close ( in ) ; } "<AssertPlaceHolder>" ; } close ( java . io . IDENT_9 ) { if ( IDENT_10 != null ) { try { IDENT_10 . close ( ) ; } catch ( java . io . IOException exp ) { } } }
org . junit . Assert . assertEquals ( entity , IDENT_7 ) 