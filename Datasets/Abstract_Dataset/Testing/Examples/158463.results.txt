METHOD_0 ( ) { try ( com . IDENT_0 . IDENT_1 . IDENT_2 . sdk . IDENT_3 IDENT_4 = new com . IDENT_0 . IDENT_1 . IDENT_2 . sdk . METHOD_1 ( METHOD_2 ( STRING_0 ) ) ) { com . IDENT_0 . IDENT_1 . IDENT_2 . sdk . IDENT_5 IDENT_6 = IDENT_4 . METHOD_3 ( ) ; java . util . List < com . IDENT_0 . IDENT_1 . IDENT_2 . sdk . entity . IDENT_7 > IDENT_8 = java . util . Arrays . asList ( new com . IDENT_0 . IDENT_1 . IDENT_2 . sdk . entity . IDENT_7 [ ] { METHOD_4 ( ) } ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . sdk . METHOD_1 . IDENT_9 result = IDENT_6 . METHOD_5 ( IDENT_8 ) ; "<AssertPlaceHolder>" ; } } METHOD_6 ( java . util . List , int ) { java . lang . String IDENT_10 = java . lang . Integer . toString ( IDENT_11 ) ; java . lang . String IDENT_12 = java . lang . Integer . toString ( ( ( metrics . size ( ) ) - IDENT_11 ) ) ; java . util . List < java . lang . String > IDENT_13 = new java . util . METHOD_7 ( ) ; if ( IDENT_11 > 0 ) { IDENT_13 . add ( IDENT_10 ) ; } return new com . IDENT_0 . IDENT_1 . IDENT_2 . sdk . METHOD_1 . METHOD_8 ( IDENT_12 , IDENT_10 , IDENT_13 ) ; }
org . junit . Assert . assertEquals ( METHOD_6 ( IDENT_8 , 0 ) , result ) 