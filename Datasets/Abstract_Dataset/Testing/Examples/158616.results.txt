METHOD_0 ( ) { IDENT_0 . METHOD_1 ( STRING_0 ) ; data = manager . search ( ) ; "<AssertPlaceHolder>" ; } search ( ) { java . lang . String IDENT_1 = STRING_1 ; int size = IDENT_1 . length ( ) ; values = new java . util . ArrayList < java . lang . Object > ( ) ; if ( ( user . METHOD_2 ( ) ) > 0 ) { IDENT_1 = IDENT_1 + STRING_2 ; values . add ( user . METHOD_2 ( ) ) ; } if ( ! ( user . METHOD_3 ( ) . trim ( ) . equals ( "" ) ) ) { IDENT_1 = IDENT_1 + STRING_3 ; values . add ( user . METHOD_3 ( ) ) ; } if ( ( IDENT_1 . length ( ) ) > size ) { IDENT_1 = IDENT_1 . substring ( 0 , ( ( IDENT_1 . length ( ) ) - 2 ) ) ; try { IDENT_2 = ( ( java . util . ArrayList < IDENT_3 . data . IDENT_4 > ) ( IDENT_5 . select ( IDENT_1 , values ) ) ) ; } catch ( java . sql . IDENT_6 e ) { log . error ( STRING_4 , e ) ; } } return IDENT_2 ; }
org . junit . Assert . assertTrue ( ( ( data . size ( ) ) == 1 ) ) 