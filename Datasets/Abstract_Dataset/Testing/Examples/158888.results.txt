METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 t = new IDENT_0 . IDENT_1 . METHOD_1 ( STRING_0 , STRING_0 ) ; IDENT_0 . IDENT_1 . IDENT_3 IDENT_4 = mock ( IDENT_0 . IDENT_1 . IDENT_3 . class ) ; when ( IDENT_4 . METHOD_2 ( ) ) . thenReturn ( t ) ; java . awt . geom . IDENT_5 . Double start = new java . awt . geom . IDENT_5 . Double ( 0 , 0 ) ; java . awt . geom . IDENT_5 . Double end = new java . awt . geom . IDENT_5 . Double ( 10 , 10 ) ; when ( IDENT_4 . METHOD_3 ( ) ) . thenReturn ( java . util . Arrays . asList ( new IDENT_0 . IDENT_1 . METHOD_4 ( start , false ) , new IDENT_0 . IDENT_1 . METHOD_4 ( end , false ) ) ) ; net . METHOD_5 ( IDENT_4 ) ; java . awt . IDENT_6 IDENT_7 = new java . awt . METHOD_6 ( 0 , 0 , 2 , 2 ) ; controller . select ( IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( IDENT_0 . IDENT_1 . IDENT_8 ) { return IDENT_9 . contains ( component ) ; }
org . junit . Assert . assertTrue ( controller . METHOD_7 ( IDENT_4 ) ) 