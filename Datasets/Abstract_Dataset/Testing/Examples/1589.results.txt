METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = IDENT_0 ; "<AssertPlaceHolder>" ; } encode ( java . lang . String ) { org . IDENT_2 . api . service . IDENT_3 . METHOD_1 ( IDENT_0 , STRING_1 ) ; java . lang . String IDENT_1 = "" ; try { IDENT_1 = java . net . IDENT_4 . encode ( IDENT_0 , org . IDENT_2 . api . service . IDENT_5 . IDENT_6 ) ; } catch ( java . io . IDENT_7 IDENT_8 ) { throw new org . IDENT_2 . api . exception . METHOD_2 ( ( STRING_2 + ( org . IDENT_2 . api . service . IDENT_5 . IDENT_6 ) ) , IDENT_8 ) ; } for ( Map . Entry < java . lang . String , java . lang . String > rule : org . IDENT_2 . api . service . IDENT_5 . IDENT_9 . entrySet ( ) ) { IDENT_1 = org . IDENT_2 . api . service . IDENT_5 . METHOD_3 ( IDENT_1 , rule . getKey ( ) , rule . getValue ( ) ) ; } return IDENT_1 ; }
org . junit . Assert . assertEquals ( IDENT_1 , org . IDENT_2 . api . service . IDENT_5 . encode ( IDENT_0 ) ) 