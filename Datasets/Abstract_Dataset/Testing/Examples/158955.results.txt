METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_2 = com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( IDENT_4 , IDENT_5 ) ; java . util . List < com . IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_6 > IDENT_7 = IDENT_2 . METHOD_2 ( ) ; java . lang . String html = new com . IDENT_0 . IDENT_1 . IDENT_2 . output . METHOD_3 ( STRING_0 , STRING_1 ) . render ( IDENT_2 ) ; try { java . io . IDENT_8 IDENT_9 = new java . io . METHOD_4 ( STRING_2 ) ; IDENT_9 . write ( html ) ; IDENT_9 . close ( ) ; } catch ( java . io . IOException e ) { e . printStackTrace ( ) ; } "<AssertPlaceHolder>" ; } render ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) { java . util . List < com . IDENT_0 . IDENT_1 . IDENT_2 . output . IDENT_10 > IDENT_11 = IDENT_2 . METHOD_5 ( ) ; IDENT_12 . IDENT_13 . IDENT_14 IDENT_15 = METHOD_6 ( IDENT_11 ) ; java . util . List < com . IDENT_0 . IDENT_1 . IDENT_2 . output . IDENT_10 > IDENT_16 = IDENT_2 . METHOD_7 ( ) ; IDENT_12 . IDENT_13 . IDENT_14 IDENT_17 = METHOD_8 ( IDENT_16 ) ; java . util . List < com . IDENT_0 . IDENT_1 . IDENT_2 . output . IDENT_6 > IDENT_18 = IDENT_2 . METHOD_2 ( ) ; IDENT_12 . IDENT_13 . IDENT_14 IDENT_19 = METHOD_9 ( IDENT_18 ) ; IDENT_12 . IDENT_13 . IDENT_14 IDENT_20 = METHOD_10 ( IDENT_2 . METHOD_11 ( ) , IDENT_2 . METHOD_12 ( ) ) ; return METHOD_13 ( METHOD_6 , METHOD_8 , METHOD_9 , METHOD_10 ) ; }
org . junit . Assert . assertFalse ( IDENT_7 . isEmpty ( ) ) 