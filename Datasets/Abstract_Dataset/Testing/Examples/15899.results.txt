METHOD_0 ( ) { org . apache . IDENT_0 . data . IDENT_1 . util . IDENT_2 builder = new org . apache . IDENT_0 . data . IDENT_1 . util . METHOD_1 ( ) ; org . apache . IDENT_0 . data . IDENT_1 . util . IDENT_3 storage = new org . apache . IDENT_0 . data . IDENT_1 . util . METHOD_2 ( ) ; org . apache . IDENT_0 . data . IDENT_1 . IDENT_4 . IDENT_5 result = new org . apache . IDENT_0 . data . IDENT_1 . IDENT_4 . METHOD_3 ( ) ; org . apache . IDENT_0 . data . IDENT_1 . IDENT_4 . IDENT_6 . IDENT_7 . METHOD_4 ( builder , storage ) ; result . set ( storage . METHOD_5 ( ) , 0 , storage . METHOD_6 ( ) ) ; org . apache . IDENT_0 . data . IDENT_1 . IDENT_4 . METHOD_3 expected = org . apache . IDENT_0 . data . IDENT_1 . IDENT_4 . METHOD_3 . METHOD_7 ( IDENT_8 . IDENT_7 . METHOD_8 ( ) ) ; "<AssertPlaceHolder>" ; } compareTo ( org . apache . IDENT_0 . IDENT_9 . IDENT_1 . IDENT_10 . IDENT_11 ) { if ( ( o . IDENT_12 ) != ( IDENT_12 ) ) { if ( ( o . IDENT_12 ) == ( org . apache . IDENT_0 . IDENT_9 . IDENT_1 . IDENT_10 . IDENT_13 . IDENT_14 ) ) { return 1 ; } if ( ( IDENT_12 ) == ( org . apache . IDENT_0 . IDENT_9 . IDENT_1 . IDENT_10 . IDENT_13 . IDENT_14 ) ) { return - 1 ; } return ( IDENT_12 ) < ( o . IDENT_12 ) ? - 1 : 1 ; } return 0 ; }
org . junit . Assert . assertEquals ( 0 , expected . compareTo ( result ) ) 