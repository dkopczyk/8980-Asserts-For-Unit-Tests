METHOD_0 ( ) { de . IDENT_0 . rules . IDENT_1 . IDENT_2 < java . lang . Integer > g = de . IDENT_0 . rules . IDENT_1 . IDENT_3 . list ( 1 , 2 , 3 , 4 ) ; de . IDENT_0 . rules . IDENT_1 . IDENT_4 . IDENT_5 < java . lang . Integer > IDENT_6 = new de . IDENT_0 . rules . IDENT_1 . IDENT_4 . METHOD_1 ( g ) ; g . apply ( IDENT_6 , null ) . evaluate ( ) ; "<AssertPlaceHolder>" ; } evaluate ( ) { for ( T v : values ) { try { test . evaluate ( ) ; } catch ( java . lang . Throwable t ) { IDENT_7 . METHOD_2 ( new java . lang . METHOD_3 ( ( STRING_0 + v ) , t ) ) ; } } IDENT_7 . verify ( ) ; }
org . junit . Assert . assertThat ( IDENT_6 . values , org . hamcrest . CoreMatchers . equalTo ( ( ( java . util . Set ) ( new java . util . HashSet ( asList ( 1 , 2 , 3 , 4 ) ) ) ) ) ) 