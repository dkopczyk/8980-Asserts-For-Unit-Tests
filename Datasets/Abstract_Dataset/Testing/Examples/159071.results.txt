METHOD_0 ( ) { final org . IDENT_0 . codec . IDENT_1 codec = new org . IDENT_0 . codec . METHOD_1 ( ) ; final java . lang . IDENT_2 expected = STRING_0 ; final byte [ ] data = codec . encode ( expected ) ; final java . lang . IDENT_2 actual = codec . decode ( data ) ; "<AssertPlaceHolder>" ; } decode ( byte [ ] ) { try { final java . io . ByteArrayOutputStream data = new java . io . ByteArrayOutputStream ( ) ; final java . io . InputStream is = new java . util . IDENT_3 . METHOD_2 ( new java . io . ByteArrayInputStream ( IDENT_4 ) ) ; int b ; while ( ( b = is . read ( ) ) >= 0 ) { data . write ( b ) ; } return data . toByteArray ( ) ; } catch ( final java . io . IOException e ) { throw org . IDENT_0 . exception . IDENT_5 . delegate ( e ) ; } }
org . junit . Assert . assertEquals ( expected , actual ) 