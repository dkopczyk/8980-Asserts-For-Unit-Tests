METHOD_0 ( ) { if ( org . apache . IDENT_0 . storage . IDENT_1 . IDENT_2 . LOGGER . METHOD_1 ( IDENT_3 . IDENT_4 ) ) { org . apache . IDENT_0 . storage . IDENT_1 . IDENT_2 . LOGGER . info ( STRING_0 ) ; } org . apache . IDENT_0 . storage . common . IDENT_5 . IDENT_6 IDENT_7 = IDENT_8 . METHOD_2 ( ) ; int IDENT_9 = INT_0 ; int [ ] IDENT_10 = new int [ ] { 2 , 4 , 1 } ; org . apache . IDENT_0 . storage . IDENT_1 . IDENT_2 . IDENT_11 . IDENT_12 IDENT_13 = new org . apache . IDENT_0 . storage . IDENT_1 . IDENT_2 . IDENT_11 . METHOD_3 ( IDENT_7 , IDENT_8 . METHOD_4 ( ) , IDENT_8 . METHOD_5 ( ) , IDENT_10 ) ; double IDENT_14 = FLOAT_0 ; int IDENT_15 = org . apache . IDENT_0 . storage . IDENT_1 . IDENT_2 . IDENT_11 . IDENT_16 . METHOD_6 ( IDENT_9 ) ; org . apache . IDENT_0 . storage . IDENT_1 . IDENT_2 . IDENT_11 . IDENT_17 IDENT_18 = org . apache . IDENT_0 . storage . IDENT_1 . IDENT_2 . IDENT_11 . IDENT_16 . METHOD_7 ( METHOD_6 , IDENT_14 ) ; IDENT_13 . create ( ) ; IDENT_13 . METHOD_8 ( ) ; org . apache . IDENT_0 . storage . IDENT_1 . common . api . IDENT_19 builder = IDENT_13 . METHOD_9 ( IDENT_9 , IDENT_18 . METHOD_10 ( ) , IDENT_18 . METHOD_11 ( ) ) ; int IDENT_20 = 5 ; org . apache . IDENT_0 . api . IDENT_21 . value . IDENT_22 [ ] IDENT_23 = new org . apache . IDENT_0 . api . IDENT_21 . value . IDENT_22 [ ] { new org . apache . IDENT_0 . IDENT_21 . common . data . IDENT_24 . METHOD_12 ( ) , new org . apache . IDENT_0 . IDENT_21 . common . data . IDENT_24 . METHOD_12 ( ) , org . apache . IDENT_0 . IDENT_21 . common . data . IDENT_24 . IDENT_25 . INSTANCE , new org . apache . IDENT_0 . IDENT_21 . common . data . IDENT_24 . METHOD_12 ( ) , new org . apache . IDENT_0 . IDENT_21 . common . data . IDENT_24 . METHOD_12 ( ) } ; org . apache . IDENT_0 . IDENT_21 . common . IDENT_26 . io . IDENT_27 IDENT_28 = new org . apache . IDENT_0 . IDENT_21 . common . IDENT_26 . io . METHOD_13 ( IDENT_20 ) ; org . apache . IDENT_0 . IDENT_21 . common . IDENT_26 . io . IDENT_29 tuple = new org . apache . IDENT_0 . IDENT_21 . common . IDENT_26 . io . METHOD_14 ( ) ; int IDENT_30 = 20 ; java . util . ArrayList < java . lang . String > IDENT_31 = new java . util . ArrayList < java . lang . String > ( ) ; java . util . ArrayList < java . lang . String > IDENT_32 = new java . util . ArrayList < java . lang . String > ( ) ; java . util . ArrayList < java . lang . String > IDENT_33 = new java . util . ArrayList < java . lang . String > ( ) ; java . util . ArrayList < java . lang . String > IDENT_34 = new java . util . ArrayList < java . lang . String > ( ) ; for ( int i = 0 ; i < IDENT_9 ; ++ i ) { IDENT_31 . add ( METHOD_15 ( ( ( IDENT_35 . METHOD_16 ( ) ) OP_0 IDENT_30 ) , IDENT_35 ) ) ; IDENT_32 . add ( METHOD_15 ( ( ( IDENT_35 . METHOD_16 ( ) ) OP_0 IDENT_30 ) , IDENT_35 ) ) ; IDENT_33 . add ( METHOD_15 ( ( ( IDENT_35 . METHOD_16 ( ) ) OP_0 IDENT_30 ) , IDENT_35 ) ) ; IDENT_34 . add ( METHOD_15 ( ( ( IDENT_35 . METHOD_16 ( ) ) OP_0 IDENT_30 ) , IDENT_35 ) ) ; } for ( int i = 0 ; i < IDENT_9 ; ++ i ) { org . apache . IDENT_0 . IDENT_21 . common . util . IDENT_36 . METHOD_17 ( IDENT_28 , tuple , IDENT_23 , IDENT_31 . get ( i ) , IDENT_32 . get ( i ) , i , IDENT_33 . get ( i ) , IDENT_34 . get ( i ) ) ; builder . add ( tuple ) ; } builder . end ( ) ; long [ ] IDENT_37 = new long [ 2 ] ; for ( int i = 0 ; i < IDENT_9 ; ++ i ) { org . apache . IDENT_0 . IDENT_21 . common . util . IDENT_36 . METHOD_17 ( IDENT_28 , tuple , IDENT_23 , IDENT_31 . get ( i ) , IDENT_32 . get ( i ) , i , IDENT_33 . get ( i ) , IDENT_34 . get ( i ) ) ; "<AssertPlaceHolder>" ; } IDENT_13 . METHOD_18 ( ) ; IDENT_13 . METHOD_19 ( ) ; } contains ( org . apache . IDENT_0 . IDENT_21 . common . data . IDENT_38 . IDENT_39 , long [ ] ) { if ( ( IDENT_40 ) == 0 ) { return false ; } org . apache . IDENT_0 . storage . IDENT_1 . IDENT_2 . IDENT_11 . IDENT_41 . METHOD_20 ( tuple , IDENT_10 , org . apache . IDENT_0 . storage . IDENT_1 . IDENT_2 . IDENT_11 . METHOD_3 . IDENT_42 , IDENT_37 ) ; for ( int i = 0 ; i < ( IDENT_43 ) ; ++ i ) { long hash = java . lang . Math . METHOD_21 ( ( ( ( IDENT_37 [ 0 ] ) + ( i * ( IDENT_37 [ 1 ] ) ) ) OP_0 ( IDENT_44 ) ) ) ; org . apache . IDENT_0 . storage . common . IDENT_5 . IDENT_45 page = IDENT_7 . METHOD_22 ( org . apache . IDENT_0 . storage . common . file . IDENT_46 . METHOD_23 ( IDENT_47 , ( ( ( int ) ( hash / ( IDENT_48 ) ) ) + 1 ) ) , false ) ; page . METHOD_24 ( ) ; try { java . nio . ByteBuffer buffer = page . METHOD_25 ( ) ; int IDENT_49 = ( ( int ) ( hash OP_0 ( IDENT_48 ) ) ) > > 3 ; byte b = buffer . get ( IDENT_49 ) ; int IDENT_50 = ( ( int ) ( hash OP_0 ( IDENT_48 ) ) ) & 7 ; if ( ! ( ( b & ( 1L << IDENT_50 ) ) != 0 ) ) { return false ; } } finally { page . METHOD_26 ( ) ; IDENT_7 . METHOD_27 ( page ) ; } } return true ; }
org . junit . Assert . assertTrue ( IDENT_13 . contains ( tuple , IDENT_37 ) ) 