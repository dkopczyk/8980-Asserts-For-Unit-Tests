test ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; java . lang . String IDENT_2 = STRING_2 ; java . lang . String IDENT_3 = STRING_3 ; org . oscarehr . IDENT_4 . model . IDENT_5 IDENT_6 = new org . oscarehr . IDENT_4 . model . METHOD_0 ( ) ; org . oscarehr . common . dao . utils . IDENT_7 . METHOD_1 ( IDENT_6 ) ; IDENT_6 . METHOD_2 ( IDENT_0 ) ; IDENT_6 . METHOD_3 ( IDENT_2 ) ; dao . save ( IDENT_6 ) ; org . oscarehr . IDENT_4 . model . METHOD_0 IDENT_8 = new org . oscarehr . IDENT_4 . model . METHOD_0 ( ) ; org . oscarehr . common . dao . utils . IDENT_7 . METHOD_1 ( IDENT_8 ) ; IDENT_8 . METHOD_2 ( IDENT_1 ) ; IDENT_8 . METHOD_3 ( IDENT_3 ) ; dao . save ( IDENT_8 ) ; org . oscarehr . IDENT_4 . model . METHOD_0 IDENT_9 = new org . oscarehr . IDENT_4 . model . METHOD_0 ( ) ; org . oscarehr . common . dao . utils . IDENT_7 . METHOD_1 ( IDENT_9 ) ; IDENT_9 . METHOD_2 ( IDENT_0 ) ; IDENT_9 . METHOD_3 ( IDENT_2 ) ; dao . save ( IDENT_9 ) ; org . oscarehr . IDENT_4 . model . METHOD_0 IDENT_10 = new org . oscarehr . IDENT_4 . model . METHOD_0 ( ) ; org . oscarehr . common . dao . utils . IDENT_7 . METHOD_1 ( IDENT_10 ) ; IDENT_10 . METHOD_2 ( IDENT_1 ) ; IDENT_10 . METHOD_3 ( IDENT_2 ) ; dao . save ( IDENT_10 ) ; boolean IDENT_11 = true ; boolean result = dao . METHOD_4 ( IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String ) { if ( IDENT_12 == null ) { throw new java . lang . IllegalArgumentException ( ) ; } boolean result = false ; @ org . oscarehr . IDENT_4 . dao . METHOD_5 ( STRING_4 ) java . util . List < org . oscarehr . IDENT_4 . model . METHOD_0 > results = this . METHOD_6 ( ) . find ( STRING_5 , IDENT_12 ) ; if ( ! ( results . isEmpty ( ) ) ) { result = true ; } if ( org . oscarehr . IDENT_4 . dao . IDENT_13 . log . METHOD_7 ( ) ) { org . oscarehr . IDENT_4 . dao . IDENT_13 . log . debug ( ( ( ( STRING_6 + IDENT_12 ) + STRING_7 ) + result ) ) ; } return result ; }
org . junit . Assert . assertEquals ( IDENT_11 , result ) 