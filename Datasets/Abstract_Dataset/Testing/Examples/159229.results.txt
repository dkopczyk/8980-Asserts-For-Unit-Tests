METHOD_0 ( ) { int IDENT_0 = INT_0 ; int IDENT_1 = INT_1 ; int IDENT_2 = INT_2 ; int IDENT_3 = INT_3 ; org . oscarehr . IDENT_4 . model . IDENT_5 IDENT_6 = new org . oscarehr . IDENT_4 . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_7 . METHOD_2 ( IDENT_6 ) ; IDENT_6 . METHOD_3 ( IDENT_0 ) ; IDENT_6 . METHOD_4 ( IDENT_2 ) ; dao . METHOD_5 ( IDENT_6 ) ; org . oscarehr . IDENT_4 . model . METHOD_1 IDENT_8 = new org . oscarehr . IDENT_4 . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_7 . METHOD_2 ( IDENT_8 ) ; IDENT_8 . METHOD_3 ( IDENT_1 ) ; IDENT_8 . METHOD_4 ( IDENT_2 ) ; dao . METHOD_5 ( IDENT_8 ) ; org . oscarehr . IDENT_4 . model . METHOD_1 IDENT_9 = new org . oscarehr . IDENT_4 . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_7 . METHOD_2 ( IDENT_9 ) ; IDENT_9 . METHOD_3 ( IDENT_0 ) ; IDENT_9 . METHOD_4 ( IDENT_3 ) ; dao . METHOD_5 ( IDENT_9 ) ; org . oscarehr . IDENT_4 . model . METHOD_1 IDENT_10 = new org . oscarehr . IDENT_4 . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_7 . METHOD_2 ( IDENT_10 ) ; IDENT_10 . METHOD_3 ( IDENT_1 ) ; IDENT_10 . METHOD_4 ( IDENT_2 ) ; dao . METHOD_5 ( IDENT_10 ) ; org . oscarehr . IDENT_4 . model . METHOD_1 IDENT_11 = new org . oscarehr . IDENT_4 . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_7 . METHOD_2 ( IDENT_11 ) ; IDENT_11 . METHOD_3 ( IDENT_1 ) ; IDENT_11 . METHOD_4 ( IDENT_3 ) ; dao . METHOD_5 ( IDENT_11 ) ; org . oscarehr . IDENT_4 . model . METHOD_1 IDENT_12 = new org . oscarehr . IDENT_4 . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_7 . METHOD_2 ( IDENT_12 ) ; IDENT_12 . METHOD_3 ( IDENT_1 ) ; IDENT_12 . METHOD_4 ( IDENT_2 ) ; dao . METHOD_5 ( IDENT_12 ) ; java . util . List < org . oscarehr . IDENT_4 . model . METHOD_1 > IDENT_13 = new java . util . ArrayList < org . oscarehr . IDENT_4 . model . METHOD_1 > ( java . util . Arrays . asList ( IDENT_8 , IDENT_10 , IDENT_12 ) ) ; java . util . List < org . oscarehr . IDENT_4 . model . METHOD_1 > result = dao . METHOD_6 ( IDENT_1 , IDENT_2 ) ; org . apache . log4j . IDENT_14 logger = org . oscarehr . util . IDENT_15 . METHOD_7 ( ) ; if ( ( result . size ( ) ) != ( IDENT_13 . size ( ) ) ) { logger . warn ( STRING_0 ) ; org . junit . Assert . fail ( STRING_0 ) ; } for ( int i = 0 ; i < ( IDENT_13 . size ( ) ) ; i ++ ) { if ( ! ( IDENT_13 . get ( i ) . equals ( result . get ( i ) ) ) ) { logger . warn ( STRING_1 ) ; org . junit . Assert . fail ( STRING_1 ) ; } } "<AssertPlaceHolder>" ; } get ( java . lang . String ) { try { return IDENT_16 . get ( path ) ; } catch ( ca . uhn . IDENT_17 . IDENT_18 e ) { IDENT_19 . IDENT_20 . ca . IDENT_21 . IDENT_22 . IDENT_23 . logger . warn ( ( STRING_2 + path ) , e ) ; return null ; } }
org . junit . Assert . assertTrue ( true ) 