METHOD_0 ( ) { int IDENT_0 = INT_0 ; int IDENT_1 = INT_1 ; int IDENT_2 = INT_2 ; org . oscarehr . common . model . IDENT_3 IDENT_4 = new org . oscarehr . common . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_5 . METHOD_2 ( IDENT_4 ) ; IDENT_4 . METHOD_3 ( IDENT_0 ) ; dao . METHOD_4 ( IDENT_4 ) ; org . oscarehr . common . model . METHOD_1 IDENT_6 = new org . oscarehr . common . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_5 . METHOD_2 ( IDENT_6 ) ; IDENT_6 . METHOD_3 ( IDENT_1 ) ; dao . METHOD_4 ( IDENT_6 ) ; org . oscarehr . common . model . METHOD_1 IDENT_7 = new org . oscarehr . common . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_5 . METHOD_2 ( IDENT_7 ) ; IDENT_7 . METHOD_3 ( IDENT_2 ) ; dao . METHOD_4 ( IDENT_7 ) ; org . oscarehr . common . model . METHOD_1 [ ] result = dao . METHOD_5 ( IDENT_0 ) ; org . oscarehr . common . model . METHOD_1 [ ] IDENT_8 = new org . oscarehr . common . model . METHOD_1 [ ] { IDENT_4 } ; org . apache . log4j . IDENT_9 logger = org . oscarehr . util . IDENT_10 . METHOD_6 ( ) ; if ( ( result . length ) != ( IDENT_8 . length ) ) { logger . warn ( STRING_0 ) ; org . junit . Assert . fail ( STRING_0 ) ; } for ( int i = 0 ; i < ( IDENT_8 . length ) ; i ++ ) { if ( ! ( IDENT_8 [ i ] . equals ( result [ i ] ) ) ) { logger . warn ( STRING_1 ) ; org . junit . Assert . fail ( STRING_1 ) ; } } "<AssertPlaceHolder>" ; } METHOD_6 ( ) { java . lang . IDENT_11 [ ] IDENT_12 = java . lang . Thread . METHOD_7 ( ) . METHOD_8 ( ) ; java . lang . String IDENT_13 = IDENT_12 [ 2 ] . METHOD_9 ( ) ; return org . apache . log4j . IDENT_9 . METHOD_6 ( IDENT_13 ) ; }
org . junit . Assert . assertTrue ( true ) 