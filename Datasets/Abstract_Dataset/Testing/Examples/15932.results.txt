METHOD_0 ( ) { com . google . common . io . IDENT_0 IDENT_1 = com . google . common . io . IDENT_0 . create ( ) ; try { java . io . File IDENT_2 = new java . io . File ( STRING_0 ) ; IDENT_2 . METHOD_1 ( ) ; org . apache . IDENT_3 . manager . IDENT_4 IDENT_5 = new org . apache . IDENT_3 . command . stream . IDENT_6 . METHOD_2 ( ) ; org . apache . IDENT_3 . command . stream . IDENT_7 IDENT_8 = new org . apache . IDENT_3 . command . stream . METHOD_3 ( IDENT_5 , IDENT_2 ) ; int IDENT_9 = INT_0 ; java . lang . String IDENT_10 = java . util . UUID . METHOD_4 ( ) . toString ( ) ; org . apache . IDENT_3 . command . stream . IDENT_11 server = IDENT_1 . METHOD_5 ( new org . apache . IDENT_3 . command . stream . METHOD_6 ( 0 , 100 , IDENT_8 ) ) ; server . start ( ) ; int port = server . METHOD_7 ( ) ; org . apache . IDENT_3 . command . stream . IDENT_12 client = IDENT_1 . METHOD_5 ( new org . apache . IDENT_3 . command . stream . METHOD_8 ( STRING_1 , port , IDENT_9 ) ) ; "<AssertPlaceHolder>" ; client . METHOD_9 ( IDENT_10 , METHOD_10 ( ) ) ; java . lang . String table = "test" ; java . lang . String IDENT_13 = STRING_2 ; java . lang . String user = "test" ; java . util . Map < java . lang . String , java . lang . String > IDENT_14 = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; org . apache . IDENT_3 . command . stream . IDENT_15 split = new org . apache . IDENT_3 . command . stream . METHOD_11 ( table , IDENT_13 , IDENT_10 , user , IDENT_14 ) ; try { java . lang . IDENT_16 < java . lang . String > it = client . METHOD_12 ( split , new org . apache . IDENT_3 . command . stream . IDENT_17 < java . lang . String > ( ) { @ org . apache . IDENT_3 . command . stream . Override public void call ( org . apache . IDENT_3 . command . IDENT_18 IDENT_19 , org . apache . IDENT_3 . command . stream . IDENT_20 < java . lang . String > writer ) throws org . apache . IDENT_3 . command . stream . Exception { java . lang . Class . METHOD_13 ( STRING_3 ) ; } } ) ; java . util . Iterator < java . lang . String > iterator = it . iterator ( ) ; if ( iterator . hasNext ( ) ) { iterator . next ( ) ; } org . junit . Assert . fail ( ) ; } catch ( org . apache . IDENT_3 . command . stream . IDENT_21 e ) { java . lang . Throwable IDENT_22 = e . METHOD_14 ( ) ; IDENT_22 . printStackTrace ( ) ; } } finally { IDENT_1 . close ( ) ; } } METHOD_15 ( java . lang . String ) { IDENT_23 . write ( IDENT_24 . IDENT_25 . METHOD_16 ( ) ) ; org . apache . IDENT_3 . command . stream . IDENT_26 . METHOD_17 ( IDENT_23 , IDENT_10 ) ; IDENT_23 . METHOD_18 ( ) ; java . lang . String message = org . apache . IDENT_3 . command . stream . IDENT_26 . METHOD_19 ( IDENT_27 ) ; if ( message . equals ( STRING_4 ) ) { return true ; } else { return false ; } }
org . junit . Assert . assertFalse ( client . METHOD_15 ( IDENT_10 ) ) 