METHOD_0 ( ) { java . lang . Integer IDENT_0 = 1 ; org . oscarehr . common . model . IDENT_1 IDENT_2 = new org . oscarehr . common . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_3 . METHOD_2 ( IDENT_2 ) ; IDENT_2 . METHOD_3 ( 2 ) ; org . oscarehr . common . model . METHOD_1 IDENT_4 = new org . oscarehr . common . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_3 . METHOD_2 ( IDENT_4 ) ; IDENT_4 . METHOD_3 ( 1 ) ; org . oscarehr . common . model . METHOD_1 IDENT_5 = new org . oscarehr . common . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_3 . METHOD_2 ( IDENT_5 ) ; IDENT_5 . METHOD_3 ( 3 ) ; org . oscarehr . common . model . METHOD_1 IDENT_6 = new org . oscarehr . common . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_3 . METHOD_2 ( IDENT_6 ) ; IDENT_6 . METHOD_3 ( 1 ) ; dao . METHOD_4 ( IDENT_2 ) ; dao . METHOD_4 ( IDENT_4 ) ; dao . METHOD_4 ( IDENT_5 ) ; dao . METHOD_4 ( IDENT_6 ) ; java . util . List < org . oscarehr . common . model . METHOD_1 > IDENT_7 = new java . util . ArrayList < org . oscarehr . common . model . METHOD_1 > ( java . util . Arrays . asList ( IDENT_4 , IDENT_6 ) ) ; java . util . List < org . oscarehr . common . model . METHOD_1 > IDENT_8 = dao . METHOD_5 ( IDENT_0 ) ; if ( ( IDENT_8 . size ( ) ) != ( IDENT_7 . size ( ) ) ) { org . junit . Assert . fail ( STRING_0 ) ; } boolean IDENT_9 = IDENT_8 . METHOD_6 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_10 . size ( ) ; }
org . junit . Assert . assertTrue ( IDENT_9 ) 