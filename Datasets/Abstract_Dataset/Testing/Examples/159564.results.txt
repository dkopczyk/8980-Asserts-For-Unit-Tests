METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; org . oscarehr . common . model . IDENT_2 IDENT_3 = new org . oscarehr . common . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_4 . METHOD_2 ( IDENT_3 ) ; IDENT_3 . METHOD_3 ( IDENT_0 ) ; dao . METHOD_4 ( IDENT_3 ) ; org . oscarehr . common . model . METHOD_1 IDENT_5 = new org . oscarehr . common . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_4 . METHOD_2 ( IDENT_5 ) ; IDENT_5 . METHOD_3 ( IDENT_1 ) ; dao . METHOD_4 ( IDENT_5 ) ; org . oscarehr . common . model . METHOD_1 IDENT_6 = new org . oscarehr . common . model . METHOD_1 ( ) ; org . oscarehr . common . dao . utils . IDENT_4 . METHOD_2 ( IDENT_6 ) ; IDENT_6 . METHOD_3 ( IDENT_0 ) ; dao . METHOD_4 ( IDENT_6 ) ; java . util . List < org . oscarehr . common . model . METHOD_1 > IDENT_7 = new java . util . ArrayList < org . oscarehr . common . model . METHOD_1 > ( java . util . Arrays . asList ( IDENT_3 , IDENT_5 , IDENT_6 ) ) ; java . util . List < org . oscarehr . common . model . METHOD_1 > result = dao . METHOD_5 ( ) ; org . apache . log4j . IDENT_8 logger = org . oscarehr . util . IDENT_9 . METHOD_6 ( ) ; if ( ( result . size ( ) ) != ( IDENT_7 . size ( ) ) ) { logger . warn ( STRING_2 ) ; org . junit . Assert . fail ( STRING_2 ) ; } for ( int i = 0 ; i < ( IDENT_7 . size ( ) ) ; i ++ ) { if ( ! ( IDENT_7 . get ( i ) . equals ( result . get ( i ) ) ) ) { logger . warn ( STRING_3 ) ; org . junit . Assert . fail ( STRING_3 ) ; } } "<AssertPlaceHolder>" ; } get ( java . lang . String ) { try { return IDENT_10 . get ( path ) ; } catch ( ca . uhn . IDENT_11 . IDENT_12 e ) { IDENT_13 . IDENT_14 . ca . IDENT_15 . IDENT_16 . IDENT_17 . logger . warn ( ( STRING_4 + path ) , e ) ; return null ; } }
org . junit . Assert . assertTrue ( true ) 