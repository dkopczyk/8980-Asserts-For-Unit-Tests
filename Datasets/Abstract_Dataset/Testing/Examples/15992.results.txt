METHOD_0 ( ) { org . apache . IDENT_0 . IDENT_1 . IDENT_2 t = METHOD_1 ( STRING_0 ) ; METHOD_2 ( ) ; java . util . List < java . lang . String > expected = METHOD_3 ( ( person ) -> true , METHOD_4 ( ) ) ; org . apache . IDENT_0 . IDENT_3 . jdbc . IDENT_4 db = new org . apache . IDENT_0 . IDENT_3 . jdbc . METHOD_5 ( t , ( ) -> METHOD_6 ( org . apache . IDENT_0 . test . IDENT_3 . jdbc . IDENT_5 . IDENT_6 ) , ( IDENT_7 ) -> connect ( IDENT_7 ) ) ; org . apache . IDENT_0 . IDENT_1 . IDENT_8 < org . apache . IDENT_0 . test . IDENT_3 . jdbc . IDENT_5 . Person > s = t . collection ( METHOD_4 ( ) ) ; org . apache . IDENT_0 . IDENT_1 . IDENT_9 < org . apache . IDENT_0 . test . IDENT_3 . jdbc . IDENT_5 . Person > IDENT_10 = db . METHOD_7 ( s , ( IDENT_11 ) -> IDENT_11 . METHOD_8 ( STRING_1 ) , ( tuple , stmt ) -> { stmt . METHOD_9 ( 1 , tuple . id ) ; stmt . METHOD_10 ( 2 , tuple . IDENT_12 ) ; stmt . METHOD_10 ( 3 , tuple . IDENT_13 ) ; stmt . METHOD_10 ( 4 , tuple . IDENT_14 ) ; stmt . METHOD_9 ( 5 , tuple . IDENT_15 ) ; } ) ; "<AssertPlaceHolder>" ; org . apache . IDENT_0 . IDENT_1 . IDENT_8 < org . apache . IDENT_0 . test . IDENT_3 . jdbc . IDENT_5 . Person > IDENT_16 = METHOD_11 ( t , db , METHOD_12 ( ) , INT_0 ) ; org . apache . IDENT_0 . IDENT_1 . IDENT_8 < java . lang . String > IDENT_17 = IDENT_16 . map ( ( person ) -> person . toString ( ) ) ; IDENT_17 . METHOD_13 ( ( tuple ) -> System . out . println ( java . lang . String . format ( STRING_2 , t . getName ( ) , tuple ) ) ) ; METHOD_14 ( "" , t , IDENT_17 , org . apache . IDENT_0 . test . IDENT_3 . jdbc . IDENT_5 . IDENT_18 , expected . toArray ( new java . lang . String [ 0 ] ) ) ; } METHOD_4 ( ) { return org . apache . IDENT_0 . test . IDENT_3 . jdbc . IDENT_5 . IDENT_19 ; }
org . junit . Assert . assertNotNull ( METHOD_13 ) 