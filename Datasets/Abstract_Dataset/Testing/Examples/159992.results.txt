METHOD_0 ( ) { org . oscarehr . util . IDENT_0 info = new org . oscarehr . util . METHOD_1 ( ) ; boolean r = this . METHOD_2 ( info , 20 , 1 , STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . oscarehr . util . METHOD_1 , int , int , java . lang . String ) { this . METHOD_3 ( info , IDENT_1 ) ; org . oscarehr . common . model . IDENT_2 d = this . IDENT_3 . find ( IDENT_4 ) ; if ( d == null ) { org . oscarehr . IDENT_5 . IDENT_6 . logger . info ( ( ( STRING_1 + IDENT_4 ) + STRING_2 ) ) ; return false ; } else if ( ( d . METHOD_4 ( ) ) != IDENT_1 ) { org . oscarehr . IDENT_5 . IDENT_6 . logger . info ( ( ( ( ( ( STRING_3 + ( d . METHOD_4 ( ) ) ) + STRING_4 ) + STRING_3 0 ) + IDENT_1 ) + STRING_5 ) ) ; return false ; } else { if ( IDENT_7 . equals ( IDENT_2 . IDENT_8 ) ) { d . METHOD_5 ( IDENT_2 . IDENT_8 ) ; } else if ( IDENT_7 . equals ( IDENT_2 . IDENT_9 ) ) { d . METHOD_5 ( IDENT_2 . IDENT_9 ) ; } else if ( IDENT_7 . equals ( IDENT_2 . IDENT_10 ) ) { d . METHOD_5 ( IDENT_2 . IDENT_10 ) ; } else if ( IDENT_7 . equals ( IDENT_2 . IDENT_11 ) ) { d . METHOD_5 ( IDENT_2 . IDENT_11 ) ; } else if ( IDENT_7 . equals ( IDENT_2 . IDENT_12 ) ) { d . METHOD_5 ( IDENT_2 . IDENT_12 ) ; } else if ( IDENT_7 . equals ( IDENT_2 . IDENT_13 ) ) { d . METHOD_5 ( IDENT_2 . IDENT_13 ) ; } else if ( IDENT_7 . equals ( IDENT_2 . IDENT_14 ) ) { d . METHOD_5 ( IDENT_2 . IDENT_14 ) ; } else if ( IDENT_7 . equals ( IDENT_2 . IDENT_15 ) ) { d . METHOD_5 ( IDENT_2 . IDENT_15 ) ; } else if ( IDENT_7 . equals ( IDENT_2 . IDENT_16 ) ) { d . METHOD_5 ( IDENT_2 . IDENT_16 ) ; } else if ( IDENT_7 . equals ( IDENT_2 . IDENT_17 ) ) { d . METHOD_5 ( IDENT_2 . IDENT_17 ) ; } else if ( IDENT_7 . equals ( IDENT_2 . IDENT_18 ) ) { d . METHOD_5 ( IDENT_2 . IDENT_18 ) ; } else if ( IDENT_7 . equals ( IDENT_2 . IDENT_19 ) ) { d . METHOD_5 ( IDENT_2 . IDENT_19 ) ; } else if ( IDENT_7 . equals ( IDENT_2 . IDENT_20 ) ) { d . METHOD_5 ( IDENT_2 . IDENT_20 ) ; } else if ( IDENT_7 . equals ( IDENT_2 . IDENT_21 ) ) { d . METHOD_5 ( IDENT_2 . IDENT_21 ) ; } else if ( IDENT_7 . equals ( IDENT_2 . IDENT_22 ) ) { d . METHOD_5 ( IDENT_2 . IDENT_22 ) ; } else { throw new java . lang . METHOD_6 ( ( STRING_6 + IDENT_7 ) ) ; } d . METHOD_7 ( true ) ; d . METHOD_8 ( new java . util . Date ( ) ) ; this . IDENT_3 . METHOD_9 ( d ) ; IDENT_23 . log . IDENT_24 . METHOD_10 ( info , STRING_7 , ( ( ( ( ( STRING_8 + ( info . METHOD_11 ( ) ) ) + STRING_9 ) + ( d . METHOD_12 ( ) ) ) + STRING_10 ) + ( d . METHOD_4 ( ) ) ) ) ; return true ; } }
org . junit . Assert . assertFalse ( r ) 