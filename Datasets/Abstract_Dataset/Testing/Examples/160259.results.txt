METHOD_0 ( ) { IDENT_0 . IDENT_1 . security . IDENT_2 resolver = new IDENT_0 . IDENT_1 . security . METHOD_1 ( ) ; IDENT_0 . IDENT_1 . security . IDENT_3 p = resolver . METHOD_2 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { IDENT_0 . IDENT_1 . security . IDENT_3 IDENT_4 = null ; if ( ! ( com . google . common . base . IDENT_5 . METHOD_3 ( IDENT_6 ) ) ) { java . util . Iterator < java . lang . String > IDENT_7 = com . google . common . base . IDENT_8 . METHOD_4 ( STRING_1 ) . METHOD_5 ( ) . METHOD_6 ( ) . split ( IDENT_6 ) . iterator ( ) ; if ( IDENT_7 . hasNext ( ) ) { java . lang . String type = IDENT_7 . next ( ) ; if ( type . equals ( IDENT_3 . IDENT_9 ) ) { IDENT_4 = METHOD_7 ( IDENT_7 ) ; } else if ( IDENT_0 . IDENT_1 . security . METHOD_1 . logger . METHOD_8 ( ) ) { IDENT_0 . IDENT_1 . security . METHOD_1 . logger . warn ( STRING_2 , IDENT_6 ) ; } } } else { IDENT_0 . IDENT_1 . security . METHOD_1 . logger . warn ( STRING_3 ) ; } return IDENT_4 ; }
org . junit . Assert . assertNull ( p ) 