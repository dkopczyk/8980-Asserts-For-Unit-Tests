METHOD_0 ( ) { org . IDENT_0 . api . service . IDENT_1 IDENT_2 = METHOD_1 ( ) ; org . IDENT_0 . api . service . IDENT_3 IDENT_4 = METHOD_2 ( IDENT_2 ) ; org . IDENT_0 . api . model . IDENT_5 IDENT_6 = new org . IDENT_0 . api . model . METHOD_3 ( ) ; org . IDENT_0 . api . model . METHOD_3 . IDENT_7 filters = new org . IDENT_0 . api . model . METHOD_3 . METHOD_4 ( ) ; IDENT_6 . METHOD_5 ( filters ) ; IDENT_4 . IDENT_8 . METHOD_6 ( filters ) ; org . elasticsearch . action . search . IDENT_9 IDENT_10 = org . mockito . Mockito . mock ( org . elasticsearch . action . search . IDENT_9 . class ) ; { org . mockito . Mockito . METHOD_7 ( IDENT_4 . IDENT_11 , IDENT_10 , IDENT_4 . IDENT_12 ) ; METHOD_8 ( IDENT_4 , STRING_0 ) ; METHOD_9 ( IDENT_4 , STRING_1 , STRING_2 4 ) ; filters . METHOD_10 ( STRING_3 , STRING_4 ) ; IDENT_4 . IDENT_8 . METHOD_6 ( filters ) ; try { IDENT_4 . METHOD_11 ( IDENT_6 . METHOD_12 ( ) , IDENT_6 . METHOD_13 ( ) , IDENT_10 ) ; org . junit . Assert . fail ( STRING_2 3 ) ; } catch ( org . IDENT_0 . api . rest . exception . IDENT_13 e ) { org . mockito . Mockito . METHOD_14 ( IDENT_10 , IDENT_4 . IDENT_14 ) ; } } { org . mockito . Mockito . METHOD_7 ( IDENT_4 . IDENT_11 , IDENT_10 , IDENT_4 . IDENT_12 ) ; METHOD_8 ( IDENT_4 , STRING_0 ) ; METHOD_9 ( IDENT_4 , STRING_1 , STRING_2 4 ) ; filters . METHOD_10 ( STRING_3 , STRING_2 1 ) ; IDENT_4 . IDENT_8 . METHOD_6 ( filters ) ; try { IDENT_4 . METHOD_11 ( IDENT_6 . METHOD_12 ( ) , IDENT_6 . METHOD_13 ( ) , IDENT_10 ) ; org . junit . Assert . fail ( STRING_2 3 ) ; } catch ( org . IDENT_0 . api . rest . exception . IDENT_13 e ) { org . mockito . Mockito . METHOD_14 ( IDENT_10 , IDENT_4 . IDENT_14 ) ; } } { org . mockito . Mockito . METHOD_7 ( IDENT_4 . IDENT_11 , IDENT_10 , IDENT_4 . IDENT_14 , IDENT_4 . IDENT_12 ) ; METHOD_8 ( IDENT_4 , STRING_2 2 ) ; METHOD_9 ( IDENT_4 , STRING_1 , STRING_2 4 ) ; filters . METHOD_10 ( STRING_3 , STRING_4 ) ; IDENT_4 . IDENT_8 . METHOD_6 ( filters ) ; IDENT_4 . METHOD_11 ( IDENT_6 . METHOD_12 ( ) , IDENT_6 . METHOD_13 ( ) , IDENT_10 ) ; org . mockito . Mockito . verify ( IDENT_10 ) . METHOD_15 ( STRING_5 ) ; org . mockito . Mockito . verify ( IDENT_10 ) . METHOD_16 ( STRING_2 0 ) ; org . mockito . Mockito . METHOD_14 ( IDENT_10 , IDENT_4 . IDENT_14 ) ; } { org . mockito . Mockito . METHOD_7 ( IDENT_4 . IDENT_11 , IDENT_10 , IDENT_4 . IDENT_14 , IDENT_4 . IDENT_12 ) ; METHOD_9 ( IDENT_4 , STRING_1 , STRING_2 4 ) ; METHOD_8 ( IDENT_4 , STRING_2 2 ) ; filters . METHOD_10 ( STRING_3 , STRING_2 1 ) ; IDENT_4 . IDENT_8 . METHOD_6 ( filters ) ; IDENT_4 . METHOD_11 ( IDENT_6 . METHOD_12 ( ) , IDENT_6 . METHOD_13 ( ) , IDENT_10 ) ; org . mockito . Mockito . verify ( IDENT_10 ) . METHOD_15 ( STRING_6 ) ; org . mockito . Mockito . verify ( IDENT_10 ) . METHOD_16 ( STRING_7 ) ; org . mockito . Mockito . METHOD_14 ( IDENT_10 , IDENT_4 . IDENT_14 ) ; } { org . mockito . Mockito . METHOD_7 ( IDENT_4 . IDENT_11 , IDENT_10 , IDENT_4 . IDENT_14 , IDENT_4 . IDENT_12 ) ; METHOD_8 ( IDENT_4 , IDENT_15 . IDENT_16 ) ; METHOD_9 ( IDENT_4 , STRING_1 , STRING_2 4 ) ; filters . METHOD_10 ( STRING_3 , STRING_4 ) ; IDENT_4 . IDENT_8 . METHOD_6 ( filters ) ; IDENT_4 . METHOD_11 ( IDENT_6 . METHOD_12 ( ) , IDENT_6 . METHOD_13 ( ) , IDENT_10 ) ; org . mockito . Mockito . verify ( IDENT_10 ) . METHOD_15 ( STRING_5 ) ; org . mockito . Mockito . verify ( IDENT_10 ) . METHOD_16 ( STRING_2 0 ) ; org . mockito . Mockito . METHOD_14 ( IDENT_10 , IDENT_4 . IDENT_14 ) ; } { org . mockito . Mockito . METHOD_7 ( IDENT_4 . IDENT_11 , IDENT_10 , IDENT_4 . IDENT_14 , IDENT_4 . IDENT_12 ) ; METHOD_9 ( IDENT_4 , STRING_1 , STRING_2 4 ) ; METHOD_8 ( IDENT_4 , STRING_2 2 ) ; filters . METHOD_10 ( STRING_3 , STRING_8 ) ; IDENT_4 . IDENT_8 . METHOD_6 ( filters ) ; try { IDENT_4 . METHOD_11 ( IDENT_6 . METHOD_12 ( ) , IDENT_6 . METHOD_13 ( ) , IDENT_10 ) ; org . junit . Assert . fail ( STRING_9 ) ; } catch ( java . lang . IllegalArgumentException e ) { "<AssertPlaceHolder>" ; org . mockito . Mockito . METHOD_17 ( IDENT_4 . IDENT_14 ) ; org . mockito . Mockito . METHOD_14 ( IDENT_10 ) ; } } } METHOD_13 ( ) { return IDENT_17 ; }
org . junit . Assert . assertEquals ( STRING_2 , e . getMessage ( ) ) 