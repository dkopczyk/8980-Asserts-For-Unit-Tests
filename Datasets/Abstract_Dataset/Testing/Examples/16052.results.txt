METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_7 [ ] IDENT_8 = new org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_7 [ 3 ] ; java . util . List < java . lang . String > IDENT_9 = java . util . Arrays . asList ( "a" , "b" ) ; IDENT_8 [ 0 ] = org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_10 . METHOD_2 ( IDENT_11 . IDENT_12 , IDENT_9 ) ; IDENT_8 [ 1 ] = org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_13 . IDENT_11 . IDENT_14 ; IDENT_8 [ 2 ] = org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_13 . IDENT_11 . IDENT_12 ; IDENT_4 . METHOD_3 ( IDENT_8 ) ; org . apache . hadoop . hive . IDENT_15 . IDENT_4 . IDENT_16 . IDENT_17 . IDENT_18 [ ] IDENT_19 = new org . apache . hadoop . hive . IDENT_15 . IDENT_4 . IDENT_16 . IDENT_17 . IDENT_18 [ 3 ] ; IDENT_19 [ 1 ] = new org . apache . hadoop . hive . IDENT_15 . IDENT_4 . IDENT_16 . IDENT_17 . METHOD_4 ( new java . lang . Double ( FLOAT_0 ) ) ; IDENT_19 [ 2 ] = new org . apache . hadoop . hive . IDENT_15 . IDENT_4 . IDENT_16 . IDENT_17 . METHOD_4 ( STRING_0 ) ; java . util . List < org . apache . hadoop . io . IDENT_20 > IDENT_21 = IDENT_4 . evaluate ( IDENT_19 ) ; java . util . List < org . apache . hadoop . io . IDENT_20 > expected = IDENT_0 . utils . hadoop . IDENT_22 . val ( new java . lang . String [ ] { STRING_1 } ) ; "<AssertPlaceHolder>" ; IDENT_4 . close ( ) ; } val ( int ) { return new org . apache . hadoop . io . METHOD_5 ( v ) ; }
org . junit . Assert . assertEquals ( expected , IDENT_21 ) 