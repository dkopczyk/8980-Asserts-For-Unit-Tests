METHOD_0 ( ) { byte [ ] IDENT_0 = new byte [ ] { ( ( byte ) ( INT_0 ) ) } ; org . IDENT_1 . IDENT_2 . IDENT_3 [ ] IDENT_4 = org . IDENT_1 . IDENT_2 . IDENT_5 . METHOD_1 ( IDENT_0 , 2 , 2 , new java . util . METHOD_2 ( ) ) ; try { byte [ ] IDENT_6 = org . IDENT_1 . IDENT_2 . IDENT_5 . METHOD_3 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . IDENT_7 e ) { org . junit . Assert . fail ( STRING_0 ) ; } } METHOD_3 ( org . IDENT_1 . IDENT_2 . IDENT_3 [ ] ) { org . IDENT_1 . IDENT_2 . util . IDENT_8 IDENT_9 = org . IDENT_1 . IDENT_2 . util . IDENT_8 . METHOD_4 ( ) . when ( ( IDENT_4 == null ) , STRING_1 ) . when ( ( ( IDENT_4 != null ) && ( ( IDENT_4 . length ) == 0 ) ) , STRING_2 ) . validate ( ) ; org . IDENT_1 . IDENT_2 . IDENT_10 . IDENT_11 pub = IDENT_4 [ 0 ] . METHOD_5 ( ) ; byte [ ] IDENT_0 = new byte [ pub . METHOD_6 ( ) ] ; org . IDENT_1 . IDENT_2 . IDENT_12 [ ] [ ] IDENT_13 = new org . IDENT_1 . IDENT_2 . IDENT_12 [ IDENT_0 . length ] [ IDENT_4 . length ] ; java . lang . Integer IDENT_14 = null ; java . lang . Integer IDENT_15 = null ; for ( org . IDENT_1 . IDENT_2 . IDENT_10 IDENT_16 : IDENT_4 ) { IDENT_14 = ( IDENT_14 == null ) ? IDENT_16 . METHOD_6 ( ) : IDENT_14 ; IDENT_15 = ( IDENT_15 == null ) ? IDENT_16 . METHOD_7 ( ) : IDENT_15 ; IDENT_9 . when ( ( ! ( IDENT_16 instanceof org . IDENT_1 . IDENT_2 . IDENT_3 ) ) , STRING_3 ) ; IDENT_9 . when ( ( ( IDENT_16 . METHOD_6 ( ) ) != IDENT_14 ) , STRING_4 ) ; IDENT_9 . when ( ( ( IDENT_16 . METHOD_7 ( ) ) != IDENT_15 ) , STRING_5 ) ; IDENT_9 . when ( ( ! ( IDENT_16 . METHOD_8 ( ) . equals ( IDENT_3 . IDENT_17 ) ) ) , STRING_6 ) ; } IDENT_9 . validate ( ) . when ( ( ( IDENT_4 . length ) < IDENT_15 ) , ( ( ( IDENT_15 + STRING_7 ) + ( IDENT_4 . length ) ) + STRING_8 ) ) . validate ( ) ; for ( int i = 0 ; i < ( IDENT_4 . length ) ; i ++ ) { byte [ ] b = IDENT_4 [ i ] . METHOD_9 ( ) . METHOD_10 ( ) . METHOD_11 ( ) . toByteArray ( ) ; byte [ ] IDENT_18 = new byte [ ( IDENT_0 . length ) * 2 ] ; if ( ( b . length ) > ( IDENT_18 . length ) ) IDENT_18 = java . util . Arrays . METHOD_12 ( b , ( ( b . length ) - ( IDENT_18 . length ) ) , b . length ) ; else java . lang . System . METHOD_13 ( b , 0 , IDENT_18 , ( ( IDENT_18 . length ) - ( b . length ) ) , b . length ) ; for ( int j = 0 ; j < ( IDENT_0 . length ) ; j ++ ) IDENT_13 [ j ] [ i ] = new org . IDENT_1 . IDENT_2 . METHOD_14 ( IDENT_4 [ i ] . METHOD_9 ( ) . METHOD_10 ( ) . METHOD_15 ( ) , java . math . BigInteger . valueOf ( ( ( ( 255 & ( IDENT_18 [ ( 2 * j ) ] ) ) << 8 ) | ( 255 & ( IDENT_18 [ ( ( 2 * j ) + 1 ) ] ) ) ) ) ) ; } for ( int i = 0 ; i < ( IDENT_0 . length ) ; i ++ ) { org . IDENT_1 . IDENT_2 . IDENT_19 IDENT_20 = new org . IDENT_1 . IDENT_2 . METHOD_16 ( IDENT_13 [ i ] , pub . METHOD_8 ( ) ) ; IDENT_0 [ i ] = IDENT_20 . y ( BigInteger . IDENT_21 ) . METHOD_17 ( ) . METHOD_18 ( pub . METHOD_8 ( ) ) . add ( pub . METHOD_8 ( ) ) . METHOD_18 ( pub . METHOD_8 ( ) ) . METHOD_19 ( ) ; } return IDENT_0 ; }
org . junit . Assert . assertArrayEquals ( IDENT_0 , IDENT_6 ) 