METHOD_0 ( ) { IDENT_0 . tools . IDENT_1 IDENT_2 = new IDENT_0 . tools . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( new org . apache . hadoop . hive . IDENT_3 . IDENT_4 . IDENT_5 [ ] { org . apache . hadoop . hive . IDENT_3 . IDENT_4 . IDENT_6 . IDENT_7 . IDENT_8 , org . apache . hadoop . hive . IDENT_3 . IDENT_4 . IDENT_6 . IDENT_7 . IDENT_9 , org . apache . hadoop . hive . IDENT_3 . IDENT_4 . IDENT_6 . IDENT_7 . IDENT_10 } ) ; final java . util . List < org . apache . hadoop . io . IDENT_11 > actual = new java . util . ArrayList ( ) ; IDENT_2 . METHOD_3 ( new org . apache . hadoop . hive . IDENT_12 . IDENT_13 . IDENT_14 . METHOD_4 ( ) { @ IDENT_0 . tools . Override public void collect ( java . lang . Object args ) throws org . apache . hadoop . hive . IDENT_12 . metadata . IDENT_15 { java . lang . Object [ ] row = ( ( java . lang . Object [ ] ) ( args ) ) ; org . apache . hadoop . io . IDENT_11 IDENT_16 = ( ( org . apache . hadoop . io . IDENT_11 ) ( row [ 0 ] ) ) ; actual . add ( new org . apache . hadoop . io . METHOD_5 ( IDENT_16 . get ( ) ) ) ; } } ) ; IDENT_2 . process ( new java . lang . Object [ ] { 5 , new org . apache . hadoop . io . METHOD_5 ( 1 ) , - INT_0 } ) ; java . util . List < org . apache . hadoop . io . METHOD_5 > expected = java . util . Arrays . asList ( new org . apache . hadoop . io . METHOD_5 ( 5 ) , new org . apache . hadoop . io . METHOD_5 ( 3 ) , new org . apache . hadoop . io . METHOD_5 ( 1 ) ) ; "<AssertPlaceHolder>" ; } get ( ) { return object ; }
org . junit . Assert . assertEquals ( expected , actual ) 