METHOD_0 ( ) { java . util . List < org . w3c . dom . Node > nodes = METHOD_1 ( STRING_0 , document ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , org . w3c . dom . Document ) { java . util . List < org . w3c . dom . Node > elements = new java . util . ArrayList < org . w3c . dom . Node > ( ) ; javax . xml . IDENT_0 . IDENT_1 IDENT_2 = javax . xml . IDENT_0 . IDENT_3 . newInstance ( ) . METHOD_2 ( ) ; org . w3c . dom . IDENT_4 IDENT_5 ; try { IDENT_5 = ( ( org . w3c . dom . IDENT_4 ) ( IDENT_2 . METHOD_3 ( expression ) . evaluate ( IDENT_6 , IDENT_7 . IDENT_8 ) ) ) ; } catch ( javax . xml . IDENT_0 . IDENT_9 e ) { io . IDENT_10 . server . util . IDENT_11 . error ( STRING_1 , e ) ; return elements ; } if ( ( IDENT_5 != null ) && ( ( IDENT_5 . METHOD_4 ( ) ) > 0 ) ) { for ( int i = 0 ; i < ( IDENT_5 . METHOD_4 ( ) ) ; i ++ ) { org . w3c . dom . Node node = IDENT_5 . item ( i ) ; if ( ( node . METHOD_5 ( ) ) == null ) { continue ; } elements . add ( node ) ; } } return elements ; }
org . junit . Assert . assertEquals ( nodes . size ( ) , 1 ) 