METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . Object > IDENT_0 = new java . util . HashMap ( ) ; IDENT_0 . put ( IDENT_1 . IDENT_2 , IDENT_3 . IDENT_4 ) ; IDENT_0 . put ( IDENT_1 . IDENT_5 , null ) ; IDENT_0 . put ( IDENT_1 . IDENT_6 , "" ) ; java . util . Map < java . lang . String , java . lang . Object > node = new java . util . HashMap ( ) ; node . put ( IDENT_1 . IDENT_2 , IDENT_3 . IDENT_4 ) ; node . put ( IDENT_1 . IDENT_5 , IDENT_7 . IDENT_8 ) ; node . put ( IDENT_1 . IDENT_6 , STRING_0 ) ; "<AssertPlaceHolder>" ; } matches ( org . openqa . selenium . testing . IDENT_9 . IDENT_10 , org . openqa . selenium . testing . IDENT_9 . IDENT_10 [ ] ) { for ( org . openqa . selenium . testing . IDENT_9 . IDENT_10 item : IDENT_9 ) { if ( item == ( org . openqa . selenium . testing . IDENT_9 . IDENT_10 . IDENT_11 ) ) { return true ; } if ( item == IDENT_12 ) { return true ; } } return false ; }
org . junit . Assert . assertTrue ( matcher . matches ( node , IDENT_0 ) ) 