METHOD_0 ( ) { try ( org . openqa . selenium . remote . IDENT_0 payload = org . openqa . selenium . remote . IDENT_0 . create ( com . google . common . collect . ImmutableMap . of ( STRING_0 , org . openqa . selenium . remote . server . IDENT_1 , STRING_1 , METHOD_1 ( STRING_2 , STRING_3 ) ) ) ) { java . lang . StringBuilder IDENT_2 = new java . lang . StringBuilder ( ) ; payload . METHOD_2 ( IDENT_2 ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_3 = new org . openqa . selenium . json . METHOD_3 ( ) . METHOD_4 ( IDENT_2 . toString ( ) , org . openqa . selenium . remote . server . IDENT_4 ) ; "<AssertPlaceHolder>" ; } } get ( java . lang . String ) { return options . get ( key ) ; }
org . junit . Assert . assertNull ( IDENT_3 . get ( STRING_1 ) ) 