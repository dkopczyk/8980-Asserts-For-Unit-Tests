METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_7 [ ] IDENT_8 = new org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_7 [ 5 ] ; IDENT_8 [ 0 ] = org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_9 . IDENT_10 . IDENT_11 ; org . apache . hadoop . hive . IDENT_5 . IDENT_12 . IDENT_13 IDENT_14 = new org . apache . hadoop . hive . IDENT_5 . IDENT_12 . METHOD_2 ( ) ; IDENT_14 . METHOD_3 ( STRING_0 ) ; IDENT_8 [ 1 ] = org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_9 . IDENT_10 . METHOD_4 ( IDENT_14 , null ) ; IDENT_8 [ 2 ] = org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_15 . METHOD_5 ( IDENT_10 . IDENT_11 , null ) ; IDENT_8 [ 3 ] = org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_15 . METHOD_5 ( IDENT_10 . IDENT_11 , null ) ; IDENT_8 [ 4 ] = org . apache . hadoop . hive . IDENT_5 . IDENT_6 . IDENT_9 . IDENT_10 . METHOD_4 ( IDENT_14 , new org . apache . hadoop . io . METHOD_6 ( STRING_1 ) ) ; IDENT_4 . METHOD_7 ( IDENT_8 ) ; org . apache . hadoop . hive . IDENT_16 . IDENT_4 . IDENT_17 . IDENT_18 . IDENT_19 [ ] args = new org . apache . hadoop . hive . IDENT_16 . IDENT_4 . IDENT_17 . IDENT_18 . IDENT_19 [ 1 ] ; args [ 0 ] = new org . apache . hadoop . hive . IDENT_16 . IDENT_4 . IDENT_17 . IDENT_18 . METHOD_8 ( ) { public org . apache . hadoop . io . METHOD_6 get ( ) throws org . apache . hadoop . hive . IDENT_16 . metadata . IDENT_20 { return new org . apache . hadoop . io . METHOD_6 ( STRING_2 ) ; } @ IDENT_0 . IDENT_1 . IDENT_2 . Override public void METHOD_9 ( int IDENT_21 ) throws org . apache . hadoop . hive . IDENT_16 . metadata . IDENT_20 { } } ; java . util . List < org . apache . hadoop . io . METHOD_6 > tokens = IDENT_4 . evaluate ( args ) ; "<AssertPlaceHolder>" ; IDENT_4 . close ( ) ; } evaluate ( IDENT_0 . IDENT_22 . METHOD_8 [ ] ) { assert ( IDENT_23 . length ) == 1 ; @ IDENT_0 . IDENT_22 . METHOD_10 ( STRING_3 ) final java . util . List < java . lang . Double > input = ( ( java . util . List < java . lang . Double > ) ( IDENT_24 . METHOD_11 ( IDENT_23 [ 0 ] . get ( ) ) ) ) ; return IDENT_4 . evaluate ( input ) ; }
org . junit . Assert . assertNotNull ( tokens ) 