METHOD_0 ( ) { when ( IDENT_0 . get ( STRING_0 ) ) . thenReturn ( STRING_1 ) ; when ( IDENT_0 . get ( STRING_2 ) ) . thenReturn ( STRING_3 ) ; when ( IDENT_0 . get ( STRING_4 ) ) . thenReturn ( STRING_5 ) ; when ( IDENT_0 . get ( IDENT_1 . IDENT_2 ) ) . thenReturn ( STRING_6 ) ; when ( IDENT_3 . METHOD_1 ( anyString ( ) , METHOD_2 ( ) ) ) . thenReturn ( "value" ) ; when ( IDENT_4 . METHOD_3 ( ) ) . thenReturn ( schema ) ; when ( schema . METHOD_4 ( ) ) . thenReturn ( new org . apache . lucene . analysis . IDENT_5 . METHOD_5 ( ) ) ; IDENT_6 = new com . IDENT_7 . solr . redis . METHOD_6 ( STRING_6 , IDENT_0 , IDENT_8 , IDENT_4 , IDENT_9 ) ; final org . apache . lucene . search . Query query = IDENT_6 . parse ( ) ; verify ( IDENT_3 ) . METHOD_1 ( STRING_5 , 10 ) ; org . apache . lucene . search . IDENT_10 IDENT_11 = new org . apache . lucene . search . METHOD_7 ( new org . apache . lucene . index . METHOD_8 ( ) ) ; final com . IDENT_7 . solr . redis . Set < org . apache . lucene . index . IDENT_12 > IDENT_13 = com . IDENT_7 . solr . redis . IDENT_14 . METHOD_9 ( IDENT_11 , query ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( org . apache . lucene . search . METHOD_7 , org . apache . lucene . search . Query ) { final com . IDENT_7 . solr . redis . Set < org . apache . lucene . index . IDENT_12 > IDENT_13 = new com . IDENT_7 . solr . redis . HashSet ( ) ; org . apache . lucene . search . Query IDENT_15 = IDENT_11 . METHOD_10 ( query ) ; if ( IDENT_15 instanceof org . apache . lucene . search . IDENT_16 ) { org . apache . lucene . search . IDENT_16 IDENT_17 = ( ( org . apache . lucene . search . IDENT_16 ) ( IDENT_15 ) ) ; IDENT_15 = IDENT_17 . METHOD_11 ( ) ; } IDENT_11 . METHOD_12 ( IDENT_15 , true ) . METHOD_9 ( IDENT_13 ) ; return IDENT_13 ; }
org . junit . Assert . assertEquals ( 1 , IDENT_13 . size ( ) ) 