METHOD_0 ( ) { when ( IDENT_0 . get ( STRING_0 ) ) . thenReturn ( STRING_1 ) ; when ( IDENT_0 . get ( STRING_2 ) ) . thenReturn ( STRING_3 ) ; when ( IDENT_0 . get ( IDENT_1 . IDENT_2 ) ) . thenReturn ( STRING_4 ) ; when ( IDENT_3 . METHOD_1 ( anyString ( ) , anyString ( ) , anyString ( ) ) ) . thenReturn ( new com . IDENT_4 . solr . redis . HashSet ( com . IDENT_4 . solr . redis . Arrays . asList ( new redis . IDENT_5 . IDENT_6 . METHOD_2 ( STRING_5 , ( ( double ) ( FLOAT_0 ) ) ) , new redis . IDENT_5 . IDENT_6 . METHOD_2 ( STRING_6 , ( ( double ) ( FLOAT_0 ) ) ) ) ) ) ; when ( IDENT_7 . METHOD_3 ( ) ) . thenReturn ( schema ) ; when ( schema . METHOD_4 ( ) ) . thenReturn ( new org . apache . lucene . analysis . IDENT_8 . METHOD_5 ( ) ) ; IDENT_9 = new com . IDENT_4 . solr . redis . METHOD_6 ( STRING_4 , IDENT_0 , IDENT_10 , IDENT_7 , IDENT_11 ) ; final org . apache . lucene . search . Query query = IDENT_9 . parse ( ) ; verify ( IDENT_3 ) . METHOD_1 ( STRING_3 , STRING_7 , STRING_8 ) ; org . apache . lucene . search . IDENT_12 IDENT_13 = new org . apache . lucene . search . METHOD_7 ( new org . apache . lucene . index . METHOD_8 ( ) ) ; final com . IDENT_4 . solr . redis . Set < org . apache . lucene . index . IDENT_14 > IDENT_15 = com . IDENT_4 . solr . redis . IDENT_16 . METHOD_9 ( IDENT_13 , query ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( org . apache . lucene . search . METHOD_7 , org . apache . lucene . search . Query ) { final com . IDENT_4 . solr . redis . Set < org . apache . lucene . index . IDENT_14 > IDENT_15 = new com . IDENT_4 . solr . redis . HashSet ( ) ; org . apache . lucene . search . Query IDENT_17 = IDENT_13 . METHOD_10 ( query ) ; if ( IDENT_17 instanceof org . apache . lucene . search . IDENT_18 ) { org . apache . lucene . search . IDENT_18 IDENT_19 = ( ( org . apache . lucene . search . IDENT_18 ) ( IDENT_17 ) ) ; IDENT_17 = IDENT_19 . METHOD_11 ( ) ; } IDENT_13 . METHOD_12 ( IDENT_17 , true ) . METHOD_9 ( IDENT_15 ) ; return IDENT_15 ; }
org . junit . Assert . assertEquals ( 2 , IDENT_15 . size ( ) ) 