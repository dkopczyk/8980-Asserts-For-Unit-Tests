METHOD_0 ( ) { when ( IDENT_0 . get ( STRING_0 ) ) . thenReturn ( STRING_1 ) ; when ( IDENT_0 . get ( STRING_2 ) ) . thenReturn ( STRING_3 ) ; when ( IDENT_0 . METHOD_1 ( STRING_4 , false ) ) . thenReturn ( false ) ; when ( IDENT_0 . get ( STRING_5 ) ) . thenReturn ( "2" ) ; when ( IDENT_0 . get ( IDENT_1 . IDENT_2 ) ) . thenReturn ( STRING_6 ) ; when ( IDENT_3 . METHOD_2 ( ) ) . thenReturn ( schema ) ; when ( schema . METHOD_3 ( ) ) . thenReturn ( new org . apache . lucene . analysis . core . METHOD_4 ( ) ) ; when ( IDENT_4 . getResource ( ) ) . thenReturn ( IDENT_5 ) . thenReturn ( IDENT_6 ) ; when ( IDENT_5 . METHOD_5 ( STRING_3 ) ) . METHOD_6 ( new redis . IDENT_7 . IDENT_8 . exceptions . METHOD_7 ( STRING_7 ) ) ; when ( IDENT_6 . METHOD_5 ( STRING_3 ) ) . thenReturn ( new com . IDENT_9 . solr . redis . HashSet < java . lang . String > ( com . IDENT_9 . solr . redis . Collections . singletonList ( "value" ) ) ) ; IDENT_10 = new com . IDENT_9 . solr . redis . METHOD_8 ( STRING_6 , IDENT_0 , IDENT_11 , IDENT_3 , new com . IDENT_9 . solr . redis . METHOD_9 ( IDENT_4 , 1 ) ) ; final org . apache . lucene . search . Query query = IDENT_10 . parse ( ) ; org . apache . lucene . search . IDENT_12 IDENT_13 = new org . apache . lucene . search . METHOD_10 ( new org . apache . lucene . index . METHOD_11 ( ) ) ; final com . IDENT_9 . solr . redis . Set < org . apache . lucene . index . IDENT_14 > IDENT_15 = com . IDENT_9 . solr . redis . IDENT_16 . METHOD_12 ( IDENT_13 , query ) ; "<AssertPlaceHolder>" ; } METHOD_12 ( org . apache . lucene . search . METHOD_10 , org . apache . lucene . search . Query ) { final com . IDENT_9 . solr . redis . Set < org . apache . lucene . index . IDENT_14 > IDENT_15 = new com . IDENT_9 . solr . redis . HashSet ( ) ; org . apache . lucene . search . Query IDENT_17 = IDENT_13 . METHOD_13 ( query ) ; if ( IDENT_17 instanceof org . apache . lucene . search . IDENT_18 ) { org . apache . lucene . search . IDENT_18 IDENT_19 = ( ( org . apache . lucene . search . IDENT_18 ) ( IDENT_17 ) ) ; IDENT_17 = IDENT_19 . METHOD_14 ( ) ; } IDENT_13 . METHOD_15 ( IDENT_17 , true ) . METHOD_12 ( IDENT_15 ) ; return IDENT_15 ; }
org . junit . Assert . assertEquals ( 1 , IDENT_15 . size ( ) ) 