METHOD_0 ( ) { org . IDENT_0 . IDENT_1 IDENT_2 = new org . IDENT_0 . METHOD_1 ( new org . IDENT_0 . METHOD_2 ( org . IDENT_3 . core . utils . IDENT_4 . IDENT_5 ) , new org . IDENT_0 . METHOD_2 ( org . IDENT_3 . core . utils . IDENT_4 . IDENT_5 ) ) ; org . IDENT_0 . METHOD_1 IDENT_6 = new org . IDENT_0 . METHOD_1 ( new org . IDENT_0 . METHOD_2 ( org . IDENT_3 . core . utils . IDENT_4 . IDENT_7 ) , new org . IDENT_0 . METHOD_2 ( org . IDENT_3 . core . utils . IDENT_4 . IDENT_7 ) ) ; org . IDENT_0 . METHOD_1 IDENT_8 = org . IDENT_3 . core . utils . IDENT_9 . METHOD_3 ( IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . IDENT_0 . METHOD_1 ) { if ( ! ( IDENT_10 . METHOD_4 ( ) ) ) { org . IDENT_3 . core . utils . IDENT_9 . logger . METHOD_5 ( STRING_0 ) ; throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } final int IDENT_11 = 2 * ( IDENT_10 . length ) ; org . IDENT_0 . METHOD_1 IDENT_12 = new org . IDENT_0 . METHOD_1 ( IDENT_10 . IDENT_13 , IDENT_10 . IDENT_14 ) ; final int start = ( ( int ) ( ( java . lang . Math . METHOD_6 ( ( ( ( double ) ( IDENT_11 ) ) / 2 ) ) ) - 1 ) ) ; java . lang . System . METHOD_7 ( IDENT_10 . data , start , IDENT_12 . data , 0 , ( IDENT_11 - start ) ) ; java . lang . System . METHOD_7 ( IDENT_10 . data , 0 , IDENT_12 . data , ( IDENT_11 - start ) , start ) ; return IDENT_12 ; }
org . junit . Assert . assertEquals ( IDENT_2 , IDENT_8 ) 