METHOD_0 ( ) { try { loader . METHOD_1 ( null ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . lang . IllegalArgumentException IDENT_0 ) { } java . net . URL IDENT_1 = METHOD_2 ( ) ; java . lang . String description = loader . METHOD_1 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . net . URL ) { org . IDENT_2 . IDENT_3 . core . util . IDENT_4 . assertNotNull ( STRING_1 , IDENT_5 ) ; java . lang . String IDENT_6 = "" ; java . io . File file = null ; try { file = new java . io . File ( IDENT_5 . METHOD_3 ( ) ) ; } catch ( java . net . IDENT_7 e ) { } if ( ( ( file != null ) && ( file . exists ( ) ) ) && ( file . METHOD_4 ( ) ) ) { java . io . InputStream IDENT_8 = new java . io . METHOD_5 ( file ) ; IDENT_9 . load ( IDENT_8 ) ; IDENT_8 . close ( ) ; IDENT_6 = IDENT_9 . getProperty ( org . IDENT_2 . IDENT_10 . IDENT_11 . IDENT_12 . IDENT_13 . IDENT_14 ) ; } return IDENT_6 ; }
org . junit . Assert . assertEquals ( "" , description ) 