METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 algorithm = new org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( ) ; float [ ] IDENT_6 = new float [ ] { 4 , 5 , 6 } ; float [ ] IDENT_7 = new float [ ] { 1 , 2 , 3 } ; float [ ] IDENT_8 = algorithm . METHOD_2 ( STRING_0 , IDENT_7 , IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String , float [ ] , float [ ] ) { float [ ] IDENT_9 = METHOD_3 ( IDENT_7 , IDENT_6 ) ; java . lang . String [ ] IDENT_10 = METHOD_4 ( IDENT_11 ) ; if ( IDENT_10 == null ) { return null ; } final java . util . ArrayList < float [ ] > IDENT_12 = new java . util . ArrayList ( ) ; for ( java . lang . String IDENT_13 : IDENT_10 ) { final float IDENT_14 = METHOD_5 ( IDENT_13 ) ; final float IDENT_15 = METHOD_6 ( IDENT_13 ) ; final float [ ] IDENT_16 = new float [ IDENT_6 . length ] ; for ( int i = 0 ; i < ( IDENT_7 . length ) ; i ++ ) { IDENT_16 [ i ] = METHOD_7 ( IDENT_14 , IDENT_15 , IDENT_9 [ i ] ) ; } IDENT_12 . add ( IDENT_16 ) ; } final int size = IDENT_12 . size ( ) ; float [ ] IDENT_17 = new float [ 0 ] ; if ( size == 1 ) { IDENT_17 = IDENT_12 . get ( 0 ) ; } else if ( size == 2 ) { IDENT_17 = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_18 . IDENT_19 . METHOD_8 ( IDENT_12 . get ( 0 ) , IDENT_12 . get ( 1 ) ) ; } else if ( size == 3 ) { IDENT_17 = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_18 . IDENT_19 . METHOD_9 ( IDENT_12 . get ( 0 ) , IDENT_12 . get ( 1 ) , IDENT_12 . get ( 2 ) ) ; } return IDENT_17 ; }
org . junit . Assert . assertNull ( IDENT_8 ) 