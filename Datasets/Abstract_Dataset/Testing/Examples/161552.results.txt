METHOD_0 ( ) { java . io . File IDENT_0 = METHOD_1 ( ) ; IDENT_1 . IDENT_2 . impl . indexing . IDENT_3 < org . apache . lucene . index . IDENT_4 , java . lang . String > IDENT_5 = METHOD_2 ( IDENT_0 , true , IDENT_6 . IDENT_7 ) ; IDENT_5 . start ( ) ; IDENT_1 . IDENT_2 . impl . indexing . IDENT_8 < java . lang . String > IDENT_9 = new IDENT_1 . IDENT_2 . impl . indexing . IDENT_8 < java . lang . String > ( IDENT_1 . IDENT_2 . impl . indexing . IDENT_6 . IDENT_7 ) ; IDENT_9 . METHOD_3 ( Long . MAX_VALUE ) ; IDENT_9 . METHOD_4 ( IDENT_5 ) ; IDENT_9 . start ( ) ; try { int count = IDENT_10 . IDENT_11 . length ; java . util . List < IDENT_1 . IDENT_2 . api . IDENT_12 . IDENT_13 < java . lang . String > > list = new java . util . ArrayList < IDENT_1 . IDENT_2 . api . IDENT_12 . IDENT_13 < java . lang . String > > ( count ) ; for ( int i = 0 ; i < count ; ++ i ) { list . add ( new IDENT_1 . IDENT_2 . api . IDENT_12 . IDENT_13 < java . lang . String > ( IDENT_1 . IDENT_2 . test . data . IDENT_10 . IDENT_11 [ i ] , ( "" + i ) ) ) ; } IDENT_9 . METHOD_5 ( list ) ; IDENT_9 . METHOD_6 ( ) ; IDENT_5 . METHOD_7 ( INT_0 ) ; java . util . List < IDENT_1 . IDENT_2 . api . IDENT_14 < org . apache . lucene . index . IDENT_4 > > IDENT_15 = IDENT_5 . METHOD_8 ( ) ; int IDENT_16 = 0 ; for ( IDENT_1 . IDENT_2 . api . IDENT_14 < org . apache . lucene . index . IDENT_4 > r : IDENT_15 ) { IDENT_16 += r . METHOD_9 ( ) ; } IDENT_5 . METHOD_10 ( IDENT_15 ) ; "<AssertPlaceHolder>" ; } catch ( java . io . IOException IDENT_17 ) { throw new IDENT_1 . IDENT_2 . api . METHOD_11 ( IDENT_17 . getMessage ( ) ) ; } finally { IDENT_9 . METHOD_12 ( ) ; IDENT_5 . METHOD_13 ( ) ; METHOD_14 ( IDENT_0 ) ; } } METHOD_10 ( java . util . List ) { long IDENT_18 = java . lang . System . currentTimeMillis ( ) ; IDENT_19 . METHOD_10 ( IDENT_15 ) ; IDENT_18 = ( java . lang . System . currentTimeMillis ( ) ) - IDENT_18 ; if ( IDENT_18 > ( IDENT_20 ) ) { IDENT_1 . IDENT_2 . IDENT_21 . impl . IDENT_22 . log . warn ( ( ( ( ( STRING_0 + IDENT_18 ) + STRING_1 ) + ( IDENT_20 ) ) + STRING_2 ) ) ; } }
org . junit . Assert . assertEquals ( count , METHOD_9 ) 