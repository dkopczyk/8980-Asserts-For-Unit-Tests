METHOD_0 ( ) { IDENT_0 . IDENT_1 . test . mock . IDENT_2 < java . lang . Integer > consumer = new IDENT_0 . IDENT_1 . test . mock . IDENT_2 < java . lang . Integer > ( ) ; IDENT_0 . IDENT_1 . impl . indexing . IDENT_3 < java . lang . Integer > IDENT_4 = new IDENT_0 . IDENT_1 . impl . indexing . IDENT_3 < java . lang . Integer > ( IDENT_0 . IDENT_1 . impl . indexing . IDENT_5 . IDENT_6 ) ; IDENT_4 . METHOD_1 ( Long . MAX_VALUE ) ; IDENT_4 . METHOD_2 ( consumer ) ; IDENT_4 . start ( ) ; try { int count = 10 ; java . util . List < IDENT_0 . IDENT_1 . api . IDENT_7 . IDENT_8 < java . lang . Integer > > list = new java . util . ArrayList < IDENT_0 . IDENT_1 . api . IDENT_7 . IDENT_8 < java . lang . Integer > > ( count ) ; for ( int i = 0 ; i < count ; ++ i ) { list . add ( new IDENT_0 . IDENT_1 . api . IDENT_7 . IDENT_8 < java . lang . Integer > ( i , ( "" + i ) ) ) ; } IDENT_4 . METHOD_3 ( list ) ; IDENT_4 . METHOD_4 ( INT_0 , ( "" + ( count - 1 ) ) ) ; int IDENT_9 = consumer . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } finally { IDENT_4 . METHOD_6 ( ) ; } } METHOD_5 ( ) { MOD_0 ( this ) { return IDENT_10 ; } }
org . junit . Assert . assertEquals ( IDENT_9 , count ) 