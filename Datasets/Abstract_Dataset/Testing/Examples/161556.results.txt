METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( ) ) . thenReturn ( connection ) . METHOD_2 ( new javax . jms . METHOD_3 ( STRING_0 ) ) . thenReturn ( connection ) ; when ( connection . METHOD_4 ( false , IDENT_1 . IDENT_2 ) ) . thenReturn ( session ) . METHOD_2 ( new javax . jms . METHOD_3 ( STRING_1 ) ) . thenReturn ( session ) ; when ( session . METHOD_5 ( any ( javax . jms . IDENT_3 . class ) , anyString ( ) ) ) . thenReturn ( IDENT_4 ) . METHOD_2 ( new javax . jms . METHOD_3 ( STRING_2 ) ) . thenReturn ( IDENT_4 ) ; when ( IDENT_4 . METHOD_6 ( ) ) . METHOD_2 ( new javax . jms . METHOD_3 ( STRING_3 ) ) . thenReturn ( message ) . METHOD_2 ( new javax . jms . METHOD_3 ( STRING_4 ) ) . thenReturn ( message ) . METHOD_2 ( new javax . jms . METHOD_3 ( STRING_5 ) ) . METHOD_2 ( new javax . jms . METHOD_3 ( STRING_6 ) ) . thenReturn ( message ) ; provider . METHOD_7 ( 1 ) ; final java . util . concurrent . atomic . IDENT_5 IDENT_6 = new java . util . concurrent . atomic . METHOD_8 ( false ) ; provider . METHOD_9 ( new IDENT_7 . IDENT_8 . api . IDENT_9 < java . lang . Object > ( ) { MOD_0 MOD_1 java . lang . String version = null ; MOD_0 long v = 1 ; @ IDENT_7 . IDENT_8 . IDENT_10 . jms . Override public void METHOD_10 ( java . util . Collection < IDENT_7 . IDENT_8 . api . IDENT_9 . IDENT_11 < java . lang . Object > > data ) throws IDENT_7 . IDENT_8 . api . IDENT_12 { for ( IDENT_7 . IDENT_8 . api . IDENT_9 . IDENT_11 < java . lang . Object > e : data ) { if ( ( java . lang . Long . valueOf ( e . METHOD_11 ( ) ) ) != ( v ) ) { IDENT_6 . set ( true ) ; } ( v ) ++ ; version = e . METHOD_11 ( ) ; } } @ IDENT_7 . IDENT_8 . IDENT_10 . jms . Override public java . lang . String METHOD_11 ( ) { return version ; } @ IDENT_7 . IDENT_8 . IDENT_10 . jms . Override public java . util . IDENT_13 < java . lang . String > METHOD_12 ( ) { return IDENT_7 . IDENT_8 . impl . indexing . IDENT_14 . IDENT_15 ; } } ) ; provider . start ( ) ; java . lang . String IDENT_16 = STRING_7 ; provider . METHOD_13 ( INT_0 , IDENT_16 ) ; "<AssertPlaceHolder>" ; provider . METHOD_14 ( ) ; } get ( ) { return ( ( IDENT_17 ) ( IDENT_7 . IDENT_8 . api . impl . IDENT_18 . METHOD_15 ( ) . METHOD_16 ( IDENT_19 ) . get ( IDENT_20 ) ) ) ; }
org . junit . Assert . assertFalse ( IDENT_6 . get ( ) ) 