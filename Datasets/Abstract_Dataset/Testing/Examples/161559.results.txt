METHOD_0 ( ) { request . METHOD_1 ( STRING_0 ) ; service . METHOD_2 ( new au . com . IDENT_0 . IDENT_1 . model . METHOD_3 ( request ) ) ; au . com . IDENT_0 . IDENT_1 . model . METHOD_3 filter = new au . com . IDENT_0 . IDENT_1 . model . METHOD_3 ( ) ; filter . METHOD_1 ( STRING_1 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( au . com . IDENT_0 . IDENT_1 . model . METHOD_3 , long ) { long IDENT_2 = IDENT_3 ; while ( IDENT_2 > 0 ) { java . util . List < au . com . IDENT_0 . IDENT_1 . model . METHOD_3 > result = METHOD_4 ( filter ) ; if ( result . isEmpty ( ) ) { try { long start = java . lang . System . currentTimeMillis ( ) ; this . METHOD_5 ( IDENT_2 ) ; IDENT_2 OP_0 ( java . lang . System . currentTimeMillis ( ) ) - start ; } catch ( java . lang . IDENT_4 e ) { throw new java . lang . RuntimeException ( STRING_2 ) ; } } else { return result ; } } return java . util . Collections . emptyList ( ) ; }
org . junit . Assert . assertEquals ( 0 , service . METHOD_4 ( new au . com . IDENT_0 . IDENT_1 . model . METHOD_3 ( filter ) , 100 ) . size ( ) ) 