delete ( ) { final java . lang . String path = STRING_0 ; final org . IDENT_0 . common . rest . IDENT_1 IDENT_2 = new org . IDENT_0 . common . rest . METHOD_0 ( path ) ; final java . lang . String IDENT_3 = STRING_1 ; final org . apache . http . IDENT_4 IDENT_5 = new org . apache . http . message . METHOD_1 ( org . apache . http . IDENT_6 . IDENT_7 , org . apache . http . IDENT_8 . IDENT_9 , "" ) ; when ( IDENT_10 . execute ( METHOD_2 ( org . apache . http . client . methods . IDENT_11 . class ) ) ) . thenReturn ( IDENT_12 ) ; when ( IDENT_12 . METHOD_3 ( ) ) . thenReturn ( IDENT_5 ) ; when ( IDENT_12 . METHOD_4 ( ) ) . thenReturn ( new org . apache . http . entity . METHOD_5 ( IDENT_3 ) ) ; final java . lang . String result = IDENT_13 . delete ( IDENT_2 ) ; verify ( IDENT_10 ) . execute ( any ( org . apache . http . client . methods . IDENT_11 . class ) ) ; "<AssertPlaceHolder>" ; } execute ( org . IDENT_0 . platform . service . dao . IDENT_14 ) { org . springframework . util . Assert . METHOD_2 ( action , STRING_2 ) ; redis . IDENT_15 . IDENT_16 . IDENT_17 conn = null ; boolean IDENT_18 = false ; try { conn = IDENT_19 . getResource ( ) ; return action . METHOD_6 ( conn ) ; } catch ( final java . lang . Exception e ) { if ( e instanceof redis . IDENT_15 . IDENT_16 . exceptions . IDENT_20 ) { IDENT_18 = true ; } throw IDENT_19 . METHOD_7 ( e ) ; } finally { IDENT_19 . METHOD_8 ( conn , IDENT_18 ) ; } }
org . junit . Assert . assertEquals ( IDENT_3 , result ) 