METHOD_0 ( ) { net . sourceforge . IDENT_0 . pipeline . runner . IDENT_1 runner = new net . sourceforge . IDENT_0 . pipeline . runner . METHOD_1 ( ) ; java . lang . String [ ] IDENT_2 = new java . lang . String [ ] { STRING_0 0 , STRING_0 , STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_5 , STRING_7 , STRING_5 , STRING_8 , STRING_5 , STRING_9 } ; runner . run ( IDENT_2 ) ; "<AssertPlaceHolder>" ; } run ( java . lang . String [ ] ) { METHOD_2 ( ) ; try { options = parser . parse ( args ) ; } catch ( IDENT_3 . IDENT_4 e ) { METHOD_3 ( parser , e . getMessage ( ) ) ; } METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; }
org . junit . Assert . assertTrue ( true ) 