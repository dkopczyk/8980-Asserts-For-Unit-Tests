METHOD_0 ( ) { java . util . List < com . IDENT_0 . domain . model . IDENT_1 > IDENT_2 = IDENT_3 . METHOD_1 ( com . IDENT_0 . service . IDENT_4 . impl . test . IDENT_5 . id , com . IDENT_0 . service . IDENT_4 . impl . test . IDENT_5 . id , com . IDENT_0 . service . IDENT_4 . impl . test . IDENT_5 . start , com . IDENT_0 . service . IDENT_4 . impl . test . IDENT_5 . IDENT_6 , null ) ; verify ( IDENT_7 , times ( 2 ) ) . METHOD_2 ( com . IDENT_0 . service . IDENT_4 . impl . test . IDENT_5 . id ) ; verify ( IDENT_8 , times ( 2 ) ) . METHOD_3 ( IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( com . IDENT_0 . domain . model . type . IDENT_10 ) { com . IDENT_0 . domain . model . IDENT_11 IDENT_12 = new com . IDENT_0 . domain . model . METHOD_4 ( ) ; IDENT_12 . METHOD_5 ( IDENT_13 . getId ( ) ) ; IDENT_12 . METHOD_6 ( IDENT_13 . getType ( ) ) ; java . util . List < com . IDENT_0 . domain . model . METHOD_4 > IDENT_14 = IDENT_15 . METHOD_7 ( new com . IDENT_0 . domain . mapper . model . METHOD_8 ( IDENT_12 ) ) ; java . util . List < com . IDENT_0 . domain . model . IDENT_16 > IDENT_17 = new java . util . ArrayList < com . IDENT_0 . domain . model . IDENT_16 > ( ) ; for ( com . IDENT_0 . domain . model . METHOD_4 IDENT_18 : IDENT_14 ) { IDENT_17 . add ( IDENT_19 . METHOD_9 ( IDENT_18 . METHOD_10 ( ) ) ) ; } IDENT_13 . METHOD_11 ( IDENT_17 ) ; }
org . junit . Assert . assertEquals ( list , IDENT_2 ) 