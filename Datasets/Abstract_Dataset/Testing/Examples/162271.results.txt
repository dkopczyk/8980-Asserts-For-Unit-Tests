METHOD_0 ( ) { IDENT_0 . METHOD_1 ( true ) ; com . IDENT_1 . domain . model . IDENT_2 IDENT_3 = METHOD_2 ( ) ; com . IDENT_1 . domain . model . IDENT_2 IDENT_4 = METHOD_2 ( ) ; when ( IDENT_5 . METHOD_3 ( com . IDENT_1 . service . IDENT_6 . impl . test . IDENT_7 . id ) ) . thenReturn ( IDENT_3 ) . thenReturn ( IDENT_4 ) . thenReturn ( IDENT_0 ) ; com . IDENT_1 . domain . model . IDENT_2 result = IDENT_8 . METHOD_4 ( IDENT_0 ) ; verify ( IDENT_5 , times ( 2 ) ) . METHOD_3 ( com . IDENT_1 . service . IDENT_6 . impl . test . IDENT_7 . id ) ; verify ( IDENT_5 , times ( 1 ) ) . METHOD_5 ( IDENT_0 ) ; verify ( IDENT_9 ) . METHOD_6 ( IDENT_4 , 0 , ( - 1 ) ) ; verify ( IDENT_10 ) . METHOD_7 ( IDENT_0 ) ; verify ( IDENT_9 ) . METHOD_8 ( new com . IDENT_1 . domain . model . METHOD_9 ( ) . getType ( ) , com . IDENT_1 . service . IDENT_6 . impl . test . IDENT_7 . id ) ; verify ( IDENT_11 ) . METHOD_10 ( new com . IDENT_1 . domain . model . METHOD_9 ( ) . getType ( ) , com . IDENT_1 . service . IDENT_6 . impl . test . IDENT_7 . id ) ; verify ( IDENT_9 , times ( 0 ) ) . METHOD_11 ( new com . IDENT_1 . domain . model . METHOD_9 ( ) . getType ( ) , com . IDENT_1 . service . IDENT_6 . impl . test . IDENT_7 . id ) ; verify ( IDENT_11 , times ( 0 ) ) . METHOD_12 ( new com . IDENT_1 . domain . model . METHOD_9 ( ) . getType ( ) , com . IDENT_1 . service . IDENT_6 . impl . test . IDENT_7 . id ) ; verify ( IDENT_9 , times ( 0 ) ) . METHOD_13 ( IDENT_0 ) ; verify ( IDENT_11 , times ( 0 ) ) . METHOD_14 ( IDENT_0 ) ; verify ( IDENT_11 , times ( 0 ) ) . METHOD_15 ( IDENT_12 ) ; "<AssertPlaceHolder>" ; } METHOD_15 ( com . IDENT_1 . domain . model . IDENT_13 ) { if ( IDENT_12 == null ) { return null ; } com . IDENT_1 . domain . model . IDENT_13 t = new com . IDENT_1 . domain . model . METHOD_16 ( ) ; t . METHOD_17 ( IDENT_12 . METHOD_18 ( ) ) ; t . METHOD_19 ( IDENT_12 . METHOD_20 ( ) ) ; com . IDENT_1 . domain . mapper . model . IDENT_14 example = new com . IDENT_1 . domain . mapper . model . METHOD_21 ( t ) ; java . util . List < com . IDENT_1 . domain . model . METHOD_16 > IDENT_15 = IDENT_16 . METHOD_22 ( example ) ; if ( ( IDENT_15 . size ( ) ) == 0 ) { METHOD_23 ( IDENT_12 ) ; return IDENT_12 ; } else { IDENT_12 . setId ( IDENT_15 . get ( 0 ) . getId ( ) ) ; IDENT_12 . METHOD_24 ( null ) ; METHOD_25 ( IDENT_12 ) ; return IDENT_12 ; } }
org . junit . Assert . assertEquals ( IDENT_0 , result ) 