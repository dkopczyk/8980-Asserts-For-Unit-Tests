METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new IDENT_0 . IDENT_1 . METHOD_1 ( ) ; java . lang . String IDENT_4 = STRING_0 ; java . lang . String IDENT_5 = STRING_1 ; boolean result = IDENT_3 . contains ( IDENT_4 , IDENT_5 ) ; boolean IDENT_6 = true ; "<AssertPlaceHolder>" ; } contains ( java . lang . String , java . lang . String ) { char [ ] IDENT_5 = IDENT_7 . METHOD_2 ( ) ; original = source . METHOD_2 ( ) ; int count = 0 ; int j = 0 ; for ( int i = 0 ; i < ( original . length ) ; i ++ ) { if ( count == ( IDENT_5 . length ) ) { break ; } if ( j < ( IDENT_5 . length ) ) { if ( ( original [ i ] ) == ( IDENT_5 [ j ] ) ) { count ++ ; j ++ ; } else { count = 0 ; j = 0 ; } } } return count == ( IDENT_5 . length ) ? true : false ; }
org . junit . Assert . assertThat ( result , org . hamcrest . core . Is . is ( IDENT_6 ) ) 