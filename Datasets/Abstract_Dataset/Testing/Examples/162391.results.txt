METHOD_0 ( ) { IDENT_0 . IDENT_1 . model . User IDENT_2 = new IDENT_0 . IDENT_1 . model . User ( STRING_0 , INT_0 ) ; IDENT_0 . IDENT_1 . model . User IDENT_3 = new IDENT_0 . IDENT_1 . model . User ( STRING_1 , INT_1 ) ; IDENT_0 . IDENT_1 . control . IDENT_4 [ ] IDENT_5 = new IDENT_0 . IDENT_1 . control . IDENT_4 [ 2 ] ; IDENT_5 [ 0 ] = new IDENT_0 . IDENT_1 . control . METHOD_1 ( ) ; IDENT_5 [ 1 ] = new IDENT_0 . IDENT_1 . control . METHOD_2 ( ) ; IDENT_0 . IDENT_1 . model . IDENT_6 storage = new IDENT_0 . IDENT_1 . model . METHOD_3 ( 2 ) ; storage . METHOD_4 ( IDENT_5 , IDENT_2 ) ; storage . METHOD_4 ( IDENT_5 , IDENT_3 ) ; IDENT_0 . IDENT_1 . control . IDENT_4 [ ] IDENT_7 = new IDENT_0 . IDENT_1 . control . IDENT_4 [ 1 ] ; IDENT_7 [ 0 ] = new IDENT_0 . IDENT_1 . control . METHOD_5 ( ) ; boolean result = storage . METHOD_6 ( IDENT_7 , IDENT_2 ) ; boolean control = true ; "<AssertPlaceHolder>" ; } METHOD_6 ( IDENT_0 . IDENT_1 . control . IDENT_4 [ ] , IDENT_0 . IDENT_1 . model . User ) { boolean result = METHOD_7 ( IDENT_5 , user ) ; System . out . println ( result ) ; if ( result ) { for ( int index = 0 ; index < ( this . IDENT_8 . length ) ; index ++ ) { if ( this . IDENT_8 [ index ] . getId ( ) . equals ( user . getId ( ) ) ) { this . IDENT_8 [ index ] = null ; break ; } } } return result ; }
org . junit . Assert . assertThat ( control , org . hamcrest . core . Is . is ( result ) ) 