METHOD_0 ( ) { try { java . io . File f = java . io . File . METHOD_1 ( STRING_0 , STRING_1 ) ; f . METHOD_2 ( ) ; char [ ] IDENT_0 = METHOD_3 ( 20 ) ; java . io . IDENT_1 IDENT_2 = new java . io . METHOD_4 ( f ) ; java . io . IDENT_3 IDENT_4 = METHOD_5 ( ) . METHOD_6 ( IDENT_2 , IDENT_0 ) ; IDENT_4 . write ( IDENT_5 . IDENT_6 . service . test . IDENT_7 . IDENT_8 . getBytes ( ) ) ; IDENT_4 . METHOD_7 ( ) ; IDENT_4 . close ( ) ; java . io . IDENT_9 IDENT_10 = new java . io . METHOD_8 ( f . getAbsolutePath ( ) ) ; java . io . InputStream IDENT_11 = METHOD_5 ( ) . METHOD_9 ( IDENT_10 , IDENT_0 ) ; java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; byte data = - 1 ; while ( ( data = ( ( byte ) ( IDENT_11 . read ( ) ) ) ) != ( - 1 ) ) { sb . append ( ( ( char ) ( data ) ) ) ; } "<AssertPlaceHolder>" ; } catch ( java . io . IOException e ) { IDENT_5 . IDENT_6 . service . test . IDENT_7 . LOG . error ( STRING_2 , e ) ; } } toString ( ) { return ( ( ( STRING_3 + ( IDENT_12 ) ) + STRING_4 ) + ( IDENT_13 . toString ( ) ) ) + STRING_5 ; }
org . junit . Assert . assertEquals ( IDENT_5 . IDENT_6 . service . test . IDENT_7 . IDENT_8 , sb . toString ( ) ) 