METHOD_0 ( ) { java . util . HashSet < IDENT_0 . IDENT_1 . common . connect . IDENT_2 > IDENT_3 = new java . util . HashSet ( IDENT_4 . METHOD_1 ( ) ) ; java . util . HashSet < IDENT_0 . IDENT_1 . common . connect . IDENT_2 > IDENT_5 = METHOD_2 ( IDENT_3 , METHOD_3 ( 1 , IDENT_0 . IDENT_6 . service . test . IDENT_7 . IDENT_8 ) ) ; for ( IDENT_0 . IDENT_1 . common . connect . IDENT_2 type : IDENT_5 ) { java . util . HashSet < IDENT_0 . IDENT_1 . common . connect . IDENT_9 > IDENT_10 = new java . util . HashSet ( type . METHOD_4 ( ) ) ; IDENT_10 = METHOD_2 ( IDENT_10 , METHOD_3 ( 1 , IDENT_0 . IDENT_6 . service . test . IDENT_7 . IDENT_8 ) ) ; for ( IDENT_0 . IDENT_1 . common . connect . IDENT_9 IDENT_11 : IDENT_10 ) { "<AssertPlaceHolder>" ; } } } METHOD_5 ( java . lang . String , java . lang . String ) { return IDENT_12 . get ( IDENT_13 ) . METHOD_5 ( id ) ; }
org . junit . Assert . assertEquals ( IDENT_11 , IDENT_4 . METHOD_5 ( type . getId ( ) , IDENT_11 . getId ( ) ) ) 