METHOD_0 ( ) { final boolean [ ] IDENT_0 = new boolean [ ] { true } ; java . io . IDENT_1 pos = METHOD_1 ( IDENT_0 , new org . IDENT_2 . lib . IDENT_3 . connection . IDENT_4 . METHOD_2 ( ) ) ; for ( int IDENT_5 = 1 ; IDENT_5 < 10 ; IDENT_5 ++ ) { System . out . println ( ( STRING_0 + IDENT_5 ) ) ; for ( int IDENT_6 = org . IDENT_2 . lib . IDENT_3 . connection . IDENT_4 . IDENT_7 ; IDENT_6 < INT_0 ; IDENT_6 ++ ) { pos . write ( METHOD_3 ( IDENT_5 , IDENT_6 ) ) ; } } java . lang . Thread . sleep ( 200 ) ; boolean IDENT_8 = IDENT_0 [ 0 ] ; pos . close ( ) ; "<AssertPlaceHolder>" ; } close ( ) { if ( ( IDENT_9 ) != null ) { IDENT_9 . METHOD_4 ( ) ; } }
org . junit . Assert . assertTrue ( IDENT_8 ) 