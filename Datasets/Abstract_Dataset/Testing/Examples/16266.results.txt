METHOD_0 ( ) { System . out . println ( STRING_0 ) ; java . lang . String IDENT_0 = STRING_1 ; java . lang . String IDENT_1 = STRING_2 ; int [ ] IDENT_2 = new int [ ] { 0 } ; org . json . simple . parser . IDENT_3 parser = new org . json . simple . parser . METHOD_1 ( ) ; for ( int c = INT_0 ; c <= INT_1 ; c ++ ) { if ( ( STRING_3 == c ) || ( STRING_4 == c ) ) { continue ; } IDENT_2 [ 0 ] = c ; java . lang . String str = new java . lang . String ( IDENT_2 , 0 , 1 ) ; java . lang . String msg = ( IDENT_0 + str ) + IDENT_1 ; java . lang . Object result ; try { result = parser . parse ( msg ) ; } catch ( org . json . simple . parser . IDENT_4 IDENT_5 ) { System . err . println ( ( STRING_5 + msg ) ) ; throw IDENT_5 ; } org . junit . Assert . assertTrue ( result . toString ( ) , ( result instanceof org . json . simple . JSONObject ) ) ; java . lang . Object value = ( ( org . json . simple . JSONObject ) ( result ) ) . get ( "name" ) ; "<AssertPlaceHolder>" ; } } println ( long ) { delegate ( ) . println ( x ) ; }
org . junit . Assert . assertEquals ( str , ( ( java . lang . String ) ( value ) ) ) 