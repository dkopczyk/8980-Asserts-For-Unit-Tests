METHOD_0 ( ) { org . oscm . app . IDENT_0 . data . FlowState IDENT_1 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_2 ; org . oscm . app . IDENT_0 . data . FlowState IDENT_3 = null ; IDENT_3 = IDENT_4 . METHOD_1 ( STRING_0 , STRING_1 , paramHandler , IDENT_1 , IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String , org . oscm . app . IDENT_0 . IDENT_5 , org . oscm . app . IDENT_0 . data . FlowState , org . oscm . app . IDENT_0 . data . FlowState ) { org . oscm . app . IDENT_0 . data . FlowState IDENT_3 = IDENT_6 ; boolean IDENT_7 = IDENT_8 . IDENT_9 . equals ( paramHandler . METHOD_2 ( ) . METHOD_3 ( ) ) ; switch ( IDENT_1 ) { case IDENT_10 : if ( ( paramHandler . METHOD_4 ( ) ) != 0 ) { paramHandler . METHOD_5 ( paramHandler . METHOD_4 ( ) ) ; IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_11 ; break ; } case IDENT_11 : if ( METHOD_6 ( IDENT_12 , IDENT_13 , FlowState . IDENT_14 , paramHandler ) ) { java . lang . String status = IDENT_15 . METHOD_7 ( paramHandler ) ; if ( IDENT_16 . IDENT_17 . equals ( status ) ) { IDENT_15 . METHOD_8 ( paramHandler ) ; } else if ( IDENT_16 . IDENT_18 . equals ( status ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_14 ; } } break ; case IDENT_14 : if ( IDENT_7 && ( METHOD_6 ( IDENT_12 , IDENT_13 , FlowState . IDENT_19 , paramHandler ) ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_19 ; IDENT_15 . METHOD_9 ( paramHandler ) ; if ( IDENT_20 . METHOD_10 ( paramHandler ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_21 ; } } break ; case IDENT_21 : if ( IDENT_7 && ( METHOD_6 ( IDENT_12 , IDENT_13 , FlowState . IDENT_22 , paramHandler ) ) ) { IDENT_20 . METHOD_11 ( paramHandler ) ; IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_22 ; } break ; case IDENT_22 : if ( METHOD_6 ( IDENT_12 , IDENT_13 , FlowState . IDENT_2 , paramHandler ) ) { if ( IDENT_20 . METHOD_12 ( paramHandler ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_2 ; } } break ; case IDENT_2 : if ( IDENT_7 && ( METHOD_6 ( IDENT_12 , IDENT_13 , FlowState . IDENT_23 , paramHandler ) ) ) { IDENT_20 . METHOD_13 ( paramHandler ) ; IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_23 ; } break ; case IDENT_23 : if ( METHOD_6 ( IDENT_12 , IDENT_13 , FlowState . IDENT_24 , paramHandler ) ) { if ( IDENT_20 . METHOD_14 ( paramHandler ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_24 ; } } break ; case IDENT_24 : if ( METHOD_6 ( IDENT_12 , IDENT_13 , FlowState . IDENT_19 , paramHandler ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_19 ; } break ; case IDENT_19 : if ( METHOD_6 ( IDENT_12 , IDENT_13 , FlowState . IDENT_25 , paramHandler ) ) { if ( IDENT_16 . IDENT_18 . equals ( IDENT_15 . METHOD_7 ( paramHandler ) ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_25 ; } } break ; case IDENT_25 : if ( METHOD_6 ( IDENT_12 , IDENT_13 , FlowState . IDENT_26 , paramHandler ) ) { if ( IDENT_15 . METHOD_15 ( paramHandler ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_26 ; } } break ; case IDENT_26 : if ( METHOD_6 ( IDENT_12 , IDENT_13 , FlowState . IDENT_27 , paramHandler ) ) { if ( IDENT_16 . IDENT_17 . equals ( IDENT_15 . METHOD_7 ( paramHandler ) ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_27 ; } } break ; case IDENT_27 : if ( METHOD_6 ( IDENT_12 , IDENT_13 , FlowState . IDENT_28 , paramHandler ) ) { if ( IDENT_16 . IDENT_17 . equals ( IDENT_15 . METHOD_7 ( paramHandler ) ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_29 ; } } break ; case IDENT_29 : java . lang . String mail = paramHandler . METHOD_16 ( ) ; if ( mail != null ) { IDENT_3 = METHOD_17 ( IDENT_12 , IDENT_13 , paramHandler , mail ) ; } else if ( METHOD_6 ( IDENT_12 , IDENT_13 , FlowState . IDENT_28 , paramHandler ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_28 ; } break ; default : } return IDENT_3 ; }
org . junit . Assert . assertNull ( IDENT_3 ) 