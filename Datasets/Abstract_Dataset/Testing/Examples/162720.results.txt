METHOD_0 ( ) { org . oscm . app . IDENT_0 . data . FlowState IDENT_1 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_2 ; org . oscm . app . IDENT_0 . data . FlowState IDENT_3 = null ; parameters . put ( IDENT_4 . IDENT_5 , new org . oscm . app . IDENT_6 . data . METHOD_1 ( IDENT_4 . IDENT_5 , STRING_0 ) ) ; IDENT_3 = IDENT_7 . METHOD_2 ( STRING_1 , STRING_2 , paramHandler , IDENT_1 , IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String , java . lang . String , org . oscm . app . IDENT_0 . IDENT_4 , org . oscm . app . IDENT_0 . data . FlowState , org . oscm . app . IDENT_0 . data . FlowState ) { org . oscm . app . IDENT_0 . data . FlowState IDENT_3 = IDENT_8 ; boolean IDENT_9 = IDENT_10 . IDENT_11 . equals ( paramHandler . METHOD_3 ( ) . METHOD_4 ( ) ) ; switch ( IDENT_1 ) { case IDENT_12 : if ( ( paramHandler . METHOD_5 ( ) ) != 0 ) { paramHandler . METHOD_6 ( paramHandler . METHOD_5 ( ) ) ; IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_13 ; break ; } case IDENT_13 : if ( METHOD_7 ( IDENT_14 , IDENT_15 , FlowState . IDENT_16 , paramHandler ) ) { java . lang . String status = IDENT_17 . METHOD_8 ( paramHandler ) ; if ( IDENT_18 . IDENT_19 . equals ( status ) ) { IDENT_17 . METHOD_9 ( paramHandler ) ; } else if ( IDENT_18 . IDENT_20 . equals ( status ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_16 ; } } break ; case IDENT_16 : if ( IDENT_9 && ( METHOD_7 ( IDENT_14 , IDENT_15 , FlowState . IDENT_21 , paramHandler ) ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_21 ; IDENT_17 . METHOD_10 ( paramHandler ) ; if ( IDENT_22 . METHOD_11 ( paramHandler ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_23 ; } } break ; case IDENT_23 : if ( IDENT_9 && ( METHOD_7 ( IDENT_14 , IDENT_15 , FlowState . IDENT_24 , paramHandler ) ) ) { IDENT_22 . METHOD_12 ( paramHandler ) ; IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_24 ; } break ; case IDENT_24 : if ( METHOD_7 ( IDENT_14 , IDENT_15 , FlowState . IDENT_25 , paramHandler ) ) { if ( IDENT_22 . METHOD_13 ( paramHandler ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_25 ; } } break ; case IDENT_25 : if ( IDENT_9 && ( METHOD_7 ( IDENT_14 , IDENT_15 , FlowState . IDENT_26 , paramHandler ) ) ) { IDENT_22 . METHOD_14 ( paramHandler ) ; IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_26 ; } break ; case IDENT_26 : if ( METHOD_7 ( IDENT_14 , IDENT_15 , FlowState . IDENT_27 , paramHandler ) ) { if ( IDENT_22 . METHOD_15 ( paramHandler ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_27 ; } } break ; case IDENT_27 : if ( METHOD_7 ( IDENT_14 , IDENT_15 , FlowState . IDENT_21 , paramHandler ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_21 ; } break ; case IDENT_21 : if ( METHOD_7 ( IDENT_14 , IDENT_15 , FlowState . IDENT_28 , paramHandler ) ) { if ( IDENT_18 . IDENT_20 . equals ( IDENT_17 . METHOD_8 ( paramHandler ) ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_28 ; } } break ; case IDENT_28 : if ( METHOD_7 ( IDENT_14 , IDENT_15 , FlowState . IDENT_29 , paramHandler ) ) { if ( IDENT_17 . METHOD_16 ( paramHandler ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_29 ; } } break ; case IDENT_29 : if ( METHOD_7 ( IDENT_14 , IDENT_15 , FlowState . IDENT_30 , paramHandler ) ) { if ( IDENT_18 . IDENT_19 . equals ( IDENT_17 . METHOD_8 ( paramHandler ) ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_30 ; } } break ; case IDENT_30 : if ( METHOD_7 ( IDENT_14 , IDENT_15 , FlowState . IDENT_31 , paramHandler ) ) { if ( IDENT_18 . IDENT_19 . equals ( IDENT_17 . METHOD_8 ( paramHandler ) ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_2 ; } } break ; case IDENT_2 : java . lang . String mail = paramHandler . METHOD_17 ( ) ; if ( mail != null ) { IDENT_3 = METHOD_18 ( IDENT_14 , IDENT_15 , paramHandler , mail ) ; } else if ( METHOD_7 ( IDENT_14 , IDENT_15 , FlowState . IDENT_31 , paramHandler ) ) { IDENT_3 = org . oscm . app . IDENT_0 . data . FlowState . IDENT_31 ; } break ; default : } return IDENT_3 ; }
org . junit . Assert . assertEquals ( FlowState . IDENT_31 , IDENT_3 ) 