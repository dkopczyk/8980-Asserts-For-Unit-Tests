METHOD_0 ( ) { METHOD_1 ( ) ; IDENT_0 . add ( STRING_0 ) ; java . util . List < org . oscm . IDENT_1 . model . IDENT_2 > IDENT_3 = METHOD_2 ( IDENT_0 , 0 , Long . MAX_VALUE ) ; long [ ] IDENT_4 = new long [ ] { 1 , 2 , 3 } ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , long [ ] ) { return new org . hamcrest . IDENT_5 < java . util . List < org . oscm . IDENT_1 . model . IDENT_2 > > ( ) { MOD_0 int IDENT_6 ; @ org . oscm . IDENT_1 . matchers . Override public boolean matches ( java . lang . Object object ) { java . util . List < org . oscm . IDENT_1 . model . IDENT_2 > IDENT_7 = ( ( java . util . List < org . oscm . IDENT_1 . model . IDENT_2 > ) ( object ) ) ; org . junit . Assert . assertEquals ( IDENT_4 . length , IDENT_7 . size ( ) ) ; for ( int i = 0 ; i < ( IDENT_7 . size ( ) ) ; i ++ ) { org . junit . Assert . assertEquals ( IDENT_4 [ i ] , IDENT_7 . get ( i ) . METHOD_4 ( ) ) ; } for ( org . oscm . IDENT_1 . model . IDENT_2 IDENT_8 : IDENT_7 ) { org . oscm . IDENT_1 . matchers . IDENT_9 . METHOD_5 ( IDENT_8 , IDENT_10 ) ; } return true ; } @ org . oscm . IDENT_1 . matchers . Override public void METHOD_6 ( org . hamcrest . IDENT_11 description ) { description . METHOD_7 ( ( STRING_1 + ( IDENT_6 ) ) ) ; } } ; }
org . junit . Assert . assertThat ( IDENT_3 , METHOD_3 ( STRING_0 , IDENT_4 ) ) 