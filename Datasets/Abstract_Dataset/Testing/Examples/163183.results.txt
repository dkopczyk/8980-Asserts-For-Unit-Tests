METHOD_0 ( ) { long IDENT_0 = org . oscm . test . IDENT_1 . METHOD_1 ( STRING_0 ) ; long IDENT_2 = org . oscm . test . IDENT_1 . METHOD_1 ( STRING_0 ) ; org . oscm . IDENT_3 . service . model . IDENT_4 IDENT_5 = org . oscm . IDENT_3 . business . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_2 ( STRING_1 , STRING_2 ) ; double IDENT_9 = IDENT_10 . METHOD_3 ( IDENT_11 . IDENT_12 , IDENT_5 , IDENT_0 , IDENT_2 , true , true ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . oscm . internal . types . IDENT_13 . IDENT_11 , org . oscm . IDENT_3 . service . model . IDENT_4 , long , long , boolean , boolean ) { if ( IDENT_14 < IDENT_15 ) { throw new org . oscm . internal . types . exception . IllegalArgumentException ( ( ( ( ( STRING_3 + ( new java . util . Date ( IDENT_14 ) ) ) + STRING_4 ) + ( new java . util . Date ( IDENT_15 ) ) ) + STRING_5 ) ) ; } java . util . Calendar IDENT_16 = org . oscm . IDENT_3 . business . IDENT_6 . IDENT_7 . IDENT_17 . METHOD_4 ( IDENT_5 . METHOD_5 ( ) , IDENT_18 ) ; java . util . Calendar IDENT_19 = org . oscm . IDENT_3 . business . IDENT_6 . IDENT_7 . IDENT_17 . METHOD_4 ( IDENT_5 . METHOD_6 ( ) , IDENT_18 ) ; if ( METHOD_7 ( IDENT_15 , IDENT_14 , IDENT_16 . METHOD_8 ( ) , IDENT_19 . METHOD_8 ( ) ) ) { return 0.0 ; } else { java . util . Calendar IDENT_20 = METHOD_9 ( IDENT_18 , IDENT_16 , IDENT_15 , IDENT_21 ) ; java . util . Calendar IDENT_22 = METHOD_10 ( IDENT_18 , IDENT_19 , IDENT_14 , IDENT_23 ) ; return METHOD_11 ( IDENT_20 . METHOD_8 ( ) , IDENT_22 . METHOD_8 ( ) , IDENT_18 ) ; } }
org . junit . Assert . assertEquals ( 1 , IDENT_9 , 0 ) 