METHOD_0 ( ) { long IDENT_0 = 0 ; java . util . Locale . METHOD_1 ( Locale . IDENT_1 ) ; IDENT_2 . METHOD_2 ( IDENT_0 , INT_0 ) ; java . lang . String IDENT_3 = IDENT_2 . result . METHOD_3 ( ) . METHOD_4 ( ) . toString ( ) ; java . util . Locale . METHOD_1 ( Locale . IDENT_4 ) ; IDENT_2 . METHOD_2 ( IDENT_0 , INT_0 ) ; java . lang . String IDENT_5 = IDENT_2 . result . METHOD_3 ( ) . METHOD_4 ( ) . toString ( ) ; "<AssertPlaceHolder>" ; } toString ( ) { java . lang . StringBuffer sb = new java . lang . StringBuffer ( ) ; sb . append ( STRING_0 ) ; sb . append ( ( ( STRING_1 9 + ( METHOD_5 ( ) ) ) + STRING_1 6 ) ) ; sb . append ( ( ( STRING_1 3 + ( METHOD_6 ( ) ) ) + STRING_1 6 ) ) ; sb . append ( ( ( STRING_1 5 + ( METHOD_7 ( ) ) ) + STRING_1 6 ) ) ; sb . append ( ( ( STRING_1 4 + ( METHOD_8 ( ) ) ) + STRING_1 6 ) ) ; sb . append ( ( ( STRING_2 + ( METHOD_9 ( ) ) ) + STRING_1 6 ) ) ; sb . append ( ( ( STRING_1 1 + ( METHOD_10 ( ) ) ) + STRING_1 6 ) ) ; sb . append ( ( ( STRING_1 7 + ( METHOD_11 ( ) ) ) + STRING_3 ) ) ; java . util . List < org . apache . commons . configuration . IDENT_6 > IDENT_7 = configuration . METHOD_12 ( STRING_4 ) ; for ( org . apache . commons . configuration . IDENT_6 IDENT_8 : IDENT_7 ) { sb . append ( ( ( STRING_5 + ( IDENT_8 . getString ( STRING_6 ) ) ) + STRING_1 ) ) ; sb . append ( ( ( STRING_1 0 + ( IDENT_8 . getString ( STRING_7 ) ) ) + STRING_1 ) ) ; sb . append ( ( ( STRING_8 + ( IDENT_8 . getString ( STRING_1 2 ) ) ) + STRING_9 ) ) ; } sb . append ( STRING_1 8 ) ; return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_3 , IDENT_5 ) 