METHOD_0 ( ) { condition . METHOD_1 ( ( ( org . oscm . build . IDENT_0 . IDENT_1 . IDENT_2 ) + STRING_0 ) ) ; condition . METHOD_2 ( org . oscm . build . IDENT_0 . IDENT_1 . IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { if ( METHOD_4 ( IDENT_4 ) ) { throw new org . apache . tools . IDENT_0 . METHOD_5 ( STRING_1 ) ; } java . io . File file = new java . io . File ( IDENT_4 ) ; if ( ( ! ( file . exists ( ) ) ) || ( file . METHOD_6 ( ) ) ) { throw new org . apache . tools . IDENT_0 . METHOD_5 ( STRING_2 ) ; } if ( METHOD_4 ( path ) ) { throw new org . apache . tools . IDENT_0 . METHOD_5 ( STRING_3 ) ; } javax . xml . IDENT_5 . IDENT_6 IDENT_5 = javax . xml . IDENT_5 . IDENT_7 . newInstance ( ) . METHOD_7 ( ) ; org . xml . IDENT_8 . IDENT_9 IDENT_10 = new org . xml . IDENT_8 . METHOD_8 ( IDENT_4 ) ; java . lang . Boolean result = Boolean . IDENT_11 ; try { result = ( ( java . lang . Boolean ) ( IDENT_5 . evaluate ( path , IDENT_10 , IDENT_12 . IDENT_13 ) ) ) ; } catch ( javax . xml . IDENT_5 . IDENT_14 e ) { throw new org . apache . tools . IDENT_0 . METHOD_5 ( STRING_4 , e ) ; } return result . METHOD_9 ( ) ; }
org . junit . Assert . assertFalse ( condition . METHOD_3 ( ) ) 