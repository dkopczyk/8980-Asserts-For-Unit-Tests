METHOD_0 ( ) { when ( IDENT_0 . METHOD_0 ( ) ) . thenReturn ( IDENT_1 ) ; java . lang . String IDENT_2 = service . METHOD_0 ( ) ; "<AssertPlaceHolder>" ; } METHOD_0 ( ) { javax . persistence . Query q = IDENT_3 . METHOD_1 ( STRING_0 ) ; java . util . List < java . lang . String > list = org . oscm . converter . IDENT_4 . list ( q . METHOD_2 ( ) , java . lang . String . class ) ; if ( ( list == null ) || ( ( list . size ( ) ) < 1 ) ) { org . oscm . internal . types . exception . IDENT_5 e = new org . oscm . internal . types . exception . METHOD_3 ( STRING_1 ) ; org . oscm . IDENT_6 . bean . IDENT_7 . logger . METHOD_4 ( IDENT_8 . IDENT_9 , e , IDENT_10 . IDENT_11 , new java . lang . String [ ] { } ) ; throw e ; } else if ( ( list . size ( ) ) > 1 ) { org . oscm . internal . types . exception . METHOD_3 e = new org . oscm . internal . types . exception . METHOD_3 ( STRING_2 ) ; org . oscm . IDENT_6 . bean . IDENT_7 . logger . METHOD_4 ( IDENT_8 . IDENT_9 , e , IDENT_10 . IDENT_12 , new java . lang . String [ ] { } ) ; throw e ; } return list . get ( 0 ) ; }
org . junit . Assert . assertEquals ( IDENT_1 , IDENT_2 ) 