METHOD_0 ( ) { org . apache . accumulo . core . client . IDENT_0 IDENT_1 = null ; IDENT_1 = IDENT_2 . METHOD_1 ( IDENT_3 , ( ( INT_0 * INT_1 ) * INT_1 ) , Long . MAX_VALUE , INT_2 ) ; for ( int i = 0 ; i < 100 ; i ++ ) { org . apache . accumulo . core . data . IDENT_4 m = new org . apache . accumulo . core . data . METHOD_2 ( new org . apache . hadoop . io . METHOD_3 ( ( "" + i ) ) ) ; for ( int j = 0 ; j < 100 ; j ++ ) { m . put ( new org . apache . hadoop . io . METHOD_3 ( ( STRING_0 + j ) ) , new org . apache . hadoop . io . METHOD_3 ( ( ( ( ( ( null + STRING_1 ) + STRING_2 ) + STRING_1 ) + STRING_3 ) + j ) ) , new org . apache . accumulo . core . data . METHOD_4 ( new byte [ 0 ] ) ) ; } if ( ( ( ( i == INT_2 ) || ( i == INT_3 ) ) || ( i == INT_4 ) ) || ( i == INT_5 ) ) { m . put ( new org . apache . hadoop . io . METHOD_3 ( ( STRING_0 + 100 ) ) , new org . apache . hadoop . io . METHOD_3 ( ( ( ( ( ( null + STRING_1 ) + STRING_2 ) + STRING_1 ) + STRING_3 ) + ( 100 + i ) ) ) , new org . apache . accumulo . core . data . METHOD_4 ( new byte [ 0 ] ) ) ; m . put ( new org . apache . hadoop . io . METHOD_3 ( ( STRING_0 + 100 ) ) , new org . apache . hadoop . io . METHOD_3 ( ( ( ( ( ( null + STRING_1 ) + STRING_4 ) + STRING_1 ) + STRING_3 ) + ( ( 100 + i ) + 1 ) ) ) , new org . apache . accumulo . core . data . METHOD_4 ( new byte [ 0 ] ) ) ; } IDENT_1 . METHOD_5 ( m ) ; } org . apache . rya . accumulo . IDENT_5 . IDENT_6 IDENT_7 = new org . apache . rya . accumulo . IDENT_5 . METHOD_6 ( ) ; org . apache . rya . accumulo . IDENT_5 . IDENT_8 IDENT_9 = new org . apache . rya . accumulo . IDENT_5 . METHOD_7 ( new org . apache . hadoop . io . METHOD_3 ( ( STRING_0 + 20 ) ) , new org . apache . hadoop . io . METHOD_3 ( ( ( STRING_2 + ( STRING_1 + STRING_3 ) ) + 20 ) ) ) ; org . apache . rya . accumulo . IDENT_5 . METHOD_7 IDENT_10 = new org . apache . rya . accumulo . IDENT_5 . METHOD_7 ( new org . apache . hadoop . io . METHOD_3 ( ( STRING_0 + 50 ) ) , new org . apache . hadoop . io . METHOD_3 ( ( ( STRING_2 + ( STRING_1 + STRING_3 ) ) + 50 ) ) ) ; org . apache . rya . accumulo . IDENT_5 . METHOD_7 IDENT_11 = new org . apache . rya . accumulo . IDENT_5 . METHOD_7 ( new org . apache . hadoop . io . METHOD_3 ( ( STRING_0 + 100 ) ) , new org . apache . hadoop . io . METHOD_3 ( STRING_4 ) ) ; org . apache . rya . accumulo . IDENT_5 . METHOD_7 IDENT_12 = new org . apache . rya . accumulo . IDENT_5 . METHOD_7 ( new org . apache . hadoop . io . METHOD_3 ( ( STRING_0 + 100 ) ) , new org . apache . hadoop . io . METHOD_3 ( STRING_2 ) ) ; IDENT_11 . METHOD_8 ( true ) ; IDENT_12 . METHOD_8 ( true ) ; org . apache . rya . accumulo . IDENT_5 . METHOD_7 [ ] tc = new org . apache . rya . accumulo . IDENT_5 . METHOD_7 [ 4 ] ; tc [ 0 ] = IDENT_9 ; tc [ 1 ] = IDENT_10 ; tc [ 2 ] = IDENT_11 ; tc [ 3 ] = IDENT_12 ; org . apache . accumulo . core . client . IDENT_13 is = new org . apache . accumulo . core . client . METHOD_9 ( INT_2 , STRING_5 , org . apache . rya . accumulo . IDENT_5 . METHOD_6 . class ) ; IDENT_7 . METHOD_10 ( is , tc ) ; org . apache . accumulo . core . client . IDENT_14 IDENT_15 = IDENT_2 . METHOD_11 ( IDENT_3 , new org . apache . accumulo . core . security . METHOD_12 ( STRING_6 ) ) ; IDENT_15 . METHOD_13 ( is ) ; int results = 0 ; System . out . println ( STRING_7 ) ; for ( Map . Entry < org . apache . accumulo . core . data . IDENT_16 , org . apache . accumulo . core . data . METHOD_4 > e : IDENT_15 ) { System . out . println ( e ) ; results ++ ; } "<AssertPlaceHolder>" ; } println ( java . lang . IDENT_17 ) { System . out . println ( cs ) ; }
org . junit . Assert . assertEquals ( 4 , results ) 