METHOD_0 ( ) { org . apache . accumulo . core . client . IDENT_0 IDENT_1 = null ; IDENT_1 = IDENT_2 . METHOD_1 ( IDENT_3 , ( ( INT_0 * INT_1 ) * INT_1 ) , Long . MAX_VALUE , INT_2 ) ; for ( int i = 0 ; i < 100 ; i ++ ) { org . apache . accumulo . core . data . IDENT_4 m = new org . apache . accumulo . core . data . METHOD_2 ( new org . apache . hadoop . io . METHOD_3 ( ( "" + i ) ) ) ; m . put ( new org . apache . hadoop . io . METHOD_3 ( ( STRING_0 + 1 ) ) , new org . apache . hadoop . io . METHOD_3 ( ( ( STRING_1 + ( ( ( STRING_2 + STRING_3 ) + STRING_2 ) + STRING_4 ) ) + 1 ) ) , new org . apache . accumulo . core . data . METHOD_4 ( new byte [ 0 ] ) ) ; m . put ( new org . apache . hadoop . io . METHOD_3 ( ( STRING_0 + 2 ) ) , new org . apache . hadoop . io . METHOD_3 ( ( ( STRING_1 + ( ( ( STRING_2 + STRING_3 ) + STRING_2 ) + STRING_4 ) ) + 2 ) ) , new org . apache . accumulo . core . data . METHOD_4 ( new byte [ 0 ] ) ) ; if ( ( ( ( i == INT_2 ) || ( i == INT_3 ) ) || ( i == INT_4 ) ) || ( i == INT_5 ) ) { m . put ( new org . apache . hadoop . io . METHOD_3 ( ( STRING_0 + 3 ) ) , new org . apache . hadoop . io . METHOD_3 ( ( ( STRING_1 + ( ( ( STRING_2 + STRING_3 ) + STRING_2 ) + STRING_4 ) ) + 3 ) ) , new org . apache . accumulo . core . data . METHOD_4 ( new byte [ 0 ] ) ) ; m . put ( new org . apache . hadoop . io . METHOD_3 ( ( STRING_0 + 3 ) ) , new org . apache . hadoop . io . METHOD_3 ( ( ( STRING_5 + ( ( ( STRING_2 + STRING_3 ) + STRING_2 ) + STRING_4 ) ) + 4 ) ) , new org . apache . accumulo . core . data . METHOD_4 ( new byte [ 0 ] ) ) ; m . put ( new org . apache . hadoop . io . METHOD_3 ( ( STRING_0 + 3 ) ) , new org . apache . hadoop . io . METHOD_3 ( ( ( STRING_1 + ( ( ( STRING_2 + STRING_3 ) + STRING_2 ) + STRING_4 ) ) + 5 ) ) , new org . apache . accumulo . core . data . METHOD_4 ( new byte [ 0 ] ) ) ; } IDENT_1 . METHOD_5 ( m ) ; } org . apache . rya . accumulo . IDENT_5 . IDENT_6 IDENT_7 = new org . apache . rya . accumulo . IDENT_5 . METHOD_6 ( new org . apache . hadoop . io . METHOD_3 ( ( STRING_0 + 1 ) ) , new org . apache . hadoop . io . METHOD_3 ( ( ( STRING_3 + ( STRING_2 + STRING_4 ) ) + 1 ) ) ) ; org . apache . rya . accumulo . IDENT_5 . METHOD_6 IDENT_8 = new org . apache . rya . accumulo . IDENT_5 . METHOD_6 ( new org . apache . hadoop . io . METHOD_3 ( ( STRING_0 + 2 ) ) , new org . apache . hadoop . io . METHOD_3 ( ( ( STRING_3 + ( STRING_2 + STRING_4 ) ) + 2 ) ) ) ; org . apache . rya . accumulo . IDENT_5 . METHOD_6 IDENT_9 = new org . apache . rya . accumulo . IDENT_5 . METHOD_6 ( new org . apache . hadoop . io . METHOD_3 ( ( STRING_0 + 3 ) ) , new org . apache . hadoop . io . METHOD_3 ( STRING_3 ) ) ; IDENT_9 . METHOD_7 ( true ) ; org . apache . rya . accumulo . IDENT_5 . METHOD_6 [ ] tc = new org . apache . rya . accumulo . IDENT_5 . METHOD_6 [ 3 ] ; tc [ 0 ] = IDENT_7 ; tc [ 1 ] = IDENT_8 ; tc [ 2 ] = IDENT_9 ; org . apache . accumulo . core . client . IDENT_10 is = new org . apache . accumulo . core . client . METHOD_8 ( INT_2 , STRING_6 , org . apache . rya . accumulo . IDENT_5 . IDENT_11 . class ) ; org . apache . rya . accumulo . IDENT_5 . IDENT_11 . METHOD_9 ( is , tc ) ; org . apache . rya . accumulo . IDENT_5 . IDENT_11 . METHOD_10 ( is , STRING_1 ) ; org . apache . accumulo . core . client . IDENT_12 IDENT_13 = IDENT_2 . METHOD_11 ( IDENT_3 , new org . apache . accumulo . core . security . METHOD_12 ( STRING_7 ) ) ; IDENT_13 . METHOD_13 ( is ) ; int results = 0 ; System . out . println ( STRING_8 ) ; for ( Map . Entry < org . apache . accumulo . core . data . IDENT_14 , org . apache . accumulo . core . data . METHOD_4 > e : IDENT_13 ) { System . out . println ( e ) ; results ++ ; } "<AssertPlaceHolder>" ; } println ( java . lang . IDENT_15 ) { System . out . println ( cs ) ; }
org . junit . Assert . assertEquals ( 8 , results ) 