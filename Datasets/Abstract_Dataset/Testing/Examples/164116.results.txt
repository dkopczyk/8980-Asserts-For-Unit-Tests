METHOD_0 ( ) { METHOD_1 ( IDENT_0 . IDENT_1 ) ; METHOD_2 ( IDENT_0 . IDENT_1 , false ) ; boolean IDENT_2 = bean . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { if ( ( IDENT_3 ) == null ) { return false ; } java . util . List < org . oscm . internal . vo . IDENT_4 > IDENT_5 = new java . util . ArrayList < org . oscm . internal . vo . IDENT_4 > ( ) ; if ( ( METHOD_4 ( ) ) != null ) { for ( org . oscm . ui . model . IDENT_6 service : METHOD_4 ( ) ) { if ( service . METHOD_5 ( ) ) { IDENT_5 . add ( service . METHOD_6 ( ) ) ; } } } for ( org . oscm . internal . vo . IDENT_4 IDENT_7 : IDENT_5 ) { org . oscm . internal . vo . IDENT_8 IDENT_9 = IDENT_3 . METHOD_7 ( ) ; if ( IDENT_9 == null ) continue ; org . oscm . internal . types . IDENT_10 . IDENT_0 IDENT_11 = IDENT_9 . getType ( ) ; IDENT_9 = IDENT_7 . METHOD_7 ( ) ; if ( IDENT_9 == null ) continue ; org . oscm . internal . types . IDENT_10 . IDENT_0 IDENT_12 = IDENT_9 . getType ( ) ; if ( ( ( IDENT_11 . equals ( IDENT_0 . IDENT_1 ) ) && ( ! ( IDENT_12 . equals ( IDENT_0 . IDENT_13 ) ) ) ) || ( ( IDENT_12 . equals ( IDENT_0 . IDENT_1 ) ) && ( ! ( IDENT_11 . equals ( IDENT_0 . IDENT_13 ) ) ) ) ) { return true ; } } return false ; }
org . junit . Assert . assertFalse ( METHOD_3 ) 