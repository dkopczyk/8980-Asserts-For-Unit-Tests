METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 IDENT_1 = IDENT_0 . IDENT_1 . IDENT_2 . builder ( ) . METHOD_1 ( ) . build ( ) ; java . lang . String [ ] IDENT_3 = new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 , STRING_3 } ; java . lang . String [ ] expected = new java . lang . String [ ] { STRING_4 , STRING_5 , STRING_6 , STRING_3 } ; IDENT_0 . IDENT_1 . analysis . IDENT_4 IDENT_5 = new IDENT_0 . IDENT_1 . analysis . METHOD_2 ( ) ; int i = 0 ; for ( java . lang . String input : IDENT_3 ) { IDENT_0 . IDENT_1 . analysis . IDENT_6 results = IDENT_1 . METHOD_3 ( input ) ; for ( IDENT_0 . IDENT_1 . analysis . IDENT_7 result : results ) { if ( ( result . METHOD_4 ( ) . IDENT_8 ) == ( IDENT_0 . core . IDENT_9 . IDENT_10 . IDENT_11 ) ) { "<AssertPlaceHolder>" ; } } i ++ ; } } format ( IDENT_0 . IDENT_1 . analysis . IDENT_7 , java . lang . String ) { IDENT_0 . IDENT_1 . IDENT_12 . IDENT_13 item = analysis . METHOD_4 ( ) ; java . lang . String IDENT_14 = analysis . METHOD_5 ( ) ; if ( ( IDENT_15 != null ) || ( METHOD_6 ( analysis ) ) ) { if ( IDENT_15 == null ) { IDENT_15 = STRING_7 ; } return ( IDENT_14 . length ( ) ) > 0 ? ( ( item . METHOD_7 ( ) ) + IDENT_15 ) + IDENT_14 : item . METHOD_7 ( ) ; } else { if ( item . attributes . contains ( IDENT_16 . IDENT_17 ) ) { return ( item . METHOD_7 ( ) ) + IDENT_14 ; } else { return ( analysis . METHOD_8 ( ) ) + IDENT_14 ; } } }
org . junit . Assert . assertEquals ( expected [ i ] , IDENT_5 . format ( result , STRING_7 ) ) 