METHOD_0 ( ) { java . io . InputStream is = new java . io . ByteArrayInputStream ( "" . getBytes ( ) ) { @ org . oscm . stream . Override public MOD_0 int read ( byte [ ] b , int IDENT_0 , int len ) { throw new java . lang . RuntimeException ( STRING_0 ) ; } @ org . oscm . stream . Override public void close ( ) throws java . io . IOException { super . close ( ) ; IDENT_1 = true ; } } ; try { org . oscm . stream . IDENT_2 . METHOD_1 ( is ) ; } catch ( java . lang . Exception IDENT_3 ) { } "<AssertPlaceHolder>" ; } METHOD_1 ( java . io . InputStream ) { org . oscm . validation . IDENT_4 . assertNotNull ( stream ) ; java . io . IDENT_5 is = new java . io . METHOD_2 ( stream ) ; java . io . ByteArrayOutputStream IDENT_6 = new java . io . ByteArrayOutputStream ( ) ; try { int IDENT_7 ; while ( ( IDENT_7 = is . read ( ) ) != ( - 1 ) ) { org . oscm . stream . IDENT_2 . METHOD_3 ( ) ; IDENT_6 . write ( IDENT_7 ) ; } } finally { org . oscm . stream . IDENT_2 . close ( is ) ; org . oscm . stream . IDENT_2 . close ( IDENT_6 ) ; } return IDENT_6 . toByteArray ( ) ; }
org . junit . Assert . assertTrue ( IDENT_1 ) 