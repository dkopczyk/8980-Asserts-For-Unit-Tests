METHOD_0 ( ) { container . METHOD_1 ( org . oscm . IDENT_0 . bean . IDENT_1 . IDENT_2 , org . oscm . IDENT_0 . bean . IDENT_3 ) ; org . oscm . IDENT_0 . bean . List < java . lang . Long > expected = org . oscm . IDENT_0 . bean . IDENT_1 . METHOD_2 ( false , org . oscm . IDENT_0 . bean . IDENT_1 . IDENT_4 ) ; int size = org . oscm . IDENT_0 . bean . IDENT_1 . IDENT_4 . size ( ) ; for ( int offset = 0 ; offset < size ; offset ++ ) { org . oscm . IDENT_0 . bean . IDENT_5 IDENT_6 = org . oscm . IDENT_0 . bean . IDENT_1 . METHOD_3 ( offset , 1 , null , IDENT_7 . IDENT_8 ) ; org . oscm . IDENT_0 . bean . IDENT_9 IDENT_10 = org . oscm . IDENT_0 . bean . IDENT_1 . search . METHOD_4 ( org . oscm . IDENT_0 . bean . IDENT_1 . IDENT_11 . METHOD_5 ( ) , STRING_0 , IDENT_6 ) ; org . oscm . IDENT_0 . bean . List < org . oscm . IDENT_0 . bean . IDENT_12 > IDENT_13 = IDENT_10 . METHOD_6 ( ) ; java . lang . Long IDENT_14 = java . lang . Long . valueOf ( IDENT_13 . get ( 0 ) . getKey ( ) ) ; "<AssertPlaceHolder>" ; } } get ( org . oscm . IDENT_15 . IDENT_16 ) { org . oscm . IDENT_15 . IDENT_16 IDENT_17 = null ; if ( ( IDENT_18 . getKey ( ) ) != 0L ) { IDENT_17 = IDENT_19 . find ( org . oscm . IDENT_15 . IDENT_16 . class , IDENT_18 . getKey ( ) ) ; } else { IDENT_17 = ( ( org . oscm . IDENT_15 . IDENT_16 ) ( IDENT_19 . find ( IDENT_18 ) ) ) ; } return IDENT_17 ; }
org . junit . Assert . assertEquals ( expected . get ( offset ) , IDENT_14 ) 