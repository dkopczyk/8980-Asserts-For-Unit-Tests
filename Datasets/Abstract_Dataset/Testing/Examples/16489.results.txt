METHOD_0 ( ) { final java . lang . String IDENT_0 = new org . apache . rya . indexing . IDENT_1 . storage . accumulo . METHOD_1 ( ) . METHOD_2 ( org . apache . rya . indexing . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 , org . apache . rya . indexing . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_6 ) ; final org . apache . rya . indexing . IDENT_2 . IDENT_3 . IDENT_7 IDENT_8 = new org . apache . rya . indexing . IDENT_2 . IDENT_3 . METHOD_3 ( org . apache . rya . indexing . IDENT_2 . IDENT_3 . IDENT_4 . conf , IDENT_0 ) ; final org . eclipse . IDENT_9 . query . IDENT_10 . IDENT_11 . IDENT_12 IDENT_13 = new org . eclipse . IDENT_9 . query . IDENT_10 . IDENT_11 . METHOD_4 ( ) ; IDENT_13 . METHOD_5 ( STRING_0 , org . apache . rya . indexing . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_14 . METHOD_6 ( java . math . BigInteger . valueOf ( 16 ) ) ) ; final org . eclipse . IDENT_9 . query . IDENT_10 . IDENT_11 . METHOD_4 IDENT_15 = new org . eclipse . IDENT_9 . query . IDENT_10 . IDENT_11 . METHOD_4 ( ) ; IDENT_15 . METHOD_5 ( STRING_0 , org . apache . rya . indexing . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_14 . METHOD_6 ( java . math . BigInteger . valueOf ( INT_0 ) ) ) ; final java . util . Set < org . eclipse . IDENT_9 . query . IDENT_16 > IDENT_17 = com . google . common . collect . IDENT_18 . METHOD_7 ( IDENT_13 , IDENT_15 ) ; final org . eclipse . IDENT_9 . common . IDENT_19 . IDENT_20 < org . eclipse . IDENT_9 . query . IDENT_16 , org . eclipse . IDENT_9 . query . IDENT_21 > results = IDENT_8 . evaluate ( IDENT_17 ) ; final java . util . Set < org . eclipse . IDENT_9 . query . IDENT_16 > IDENT_22 = new java . util . HashSet ( ) ; while ( results . hasNext ( ) ) { final org . eclipse . IDENT_9 . query . IDENT_16 next = results . next ( ) ; IDENT_22 . add ( next ) ; } final java . util . Set < org . eclipse . IDENT_9 . query . IDENT_16 > expected = com . google . common . collect . IDENT_18 . METHOD_7 ( org . apache . rya . indexing . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_23 , org . apache . rya . indexing . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_24 ) ; "<AssertPlaceHolder>" ; } add ( org . apache . rya . IDENT_25 . IDENT_26 . IDENT_27 ) { for ( org . apache . rya . IDENT_25 . IDENT_26 . IDENT_28 . IDENT_29 key : other . IDENT_30 . METHOD_8 ( ) ) { if ( this . IDENT_30 . containsKey ( key ) ) { IDENT_30 . put ( key , ( ( this . IDENT_30 . get ( key ) ) + ( other . IDENT_30 . get ( key ) ) ) ) ; } else { IDENT_30 . put ( key , other . IDENT_30 . get ( key ) ) ; } } }
org . junit . Assert . assertEquals ( expected , IDENT_22 ) 