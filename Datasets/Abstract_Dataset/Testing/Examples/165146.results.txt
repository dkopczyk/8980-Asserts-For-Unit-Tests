METHOD_0 ( ) { org . oscm . IDENT_0 . IDENT_1 IDENT_2 = new org . oscm . IDENT_0 . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( INT_0 ) ; java . util . Set < org . oscm . internal . types . IDENT_3 . IDENT_4 > IDENT_5 = java . util . IDENT_6 . METHOD_3 ( org . oscm . internal . types . IDENT_3 . IDENT_4 . class ) ; java . util . List < org . oscm . IDENT_7 . IDENT_8 . IDENT_9 > list = bean . METHOD_0 ( IDENT_2 , IDENT_5 ) ; verify ( IDENT_10 , times ( 1 ) ) . METHOD_4 ( any ( org . oscm . IDENT_0 . METHOD_1 . class ) , eq ( IDENT_5 ) ) ; verify ( bean . slc , times ( 1 ) ) . convert ( METHOD_5 ( java . lang . Object [ ] . class ) ) ; "<AssertPlaceHolder>" ; } convert ( java . util . List ) { if ( list == null ) { return new java . util . ArrayList < org . oscm . IDENT_7 . IDENT_8 . IDENT_9 > ( ) ; } java . util . ArrayList < org . oscm . IDENT_7 . IDENT_8 . IDENT_9 > result = new java . util . ArrayList < org . oscm . IDENT_7 . IDENT_8 . IDENT_9 > ( ) ; org . oscm . IDENT_0 . IDENT_11 IDENT_12 = null ; org . oscm . IDENT_7 . IDENT_8 . IDENT_9 IDENT_13 = new org . oscm . IDENT_7 . IDENT_8 . METHOD_6 ( ) ; for ( java . lang . Object [ ] a : list ) { if ( IDENT_12 != ( a [ 0 ] ) ) { IDENT_13 = new org . oscm . IDENT_7 . IDENT_8 . METHOD_6 ( ) ; IDENT_13 . METHOD_7 ( ( ( org . oscm . IDENT_0 . IDENT_11 ) ( a [ 0 ] ) ) ) ; result . add ( IDENT_13 ) ; IDENT_12 = IDENT_13 . METHOD_8 ( ) ; } if ( ( a [ 1 ] ) != null ) { IDENT_13 . METHOD_9 ( ) . add ( ( ( org . oscm . IDENT_0 . IDENT_14 ) ( a [ 1 ] ) ) ) ; } } return result ; }
org . junit . Assert . assertNotNull ( list ) 