METHOD_0 ( ) { final org . apache . rya . indexing . entity . model . Entity IDENT_0 = org . apache . rya . indexing . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( ) ; final org . apache . rya . indexing . entity . model . Entity . Builder builder = new org . apache . rya . indexing . entity . model . Entity . Builder ( IDENT_0 ) ; builder . METHOD_2 ( org . apache . rya . indexing . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_3 ( STRING_0 ) ) ; final org . apache . rya . indexing . entity . model . Entity IDENT_4 = builder . build ( ) ; final org . apache . rya . indexing . IDENT_1 . IDENT_2 . IDENT_5 IDENT_6 = new org . apache . rya . indexing . IDENT_1 . IDENT_2 . METHOD_4 ( ) ; final boolean IDENT_7 = IDENT_6 . METHOD_5 ( IDENT_0 , IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( org . apache . rya . indexing . entity . model . Entity , org . apache . rya . indexing . entity . model . Entity ) { METHOD_6 ( IDENT_0 ) ; METHOD_6 ( IDENT_4 ) ; boolean IDENT_8 = true ; final java . util . List < org . apache . rya . api . domain . IDENT_9 > IDENT_10 = IDENT_0 . METHOD_7 ( ) ; final java . util . List < org . apache . rya . api . domain . IDENT_9 > IDENT_11 = IDENT_4 . METHOD_7 ( ) ; final boolean IDENT_12 = IDENT_10 . METHOD_8 ( IDENT_11 ) ; if ( ! IDENT_12 ) { return false ; } for ( final java . util . Map . Entry < org . apache . rya . api . domain . IDENT_9 , com . google . common . collect . ImmutableMap < org . apache . rya . api . domain . IDENT_9 , org . apache . rya . indexing . entity . model . IDENT_13 > > entry : IDENT_0 . METHOD_9 ( ) . entrySet ( ) ) { final org . apache . rya . api . domain . IDENT_9 IDENT_14 = entry . getKey ( ) ; for ( final java . util . Map . Entry < org . apache . rya . api . domain . IDENT_9 , org . apache . rya . indexing . entity . model . IDENT_13 > IDENT_15 : entry . getValue ( ) . entrySet ( ) ) { final org . apache . rya . api . domain . IDENT_9 IDENT_16 = IDENT_15 . getKey ( ) ; final org . apache . rya . indexing . entity . model . IDENT_13 IDENT_17 = IDENT_15 . getValue ( ) ; final java . util . Optional < org . apache . rya . indexing . entity . model . IDENT_13 > IDENT_18 = IDENT_4 . METHOD_10 ( IDENT_14 , IDENT_16 ) ; if ( IDENT_18 . METHOD_11 ( ) ) { final org . apache . rya . indexing . entity . model . IDENT_13 IDENT_19 = IDENT_18 . get ( ) ; final org . apache . rya . api . domain . IDENT_20 IDENT_21 = IDENT_17 . getValue ( ) ; final org . apache . rya . api . domain . IDENT_20 IDENT_22 = IDENT_19 . getValue ( ) ; final java . lang . String IDENT_23 = IDENT_21 . METHOD_12 ( ) ; final java . lang . String IDENT_24 = IDENT_22 . METHOD_12 ( ) ; final org . eclipse . IDENT_25 . model . IDENT_26 IDENT_27 = IDENT_21 . METHOD_13 ( ) ; final org . apache . rya . indexing . IDENT_1 . IDENT_2 . IDENT_28 < ? > IDENT_29 = IDENT_30 . get ( IDENT_27 ) ; if ( IDENT_29 == null ) { throw new org . apache . rya . indexing . IDENT_1 . METHOD_14 ( ( STRING_1 + IDENT_27 ) ) ; } final boolean IDENT_31 = IDENT_29 . METHOD_15 ( IDENT_23 , IDENT_24 ) ; if ( ! IDENT_31 ) { IDENT_8 = false ; break ; } } else { IDENT_8 = false ; break ; } } if ( ! IDENT_8 ) { break ; } } return IDENT_8 ; }
org . junit . Assert . assertTrue ( IDENT_7 ) 