METHOD_0 ( ) { double [ ] data = com . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( ) ; assert ( data . length ) == INT_0 ; int IDENT_5 = INT_1 ; com . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_6 . Builder builder = new com . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_6 . Builder ( ) ; builder . METHOD_2 ( IDENT_5 ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; com . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_6 IDENT_7 = builder . METHOD_6 ( data ) ; com . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_6 . IDENT_8 IDENT_3 = IDENT_7 . METHOD_7 ( ) ; double [ ] IDENT_9 = IDENT_3 . METHOD_8 ( ) ; int IDENT_10 = 0 ; for ( int i = 0 ; i < IDENT_5 ; ++ i ) { boolean IDENT_11 = true ; for ( int j = 0 ; j < 4 ; ++ j ) IDENT_11 = IDENT_11 && ( ( IDENT_9 [ ( i + ( j * IDENT_5 ) ) ] ) == 0.0 ) ; if ( IDENT_11 ) ++ IDENT_10 ; } "<AssertPlaceHolder>" ; } METHOD_8 ( ) { return IDENT_12 ; }
org . junit . Assert . assertEquals ( 0 , IDENT_10 ) 