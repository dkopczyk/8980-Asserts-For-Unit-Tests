METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = mock ( com . IDENT_0 . IDENT_1 . IDENT_2 . class ) ; com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 IDENT_6 = METHOD_1 ( ) ; IDENT_6 . METHOD_2 ( IDENT_3 ) ; IDENT_6 . write ( com . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 , INT_0 ) ; IDENT_6 . METHOD_3 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } read ( int , boolean ) { switch ( address ) { case com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_9 . IDENT_10 : switch ( IDENT_11 ) { case com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_9 . IDENT_12 : return ( IDENT_13 ) & 255 ; case com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_9 . IDENT_14 : return ( IDENT_13 ) > > 8 ; default : return 0 ; } default : return 0 ; } }
org . junit . Assert . assertEquals ( INT_0 , ( ( IDENT_6 . read ( 0 , true ) ) & INT_0 ) ) 