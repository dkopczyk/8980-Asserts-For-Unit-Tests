METHOD_0 ( ) { "<AssertPlaceHolder>" ; } METHOD_1 ( double ) { if ( java . lang . Double . METHOD_2 ( k ) ) { return com . IDENT_0 . IDENT_1 . math . IDENT_2 . METHOD_3 ( ) ; } if ( k == ( Double . IDENT_3 ) ) { return com . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 ; } if ( k == ( Double . IDENT_4 ) ) { return com . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_4 ; } if ( ( java . lang . Double . METHOD_4 ( k ) ) == ( IDENT_5 . IDENT_6 ) ) { return com . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_7 ; } if ( k == 0.0 ) { return com . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_8 ; } final long de = com . IDENT_0 . IDENT_1 . math . IDENT_5 . METHOD_5 ( k ) ; final long IDENT_9 = com . IDENT_0 . IDENT_1 . math . IDENT_5 . METHOD_6 ( k ) ; final long IDENT_10 = com . IDENT_0 . IDENT_1 . math . IDENT_5 . METHOD_7 ( k ) ; final char IDENT_11 = com . IDENT_0 . IDENT_1 . math . IDENT_2 . METHOD_8 ( ( ( int ) ( IDENT_9 ) ) ) ; return ( ( char ) ( ( IDENT_11 | IDENT_12 ) | IDENT_13 ) ) ; }
org . junit . Assert . assertTrue ( ( ( com . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_7 ) == ( com . IDENT_0 . IDENT_1 . math . IDENT_2 . METHOD_1 ( ( - 0.0 ) ) ) ) ) 