METHOD_0 ( ) { final char IDENT_0 = INT_0 ; final float r = com . IDENT_1 . IDENT_2 . math . IDENT_3 . METHOD_1 ( IDENT_0 ) ; System . out . println ( java . lang . String . format ( STRING_0 , ( ( int ) ( IDENT_0 ) ) , r ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( char ) { if ( com . IDENT_1 . IDENT_2 . math . IDENT_3 . METHOD_2 ( k ) ) { return IDENT_4 . IDENT_5 ; } if ( k == ( com . IDENT_1 . IDENT_2 . math . IDENT_3 . IDENT_6 ) ) { return IDENT_4 . IDENT_6 ; } if ( k == ( com . IDENT_1 . IDENT_2 . math . IDENT_3 . IDENT_7 ) ) { return IDENT_4 . IDENT_7 ; } if ( k == ( com . IDENT_1 . IDENT_2 . math . IDENT_3 . IDENT_8 ) ) { return - FLOAT_0 ; } if ( k == ( com . IDENT_1 . IDENT_2 . math . IDENT_3 . IDENT_9 ) ) { return FLOAT_0 ; } final int e = com . IDENT_1 . IDENT_2 . math . IDENT_3 . METHOD_3 ( k ) ; final int s = com . IDENT_1 . IDENT_2 . math . IDENT_3 . METHOD_4 ( k ) ; final int n = com . IDENT_1 . IDENT_2 . math . IDENT_3 . METHOD_5 ( k ) ; final int IDENT_10 = n << INT_1 ; return java . lang . IDENT_4 . METHOD_6 ( ( ( IDENT_11 | IDENT_12 ) | IDENT_10 ) ) ; }
org . junit . Assert . assertEquals ( r , 1.0 , 0.0 ) 