METHOD_0 ( ) { for ( java . util . Map . Entry < org . apache . shardingsphere . core . IDENT_0 . IDENT_1 , java . sql . ResultSet > IDENT_2 : IDENT_3 . entrySet ( ) ) { try { IDENT_2 . getValue ( ) . METHOD_1 ( 1 , java . util . Calendar . getInstance ( ) ) ; if ( ( ( org . apache . shardingsphere . core . IDENT_0 . IDENT_1 . IDENT_4 ) == ( IDENT_2 . getKey ( ) ) ) || ( ( org . apache . shardingsphere . core . IDENT_0 . IDENT_1 . IDENT_5 ) == ( IDENT_2 . getKey ( ) ) ) ) { continue ; } org . junit . Assert . fail ( STRING_0 ) ; } catch ( final java . lang . Exception ex ) { "<AssertPlaceHolder>" ; } } } isEmpty ( ) { return IDENT_6 . isEmpty ( ) ; }
org . junit . Assert . assertFalse ( ex . getMessage ( ) . isEmpty ( ) ) 