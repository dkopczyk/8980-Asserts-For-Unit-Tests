METHOD_0 ( ) { final org . eclipse . IDENT_0 . query . impl . IDENT_1 IDENT_2 = new org . eclipse . IDENT_0 . query . impl . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( STRING_0 , org . apache . rya . indexing . IDENT_3 . storage . accumulo . IDENT_4 . IDENT_5 . METHOD_3 ( STRING_1 ) ) ; IDENT_2 . METHOD_2 ( STRING_2 , org . apache . rya . indexing . IDENT_3 . storage . accumulo . IDENT_4 . IDENT_5 . METHOD_3 ( STRING_3 ) ) ; IDENT_2 . METHOD_2 ( STRING_4 , org . apache . rya . indexing . IDENT_3 . storage . accumulo . IDENT_4 . IDENT_5 . METHOD_3 ( STRING_5 ) ) ; final org . apache . rya . indexing . IDENT_3 . storage . accumulo . IDENT_6 IDENT_7 = new org . apache . rya . indexing . IDENT_3 . storage . accumulo . METHOD_4 ( STRING_0 , STRING_2 ) ; org . apache . rya . indexing . IDENT_3 . storage . accumulo . IDENT_8 < byte [ ] > converter = new org . apache . rya . indexing . IDENT_3 . storage . accumulo . METHOD_5 ( ) ; byte [ ] IDENT_9 = converter . convert ( IDENT_2 , IDENT_7 ) ; org . eclipse . IDENT_0 . query . IDENT_10 IDENT_11 = converter . convert ( IDENT_9 , IDENT_7 ) ; org . eclipse . IDENT_0 . query . impl . METHOD_1 expected = new org . eclipse . IDENT_0 . query . impl . METHOD_1 ( ) ; expected . METHOD_2 ( STRING_0 , org . apache . rya . indexing . IDENT_3 . storage . accumulo . IDENT_4 . IDENT_5 . METHOD_3 ( STRING_1 ) ) ; expected . METHOD_2 ( STRING_2 , org . apache . rya . indexing . IDENT_3 . storage . accumulo . IDENT_4 . IDENT_5 . METHOD_3 ( STRING_3 ) ) ; "<AssertPlaceHolder>" ; } convert ( java . lang . String , org . apache . rya . indexing . IDENT_3 . storage . accumulo . METHOD_4 ) { METHOD_6 ( IDENT_12 ) ; METHOD_6 ( IDENT_7 ) ; if ( ( IDENT_12 . isEmpty ( ) ) && ( IDENT_7 . toString ( ) . isEmpty ( ) ) ) { return new org . eclipse . IDENT_0 . query . impl . METHOD_1 ( ) ; } final java . lang . String [ ] IDENT_13 = IDENT_12 . split ( org . apache . rya . indexing . IDENT_3 . storage . accumulo . IDENT_14 . IDENT_15 ) ; final java . lang . String [ ] IDENT_16 = IDENT_7 . toArray ( ) ; METHOD_7 ( ( ( IDENT_16 . length ) == ( IDENT_13 . length ) ) , STRING_6 ) ; final org . eclipse . IDENT_0 . query . IDENT_17 . IDENT_18 . IDENT_19 IDENT_20 = new org . eclipse . IDENT_0 . query . IDENT_17 . IDENT_18 . METHOD_8 ( ) ; for ( int i = 0 ; i < ( IDENT_13 . length ) ; i ++ ) { final java . lang . String IDENT_21 = IDENT_13 [ i ] ; if ( ! ( org . apache . rya . indexing . IDENT_3 . storage . accumulo . IDENT_14 . IDENT_22 . equals ( IDENT_21 ) ) ) { final java . lang . String name = IDENT_16 [ i ] ; final org . eclipse . IDENT_0 . model . IDENT_23 value = org . apache . rya . indexing . IDENT_3 . storage . accumulo . IDENT_14 . METHOD_9 ( IDENT_13 [ i ] ) ; IDENT_20 . METHOD_2 ( name , value ) ; } } return IDENT_20 ; }
org . junit . Assert . assertEquals ( expected , IDENT_11 ) 