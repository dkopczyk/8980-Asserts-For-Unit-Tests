METHOD_0 ( ) { int IDENT_0 = 100 ; org . IDENT_1 . IDENT_2 . utils . IDENT_3 query = METHOD_1 ( ) ; org . IDENT_1 . utils . IDENT_4 < org . IDENT_1 . IDENT_2 . utils . IDENT_3 > actual = new org . IDENT_1 . utils . IDENT_4 < org . IDENT_1 . IDENT_2 . utils . IDENT_3 > ( IDENT_0 , IDENT_4 . IDENT_5 . IDENT_6 ) ; org . IDENT_1 . IDENT_2 . util . IDENT_7 index = new org . IDENT_1 . IDENT_2 . util . METHOD_2 ( ) ; for ( int i = 0 ; i < INT_0 ; i ++ ) { org . IDENT_1 . IDENT_2 . utils . IDENT_3 p = METHOD_1 ( ) ; actual . add ( p , org . IDENT_1 . IDENT_2 . util . IDENT_8 . METHOD_3 ( query , p ) ) ; index . insert ( ( i * 3 ) , p ) ; } System . out . println ( ( ( STRING_0 + query ) + STRING_1 ) ) ; long IDENT_9 = java . lang . System . currentTimeMillis ( ) ; org . IDENT_1 . IDENT_2 . utils . List < org . IDENT_1 . IDENT_2 . util . METHOD_2 . Result > IDENT_10 = index . query ( query , IDENT_0 ) ; long IDENT_11 = java . lang . System . currentTimeMillis ( ) ; System . err . println ( ( STRING_2 + ( IDENT_11 - IDENT_9 ) ) ) ; for ( int i = 0 ; i < ( IDENT_10 . size ( ) ) ; i ++ ) { org . IDENT_1 . IDENT_2 . util . METHOD_2 . Result n = IDENT_10 . get ( i ) ; org . IDENT_1 . IDENT_2 . utils . IDENT_3 p = actual . METHOD_4 ( i ) ; "<AssertPlaceHolder>" ; System . out . println ( ( ( ( STRING_3 + ( n . IDENT_12 ) ) + STRING_4 ) + ( n . IDENT_13 ) ) ) ; } } METHOD_4 ( int ) { return elements [ i ] ; }
org . junit . Assert . assertSame ( p , n . IDENT_12 ) 