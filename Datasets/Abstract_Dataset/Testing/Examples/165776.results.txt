METHOD_0 ( ) { int x = INT_0 ; int y = INT_1 ; byte [ ] actual = IDENT_0 . IDENT_1 . Utils . METHOD_1 ( x , y ) ; byte [ ] expected = new byte [ ] { 0 , 0 , INT_2 , INT_2 , ( - INT_2 ) - 1 , ( - INT_2 ) - 1 , ( - 0 ) - 1 , ( - 0 ) - 1 } ; "<AssertPlaceHolder>" ; } METHOD_1 ( int , int ) { byte [ ] ret = new byte [ 8 ] ; int IDENT_2 = IDENT_0 . IDENT_1 . Utils . METHOD_2 ( x ) ; int IDENT_3 = IDENT_0 . IDENT_1 . Utils . METHOD_2 ( ( x << 16 ) ) ; int IDENT_4 = ( IDENT_0 . IDENT_1 . Utils . METHOD_2 ( y ) ) > > > 1 ; int IDENT_5 = ( IDENT_0 . IDENT_1 . Utils . METHOD_2 ( ( y << 16 ) ) ) > > > 1 ; int IDENT_6 = IDENT_2 | IDENT_4 ; int IDENT_7 = IDENT_3 | IDENT_5 ; byte [ ] IDENT_8 = org . apache . hadoop . hbase . util . IDENT_9 . METHOD_3 ( IDENT_6 ) ; byte [ ] IDENT_10 = org . apache . hadoop . hbase . util . IDENT_9 . METHOD_3 ( IDENT_7 ) ; java . lang . System . METHOD_4 ( IDENT_8 , 0 , ret , 0 , 4 ) ; java . lang . System . METHOD_4 ( IDENT_10 , 0 , ret , 4 , 4 ) ; return ret ; }
org . junit . Assert . assertArrayEquals ( expected , actual ) 