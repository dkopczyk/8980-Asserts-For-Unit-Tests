METHOD_0 ( ) { final org . eclipse . IDENT_0 . query . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new org . eclipse . IDENT_0 . query . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; IDENT_4 . METHOD_2 ( STRING_0 , org . apache . rya . indexing . IDENT_5 . storage . accumulo . IDENT_6 . IDENT_7 . METHOD_3 ( STRING_1 ) ) ; IDENT_4 . METHOD_2 ( STRING_2 , org . apache . rya . indexing . IDENT_5 . storage . accumulo . IDENT_6 . IDENT_7 . METHOD_3 ( STRING_3 , org . apache . rya . indexing . IDENT_5 . storage . accumulo . IDENT_6 . IDENT_7 . METHOD_4 ( STRING_4 ) ) ) ; IDENT_4 . METHOD_2 ( STRING_5 0 , org . apache . rya . indexing . IDENT_5 . storage . accumulo . IDENT_6 . IDENT_7 . METHOD_3 ( STRING_6 , org . apache . rya . indexing . IDENT_5 . storage . accumulo . IDENT_6 . IDENT_7 . METHOD_4 ( STRING_7 ) ) ) ; IDENT_4 . METHOD_2 ( STRING_5 , org . apache . rya . indexing . IDENT_5 . storage . accumulo . IDENT_6 . IDENT_7 . METHOD_3 ( STRING_8 , org . apache . rya . indexing . IDENT_5 . storage . accumulo . IDENT_6 . IDENT_7 . METHOD_4 ( STRING_9 ) ) ) ; final org . apache . rya . indexing . IDENT_5 . storage . accumulo . IDENT_8 IDENT_9 = new org . apache . rya . indexing . IDENT_5 . storage . accumulo . METHOD_5 ( STRING_5 , STRING_0 , STRING_2 , STRING_5 0 ) ; org . apache . rya . indexing . IDENT_5 . storage . accumulo . IDENT_10 < byte [ ] > converter = new org . apache . rya . indexing . IDENT_5 . storage . accumulo . METHOD_6 ( ) ; final byte [ ] IDENT_11 = converter . convert ( IDENT_4 , IDENT_9 ) ; final org . eclipse . IDENT_0 . query . IDENT_12 IDENT_13 = converter . convert ( IDENT_11 , IDENT_9 ) ; "<AssertPlaceHolder>" ; } convert ( java . lang . String , org . apache . rya . indexing . IDENT_5 . storage . accumulo . METHOD_5 ) { METHOD_7 ( IDENT_14 ) ; METHOD_7 ( IDENT_9 ) ; if ( ( IDENT_14 . isEmpty ( ) ) && ( IDENT_9 . toString ( ) . isEmpty ( ) ) ) { return new org . eclipse . IDENT_0 . query . impl . METHOD_8 ( ) ; } final java . lang . String [ ] IDENT_15 = IDENT_14 . split ( org . apache . rya . indexing . IDENT_5 . storage . accumulo . IDENT_16 . IDENT_17 ) ; final java . lang . String [ ] IDENT_18 = IDENT_9 . toArray ( ) ; METHOD_9 ( ( ( IDENT_18 . length ) == ( IDENT_15 . length ) ) , STRING_10 ) ; final org . eclipse . IDENT_0 . query . IDENT_1 . IDENT_2 . METHOD_1 IDENT_19 = new org . eclipse . IDENT_0 . query . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; for ( int i = 0 ; i < ( IDENT_15 . length ) ; i ++ ) { final java . lang . String IDENT_20 = IDENT_15 [ i ] ; if ( ! ( org . apache . rya . indexing . IDENT_5 . storage . accumulo . IDENT_16 . IDENT_21 . equals ( IDENT_20 ) ) ) { final java . lang . String name = IDENT_18 [ i ] ; final org . eclipse . IDENT_0 . model . IDENT_22 value = org . apache . rya . indexing . IDENT_5 . storage . accumulo . IDENT_16 . METHOD_10 ( IDENT_15 [ i ] ) ; IDENT_19 . METHOD_2 ( name , value ) ; } } return IDENT_19 ; }
org . junit . Assert . assertEquals ( IDENT_4 , IDENT_13 ) 