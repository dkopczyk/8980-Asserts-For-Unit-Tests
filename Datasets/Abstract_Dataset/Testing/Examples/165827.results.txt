METHOD_0 ( ) { java . io . File output = IDENT_0 . METHOD_1 ( STRING_0 ) ; java . io . File IDENT_1 = IDENT_0 . METHOD_2 ( STRING_1 ) ; org . apache . commons . io . IDENT_2 . METHOD_3 ( IDENT_1 ) ; java . io . File IDENT_3 = new java . io . File ( IDENT_1 , STRING_2 ) ; org . apache . commons . io . IDENT_2 . write ( IDENT_3 , STRING_3 ) ; IDENT_4 . IDENT_5 . METHOD_4 ( output , IDENT_1 ) ; java . io . File IDENT_6 = IDENT_0 . METHOD_2 ( STRING_4 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . io . File , java . io . File ) { byte [ ] buffer = new byte [ INT_0 ] ; try ( java . util . IDENT_7 . IDENT_8 IDENT_9 = new java . util . IDENT_7 . METHOD_6 ( new java . io . METHOD_7 ( IDENT_10 ) ) ) { java . util . IDENT_7 . IDENT_11 IDENT_12 = IDENT_9 . METHOD_8 ( ) ; while ( IDENT_12 != null ) { java . lang . String IDENT_13 = IDENT_12 . getName ( ) ; java . io . File METHOD_1 = new java . io . File ( IDENT_6 , IDENT_13 ) ; org . apache . commons . io . IDENT_2 . METHOD_3 ( METHOD_1 . METHOD_9 ( ) ) ; try ( java . io . IDENT_14 IDENT_15 = new java . io . METHOD_10 ( METHOD_1 ) ) { int len ; while ( ( len = IDENT_9 . read ( buffer ) ) > 0 ) { IDENT_15 . write ( buffer , 0 , len ) ; } } IDENT_12 = IDENT_9 . METHOD_8 ( ) ; } return true ; } catch ( java . io . IOException ex ) { return false ; } }
org . junit . Assert . assertTrue ( METHOD_5 ( output , IDENT_6 ) ) 