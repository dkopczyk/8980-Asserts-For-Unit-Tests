METHOD_0 ( ) { io . IDENT_0 . jersey . IDENT_1 . IDENT_2 IDENT_3 = mock ( io . IDENT_0 . jersey . IDENT_1 . IDENT_2 . class ) ; org . IDENT_4 . IDENT_5 . IDENT_1 . IDENT_6 IDENT_7 = mock ( org . IDENT_4 . IDENT_5 . IDENT_1 . IDENT_6 . class ) ; org . IDENT_4 . IDENT_5 . auth . IDENT_8 IDENT_9 = mock ( org . IDENT_4 . IDENT_5 . auth . IDENT_8 . class ) ; org . eclipse . IDENT_10 . IDENT_5 . servlet . IDENT_11 request = mock ( org . eclipse . IDENT_10 . IDENT_5 . servlet . IDENT_11 . class ) ; org . eclipse . IDENT_10 . IDENT_5 . servlet . IDENT_12 response = mock ( org . eclipse . IDENT_10 . IDENT_5 . servlet . IDENT_12 . class ) ; when ( IDENT_7 . METHOD_1 ( ) ) . thenReturn ( IDENT_9 ) ; when ( IDENT_9 . METHOD_2 ( eq ( request ) ) ) . thenReturn ( new org . IDENT_4 . IDENT_5 . auth . IDENT_8 . IDENT_13 < > ( java . util . Optional . empty ( ) , true ) ) ; when ( IDENT_7 . jersey ( ) ) . thenReturn ( IDENT_3 ) ; org . IDENT_4 . IDENT_5 . IDENT_14 factory = new org . IDENT_4 . IDENT_5 . METHOD_3 ( IDENT_7 ) ; java . lang . Object connection = factory . METHOD_4 ( request , response ) ; "<AssertPlaceHolder>" ; verify ( response ) . METHOD_5 ( eq ( STRING_0 ) ) ; verify ( IDENT_9 ) . METHOD_2 ( eq ( request ) ) ; } METHOD_4 ( org . eclipse . IDENT_10 . IDENT_5 . servlet . IDENT_11 , org . eclipse . IDENT_10 . IDENT_5 . servlet . IDENT_12 ) { try { java . util . Optional < org . IDENT_4 . IDENT_5 . auth . IDENT_8 > IDENT_9 = java . util . Optional . METHOD_6 ( IDENT_7 . METHOD_1 ( ) ) ; java . lang . Object IDENT_15 = null ; if ( IDENT_9 . METHOD_7 ( ) ) { org . IDENT_4 . IDENT_5 . auth . IDENT_8 . IDENT_13 IDENT_16 = IDENT_9 . get ( ) . METHOD_2 ( request ) ; if ( ( ! ( IDENT_16 . METHOD_8 ( ) . METHOD_7 ( ) ) ) && ( IDENT_16 . METHOD_9 ( ) ) ) { response . METHOD_5 ( STRING_0 ) ; return null ; } else { IDENT_15 = IDENT_16 . METHOD_8 ( ) . METHOD_10 ( null ) ; } } return new org . IDENT_4 . IDENT_5 . METHOD_11 ( this . IDENT_7 . METHOD_12 ( ) , this . IDENT_7 . METHOD_13 ( ) , IDENT_15 , this . IDENT_7 . METHOD_14 ( ) , java . util . Optional . METHOD_6 ( this . IDENT_7 . METHOD_15 ( ) ) , this . IDENT_7 . METHOD_16 ( ) ) ; } catch ( org . IDENT_4 . IDENT_5 . auth . IDENT_17 | java . io . IOException e ) { org . IDENT_4 . IDENT_5 . METHOD_3 . logger . warn ( STRING_1 , e ) ; return null ; } }
org . junit . Assert . assertNull ( connection ) 