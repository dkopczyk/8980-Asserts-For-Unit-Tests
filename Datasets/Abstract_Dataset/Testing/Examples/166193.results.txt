METHOD_0 ( ) { java . util . List < java . lang . String > IDENT_0 ; if ( original . equals ( IDENT_1 ) ) { IDENT_0 = java . util . Collections . emptyList ( ) ; } else { try ( java . io . InputStream IDENT_2 = getClass ( ) . getResourceAsStream ( ( ( ( original ) + STRING_0 ) + ( IDENT_1 ) ) ) ) { org . junit . IDENT_3 . METHOD_1 ( IDENT_2 ) ; IDENT_0 = org . apache . commons . io . IDENT_4 . METHOD_2 ( IDENT_2 ) ; } } IDENT_5 . IDENT_6 . core . IDENT_7 IDENT_8 = new IDENT_5 . IDENT_6 . core . IDENT_7 . Builder ( storage ) . METHOD_3 ( IDENT_5 . IDENT_6 . core . IDENT_9 . IDENT_10 . IDENT_11 . get ( original ) ) . create ( ) ; IDENT_5 . IDENT_6 . core . IDENT_7 IDENT_12 = new IDENT_5 . IDENT_6 . core . IDENT_7 . Builder ( storage ) . METHOD_3 ( IDENT_5 . IDENT_6 . core . IDENT_9 . IDENT_10 . IDENT_11 . get ( IDENT_1 ) ) . create ( ) ; java . util . List < java . lang . String > IDENT_13 = IDENT_14 . METHOD_4 ( IDENT_8 , IDENT_12 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( IDENT_5 . IDENT_6 . core . IDENT_15 , IDENT_5 . IDENT_6 . core . IDENT_15 ) { IDENT_5 . IDENT_6 . core . METHOD_4 . IDENT_16 IDENT_14 = new IDENT_5 . IDENT_6 . core . METHOD_4 . METHOD_5 ( storage ) ; IDENT_5 . IDENT_6 . core . IDENT_17 IDENT_18 = storage . get ( original , IDENT_5 . IDENT_6 . core . IDENT_17 . class ) ; IDENT_5 . IDENT_6 . core . IDENT_17 IDENT_19 = storage . get ( IDENT_1 , IDENT_5 . IDENT_6 . core . IDENT_17 . class ) ; return new IDENT_5 . IDENT_6 . core . METHOD_4 . METHOD_6 ( IDENT_14 , storage . get ( IDENT_18 . METHOD_7 ( ) , IDENT_5 . IDENT_6 . core . IDENT_7 . class ) , storage . get ( IDENT_19 . METHOD_7 ( ) , IDENT_5 . IDENT_6 . core . IDENT_7 . class ) ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_13 ) 