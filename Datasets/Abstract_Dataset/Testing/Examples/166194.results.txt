METHOD_0 ( ) { IDENT_0 . IDENT_1 . io . IDENT_2 IDENT_3 = new IDENT_0 . IDENT_1 . io . METHOD_1 ( "foo" , IDENT_0 . IDENT_1 . storage . IDENT_4 . IDENT_5 , java . time . IDENT_6 . of ( INT_0 , 4 , 15 , 20 , INT_1 , 0 , 0 , java . time . IDENT_7 . METHOD_2 ( 2 ) ) ) ; try ( java . io . InputStream is = getClass ( ) . getResourceAsStream ( STRING_0 ) ) { IDENT_0 . IDENT_1 . io . METHOD_1 IDENT_8 = IDENT_0 . IDENT_1 . io . IDENT_9 . read ( is , IDENT_0 . IDENT_1 . io . METHOD_1 . class ) ; "<AssertPlaceHolder>" ; } } read ( IDENT_0 . IDENT_1 . io . InputStream , java . lang . Class ) { try ( IDENT_0 . IDENT_1 . io . IDENT_10 reader = new IDENT_0 . IDENT_1 . io . METHOD_3 ( is , java . nio . IDENT_11 . IDENT_12 . UTF_8 ) ) { return IDENT_0 . IDENT_1 . io . IDENT_9 . gson . METHOD_4 ( reader , IDENT_13 ) ; } catch ( java . lang . IllegalArgumentException | java . lang . IllegalStateException e ) { throw new IDENT_0 . IDENT_1 . io . METHOD_5 ( STRING_1 , e ) ; } }
org . junit . Assert . assertEquals ( IDENT_3 , IDENT_8 ) 