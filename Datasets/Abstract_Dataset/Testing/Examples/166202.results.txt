METHOD_0 ( ) { org . IDENT_0 . executor . IDENT_1 IDENT_2 = new org . IDENT_0 . executor . METHOD_1 ( ) ; java . util . List < org . IDENT_0 . to . IDENT_3 > list = IDENT_2 . METHOD_2 ( em , org . IDENT_0 . to . IDENT_3 . class , STRING_0 , new org . IDENT_0 . executor . METHOD_3 ( 0 , 20 ) ) ; "<AssertPlaceHolder>" ; for ( org . IDENT_0 . to . IDENT_3 IDENT_4 : list ) { org . IDENT_0 . executor . IDENT_5 . LOGGER . debug ( IDENT_4 ) ; } } METHOD_2 ( javax . persistence . IDENT_6 , java . lang . Class , java . lang . String , org . IDENT_0 . executor . METHOD_3 , java . lang . Object [ ] ) { java . lang . String IDENT_7 = org . IDENT_0 . executor . IDENT_8 . METHOD_4 ( IDENT_9 ) ; javax . persistence . Query query = em . METHOD_5 ( IDENT_7 ) ; if ( ( IDENT_10 . METHOD_6 ( ) ) != null ) { query . METHOD_7 ( IDENT_10 . METHOD_6 ( ) ) ; } if ( ( IDENT_10 . METHOD_8 ( ) ) != null ) { query . METHOD_9 ( IDENT_10 . METHOD_8 ( ) ) ; } if ( ( params . length ) > 0 ) { METHOD_10 ( query , params ) ; } return IDENT_11 . list ( query , clazz ) ; }
org . junit . Assert . assertNotNull ( list ) 