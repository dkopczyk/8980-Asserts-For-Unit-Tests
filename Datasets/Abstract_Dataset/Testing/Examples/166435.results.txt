METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 IDENT_6 = new IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( ) ; IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_7 IDENT_8 = new IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_2 ( ) ; IDENT_8 . setValue ( STRING_0 ) ; IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_2 IDENT_9 = new IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_2 ( ) ; IDENT_9 . setValue ( STRING_1 ) ; IDENT_6 . METHOD_3 ( IDENT_8 ) ; IDENT_6 . METHOD_4 ( IDENT_9 ) ; IDENT_10 . IDENT_11 . IDENT_12 . IDENT_13 . IDENT_14 . IDENT_15 IDENT_16 = IDENT_0 . IDENT_17 . IDENT_18 . IDENT_19 . mapper . IDENT_20 . mapper . METHOD_5 ( IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ) { IDENT_10 . IDENT_11 . IDENT_12 . IDENT_13 . IDENT_14 . IDENT_15 IDENT_16 = null ; if ( ( IDENT_6 . METHOD_6 ( ) ) != null ) { IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_21 IDENT_22 = IDENT_6 . METHOD_6 ( ) ; if ( IDENT_22 instanceof IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_23 ) { IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_23 IDENT_24 = ( ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_23 ) ( IDENT_22 ) ) ; java . lang . Double IDENT_25 = IDENT_24 . getValue ( ) ; if ( IDENT_25 != null ) { if ( IDENT_25 >= 0 ) { if ( org . mule . util . StringUtils . METHOD_7 ( IDENT_24 . METHOD_8 ( ) ) ) { IDENT_16 = new IDENT_10 . IDENT_11 . IDENT_12 . IDENT_13 . IDENT_14 . METHOD_9 ( ) ; IDENT_16 . METHOD_3 ( IDENT_25 ) ; IDENT_16 . METHOD_4 ( IDENT_25 ) ; IDENT_16 . METHOD_10 ( IDENT_24 . METHOD_8 ( ) ) ; } else { IDENT_0 . IDENT_17 . IDENT_18 . IDENT_19 . mapper . IDENT_26 . log . error ( STRING_2 ) ; } } else { IDENT_0 . IDENT_17 . IDENT_18 . IDENT_19 . mapper . IDENT_26 . log . error ( ( STRING_3 + IDENT_25 ) ) ; } } else { IDENT_0 . IDENT_17 . IDENT_18 . IDENT_19 . mapper . IDENT_26 . log . error ( STRING_4 ) ; } } else { IDENT_0 . IDENT_17 . IDENT_18 . IDENT_19 . mapper . IDENT_26 . log . error ( ( STRING_5 + ( IDENT_22 . getClass ( ) . getName ( ) ) ) ) ; } } else if ( ( ( ( ( IDENT_6 . METHOD_11 ( ) ) != null ) && ( ( IDENT_6 . METHOD_12 ( ) ) != null ) ) && ( org . mule . util . StringUtils . METHOD_7 ( IDENT_6 . METHOD_11 ( ) . getValue ( ) ) ) ) && ( org . mule . util . StringUtils . METHOD_7 ( IDENT_6 . METHOD_12 ( ) . getValue ( ) ) ) ) { java . lang . String IDENT_27 = IDENT_6 . METHOD_11 ( ) . getValue ( ) ; java . lang . String IDENT_28 = IDENT_6 . METHOD_12 ( ) . getValue ( ) ; try { java . text . IDENT_29 IDENT_30 = new java . text . METHOD_13 ( IDENT_0 . IDENT_17 . IDENT_18 . IDENT_19 . mapper . IDENT_26 . IDENT_31 ) ; java . util . Date IDENT_32 = IDENT_30 . parse ( IDENT_27 ) ; try { java . util . Date IDENT_33 = IDENT_30 . parse ( IDENT_28 ) ; if ( ! ( IDENT_32 . METHOD_14 ( IDENT_33 ) ) ) { int IDENT_34 = org . joda . time . IDENT_35 . METHOD_15 ( new org . joda . time . METHOD_16 ( IDENT_32 ) , new org . joda . time . METHOD_16 ( IDENT_33 ) ) . METHOD_17 ( ) ; IDENT_16 = new IDENT_10 . IDENT_11 . IDENT_12 . IDENT_13 . IDENT_14 . METHOD_9 ( ) ; IDENT_16 . METHOD_3 ( new java . lang . Double ( IDENT_34 ) ) ; IDENT_16 . METHOD_4 ( IDENT_16 . METHOD_11 ( ) ) ; IDENT_16 . METHOD_10 ( STRING_6 ) ; } else { IDENT_0 . IDENT_17 . IDENT_18 . IDENT_19 . mapper . IDENT_26 . log . error ( ( ( ( ( STRING_6 1 + IDENT_27 ) + STRING_6 2 ) + IDENT_28 ) + STRING_7 ) ) ; } } catch ( java . text . IDENT_36 p ) { IDENT_0 . IDENT_17 . IDENT_18 . IDENT_19 . mapper . IDENT_26 . log . error ( ( STRING_8 + IDENT_27 ) ) ; } } catch ( java . text . IDENT_36 p ) { IDENT_0 . IDENT_17 . IDENT_18 . IDENT_19 . mapper . IDENT_26 . log . error ( ( STRING_6 0 + IDENT_27 ) ) ; } } else { IDENT_0 . IDENT_17 . IDENT_18 . IDENT_19 . mapper . IDENT_26 . log . debug ( ( ( ( STRING_9 + ( ( IDENT_6 . METHOD_11 ( ) ) == null ? STRING_10 : IDENT_6 . METHOD_11 ( ) . getValue ( ) ) ) + STRING_11 ) + ( ( IDENT_6 . METHOD_12 ( ) ) == null ? STRING_10 : IDENT_6 . METHOD_12 ( ) . getValue ( ) ) ) ) ; } return IDENT_16 ; }
org . junit . Assert . assertNull ( IDENT_16 ) 