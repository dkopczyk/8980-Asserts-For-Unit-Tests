METHOD_0 ( ) { final java . io . File IDENT_0 = IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_1 ( ) ; final IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_7 IDENT_8 = IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_7 . load ( IDENT_0 . getAbsolutePath ( ) ) ; "<AssertPlaceHolder>" ; } load ( java . lang . String ) { IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_7 IDENT_9 = null ; IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_10 is = null ; try { is = new IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_2 ( new IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_3 ( IDENT_11 ) ) ; IDENT_9 = ( ( IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_7 ) ( is . METHOD_4 ( ) ) ) ; IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_7 . log . debug ( ( STRING_0 + IDENT_11 ) ) ; } catch ( java . lang . Exception e ) { IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_7 . log . error ( ( STRING_1 + IDENT_11 ) , e ) ; } finally { if ( is != null ) { try { is . close ( ) ; } catch ( java . lang . Exception err ) { IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_7 . log . error ( STRING_2 , err ) ; } } } return IDENT_9 ; }
org . junit . Assert . assertNull ( IDENT_8 ) 