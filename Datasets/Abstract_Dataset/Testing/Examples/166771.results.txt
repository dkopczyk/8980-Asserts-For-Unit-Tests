METHOD_0 ( ) { "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { if ( org . IDENT_0 . util . IDENT_1 . isEmpty ( text ) ) { return text ; } char [ ] IDENT_2 = text . METHOD_2 ( ) ; if ( ( ( ( IDENT_2 . length ) >= 2 ) && ( java . lang . IDENT_3 . METHOD_3 ( IDENT_2 [ 0 ] ) ) ) && ( java . lang . IDENT_3 . METHOD_3 ( IDENT_2 [ 1 ] ) ) ) { return text ; } IDENT_2 [ 0 ] = java . lang . IDENT_3 . toLowerCase ( IDENT_2 [ 0 ] ) ; return new java . lang . String ( IDENT_2 ) ; }
org . junit . Assert . assertThat ( org . IDENT_0 . util . IDENT_1 . METHOD_1 ( "" ) , org . hamcrest . CoreMatchers . is ( "" ) ) 