METHOD_0 ( ) { org . IDENT_0 . test . junit . IDENT_1 l = new org . IDENT_0 . test . junit . METHOD_1 ( org . IDENT_0 . test . junit . IDENT_2 . IDENT_3 ) ; l . METHOD_2 ( IDENT_4 ) ; l . METHOD_3 ( false ) ; l . METHOD_4 ( IDENT_5 ) ; l . init ( ) ; l . start ( ) ; org . IDENT_0 . core . IDENT_6 < org . IDENT_0 . test . junit . IDENT_7 > IDENT_8 = l . METHOD_5 ( ) ; System . out . println ( IDENT_8 ) ; double IDENT_9 = IDENT_8 . METHOD_6 ( ) . METHOD_7 ( ) ; int IDENT_10 = 100 ; int IDENT_11 = INT_0 ; int IDENT_12 = INT_0 ; double IDENT_13 = FLOAT_0 ; double IDENT_14 = org . IDENT_0 . IDENT_15 . IDENT_16 . METHOD_8 ( IDENT_11 , IDENT_12 ) ; double IDENT_17 = org . IDENT_0 . IDENT_15 . IDENT_16 . METHOD_8 ( IDENT_10 , IDENT_12 ) ; double IDENT_18 = org . IDENT_0 . IDENT_15 . IDENT_16 . METHOD_9 ( IDENT_17 , IDENT_14 , IDENT_13 ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( double , double , double ) { return ( IDENT_14 + IDENT_17 ) == 0 ? 0 : ( ( 1 + ( IDENT_13 * IDENT_13 ) ) * ( IDENT_14 * IDENT_17 ) ) / ( ( ( IDENT_13 * IDENT_13 ) * IDENT_14 ) + IDENT_17 ) ; }
org . junit . Assert . assertEquals ( "" , IDENT_18 , IDENT_9 , 0.0 ) 