METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; org . apache . jena . query . Query expected = org . apache . jena . query . IDENT_2 . create ( IDENT_0 ) ; org . apache . jena . IDENT_3 . IDENT_4 . IDENT_5 op = org . apache . jena . IDENT_3 . IDENT_4 . IDENT_6 . METHOD_1 ( org . apache . jena . IDENT_3 . IDENT_4 . IDENT_6 . METHOD_2 ( org . apache . jena . query . IDENT_2 . create ( IDENT_1 ) ) ) ; System . out . println ( ( STRING_2 + op ) ) ; op = org . IDENT_7 . IDENT_8 . IDENT_4 . transform . IDENT_9 . transform ( op ) ; System . out . println ( ( STRING_3 + op ) ) ; op = org . apache . jena . IDENT_3 . IDENT_4 . IDENT_10 . transform ( new org . apache . jena . IDENT_3 . IDENT_4 . IDENT_11 . METHOD_3 ( ) , op ) ; System . out . println ( ( STRING_4 + op ) ) ; op = org . IDENT_7 . IDENT_8 . IDENT_4 . transform . IDENT_12 . transform ( op ) ; System . out . println ( ( STRING_5 + op ) ) ; op = org . apache . jena . IDENT_3 . IDENT_4 . IDENT_10 . transform ( new org . IDENT_7 . IDENT_8 . IDENT_4 . transform . METHOD_4 ( ) , op ) ; System . out . println ( ( STRING_6 + op ) ) ; op = org . apache . jena . IDENT_3 . IDENT_4 . IDENT_10 . transform ( new org . apache . jena . IDENT_3 . IDENT_4 . IDENT_11 . METHOD_5 ( ) , op ) ; op = org . IDENT_7 . IDENT_8 . IDENT_4 . transform . IDENT_13 . transform ( op ) ; System . out . println ( ( STRING_7 + op ) ) ; org . apache . jena . query . Query actual = org . apache . jena . IDENT_3 . IDENT_4 . IDENT_14 . METHOD_6 ( op ) ; System . out . println ( ( STRING_8 + actual ) ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( org . apache . jena . IDENT_3 . IDENT_4 . IDENT_5 ) { return org . IDENT_7 . IDENT_8 . IDENT_15 . IDENT_16 . METHOD_6 ( op , IDENT_17 . IDENT_18 ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 