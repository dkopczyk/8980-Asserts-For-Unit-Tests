METHOD_0 ( ) { info . IDENT_0 . IDENT_1 . IDENT_2 . interfaces . IDENT_3 . IDENT_4 IDENT_5 = mock ( info . IDENT_0 . IDENT_1 . IDENT_2 . interfaces . IDENT_3 . IDENT_4 . class ) ; info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_6 . IDENT_7 IDENT_8 = mock ( info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_6 . IDENT_7 . class ) ; when ( IDENT_9 . METHOD_1 ( ) ) . thenReturn ( IDENT_10 ) . thenReturn ( null ) ; when ( IDENT_11 . getValue ( IDENT_12 ) ) . thenReturn ( STRING_0 ) ; when ( IDENT_11 . getValue ( IDENT_13 ) ) . thenReturn ( java . util . Collections . emptyList ( ) ) ; info . IDENT_0 . IDENT_1 . IDENT_14 . IDENT_14 . IDENT_15 IDENT_16 = new info . IDENT_0 . IDENT_1 . IDENT_14 . IDENT_14 . METHOD_2 ( ) ; info . IDENT_0 . IDENT_1 . IDENT_14 . interfaces . IDENT_17 . IDENT_18 status = IDENT_16 . METHOD_3 ( IDENT_8 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_19 ) . init ( IDENT_8 , IDENT_11 ) ; METHOD_4 ( times ( 1 ) ) ; info . IDENT_0 . IDENT_1 . IDENT_20 . IDENT_20 . IDENT_21 . resolve ( METHOD_5 ( IDENT_22 ) , IDENT_23 . METHOD_6 ( ) ) ; info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_24 . IDENT_25 IDENT_26 = ( ( info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_24 . IDENT_25 ) ( IDENT_23 . METHOD_7 ( ) . get ( 1 ) ) ) ; IDENT_23 . METHOD_7 ( ) . METHOD_8 ( ) ; IDENT_26 . execute ( IDENT_11 , IDENT_8 ) ; METHOD_4 ( ) ; info . IDENT_0 . IDENT_1 . IDENT_20 . IDENT_20 . IDENT_21 . resolve ( METHOD_5 ( IDENT_27 ) , IDENT_23 . METHOD_6 ( ) ) ; info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_24 . IDENT_28 IDENT_29 = ( ( info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_24 . IDENT_28 ) ( IDENT_23 . METHOD_7 ( ) . get ( 1 ) ) ) ; when ( IDENT_30 . create ( METHOD_5 ( getClass ( ) ) , any ( ) ) ) . thenReturn ( IDENT_5 ) ; IDENT_29 . execute ( getClass ( ) ) ; verify ( IDENT_5 ) . load ( ) ; verify ( IDENT_10 , times ( 0 ) ) . execute ( ) ; org . mockito . IDENT_31 < info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_24 . IDENT_28 > IDENT_32 = org . mockito . IDENT_31 . METHOD_9 ( info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_24 . IDENT_28 . class ) ; verify ( IDENT_19 ) . METHOD_10 ( IDENT_32 . METHOD_6 ( ) ) ; IDENT_32 . getValue ( ) . execute ( null ) ; verify ( IDENT_10 , times ( 1 ) ) . execute ( ) ; } METHOD_3 ( info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_6 . IDENT_7 ) { info . IDENT_0 . IDENT_1 . IDENT_14 . IDENT_14 . IDENT_33 status = METHOD_11 ( IDENT_34 ) ; for ( info . IDENT_0 . IDENT_1 . IDENT_14 . IDENT_14 . IDENT_33 IDENT_35 : status . METHOD_12 ( ) ) { if ( ! ( IDENT_35 . METHOD_13 ( ) ) ) { throw new info . IDENT_0 . IDENT_1 . IDENT_14 . interfaces . IDENT_17 . exceptions . METHOD_14 ( java . text . IDENT_36 . format ( STRING_1 , IDENT_35 . getId ( ) , status . getId ( ) ) ) ; } } try { METHOD_15 ( status ) ; status . load ( ) ; } catch ( info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_24 . exception . IDENT_37 e ) { throw new info . IDENT_0 . IDENT_1 . IDENT_14 . interfaces . IDENT_17 . exceptions . METHOD_14 ( STRING_2 , e ) ; } return status ; }
org . junit . Assert . assertSame ( IDENT_19 , status ) 