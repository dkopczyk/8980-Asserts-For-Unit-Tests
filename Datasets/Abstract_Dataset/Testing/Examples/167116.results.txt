METHOD_0 ( ) { info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_2 . IDENT_3 strategy = mock ( info . IDENT_0 . IDENT_1 . base . interfaces . IDENT_2 . IDENT_3 . class ) ; when ( strategy . resolve ( 1 ) ) . thenReturn ( "1" ) ; info . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_4 . IDENT_5 . METHOD_1 ( info . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_4 . IDENT_5 . resolve ( info . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_4 . IDENT_5 . METHOD_2 ( ) , ( ( java . lang . String . class . METHOD_3 ( ) ) + STRING_0 ) ) , strategy ) ; info . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_7 . IDENT_8 field = new info . IDENT_0 . IDENT_1 . field . field . Field ( new info . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_9 . METHOD_4 ( "a" ) ) ; info . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_6 . IDENT_10 IDENT_11 = mock ( info . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_6 . IDENT_10 . class ) ; when ( IDENT_11 . getValue ( new info . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_9 . METHOD_4 ( "a" ) ) ) . thenReturn ( 1 ) ; java . lang . String result = field . in ( IDENT_11 , java . lang . String . class ) ; "<AssertPlaceHolder>" ; } in ( info . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_6 . IDENT_10 , java . lang . Class ) { if ( ( null == obj ) || ( null == type ) ) { throw new info . IDENT_0 . IDENT_1 . base . exception . IDENT_12 . METHOD_5 ( STRING_1 ) ; } java . lang . Object value = obj . getValue ( IDENT_13 ) ; if ( null == value ) { return null ; } if ( ( type == ( value . getClass ( ) ) ) || ( type . METHOD_6 ( value . getClass ( ) ) ) ) { return ( ( T ) ( value ) ) ; } try { return info . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_4 . IDENT_5 . resolve ( info . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_4 . IDENT_5 . resolve ( info . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_4 . IDENT_5 . METHOD_2 ( ) , ( ( type . METHOD_3 ( ) ) + STRING_0 ) ) , value ) ; } catch ( java . lang . Throwable e ) { throw new info . IDENT_0 . IDENT_1 . base . exception . IDENT_12 . METHOD_5 ( ( ( ( ( STRING_2 + ( value . getClass ( ) . METHOD_3 ( ) ) ) + STRING_3 ) + ( type . METHOD_3 ( ) ) ) + STRING_4 ) ) ; } }
org . junit . Assert . assertEquals ( result , "1" ) 