METHOD_0 ( ) { org . IDENT_0 . kernel . parser . original . IDENT_1 parser = METHOD_1 ( STRING_0 ) ; org . IDENT_0 . kernel . IDENT_2 p = parser . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { METHOD_3 ( ) ; final java . lang . String name = METHOD_4 ( ) ; IDENT_3 = name ; final java . lang . String IDENT_4 = METHOD_5 ( ) ; org . IDENT_0 . kernel . IDENT_2 . IDENT_5 IDENT_6 = org . IDENT_0 . kernel . IDENT_2 . IDENT_5 . IDENT_7 ; org . IDENT_0 . kernel . IDENT_8 IDENT_9 = org . IDENT_0 . kernel . IDENT_8 . IDENT_10 ; boolean IDENT_11 = false ; while ( ( METHOD_6 ( ) ) == ( IDENT_12 . IDENT_13 ) ) { if ( STRING_1 . equals ( METHOD_7 ( ) . string ) ) { IDENT_6 = org . IDENT_0 . kernel . IDENT_2 . IDENT_5 . IDENT_14 ; } else if ( STRING_2 . equals ( METHOD_7 ( ) . string ) ) { IDENT_6 = org . IDENT_0 . kernel . IDENT_2 . IDENT_5 . IDENT_15 ; } else if ( STRING_1 FLOAT_0 METHOD_8 ( METHOD_7 ( ) . string ) ) { IDENT_9 = org . IDENT_0 . kernel . IDENT_8 . IDENT_16 ; } else if ( STRING_3 . equals ( METHOD_7 ( ) . string ) ) { IDENT_9 = org . IDENT_0 . kernel . IDENT_8 . IDENT_17 ; } else if ( STRING_4 . equals ( METHOD_7 ( ) . string ) ) { IDENT_9 = org . IDENT_0 . kernel . IDENT_8 . IDENT_18 ; } else if ( STRING_5 . equals ( METHOD_7 ( ) . string ) ) { IDENT_19 . warn ( STRING_6 ) ; IDENT_11 = true ; } else { break ; } IDENT_20 . METHOD_9 ( ) ; } final org . IDENT_0 . kernel . IDENT_21 . IDENT_22 IDENT_21 = METHOD_10 ( ) ; expect ( IDENT_12 . IDENT_23 , STRING_7 ) ; final org . IDENT_0 . kernel . IDENT_24 . IDENT_25 IDENT_24 = org . IDENT_0 . kernel . parser . original . IDENT_1 . METHOD_11 ( METHOD_12 ( ) ) ; IDENT_26 . METHOD_13 ( IDENT_21 , IDENT_24 ) ; METHOD_14 ( IDENT_21 ) ; METHOD_15 ( IDENT_24 ) ; final org . IDENT_0 . kernel . IDENT_21 . IDENT_22 IDENT_27 = IDENT_21 ; org . IDENT_0 . kernel . IDENT_21 . IDENT_22 IDENT_28 = IDENT_21 ; for ( ; ( IDENT_28 . next ) != null ; IDENT_28 = IDENT_28 . next ) { } final org . IDENT_0 . kernel . IDENT_2 p = org . IDENT_0 . kernel . IDENT_2 . METHOD_16 ( ) . type ( IDENT_9 ) . location ( location ) . name ( name ) . METHOD_17 ( METHOD_17 ) . METHOD_18 ( IDENT_27 , IDENT_28 ) . METHOD_19 ( IDENT_24 ) . support ( IDENT_6 ) . METHOD_20 ( IDENT_11 ) . build ( ) ; return p ; }
org . junit . Assert . assertNotNull ( p ) 