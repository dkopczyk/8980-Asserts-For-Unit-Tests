METHOD_0 ( ) { System . out . println ( STRING_0 ) ; java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . api . model . IDENT_3 > IDENT_4 = new java . util . ArrayList < org . IDENT_0 . IDENT_1 . IDENT_2 . api . model . IDENT_3 > ( ) ; IDENT_4 . add ( org . IDENT_0 . IDENT_1 . IDENT_5 . test . IDENT_6 . IDENT_7 ) ; IDENT_4 . add ( org . IDENT_0 . IDENT_1 . IDENT_5 . test . IDENT_6 . IDENT_8 ) ; java . util . Map < org . IDENT_0 . IDENT_1 . IDENT_2 . api . model . IDENT_9 , java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . api . model . IDENT_9 > > IDENT_10 = org . IDENT_0 . IDENT_1 . IDENT_5 . test . IDENT_6 . IDENT_11 . METHOD_1 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; METHOD_2 ( IDENT_10 ) ; System . out . println ( STRING_1 ) ; } METHOD_3 ( ) { java . util . Set < javax . xml . IDENT_12 . IDENT_13 > r = new java . util . HashSet < javax . xml . IDENT_12 . IDENT_13 > ( ) ; for ( com . sun . xml . IDENT_14 . v2 . util . IDENT_15 . Entry < IDENT_16 > e : entrySet ( ) ) { r . add ( e . METHOD_4 ( ) ) ; } return r ; }
org . junit . Assert . assertEquals ( 4 , IDENT_10 . METHOD_3 ( ) . size ( ) ) 