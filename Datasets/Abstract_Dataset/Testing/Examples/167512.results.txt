METHOD_0 ( ) { org . IDENT_0 . api . schema . IDENT_1 . model . IDENT_2 IDENT_3 = new org . IDENT_0 . api . schema . IDENT_1 . model . METHOD_1 ( ) ; org . IDENT_0 . api . schema . IDENT_1 . model . IDENT_4 IDENT_5 = new org . IDENT_0 . api . schema . IDENT_1 . model . METHOD_2 ( ) ; int i = 0 ; try { while ( i < ( org . IDENT_0 . platform . IDENT_1 . IDENT_6 . IDENT_7 . IDENT_8 ) ) { IDENT_5 . METHOD_3 ( new java . net . URI ( STRING_0 , ( STRING_1 + i ) , null ) ) ; IDENT_5 . METHOD_4 ( ( STRING_2 + i ) ) ; IDENT_3 . METHOD_5 ( IDENT_5 ) ; java . util . List < org . IDENT_0 . api . schema . IDENT_1 . model . METHOD_1 > IDENT_9 = IDENT_10 . METHOD_6 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; i ++ ; } } catch ( java . net . IDENT_11 e ) { throw new org . IDENT_0 . api . internal . IDENT_1 . IDENT_6 . exception . METHOD_7 ( e ) ; } } size ( ) { for ( int k = 0 ; true ; k ++ ) { if ( ( ! ( IDENT_12 . contains ( org . IDENT_0 . security . IDENT_13 . IDENT_14 . IDENT_15 . METHOD_8 ( k ) ) ) ) && ( ! ( IDENT_12 . contains ( org . IDENT_0 . security . IDENT_13 . IDENT_14 . IDENT_15 . key ( k ) ) ) ) ) { return k ; } } }
org . junit . Assert . assertTrue ( ( ( IDENT_9 . size ( ) ) == 1 ) ) 