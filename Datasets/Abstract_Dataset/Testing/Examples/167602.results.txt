METHOD_0 ( ) { java . lang . String file = STRING_0 ; java . nio . file . IDENT_0 . write ( storage . resolve ( file ) , io . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 ) ; METHOD_1 ( client . delete ( file ) . METHOD_2 ( ( IDENT_5 , e ) -> server . close ( ) ) ) ; "<AssertPlaceHolder>" ; } resolve ( io . IDENT_1 . IDENT_6 . IDENT_7 ) { io . IDENT_1 . IDENT_6 . IDENT_8 IDENT_9 = io . IDENT_1 . IDENT_6 . IDENT_10 . METHOD_3 ( query ) ; if ( IDENT_9 != null ) { logger . trace ( STRING_1 , query ) ; return io . IDENT_1 . IDENT_11 . IDENT_12 . of ( IDENT_9 ) ; } if ( ( IDENT_13 ) == null ) { logger . trace ( STRING_2 ) ; try { java . nio . IDENT_14 . IDENT_15 channel = io . IDENT_1 . IDENT_16 . IDENT_17 . METHOD_4 ( IDENT_18 , null , IDENT_19 ) ; io . IDENT_1 . IDENT_16 . IDENT_20 s = io . IDENT_1 . IDENT_16 . IDENT_20 . create ( IDENT_16 , channel ) . METHOD_5 ( IDENT_21 ) ; s . METHOD_6 ( this ) ; s . METHOD_7 ( ) ; IDENT_13 = s ; } catch ( java . io . IOException e ) { logger . error ( STRING_3 , e ) ; return io . IDENT_1 . IDENT_11 . IDENT_12 . METHOD_8 ( e ) ; } } logger . trace ( STRING_4 , query , IDENT_19 ) ; io . IDENT_1 . IDENT_6 . IDENT_22 transaction = io . IDENT_1 . IDENT_6 . IDENT_22 . of ( io . IDENT_1 . IDENT_6 . IDENT_23 . METHOD_9 ( ) , query ) ; io . IDENT_1 . IDENT_11 . IDENT_24 < io . IDENT_1 . IDENT_6 . IDENT_8 > IDENT_25 = new io . IDENT_1 . IDENT_11 . METHOD_10 ( ) ; IDENT_26 . put ( transaction , IDENT_25 ) ; io . IDENT_1 . IDENT_27 . IDENT_28 payload = io . IDENT_1 . IDENT_6 . IDENT_23 . METHOD_11 ( transaction ) ; if ( ( IDENT_29 ) != null ) { IDENT_29 . METHOD_12 ( query , payload ) ; } IDENT_13 . METHOD_13 ( io . IDENT_1 . IDENT_16 . IDENT_30 . of ( payload , IDENT_19 ) ) ; IDENT_13 . METHOD_14 ( ) ; return METHOD_15 ( IDENT_25 , METHOD_15 ) . METHOD_16 ( ( IDENT_31 , e ) -> { if ( e == null ) { if ( ( IDENT_29 ) != null ) { IDENT_29 . METHOD_17 ( query , IDENT_31 ) ; } logger . trace ( STRING_5 , query , IDENT_31 . METHOD_18 ( ) ) ; return io . IDENT_1 . IDENT_11 . IDENT_12 . of ( IDENT_31 ) ; } if ( e == io . IDENT_1 . IDENT_6 . IDENT_32 ) { logger . trace ( STRING_6 , query ) ; e = new io . IDENT_1 . IDENT_6 . METHOD_19 ( . class , io . IDENT_1 . IDENT_6 . IDENT_8 . METHOD_20 ( transaction , IDENT_33 ) ) ; IDENT_26 . remove ( transaction ) ; METHOD_21 ( ) ; } if ( ( IDENT_29 ) != null ) { IDENT_29 . METHOD_22 ( query , e ) ; } return io . IDENT_1 . IDENT_11 . IDENT_12 . METHOD_8 ( e ) ; } ) . METHOD_23 ( ) ; }
org . junit . Assert . assertFalse ( java . nio . file . IDENT_0 . exists ( storage . resolve ( file ) ) ) 