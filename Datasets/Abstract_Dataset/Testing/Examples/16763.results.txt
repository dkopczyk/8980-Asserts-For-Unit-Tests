METHOD_0 ( ) { java . util . IDENT_0 . METHOD_1 ( java . util . IDENT_0 . METHOD_2 ( STRING_0 3 ) ) ; final org . apache . rya . api . instance . IDENT_1 IDENT_2 = . METHOD_3 ( new METHOD_4 ( true ) ) org . apache . rya . api . instance . IDENT_1 . builder ( ) . METHOD_5 ( STRING_1 ) . METHOD_6 ( STRING_2 6 ) . METHOD_7 ( STRING_2 8 ) . METHOD_7 ( STRING_0 2 ) . METHOD_7 ( STRING_0 1 ) . METHOD_8 ( new org . apache . rya . api . instance . IDENT_1 . METHOD_9 ( true ) ) . METHOD_10 ( new org . apache . rya . api . instance . IDENT_1 . METHOD_11 ( true ) ) . METHOD_12 ( new org . apache . rya . api . instance . IDENT_1 . METHOD_13 ( true ) ) . METHOD_14 ( org . apache . rya . api . instance . IDENT_1 . IDENT_3 . builder ( ) . METHOD_15 ( true ) . METHOD_16 ( new org . apache . rya . api . instance . IDENT_1 . IDENT_3 . METHOD_17 ( STRING_0 6 ) ) . METHOD_18 ( org . apache . rya . api . instance . IDENT_1 . IDENT_3 . IDENT_4 . builder ( ) . setId ( STRING_0 0 ) . METHOD_19 ( IDENT_5 . IDENT_6 ) . METHOD_20 ( new java . util . Date ( INT_0 ) ) ) . METHOD_18 ( org . apache . rya . api . instance . IDENT_1 . IDENT_3 . IDENT_4 . builder ( ) . setId ( STRING_0 9 ) . METHOD_19 ( IDENT_5 . IDENT_7 ) ) ) . METHOD_21 ( new org . apache . rya . api . instance . IDENT_1 . METHOD_22 ( com . google . common . base . Optional . of ( new java . util . Date ( INT_1 ) ) ) ) . METHOD_23 ( new org . apache . rya . api . instance . IDENT_1 . METHOD_24 ( com . google . common . base . Optional . of ( new java . util . Date ( INT_2 ) ) ) ) . build ( ) ; final java . lang . String IDENT_8 = new org . apache . rya . shell . util . METHOD_25 ( ) . format ( IDENT_9 . IDENT_10 , IDENT_2 ) ; final java . lang . String expected = STRING_2 + ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( STRING_3 2 + STRING_0 8 ) + STRING_0 7 ) + STRING_0 ) + STRING_2 9 ) + STRING_0 4 ) + STRING_4 + STRING_0 4 + STRING_3 0 ) + STRING_0 4 ) + STRING_5 ) + STRING_0 4 ) + STRING_2 0 ) + STRING_0 4 ) + STRING_2 4 ) + STRING_0 5 ) + STRING_3 1 ) + STRING_2 1 ) + STRING_2 2 ) + STRING_6 ) + STRING_2 7 ) + STRING_7 ) + STRING_8 ) + STRING_2 5 ) + STRING_3 ) + STRING_9 ) + STRING_2 3 ) ; "<AssertPlaceHolder>" ; } format ( org . apache . rya . shell . IDENT_11 . IDENT_9 , org . apache . rya . api . instance . IDENT_1 ) { METHOD_26 ( IDENT_2 ) ; final java . lang . StringBuilder report = new java . lang . StringBuilder ( ) ; report . append ( STRING_2 ) ; report . append ( STRING_0 4 ) . append ( IDENT_2 . METHOD_27 ( ) ) . append ( STRING_2 1 ) ; report . append ( STRING_2 2 ) . append ( IDENT_2 . METHOD_28 ( ) ) . append ( STRING_2 1 ) ; if ( IDENT_12 == ( org . apache . rya . shell . IDENT_11 . IDENT_9 . IDENT_10 ) ) { report . append ( STRING_0 0 ) . append ( com . google . common . base . IDENT_13 . METHOD_29 ( STRING_10 ) . join ( IDENT_2 . METHOD_30 ( ) ) ) . append ( STRING_2 1 ) ; } report . append ( STRING_0 ) ; if ( IDENT_12 == ( org . apache . rya . shell . IDENT_11 . IDENT_9 . IDENT_10 ) ) { report . append ( STRING_0 9 ) ; report . append ( STRING_2 5 ) . append ( IDENT_2 . METHOD_31 ( ) . METHOD_32 ( ) ) . append ( STRING_2 1 ) ; } report . append ( STRING_4 ) ; report . append ( STRING_2 5 ) . append ( IDENT_2 . METHOD_33 ( ) . METHOD_32 ( ) ) . append ( STRING_2 1 ) ; report . append ( STRING_2 0 ) ; report . append ( STRING_2 5 ) . append ( IDENT_2 . METHOD_34 ( ) . METHOD_32 ( ) ) . append ( STRING_2 1 ) ; report . append ( STRING_5 ) ; report . append ( STRING_2 5 ) . append ( IDENT_2 . METHOD_35 ( ) . METHOD_32 ( ) ) . append ( STRING_2 1 ) ; report . append ( STRING_0 3 ) ; final org . apache . rya . api . instance . IDENT_1 . IDENT_3 IDENT_14 = IDENT_2 . METHOD_36 ( ) ; report . append ( STRING_2 5 ) . append ( IDENT_14 . METHOD_32 ( ) ) . append ( STRING_2 1 ) ; if ( IDENT_14 . METHOD_32 ( ) ) { if ( IDENT_14 . METHOD_37 ( ) . METHOD_38 ( ) ) { final java . lang . String IDENT_15 = IDENT_14 . METHOD_37 ( ) . get ( ) . METHOD_39 ( ) ; report . append ( STRING_0 8 ) . append ( IDENT_15 ) . append ( STRING_2 1 ) ; } final com . google . common . collect . ImmutableMap < java . lang . String , org . apache . rya . api . instance . IDENT_1 . IDENT_3 . IDENT_4 > IDENT_16 = IDENT_14 . METHOD_40 ( ) ; report . append ( STRING_0 1 ) ; if ( IDENT_16 . isEmpty ( ) ) { report . append ( STRING_0 5 ) ; } else { for ( final org . apache . rya . api . instance . IDENT_1 . IDENT_3 . IDENT_4 IDENT_17 : IDENT_16 . values ( ) ) { report . append ( STRING_11 ) . append ( IDENT_17 . getId ( ) ) . append ( STRING_2 1 ) ; final java . lang . String IDENT_18 = format ( IDENT_17 . METHOD_41 ( ) , STRING_0 7 ) ; report . append ( STRING_12 ) . append ( IDENT_18 ) . append ( STRING_2 1 ) ; final java . lang . String IDENT_19 = format ( IDENT_17 . METHOD_42 ( ) , STRING_2 4 ) ; report . append ( STRING_2 3 ) . append ( IDENT_19 ) . append ( STRING_2 1 ) ; } } if ( IDENT_12 == ( org . apache . rya . shell . IDENT_11 . IDENT_9 . IDENT_10 ) ) { report . append ( STRING_8 ) ; report . append ( STRING_0 6 ) ; final java . lang . String IDENT_20 = format ( IDENT_2 . METHOD_43 ( ) . METHOD_44 ( ) , STRING_2 4 ) ; report . append ( STRING_13 ) . append ( IDENT_20 ) . append ( STRING_2 1 ) ; report . append ( STRING_9 ) ; final java . lang . String IDENT_21 = format ( IDENT_2 . METHOD_45 ( ) . METHOD_44 ( ) , STRING_2 4 ) ; report . append ( STRING_0 2 ) . append ( IDENT_21 ) . append ( STRING_2 1 ) ; } } return report . toString ( ) ; }
org . junit . Assert . assertEquals ( expected , IDENT_8 ) 