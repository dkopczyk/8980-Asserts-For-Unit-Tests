METHOD_0 ( ) { METHOD_1 ( repository . METHOD_2 ( METHOD_3 ( METHOD_4 ( ( g ) -> { g . add ( 1 , 2 , add ( 1 ) ) ; g . add ( 1 , 3 , add ( 1 ) ) ; g . add ( 2 , 4 , add ( 1 ) ) ; g . add ( 3 , 4 , add ( 1 ) ) ; g . add ( 2 , 5 , add ( 1 ) ) ; g . add ( 3 , 5 , add ( 1 ) ) ; g . add ( 4 , 6 , add ( 1 ) ) ; g . add ( 5 , 7 , add ( 1 ) ) ; } ) ) ) ) ; java . util . Set < java . lang . Long > IDENT_0 = io . IDENT_1 . IDENT_2 . IDENT_3 . set ( INT_0 , INT_1 ) ; java . util . Set < java . lang . Long > IDENT_4 = METHOD_1 ( METHOD_5 ( repository , io . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_5 , io . IDENT_1 . IDENT_2 . IDENT_3 . set ( INT_2 , INT_3 ) , ( METHOD_3 ) -> IDENT_0 . equals ( METHOD_3 . stream ( ) . map ( io . IDENT_1 . IDENT_2 . IDENT_6 :: getId ) . collect ( METHOD_6 ( ) ) ) ) ) ; "<AssertPlaceHolder>" ; } map ( java . util . function . IDENT_7 ) { return io . IDENT_1 . util . IDENT_8 . of ( IDENT_9 . apply ( bytes ) ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_4 ) 