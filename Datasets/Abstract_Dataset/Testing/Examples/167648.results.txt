METHOD_0 ( ) { io . IDENT_0 . IDENT_1 . client . IDENT_2 . helper . IDENT_3 pool = new io . IDENT_0 . IDENT_1 . client . IDENT_2 . helper . METHOD_1 ( ) ; io . IDENT_0 . IDENT_1 . client . IDENT_2 . helper . IDENT_4 IDENT_5 = new io . IDENT_0 . IDENT_1 . client . IDENT_2 . helper . METHOD_2 ( ) ; io . IDENT_0 . IDENT_1 . client . IDENT_2 . helper . METHOD_2 IDENT_6 = new io . IDENT_0 . IDENT_1 . client . IDENT_2 . helper . METHOD_2 ( ) ; io . IDENT_0 . IDENT_1 . client . IDENT_2 . helper . METHOD_2 IDENT_7 = new io . IDENT_0 . IDENT_1 . client . IDENT_2 . helper . METHOD_2 ( ) ; io . IDENT_0 . IDENT_1 . client . IDENT_2 . IDENT_8 IDENT_9 = METHOD_3 ( METHOD_4 ( io . IDENT_0 . IDENT_1 . client . IDENT_2 . IDENT_10 . IDENT_11 , io . IDENT_0 . IDENT_1 . client . IDENT_2 . IDENT_10 . IDENT_12 , io . IDENT_0 . IDENT_1 . client . IDENT_2 . IDENT_10 . IDENT_13 ) ) . METHOD_5 ( 4 ) ; pool . put ( io . IDENT_0 . IDENT_1 . client . IDENT_2 . IDENT_10 . IDENT_11 , IDENT_5 ) ; pool . put ( io . IDENT_0 . IDENT_1 . client . IDENT_2 . IDENT_10 . IDENT_12 , IDENT_6 ) ; pool . put ( io . IDENT_0 . IDENT_1 . client . IDENT_2 . IDENT_10 . IDENT_13 , IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( io . IDENT_0 . IDENT_1 . client . IDENT_14 ) { java . util . List < io . IDENT_0 . IDENT_1 . client . IDENT_2 . IDENT_15 > IDENT_16 = list . METHOD_7 ( pool ) ; if ( ( IDENT_16 . size ( ) ) < ( IDENT_17 ) ) return null ; if ( ( IDENT_16 . size ( ) ) == 0 ) return null ; if ( ( IDENT_16 . size ( ) ) == 1 ) return IDENT_16 . get ( 0 ) ; return new io . IDENT_0 . IDENT_1 . client . IDENT_2 . IDENT_18 . METHOD_8 ( IDENT_16 ) ; }
org . junit . Assert . assertNull ( METHOD_3 . METHOD_6 ( pool ) ) 