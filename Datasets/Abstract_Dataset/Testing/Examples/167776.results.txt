METHOD_0 ( ) { com . IDENT_0 . api . service . IDENT_1 obj = new com . IDENT_0 . api . service . METHOD_1 ( ) ; obj . METHOD_2 ( STRING_0 3 ) ; obj . METHOD_3 ( null ) ; obj . METHOD_4 ( new java . util . METHOD_5 ( INT_0 , java . util . Calendar . IDENT_2 , INT_1 , 20 , 15 , INT_1 ) ) ; obj . METHOD_6 ( STRING_0 ) ; obj . METHOD_7 ( new com . IDENT_0 . api . service . METHOD_1 ( ) ) ; obj . METHOD_8 ( ) . METHOD_2 ( STRING_1 ) ; obj . METHOD_9 ( ) . add ( new com . IDENT_0 . api . service . METHOD_1 ( ) ) ; obj . METHOD_9 ( ) . add ( new com . IDENT_0 . api . service . METHOD_1 ( ) ) ; obj . METHOD_9 ( ) . get ( 0 ) . METHOD_2 ( STRING_2 ) ; obj . METHOD_9 ( ) . get ( 1 ) . METHOD_2 ( STRING_3 ) ; java . util . Map < java . lang . String , java . lang . Object > actual = METHOD_10 ( new com . google . gson . reflect . IDENT_3 < java . util . Map < java . lang . String , java . lang . Object > > ( ) { } . getType ( ) , METHOD_11 ( obj ) ) ; java . util . Map < java . lang . String , java . lang . Object > expected = new java . util . HashMap ( 6 ) ; expected . put ( STRING_4 , STRING_5 ) ; expected . put ( "bar" , STRING_0 3 ) ; expected . put ( STRING_6 , null ) ; int IDENT_4 = ( java . util . IDENT_5 . METHOD_12 ( ) . METHOD_13 ( obj . METHOD_14 ( ) . METHOD_15 ( ) ) ) / INT_2 ; java . lang . String IDENT_6 = ( IDENT_4 < 0 ? STRING_7 : STRING_8 ) + ( java . lang . String . format ( STRING_9 , java . lang . Math . METHOD_16 ( ( IDENT_4 / INT_3 ) ) , java . lang . Math . METHOD_16 ( ( IDENT_4 OP_0 INT_3 ) ) ) ) ; expected . put ( STRING_0 1 , ( STRING_0 0 + IDENT_6 ) ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_7 = new java . util . HashMap ( ) ; IDENT_7 . put ( STRING_4 , STRING_5 ) ; IDENT_7 . put ( "bar" , STRING_1 ) ; expected . put ( STRING_0 2 , IDENT_7 ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_8 = new java . util . HashMap ( ) ; IDENT_8 . put ( STRING_4 , STRING_5 ) ; IDENT_8 . put ( "bar" , STRING_2 ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_9 = new java . util . HashMap ( ) ; IDENT_9 . put ( STRING_4 , STRING_5 ) ; IDENT_9 . put ( "bar" , STRING_3 ) ; expected . put ( STRING_10 , java . util . Arrays . asList ( IDENT_8 , IDENT_9 ) ) ; "<AssertPlaceHolder>" ; } METHOD_14 ( ) { return date ; }
org . junit . Assert . assertEquals ( expected , actual ) 