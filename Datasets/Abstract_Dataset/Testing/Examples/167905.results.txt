METHOD_0 ( ) { co . IDENT_0 . IDENT_1 . mapreduce . IDENT_2 mapper = new co . IDENT_0 . IDENT_1 . mapreduce . METHOD_1 ( ) ; co . IDENT_0 . IDENT_1 . mapreduce . lib . db . IDENT_3 IDENT_4 = new co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 ( 0 , java . sql . IDENT_5 . IDENT_6 , STRING_0 ) ; co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 IDENT_7 = new co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 ( 1 , java . sql . IDENT_5 . IDENT_8 , STRING_1 0 ) ; co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 IDENT_9 = new co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 ( 1 , java . sql . IDENT_5 . IDENT_10 , STRING_2 ) ; co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 IDENT_11 = new co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 ( 1 , java . sql . IDENT_5 . IDENT_12 , STRING_3 ) ; co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 IDENT_13 = new co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 ( 1 , java . sql . IDENT_5 . IDENT_14 , STRING_4 ) ; co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 IDENT_15 = new co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 ( 1 , java . sql . IDENT_5 . IDENT_16 , STRING_5 ) ; co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 IDENT_17 = new co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 ( 1 , java . sql . IDENT_5 . IDENT_18 , STRING_6 ) ; co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 IDENT_19 = new co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 ( 1 , java . sql . IDENT_5 . IDENT_20 , STRING_7 ) ; co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 IDENT_21 = new co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 ( 1 , java . sql . IDENT_5 . IDENT_22 , STRING_8 ) ; java . util . ArrayList < co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 > IDENT_23 = new java . util . ArrayList < co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_2 > ( ) ; IDENT_23 . add ( IDENT_4 ) ; IDENT_23 . add ( IDENT_7 ) ; IDENT_23 . add ( IDENT_9 ) ; IDENT_23 . add ( IDENT_11 ) ; IDENT_23 . add ( IDENT_13 ) ; IDENT_23 . add ( IDENT_15 ) ; IDENT_23 . add ( IDENT_17 ) ; IDENT_23 . add ( IDENT_19 ) ; IDENT_23 . add ( IDENT_21 ) ; java . util . ArrayList values = new java . util . ArrayList ( ) ; values . add ( new java . lang . Integer ( 12 ) ) ; values . add ( new java . lang . String ( STRING_1 ) ) ; values . add ( new java . util . Date ( ) ) ; values . add ( new java . lang . Long ( INT_0 ) ) ; values . add ( true ) ; values . add ( FLOAT_0 ) ; values . add ( STRING_9 ) ; values . add ( new java . sql . METHOD_3 ( new java . util . Date ( ) . getTime ( ) ) ) ; values . add ( new java . sql . METHOD_3 ( new java . util . Date ( ) . getTime ( ) ) ) ; co . IDENT_0 . IDENT_1 . mapreduce . lib . db . IDENT_24 val = new co . IDENT_0 . IDENT_1 . mapreduce . lib . db . METHOD_4 ( IDENT_23 , values ) ; org . apache . hadoop . io . IDENT_25 key = new org . apache . hadoop . io . METHOD_5 ( 1 ) ; org . apache . avro . Schema IDENT_26 = co . IDENT_0 . IDENT_1 . avro . IDENT_27 . METHOD_6 ( val . METHOD_7 ( ) ) ; org . apache . avro . Schema IDENT_28 = org . apache . avro . IDENT_29 . IDENT_30 . METHOD_8 ( IDENT_26 ) ; org . apache . avro . IDENT_31 . IDENT_32 IDENT_33 = new org . apache . avro . IDENT_31 . IDENT_34 . METHOD_9 ( IDENT_28 ) ; IDENT_33 . put ( 0 , key . get ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( org . apache . avro . Schema , org . apache . hadoop . io . METHOD_5 ) { org . apache . avro . IDENT_31 . IDENT_32 IDENT_33 = new org . apache . avro . IDENT_31 . IDENT_34 . METHOD_9 ( IDENT_28 ) ; IDENT_33 . put ( 0 , key . get ( ) ) ; return IDENT_33 ; }
org . junit . Assert . assertEquals ( IDENT_33 , mapper . METHOD_10 ( IDENT_28 , key ) ) 