METHOD_0 ( ) { org . eclipse . jgit . IDENT_0 . IDENT_1 a ; org . eclipse . jgit . IDENT_0 . IDENT_1 b ; org . eclipse . jgit . IDENT_0 . IDENT_2 e ; a = new org . eclipse . jgit . IDENT_0 . METHOD_1 ( STRING_0 . getBytes ( STRING_1 ) ) ; b = new org . eclipse . jgit . IDENT_0 . METHOD_1 ( STRING_2 . getBytes ( STRING_1 ) ) ; e = new org . eclipse . jgit . IDENT_0 . METHOD_2 ( 0 , 1 , 0 , 2 ) ; e = IDENT_3 . IDENT_4 . METHOD_3 ( a , b , e ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . eclipse . jgit . IDENT_0 . METHOD_1 , org . eclipse . jgit . IDENT_0 . METHOD_1 , org . eclipse . jgit . IDENT_0 . METHOD_2 ) { if ( ( ( e . IDENT_5 ) == ( e . IDENT_6 ) ) || ( ( e . IDENT_7 ) == ( e . IDENT_8 ) ) ) return e ; byte [ ] IDENT_9 = a . content ; byte [ ] IDENT_10 = b . content ; int IDENT_11 = a . IDENT_12 . get ( ( ( e . IDENT_5 ) + 1 ) ) ; int IDENT_13 = a . IDENT_12 . get ( ( ( e . IDENT_7 ) + 1 ) ) ; int IDENT_14 = a . IDENT_12 . get ( ( ( e . IDENT_6 ) + 1 ) ) ; int IDENT_15 = b . IDENT_12 . get ( ( ( e . IDENT_8 ) + 1 ) ) ; if ( ( ( ( IDENT_11 < 0 ) || ( IDENT_13 < 0 ) ) || ( IDENT_14 > ( IDENT_9 . length ) ) ) || ( IDENT_15 > ( IDENT_10 . length ) ) ) throw new java . lang . METHOD_4 ( ) ; while ( ( ( IDENT_11 < IDENT_14 ) && ( IDENT_13 < IDENT_15 ) ) && ( ( IDENT_9 [ IDENT_11 ] ) == ( IDENT_10 [ IDENT_13 ] ) ) ) { IDENT_11 ++ ; IDENT_13 ++ ; } while ( ( ( IDENT_11 < IDENT_14 ) && ( IDENT_13 < IDENT_15 ) ) && ( ( IDENT_9 [ ( IDENT_14 - 1 ) ] ) == ( IDENT_10 [ ( IDENT_15 - 1 ) ] ) ) ) { IDENT_14 OP_0 ; IDENT_15 OP_0 ; } e . IDENT_5 = org . eclipse . jgit . IDENT_0 . IDENT_3 . METHOD_5 ( a . IDENT_12 , e . IDENT_5 , IDENT_11 ) ; e . IDENT_7 = org . eclipse . jgit . IDENT_0 . IDENT_3 . METHOD_5 ( b . IDENT_12 , e . IDENT_7 , IDENT_13 ) ; e . IDENT_6 = org . eclipse . jgit . IDENT_0 . IDENT_3 . METHOD_6 ( a . IDENT_12 , e . IDENT_6 , IDENT_14 ) ; final boolean IDENT_16 = IDENT_14 < ( a . IDENT_12 . get ( ( ( e . IDENT_6 ) + 1 ) ) ) ; if ( IDENT_16 ) IDENT_15 += ( a . IDENT_12 . get ( ( ( e . IDENT_6 ) + 1 ) ) ) - IDENT_14 ; e . IDENT_8 = org . eclipse . jgit . IDENT_0 . IDENT_3 . METHOD_6 ( b . IDENT_12 , e . IDENT_8 , IDENT_15 ) ; if ( ( ! IDENT_16 ) && ( IDENT_15 < ( b . IDENT_12 . get ( ( ( e . IDENT_8 ) + 1 ) ) ) ) ) ( e . IDENT_6 ) ++ ; return super . METHOD_3 ( a , b , e ) ; }
org . junit . Assert . assertEquals ( new org . eclipse . jgit . IDENT_0 . METHOD_2 ( 0 , 1 , 0 , 2 ) , e ) 