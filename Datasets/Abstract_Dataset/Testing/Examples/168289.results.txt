METHOD_0 ( ) { org . eclipse . jgit . IDENT_0 . IDENT_1 parent = IDENT_2 . commit ( ) . create ( ) ; org . eclipse . jgit . IDENT_0 . IDENT_1 IDENT_3 = IDENT_2 . METHOD_1 ( STRING_0 ) . commit ( ) . parent ( parent ) . add ( STRING_1 , STRING_1 ) . create ( ) ; org . eclipse . jgit . IDENT_0 . IDENT_1 IDENT_4 = IDENT_2 . METHOD_1 ( STRING_2 ) . commit ( ) . parent ( parent ) . add ( STRING_3 , STRING_3 ) . create ( ) ; org . eclipse . jgit . IDENT_5 . IDENT_6 IDENT_7 = IDENT_8 . IDENT_9 . METHOD_2 ( repo ) ; IDENT_7 . METHOD_3 ( IDENT_3 , IDENT_4 ) ; org . eclipse . jgit . junit . IDENT_10 . IDENT_11 cb = IDENT_2 . commit ( ) ; cb . parent ( IDENT_3 ) . parent ( IDENT_4 ) ; cb . METHOD_4 ( IDENT_7 . METHOD_5 ( ) ) ; org . eclipse . jgit . IDENT_0 . IDENT_1 IDENT_12 = cb . create ( ) ; org . eclipse . jgit . lib . IDENT_13 IDENT_14 = repo . METHOD_6 ( STRING_4 ) ; IDENT_14 . METHOD_7 ( IDENT_12 ) ; IDENT_14 . update ( ) ; org . eclipse . jgit . lib . IDENT_13 update = repo . METHOD_6 ( STRING_5 ) ; update . METHOD_8 ( true ) ; update . delete ( ) ; IDENT_15 . METHOD_9 ( 0 ) ; METHOD_10 ( ) ; IDENT_15 . METHOD_11 ( java . util . Collections . < org . eclipse . jgit . lib . IDENT_16 > METHOD_12 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_13 ( org . eclipse . jgit . lib . IDENT_17 ) { return ( METHOD_14 ( id ) ) != ( - 1 ) ; }
org . junit . Assert . assertTrue ( repo . METHOD_13 ( IDENT_4 ) ) 