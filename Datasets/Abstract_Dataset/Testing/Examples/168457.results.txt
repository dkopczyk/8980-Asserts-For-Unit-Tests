METHOD_0 ( ) { final int IDENT_0 = INT_0 ; final byte [ ] test = new org . eclipse . jgit . junit . METHOD_1 ( getName ( ) ) . METHOD_2 ( IDENT_0 ) ; final org . eclipse . jgit . util . IDENT_1 . IDENT_2 b = new org . eclipse . jgit . util . IDENT_1 . METHOD_3 ( ( IDENT_0 + 4 ) ) ; b . write ( test ) ; b . close ( ) ; java . io . InputStream in = b . METHOD_4 ( ) ; byte [ ] IDENT_3 = new byte [ IDENT_0 ] ; org . eclipse . jgit . util . IDENT_4 . METHOD_5 ( in , IDENT_3 , 0 , IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . io . InputStream , byte [ ] , int , int ) { while ( len > 0 ) { final int r = IDENT_5 . read ( IDENT_6 , IDENT_7 , len ) ; if ( r <= 0 ) throw new java . io . METHOD_6 ( org . eclipse . jgit . internal . IDENT_8 . get ( ) . IDENT_9 ) ; IDENT_7 += r ; len OP_0 r ; } }
org . junit . Assert . assertArrayEquals ( test , IDENT_3 ) 