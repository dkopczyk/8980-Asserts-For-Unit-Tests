METHOD_0 ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . Response ) { org . apache . IDENT_0 . IDENT_1 . IDENT_2 . response . IDENT_3 headers = new org . apache . IDENT_0 . IDENT_1 . IDENT_2 . response . METHOD_1 ( ) ; new IDENT_4 . METHOD_2 ( ) { { response . METHOD_3 ( ) ; result = new org . apache . IDENT_0 . IDENT_5 . test . IDENT_6 . exception . METHOD_4 ( STRING_0 ) ; response . METHOD_5 ( ) ; result = headers ; } } ; org . apache . IDENT_0 . IDENT_1 . IDENT_2 . response . METHOD_1 IDENT_7 = new org . apache . IDENT_0 . IDENT_1 . IDENT_2 . response . METHOD_1 ( ) ; IDENT_8 = new IDENT_4 . IDENT_9 < org . apache . IDENT_0 . IDENT_5 . vertx . http . IDENT_10 > ( ) { MOD_0 java . util . Map < java . lang . String , java . lang . Object > attributes = new java . util . HashMap ( ) ; @ IDENT_4 . IDENT_11 public void METHOD_6 ( java . lang . String key , java . lang . Object value ) { this . attributes . put ( key , value ) ; } @ IDENT_4 . IDENT_11 public java . lang . Object METHOD_7 ( java . lang . String key ) { return this . attributes . get ( key ) ; } @ IDENT_4 . IDENT_11 void METHOD_8 ( java . lang . String name , java . lang . String value ) { IDENT_7 . METHOD_8 ( name , value ) ; } } . METHOD_9 ( ) ; METHOD_10 ( ) ; try { IDENT_12 . METHOD_11 ( response ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( java . lang . IDENT_13 e ) { "<AssertPlaceHolder>" ; } } METHOD_12 ( ) { return IDENT_14 ; }
org . junit . Assert . assertNull ( IDENT_7 . METHOD_12 ( ) ) 