METHOD_0 ( ) { METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) , new org . IDENT_0 . plugins . jdbc . IDENT_1 < java . lang . IDENT_2 > ( ) { @ org . IDENT_0 . plugins . jdbc . tests . Override public org . IDENT_0 . plugins . jdbc . tests . IDENT_2 run ( java . sql . IDENT_3 connection ) { org . IDENT_0 . plugins . jdbc . IDENT_4 . IDENT_5 IDENT_6 = METHOD_1 ( ) . METHOD_5 ( ) . METHOD_6 ( connection ) ; IDENT_6 . sql ( ( STRING_0 + STRING_1 ) ) ; java . time . IDENT_7 now = java . time . IDENT_7 . now ( ) ; IDENT_6 . METHOD_7 ( STRING_2 , now ) ; IDENT_6 . insert ( ) ; IDENT_6 . sql ( ( STRING_0 + STRING_1 ) ) ; IDENT_6 . METHOD_7 ( STRING_2 , now ) ; IDENT_6 . insert ( ) ; org . IDENT_0 . plugins . jdbc . METHOD_5 . IDENT_8 IDENT_9 = METHOD_1 ( ) . METHOD_5 ( ) . METHOD_8 ( connection ) ; IDENT_9 . sql ( ( STRING_3 + ( STRING_4 + STRING_5 ) ) ) ; IDENT_9 . METHOD_9 ( "name" , STRING_6 ) ; int IDENT_10 = IDENT_9 . delete ( ) ; "<AssertPlaceHolder>" ; return null ; } } ) ; } delete ( ) { java . sql . IDENT_3 connection = METHOD_10 ( ) ; try { java . sql . IDENT_11 IDENT_12 = METHOD_11 ( connection ) ; try { int IDENT_10 = IDENT_12 . METHOD_12 ( ) ; return IDENT_10 ; } finally { close ( IDENT_12 ) ; } } catch ( java . lang . Exception ex ) { throw org . IDENT_0 . core . utils . IDENT_13 . METHOD_13 ( ex ) ; } }
org . junit . Assert . assertEquals ( 2 , IDENT_10 ) 