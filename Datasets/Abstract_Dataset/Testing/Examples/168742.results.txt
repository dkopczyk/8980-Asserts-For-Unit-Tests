METHOD_0 ( ) { int [ ] expected = new int [ ] { 0 , 1 , 4 , 5 } ; int [ ] input = new int [ ] { 2 , 3 } ; int size = ( expected . length ) + ( input . length ) ; int [ ] IDENT_0 = com . splicemachine . utils . IDENT_1 . METHOD_1 ( input , size ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( int [ ] , int , int [ ] , int [ ] ) { return ( ( ( ( ( ( ( STRING_0 + ( java . util . Arrays . toString ( input ) ) ) + STRING_1 ) + size ) + STRING_2 ) + ( java . util . Arrays . toString ( expected ) ) ) + STRING_3 ) + ( java . util . Arrays . toString ( actual ) ) ) + "\n" ; }
org . junit . Assert . assertArrayEquals ( METHOD_2 ( input , size , expected , IDENT_0 ) , expected , IDENT_0 ) 