METHOD_0 ( ) { java . lang . String source = STRING_0 ; org . apache . commons . math3 . geometry . IDENT_0 . IDENT_1 . IDENT_2 expected = new org . apache . commons . math3 . geometry . IDENT_0 . IDENT_1 . METHOD_1 ( 1 , 1 , 1 ) ; org . apache . commons . math3 . geometry . IDENT_0 . IDENT_1 . METHOD_1 actual = IDENT_3 . parse ( source ) ; "<AssertPlaceHolder>" ; } parse ( com . google . javascript . IDENT_4 . IDENT_5 ) { try { com . google . javascript . IDENT_4 . IDENT_6 . IDENT_7 . METHOD_2 ( ( STRING_1 + ( IDENT_8 . getName ( ) ) ) ) ; com . google . javascript . IDENT_4 . IDENT_9 . IDENT_10 . IDENT_11 result = com . google . javascript . IDENT_4 . IDENT_9 . IDENT_10 . parse ( IDENT_8 , IDENT_8 . getCode ( ) , compiler . METHOD_3 ( ) , compiler . METHOD_4 ( ) , com . google . javascript . IDENT_4 . IDENT_6 . IDENT_7 ) ; root = result . ast ; compiler . METHOD_5 ( IDENT_8 . getName ( ) , result . IDENT_12 ) ; } catch ( java . io . IOException e ) { compiler . report ( com . google . javascript . IDENT_4 . IDENT_13 . METHOD_6 ( IDENT_5 . IDENT_14 , IDENT_8 . getName ( ) ) ) ; } if ( ( ( root ) == null ) || ( compiler . METHOD_7 ( ) ) ) { root = com . google . javascript . IDENT_15 . IDENT_16 . script ( ) ; } else { compiler . METHOD_8 ( root ) ; } root . METHOD_9 ( IDENT_8 ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 