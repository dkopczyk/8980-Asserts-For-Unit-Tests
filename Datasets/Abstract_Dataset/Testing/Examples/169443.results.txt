METHOD_0 ( ) { org . apache . commons . math . IDENT_0 . IDENT_1 IDENT_2 = new org . apache . commons . math . IDENT_0 . METHOD_1 ( ) ; int l = 10 ; for ( int i = 0 ; i < 20 ; i ++ ) { org . apache . commons . math . IDENT_0 . IDENT_3 IDENT_4 = new org . apache . commons . math . IDENT_0 . METHOD_2 ( org . apache . commons . math . IDENT_0 . IDENT_5 . METHOD_3 ( l ) ) ; org . apache . commons . math . IDENT_0 . IDENT_6 IDENT_7 = IDENT_2 . METHOD_4 ( IDENT_4 ) ; org . apache . commons . math . IDENT_0 . METHOD_2 IDENT_8 = ( ( org . apache . commons . math . IDENT_0 . METHOD_2 ) ( IDENT_7 ) ) ; int IDENT_9 = 0 ; for ( int j = 0 ; j < ( IDENT_4 . METHOD_5 ( ) ) ; j ++ ) { if ( ( IDENT_4 . METHOD_6 ( ) . get ( j ) ) != ( IDENT_8 . METHOD_6 ( ) . get ( j ) ) ) { IDENT_9 ++ ; } } "<AssertPlaceHolder>" ; } } get ( int ) { java . lang . Object result = null ; if ( ( index >= 0 ) && ( index < ( this . size ) ) ) { result = this . IDENT_10 [ index ] ; } return result ; }
org . junit . Assert . assertEquals ( 1 , IDENT_9 ) 