METHOD_0 ( ) { java . lang . reflect . Field field = IDENT_0 . METHOD_1 ( STRING_0 ) ; org . apache . commons . lang3 . reflect . IDENT_1 . METHOD_2 ( field , IDENT_2 , STRING_1 ) ; "<AssertPlaceHolder>" ; field = IDENT_0 . METHOD_1 ( "b" ) ; try { org . apache . commons . lang3 . reflect . IDENT_1 . METHOD_2 ( field , IDENT_2 , Boolean . IDENT_3 ) ; org . junit . Assert . fail ( STRING_2 ) ; } catch ( final java . lang . IDENT_4 e ) { } field = IDENT_0 . METHOD_1 ( STRING_3 ) ; try { org . apache . commons . lang3 . reflect . IDENT_1 . METHOD_2 ( field , IDENT_2 , java . lang . Integer . valueOf ( Integer . MAX_VALUE ) ) ; } catch ( final java . lang . IDENT_4 e ) { } field = IDENT_0 . METHOD_1 ( STRING_4 ) ; try { org . apache . commons . lang3 . reflect . IDENT_1 . METHOD_2 ( field , IDENT_2 , java . lang . Double . valueOf ( Double . MAX_VALUE ) ) ; } catch ( final java . lang . IDENT_4 e ) { } } get ( int ) { return ( ( fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . executor . IDENT_10 . IDENT_11 ) ( fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . executor . IDENT_10 . IDENT_12 . IDENT_13 . get ( i ) ) ) ; }
org . junit . Assert . assertEquals ( STRING_1 , field . get ( IDENT_2 ) ) 