METHOD_0 ( ) { for ( java . util . Locale IDENT_0 : java . util . Locale . METHOD_1 ( ) ) { for ( java . util . IDENT_1 IDENT_2 : new java . util . IDENT_1 [ ] { org . apache . commons . lang3 . time . IDENT_3 . IDENT_4 , org . apache . commons . lang3 . time . IDENT_3 . IDENT_5 } ) { java . util . Calendar IDENT_6 = java . util . Calendar . getInstance ( IDENT_2 ) ; for ( int IDENT_7 : new int [ ] { INT_0 , INT_1 , INT_2 , INT_3 , 0 , - INT_1 } ) { if ( ( IDENT_7 < INT_2 ) && ( IDENT_0 . equals ( org . apache . commons . lang3 . time . IDENT_8 . IDENT_9 ) ) ) { continue ; } IDENT_6 . METHOD_2 ( ) ; if ( IDENT_7 < 0 ) { IDENT_6 . set ( ( - IDENT_7 ) , 1 , 10 ) ; IDENT_6 . set ( Calendar . IDENT_10 , IDENT_11 . IDENT_12 ) ; } else { IDENT_6 . set ( IDENT_7 , 1 , 10 ) ; } java . util . Date in = IDENT_6 . getTime ( ) ; for ( java . lang . String format : new java . lang . String [ ] { org . apache . commons . lang3 . time . IDENT_3 . IDENT_13 , org . apache . commons . lang3 . time . IDENT_3 . IDENT_14 } ) { java . text . IDENT_15 IDENT_16 = new java . text . METHOD_3 ( format , IDENT_0 ) ; if ( format . equals ( org . apache . commons . lang3 . time . IDENT_3 . IDENT_14 ) ) { if ( IDENT_7 < INT_4 ) { IDENT_16 . METHOD_4 ( IDENT_6 . getTime ( ) ) ; } } java . lang . String IDENT_17 = IDENT_16 . format ( in ) ; try { java . util . Date out = IDENT_16 . parse ( IDENT_17 ) ; "<AssertPlaceHolder>" ; } catch ( java . text . IDENT_18 IDENT_19 ) { System . out . println ( ( ( ( ( ( ( ( ( IDENT_17 + " " ) + ( IDENT_0 . toString ( ) ) ) + " " ) + IDENT_7 ) + " " ) + format ) + " " ) + ( IDENT_2 . METHOD_5 ( ) ) ) ) ; throw IDENT_19 ; } } } } } } toString ( ) { java . lang . String IDENT_20 = STRING_0 ; IDENT_20 += ( ( ( ( ( ( this . METHOD_6 ( ) ) + STRING_1 ) + ( this . original . getClass ( ) . METHOD_7 ( ) ) ) + STRING_2 ) + ( fr . IDENT_21 . IDENT_22 . util . IDENT_23 . METHOD_8 ( this . original ) ) ) + STRING_3 ) + ( fr . IDENT_21 . IDENT_22 . util . IDENT_23 . METHOD_8 ( IDENT_24 ) ) ; IDENT_20 += ( STRING_4 + ( ( this . IDENT_24 ) != null ? this . IDENT_24 . getClass ( ) . METHOD_7 ( ) : STRING_5 ) ) + STRING_6 ; return IDENT_20 ; }
org . junit . Assert . assertEquals ( ( ( ( ( ( ( ( IDENT_0 . toString ( ) ) + " " ) + IDENT_7 ) + " " ) + format ) + " " ) + ( IDENT_2 . METHOD_5 ( ) ) ) , in , out ) 