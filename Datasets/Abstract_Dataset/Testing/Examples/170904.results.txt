METHOD_0 ( ) { int [ ] IDENT_0 = new int [ ] { 0 } ; int [ ] IDENT_1 = new int [ ] { 1 } ; org . apache . commons . math . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 IDENT_6 = new org . apache . commons . math . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( new org . apache . commons . math . IDENT_2 . IDENT_3 . METHOD_2 ( IDENT_0 ) ) ; org . apache . commons . math . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 IDENT_7 = new org . apache . commons . math . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( new org . apache . commons . math . IDENT_2 . IDENT_3 . METHOD_2 ( IDENT_1 ) ) ; java . util . Collection < org . apache . commons . math . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 > IDENT_8 = new java . util . ArrayList < org . apache . commons . math . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 > ( ) ; final int IDENT_9 = 10 * 1000 ; for ( int i = 0 ; i < IDENT_9 ; ++ i ) { IDENT_8 . add ( IDENT_6 ) ; } IDENT_8 . add ( IDENT_7 ) ; final long IDENT_10 = 0 ; final int IDENT_11 = 2 ; final int IDENT_12 = 0 ; org . apache . commons . math . IDENT_2 . IDENT_3 . IDENT_13 < org . apache . commons . math . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 > IDENT_14 = new org . apache . commons . math . IDENT_2 . IDENT_3 . IDENT_13 < org . apache . commons . math . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 > ( new java . util . METHOD_3 ( IDENT_10 ) ) ; java . util . List < org . apache . commons . math . IDENT_2 . IDENT_3 . IDENT_15 < org . apache . commons . math . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 > > IDENT_16 = IDENT_14 . cluster ( IDENT_8 , IDENT_11 , IDENT_12 ) ; boolean IDENT_17 = false ; for ( org . apache . commons . math . IDENT_2 . IDENT_3 . IDENT_15 < org . apache . commons . math . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 > cluster : IDENT_16 ) { if ( cluster . METHOD_4 ( ) . equals ( IDENT_7 ) ) { IDENT_17 = true ; } } "<AssertPlaceHolder>" ; } equals ( org . apache . commons . lang3 . mutable . IDENT_18 ) { if ( obj == null ) { return false ; } T other = obj . value ; return ( ( value ) == other ) || ( ( ( value ) != null ) && ( value . equals ( other ) ) ) ; }
org . junit . Assert . assertTrue ( IDENT_17 ) 