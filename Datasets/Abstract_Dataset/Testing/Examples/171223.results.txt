METHOD_0 ( ) { fr . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new fr . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; java . lang . String IDENT_5 = ( ( ( ( new java . io . File ( STRING_0 2 ) . getAbsolutePath ( ) ) + ( java . io . File . IDENT_6 ) ) + ( new java . io . File ( STRING_1 6 ) . getAbsolutePath ( ) ) ) + ( java . io . File . IDENT_6 ) ) + ( new java . io . File ( STRING_2 0 ) . getAbsolutePath ( ) ) ; java . io . File out = new java . io . File ( fr . IDENT_0 . IDENT_7 . core . IDENT_8 . IDENT_9 . getProperty ( STRING_3 ) ) ; java . lang . String [ ] args = new java . lang . String [ ] { STRING_2 6 , IDENT_5 , STRING_2 8 , STRING_1 4 , STRING_2 1 , STRING_1 5 , STRING_2 5 , new java . io . File ( STRING_4 ) . getAbsolutePath ( ) , STRING_5 , STRING_2 9 , STRING_0 1 , STRING_0 3 , STRING_2 4 , STRING_1 7 , STRING_6 , STRING_2 , STRING_1 9 , STRING_0 5 , STRING_2 7 , STRING_1 , STRING_1 0 , STRING_1 3 , STRING_7 , out . getAbsolutePath ( ) , STRING_2 2 , STRING_1 1 , STRING_0 4 , STRING_1 8 , STRING_2 3 , STRING_0 0 , STRING_8 , STRING_1 2 , STRING_0 , STRING_9 } ; System . out . println ( java . util . Arrays . toString ( args ) ) ; IDENT_4 . execute ( args ) ; java . util . List < fr . IDENT_0 . IDENT_7 . core . entities . IDENT_10 > IDENT_11 = IDENT_4 . METHOD_2 ( ) . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } isEmpty ( ) { for ( java . lang . IDENT_12 IDENT_13 : IDENT_14 ) { if ( ( IDENT_13 . length ( ) ) > 0 ) { return false ; } } return true ; }
org . junit . Assert . assertTrue ( IDENT_11 . isEmpty ( ) ) 