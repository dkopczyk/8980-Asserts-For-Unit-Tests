METHOD_0 ( ) { com . spotify . IDENT_0 . route . IDENT_1 < java . lang . Integer > rule = com . spotify . IDENT_0 . route . IDENT_1 . METHOD_1 ( STRING_0 , STRING_1 , com . spotify . IDENT_0 . route . IDENT_2 . IDENT_3 ) ; final com . spotify . IDENT_0 . route . IDENT_4 < java . lang . Integer > IDENT_5 = com . spotify . IDENT_0 . route . IDENT_4 . of ( com . google . common . collect . ImmutableList . of ( rule ) ) ; final com . spotify . IDENT_0 . IDENT_6 message = com . spotify . IDENT_0 . IDENT_6 . METHOD_2 ( STRING_2 , STRING_1 ) ; final java . util . Collection < java . lang . String > IDENT_7 = IDENT_5 . METHOD_3 ( message ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( com . spotify . IDENT_0 . IDENT_6 ) { final java . lang . String path = getPath ( message ) ; final io . IDENT_8 . IDENT_9 . IDENT_10 . Result < com . spotify . IDENT_0 . route . IDENT_1 < T > > result = IDENT_5 . result ( ) ; IDENT_5 . route ( message . method ( ) , path , result ) ; if ( ( result . status ( ) ) == ( IDENT_10 . Status . IDENT_11 ) ) { return java . util . Collections . emptyList ( ) ; } return result . METHOD_4 ( ) ; }
org . junit . Assert . assertTrue ( IDENT_7 . isEmpty ( ) ) 