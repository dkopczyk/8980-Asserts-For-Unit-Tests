METHOD_0 ( ) { final java . util . concurrent . IDENT_0 < com . spotify . google . cloud . IDENT_1 . client . IDENT_2 . IDENT_3 > t = new java . util . concurrent . METHOD_1 ( ) ; IDENT_4 . put ( STRING_0 , t ) ; final com . spotify . google . cloud . IDENT_1 . client . Message m = com . spotify . google . cloud . IDENT_1 . client . Message . of ( "1" ) ; IDENT_5 . METHOD_2 ( STRING_0 , m ) ; final com . spotify . google . cloud . IDENT_1 . client . IDENT_2 . IDENT_3 request = t . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . util . List , java . lang . String ) { com . spotify . google . cloud . IDENT_1 . client . IDENT_6 . METHOD_4 ( IDENT_7 ) ; return METHOD_5 ( messages , IDENT_7 ) ; }
org . junit . Assert . assertThat ( request . messages . size ( ) , org . hamcrest . Matchers . is ( 1 ) ) 