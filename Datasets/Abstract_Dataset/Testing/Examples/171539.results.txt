METHOD_0 ( ) { final java . util . concurrent . IDENT_0 < java . lang . String > future = METHOD_1 ( STRING_0 ) ; final java . lang . IllegalStateException IDENT_1 = new java . lang . IllegalStateException ( ) ; final java . util . concurrent . IDENT_2 < java . lang . String > IDENT_3 = com . spotify . IDENT_4 . IDENT_5 . METHOD_2 ( IDENT_1 ) ; final java . util . concurrent . IDENT_0 < java . lang . String > IDENT_6 = com . spotify . IDENT_4 . IDENT_5 . METHOD_3 ( future , ( IDENT_7 ) -> IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( T ) { return com . spotify . IDENT_4 . IDENT_8 . METHOD_4 ( org . hamcrest . core . Is . is ( expected ) ) ; }
org . junit . Assert . assertThat ( IDENT_6 , com . spotify . IDENT_4 . IDENT_8 . METHOD_4 ( STRING_0 ) ) 