METHOD_0 ( ) { com . spotify . IDENT_0 . test . IDENT_1 IDENT_2 = com . spotify . IDENT_0 . test . IDENT_1 . METHOD_1 ( ) . METHOD_2 ( new org . apache . avro . util . METHOD_3 ( STRING_0 ) ) . METHOD_4 ( STRING_1 ) . METHOD_5 ( INT_0 ) . build ( ) ; com . spotify . IDENT_0 . test . IDENT_3 IDENT_4 = com . spotify . IDENT_0 . test . IDENT_3 . METHOD_1 ( ) . METHOD_6 ( STRING_2 ) . METHOD_7 ( IDENT_2 ) . build ( ) ; org . apache . IDENT_0 . IDENT_5 < com . spotify . IDENT_0 . test . IDENT_3 > collection = org . apache . IDENT_0 . impl . IDENT_6 . IDENT_7 . METHOD_8 ( METHOD_9 ( com . spotify . IDENT_0 . test . IDENT_3 . class ) , IDENT_4 ) ; org . apache . IDENT_0 . IDENT_5 < org . apache . IDENT_0 . IDENT_8 < java . lang . String , java . lang . String , java . lang . String > > IDENT_9 = com . spotify . IDENT_0 . lib . IDENT_10 . METHOD_10 ( collection , STRING_3 , STRING_4 , STRING_5 , METHOD_11 ( METHOD_12 ( ) , METHOD_12 ( ) , METHOD_12 ( ) ) ) ; org . apache . IDENT_0 . IDENT_8 < java . lang . String , java . lang . String , java . lang . String > actual = IDENT_9 . METHOD_13 ( ) . iterator ( ) . next ( ) ; "<AssertPlaceHolder>" ; } iterator ( ) { final com . spotify . IDENT_0 . test . IDENT_1 IDENT_2 = new com . spotify . IDENT_0 . test . METHOD_14 ( new org . apache . avro . util . METHOD_3 ( STRING_6 ) , new org . apache . avro . util . METHOD_3 ( "" ) , 1L ) ; return new com . google . common . collect . IDENT_11 < com . spotify . IDENT_0 . test . METHOD_14 > ( ) { MOD_0 int n = 0 ; @ com . spotify . IDENT_0 . lib . Override MOD_1 com . spotify . IDENT_0 . test . METHOD_14 METHOD_15 ( ) { ( n ) ++ ; if ( ( n ) > 3 ) return METHOD_16 ( ) ; IDENT_2 . METHOD_4 ( new org . apache . avro . util . METHOD_3 ( com . google . common . base . IDENT_12 . METHOD_17 ( STRING_7 , n ) ) ) ; return IDENT_2 ; } } ; }
org . junit . Assert . assertEquals ( org . apache . IDENT_0 . IDENT_8 . of ( STRING_0 , STRING_1 , STRING_2 ) , actual ) 