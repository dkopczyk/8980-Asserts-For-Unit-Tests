METHOD_0 ( ) { final org . apache . http . conn . IDENT_0 resolver = mock ( org . apache . http . conn . IDENT_0 . class ) ; when ( resolver . resolve ( STRING_0 ) ) . METHOD_1 ( new java . net . METHOD_2 ( ) ) ; when ( resolver . resolve ( STRING_1 ) ) . METHOD_1 ( new java . net . METHOD_2 ( ) ) ; final java . util . List < com . spotify . IDENT_1 . client . IDENT_2 > IDENT_3 = com . spotify . IDENT_1 . client . IDENT_4 . of ( com . spotify . IDENT_1 . client . IDENT_5 . IDENT_6 , resolver ) ; "<AssertPlaceHolder>" ; } of ( com . google . common . base . IDENT_7 , org . apache . http . conn . IDENT_0 ) { return new com . google . common . base . IDENT_7 < java . util . List < com . spotify . IDENT_1 . client . IDENT_2 > > ( ) { @ com . spotify . IDENT_1 . client . Override public java . util . List < com . spotify . IDENT_1 . client . IDENT_2 > get ( ) { return com . spotify . IDENT_1 . client . IDENT_4 . of ( IDENT_8 . get ( ) , IDENT_9 ) ; } } ; }
org . junit . Assert . assertThat ( IDENT_3 . size ( ) , org . hamcrest . CoreMatchers . equalTo ( 0 ) ) 