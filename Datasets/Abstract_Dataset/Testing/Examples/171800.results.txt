METHOD_0 ( ) { final com . spotify . logging . IDENT_0 . IDENT_1 filter = new com . spotify . logging . IDENT_0 . METHOD_1 ( ) ; filter . start ( ) ; for ( ch . IDENT_2 . IDENT_0 . IDENT_3 . IDENT_4 IDENT_5 : IDENT_6 ) { final ch . IDENT_2 . IDENT_0 . IDENT_3 . spi . IDENT_7 IDENT_8 = new ch . IDENT_2 . IDENT_0 . IDENT_3 . spi . METHOD_2 ( ) ; IDENT_8 . METHOD_3 ( IDENT_5 ) ; for ( java . lang . String logger : IDENT_9 ) { IDENT_8 . METHOD_4 ( logger ) ; "<AssertPlaceHolder>" ; } } } METHOD_5 ( ch . IDENT_2 . IDENT_0 . IDENT_3 . spi . IDENT_10 ) { if ( ! ( METHOD_6 ( ) ) ) { return ch . IDENT_2 . IDENT_0 . core . spi . IDENT_11 . IDENT_12 ; } if ( ( ( IDENT_13 ) != null ) && ( ( event . METHOD_7 ( ) . IDENT_14 ) < ( IDENT_13 . IDENT_14 ) ) ) { return ch . IDENT_2 . IDENT_0 . core . spi . IDENT_11 . IDENT_15 ; } if ( ( ( IDENT_16 ) != null ) && ( ( event . METHOD_7 ( ) . IDENT_14 ) > ( IDENT_16 . IDENT_14 ) ) ) { return ch . IDENT_2 . IDENT_0 . core . spi . IDENT_11 . IDENT_15 ; } return ch . IDENT_2 . IDENT_0 . core . spi . IDENT_11 . IDENT_12 ; }
org . junit . Assert . assertEquals ( IDENT_11 . IDENT_12 , filter . METHOD_5 ( IDENT_8 ) ) 