METHOD_0 ( ) { com . spotify . IDENT_0 . model . IDENT_1 first = new com . spotify . IDENT_0 . model . METHOD_1 ( ) ; com . spotify . IDENT_0 . model . METHOD_1 IDENT_2 = new com . spotify . IDENT_0 . model . METHOD_1 ( ) ; com . spotify . IDENT_0 . model . METHOD_1 IDENT_3 = com . spotify . IDENT_0 . model . METHOD_1 . METHOD_2 ( first , IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( com . spotify . IDENT_0 . model . METHOD_1 , com . spotify . IDENT_0 . model . METHOD_1 ) { if ( first == null ) { return IDENT_2 ; } else if ( IDENT_2 == null ) { return first ; } com . spotify . IDENT_0 . model . METHOD_1 IDENT_3 = new com . spotify . IDENT_0 . model . METHOD_1 ( ) ; if ( IDENT_2 . IDENT_4 . METHOD_3 ( ) ) { IDENT_3 . IDENT_4 = IDENT_2 . IDENT_4 ; } else { IDENT_3 . IDENT_4 = first . IDENT_4 ; } if ( IDENT_2 . IDENT_5 . METHOD_3 ( ) ) { IDENT_3 . IDENT_5 = IDENT_2 . IDENT_5 ; } else { IDENT_3 . IDENT_5 = first . IDENT_5 ; } if ( IDENT_2 . IDENT_6 . METHOD_3 ( ) ) { IDENT_3 . IDENT_6 = IDENT_2 . IDENT_6 ; } else { IDENT_3 . IDENT_6 = first . IDENT_6 ; } if ( IDENT_2 . IDENT_7 . METHOD_3 ( ) ) { IDENT_3 . IDENT_7 = IDENT_2 . IDENT_7 ; } else { IDENT_3 . IDENT_7 = first . IDENT_7 ; } if ( IDENT_2 . IDENT_8 . METHOD_3 ( ) ) { IDENT_3 . IDENT_8 = IDENT_2 . IDENT_8 ; } else { IDENT_3 . IDENT_8 = first . IDENT_8 ; } if ( IDENT_2 . IDENT_9 . METHOD_3 ( ) ) { IDENT_3 . IDENT_9 = IDENT_2 . IDENT_9 ; } else if ( first . IDENT_9 . METHOD_3 ( ) ) { IDENT_3 . IDENT_9 = first . IDENT_9 ; } if ( IDENT_2 . IDENT_10 . METHOD_3 ( ) ) { IDENT_3 . IDENT_10 = IDENT_2 . IDENT_10 ; } else { IDENT_3 . IDENT_10 = first . IDENT_10 ; } if ( IDENT_2 . IDENT_11 . METHOD_3 ( ) ) { IDENT_3 . IDENT_11 = IDENT_2 . IDENT_11 ; } else { IDENT_3 . IDENT_11 = first . IDENT_11 ; } if ( IDENT_2 . cluster . name . METHOD_3 ( ) ) { IDENT_3 . cluster . name = IDENT_2 . cluster . name ; } else { IDENT_3 . cluster . name = first . cluster . name ; } IDENT_3 . cluster . options . METHOD_4 ( first . cluster . options ) ; com . spotify . IDENT_0 . model . METHOD_1 . METHOD_5 ( IDENT_3 . cluster . options , IDENT_2 . cluster . options ) ; IDENT_3 . IDENT_12 . options . METHOD_4 ( first . IDENT_12 . options ) ; com . spotify . IDENT_0 . model . METHOD_1 . METHOD_5 ( IDENT_3 . IDENT_12 . options , IDENT_2 . IDENT_12 . options ) ; if ( IDENT_2 . IDENT_12 . IDENT_13 . METHOD_3 ( ) ) { IDENT_3 . IDENT_12 . IDENT_13 = IDENT_2 . IDENT_12 . IDENT_13 ; } else { IDENT_3 . IDENT_12 . IDENT_13 = first . IDENT_12 . IDENT_13 ; } if ( IDENT_2 . IDENT_12 . IDENT_14 . METHOD_3 ( ) ) { IDENT_3 . IDENT_12 . IDENT_14 = IDENT_2 . IDENT_12 . IDENT_14 ; } else { IDENT_3 . IDENT_12 . IDENT_14 = first . IDENT_12 . IDENT_14 ; } if ( IDENT_2 . IDENT_15 . METHOD_3 ( ) ) { IDENT_3 . IDENT_15 = IDENT_2 . IDENT_15 ; } else { IDENT_3 . IDENT_15 = first . IDENT_15 ; } if ( IDENT_2 . IDENT_16 . METHOD_3 ( ) ) { IDENT_3 . IDENT_16 = IDENT_2 . IDENT_16 ; } else { IDENT_3 . IDENT_16 = first . IDENT_16 ; } return IDENT_3 ; }
org . junit . Assert . assertNotNull ( IDENT_3 ) 