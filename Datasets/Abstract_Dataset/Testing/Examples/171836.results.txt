METHOD_0 ( ) { METHOD_1 ( IDENT_0 . IDENT_1 . IDENT_2 ) ; when ( IDENT_3 . store ( eq ( com . spotify . IDENT_4 . api . IDENT_5 . IDENT_6 ) , any ( ) ) ) . METHOD_2 ( ( a ) -> { final IDENT_7 < Optional < com . spotify . IDENT_4 . model . IDENT_8 > > IDENT_9 = a . METHOD_3 ( 1 ) ; IDENT_9 . accept ( java . util . Optional . of ( com . spotify . IDENT_4 . api . IDENT_5 . IDENT_10 ) ) ; throw new java . lang . METHOD_4 ( STRING_0 ) ; } ) ; METHOD_5 ( new com . spotify . IDENT_4 . api . METHOD_6 ( com . spotify . IDENT_11 . Response . METHOD_7 ( com . spotify . IDENT_4 . api . IDENT_12 ) ) ) . when ( IDENT_13 ) . METHOD_8 ( any ( ) , eq ( com . spotify . IDENT_4 . api . IDENT_5 . IDENT_10 ) ) ; final com . spotify . IDENT_11 . Response < IDENT_14 . IDENT_15 > response = METHOD_9 ( IDENT_16 . request ( STRING_1 , path ( STRING_2 ) , serialize ( com . spotify . IDENT_4 . api . IDENT_5 . IDENT_17 ) ) ) ; verify ( IDENT_3 ) . store ( eq ( com . spotify . IDENT_4 . api . IDENT_5 . IDENT_6 ) , any ( ) ) ; "<AssertPlaceHolder>" ; } status ( ) { return status ; }
org . junit . Assert . assertThat ( response . status ( ) . code ( ) , org . hamcrest . Matchers . is ( com . spotify . IDENT_4 . api . IDENT_12 . code ( ) ) ) 