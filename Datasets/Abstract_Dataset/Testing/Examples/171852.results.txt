METHOD_0 ( ) { java . lang . String json = ( ( STRING_0 + STRING_1 ) + ( METHOD_1 ( STRING_2 , STRING_3 , java . util . Optional . empty ( ) ) ) ) + STRING_4 ; com . spotify . IDENT_0 . model . data . IDENT_1 IDENT_2 = com . spotify . IDENT_0 . model . data . IDENT_3 . METHOD_2 ( json , com . spotify . IDENT_0 . model . data . IDENT_1 . class ) ; com . spotify . IDENT_0 . model . data . IDENT_1 expected = com . spotify . IDENT_0 . model . data . IDENT_1 . create ( java . util . Optional . empty ( ) , java . util . Optional . empty ( ) , java . util . Optional . empty ( ) , java . util . Arrays . asList ( com . spotify . IDENT_0 . model . data . IDENT_4 . create ( java . time . IDENT_5 . parse ( STRING_5 ) , STRING_3 , java . util . Optional . empty ( ) ) ) ) ; "<AssertPlaceHolder>" ; } is ( com . spotify . IDENT_0 . api . IDENT_6 ) { return new org . hamcrest . IDENT_7 < com . spotify . IDENT_0 . api . IDENT_8 . IDENT_9 > ( ) { @ com . spotify . IDENT_0 . api . Override MOD_0 boolean METHOD_3 ( com . spotify . IDENT_0 . api . IDENT_8 . IDENT_9 item ) { return ( item . METHOD_4 ( ) ) == ( version . METHOD_4 ( ) ) ; } @ com . spotify . IDENT_0 . api . Override public void METHOD_5 ( org . hamcrest . IDENT_10 description ) { description . METHOD_6 ( STRING_6 ) ; description . METHOD_7 ( version ) ; } } ; }
org . junit . Assert . assertThat ( IDENT_2 , org . hamcrest . Matchers . is ( expected ) ) 