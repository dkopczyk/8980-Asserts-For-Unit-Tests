METHOD_0 ( ) { final com . spotify . IDENT_0 . model . IDENT_1 IDENT_2 = com . spotify . IDENT_0 . IDENT_3 . METHOD_1 ( com . spotify . IDENT_0 . IDENT_3 . IDENT_4 ) ; METHOD_2 ( IDENT_2 ) ; IDENT_5 . put ( com . spotify . IDENT_0 . IDENT_3 . IDENT_6 . id ( ) , com . spotify . IDENT_0 . IDENT_3 . IDENT_6 ) ; final java . util . concurrent . IDENT_7 < java . util . concurrent . IDENT_8 < java . lang . IDENT_9 > > IDENT_10 = new java . util . concurrent . METHOD_3 ( ) ; METHOD_4 ( ( a ) -> { IDENT_8 < java . lang . IDENT_9 > IDENT_11 = new com . spotify . IDENT_0 . IDENT_8 < > ( ) ; com . spotify . IDENT_0 . model . IDENT_1 IDENT_12 = a . METHOD_5 ( 0 ) ; java . time . IDENT_13 IDENT_14 = a . METHOD_5 ( 2 ) ; final java . lang . String parameter = METHOD_6 ( IDENT_12 . configuration ( ) . METHOD_7 ( ) , IDENT_14 ) ; final com . spotify . IDENT_0 . model . IDENT_15 IDENT_16 = com . spotify . IDENT_0 . model . IDENT_15 . create ( IDENT_12 . id ( ) , parameter ) ; com . spotify . IDENT_0 . state . IDENT_17 IDENT_18 = com . spotify . IDENT_0 . state . IDENT_17 . METHOD_8 ( IDENT_16 ) ; IDENT_19 . put ( IDENT_16 , IDENT_18 ) ; IDENT_10 . add ( IDENT_11 ) ; return IDENT_11 . join ( ) ; } ) . when ( IDENT_20 ) . event ( any ( ) , any ( ) , any ( ) , any ( ) ) ; executor . execute ( IDENT_21 :: IDENT_22 ) ; final java . util . List < java . time . IDENT_13 > IDENT_23 = METHOD_9 ( com . spotify . IDENT_0 . IDENT_3 . IDENT_6 . start ( ) , com . spotify . IDENT_0 . IDENT_3 . IDENT_6 . end ( ) , IDENT_2 . configuration ( ) . METHOD_7 ( ) ) ; for ( int i = 0 ; i < ( com . spotify . IDENT_0 . IDENT_3 . IDENT_6 . METHOD_10 ( ) ) ; i ++ ) { final java . time . IDENT_13 IDENT_14 = IDENT_23 . get ( i ) ; final java . util . concurrent . IDENT_8 < java . lang . IDENT_9 > IDENT_24 = IDENT_10 . METHOD_11 ( 1 , TimeUnit . IDENT_25 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_20 , METHOD_12 ( INT_0 ) ) . event ( any ( ) , any ( ) , eq ( IDENT_14 ) , any ( ) ) ; IDENT_24 . METHOD_13 ( null ) ; verify ( transaction , METHOD_12 ( INT_0 ) ) . store ( com . spotify . IDENT_0 . IDENT_3 . IDENT_6 . builder ( ) . METHOD_14 ( IDENT_23 . get ( ( i + 1 ) ) ) . build ( ) ) ; } } is ( com . spotify . IDENT_0 . api . IDENT_26 ) { return new org . hamcrest . IDENT_27 < com . spotify . IDENT_0 . api . IDENT_28 . IDENT_29 > ( ) { @ com . spotify . IDENT_0 . api . Override MOD_0 boolean METHOD_15 ( com . spotify . IDENT_0 . api . IDENT_28 . IDENT_29 item ) { return ( item . METHOD_16 ( ) ) == ( version . METHOD_16 ( ) ) ; } @ com . spotify . IDENT_0 . api . Override public void METHOD_17 ( org . hamcrest . IDENT_30 description ) { description . METHOD_18 ( STRING_0 ) ; description . METHOD_19 ( version ) ; } } ; }
org . junit . Assert . assertThat ( IDENT_10 . isEmpty ( ) , org . hamcrest . CoreMatchers . is ( true ) ) 