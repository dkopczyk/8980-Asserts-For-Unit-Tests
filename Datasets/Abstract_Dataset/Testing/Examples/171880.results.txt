METHOD_0 ( ) { storage . METHOD_1 ( com . spotify . IDENT_0 . storage . IDENT_1 , com . spotify . IDENT_0 . storage . IDENT_2 . IDENT_3 ) ; final com . spotify . IDENT_0 . state . IDENT_4 read = storage . METHOD_2 ( com . spotify . IDENT_0 . storage . IDENT_1 . METHOD_3 ( ) . METHOD_4 ( ) ) . get ( com . spotify . IDENT_0 . storage . IDENT_1 ) ; "<AssertPlaceHolder>" ; } is ( com . spotify . IDENT_0 . api . IDENT_5 ) { return new org . hamcrest . IDENT_6 < com . spotify . IDENT_0 . api . IDENT_7 . IDENT_8 > ( ) { @ com . spotify . IDENT_0 . api . Override MOD_0 boolean METHOD_5 ( com . spotify . IDENT_0 . api . IDENT_7 . IDENT_8 item ) { return ( item . METHOD_6 ( ) ) == ( version . METHOD_6 ( ) ) ; } @ com . spotify . IDENT_0 . api . Override public void METHOD_7 ( org . hamcrest . IDENT_9 description ) { description . METHOD_8 ( STRING_0 ) ; description . METHOD_9 ( version ) ; } } ; }
org . junit . Assert . assertThat ( read , org . hamcrest . Matchers . is ( com . spotify . IDENT_0 . storage . IDENT_2 . IDENT_3 ) ) 