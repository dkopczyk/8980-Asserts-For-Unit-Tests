METHOD_0 ( java . lang . String , boolean ) { final com . spotify . IDENT_0 . model . IDENT_1 builder = com . spotify . IDENT_0 . model . IDENT_2 . METHOD_1 ( ) . id ( STRING_0 ) . start ( java . time . IDENT_3 . parse ( STRING_1 ) ) . end ( java . time . IDENT_3 . parse ( STRING_2 ) ) . METHOD_2 ( com . spotify . IDENT_0 . model . IDENT_4 . create ( STRING_3 , STRING_4 ) ) . METHOD_3 ( 2 ) . METHOD_4 ( java . time . IDENT_3 . parse ( STRING_1 ) ) . METHOD_5 ( com . spotify . IDENT_0 . storage . IDENT_5 ) ; if ( ! ( IDENT_6 . trim ( ) . equals ( STRING_5 ) ) ) { builder . METHOD_6 ( java . lang . Boolean . METHOD_7 ( METHOD_6 ) ) ; } if ( IDENT_7 ) { builder . METHOD_8 ( com . spotify . IDENT_0 . model . IDENT_8 . builder ( ) . METHOD_9 ( STRING_6 , "foo" , STRING_7 , "bar" ) . build ( ) ) ; } final com . spotify . IDENT_0 . model . IDENT_2 IDENT_9 = builder . build ( ) ; storage . METHOD_10 ( IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_11 ( java . lang . String ) { final com . google . cloud . datastore . Entity entity = datastore . get ( datastore . METHOD_12 ( ) . METHOD_13 ( com . spotify . IDENT_0 . storage . IDENT_10 . IDENT_11 ) . METHOD_14 ( id ) ) ; if ( entity == null ) { return java . util . Optional . empty ( ) ; } return java . util . Optional . of ( com . spotify . IDENT_0 . storage . IDENT_10 . METHOD_15 ( entity ) ) ; }
org . junit . Assert . assertThat ( storage . METHOD_11 ( IDENT_9 . id ( ) ) , org . hamcrest . Matchers . equalTo ( java . util . Optional . of ( IDENT_9 ) ) ) 