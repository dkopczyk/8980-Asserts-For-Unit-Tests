METHOD_0 ( ) { com . spotify . IDENT_0 . state . IDENT_1 IDENT_2 = com . spotify . IDENT_0 . state . IDENT_1 . create ( com . spotify . IDENT_0 . storage . IDENT_3 . IDENT_4 , IDENT_1 . IDENT_5 . IDENT_6 , com . spotify . IDENT_0 . state . IDENT_7 . METHOD_1 ( ) , com . spotify . IDENT_0 . storage . IDENT_3 . IDENT_8 , INT_0 ) ; com . spotify . IDENT_0 . storage . IDENT_9 tx = new com . spotify . IDENT_0 . storage . METHOD_2 ( com . spotify . IDENT_0 . storage . IDENT_10 . datastore . METHOD_3 ( ) ) ; tx . METHOD_4 ( com . spotify . IDENT_0 . storage . IDENT_3 . IDENT_4 , IDENT_2 ) ; tx . commit ( ) ; tx = new com . spotify . IDENT_0 . storage . METHOD_2 ( com . spotify . IDENT_0 . storage . IDENT_10 . datastore . METHOD_3 ( ) ) ; com . spotify . IDENT_0 . state . IDENT_1 IDENT_11 = com . spotify . IDENT_0 . state . IDENT_1 . create ( com . spotify . IDENT_0 . storage . IDENT_3 . IDENT_4 , IDENT_1 . IDENT_5 . IDENT_6 , com . spotify . IDENT_0 . state . IDENT_7 . METHOD_1 ( ) , com . spotify . IDENT_0 . storage . IDENT_3 . IDENT_8 , INT_1 ) ; tx . METHOD_5 ( com . spotify . IDENT_0 . storage . IDENT_3 . IDENT_4 , IDENT_11 ) ; tx . commit ( ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( com . spotify . IDENT_0 . model . IDENT_12 ) { final com . google . cloud . datastore . Entity entity = datastore . get ( METHOD_7 ( instance ) ) ; if ( entity == null ) { return java . util . Optional . empty ( ) ; } else { return java . util . Optional . of ( com . spotify . IDENT_0 . storage . IDENT_13 . METHOD_8 ( entity , instance ) ) ; } }
org . junit . Assert . assertThat ( storage . METHOD_6 ( com . spotify . IDENT_0 . storage . IDENT_3 . IDENT_4 ) , org . hamcrest . Matchers . is ( java . util . Optional . of ( IDENT_11 ) ) ) 