METHOD_0 ( ) { com . spotify . IDENT_0 . storage . IDENT_1 tx = new com . spotify . IDENT_0 . storage . METHOD_1 ( com . spotify . IDENT_0 . storage . IDENT_2 . datastore . METHOD_2 ( ) ) ; final com . spotify . IDENT_0 . model . IDENT_3 IDENT_4 = com . spotify . IDENT_0 . model . IDENT_3 . METHOD_3 ( ) . id ( STRING_0 ) . start ( java . time . IDENT_5 . parse ( STRING_1 ) ) . end ( java . time . IDENT_5 . parse ( STRING_2 ) ) . METHOD_4 ( com . spotify . IDENT_0 . model . IDENT_6 . create ( STRING_3 , STRING_4 ) ) . METHOD_5 ( 2 ) . description ( STRING_5 ) . METHOD_6 ( java . time . IDENT_5 . parse ( STRING_1 ) ) . METHOD_7 ( com . spotify . IDENT_0 . storage . IDENT_7 ) . build ( ) ; tx . store ( IDENT_4 ) ; tx . commit ( ) ; com . spotify . IDENT_0 . storage . METHOD_1 IDENT_8 = new com . spotify . IDENT_0 . storage . METHOD_1 ( com . spotify . IDENT_0 . storage . IDENT_2 . datastore . METHOD_2 ( ) ) ; "<AssertPlaceHolder>" ; IDENT_8 . commit ( ) ; } METHOD_8 ( java . lang . String ) { return java . util . Optional . METHOD_9 ( IDENT_9 . get ( id ) ) ; }
org . junit . Assert . assertThat ( IDENT_8 . METHOD_8 ( METHOD_8 . id ( ) ) , org . hamcrest . Matchers . is ( java . util . Optional . of ( METHOD_8 ) ) ) 