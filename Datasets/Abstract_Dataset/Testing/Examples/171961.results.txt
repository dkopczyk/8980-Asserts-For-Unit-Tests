METHOD_0 ( ) { org . IDENT_0 . api . IDENT_1 . IDENT_2 . IDENT_3 builder = new org . IDENT_0 . api . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; builder . METHOD_2 ( STRING_0 , IDENT_4 . IDENT_5 ) . METHOD_2 ( STRING_1 , IDENT_4 . IDENT_6 ) ; builder . METHOD_3 ( STRING_2 ) . METHOD_3 ( STRING_3 ) ; builder . METHOD_4 ( IDENT_4 . IDENT_5 , 1 ) ; org . IDENT_0 . api . IDENT_1 . IDENT_2 . IDENT_7 IDENT_2 = builder . METHOD_5 ( ) ; java . util . List < java . util . List < org . IDENT_0 . api . IDENT_8 . IDENT_9 > > IDENT_10 = new java . util . ArrayList ( ) ; IDENT_10 . add ( new java . util . ArrayList < org . IDENT_0 . api . IDENT_8 . IDENT_9 > ( java . util . Arrays . asList ( IDENT_4 . IDENT_6 , IDENT_4 . IDENT_6 ) ) ) ; IDENT_10 . add ( new java . util . ArrayList < org . IDENT_0 . api . IDENT_8 . IDENT_9 > ( java . util . Arrays . asList ( IDENT_4 . IDENT_5 , IDENT_4 . IDENT_5 ) ) ) ; org . IDENT_0 . api . IDENT_1 . IDENT_2 . IDENT_11 tree = new org . IDENT_0 . api . IDENT_1 . IDENT_2 . METHOD_6 ( ) ; tree . METHOD_7 ( IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( org . IDENT_0 . api . plugin . IDENT_12 , java . util . List ) { java . util . Set < org . IDENT_0 . api . IDENT_8 . IDENT_9 > set = new java . util . HashSet ( ) ; java . util . List < java . util . List < org . IDENT_0 . api . IDENT_8 . IDENT_9 > > IDENT_13 = new java . util . ArrayList ( ) ; for ( java . util . List < org . IDENT_0 . api . IDENT_8 . IDENT_9 > row : IDENT_14 ) { java . util . List < org . IDENT_0 . api . IDENT_8 . IDENT_9 > IDENT_15 = new java . util . ArrayList ( ) ; for ( org . IDENT_0 . api . IDENT_8 . IDENT_9 m : row ) { IDENT_15 . add ( m ) ; if ( m != null ) { set . add ( m ) ; } } IDENT_13 . add ( IDENT_15 ) ; } org . IDENT_0 . api . IDENT_1 . IDENT_2 . IDENT_7 IDENT_2 = null ; if ( ( IDENT_16 . containsKey ( plugin ) ) && ( IDENT_16 . get ( plugin ) . containsKey ( set . size ( ) ) ) ) { IDENT_2 = IDENT_16 . get ( plugin ) . get ( set . size ( ) ) . METHOD_8 ( IDENT_14 , true ) ; if ( IDENT_2 == null ) { IDENT_2 = IDENT_16 . get ( plugin ) . get ( set . size ( ) ) . METHOD_8 ( IDENT_13 , false ) ; } } if ( IDENT_2 == null ) { IDENT_2 = METHOD_8 ( IDENT_14 ) ; } return IDENT_2 ; }
org . junit . Assert . assertSame ( IDENT_2 , tree . METHOD_8 ( IDENT_10 , true ) ) 