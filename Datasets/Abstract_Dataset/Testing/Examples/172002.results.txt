METHOD_0 ( ) { boolean IDENT_0 = false ; try { new org . springframework . cloud . IDENT_1 . core . IDENT_2 . METHOD_1 ( "test" , STRING_0 ) . parse ( ) ; } catch ( java . lang . Exception e ) { IDENT_0 = true ; } "<AssertPlaceHolder>" ; } parse ( ) { java . util . List < org . springframework . cloud . IDENT_1 . core . IDENT_2 . IDENT_3 > IDENT_4 = METHOD_2 ( ) ; if ( ( ( IDENT_5 ) != null ) && ( ! ( METHOD_3 ( IDENT_5 ) ) ) ) { throw new org . springframework . cloud . IDENT_1 . core . IDENT_2 . METHOD_4 ( IDENT_5 , 0 , IDENT_6 . IDENT_7 , IDENT_5 ) ; } org . springframework . cloud . IDENT_1 . core . IDENT_2 . IDENT_8 IDENT_9 = new org . springframework . cloud . IDENT_1 . core . IDENT_2 . METHOD_5 ( IDENT_5 , IDENT_10 , IDENT_4 , IDENT_11 ) ; if ( METHOD_6 ( ) . hasNext ( ) ) { METHOD_6 ( ) . METHOD_7 ( METHOD_6 ( ) . METHOD_8 ( ) . IDENT_12 , IDENT_6 . IDENT_13 , toString ( METHOD_6 ( ) . next ( ) ) ) ; } if ( validate ) { org . springframework . cloud . IDENT_1 . core . IDENT_2 . IDENT_14 validator = new org . springframework . cloud . IDENT_1 . core . IDENT_2 . METHOD_9 ( ) ; IDENT_9 . accept ( validator ) ; java . util . List < org . springframework . cloud . IDENT_1 . core . IDENT_2 . IDENT_15 > IDENT_16 = validator . METHOD_10 ( ) ; if ( ! ( IDENT_16 . isEmpty ( ) ) ) { throw new org . springframework . cloud . IDENT_1 . core . IDENT_2 . METHOD_11 ( IDENT_9 , IDENT_16 ) ; } } return IDENT_9 ; }
org . junit . Assert . assertTrue ( IDENT_0 ) 