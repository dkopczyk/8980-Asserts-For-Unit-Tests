METHOD_0 ( ) { java . util . Collection < org . springframework . cloud . IDENT_0 . rest . resource . IDENT_1 > data = new java . util . ArrayList ( ) ; data . add ( IDENT_2 ) ; data . add ( IDENT_3 ) ; data . add ( IDENT_4 ) ; org . springframework . IDENT_5 . IDENT_6 . IDENT_7 metadata = new org . springframework . IDENT_5 . IDENT_6 . METHOD_1 ( data . size ( ) , 1 , data . size ( ) , 1 ) ; org . springframework . IDENT_5 . IDENT_6 < org . springframework . cloud . IDENT_0 . rest . resource . IDENT_1 > result = new org . springframework . IDENT_5 . METHOD_2 ( data , metadata ) ; when ( IDENT_8 . status ( ) ) . thenReturn ( result ) ; java . lang . Object [ ] [ ] expected = new java . lang . String [ ] [ ] { new java . lang . String [ ] { "1" , STRING_0 , "2" } , new java . lang . String [ ] { "2" , STRING_1 , STRING_2 } , new java . lang . String [ ] { STRING_3 , STRING_4 , STRING_2 } } ; org . springframework . shell . table . IDENT_9 model = IDENT_10 . list ( true , null ) . METHOD_3 ( ) ; for ( int row = 0 ; row < ( expected . length ) ; row ++ ) { for ( int IDENT_11 = 0 ; IDENT_11 < ( expected [ row ] . length ) ; IDENT_11 ++ ) { "<AssertPlaceHolder>" ; } } } getValue ( int , int ) { java . lang . String key = keys . get ( column ) ; if ( row == 0 ) { return key ; } int IDENT_12 = row - 1 ; if ( ( IDENT_13 . get ( key ) . size ( ) ) > IDENT_12 ) { return IDENT_13 . get ( key ) . get ( IDENT_12 ) ; } else { return null ; } }
org . junit . Assert . assertThat ( java . lang . String . valueOf ( model . getValue ( ( row + 1 ) , IDENT_11 ) ) , org . hamcrest . Matchers . is ( expected [ row ] [ IDENT_11 ] ) ) 