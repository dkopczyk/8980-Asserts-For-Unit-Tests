METHOD_0 ( ) { com . google . cloud . IDENT_0 . IDENT_1 IDENT_2 = org . mockito . Mockito . mock ( com . google . cloud . IDENT_0 . IDENT_1 . class ) ; org . mockito . Mockito . when ( IDENT_2 . METHOD_1 ( ) ) . thenReturn ( IDENT_3 . IDENT_4 ) ; org . springframework . cloud . IDENT_5 . data . IDENT_0 . core . IDENT_6 . IDENT_7 tx = org . mockito . Mockito . mock ( IDENT_6 . IDENT_7 . class ) ; org . springframework . test . util . IDENT_8 . METHOD_2 ( tx , STRING_0 , IDENT_2 ) ; org . springframework . cloud . IDENT_5 . data . IDENT_0 . core . IDENT_6 manager = new org . springframework . cloud . IDENT_5 . data . IDENT_0 . core . METHOD_3 ( ( ) -> this . IDENT_9 ) { @ org . springframework . cloud . IDENT_5 . data . IDENT_0 . core . Override MOD_0 org . springframework . cloud . IDENT_5 . data . IDENT_0 . core . IDENT_7 METHOD_4 ( ) { return tx ; } } ; "<AssertPlaceHolder>" ; org . mockito . Mockito . verify ( this . IDENT_9 , METHOD_5 ( ) ) . METHOD_6 ( ) ; } METHOD_7 ( ) { org . springframework . cloud . IDENT_5 . data . datastore . core . IDENT_10 . IDENT_7 tx = METHOD_4 ( ) ; if ( ( ( tx != null ) && ( ( tx . transaction ) != null ) ) && ( tx . transaction . METHOD_8 ( ) ) ) { return tx ; } tx = new org . springframework . cloud . IDENT_5 . data . datastore . core . IDENT_10 . METHOD_9 ( ) ; return tx ; }
org . junit . Assert . assertEquals ( manager . METHOD_7 ( ) , tx ) 