METHOD_0 ( ) { java . lang . Throwable error = new java . lang . METHOD_1 ( STRING_0 ) ; org . apache . IDENT_0 . IDENT_1 . IDENT_2 . Response response = org . apache . IDENT_0 . IDENT_1 . IDENT_2 . Response . METHOD_2 ( error ) ; org . apache . IDENT_0 . provider . IDENT_3 . reference . IDENT_4 . IDENT_5 client = new org . apache . IDENT_0 . provider . IDENT_3 . reference . IDENT_4 . METHOD_3 ( java . net . URI . create ( ( ( STRING_1 + ( org . apache . IDENT_0 . provider . IDENT_3 . reference . IDENT_4 . IDENT_6 . IDENT_7 . class . METHOD_4 ( ) ) ) + STRING_2 ) ) , org . springframework . http . IDENT_8 . IDENT_9 ) { @ org . apache . IDENT_0 . provider . IDENT_3 . reference . IDENT_4 . Override MOD_0 java . util . concurrent . IDENT_10 < org . springframework . http . client . IDENT_11 > METHOD_5 ( org . apache . IDENT_0 . core . IDENT_12 IDENT_2 ) { java . util . concurrent . IDENT_10 < org . springframework . http . client . IDENT_11 > IDENT_13 = new java . util . concurrent . METHOD_6 ( ) ; IDENT_13 . METHOD_7 ( new org . apache . IDENT_0 . provider . IDENT_3 . reference . METHOD_8 ( response ) ) ; return IDENT_13 ; } } ; org . springframework . util . concurrent . IDENT_14 < org . springframework . http . client . IDENT_11 > future = client . METHOD_9 ( ) ; future . METHOD_10 ( new org . springframework . util . concurrent . IDENT_15 < org . springframework . http . client . IDENT_11 > ( ) { @ org . apache . IDENT_0 . provider . IDENT_3 . reference . IDENT_4 . Override public void METHOD_11 ( java . lang . Throwable ex ) { "<AssertPlaceHolder>" ; } @ org . apache . IDENT_0 . provider . IDENT_3 . reference . IDENT_4 . Override public void METHOD_12 ( org . springframework . http . client . IDENT_11 result ) { } } ) ; } METHOD_11 ( java . lang . Throwable ) { org . junit . Assert . assertSame ( error , ex ) ; }
org . junit . Assert . assertSame ( error , ex ) 