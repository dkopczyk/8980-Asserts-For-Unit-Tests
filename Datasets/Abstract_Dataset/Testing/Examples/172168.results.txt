METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( STRING_0 , STRING_1 ) ) . thenReturn ( 2 ) ; java . util . ArrayList < org . springframework . batch . core . IDENT_1 > results = new java . util . ArrayList < org . springframework . batch . core . IDENT_1 > ( ) ; when ( IDENT_0 . METHOD_2 ( STRING_0 , STRING_1 , 0 , 20 ) ) . thenReturn ( results ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , java . lang . String , int , int ) { if ( ( IDENT_0 . METHOD_1 ( IDENT_2 , IDENT_3 ) ) == 0 ) { throw new org . springframework . batch . core . IDENT_4 . METHOD_4 ( ( STRING_2 + IDENT_3 ) ) ; } return IDENT_0 . METHOD_2 ( IDENT_2 , IDENT_3 , start , count ) ; }
org . junit . Assert . assertSame ( results , service . METHOD_3 ( STRING_0 , STRING_1 , 0 , 20 ) ) 