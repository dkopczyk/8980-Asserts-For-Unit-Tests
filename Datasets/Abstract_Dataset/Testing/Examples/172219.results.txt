METHOD_0 ( ) { org . springframework . data . couchbase . repository . IDENT_0 IDENT_1 = new org . springframework . data . couchbase . repository . METHOD_1 ( org . springframework . data . couchbase . repository . IDENT_2 . IDENT_3 , STRING_0 , null , new java . util . Date ( ) , INT_0 , new org . springframework . data . IDENT_4 . METHOD_2 ( INT_1 , INT_1 ) ) ; IDENT_5 . save ( IDENT_1 ) ; long IDENT_6 = IDENT_5 . count ( ) ; long IDENT_7 = IDENT_5 . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } count ( ) { final org . springframework . data . couchbase . repository . support . IDENT_8 < T , IDENT_9 > . IDENT_10 IDENT_11 = METHOD_4 ( ) ; com . couchbase . client . java . view . IDENT_12 query = com . couchbase . client . java . view . IDENT_12 . from ( IDENT_11 . METHOD_5 ( ) , IDENT_11 . METHOD_6 ( ) ) ; query . METHOD_7 ( true ) ; query . METHOD_8 ( METHOD_9 ( ) . METHOD_10 ( ) . METHOD_11 ( ) ) ; com . couchbase . client . java . view . IDENT_13 response = IDENT_14 . METHOD_12 ( query ) ; long count = 0 ; for ( com . couchbase . client . java . view . IDENT_15 row : response ) { count += java . lang . Long . METHOD_13 ( java . lang . String . valueOf ( row . value ( ) ) ) ; } return count ; }
org . junit . Assert . assertEquals ( ( IDENT_6 - 1 ) , IDENT_7 ) 