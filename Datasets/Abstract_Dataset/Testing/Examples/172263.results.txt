METHOD_0 ( ) { java . lang . Class entity = org . springframework . data . elasticsearch . entities . IDENT_0 . class ; IDENT_1 . METHOD_1 ( entity ) ; IDENT_1 . METHOD_2 ( entity ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . Class ) { if ( clazz . METHOD_4 ( org . springframework . data . elasticsearch . IDENT_2 . IDENT_3 . class ) ) { java . lang . String IDENT_4 = clazz . METHOD_5 ( org . springframework . data . elasticsearch . IDENT_2 . IDENT_3 . class ) . METHOD_6 ( ) ; if ( ! ( org . springframework . util . StringUtils . isEmpty ( METHOD_6 ) ) ) { java . lang . String IDENT_5 = org . springframework . data . elasticsearch . core . IDENT_6 . METHOD_7 ( METHOD_6 ) ; if ( ! ( org . springframework . util . StringUtils . isEmpty ( IDENT_5 ) ) ) { return METHOD_3 ( clazz , IDENT_5 ) ; } } else { org . springframework . data . elasticsearch . core . IDENT_6 . LOGGER . info ( STRING_0 ) ; } } org . springframework . data . elasticsearch . core . mapping . IDENT_7 < T > IDENT_8 = METHOD_8 ( clazz ) ; org . elasticsearch . common . IDENT_9 . IDENT_10 IDENT_11 = null ; try { org . springframework . data . elasticsearch . core . mapping . IDENT_12 property = IDENT_8 . METHOD_9 ( ) ; IDENT_11 = METHOD_10 ( clazz , IDENT_8 . METHOD_11 ( ) , property . METHOD_12 ( ) , IDENT_8 . METHOD_13 ( ) ) ; } catch ( java . lang . Exception e ) { throw new org . springframework . data . elasticsearch . METHOD_14 ( ( STRING_1 + ( clazz . METHOD_15 ( ) ) ) , e ) ; } return METHOD_3 ( clazz , IDENT_11 ) ; }
org . junit . Assert . assertThat ( IDENT_1 . METHOD_3 ( entity ) , is ( true ) ) 