METHOD_0 ( ) { org . apache . IDENT_0 . cache . client . IDENT_1 IDENT_2 = mock ( org . apache . IDENT_0 . cache . client . IDENT_1 . class ) ; org . apache . IDENT_0 . IDENT_3 . IDENT_4 IDENT_5 = mock ( org . apache . IDENT_0 . IDENT_3 . IDENT_4 . class ) ; java . util . Properties IDENT_6 = new java . util . Properties ( ) ; IDENT_6 . setProperty ( IDENT_7 . IDENT_8 , STRING_0 ) ; when ( IDENT_2 . METHOD_1 ( ) ) . thenReturn ( IDENT_5 ) ; when ( IDENT_5 . METHOD_2 ( ) ) . thenReturn ( true ) ; when ( IDENT_5 . METHOD_3 ( ) ) . thenReturn ( IDENT_6 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_2 , times ( 1 ) ) . METHOD_1 ( ) ; verify ( IDENT_5 , times ( 1 ) ) . METHOD_2 ( ) ; verify ( IDENT_5 , times ( 1 ) ) . METHOD_3 ( ) ; } METHOD_4 ( org . apache . IDENT_0 . cache . client . IDENT_1 ) { return java . util . Optional . METHOD_5 ( IDENT_9 ) . < org . apache . IDENT_0 . IDENT_3 . IDENT_4 > map ( org . springframework . data . IDENT_10 . util . IDENT_11 :: METHOD_1 ) . filter ( IDENT_4 :: METHOD_2 ) . map ( IDENT_4 :: METHOD_3 ) . map ( ( properties ) -> properties . getProperty ( org . springframework . data . IDENT_10 . util . IDENT_8 , null ) ) . filter ( StringUtils :: IDENT_12 ) . METHOD_6 ( ) ; }
org . junit . Assert . assertThat ( org . springframework . data . IDENT_10 . IDENT_7 . METHOD_4 ( IDENT_2 ) , org . hamcrest . Matchers . is ( true ) ) 