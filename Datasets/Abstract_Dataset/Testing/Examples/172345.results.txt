METHOD_0 ( ) { org . springframework . data . IDENT_0 . client . IDENT_1 IDENT_2 = new org . springframework . data . IDENT_0 . client . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( null ) ; IDENT_2 . setName ( null ) ; "<AssertPlaceHolder>" ; exception . expect ( org . springframework . data . IDENT_0 . client . IllegalArgumentException . class ) ; exception . METHOD_3 ( org . hamcrest . Matchers . is ( org . hamcrest . Matchers . METHOD_4 ( java . lang . Throwable . class ) ) ) ; exception . METHOD_5 ( STRING_0 ) ; IDENT_2 . METHOD_6 ( ) ; } getName ( ) { throw new java . lang . METHOD_7 ( org . springframework . data . IDENT_0 . client . IDENT_3 . IDENT_4 ) ; }
org . junit . Assert . assertThat ( IDENT_2 . getName ( ) , org . hamcrest . Matchers . is ( org . hamcrest . Matchers . METHOD_4 ( ) ) ) 