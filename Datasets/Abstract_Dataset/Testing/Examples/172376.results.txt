METHOD_0 ( ) { org . springframework . data . IDENT_0 . support . IDENT_1 IDENT_2 = new org . springframework . data . IDENT_0 . support . IDENT_3 . METHOD_1 ( ) ; try { org . springframework . context . event . IDENT_4 IDENT_5 = org . mockito . Mockito . mock ( org . springframework . context . event . IDENT_4 . class ) ; org . mockito . Mockito . when ( IDENT_5 . METHOD_2 ( ) ) . thenReturn ( null ) ; exception . expect ( org . springframework . data . IDENT_0 . support . IllegalArgumentException . class ) ; exception . METHOD_3 ( org . hamcrest . Matchers . is ( org . hamcrest . Matchers . METHOD_4 ( java . lang . Throwable . class ) ) ) ; exception . METHOD_5 ( STRING_0 ) ; IDENT_2 . METHOD_6 ( IDENT_5 ) ; } catch ( java . lang . Throwable t ) { "<AssertPlaceHolder>" ; throw t ; } finally { org . springframework . data . IDENT_0 . support . IDENT_6 . METHOD_7 ( IDENT_2 ) ; } } METHOD_8 ( ) { return this . IDENT_7 ; }
org . junit . Assert . assertThat ( IDENT_2 . METHOD_8 ( ) , org . hamcrest . Matchers . is ( false ) ) 