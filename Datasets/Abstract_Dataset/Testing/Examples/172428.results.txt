METHOD_0 ( ) { METHOD_1 ( ) ; javax . persistence . criteria . IDENT_0 builder = em . METHOD_2 ( ) ; javax . persistence . criteria . IDENT_1 < org . springframework . data . jpa . domain . IDENT_2 . User > IDENT_3 = builder . METHOD_3 ( org . springframework . data . jpa . domain . IDENT_2 . User . class ) ; javax . persistence . criteria . IDENT_4 < org . springframework . data . jpa . domain . IDENT_2 . User > root = IDENT_3 . from ( org . springframework . data . jpa . domain . IDENT_2 . User . class ) ; javax . persistence . criteria . IDENT_5 < java . util . Collection > parameter = builder . parameter ( java . util . Collection . class ) ; IDENT_3 . METHOD_4 ( root . < java . lang . Integer > get ( STRING_0 ) . in ( parameter ) ) ; javax . persistence . IDENT_6 < org . springframework . data . jpa . domain . IDENT_2 . User > query = em . METHOD_3 ( IDENT_3 ) ; query . METHOD_5 ( parameter , java . util . Arrays . asList ( 1 , 2 ) ) ; java . util . List < org . springframework . data . jpa . domain . IDENT_2 . User > IDENT_7 = query . METHOD_6 ( ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . Object [ ] ) { return METHOD_7 ( METHOD_8 ( METHOD_9 ( METHOD_10 ( values ) , method ) , method ) , method ) ; }
org . junit . Assert . assertThat ( IDENT_7 . size ( ) , org . hamcrest . CoreMatchers . is ( 2 ) ) 