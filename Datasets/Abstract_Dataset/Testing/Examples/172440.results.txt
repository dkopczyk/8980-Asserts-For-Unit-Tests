METHOD_0 ( ) { org . springframework . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new org . springframework . IDENT_0 . IDENT_1 . METHOD_1 ( getClass ( ) . METHOD_2 ( ) , false ) { @ org . springframework . data . jpa . repository . config . Override public java . lang . Class < ? > METHOD_3 ( java . lang . String name ) throws org . springframework . data . jpa . repository . config . IDENT_4 { if ( ( name . startsWith ( STRING_0 ) ) || ( name . startsWith ( STRING_1 ) ) ) { throw new java . lang . METHOD_4 ( ( STRING_2 + name ) ) ; } return getClass ( ) . METHOD_2 ( ) . METHOD_3 ( name ) ; } } ; org . springframework . context . support . IDENT_5 context = new org . springframework . context . support . METHOD_5 ( ) ; context . METHOD_6 ( IDENT_3 ) ; org . springframework . data . jpa . repository . config . IDENT_6 extension = new org . springframework . data . jpa . repository . config . METHOD_7 ( ) ; java . lang . IDENT_7 IDENT_8 = extension . METHOD_8 ( context ) ; "<AssertPlaceHolder>" . METHOD_9 ( org . springframework . data . jpa . repository . config . IDENT_9 . class ) ; } METHOD_8 ( org . springframework . core . io . IDENT_10 ) { java . lang . IDENT_7 IDENT_8 = loader . METHOD_2 ( ) ; return ( IDENT_8 != null ) && ( org . springframework . data . jpa . repository . config . METHOD_7 . IDENT_11 . METHOD_10 ( loader . METHOD_2 ( ) ) ) ? new org . springframework . data . jpa . repository . config . METHOD_11 ( loader . METHOD_2 ( ) ) : loader . METHOD_2 ( ) ; }
org . junit . Assert . assertThat ( IDENT_8 ) 