METHOD_0 ( ) { org . springframework . data . mongodb . core . IDENT_0 . IDENT_1 IDENT_2 = new org . springframework . data . mongodb . core . IDENT_0 . METHOD_1 ( ) ; IDENT_2 . IDENT_3 = STRING_0 ; org . springframework . data . mongodb . core . IDENT_0 . METHOD_1 IDENT_4 = new org . springframework . data . mongodb . core . IDENT_0 . METHOD_1 ( ) ; IDENT_4 . IDENT_3 = STRING_0 ; template . save ( IDENT_2 ) ; template . save ( IDENT_4 ) ; org . springframework . data . mongodb . core . Query q = query ( METHOD_2 ( STRING_1 ) . in ( IDENT_2 . id , IDENT_4 . id ) ) ; template . METHOD_3 ( q , org . springframework . data . mongodb . core . IDENT_5 . update ( STRING_2 , STRING_3 ) , org . springframework . data . mongodb . core . IDENT_0 . METHOD_1 . class ) ; for ( org . springframework . data . mongodb . core . IDENT_0 . METHOD_1 p : template . find ( q , org . springframework . data . mongodb . core . IDENT_0 . METHOD_1 . class ) ) { "<AssertPlaceHolder>" ; } } METHOD_2 ( org . springframework . data . mongodb . core . query . IDENT_6 ) { super . METHOD_2 ( criteria ) ; return this ; }
org . junit . Assert . assertThat ( p . version , equalTo ( java . lang . Long . valueOf ( 1 ) ) ) 