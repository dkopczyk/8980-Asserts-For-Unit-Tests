METHOD_0 ( ) { org . springframework . data . mongodb . core . query . Query query = org . springframework . data . mongodb . core . query . Query . query ( org . springframework . data . mongodb . core . query . IDENT_0 . METHOD_1 ( "foo" ) . is ( "bar" ) ) . with ( org . springframework . data . domain . IDENT_1 . METHOD_2 ( "foo" ) ) ; template . METHOD_3 ( query , STRING_0 , new org . springframework . data . mongodb . core . METHOD_4 ( ) { @ org . springframework . data . mongodb . core . Override public void METHOD_5 ( org . bson . Document document ) throws com . mongodb . IDENT_2 , org . springframework . dao . IDENT_3 { } } ) ; org . mockito . IDENT_4 < org . bson . Document > IDENT_5 = org . mockito . IDENT_4 . METHOD_6 ( org . bson . Document . class ) ; verify ( IDENT_6 , times ( 1 ) ) . METHOD_7 ( IDENT_5 . METHOD_8 ( ) ) ; "<AssertPlaceHolder>" ; } getValue ( ) { return value ; }
org . junit . Assert . assertThat ( IDENT_5 . getValue ( ) , equalTo ( new org . bson . Document ( "foo" , 1 ) ) ) 