METHOD_0 ( ) { java . lang . String result = org . apache . IDENT_0 . IDENT_1 . generator . core . utils . IDENT_2 . METHOD_1 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { if ( ( javax . lang . model . IDENT_3 . METHOD_2 ( name ) ) && ( ! ( javax . lang . model . IDENT_3 . METHOD_3 ( name ) ) ) ) { return name ; } java . lang . String [ ] IDENT_4 = name . split ( STRING_1 , ( - 1 ) ) ; for ( int IDENT_5 = 0 ; IDENT_5 < ( IDENT_4 . length ) ; IDENT_5 ++ ) { java . lang . String IDENT_6 = IDENT_4 [ IDENT_5 ] ; if ( IDENT_6 . isEmpty ( ) ) { IDENT_4 [ IDENT_5 ] = STRING_2 ; continue ; } IDENT_6 = IDENT_6 . replaceAll ( STRING_3 , STRING_2 ) . replace ( STRING_4 , STRING_5 ) ; if ( ( java . lang . IDENT_7 . METHOD_4 ( IDENT_6 . charAt ( 0 ) ) ) || ( javax . lang . model . IDENT_3 . METHOD_3 ( IDENT_6 ) ) ) { IDENT_6 = STRING_2 + IDENT_6 ; } IDENT_4 [ IDENT_5 ] = IDENT_6 ; } return java . lang . String . join ( STRING_6 , IDENT_4 ) ; }
org . junit . Assert . assertThat ( result , org . hamcrest . core . Is . is ( STRING_0 ) ) 