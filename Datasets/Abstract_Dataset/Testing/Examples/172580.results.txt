METHOD_0 ( ) { java . lang . String [ ] keys = new java . lang . String [ ] { STRING_0 , STRING_1 } ; actual . add ( connection . METHOD_1 ( keys ) ) ; METHOD_2 ( org . springframework . data . redis . connection . Arrays . asList ( new java . lang . Object [ ] { org . springframework . data . redis . connection . Arrays . asList ( new java . lang . String [ ] { null , null } ) } ) ) ; org . springframework . data . redis . core . IDENT_0 IDENT_1 = new org . springframework . data . redis . core . METHOD_3 ( IDENT_2 ) ; org . springframework . data . redis . connection . List < java . lang . String > IDENT_3 = IDENT_1 . METHOD_4 ( ) . METHOD_5 ( org . springframework . data . redis . connection . Arrays . asList ( keys ) ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . util . Collection ) { org . springframework . util . Assert . METHOD_6 ( keys , STRING_2 ) ; return METHOD_7 ( ( connection ) -> IDENT_4 . core . IDENT_5 . IDENT_6 . METHOD_8 ( keys ) . map ( key ( ) :: write ) . METHOD_9 ( ) . METHOD_10 ( connection :: METHOD_1 ) . map ( this :: IDENT_7 ) ) ; }
org . junit . Assert . assertEquals ( org . springframework . data . redis . connection . Arrays . asList ( new java . lang . String [ ] { null , null } ) , METHOD_5 ) 