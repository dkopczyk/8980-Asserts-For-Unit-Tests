METHOD_0 ( ) { org . apache . commons . IDENT_0 . impl . IDENT_1 IDENT_2 = new org . apache . commons . IDENT_0 . impl . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( true ) ; pool = new org . springframework . data . redis . connection . IDENT_3 . METHOD_3 ( org . springframework . data . redis . IDENT_4 . METHOD_4 ( ) , org . springframework . data . redis . IDENT_4 . METHOD_5 ( ) , IDENT_2 ) ; pool . METHOD_6 ( org . springframework . data . redis . connection . IDENT_3 . IDENT_5 . METHOD_7 ( ) ) ; pool . METHOD_8 ( ) ; io . IDENT_3 . core . api . IDENT_6 < byte [ ] , byte [ ] > client = ( ( io . IDENT_3 . core . api . IDENT_6 < byte [ ] , byte [ ] > ) ( pool . getResource ( ) ) ) ; "<AssertPlaceHolder>" ; client . close ( ) ; } getResource ( ) { try { return IDENT_7 . METHOD_9 ( ) ; } catch ( java . lang . Exception e ) { throw new org . springframework . data . redis . connection . METHOD_10 ( STRING_0 , e ) ; } }
org . junit . Assert . assertNotNull ( client ) 