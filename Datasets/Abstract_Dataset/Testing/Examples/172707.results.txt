METHOD_0 ( ) { org . springframework . data . redis . serializer . IDENT_0 < java . lang . Object > writer = new org . springframework . data . redis . serializer . METHOD_1 ( null ) ; byte [ ] input = new byte [ ] { 1 , 2 , 3 } ; java . nio . ByteBuffer result = writer . write ( input ) ; "<AssertPlaceHolder>" ; } write ( T ) { if ( ( ( serializer ) != null ) && ( ( value == null ) || ( serializer . METHOD_2 ( value . getClass ( ) ) ) ) ) { return java . nio . ByteBuffer . METHOD_3 ( serializer . serialize ( value ) ) ; } if ( value instanceof byte [ ] ) { return java . nio . ByteBuffer . METHOD_3 ( ( ( byte [ ] ) ( value ) ) ) ; } if ( value instanceof java . nio . ByteBuffer ) { return ( ( java . nio . ByteBuffer ) ( value ) ) ; } throw new java . lang . IllegalStateException ( java . lang . String . format ( STRING_0 , value . getClass ( ) ) ) ; }
org . junit . Assert . assertThat ( result . array ( ) , is ( equalTo ( input ) ) ) 