METHOD_0 ( ) { org . springframework . data . rest . IDENT_0 . mapping . IDENT_1 IDENT_2 = mock ( org . springframework . data . rest . IDENT_0 . mapping . IDENT_1 . class ) ; org . springframework . data . mapping . IDENT_3 < ? > any = org . mockito . IDENT_4 . any ( org . springframework . data . mapping . IDENT_3 . class ) ; when ( IDENT_2 . METHOD_1 ( any ) ) . thenReturn ( true ) ; org . springframework . data . rest . IDENT_0 . json . IDENT_5 reader = new org . springframework . data . rest . IDENT_0 . json . METHOD_2 ( entities , IDENT_2 ) ; org . springframework . data . rest . IDENT_0 . json . IDENT_6 . IDENT_7 first = new org . springframework . data . rest . IDENT_0 . json . IDENT_6 . METHOD_3 ( ) ; org . springframework . data . rest . IDENT_0 . json . IDENT_6 . METHOD_3 IDENT_8 = new org . springframework . data . rest . IDENT_0 . json . IDENT_6 . METHOD_3 ( ) ; org . springframework . data . rest . IDENT_0 . json . IDENT_6 . IDENT_9 IDENT_10 = new org . springframework . data . rest . IDENT_0 . json . IDENT_6 . METHOD_4 ( ) ; IDENT_10 . IDENT_11 . add ( first ) ; IDENT_10 . IDENT_11 . add ( IDENT_8 ) ; com . fasterxml . jackson . databind . module . IDENT_12 module = new com . fasterxml . jackson . databind . module . METHOD_5 ( ) ; module . METHOD_6 ( org . springframework . data . rest . IDENT_0 . json . IDENT_6 . METHOD_3 . class , new org . springframework . data . rest . IDENT_0 . json . IDENT_6 . IDENT_13 < org . springframework . data . rest . IDENT_0 . json . IDENT_6 . METHOD_3 > ( java . util . Collections . METHOD_7 ( IDENT_8 . id , IDENT_8 ) ) ) ; com . fasterxml . jackson . databind . IDENT_14 mapper = new com . fasterxml . jackson . databind . METHOD_8 ( ) ; mapper . METHOD_9 ( module ) ; com . fasterxml . jackson . databind . node . IDENT_15 IDENT_16 = ( ( com . fasterxml . jackson . databind . node . IDENT_15 ) ( mapper . METHOD_10 ( java . lang . String . format ( STRING_0 , IDENT_8 . id ) ) ) ) ; org . springframework . data . rest . IDENT_0 . json . IDENT_6 . METHOD_4 result = reader . METHOD_11 ( METHOD_10 , IDENT_10 , mapper ) ; "<AssertPlaceHolder>" . contains ( IDENT_8 ) ; } METHOD_11 ( com . fasterxml . jackson . databind . node . IDENT_15 , T , com . fasterxml . jackson . databind . METHOD_8 ) { org . springframework . util . Assert . METHOD_12 ( root , STRING_1 ) ; org . springframework . util . Assert . METHOD_12 ( target , STRING_2 ) ; org . springframework . util . Assert . METHOD_12 ( mapper , STRING_3 ) ; java . util . Optional < org . springframework . data . mapping . IDENT_17 < ? , ? extends org . springframework . data . mapping . IDENT_3 < ? > > > IDENT_18 = entities . METHOD_13 ( target . getClass ( ) ) ; if ( ! ( IDENT_18 . METHOD_14 ( ) ) ) { return mapper . METHOD_15 ( target ) . METHOD_16 ( root ) ; } org . springframework . data . mapping . IDENT_17 < ? , ? > entity = IDENT_18 . get ( ) ; org . springframework . data . rest . IDENT_0 . json . IDENT_19 IDENT_20 = org . springframework . data . rest . IDENT_0 . json . IDENT_19 . METHOD_17 ( entity , mapper ) ; for ( java . util . Iterator < java . util . Map . Entry < java . lang . String , com . fasterxml . jackson . databind . IDENT_21 > > i = root . fields ( ) ; i . hasNext ( ) ; ) { java . util . Map . Entry < java . lang . String , com . fasterxml . jackson . databind . IDENT_21 > entry = i . next ( ) ; com . fasterxml . jackson . databind . IDENT_21 child = entry . getValue ( ) ; java . lang . String IDENT_22 = entry . getKey ( ) ; if ( ! ( IDENT_20 . METHOD_18 ( IDENT_22 ) ) ) { continue ; } org . springframework . data . mapping . IDENT_3 < ? > property = IDENT_20 . METHOD_19 ( IDENT_22 ) ; org . springframework . data . mapping . IDENT_23 < ? > IDENT_24 = entity . METHOD_20 ( target ) ; java . util . Optional < java . lang . Object > IDENT_25 = java . util . Optional . METHOD_21 ( IDENT_24 . getProperty ( property ) ) ; if ( ( ! ( IDENT_25 . METHOD_14 ( ) ) ) || ( IDENT_26 . METHOD_1 ( property ) ) ) { continue ; } IDENT_25 . METHOD_22 ( ( it ) -> { if ( child . METHOD_23 ( ) ) { if ( METHOD_24 ( child , it , mapper , property . METHOD_25 ( ) ) ) { i . remove ( ) ; } return ; } if ( child . METHOD_26 ( ) ) { com . fasterxml . jackson . databind . node . IDENT_15 IDENT_27 = ( ( com . fasterxml . jackson . databind . node . IDENT_15 ) ( child ) ) ; if ( property . METHOD_27 ( ) ) { if ( ! ( IDENT_27 . METHOD_28 ( ) . hasNext ( ) ) ) { return ; } execute ( ( ) -> METHOD_29 ( ( ( Map < java . lang . Object , java . lang . Object > ) ( it ) ) , IDENT_27 , mapper , property . METHOD_25 ( ) ) ) ; if ( ! ( IDENT_27 . METHOD_28 ( ) . hasNext ( ) ) ) { i . remove ( ) ; } return ; } if ( property . METHOD_30 ( ) ) { i . remove ( ) ; execute ( ( ) -> METHOD_11 ( IDENT_27 , it , mapper ) ) ; } } } ) ; } return mapper . METHOD_15 ( target ) . METHOD_16 ( root ) ; }
org . junit . Assert . assertThat ( result . IDENT_11 ) 