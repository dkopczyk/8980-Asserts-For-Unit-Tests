METHOD_0 ( ) { org . mockito . Mockito . when ( response . METHOD_1 ( ) ) . thenReturn ( null ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . apache . solr . client . IDENT_0 . response . IDENT_1 , org . springframework . data . solr . core . IDENT_2 ) { if ( ( ( response == null ) || ( org . springframework . util . IDENT_3 . isEmpty ( response . METHOD_1 ( ) ) ) ) || ( page == null ) ) { return java . util . Collections . emptyList ( ) ; } java . util . List < org . springframework . data . solr . core . IDENT_4 < T > > IDENT_5 = new java . util . ArrayList ( page . METHOD_3 ( ) ) ; java . util . Map < java . lang . String , java . util . Map < java . lang . String , java . util . List < java . lang . String > > > IDENT_6 = response . METHOD_1 ( ) ; for ( T item : page ) { org . springframework . data . solr . core . IDENT_4 < T > IDENT_7 = org . springframework . data . solr . core . IDENT_8 . METHOD_4 ( IDENT_6 , item ) ; IDENT_5 . add ( IDENT_7 ) ; } page . METHOD_5 ( IDENT_5 ) ; return IDENT_5 ; }
org . junit . Assert . assertTrue ( org . springframework . data . solr . core . IDENT_8 . METHOD_2 ( response , new org . springframework . data . solr . core . METHOD_6 ( java . util . Collections . singletonList ( new java . lang . Object ( ) ) ) ) . isEmpty ( ) ) 