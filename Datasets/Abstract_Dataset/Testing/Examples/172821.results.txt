METHOD_0 ( ) { org . springframework . data . solr . repository . IDENT_0 IDENT_1 = METHOD_1 ( "1" ) ; org . springframework . data . solr . repository . support . IDENT_2 . IDENT_3 repository = factory . METHOD_2 ( org . springframework . data . solr . repository . support . IDENT_2 . IDENT_3 . class ) ; repository . save ( IDENT_1 ) ; org . springframework . data . domain . IDENT_4 < org . springframework . data . solr . repository . IDENT_0 > result = repository . METHOD_3 ( STRING_0 , org . springframework . data . domain . IDENT_5 . of ( 0 , 5 ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { java . util . List < org . springframework . data . solr . core . query . result . IDENT_6 > values = new java . util . ArrayList ( ) ; for ( java . util . List < org . springframework . data . solr . core . query . result . IDENT_6 > IDENT_7 : IDENT_8 . values ( ) ) { values . addAll ( IDENT_7 ) ; } return values ; }
org . junit . Assert . assertEquals ( 1 , result . METHOD_4 ( ) . size ( ) ) 