METHOD_0 ( ) { IDENT_0 . IDENT_1 . io . IDENT_2 result = org . springframework . IDENT_0 . core . io . IDENT_3 . METHOD_1 ( org . springframework . IDENT_0 . core . io . domain . Person . class , false , new org . springframework . core . convert . support . METHOD_2 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . Class , boolean , org . springframework . core . convert . IDENT_4 ) { if ( org . springframework . IDENT_0 . core . io . IDENT_5 . METHOD_3 ( IDENT_6 ) ) { org . springframework . IDENT_0 . core . io . IDENT_3 proxy = new org . springframework . IDENT_0 . core . io . IDENT_3 . METHOD_4 ( IDENT_6 , IDENT_7 , IDENT_8 ) ; return proxy ; } else { org . springframework . util . Assert . METHOD_5 ( ( ( IDENT_6 . METHOD_6 ( ) ) || ( org . springframework . util . IDENT_9 . METHOD_7 ( IDENT_6 ) ) ) , ( ( ( ( ( STRING_0 + ( IDENT_6 . getName ( ) ) ) + STRING_1 ) + STRING_2 ) + STRING_3 ) + ( org . springframework . IDENT_0 . core . io . IDENT_10 . class . getName ( ) ) ) ) ; org . springframework . IDENT_0 . core . io . IDENT_3 proxy = new org . springframework . IDENT_0 . core . io . METHOD_8 ( IDENT_6 , IDENT_7 , IDENT_8 ) ; try { java . lang . Object instance = org . springframework . beans . IDENT_11 . METHOD_9 ( IDENT_6 ) ; proxy . METHOD_10 ( org . springframework . IDENT_0 . core . io . IDENT_5 . METHOD_11 ( IDENT_8 , IDENT_7 , instance ) ) ; } catch ( org . springframework . beans . IDENT_12 ex ) { } return proxy ; } }
org . junit . Assert . assertEquals ( org . springframework . IDENT_0 . core . io . METHOD_8 . class , result . getClass ( ) ) 