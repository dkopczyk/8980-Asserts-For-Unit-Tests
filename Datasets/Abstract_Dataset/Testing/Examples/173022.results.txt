METHOD_0 ( ) { org . springframework . IDENT_0 . support . IDENT_1 IDENT_2 = new org . springframework . IDENT_0 . support . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( new org . springframework . IDENT_0 . policy . METHOD_3 ( ) { @ org . springframework . IDENT_0 . support . Override public void METHOD_4 ( org . springframework . IDENT_0 . IDENT_3 context , java . lang . Throwable IDENT_4 ) { throw new java . lang . RuntimeException ( STRING_0 ) ; } } ) ; try { IDENT_2 . execute ( new org . springframework . IDENT_0 . IDENT_5 < java . lang . Object , java . lang . Exception > ( ) { @ org . springframework . IDENT_0 . support . Override public java . lang . Object METHOD_5 ( org . springframework . IDENT_0 . IDENT_3 context ) throws org . springframework . IDENT_0 . support . Exception { throw new java . lang . RuntimeException ( STRING_1 ) ; } } ) ; org . junit . Assert . fail ( STRING_2 ) ; } catch ( org . springframework . IDENT_0 . IDENT_6 e ) { "<AssertPlaceHolder>" ; } } METHOD_6 ( ) { return IDENT_7 ; }
org . junit . Assert . assertEquals ( STRING_0 , e . METHOD_6 ( ) . getMessage ( ) ) 