METHOD_0 ( ) { for ( final org . springframework . IDENT_0 . project . IDENT_1 IDENT_2 : org . springframework . IDENT_0 . project . IDENT_1 . values ( ) ) { "<AssertPlaceHolder>" ; } } METHOD_1 ( java . lang . String ) { if ( org . apache . commons . lang3 . StringUtils . METHOD_2 ( IDENT_3 ) ) { return org . springframework . IDENT_0 . project . IDENT_1 . IDENT_4 ; } if ( STRING_0 . equals ( IDENT_3 ) ) { return org . springframework . IDENT_0 . project . IDENT_1 . IDENT_5 ; } try { return org . springframework . IDENT_0 . project . IDENT_1 . valueOf ( IDENT_3 . METHOD_3 ( ) ) ; } catch ( final java . lang . IllegalArgumentException IDENT_6 ) { return org . springframework . IDENT_0 . project . IDENT_1 . IDENT_7 ; } }
org . junit . Assert . assertEquals ( IDENT_2 , org . springframework . IDENT_0 . project . IDENT_1 . METHOD_1 ( IDENT_2 . name ( ) . toLowerCase ( ) ) ) 