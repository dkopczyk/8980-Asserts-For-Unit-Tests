METHOD_0 ( ) { final java . util . concurrent . IDENT_0 < java . lang . Object > values = new java . util . concurrent . IDENT_1 < java . lang . Object > ( ) ; com . github . IDENT_2 . IDENT_3 . client . IDENT_4 . IDENT_5 IDENT_6 = METHOD_1 ( ) ; IDENT_6 . IDENT_7 = true ; IDENT_6 . IDENT_8 = 0 ; IDENT_6 . IDENT_9 = 5 ; IDENT_6 . IDENT_10 = 10 ; IDENT_6 . IDENT_11 = FLOAT_0 ; final com . github . IDENT_2 . IDENT_3 . client . IDENT_12 manager = new com . github . IDENT_2 . IDENT_3 . client . METHOD_2 ( new java . net . URI ( uri ( ) ) , IDENT_6 ) ; IDENT_13 = manager . METHOD_3 ( STRING_0 ) ; final int [ ] IDENT_14 = new int [ ] { 0 } ; final boolean [ ] IDENT_15 = new boolean [ ] { true } ; final long [ ] IDENT_16 = new long [ ] { 0 } ; final long [ ] IDENT_17 = new long [ ] { 0 } ; METHOD_3 . METHOD_4 ( IDENT_18 . IDENT_19 , new com . github . IDENT_2 . IDENT_20 . IDENT_21 . METHOD_5 ( ) { @ com . github . IDENT_2 . IDENT_3 . client . Override public void call ( java . lang . Object OP_0 args ) { IDENT_16 [ 0 ] = new java . util . Date ( ) . getTime ( ) ; } } ) ; METHOD_3 . METHOD_4 ( IDENT_18 . IDENT_22 , new com . github . IDENT_2 . IDENT_20 . IDENT_21 . METHOD_5 ( ) { @ com . github . IDENT_2 . IDENT_3 . client . Override public void call ( java . lang . Object OP_0 args ) { ( IDENT_14 [ 0 ] ) ++ ; long IDENT_23 = new java . util . Date ( ) . getTime ( ) ; long IDENT_24 = IDENT_23 - ( IDENT_16 [ 0 ] ) ; if ( IDENT_24 <= ( IDENT_17 [ 0 ] ) ) { IDENT_15 [ 0 ] = false ; } IDENT_17 [ 0 ] = IDENT_24 ; } } ) ; METHOD_3 . METHOD_4 ( IDENT_18 . IDENT_25 , new com . github . IDENT_2 . IDENT_20 . IDENT_21 . METHOD_5 ( ) { @ com . github . IDENT_2 . IDENT_3 . client . Override public void call ( java . lang . Object OP_0 args ) { values . METHOD_6 ( true ) ; } } ) ; METHOD_3 . connect ( ) ; values . METHOD_7 ( ) ; "<AssertPlaceHolder>" ; METHOD_3 . close ( ) ; manager . close ( ) ; } connect ( ) { final java . util . concurrent . IDENT_0 < java . lang . Object > values = new java . util . concurrent . IDENT_1 < java . lang . Object > ( ) ; com . github . IDENT_2 . IDENT_3 . client . IDENT_4 . IDENT_5 IDENT_6 = METHOD_1 ( ) ; IDENT_6 . IDENT_26 = METHOD_8 ( ) ; IDENT_6 . IDENT_27 = com . github . IDENT_2 . IDENT_3 . client . IDENT_28 . IDENT_27 ; METHOD_3 = client ( IDENT_6 ) ; METHOD_3 . METHOD_4 ( IDENT_18 . IDENT_29 , new com . github . IDENT_2 . IDENT_20 . IDENT_21 . METHOD_5 ( ) { @ com . github . IDENT_2 . IDENT_3 . client . Override public void call ( java . lang . Object OP_0 IDENT_30 ) { METHOD_3 . METHOD_9 ( STRING_1 ) ; METHOD_3 . METHOD_4 ( STRING_2 , new com . github . IDENT_2 . IDENT_20 . IDENT_21 . METHOD_5 ( ) { @ com . github . IDENT_2 . IDENT_3 . client . Override public void call ( java . lang . Object OP_0 args ) { values . METHOD_6 ( STRING_3 ) ; } } ) ; } } ) ; METHOD_3 . connect ( ) ; values . METHOD_7 ( ) ; METHOD_3 . close ( ) ; }
org . junit . Assert . assertThat ( IDENT_14 [ 0 ] , org . hamcrest . CoreMatchers . is ( 5 ) ) 