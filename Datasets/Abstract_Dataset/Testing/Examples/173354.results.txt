METHOD_0 ( ) { com . google . gson . IDENT_0 element = new com . google . gson . METHOD_1 ( ) ; element . METHOD_2 ( STRING_0 3 , STRING_1 ) ; com . google . gson . IDENT_1 array = new com . google . gson . METHOD_3 ( ) ; com . google . gson . METHOD_1 obj = new com . google . gson . METHOD_1 ( ) ; obj . METHOD_2 ( STRING_2 , STRING_3 ) ; obj . METHOD_2 ( STRING_0 7 , STRING_4 ) ; obj . METHOD_2 ( "value" , STRING_5 ) ; array . add ( obj ) ; obj = new com . google . gson . METHOD_1 ( ) ; obj . METHOD_2 ( STRING_0 0 , STRING_0 6 ) ; obj . METHOD_2 ( "value" , STRING_6 ) ; array . add ( obj ) ; obj = new com . google . gson . METHOD_1 ( ) ; obj . METHOD_2 ( STRING_2 , "test" ) ; obj . METHOD_2 ( STRING_0 7 , STRING_0 4 ) ; obj . METHOD_2 ( "value" , STRING_0 1 ) ; array . add ( obj ) ; obj = new com . google . gson . METHOD_1 ( ) ; obj . METHOD_2 ( STRING_0 0 , STRING_0 6 ) ; obj . METHOD_2 ( "value" , STRING_6 ) ; array . add ( obj ) ; obj = new com . google . gson . METHOD_1 ( ) ; obj . METHOD_2 ( STRING_2 , STRING_0 2 ) ; obj . METHOD_2 ( STRING_0 7 , STRING_0 4 ) ; obj . METHOD_2 ( "value" , STRING_7 ) ; array . add ( obj ) ; element . add ( STRING_0 5 , array ) ; System . out . println ( new com . google . gson . METHOD_4 ( ) . METHOD_5 ( element ) ) ; com . IDENT_2 . IDENT_3 . core . filters . IDENT_4 filter = com . IDENT_2 . IDENT_3 . core . api . IDENT_5 . IDENT_6 . METHOD_6 ( element ) ; System . out . println ( filter ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( com . google . gson . METHOD_1 ) { java . util . IDENT_7 < com . IDENT_2 . IDENT_3 . core . filters . IDENT_4 > IDENT_8 = new java . util . METHOD_7 ( ) ; com . google . gson . METHOD_3 array = element . get ( STRING_8 ) . METHOD_8 ( ) ; for ( int i = 0 ; i < ( array . size ( ) ) ; i ++ ) { com . google . gson . METHOD_1 obj = array . get ( i ) . METHOD_9 ( ) ; if ( ! ( obj . METHOD_10 ( "value" ) ) ) { continue ; } java . lang . String val = obj . get ( "value" ) . METHOD_11 ( ) ; if ( obj . METHOD_10 ( STRING_9 ) ) { if ( IDENT_8 . isEmpty ( ) ) { System . err . println ( STRING_10 ) ; } else { com . IDENT_2 . IDENT_3 . core . filters . IDENT_4 IDENT_9 = IDENT_8 . METHOD_12 ( ) ; if ( val . equalsIgnoreCase ( STRING_11 ) ) { com . IDENT_2 . IDENT_3 . core . filters . IDENT_10 IDENT_11 = new com . IDENT_2 . IDENT_3 . core . filters . METHOD_13 ( com . IDENT_2 . IDENT_3 . core . filters . METHOD_13 . IDENT_12 . IDENT_13 ) ; IDENT_11 . METHOD_14 ( METHOD_12 ) ; IDENT_8 . METHOD_15 ( IDENT_11 ) ; } else if ( val . equalsIgnoreCase ( STRING_12 ) ) { com . IDENT_2 . IDENT_3 . core . filters . METHOD_13 IDENT_14 = new com . IDENT_2 . IDENT_3 . core . filters . METHOD_13 ( com . IDENT_2 . IDENT_3 . core . filters . METHOD_13 . IDENT_12 . IDENT_15 ) ; IDENT_14 . METHOD_14 ( METHOD_12 ) ; IDENT_8 . METHOD_15 ( IDENT_14 ) ; } else { System . err . println ( STRING_13 ) ; } } } else { com . IDENT_2 . IDENT_3 . core . filters . IDENT_16 filter = com . IDENT_2 . IDENT_3 . core . utils . IDENT_17 . METHOD_16 ( ( ( ( obj . get ( STRING_2 ) . METHOD_11 ( ) ) + ( obj . get ( STRING_11 0 ) . METHOD_11 ( ) ) ) + ( obj . get ( "value" ) . METHOD_11 ( ) ) ) ) ; com . IDENT_2 . IDENT_3 . core . api . IDENT_5 . IDENT_6 . logger . log ( IDENT_18 . IDENT_19 , ( ) -> STRING_14 + filter ) ; if ( IDENT_8 . isEmpty ( ) ) { IDENT_8 . METHOD_15 ( filter ) ; } else { if ( ( IDENT_8 . METHOD_17 ( ) ) instanceof com . IDENT_2 . IDENT_3 . core . filters . IDENT_16 ) { System . err . println ( STRING_15 ) ; } else { ( ( com . IDENT_2 . IDENT_3 . core . filters . METHOD_13 ) ( IDENT_8 . METHOD_17 ( ) ) ) . METHOD_14 ( filter ) ; } } } } if ( IDENT_8 . isEmpty ( ) ) { return null ; } else { return IDENT_8 . METHOD_12 ( ) ; } }
org . junit . Assert . assertNotNull ( filter ) 