METHOD_0 ( ) { for ( int i = 0 ; i < 1000 ; i ++ ) { com . google . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_0 , STRING_1 , INT_0 , true , 2 ) ; com . google . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_0 , STRING_2 , INT_0 , true , 2 ) ; com . google . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_0 , STRING_3 , INT_0 , true , 2 ) ; com . google . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_0 , STRING_3 , 100 , true , 3 ) ; com . google . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_0 , STRING_3 , INT_1 , true , 4 ) ; com . google . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_0 , STRING_3 , INT_2 , false , 5 ) ; java . lang . String data = STRING_4 ; com . google . IDENT_0 . IDENT_1 . IDENT_4 writer = new com . google . IDENT_0 . IDENT_1 . METHOD_2 ( ) ; com . google . IDENT_0 . common . IDENT_5 IDENT_6 = writer . encode ( data , IDENT_7 . IDENT_8 , 0 , 0 ) ; com . google . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 IDENT_1 = com . google . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_10 . encode ( data . getBytes ( IDENT_11 . IDENT_12 ) , IDENT_10 . IDENT_13 , IDENT_10 . IDENT_14 ) ; com . google . IDENT_0 . common . IDENT_5 IDENT_15 = IDENT_1 . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } } METHOD_3 ( ) { return IDENT_6 ; }
org . junit . Assert . assertEquals ( IDENT_6 , IDENT_15 ) 