METHOD_0 ( ) { com . google . IDENT_0 . common . IDENT_1 array = new com . google . IDENT_0 . common . METHOD_1 ( INT_0 ) ; array . set ( INT_1 ) ; array . set ( INT_2 ) ; for ( int i = 0 ; i < ( array . METHOD_2 ( ) ) ; i ++ ) { int expected ; if ( i <= INT_1 ) { expected = INT_1 ; } else if ( i <= INT_2 ) { expected = INT_2 ; } else { expected = INT_0 ; } "<AssertPlaceHolder>" ; } } METHOD_3 ( int ) { if ( from >= ( size ) ) { return size ; } int IDENT_2 = from / INT_3 ; int IDENT_3 = IDENT_4 [ IDENT_2 ] ; IDENT_3 OP_0 OP_1 ( ( 1 << ( from & INT_4 ) ) - 1 ) ; while ( IDENT_3 == 0 ) { if ( ( ++ IDENT_2 ) == ( IDENT_4 . length ) ) { return size ; } IDENT_3 = IDENT_4 [ IDENT_2 ] ; } int result = ( IDENT_2 * INT_3 ) + ( java . lang . Integer . METHOD_4 ( IDENT_3 ) ) ; return result > ( size ) ? size : result ; }
org . junit . Assert . assertEquals ( java . lang . String . valueOf ( i ) , expected , array . METHOD_3 ( i ) ) 