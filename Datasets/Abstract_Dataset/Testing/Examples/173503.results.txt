METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; org . IDENT_0 . IDENT_1 . model . IDENT_4 < org . IDENT_0 . IDENT_1 . METHOD_1 > IDENT_5 = new org . IDENT_0 . IDENT_1 . model . impl . IDENT_6 < org . IDENT_0 . IDENT_1 . METHOD_1 > ( STRING_0 ) ; org . IDENT_0 . IDENT_1 . model . IDENT_4 < org . IDENT_0 . IDENT_1 . METHOD_1 > IDENT_7 = new org . IDENT_0 . IDENT_1 . model . impl . IDENT_6 < org . IDENT_0 . IDENT_1 . METHOD_1 > ( STRING_1 ) ; java . util . List < org . IDENT_0 . IDENT_1 . model . IDENT_4 < org . IDENT_0 . IDENT_1 . METHOD_1 > > IDENT_8 = new java . util . IDENT_9 < org . IDENT_0 . IDENT_1 . model . IDENT_4 < org . IDENT_0 . IDENT_1 . METHOD_1 > > ( ) ; IDENT_8 . add ( IDENT_5 ) ; IDENT_8 . add ( IDENT_7 ) ; org . IDENT_0 . persistence . IDENT_10 . IDENT_11 < org . IDENT_0 . IDENT_1 . METHOD_1 > IDENT_12 = new org . IDENT_0 . persistence . IDENT_10 . IDENT_11 < org . IDENT_0 . IDENT_1 . METHOD_1 > ( IDENT_3 , IDENT_8 , IDENT_5 , STRING_2 ) ; IDENT_12 . METHOD_2 ( IDENT_3 , IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( T ) { org . IDENT_0 . IDENT_1 . model . IDENT_4 < T > state ; try { java . io . IDENT_13 IDENT_14 = this . METHOD_4 ( IDENT_3 ) ; state = ( IDENT_14 == null ) ? this . IDENT_15 : this . IDENT_8 . get ( IDENT_14 ) ; } catch ( java . lang . IDENT_16 e ) { throw new java . lang . RuntimeException ( e ) ; } catch ( java . lang . IDENT_17 e ) { throw new java . lang . RuntimeException ( e ) ; } catch ( java . lang . IllegalArgumentException e ) { throw new java . lang . RuntimeException ( e ) ; } catch ( java . lang . IDENT_18 e ) { throw new java . lang . RuntimeException ( e ) ; } state = ( state == null ) ? this . IDENT_15 : state ; return state ; }
org . junit . Assert . assertEquals ( IDENT_7 , IDENT_12 . METHOD_3 ( IDENT_3 ) ) 