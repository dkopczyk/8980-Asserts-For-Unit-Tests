METHOD_0 ( ) { org . apache . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_3 [ ] events = new org . apache . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_3 [ ] { METHOD_1 ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_4 ) , METHOD_1 ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_5 ) , METHOD_1 ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_6 ) , METHOD_1 ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_7 ) , METHOD_1 ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_8 ) } ; for ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_3 event : events ) { IDENT_9 . METHOD_2 ( event ) ; } "<AssertPlaceHolder>" ; } METHOD_2 ( org . apache . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_3 ) { if ( ( types . contains ( event . type ( ) ) ) && ( METHOD_3 ( event ) ) ) { org . apache . IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_10 . LOG . info ( STRING_0 , event . type ( ) , event . METHOD_4 ( ) ) ; return false ; } IDENT_11 . save ( event ) ; return true ; }
org . junit . Assert . assertThat ( this . events , org . hamcrest . Matchers . contains ( events ) ) 