METHOD_0 ( ) { final org . IDENT_0 . javascript . IDENT_1 < java . lang . Integer > arr = org . IDENT_0 . javascript . IDENT_2 . METHOD_1 ( ) ; for ( int i = 0 ; i < 1000 ; i ++ ) { arr . METHOD_2 ( i , i ) ; } final java . util . concurrent . atomic . IDENT_3 IDENT_4 = new java . util . concurrent . atomic . METHOD_3 ( 0 ) ; org . IDENT_0 . javascript . IDENT_5 . IDENT_6 < java . lang . Integer > IDENT_7 = new org . IDENT_0 . javascript . IDENT_5 . IDENT_6 < java . lang . Integer > ( ) { @ org . IDENT_0 . javascript . Override public org . IDENT_0 . javascript . Boolean METHOD_4 ( java . lang . Integer val , java . lang . Long IDENT_8 , org . IDENT_0 . javascript . IDENT_1 < java . lang . Integer > obj ) { IDENT_4 . METHOD_5 ( ) ; if ( IDENT_8 == 0 ) { for ( int i = 1 ; i < INT_0 ; i ++ ) { arr . METHOD_6 ( i ) ; } } return true ; } } ; arr . METHOD_7 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; } get ( ) { return this ; }
org . junit . Assert . assertEquals ( 2 , IDENT_4 . get ( ) ) 