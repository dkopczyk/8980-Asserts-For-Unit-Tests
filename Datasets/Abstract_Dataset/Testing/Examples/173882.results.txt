METHOD_0 ( ) { final java . util . concurrent . atomic . IDENT_0 result = new java . util . concurrent . atomic . METHOD_1 ( false ) ; org . IDENT_1 . javascript . IDENT_2 . IDENT_3 < java . lang . Integer , java . lang . Integer , java . lang . Long , org . IDENT_1 . javascript . IDENT_4 < java . lang . Integer > , java . lang . Integer > IDENT_5 = new org . IDENT_1 . javascript . IDENT_2 . IDENT_3 < java . lang . Integer , java . lang . Integer , java . lang . Long , org . IDENT_1 . javascript . IDENT_4 < java . lang . Integer > , java . lang . Integer > ( ) { @ org . IDENT_1 . javascript . Override public org . IDENT_1 . javascript . Integer METHOD_2 ( java . lang . Integer IDENT_6 , java . lang . Integer IDENT_7 , java . lang . Long IDENT_8 , org . IDENT_1 . javascript . IDENT_4 < java . lang . Integer > obj ) { if ( ( ( IDENT_6 != null ) && ( IDENT_6 == 8 ) ) || ( ( IDENT_7 != null ) && ( IDENT_7 == 8 ) ) ) { result . set ( true ) ; } return null ; } } ; org . IDENT_1 . javascript . IDENT_4 < java . lang . Integer > obj = new org . IDENT_1 . javascript . METHOD_3 ( 20 ) ; obj . METHOD_4 ( 0 , INT_0 ) ; obj . METHOD_4 ( 10 , 12 ) ; obj . METHOD_4 ( STRING_0 , 8 ) ; obj . METHOD_5 ( IDENT_5 , 1 ) ; "<AssertPlaceHolder>" ; } get ( ) { return this ; }
org . junit . Assert . assertFalse ( result . get ( ) ) 