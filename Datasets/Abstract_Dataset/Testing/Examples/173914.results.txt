METHOD_0 ( ) { net . IDENT_0 . crypto . IDENT_1 . math . IDENT_2 IDENT_3 = net . IDENT_0 . crypto . IDENT_1 . math . IDENT_4 . IDENT_5 . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( net . IDENT_0 . crypto . IDENT_1 . math . IDENT_6 ) { switch ( IDENT_7 ) { case IDENT_8 : case IDENT_9 : net . IDENT_0 . crypto . IDENT_1 . math . IDENT_10 IDENT_11 = IDENT_12 . METHOD_3 ( ) ; net . IDENT_0 . crypto . IDENT_1 . math . IDENT_10 x = IDENT_13 . METHOD_4 ( IDENT_11 ) ; net . IDENT_0 . crypto . IDENT_1 . math . IDENT_10 y = IDENT_14 . METHOD_4 ( IDENT_11 ) ; net . IDENT_0 . crypto . IDENT_1 . math . IDENT_10 IDENT_15 = x . METHOD_5 ( ) ; net . IDENT_0 . crypto . IDENT_1 . math . IDENT_10 IDENT_16 = y . METHOD_5 ( ) ; net . IDENT_0 . crypto . IDENT_1 . math . IDENT_10 IDENT_17 = IDENT_18 . METHOD_6 ( ) . METHOD_4 ( IDENT_15 ) . METHOD_4 ( IDENT_16 ) ; return IDENT_18 . METHOD_7 ( ) . IDENT_19 . add ( IDENT_17 ) . add ( IDENT_15 ) . equals ( IDENT_16 ) ; default : return METHOD_8 ( ) . METHOD_2 ( IDENT_18 ) ; } }
org . junit . Assert . assertThat ( IDENT_3 . METHOD_2 ( net . IDENT_0 . crypto . IDENT_1 . math . IDENT_4 . IDENT_18 ) , org . hamcrest . Matchers . is ( true ) ) 