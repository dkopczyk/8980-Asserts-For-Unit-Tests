METHOD_0 ( ) { try { java . lang . String [ ] parameters = new java . lang . String [ ] { STRING_0 } ; org . apache . commons . cli . IDENT_0 line = new org . apache . commons . cli . METHOD_1 ( ) . parse ( eu . IDENT_1 . client . IDENT_2 . METHOD_2 ( new org . apache . commons . cli . METHOD_3 ( ) ) , parameters , false ) ; eu . IDENT_1 . client . IDENT_2 IDENT_3 = new eu . IDENT_1 . client . METHOD_4 ( ) ; java . lang . Object result = IDENT_3 . METHOD_5 ( line ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { System . err . println ( e . getMessage ( ) ) ; e . printStackTrace ( ) ; org . junit . Assert . fail ( ( STRING_1 + ( e . getMessage ( ) ) ) ) ; } } METHOD_5 ( org . apache . commons . cli . IDENT_0 ) { java . lang . String [ ] IDENT_4 = ( line . METHOD_6 ( eu . IDENT_1 . client . METHOD_4 . IDENT_5 . METHOD_7 ( ) ) ) ? line . METHOD_8 ( eu . IDENT_1 . client . METHOD_4 . IDENT_5 . METHOD_7 ( ) ) : line . METHOD_9 ( ) ; java . lang . String IDENT_6 = null ; if ( line . METHOD_6 ( eu . IDENT_1 . client . METHOD_4 . IDENT_7 . METHOD_7 ( ) ) ) { IDENT_6 = line . METHOD_10 ( eu . IDENT_1 . client . METHOD_4 . IDENT_7 . METHOD_7 ( ) ) ; } else if ( ( IDENT_4 . length ) > 0 ) { IDENT_6 = IDENT_4 [ 0 ] ; IDENT_4 = java . util . Arrays . METHOD_11 ( IDENT_4 , 1 , IDENT_4 . length ) ; } else { System . out . println ( STRING_2 ) ; return null ; } java . io . File IDENT_8 = new java . io . File ( IDENT_6 ) ; if ( ! ( IDENT_8 . exists ( ) ) ) { System . out . println ( STRING_3 ) ; return null ; } else if ( ! ( IDENT_8 . METHOD_12 ( ) ) ) { System . out . println ( STRING_4 ) ; return null ; } java . lang . String IDENT_9 = ( line . METHOD_6 ( eu . IDENT_1 . client . METHOD_4 . IDENT_10 . METHOD_7 ( ) ) ) ? line . METHOD_10 ( eu . IDENT_1 . client . METHOD_4 . IDENT_10 . METHOD_7 ( ) ) : null ; try { return IDENT_9 == null ? new eu . IDENT_1 . client . IDENT_11 . METHOD_13 ( IDENT_8 , IDENT_4 ) : new eu . IDENT_1 . client . IDENT_11 . METHOD_13 ( IDENT_8 , IDENT_9 , IDENT_4 ) ; } catch ( eu . IDENT_1 . client . IDENT_11 . IDENT_12 e ) { METHOD_14 ( e ) ; return null ; } }
org . junit . Assert . assertTrue ( ( result == null ) ) 