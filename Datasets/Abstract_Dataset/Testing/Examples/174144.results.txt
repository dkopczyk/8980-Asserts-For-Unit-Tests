METHOD_0 ( ) { com . IDENT_0 . rest . dto . response . IDENT_1 IDENT_2 = METHOD_1 ( METHOD_2 ( ( ( IDENT_3 ) + STRING_0 ) , STRING_1 , null , IDENT_4 ) , org . IDENT_5 . jackson . map . type . IDENT_6 . METHOD_3 ( ) . METHOD_4 ( com . IDENT_0 . rest . dto . response . IDENT_1 . class ) ) ; "<AssertPlaceHolder>" ; com . IDENT_0 . rest . dto . response . IDENT_7 IDENT_8 = com . google . common . collect . IDENT_9 . find ( IDENT_2 . METHOD_5 ( ) , new com . google . common . base . IDENT_10 < com . IDENT_0 . rest . dto . response . IDENT_7 > ( ) { @ com . IDENT_0 . rest . Override public boolean apply ( @ javax . annotation . IDENT_11 com . IDENT_0 . rest . dto . response . IDENT_7 input ) { return ( input != null ) && ( input . getId ( ) . equals ( STRING_2 ) ) ; } } ) ; java . util . List < com . IDENT_0 . rest . dto . response . IDENT_12 > IDENT_13 = IDENT_8 . METHOD_6 ( ) . METHOD_6 ( ) ; com . google . common . collect . IDENT_9 . find ( IDENT_13 , new com . google . common . base . IDENT_10 < com . IDENT_0 . rest . dto . response . IDENT_12 > ( ) { @ com . IDENT_0 . rest . Override public boolean apply ( @ javax . annotation . IDENT_11 com . IDENT_0 . rest . dto . response . IDENT_12 input ) { return ( ( ( input != null ) && ( input . getType ( ) . equals ( IDENT_14 . IDENT_15 . toString ( ) ) ) ) && ( input . METHOD_7 ( ) . equalsIgnoreCase ( STRING_3 ) ) ) && ( input . METHOD_8 ( ) . equalsIgnoreCase ( STRING_4 ) ) ; } } ) ; com . google . common . collect . IDENT_9 . find ( IDENT_13 , new com . google . common . base . IDENT_10 < com . IDENT_0 . rest . dto . response . IDENT_12 > ( ) { @ com . IDENT_0 . rest . Override public boolean apply ( @ javax . annotation . IDENT_11 com . IDENT_0 . rest . dto . response . IDENT_12 input ) { return ( ( ( ( ( input != null ) && ( input . getType ( ) . equals ( IDENT_14 . IDENT_16 . toString ( ) ) ) ) && ( ( input . METHOD_7 ( ) ) == null ) ) && ( ( input . METHOD_8 ( ) ) == null ) ) && ( input . METHOD_9 ( ) . equals ( STRING_5 ) ) ) && ( ( input . METHOD_10 ( ) ) != null ) ; } } ) ; } METHOD_5 ( ) { return IDENT_17 ; }
org . junit . Assert . assertTrue ( ( ( IDENT_2 . METHOD_5 ( ) . size ( ) ) == 2 ) ) 