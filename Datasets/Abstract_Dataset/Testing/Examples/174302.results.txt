METHOD_0 ( ) { com . streamsets . pipeline . api . IDENT_0 . Context mock = org . mockito . Mockito . mock ( IDENT_0 . Context . class ) ; com . streamsets . pipeline . api . ext . IDENT_1 IDENT_2 = new com . streamsets . pipeline . lib . IDENT_3 . METHOD_1 ( mock , false , 20 , 20 ) ; com . streamsets . pipeline . api . IDENT_4 record = com . streamsets . pipeline . lib . IDENT_3 . IDENT_5 . records . get ( 0 ) ; boolean IDENT_6 = IDENT_2 . METHOD_2 ( record ) ; "<AssertPlaceHolder>" ; org . mockito . Mockito . verify ( mock , org . mockito . Mockito . times ( 0 ) ) . METHOD_3 ( org . mockito . Mockito . anyString ( ) ) ; org . mockito . Mockito . verify ( mock , org . mockito . Mockito . times ( 0 ) ) . METHOD_4 ( org . mockito . Mockito . anyString ( ) ) ; com . IDENT_7 . metrics . IDENT_8 IDENT_9 = org . mockito . Mockito . mock ( com . IDENT_7 . metrics . IDENT_8 . class ) ; org . mockito . Mockito . when ( mock . METHOD_4 ( org . mockito . Mockito . anyString ( ) ) ) . thenReturn ( IDENT_9 ) ; org . mockito . Mockito . METHOD_5 ( ) . when ( IDENT_9 ) . update ( org . mockito . Mockito . METHOD_6 ( ) , org . mockito . Mockito . any ( java . util . concurrent . TimeUnit . class ) ) ; IDENT_2 = new com . streamsets . pipeline . lib . IDENT_3 . METHOD_1 ( mock , true , 20 , 20 ) ; IDENT_2 . METHOD_2 ( record ) ; org . mockito . Mockito . verify ( mock , org . mockito . Mockito . times ( 1 ) ) . METHOD_3 ( org . mockito . Mockito . anyString ( ) ) ; org . mockito . Mockito . verify ( mock , org . mockito . Mockito . times ( 1 ) ) . METHOD_4 ( org . mockito . Mockito . anyString ( ) ) ; } METHOD_2 ( com . streamsets . pipeline . api . IDENT_4 ) { boolean IDENT_10 = false ; if ( IDENT_11 ) { java . lang . String IDENT_6 = record . METHOD_7 ( ) . METHOD_8 ( IDENT_12 . IDENT_13 ) ; IDENT_10 = ( null != IDENT_6 ) && ( IDENT_12 . IDENT_14 . equals ( IDENT_6 ) ) ; if ( IDENT_10 ) { METHOD_9 ( record ) ; } } else if ( ( IDENT_15 ) > 0 ) { if ( IDENT_16 . remove ( IDENT_17 ) ) { METHOD_10 ( record ) ; IDENT_10 = true ; } ( IDENT_17 ) ++ ; if ( IDENT_16 . isEmpty ( ) ) { IDENT_17 = 0 ; METHOD_11 ( ) ; } } return IDENT_10 ; }
org . junit . Assert . assertEquals ( true , IDENT_6 ) 