METHOD_0 ( ) { com . streamsets . pipeline . lib . http . IDENT_0 IDENT_1 = new com . streamsets . pipeline . lib . http . METHOD_1 ( ) ; IDENT_1 . init ( null ) ; javax . servlet . http . IDENT_2 req = org . mockito . Mockito . mock ( javax . servlet . http . IDENT_2 . class ) ; javax . servlet . http . IDENT_3 res = org . mockito . Mockito . mock ( javax . servlet . http . IDENT_3 . class ) ; "<AssertPlaceHolder>" ; org . mockito . Mockito . METHOD_2 ( req , res ) ; IDENT_1 . METHOD_3 ( ) ; } validate ( java . util . List , com . streamsets . pipeline . api . IDENT_4 ) { if ( ( METHOD_4 ( ) ) && ( ! ( METHOD_5 ( ) ) ) ) { IDENT_5 . add ( context . METHOD_6 ( IDENT_6 . IDENT_7 . name ( ) , ( ( com . streamsets . pipeline . kafka . impl . IDENT_8 . IDENT_9 ) + ( com . streamsets . pipeline . kafka . impl . IDENT_8 . IDENT_10 ) ) , IDENT_11 . IDENT_12 ) ) ; } try { METHOD_7 ( IDENT_5 ) ; } catch ( com . streamsets . pipeline . api . IDENT_13 e ) { IDENT_5 . add ( context . METHOD_6 ( IDENT_6 . IDENT_7 . name ( ) , ( ( com . streamsets . pipeline . kafka . impl . IDENT_8 . IDENT_9 ) + ( com . streamsets . pipeline . kafka . impl . IDENT_8 . IDENT_14 ) ) , e . METHOD_8 ( ) ) ) ; } if ( IDENT_5 . isEmpty ( ) ) { METHOD_9 ( ) ; METHOD_10 ( ) ; try { IDENT_15 . METHOD_11 ( IDENT_16 ) ; } catch ( org . apache . kafka . common . errors . IDENT_17 | org . apache . kafka . common . errors . IDENT_18 e ) { METHOD_12 ( IDENT_5 , context , e ) ; } } }
org . junit . Assert . assertTrue ( IDENT_1 . validate ( req , res ) ) 