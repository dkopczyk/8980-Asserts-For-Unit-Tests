METHOD_0 ( ) { java . util . IDENT_0 random = new java . util . METHOD_1 ( ) ; org . openqa . selenium . IDENT_1 text = com . IDENT_2 . IDENT_3 . examples . IDENT_4 . IDENT_5 . driver . METHOD_2 ( org . openqa . selenium . IDENT_6 . METHOD_3 ( STRING_0 ) ) . get ( 1 ) ; int IDENT_7 = ( random . METHOD_4 ( ( ( ( com . IDENT_2 . IDENT_3 . examples . IDENT_4 . IDENT_5 . IDENT_8 ) - ( com . IDENT_2 . IDENT_3 . examples . IDENT_4 . IDENT_5 . IDENT_9 ) ) + 1 ) ) ) + ( com . IDENT_2 . IDENT_3 . examples . IDENT_4 . IDENT_5 . IDENT_9 ) ; text . METHOD_5 ( java . lang . String . valueOf ( IDENT_7 ) ) ; com . IDENT_2 . IDENT_3 . examples . IDENT_4 . IDENT_5 . driver . METHOD_2 ( org . openqa . selenium . IDENT_6 . METHOD_3 ( STRING_1 ) ) . get ( 0 ) . METHOD_6 ( ) ; org . openqa . selenium . IDENT_1 IDENT_10 = com . IDENT_2 . IDENT_3 . examples . IDENT_4 . IDENT_5 . driver . METHOD_2 ( org . openqa . selenium . IDENT_6 . METHOD_3 ( STRING_2 ) ) . get ( 0 ) ; "<AssertPlaceHolder>" ; } getText ( ) { logger . info ( ( STRING_3 + ( this . toString ( ) ) ) ) ; if ( STRING_4 . equals ( IDENT_11 . METHOD_7 ( ) ) ) { return this . IDENT_11 . METHOD_8 ( "value" ) ; } return this . IDENT_11 . getText ( ) ; }
org . junit . Assert . assertEquals ( IDENT_10 . getText ( ) , java . lang . String . valueOf ( IDENT_7 ) ) 