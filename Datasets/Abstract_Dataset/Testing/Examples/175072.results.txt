METHOD_0 ( ) { java . io . ByteArrayOutputStream IDENT_0 = new java . io . ByteArrayOutputStream ( ) ; org . support . project . common . serialize . IDENT_1 IDENT_2 = new org . support . project . common . serialize . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( STRING_0 ) ; IDENT_2 . METHOD_3 ( 100 ) ; org . support . project . common . serialize . IDENT_3 . METHOD_4 ( IDENT_2 , IDENT_0 ) ; java . io . ByteArrayInputStream IDENT_4 = new java . io . ByteArrayInputStream ( IDENT_0 . toByteArray ( ) ) ; org . support . project . common . serialize . METHOD_1 IDENT_5 = org . support . project . common . serialize . IDENT_3 . METHOD_5 ( IDENT_4 , org . support . project . common . serialize . METHOD_1 . class ) ; "<AssertPlaceHolder>" ; IDENT_0 . close ( ) ; } METHOD_6 ( java . lang . Object , java . lang . Object ) { if ( IDENT_2 == null ) { if ( IDENT_5 == null ) { return true ; } else { return false ; } } else { if ( IDENT_5 == null ) { return false ; } if ( ( IDENT_2 . getClass ( ) . METHOD_7 ( ) ) && ( IDENT_5 . getClass ( ) . METHOD_7 ( ) ) ) { return org . support . project . common . util . IDENT_6 . METHOD_8 ( IDENT_2 , IDENT_5 ) ; } else { for ( java . lang . Class clazz : org . support . project . common . util . IDENT_6 . IDENT_7 ) { if ( ( clazz . METHOD_9 ( IDENT_2 . getClass ( ) ) ) || ( clazz . METHOD_9 ( IDENT_5 . getClass ( ) ) ) ) { return IDENT_2 . equals ( IDENT_5 ) ; } } } java . util . List < java . lang . String > IDENT_8 = org . support . project . common . util . IDENT_6 . METHOD_10 ( IDENT_2 . getClass ( ) ) ; java . util . List < java . lang . String > IDENT_9 = org . support . project . common . util . IDENT_6 . METHOD_10 ( IDENT_5 . getClass ( ) ) ; if ( ( ( IDENT_8 . size ( ) ) == 0 ) && ( ( IDENT_9 . size ( ) ) == 0 ) ) { return IDENT_2 . equals ( IDENT_5 ) ; } for ( java . lang . String IDENT_10 : IDENT_8 ) { if ( IDENT_9 . contains ( IDENT_10 ) ) { java . lang . Object IDENT_11 = org . support . project . common . util . IDENT_6 . METHOD_11 ( IDENT_2 , IDENT_10 ) ; java . lang . Object IDENT_12 = org . support . project . common . util . IDENT_6 . METHOD_11 ( IDENT_5 , IDENT_10 ) ; if ( IDENT_11 == null ) { if ( IDENT_12 != null ) { if ( org . support . project . common . util . IDENT_6 . LOG . METHOD_12 ( ) ) { org . support . project . common . util . IDENT_6 . LOG . debug ( ( ( ( ( ( ( STRING_1 + IDENT_10 ) + STRING_2 ) + IDENT_11 ) + STRING_3 ) + IDENT_11 ) + STRING_4 ) ) ; } return false ; } } else if ( ! ( org . support . project . common . util . IDENT_6 . METHOD_6 ( IDENT_11 , IDENT_12 ) ) ) { if ( org . support . project . common . util . IDENT_6 . LOG . METHOD_12 ( ) ) { org . support . project . common . util . IDENT_6 . LOG . debug ( ( ( ( ( ( ( STRING_1 + IDENT_10 ) + STRING_2 ) + IDENT_11 ) + STRING_3 ) + IDENT_11 ) + STRING_4 ) ) ; } return false ; } IDENT_9 . remove ( IDENT_10 ) ; } } for ( java . lang . String IDENT_10 : IDENT_9 ) { if ( IDENT_8 . contains ( IDENT_10 ) ) { java . lang . Object IDENT_11 = org . support . project . common . util . IDENT_6 . METHOD_11 ( IDENT_2 , IDENT_10 ) ; java . lang . Object IDENT_12 = org . support . project . common . util . IDENT_6 . METHOD_11 ( IDENT_5 , IDENT_10 ) ; if ( IDENT_11 == null ) { if ( IDENT_12 != null ) { if ( org . support . project . common . util . IDENT_6 . LOG . METHOD_12 ( ) ) { org . support . project . common . util . IDENT_6 . LOG . debug ( ( ( ( ( ( ( STRING_1 + IDENT_10 ) + STRING_2 ) + IDENT_11 ) + STRING_3 ) + IDENT_11 ) + STRING_4 ) ) ; } return false ; } } else if ( ! ( org . support . project . common . util . IDENT_6 . METHOD_6 ( IDENT_11 , IDENT_12 ) ) ) { if ( org . support . project . common . util . IDENT_6 . LOG . METHOD_12 ( ) ) { org . support . project . common . util . IDENT_6 . LOG . debug ( ( ( ( ( ( ( STRING_1 + IDENT_10 ) + STRING_2 ) + IDENT_11 ) + STRING_3 ) + IDENT_11 ) + STRING_4 ) ) ; } return false ; } } } return true ; } }
org . junit . Assert . assertTrue ( org . support . project . common . util . IDENT_6 . METHOD_6 ( IDENT_2 , IDENT_5 ) ) 