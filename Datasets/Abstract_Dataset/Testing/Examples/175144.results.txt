METHOD_0 ( ) { java . util . concurrent . IDENT_0 < java . lang . String > IDENT_1 = new java . util . concurrent . IDENT_0 < java . lang . String > ( ) { @ org . IDENT_2 . tests . Override public java . lang . String call ( ) throws org . IDENT_2 . tests . Exception { return STRING_0 ; } } ; java . lang . String result = new org . IDENT_2 . METHOD_1 ( ) . METHOD_2 ( org . IDENT_2 . tests . IDENT_3 . IDENT_4 . class ) . METHOD_3 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; } call ( ) { java . net . IDENT_5 s = IDENT_6 . IDENT_7 . accept ( ) ; java . lang . String IDENT_8 = new java . util . METHOD_4 ( s . METHOD_5 ( ) ) . METHOD_6 ( STRING_1 ) . next ( ) ; s . METHOD_7 ( ) . write ( ( ( STRING_2 + ( response . getBytes ( ) . length ) ) + STRING_1 ) . getBytes ( ) ) ; s . METHOD_7 ( ) . write ( response . getBytes ( ) ) ; s . close ( ) ; return IDENT_8 ; }
org . junit . Assert . assertEquals ( IDENT_1 . call ( ) , result ) 