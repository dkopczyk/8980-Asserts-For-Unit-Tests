METHOD_0 ( ) { final java . util . concurrent . IDENT_0 service = java . util . concurrent . IDENT_1 . METHOD_1 ( ) ; org . eclipse . IDENT_2 . components . db . IDENT_3 project = handler . METHOD_2 ( STRING_0 , user ) ; final java . util . concurrent . IDENT_4 < org . eclipse . IDENT_2 . components . db . List < org . eclipse . IDENT_2 . components . db . IDENT_5 > > IDENT_6 = service . METHOD_3 ( ( ) -> handler . METHOD_4 ( project , true , user ) ) ; service . METHOD_5 ( ) ; service . METHOD_6 ( 10 , TimeUnit . IDENT_7 ) ; final org . eclipse . IDENT_2 . components . db . List < org . eclipse . IDENT_2 . components . db . IDENT_5 > IDENT_8 = IDENT_6 . get ( ) ; org . eclipse . IDENT_2 . components . db . IDENT_5 IDENT_9 = new org . eclipse . IDENT_2 . components . db . METHOD_7 ( STRING_1 , STRING_2 ) . METHOD_8 ( IDENT_10 . IDENT_11 ) . METHOD_9 ( STRING_1 ) . METHOD_10 ( IDENT_12 . IDENT_13 ) . METHOD_11 ( IDENT_14 . IDENT_15 ) . METHOD_12 ( 1 ) . METHOD_13 ( STRING_0 ) ; org . eclipse . IDENT_2 . components . db . METHOD_7 IDENT_16 = new org . eclipse . IDENT_2 . components . db . METHOD_7 ( STRING_1 , STRING_2 ) . METHOD_8 ( IDENT_10 . IDENT_11 ) . METHOD_9 ( STRING_1 ) . METHOD_10 ( IDENT_12 . IDENT_13 ) . METHOD_11 ( IDENT_14 . IDENT_15 ) . METHOD_12 ( 2 ) . METHOD_13 ( STRING_3 ) ; org . eclipse . IDENT_2 . components . db . METHOD_7 IDENT_17 = new org . eclipse . IDENT_2 . components . db . METHOD_7 ( STRING_3 , STRING_4 ) . METHOD_8 ( IDENT_10 . IDENT_11 ) . METHOD_9 ( STRING_3 ) . METHOD_13 ( STRING_0 ) . METHOD_10 ( IDENT_12 . IDENT_13 ) . METHOD_11 ( IDENT_14 . IDENT_15 ) . METHOD_12 ( 1 ) . METHOD_14 ( org . eclipse . IDENT_2 . components . db . Arrays . asList ( IDENT_16 ) ) ; org . eclipse . IDENT_2 . components . db . METHOD_7 IDENT_18 = new org . eclipse . IDENT_2 . components . db . METHOD_7 ( STRING_0 , STRING_5 ) . METHOD_8 ( IDENT_10 . IDENT_19 ) . METHOD_9 ( STRING_0 ) . METHOD_10 ( IDENT_12 . IDENT_13 ) . METHOD_11 ( IDENT_14 . IDENT_15 ) . METHOD_12 ( 0 ) . METHOD_14 ( org . eclipse . IDENT_2 . components . db . Arrays . asList ( IDENT_17 , IDENT_9 ) ) ; METHOD_15 ( IDENT_8 ) ; "<AssertPlaceHolder>" ; } contains ( java . lang . String ) { return ( id != null ) && ( super . contains ( id ) ) ; }
org . junit . Assert . assertThat ( IDENT_8 , org . hamcrest . Matchers . contains ( IDENT_18 ) ) 