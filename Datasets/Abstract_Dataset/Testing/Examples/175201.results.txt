METHOD_0 ( ) { java . util . Map < java . lang . String , java . util . Set < java . lang . String > > IDENT_0 = new java . util . HashMap ( ) ; org . eclipse . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 project = new org . eclipse . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( ) . setName ( STRING_0 ) . METHOD_2 ( IDENT_0 ) ; java . util . Map < java . lang . String , java . util . Set < java . lang . String > > IDENT_6 = new java . util . HashMap ( ) ; IDENT_0 . put ( STRING_1 , new java . util . HashSet ( ) ) ; org . eclipse . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 IDENT_7 = new org . eclipse . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( ) . setName ( STRING_0 ) . METHOD_2 ( IDENT_6 ) ; java . util . Map < java . lang . String , java . util . Set < java . lang . String > > IDENT_8 = new java . util . HashMap ( ) ; IDENT_0 . put ( STRING_1 , METHOD_3 ( STRING_2 ) ) ; org . eclipse . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 IDENT_9 = new org . eclipse . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( ) . setName ( STRING_0 ) . METHOD_2 ( IDENT_8 ) ; boolean b = METHOD_4 ( METHOD_1 . IDENT_10 . IDENT_11 , project , IDENT_7 , IDENT_9 , org . apache . log4j . IDENT_12 . METHOD_5 ( org . eclipse . IDENT_1 . IDENT_2 . common . IDENT_13 . class ) ) ; "<AssertPlaceHolder>" ; } is ( org . eclipse . IDENT_1 . IDENT_2 . common . IDENT_14 ) { return org . eclipse . IDENT_1 . IDENT_2 . common . IDENT_15 . METHOD_6 ( IDENT_16 , IDENT_17 ) ; }
org . junit . Assert . assertThat ( b , org . hamcrest . core . Is . is ( true ) ) 