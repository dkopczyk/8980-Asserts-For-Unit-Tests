METHOD_0 ( ) { io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 IDENT_6 = new io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( ) ; io . IDENT_0 . IDENT_7 . api . storage . IDENT_8 IDENT_9 = io . IDENT_0 . IDENT_7 . api . dao . IDENT_10 . getInstance ( ) . METHOD_2 ( em , io . IDENT_0 . IDENT_7 . api . dao . IDENT_11 . IDENT_12 ) ; io . IDENT_0 . IDENT_7 . api . storage . IDENT_13 IDENT_14 = new io . IDENT_0 . IDENT_7 . api . storage . METHOD_3 ( ) ; short id = io . IDENT_0 . IDENT_7 . api . dao . IDENT_10 . getInstance ( ) . METHOD_4 ( em , IDENT_14 , IDENT_9 ) . METHOD_5 ( ) ; IDENT_6 . METHOD_6 ( id ) ; IDENT_6 . METHOD_7 ( "test" ) ; IDENT_6 . METHOD_8 ( STRING_0 ) ; IDENT_6 . METHOD_9 ( STRING_1 ) ; IDENT_6 . METHOD_10 ( STRING_2 ) ; IDENT_6 . METHOD_11 ( 2 ) ; IDENT_6 . METHOD_12 ( 2 ) ; id = io . IDENT_0 . IDENT_7 . api . dao . IDENT_10 . getInstance ( ) . METHOD_13 ( em , IDENT_14 , IDENT_14 . METHOD_2 ( ) , IDENT_6 , IDENT_15 ) . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; io . IDENT_0 . IDENT_1 . rules . IDENT_16 IDENT_17 = new io . IDENT_0 . IDENT_1 . rules . METHOD_14 ( ( ( short ) ( 0 ) ) , STRING_3 , true , new io . IDENT_0 . IDENT_1 . IDENT_18 . IDENT_19 . METHOD_15 ( STRING_4 , STRING_5 ) , new io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_20 [ ] { new io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_16 ( ( ( short ) ( 0 ) ) , id ) } ) ; io . IDENT_0 . IDENT_7 . api . dao . IDENT_21 . getInstance ( ) . METHOD_17 ( em , new io . IDENT_0 . IDENT_7 . api . storage . METHOD_18 ( ) , IDENT_9 , IDENT_17 , IDENT_15 ) ; try { io . IDENT_0 . IDENT_7 . api . dao . IDENT_10 . getInstance ( ) . METHOD_19 ( em , IDENT_14 . METHOD_2 ( ) , IDENT_15 ) ; org . junit . Assert . fail ( STRING_6 ) ; } catch ( java . lang . Exception e ) { } IDENT_9 = io . IDENT_0 . IDENT_7 . api . dao . IDENT_10 . getInstance ( ) . METHOD_2 ( em , io . IDENT_0 . IDENT_7 . api . dao . IDENT_11 . IDENT_12 ) ; } METHOD_5 ( ) { return IDENT_22 ; }
org . junit . Assert . assertEquals ( id , IDENT_14 . METHOD_5 ( ) ) 