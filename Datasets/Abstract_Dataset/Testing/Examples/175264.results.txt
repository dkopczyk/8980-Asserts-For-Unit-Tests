METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 . base . IDENT_3 IDENT_4 = new io . IDENT_5 . IDENT_6 . IDENT_1 . IDENT_7 . METHOD_1 ( ) ; final java . util . concurrent . atomic . IDENT_8 < IDENT_0 . IDENT_1 . tuple . IDENT_9 > IDENT_10 = new java . util . concurrent . atomic . IDENT_8 < IDENT_0 . IDENT_1 . tuple . IDENT_9 > ( null ) ; IDENT_4 . METHOD_2 ( new java . util . HashMap ( ) , null , io . IDENT_5 . IDENT_6 . IDENT_1 . IDENT_11 . METHOD_3 ( new org . mockito . IDENT_12 . IDENT_13 < java . lang . Object > ( ) { @ io . IDENT_5 . IDENT_6 . IDENT_1 . IDENT_7 . Override public java . lang . Object METHOD_4 ( org . mockito . IDENT_14 . IDENT_15 IDENT_14 ) throws java . lang . Throwable { java . lang . Object IDENT_16 = IDENT_14 . METHOD_5 ( ) [ 1 ] ; IDENT_10 . set ( ( ( IDENT_0 . IDENT_1 . tuple . IDENT_9 ) ( IDENT_16 ) ) ) ; System . out . println ( ( STRING_0 + ( IDENT_10 . get ( ) ) ) ) ; return new java . util . ArrayList ( ) ; } } ) ) ; when ( input . getString ( 0 ) ) . thenReturn ( STRING_1 ) ; IDENT_4 . execute ( input ) ; java . lang . String result = IDENT_10 . get ( ) . get ( 0 ) . toString ( ) ; IDENT_4 = new io . IDENT_5 . IDENT_6 . IDENT_1 . IDENT_7 . METHOD_6 ( ) ; IDENT_4 . METHOD_2 ( new java . util . HashMap ( ) , null , io . IDENT_5 . IDENT_6 . IDENT_1 . IDENT_11 . METHOD_3 ( new org . mockito . IDENT_12 . IDENT_13 < java . lang . Object > ( ) { @ io . IDENT_5 . IDENT_6 . IDENT_1 . IDENT_7 . Override public java . lang . Object METHOD_4 ( org . mockito . IDENT_14 . IDENT_15 IDENT_14 ) throws java . lang . Throwable { java . lang . Object IDENT_16 = IDENT_14 . METHOD_5 ( ) [ 1 ] ; IDENT_10 . set ( ( ( IDENT_0 . IDENT_1 . tuple . IDENT_9 ) ( IDENT_16 ) ) ) ; System . out . println ( ( STRING_0 + ( IDENT_10 . get ( ) ) ) ) ; return new java . util . ArrayList ( ) ; } } ) ) ; when ( input . getString ( 0 ) ) . thenReturn ( result ) ; IDENT_4 . execute ( input ) ; io . IDENT_5 . IDENT_17 . IDENT_18 event = ( ( io . IDENT_5 . IDENT_17 . IDENT_18 ) ( IDENT_10 . get ( ) . get ( 0 ) ) ) ; System . out . println ( ( ( java . lang . Double ) ( event . METHOD_7 ( ) . get ( STRING_2 ) ) ) . METHOD_8 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ) { return headers ; }
org . junit . Assert . assertTrue ( ( ( event . METHOD_7 ( ) . get ( STRING_2 ) ) instanceof java . lang . Double ) ) 