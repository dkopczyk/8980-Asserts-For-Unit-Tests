METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . web . IDENT_2 IDENT_3 = new org . IDENT_0 . IDENT_1 . web . METHOD_1 ( java . util . Optional . METHOD_2 ( STRING_0 ) , java . util . Optional . METHOD_2 ( STRING_1 ) ) ; org . IDENT_0 . IDENT_1 . person . Person person = new org . IDENT_0 . IDENT_1 . person . Person ( ) ; person . METHOD_3 ( java . util . Collections . singletonList ( IDENT_4 . IDENT_5 ) ) ; when ( IDENT_6 . METHOD_4 ( ) ) . thenReturn ( person ) ; org . IDENT_0 . IDENT_1 . person . Person IDENT_7 = new org . IDENT_0 . IDENT_1 . person . Person ( ) ; when ( IDENT_8 . METHOD_5 ( person ) ) . thenReturn ( java . util . Collections . singletonList ( IDENT_7 ) ) ; when ( IDENT_9 . build ( person , IDENT_3 . METHOD_6 ( ) , IDENT_3 . METHOD_7 ( ) ) ) . thenReturn ( mock ( org . IDENT_0 . IDENT_1 . IDENT_10 . web . IDENT_11 . class ) ) ; java . util . List < org . IDENT_0 . IDENT_1 . IDENT_10 . web . IDENT_11 > IDENT_10 = IDENT_12 . METHOD_8 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( org . IDENT_0 . IDENT_1 . web . METHOD_1 ) { java . util . List < org . IDENT_0 . IDENT_1 . person . Person > IDENT_13 = METHOD_9 ( ) ; return IDENT_13 . stream ( ) . map ( ( person ) -> IDENT_9 . build ( person , IDENT_14 . METHOD_6 ( ) , IDENT_14 . METHOD_7 ( ) ) ) . collect ( java . util . stream . IDENT_15 . toList ( ) ) ; }
org . junit . Assert . assertThat ( IDENT_10 . size ( ) , org . hamcrest . CoreMatchers . is ( 1 ) ) 