METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . model . IDENT_2 rule = new com . IDENT_0 . IDENT_1 . model . METHOD_1 ( ) ; rule . METHOD_2 ( IDENT_3 . IDENT_4 ) ; IDENT_5 . METHOD_3 ( new com . IDENT_0 . IDENT_1 . model . METHOD_1 [ ] { rule } ) ; IDENT_5 . METHOD_2 ( IDENT_3 . IDENT_6 ) ; com . IDENT_0 . IDENT_1 . model . IDENT_3 state = IDENT_5 . process ( IDENT_7 ) ; "<AssertPlaceHolder>" ; } process ( com . IDENT_0 . IDENT_1 . context . IDENT_8 ) { if ( ( IDENT_9 ) != null ) { for ( final com . IDENT_0 . IDENT_1 . model . IDENT_10 condition : IDENT_9 ) { if ( ( condition . process ( IDENT_7 ) ) != ( IDENT_3 . IDENT_4 ) ) { return null ; } } } return state ; }
org . junit . Assert . assertEquals ( IDENT_3 . IDENT_6 , state ) 