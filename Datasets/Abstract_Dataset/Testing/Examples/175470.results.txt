METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . model . IDENT_2 rule = new com . IDENT_0 . IDENT_1 . model . METHOD_1 ( ) ; rule . METHOD_2 ( IDENT_3 . IDENT_4 ) ; com . IDENT_0 . IDENT_1 . model . IDENT_5 condition = new com . IDENT_0 . IDENT_1 . model . METHOD_3 ( ) ; condition . METHOD_4 ( IDENT_6 . IDENT_7 ) ; condition . setName ( STRING_0 ) ; condition . METHOD_5 ( IDENT_8 . IDENT_9 ) ; condition . setValue ( STRING_1 ) ; rule . METHOD_6 ( new com . IDENT_0 . IDENT_1 . model . METHOD_3 [ ] { condition } ) ; com . IDENT_0 . IDENT_1 . model . METHOD_1 IDENT_10 = new com . IDENT_0 . IDENT_1 . model . METHOD_1 ( ) ; IDENT_10 . METHOD_2 ( IDENT_3 . IDENT_11 ) ; IDENT_12 . METHOD_7 ( new com . IDENT_0 . IDENT_1 . model . METHOD_1 [ ] { rule , IDENT_10 } ) ; com . IDENT_0 . IDENT_1 . model . IDENT_3 state = IDENT_12 . process ( IDENT_13 ) ; "<AssertPlaceHolder>" ; } process ( com . IDENT_0 . IDENT_1 . context . IDENT_14 ) { if ( ( IDENT_15 ) != null ) { for ( final com . IDENT_0 . IDENT_1 . model . METHOD_3 condition : IDENT_15 ) { if ( ( condition . process ( IDENT_13 ) ) != ( IDENT_3 . IDENT_11 ) ) { return null ; } } } return state ; }
org . junit . Assert . assertEquals ( IDENT_3 . IDENT_11 , state ) 