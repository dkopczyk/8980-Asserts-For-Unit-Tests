METHOD_0 ( ) { "<AssertPlaceHolder>" ; } METHOD_1 ( ) { ( result . IDENT_0 ) ++ ; try { cs = conn . METHOD_2 ( source . METHOD_3 ( IDENT_1 ) ) ; org . apache . avro . Schema IDENT_2 = org . talend . components . jdbc . IDENT_3 . METHOD_4 ( ( ( org . talend . components . api . properties . IDENT_4 ) ( source . properties ) ) ) ; org . apache . avro . Schema IDENT_5 = org . talend . components . jdbc . IDENT_3 . METHOD_5 ( ( ( org . talend . components . api . properties . IDENT_4 ) ( source . properties ) ) ) ; source . METHOD_6 ( cs , IDENT_2 , null , null , IDENT_1 ) ; cs . execute ( ) ; if ( ( IDENT_6 ) == null ) { IDENT_6 = new org . talend . components . jdbc . avro . METHOD_7 ( ) ; IDENT_6 . init ( IDENT_2 , IDENT_5 , IDENT_1 ) ; } org . apache . avro . IDENT_7 . IDENT_8 IDENT_9 = IDENT_6 . METHOD_8 ( cs , null ) ; return IDENT_9 ; } catch ( java . sql . IDENT_10 e ) { throw org . talend . components . jdbc . IDENT_3 . METHOD_9 ( e ) ; } }
org . junit . Assert . assertNull ( reader . METHOD_1 ( ) ) 