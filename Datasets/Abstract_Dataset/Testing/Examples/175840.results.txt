METHOD_0 ( ) { org . talend . components . IDENT_0 . runtime . input . IDENT_1 IDENT_2 = mock ( org . talend . components . IDENT_0 . runtime . input . IDENT_1 . class ) ; when ( IDENT_2 . connect ( any ( org . talend . components . api . container . IDENT_3 . class ) ) ) . thenReturn ( null ) ; org . talend . components . IDENT_0 . IDENT_4 . IDENT_5 properties = new org . talend . components . IDENT_0 . IDENT_4 . METHOD_1 ( STRING_0 ) ; properties . init ( ) ; org . talend . components . IDENT_0 . runtime . input . IDENT_6 IDENT_7 = new org . talend . components . IDENT_0 . runtime . input . METHOD_2 ( IDENT_2 , null , properties ) ; "<AssertPlaceHolder>" ; } start ( ) { if ( ( container ) != null ) { container . METHOD_3 ( container . METHOD_4 ( ) , org . talend . components . jdbc . IDENT_8 . METHOD_5 ( IDENT_9 . IDENT_10 ) , IDENT_11 . METHOD_6 ( ) ) ; } result = new org . talend . components . api . component . runtime . Result ( ) ; try { conn = source . METHOD_7 ( container ) ; } catch ( java . lang . IDENT_12 | java . sql . IDENT_13 e ) { throw org . talend . components . jdbc . IDENT_8 . METHOD_8 ( e ) ; } return true ; }
org . junit . Assert . assertFalse ( IDENT_7 . start ( ) ) 