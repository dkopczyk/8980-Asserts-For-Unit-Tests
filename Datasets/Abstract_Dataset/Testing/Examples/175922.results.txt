METHOD_0 ( ) { java . lang . String expected = STRING_0 ; org . apache . avro . Schema schema = org . apache . avro . IDENT_0 . record ( STRING_1 ) . fields ( ) . METHOD_1 ( STRING_2 ) . METHOD_1 ( STRING_3 ) . METHOD_2 ( ) ; java . lang . String IDENT_1 = new org . talend . components . IDENT_2 . IDENT_3 . METHOD_3 ( schema , STRING_4 ) . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { java . lang . StringBuilder IDENT_4 = new java . lang . StringBuilder ( ) ; java . util . List < java . lang . String > IDENT_5 = new java . util . ArrayList ( ) ; int IDENT_6 = 0 ; IDENT_4 . append ( org . talend . components . IDENT_2 . IDENT_3 . METHOD_3 . IDENT_7 ) . append ( org . talend . components . IDENT_2 . IDENT_3 . METHOD_3 . IDENT_8 ) . append ( org . talend . components . IDENT_2 . IDENT_3 . METHOD_3 . IDENT_9 ) ; for ( org . apache . avro . Schema . Field field : schema . METHOD_5 ( ) ) { java . lang . String IDENT_10 = field . name ( ) ; if ( METHOD_6 ( IDENT_10 ) ) { if ( 0 == IDENT_6 ) { IDENT_6 = IDENT_4 . length ( ) ; } IDENT_5 . add ( IDENT_10 ) ; } else if ( org . talend . components . IDENT_2 . IDENT_3 . METHOD_3 . IDENT_11 . matcher ( IDENT_10 ) . matches ( ) ) { IDENT_4 . append ( METHOD_7 ( IDENT_10 ) ) . append ( org . talend . components . IDENT_2 . IDENT_3 . METHOD_3 . IDENT_12 ) ; } else if ( ( IDENT_10 . contains ( org . talend . components . IDENT_2 . IDENT_3 . METHOD_3 . IDENT_13 ) ) && ( ! ( METHOD_8 ( IDENT_10 ) ) ) ) { IDENT_4 . append ( IDENT_10 . replace ( STRING_5 , STRING_6 ) ) . append ( org . talend . components . IDENT_2 . IDENT_3 . METHOD_3 . IDENT_12 ) ; } else { IDENT_4 . append ( IDENT_10 ) . append ( org . talend . components . IDENT_2 . IDENT_3 . METHOD_3 . IDENT_12 ) ; } } if ( ! ( IDENT_5 . isEmpty ( ) ) ) { IDENT_4 . insert ( IDENT_6 , METHOD_9 ( IDENT_5 ) . append ( org . talend . components . IDENT_2 . IDENT_3 . METHOD_3 . IDENT_12 ) ) ; } IDENT_4 . delete ( ( ( IDENT_4 . length ( ) ) - 2 ) , IDENT_4 . length ( ) ) ; IDENT_4 . append ( org . talend . components . IDENT_2 . IDENT_3 . METHOD_3 . IDENT_14 ) . append ( IDENT_15 ) . append ( org . talend . components . IDENT_2 . IDENT_3 . METHOD_3 . IDENT_7 ) ; return IDENT_4 . toString ( ) ; }
org . junit . Assert . assertEquals ( expected , IDENT_1 ) 