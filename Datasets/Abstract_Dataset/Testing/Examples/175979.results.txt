METHOD_0 ( ) { org . apache . avro . IDENT_0 . IDENT_1 IDENT_2 = new org . apache . avro . IDENT_0 . METHOD_1 ( IDENT_3 ) . set ( "name" , STRING_0 ) . build ( ) ; IDENT_2 . put ( "b" 1 , new org . apache . avro . IDENT_0 . METHOD_1 ( IDENT_4 ) . set ( "a" , "a" ) . set ( "b" , "b" ) . set ( STRING_1 , STRING_1 ) . build ( ) ) ; java . util . List < java . lang . String > IDENT_5 = java . util . Arrays . asList ( "name" , STRING_2 ) ; java . lang . String IDENT_6 = ( "b" 8 + ( ( ( ( STRING_3 + STRING_4 ) + "b" 0 ) + "b" 4 ) + STRING_5 ) ) . replaceAll ( STRING_6 , STRING_7 ) ; org . junit . Assert . assertEquals ( IDENT_6 , org . talend . components . adapter . beam . IDENT_7 . IDENT_8 . METHOD_2 ( IDENT_2 . METHOD_3 ( ) , IDENT_5 ) . toString ( ) ) ; org . junit . Assert . assertThat ( org . talend . components . adapter . beam . IDENT_7 . IDENT_8 . METHOD_4 ( IDENT_2 . METHOD_3 ( ) , IDENT_5 ) , org . hamcrest . Matchers . is ( org . talend . IDENT_9 . avro . IDENT_10 . METHOD_5 ( ) ) ) ; org . apache . avro . Schema IDENT_11 = org . talend . components . adapter . beam . IDENT_7 . IDENT_8 . METHOD_6 ( IDENT_2 . METHOD_3 ( ) , IDENT_5 ) ; org . junit . Assert . assertEquals ( METHOD_7 ( IDENT_6 , org . talend . IDENT_9 . avro . IDENT_10 . METHOD_5 ( ) . toString ( ) ) , IDENT_11 . toString ( ) ) ; java . lang . String IDENT_12 = ( STRING_8 + ( STRING_9 + STRING_10 ) ) . replaceAll ( STRING_6 , STRING_7 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( org . apache . avro . Schema ) { return org . talend . components . adapter . beam . IDENT_7 . IDENT_8 . METHOD_8 ( IDENT_13 . METHOD_9 ( org . talend . components . adapter . beam . IDENT_7 . IDENT_14 . IDENT_15 ) . schema ( ) , IDENT_13 . METHOD_9 ( org . talend . components . adapter . beam . IDENT_7 . IDENT_14 . IDENT_16 ) . schema ( ) ) ; }
org . junit . Assert . assertEquals ( IDENT_12 , org . talend . components . adapter . beam . IDENT_7 . IDENT_8 . METHOD_8 ( IDENT_11 ) . toString ( ) ) 