METHOD_0 ( ) { final java . lang . String IDENT_0 = IDENT_1 . METHOD_1 ( STRING_0 , STRING_1 ) ; final java . lang . String IDENT_2 = when ( ) . get ( STRING_2 , IDENT_0 ) . METHOD_2 ( ) ; final org . talend . IDENT_3 . api . dataset . IDENT_4 metadata = mapper . METHOD_3 ( IDENT_2 , org . talend . IDENT_3 . api . dataset . IDENT_4 . class ) ; metadata . setName ( STRING_3 ) ; final java . lang . String IDENT_5 = mapper . METHOD_4 ( metadata ) ; METHOD_5 ( ) . body ( IDENT_5 ) . when ( ) . put ( STRING_2 , IDENT_0 ) . METHOD_2 ( ) ; final java . lang . String IDENT_6 = when ( ) . get ( STRING_2 , IDENT_0 ) . METHOD_2 ( ) ; final org . talend . IDENT_3 . api . dataset . IDENT_4 IDENT_7 = mapper . METHOD_3 ( IDENT_6 , org . talend . IDENT_3 . api . dataset . IDENT_4 . class ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { return ( request , response ) -> { try ( java . io . InputStream content = response . METHOD_6 ( ) . METHOD_7 ( ) ) { return org . apache . commons . io . IDENT_8 . toString ( content , java . nio . IDENT_9 . IDENT_10 . UTF_8 ) ; } catch ( e ) { throw new < org . talend . IDENT_3 . command . e > org . talend . IDENT_3 . exception . METHOD_8 ( IDENT_11 . IDENT_12 ) ; } finally { org . apache . http . util . IDENT_13 . METHOD_9 ( response . METHOD_6 ( ) ) ; request . METHOD_10 ( ) ; } } ; }
org . junit . Assert . assertEquals ( IDENT_7 , metadata ) 