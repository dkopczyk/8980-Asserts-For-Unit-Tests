METHOD_0 ( ) { java . io . InputStream IDENT_0 = this . getClass ( ) . getResourceAsStream ( STRING_0 ) ; org . talend . IDENT_1 . api . dataset . IDENT_2 IDENT_3 = METHOD_1 ( STRING_1 , STRING_2 ) ; IDENT_3 . METHOD_2 ( STRING_3 ) ; java . io . InputStream input = serializer . serialize ( IDENT_0 , IDENT_3 , ( - 1 ) ) ; java . lang . String actual = org . apache . commons . io . IDENT_4 . toString ( input , java . nio . IDENT_5 . IDENT_6 . UTF_8 ) ; java . lang . String expected = STRING_4 ; "<AssertPlaceHolder>" ; } serialize ( java . util . stream . IDENT_7 , com . fasterxml . jackson . core . IDENT_8 , com . fasterxml . jackson . databind . IDENT_9 ) { com . fasterxml . jackson . databind . IDENT_10 IDENT_11 = null ; java . lang . Object IDENT_12 = null ; boolean IDENT_13 = false ; try { final java . util . Iterator iterator = stream . iterator ( ) ; stream = ( ( java . util . stream . IDENT_7 ) ( stream . METHOD_3 ( ( ) -> org . talend . IDENT_1 . json . IDENT_14 . LOGGER . debug ( STRING_5 ) ) ) ) ; org . talend . IDENT_1 . json . IDENT_14 . LOGGER . debug ( STRING_6 , iterator ) ; while ( iterator . hasNext ( ) ) { final java . lang . Object next = iterator . next ( ) ; if ( ! IDENT_13 ) { IDENT_15 . METHOD_4 ( ) ; IDENT_13 = true ; } if ( ( next != null ) && ( ( IDENT_11 == null ) || ( ! ( IDENT_12 . getClass ( ) . equals ( next . getClass ( ) ) ) ) ) ) { IDENT_11 = mapper . METHOD_5 ( next . getClass ( ) ) ; } if ( ( IDENT_11 != null ) && ( next != null ) ) { IDENT_11 . METHOD_6 ( IDENT_15 , next ) ; } IDENT_12 = next ; } if ( ! IDENT_13 ) { IDENT_15 . METHOD_4 ( ) ; IDENT_13 = true ; } } catch ( org . talend . IDENT_16 . exception . IDENT_17 e ) { throw new java . io . IOException ( e ) ; } catch ( java . lang . Exception e ) { org . talend . IDENT_1 . json . IDENT_14 . LOGGER . error ( STRING_7 , e ) ; } finally { if ( IDENT_13 ) { IDENT_15 . METHOD_7 ( ) ; } IDENT_15 . METHOD_8 ( ) ; try { stream . close ( ) ; } catch ( java . lang . Exception e ) { org . talend . IDENT_1 . json . IDENT_14 . LOGGER . error ( STRING_8 , e ) ; } org . talend . IDENT_1 . json . IDENT_14 . LOGGER . debug ( STRING_9 ) ; } }
org . junit . Assert . assertEquals ( expected , actual ) 