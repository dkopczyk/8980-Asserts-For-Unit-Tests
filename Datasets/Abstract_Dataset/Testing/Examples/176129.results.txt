METHOD_0 ( ) { org . talend . IDENT_0 . util . IDENT_1 IDENT_2 = new org . talend . IDENT_0 . util . METHOD_1 ( true , 1 ) ; java . util . concurrent . IDENT_2 . IDENT_3 IDENT_4 = IDENT_2 . METHOD_2 ( "1" ) ; java . lang . IDENT_5 IDENT_6 = new java . lang . METHOD_3 ( ) { @ org . talend . IDENT_0 . util . Override public void run ( ) { IDENT_4 . METHOD_4 ( ) . METHOD_5 ( ) ; } } ; java . lang . Thread t = new java . lang . Thread ( IDENT_6 ) ; t . start ( ) ; try { t . join ( ) ; } catch ( java . lang . IDENT_7 e ) { e . printStackTrace ( ) ; } java . util . concurrent . IDENT_2 . IDENT_3 IDENT_8 = IDENT_2 . METHOD_2 ( "2" ) ; java . util . concurrent . IDENT_2 . IDENT_3 IDENT_9 = IDENT_2 . METHOD_2 ( "1" ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { return new org . talend . IDENT_0 . METHOD_5 . IDENT_10 . METHOD_6 ( id ) ; }
org . junit . Assert . assertEquals ( IDENT_4 , IDENT_9 ) 