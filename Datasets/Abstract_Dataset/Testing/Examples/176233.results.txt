METHOD_0 ( ) { org . talend . core . repository . utils . IDENT_0 IDENT_1 = new org . talend . core . repository . utils . METHOD_1 ( ) ; org . eclipse . core . resources . IDENT_2 IDENT_3 = org . talend . commons . utils . workbench . resources . IDENT_4 . METHOD_2 ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . eclipse . core . resources . IDENT_2 ) { org . eclipse . IDENT_6 . common . util . URI uri = METHOD_4 ( project ) ; try { if ( ! ( project . METHOD_5 ( org . eclipse . core . resources . IDENT_7 . IDENT_8 ) ) ) { project . METHOD_6 ( org . eclipse . core . resources . IDENT_7 . IDENT_8 , new org . eclipse . core . runtime . METHOD_7 ( ) ) ; } } catch ( org . eclipse . core . runtime . IDENT_9 e ) { org . talend . commons . ui . runtime . exception . IDENT_10 . process ( e ) ; } org . eclipse . core . runtime . IDENT_11 path = org . talend . core . repository . utils . IDENT_12 . convert ( uri ) ; org . eclipse . core . resources . IDENT_13 file = org . eclipse . core . resources . IDENT_14 . METHOD_8 ( ) . METHOD_9 ( ) . METHOD_10 ( path ) ; return file . exists ( ) ; }
org . junit . Assert . assertTrue ( IDENT_1 . METHOD_3 ( IDENT_3 ) ) 