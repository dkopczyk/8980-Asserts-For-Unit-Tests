METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; try { java . util . List < org . talend . utils . IDENT_1 . IDENT_2 > IDENT_3 = org . talend . utils . IDENT_4 . IDENT_5 . METHOD_1 ( IDENT_0 ) ; for ( org . talend . utils . IDENT_1 . IDENT_2 IDENT_6 : IDENT_3 ) { System . out . println ( IDENT_6 . getMessage ( ) ) ; } "<AssertPlaceHolder>" ; } catch ( java . io . IOException e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( e . getMessage ( ) ) ; } catch ( java . net . IDENT_7 e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( e . getMessage ( ) ) ; } } size ( ) { return list . size ( ) ; }
org . junit . Assert . assertEquals ( 5 , IDENT_3 . size ( ) ) 