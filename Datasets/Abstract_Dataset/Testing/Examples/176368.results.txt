METHOD_0 ( ) { final double IDENT_0 = FLOAT_0 ; java . lang . String IDENT_1 = "name" ; java . lang . String IDENT_2 = STRING_0 ; double result = org . talend . utils . string . IDENT_3 . METHOD_1 ( IDENT_1 , IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String ) { double IDENT_4 = 0.0 ; double IDENT_5 = ( ( IDENT_1 . length ( ) ) > ( IDENT_6 . length ( ) ) ) ? IDENT_1 . length ( ) : IDENT_6 . length ( ) ; org . apache . commons . text . IDENT_7 . IDENT_8 IDENT_9 = new org . apache . commons . text . IDENT_7 . METHOD_2 ( ) ; double METHOD_2 = IDENT_9 . apply ( IDENT_6 , IDENT_1 ) ; if ( ( IDENT_1 . contains ( IDENT_6 ) ) || ( IDENT_6 . contains ( IDENT_1 ) ) ) { IDENT_4 = ( ( IDENT_5 - METHOD_2 ) + 1 ) / ( IDENT_5 + 1 ) ; } else { IDENT_4 = 1 - ( METHOD_2 / IDENT_5 ) ; } return IDENT_4 ; }
org . junit . Assert . assertTrue ( ( result == IDENT_0 ) ) 