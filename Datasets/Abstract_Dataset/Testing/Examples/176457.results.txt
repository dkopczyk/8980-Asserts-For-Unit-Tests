METHOD_0 ( ) { int [ ] IDENT_0 = new int [ ] { 0 , - 1 , 3 , 4 } ; org . apache . avro . Schema IDENT_1 = org . apache . avro . IDENT_2 . builder ( ) . record ( STRING_0 ) . METHOD_1 ( IDENT_3 . IDENT_4 , "1" ) . METHOD_1 ( IDENT_5 . IDENT_6 , STRING_1 ) . fields ( ) . name ( STRING_2 ) . type ( ) . METHOD_2 ( ) . METHOD_3 ( ) . name ( STRING_3 ) . type ( ) . METHOD_4 ( ) . METHOD_3 ( ) . name ( STRING_4 ) . type ( ) . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_5 ( ) ; org . apache . avro . Schema IDENT_7 = org . apache . avro . IDENT_2 . builder ( ) . record ( STRING_0 ) . fields ( ) . name ( STRING_2 ) . type ( ) . METHOD_2 ( ) . METHOD_3 ( ) . name ( STRING_5 ) . type ( ) . METHOD_2 ( ) . METHOD_3 ( ) . name ( STRING_6 ) . type ( ) . METHOD_2 ( ) . METHOD_3 ( ) . name ( STRING_3 ) . type ( ) . METHOD_4 ( ) . METHOD_3 ( ) . name ( STRING_4 ) . type ( ) . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_5 ( ) ; org . talend . IDENT_8 . IDENT_9 . IDENT_10 IDENT_11 = new org . talend . IDENT_8 . IDENT_9 . METHOD_6 ( IDENT_1 ) ; int [ ] IDENT_12 = IDENT_11 . METHOD_7 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( org . apache . avro . Schema ) { int [ ] IDENT_13 = new int [ ( IDENT_14 ) + 1 ] ; IDENT_13 [ IDENT_15 ] = IDENT_16 ; for ( int i = 0 ; i < ( IDENT_14 ) ; i ++ ) { org . apache . avro . Schema . Field IDENT_17 = IDENT_18 . get ( i ) ; java . lang . String IDENT_19 = IDENT_17 . name ( ) ; org . apache . avro . Schema . Field IDENT_20 = IDENT_7 . METHOD_8 ( IDENT_19 ) ; if ( i < ( IDENT_15 ) ) { IDENT_13 [ i ] = ( IDENT_20 != null ) ? IDENT_20 . pos ( ) : IDENT_21 ; } else { IDENT_13 [ ( i + 1 ) ] = ( IDENT_20 != null ) ? IDENT_20 . pos ( ) : IDENT_21 ; } } return IDENT_13 ; }
org . junit . Assert . assertArrayEquals ( IDENT_0 , IDENT_12 ) 