METHOD_0 ( ) { IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_3 . data . IDENT_4 model = new IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_3 . data . METHOD_1 ( ) ; model = model . METHOD_2 ( new IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_5 . ast . METHOD_3 ( STRING_0 ) , true ) . METHOD_2 ( new IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_5 . ast . METHOD_3 ( STRING_1 ) , false ) ; IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_5 . ast . IDENT_6 IDENT_7 = parser . parse ( STRING_2 ) ; java . util . Set < IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_3 . data . IDENT_8 > IDENT_9 = IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_10 . IDENT_11 . convert ( IDENT_7 ) . METHOD_4 ( ) ; java . util . List < IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_5 . ast . METHOD_3 > IDENT_12 = new java . util . ArrayList < IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_5 . ast . METHOD_3 > ( IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_10 . IDENT_13 . METHOD_5 ( IDENT_7 ) ) ; boolean IDENT_14 = IDENT_15 . METHOD_6 ( IDENT_9 , IDENT_12 , model ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( java . util . Set , java . util . List , IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_3 . data . METHOD_1 ) { boolean IDENT_16 = true ; java . util . Set < IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_3 . data . IDENT_8 > IDENT_17 = new java . util . METHOD_7 ( ) ; for ( IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_3 . data . IDENT_8 c : IDENT_9 ) { java . lang . Boolean value = model . METHOD_8 ( c ) ; if ( ! ( Boolean . IDENT_18 . equals ( value ) ) ) { IDENT_16 = false ; if ( Boolean . IDENT_19 . equals ( value ) ) { return false ; } IDENT_17 . add ( c ) ; } } if ( IDENT_16 ) { return true ; } else if ( IDENT_0 . core . util . IDENT_20 . METHOD_9 ( ) ) return false ; IDENT_9 = IDENT_17 ; IDENT_0 . core . util . IDENT_21 . IDENT_22 < IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_5 . ast . METHOD_3 , java . lang . Boolean > IDENT_23 = METHOD_10 ( IDENT_12 , IDENT_9 , model ) ; if ( IDENT_23 != null ) { return METHOD_11 ( IDENT_9 , METHOD_12 ( IDENT_12 , IDENT_23 . METHOD_13 ( ) ) , model , IDENT_23 . METHOD_13 ( ) , IDENT_23 . METHOD_14 ( ) ) ; } IDENT_23 = METHOD_15 ( IDENT_9 , model ) ; if ( IDENT_23 != null ) { return METHOD_11 ( IDENT_9 , METHOD_12 ( IDENT_12 , IDENT_23 . METHOD_13 ( ) ) , model , IDENT_23 . METHOD_13 ( ) , IDENT_23 . METHOD_14 ( ) ) ; } IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_5 . ast . METHOD_3 p = IDENT_0 . core . util . IDENT_24 . first ( IDENT_12 ) ; java . util . List < IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_5 . ast . METHOD_3 > rest = IDENT_0 . core . util . IDENT_24 . rest ( IDENT_12 ) ; return ( METHOD_11 ( IDENT_9 , rest , model , p , true ) ) || ( METHOD_11 ( IDENT_9 , rest , model , p , false ) ) ; }
org . junit . Assert . assertEquals ( false , IDENT_14 ) 