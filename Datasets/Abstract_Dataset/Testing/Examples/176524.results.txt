METHOD_0 ( ) { try { org . talend . IDENT_0 . core . model . process . IDENT_1 . connection = new org . talend . IDENT_0 . core . ui . IDENT_2 . IDENT_3 . METHOD_1 ( org . talend . IDENT_0 . core . model . process . IDENT_1 . source , org . talend . IDENT_0 . core . model . process . IDENT_1 . target , org . talend . core . model . process . IDENT_4 . IDENT_5 , IDENT_4 . IDENT_5 . getName ( ) , "test" , "test" , "test" , false ) ; boolean IDENT_6 = org . talend . IDENT_0 . core . model . process . IDENT_7 . METHOD_2 ( org . talend . IDENT_0 . core . model . process . IDENT_1 . source , org . talend . IDENT_0 . core . model . process . IDENT_1 . target , org . talend . IDENT_0 . core . model . process . IDENT_1 . target , IDENT_4 . IDENT_5 , IDENT_4 . IDENT_5 . getName ( ) , "test" ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( STRING_0 ) ; } } getName ( ) { return name ; }
org . junit . Assert . assertTrue ( ( ! IDENT_6 ) ) 