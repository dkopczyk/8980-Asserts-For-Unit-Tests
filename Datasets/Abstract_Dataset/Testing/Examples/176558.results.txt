METHOD_0 ( ) { boolean IDENT_0 = org . talend . commons . IDENT_1 . METHOD_1 ( ) ; try { org . talend . commons . IDENT_1 . METHOD_2 ( true ) ; org . talend . core . model . components . IDENT_2 IDENT_3 = org . talend . core . ui . component . IDENT_4 . getInstance ( ) . get ( STRING_0 , IDENT_5 . IDENT_6 . getName ( ) ) ; org . talend . core . model . properties . IDENT_7 property = IDENT_8 . IDENT_9 . METHOD_3 ( ) ; property . setId ( STRING_1 ) ; property . METHOD_4 ( STRING_2 ) ; property . METHOD_5 ( "test" ) ; org . talend . IDENT_10 . core . ui . IDENT_11 . process . IDENT_12 process = new org . talend . IDENT_10 . core . ui . IDENT_11 . process . METHOD_6 ( property ) ; org . talend . IDENT_10 . core . ui . IDENT_11 . nodes . Node IDENT_13 = new org . talend . IDENT_10 . core . ui . IDENT_11 . nodes . Node ( IDENT_3 , process ) ; process . METHOD_7 ( new org . talend . IDENT_10 . core . ui . IDENT_11 . IDENT_14 . METHOD_8 ( IDENT_13 ) ) ; IDENT_13 . METHOD_9 ( STRING_3 ) . setValue ( STRING_4 ) ; java . util . Set < org . talend . core . model . IDENT_15 . IDENT_16 > IDENT_17 = org . talend . core . IDENT_18 . METHOD_10 ( ) . METHOD_11 ( ) . METHOD_12 ( process , false ) ; org . talend . IDENT_10 . IDENT_19 . IDENT_20 exception = null ; try { org . talend . IDENT_10 . IDENT_19 . java . IDENT_21 . METHOD_13 ( IDENT_17 , process , new java . util . HashSet < org . talend . core . model . IDENT_15 . IDENT_16 > ( ) ) ; } catch ( org . talend . IDENT_10 . IDENT_19 . IDENT_20 e ) { exception = e ; } if ( exception != null ) { "<AssertPlaceHolder>" ; } else { org . junit . Assert . fail ( STRING_5 ) ; } } finally { org . talend . commons . IDENT_1 . METHOD_2 ( IDENT_0 ) ; } } getMessage ( ) { return IDENT_22 ; }
org . junit . Assert . assertTrue ( exception . getMessage ( ) . contains ( STRING_4 ) ) 