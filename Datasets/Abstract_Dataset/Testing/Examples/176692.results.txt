METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . String > m = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; m . put ( STRING_0 , "test" ) ; m . put ( STRING_1 , "test" ) ; m . put ( STRING_2 , "test" ) ; org . talend . IDENT_0 . security . IDENT_1 . IDENT_2 IDENT_3 = new org . talend . IDENT_0 . security . IDENT_1 . METHOD_1 ( m ) ; org . talend . IDENT_0 . job . controller . internal . IDENT_4 registry = new org . talend . IDENT_0 . job . controller . internal . METHOD_2 ( ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_5 = METHOD_3 ( ) ; IDENT_5 . put ( IDENT_6 . IDENT_7 , true ) ; IDENT_8 . IDENT_9 . api . IDENT_10 i = METHOD_4 ( IDENT_5 ) ; registry . METHOD_5 ( METHOD_6 ( org . apache . cxf . IDENT_11 . class ) ) ; registry . METHOD_7 ( new java . util . HashMap < java . lang . String , java . lang . String > ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( IDENT_8 . IDENT_9 . api . IDENT_10 ) { System . out . println ( ( STRING_3 + ( IDENT_12 . METHOD_9 ( ) . get ( STRING_4 ) ) ) ) ; System . out . println ( ( STRING_5 + ( IDENT_12 . METHOD_10 ( ) ) ) ) ; System . out . println ( ( STRING_6 + ( IDENT_12 . METHOD_11 ( ) ) ) ) ; System . out . println ( ( STRING_7 + ( IDENT_12 . METHOD_9 ( ) ) ) ) ; return new IDENT_8 . IDENT_9 . api . METHOD_12 ( ) { public java . lang . Object invoke ( java . lang . Object payload ) throws org . talend . IDENT_0 . job . api . test . Exception { System . out . println ( ( STRING_8 + ( IDENT_12 . METHOD_9 ( ) . get ( STRING_4 ) ) ) ) ; try { java . lang . Thread . sleep ( 1000 ) ; } catch ( java . lang . IDENT_13 e ) { } return METHOD_13 ( STRING_9 ) ; } } ; }
org . junit . Assert . assertNotNull ( registry . METHOD_8 ( i ) ) 