METHOD_0 ( ) { org . IDENT_0 . event . IDENT_1 . IDENT_2 event = new org . IDENT_0 . event . IDENT_1 . METHOD_1 ( IDENT_3 , org . IDENT_0 . event . block . IDENT_4 . IDENT_5 , item , IDENT_6 , org . IDENT_0 . block . IDENT_7 . IDENT_8 ) ; when ( IDENT_9 . METHOD_2 ( any ( org . IDENT_0 . IDENT_10 . class ) ) ) . thenReturn ( false ) ; when ( IDENT_9 . METHOD_2 ( any ( org . IDENT_0 . IDENT_11 . class ) ) ) . thenReturn ( false ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . IDENT_0 . event . IDENT_1 . METHOD_1 ) { if ( ( e . METHOD_4 ( ) . equals ( IDENT_4 . IDENT_5 ) ) && ( ( ( e . METHOD_5 ( ) ) == ( org . IDENT_0 . IDENT_12 . IDENT_13 ) ) || ( ( e . METHOD_5 ( ) ) == ( org . IDENT_0 . IDENT_12 . IDENT_14 ) ) ) ) { METHOD_6 ( e , e . METHOD_7 ( ) , e . METHOD_8 ( ) . METHOD_9 ( ) , IDENT_15 . IDENT_13 ) ; } try { org . IDENT_0 . util . IDENT_16 IDENT_17 = new org . IDENT_0 . util . METHOD_10 ( e . METHOD_7 ( ) , 10 ) ; while ( IDENT_17 . hasNext ( ) ) { org . IDENT_0 . block . IDENT_18 IDENT_19 = IDENT_17 . next ( ) ; if ( IDENT_19 . getType ( ) . equals ( IDENT_12 . IDENT_20 ) ) { METHOD_6 ( e , e . METHOD_7 ( ) , IDENT_19 . METHOD_9 ( ) , IDENT_15 . IDENT_21 ) ; } } } catch ( java . lang . Exception ex ) { } }
org . junit . Assert . assertFalse ( listener . METHOD_3 ( event ) ) 