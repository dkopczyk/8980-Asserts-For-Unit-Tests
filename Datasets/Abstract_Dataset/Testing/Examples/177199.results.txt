METHOD_0 ( ) { com . IDENT_0 . config . IDENT_1 IDENT_2 = com . IDENT_0 . config . IDENT_3 . load ( ) ; io . github . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 IDENT_8 = METHOD_1 ( IDENT_2 ) ; io . github . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 IDENT_9 = METHOD_1 ( IDENT_2 ) ; io . github . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 IDENT_10 = METHOD_1 ( IDENT_2 ) ; java . lang . String IDENT_11 = STRING_0 ; java . lang . String IDENT_12 = STRING_1 ; java . lang . String IDENT_13 = STRING_2 ; java . lang . String IDENT_14 = STRING_3 ; java . lang . String IDENT_15 = STRING_4 ; java . lang . String IDENT_16 = STRING_5 ; java . util . concurrent . IDENT_17 < ? > IDENT_18 = new java . util . concurrent . METHOD_2 ( ) ; java . util . concurrent . METHOD_2 < ? > IDENT_19 = new java . util . concurrent . METHOD_2 ( ) ; java . util . concurrent . METHOD_2 < ? > IDENT_20 = new java . util . concurrent . METHOD_2 ( ) ; java . util . concurrent . IDENT_21 < java . lang . String , java . util . concurrent . METHOD_2 < ? > > IDENT_22 = com . google . common . collect . IDENT_23 . METHOD_3 ( ) ; IDENT_22 . put ( IDENT_14 , IDENT_18 ) ; IDENT_22 . put ( IDENT_15 , IDENT_19 ) ; METHOD_4 ( IDENT_8 , METHOD_5 ( IDENT_11 , IDENT_12 ) , METHOD_6 ( IDENT_22 ) ) ; java . util . concurrent . IDENT_21 < java . lang . String , java . util . concurrent . METHOD_2 < ? > > IDENT_24 = com . google . common . collect . IDENT_23 . METHOD_3 ( ) ; IDENT_24 . put ( IDENT_16 , IDENT_20 ) ; METHOD_4 ( IDENT_9 , METHOD_5 ( IDENT_13 ) , METHOD_6 ( IDENT_24 ) ) ; METHOD_7 ( IDENT_10 , IDENT_25 . IDENT_26 , IDENT_11 , IDENT_14 ) ; METHOD_7 ( IDENT_10 , IDENT_25 . IDENT_26 , IDENT_12 , IDENT_15 ) ; METHOD_7 ( IDENT_10 , IDENT_25 . IDENT_26 , IDENT_13 , IDENT_16 ) ; java . util . concurrent . METHOD_2 < java . lang . IDENT_27 > IDENT_28 = java . util . concurrent . METHOD_2 . METHOD_8 ( IDENT_18 , IDENT_19 , IDENT_20 ) ; IDENT_28 . get ( 1 , TimeUnit . IDENT_29 ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( ) { return delegate . METHOD_9 ( ) ; }
org . junit . Assert . assertFalse ( IDENT_28 . METHOD_9 ( ) ) 