METHOD_0 ( ) { io . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = mock ( io . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . class ) ; when ( IDENT_4 . METHOD_1 ( ) ) . thenReturn ( io . github . IDENT_0 . IDENT_1 . support . TestUtils . METHOD_2 ( io . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . IDENT_6 ) ) ; io . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 IDENT_8 = new io . github . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_3 ( io . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . IDENT_6 , IDENT_9 ) ; IDENT_8 . METHOD_4 ( IDENT_10 ) ; IDENT_8 . METHOD_4 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_9 , times ( 1 ) ) . METHOD_5 ( io . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . IDENT_6 , IDENT_8 ) ; } METHOD_4 ( io . github . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) { java . lang . String IDENT_11 = IDENT_2 . METHOD_1 ( ) . METHOD_6 ( ) ; IDENT_12 . METHOD_7 ( IDENT_11 , IDENT_2 ) ; if ( ! ( IDENT_13 ) ) { MOD_0 ( this ) { if ( ! ( IDENT_13 ) ) { IDENT_14 . METHOD_5 ( IDENT_15 , this ) ; IDENT_13 = true ; } } } }
org . junit . Assert . assertEquals ( 2 , IDENT_8 . IDENT_12 . size ( ) ) 