METHOD_0 ( ) { info . IDENT_0 . java . IDENT_1 . IDENT_2 IDENT_3 = new info . IDENT_0 . java . IDENT_1 . METHOD_1 ( 100 , 100 , INT_0 ) ; info . IDENT_0 . java . IDENT_1 . METHOD_1 IDENT_4 = new info . IDENT_0 . java . IDENT_1 . METHOD_1 ( 100 , 100 , INT_0 ) ; java . util . IDENT_5 r = new java . util . METHOD_2 ( ) ; java . util . Set < java . lang . Integer > IDENT_6 = new java . util . HashSet < java . lang . Integer > ( ) ; for ( int i = 0 ; i < 50 ; i ++ ) { IDENT_6 . add ( r . METHOD_3 ( ) ) ; } "<AssertPlaceHolder>" ; } METHOD_4 ( java . util . Set ) { int [ ] IDENT_7 = new int [ n ] ; for ( int i = 0 ; i < ( n ) ; i ++ ) { IDENT_7 [ i ] = Integer . MAX_VALUE ; } final java . util . List < java . lang . Integer > list = new java . util . ArrayList < java . lang . Integer > ( set ) ; java . util . Collections . METHOD_5 ( list ) ; for ( final int r : list ) { for ( int i = 0 ; i < ( n ) ; i ++ ) { IDENT_7 [ i ] = java . lang . Math . min ( IDENT_7 [ i ] , METHOD_6 ( i , r ) ) ; } } return IDENT_7 ; }
org . junit . Assert . assertArrayEquals ( IDENT_3 . METHOD_4 ( IDENT_6 ) , IDENT_4 . METHOD_4 ( IDENT_6 ) ) 