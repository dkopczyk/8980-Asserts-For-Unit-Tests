METHOD_0 ( ) { org . teiid . query . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = org . teiid . query . IDENT_0 . IDENT_4 . METHOD_1 ( ) ; IDENT_3 . METHOD_2 ( IDENT_5 . IDENT_6 , true ) ; org . teiid . query . processor . IDENT_7 plan = org . teiid . query . IDENT_0 . IDENT_4 . METHOD_3 ( STRING_0 , org . teiid . query . IDENT_0 . IDENT_4 . METHOD_4 ( ) , new java . lang . String [ ] { STRING_1 } , new org . teiid . query . IDENT_0 . IDENT_1 . METHOD_5 ( IDENT_3 ) , IDENT_4 . IDENT_8 . IDENT_9 ) ; org . teiid . query . IDENT_0 . IDENT_4 . METHOD_6 ( plan , IDENT_4 . IDENT_10 ) ; java . util . List < ? > [ ] expected = new java . util . List < ? > [ ] { java . util . Arrays . asList ( new java . lang . Object [ ] { "a" , 2 , 1 } ) } ; org . teiid . query . processor . IDENT_11 IDENT_12 = new org . teiid . query . processor . METHOD_7 ( org . teiid . query . IDENT_13 . IDENT_14 . METHOD_8 ( ) ) ; IDENT_12 . METHOD_9 ( STRING_2 , new java . util . List < ? > [ ] { java . util . Arrays . asList ( "a" , 1 ) } ) ; IDENT_12 . METHOD_9 ( STRING_3 , new java . util . List < ? > [ ] { java . util . Arrays . asList ( "a" , 2 , 1 ) } ) ; org . teiid . query . processor . IDENT_15 . IDENT_15 . METHOD_10 ( plan , IDENT_12 , expected ) ; org . teiid . IDENT_16 . IDENT_17 select = ( ( org . teiid . IDENT_16 . IDENT_17 ) ( IDENT_12 . METHOD_11 ( ) . get ( 1 ) ) ) ; java . util . List < ? extends java . util . List < ? > > IDENT_18 = select . METHOD_12 ( ) . METHOD_13 ( ) . get ( 0 ) . METHOD_14 ( ) ; "<AssertPlaceHolder>" ; } size ( ) { return size ; }
org . junit . Assert . assertEquals ( 1 , IDENT_18 . size ( ) ) 