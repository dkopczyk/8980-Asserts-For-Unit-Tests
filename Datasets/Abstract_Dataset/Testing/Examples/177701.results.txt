METHOD_0 ( ) { org . teiid . query . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = org . teiid . query . processor . IDENT_4 . METHOD_1 ( ) ; IDENT_3 . METHOD_2 ( IDENT_5 . IDENT_6 , true ) ; org . teiid . query . IDENT_0 . IDENT_1 . IDENT_7 IDENT_8 = new org . teiid . query . IDENT_0 . IDENT_1 . METHOD_3 ( IDENT_3 ) ; org . teiid . query . processor . IDENT_9 plan = METHOD_4 ( STRING_0 , org . teiid . query . IDENT_10 . IDENT_11 . METHOD_5 ( ) , new java . lang . String [ ] { STRING_1 } , IDENT_8 , IDENT_12 . IDENT_13 ) ; "<AssertPlaceHolder>" ; METHOD_6 ( plan , org . teiid . query . processor . IDENT_14 ) ; org . teiid . query . processor . IDENT_15 IDENT_16 = new org . teiid . query . processor . METHOD_7 ( org . teiid . query . IDENT_10 . IDENT_11 . METHOD_5 ( ) ) ; IDENT_16 . METHOD_8 ( STRING_2 , java . util . Arrays . asList ( true ) ) ; org . teiid . query . processor . IDENT_17 . METHOD_9 ( plan , IDENT_16 , new java . util . List < ? > [ ] { java . util . Arrays . asList ( true ) } ) ; } METHOD_10 ( boolean ) { if ( ! ( IDENT_18 ) ) { for ( int i = 0 ; i < ( IDENT_19 . length ) ; i ++ ) { java . lang . Boolean IDENT_20 = IDENT_19 [ i ] . METHOD_10 ( IDENT_21 ) ; if ( ( IDENT_20 != null ) && IDENT_20 ) { IDENT_22 [ i ] = true ; } } return false ; } boolean IDENT_23 = false ; for ( int i = 0 ; i < ( IDENT_19 . length ) ; i ++ ) { java . lang . Boolean IDENT_20 = IDENT_19 [ i ] . METHOD_10 ( IDENT_21 ) ; if ( IDENT_20 != null ) { if ( IDENT_20 ) { return true ; } } else { if ( IDENT_23 ) { return true ; } IDENT_23 = true ; } } if ( IDENT_23 ) { return null ; } return false ; }
org . junit . Assert . assertNull ( plan . METHOD_10 ( true ) ) 