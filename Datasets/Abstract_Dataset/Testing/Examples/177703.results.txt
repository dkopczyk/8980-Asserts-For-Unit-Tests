METHOD_0 ( ) { org . teiid . metadata . IDENT_0 IDENT_1 = new org . teiid . metadata . METHOD_1 ( ) ; org . teiid . metadata . Schema v1 = org . teiid . query . IDENT_2 . IDENT_3 . METHOD_2 ( STRING_0 0 , IDENT_1 ) ; org . teiid . metadata . Schema IDENT_4 = org . teiid . query . IDENT_2 . IDENT_3 . METHOD_3 ( STRING_1 , IDENT_1 ) ; org . teiid . metadata . IDENT_5 in = org . teiid . query . IDENT_2 . IDENT_3 . METHOD_4 ( STRING_2 , IDENT_6 . IDENT_7 , IDENT_8 . IDENT_9 . IDENT_10 ) ; org . teiid . metadata . IDENT_11 < org . teiid . metadata . IDENT_12 > IDENT_13 = org . teiid . query . IDENT_2 . IDENT_3 . METHOD_5 ( STRING_3 , new java . lang . String [ ] { STRING_4 , STRING_5 , STRING_0 1 , STRING_6 , STRING_7 } , new java . lang . String [ ] { IDENT_8 . IDENT_9 . IDENT_10 , IDENT_8 . IDENT_9 . IDENT_10 , IDENT_8 . IDENT_9 . IDENT_10 , IDENT_8 . IDENT_9 . IDENT_10 , IDENT_8 . IDENT_9 . IDENT_10 } ) ; org . teiid . query . mapping . IDENT_14 . IDENT_15 IDENT_16 = new org . teiid . query . mapping . IDENT_14 . METHOD_6 ( STRING_0 3 ) ; org . teiid . metadata . IDENT_12 IDENT_17 = org . teiid . query . IDENT_2 . IDENT_3 . METHOD_7 ( STRING_0 2 , v1 , java . util . Arrays . asList ( in ) , IDENT_16 ) ; IDENT_17 . METHOD_8 ( IDENT_13 ) ; org . teiid . metadata . IDENT_5 IDENT_18 = org . teiid . query . IDENT_2 . IDENT_3 . METHOD_4 ( STRING_2 , IDENT_6 . IDENT_7 , IDENT_8 . IDENT_9 . IDENT_10 ) ; org . teiid . metadata . IDENT_11 < org . teiid . metadata . IDENT_12 > IDENT_19 = org . teiid . query . IDENT_2 . IDENT_3 . METHOD_5 ( STRING_0 4 , new java . lang . String [ ] { STRING_4 } , new java . lang . String [ ] { IDENT_8 . IDENT_9 . IDENT_10 } ) ; org . teiid . metadata . IDENT_12 IDENT_20 = org . teiid . query . IDENT_2 . IDENT_3 . METHOD_9 ( STRING_0 , IDENT_4 , java . util . Arrays . asList ( IDENT_18 ) ) ; IDENT_20 . METHOD_8 ( IDENT_19 ) ; java . lang . String sql = STRING_8 ; java . util . List < ? > [ ] expected = new java . util . List [ ] { java . util . Arrays . asList ( 1 , 1 , 3 , 3 , 5 ) , java . util . Arrays . asList ( 1 , 1 , 3 , 3 , 8 ) , java . util . Arrays . asList ( 1 , 1 , 6 , 6 , 8 ) , java . util . Arrays . asList ( 1 , 1 , 6 , 6 , INT_0 ) } ; org . teiid . query . metadata . IDENT_21 metadata = org . teiid . query . IDENT_2 . IDENT_3 . METHOD_10 ( IDENT_1 , "foo" ) ; org . teiid . query . processor . IDENT_22 plan = org . teiid . query . processor . IDENT_23 . IDENT_24 . METHOD_11 ( sql , metadata ) ; org . teiid . query . processor . IDENT_25 IDENT_26 = new org . teiid . query . processor . METHOD_12 ( ) { @ org . teiid . query . processor . Override public org . teiid . common . buffer . IDENT_27 METHOD_13 ( org . teiid . query . util . IDENT_28 context , org . teiid . query . sql . lang . IDENT_29 command , java . lang . String IDENT_30 , org . teiid . query . processor . IDENT_31 IDENT_32 ) throws org . teiid . core . IDENT_33 { if ( command instanceof org . teiid . query . sql . lang . IDENT_34 ) { org . teiid . query . sql . lang . IDENT_34 IDENT_23 = ( ( org . teiid . query . sql . lang . IDENT_34 ) ( command ) ) ; java . util . List < org . teiid . query . sql . lang . IDENT_6 > params = IDENT_23 . METHOD_14 ( ) ; "<AssertPlaceHolder>" ; int value = ( ( java . lang . Integer ) ( ( ( org . teiid . query . sql . IDENT_35 . IDENT_36 ) ( params . get ( 0 ) . METHOD_15 ( ) ) ) . getValue ( ) ) ) ; return new org . teiid . query . processor . METHOD_16 ( command . METHOD_17 ( ) , new java . util . List [ ] { java . util . Arrays . asList ( ( value + 2 ) ) , java . util . Arrays . asList ( ( value + 5 ) ) } ) ; } return super . METHOD_13 ( context , command , IDENT_30 , IDENT_32 ) ; } } ; org . teiid . query . processor . IDENT_23 . IDENT_24 . METHOD_18 ( plan , expected , IDENT_26 , metadata ) ; } size ( ) { return size ; }
org . junit . Assert . assertEquals ( 1 , params . size ( ) ) 