METHOD_0 ( ) { execute ( STRING_0 , new java . util . List [ ] { java . util . Arrays . asList ( 0 ) } ) ; execute ( STRING_1 , new java . util . List [ ] { java . util . Arrays . asList ( 1 ) } ) ; execute ( STRING_2 , new java . util . List [ ] { java . util . Arrays . asList ( 1 ) } ) ; try { execute ( STRING_3 , new java . util . List [ ] { java . util . Arrays . asList ( 1 ) } ) ; } catch ( org . teiid . core . IDENT_0 e ) { } execute ( STRING_4 , new java . util . List [ ] { java . util . Arrays . asList ( 2 ) } ) ; java . lang . Thread t = new java . lang . Thread ( ) { public void run ( ) { try { execute ( STRING_5 , new java . util . List [ ] { java . util . Arrays . asList ( 2 ) } ) ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; } } } ; t . start ( ) ; t . join ( INT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( ) { try { javax . IDENT_1 . IDENT_2 < javax . IDENT_1 . directory . IDENT_3 > result = this . IDENT_4 . search ( "" , STRING_6 , org . teiid . resource . adapter . ldap . IDENT_5 . IDENT_6 ) ; if ( result . METHOD_2 ( ) ) { result . next ( ) ; } } catch ( javax . IDENT_1 . IDENT_7 e ) { return false ; } org . teiid . logging . IDENT_8 . METHOD_3 ( IDENT_9 . IDENT_10 , STRING_7 ) ; return true ; }
org . junit . Assert . assertFalse ( t . METHOD_1 ( ) ) 