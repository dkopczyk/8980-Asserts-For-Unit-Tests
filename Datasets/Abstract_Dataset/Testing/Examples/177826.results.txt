METHOD_0 ( ) { final org . teiid . client . util . IDENT_0 < java . lang . IDENT_1 > future = new org . teiid . client . util . IDENT_0 < java . lang . IDENT_1 > ( ) ; java . lang . Thread t = new java . lang . Thread ( ) { @ org . teiid . jdbc . Override public void run ( ) { try { org . teiid . jdbc . IDENT_2 . server . METHOD_1 ( STRING_0 ) ; future . METHOD_2 ( ) . METHOD_3 ( null ) ; } catch ( java . lang . Exception e ) { future . METHOD_2 ( ) . METHOD_4 ( e ) ; } } } ; t . METHOD_5 ( true ) ; t . start ( ) ; "<AssertPlaceHolder>" ; try { org . teiid . jdbc . IDENT_2 . server . METHOD_6 ( STRING_1 , ( ( org . teiid . core . util . IDENT_3 . METHOD_7 ( ) ) + STRING_2 ) ) ; future . get ( INT_0 , TimeUnit . IDENT_4 ) ; } finally { org . teiid . jdbc . IDENT_2 . server . METHOD_8 ( STRING_1 ) ; } try { org . teiid . jdbc . IDENT_2 . server . METHOD_1 ( STRING_3 ) ; org . junit . Assert . fail ( ) ; } catch ( org . teiid . jdbc . IDENT_5 e ) { } } METHOD_9 ( ) { return IDENT_6 ; }
org . junit . Assert . assertFalse ( future . METHOD_9 ( ) ) 