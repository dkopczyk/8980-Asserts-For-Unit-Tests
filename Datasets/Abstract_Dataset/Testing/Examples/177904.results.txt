METHOD_0 ( ) { IDENT_0 . METHOD_1 ( ) ; System . out . println ( ( ( METHOD_2 ( STRING_0 ) ) + STRING_1 ) ) ; java . lang . Thread IDENT_1 = new java . lang . Thread ( STRING_2 ) { public void run ( ) { METHOD_3 ( this . getName ( ) ) ; } } ; System . out . println ( STRING_3 ) ; IDENT_1 . start ( ) ; java . lang . Thread IDENT_2 = new java . lang . Thread ( STRING_4 ) { public void run ( ) { METHOD_3 ( this . getName ( ) ) ; } } ; System . out . println ( STRING_5 ) ; IDENT_2 . start ( ) ; System . out . println ( STRING_6 ) ; com . IDENT_3 . iot . IDENT_4 . nodes . IDENT_5 . IDENT_6 IDENT_7 = new com . IDENT_3 . iot . IDENT_4 . nodes . IDENT_5 . METHOD_4 ( ) ; IDENT_7 . start ( ) ; System . out . println ( STRING_0 1 ) ; MOD_0 ( IDENT_1 ) { IDENT_1 . METHOD_5 ( ) ; } try { IDENT_1 . join ( ) ; } catch ( java . lang . IDENT_8 e ) { System . out . println ( STRING_7 ) ; } System . out . println ( STRING_8 ) ; MOD_0 ( IDENT_2 ) { IDENT_2 . METHOD_5 ( ) ; } try { IDENT_2 . join ( ) ; } catch ( java . lang . IDENT_8 e ) { System . out . println ( STRING_7 ) ; } System . out . println ( STRING_0 0 ) ; try { java . lang . Thread . sleep ( INT_0 ) ; } catch ( java . lang . IDENT_8 e ) { System . out . println ( STRING_0 3 ) ; } System . out . println ( STRING_9 ) ; IDENT_7 . METHOD_6 ( ) ; System . out . println ( ( STRING_0 2 + ( IDENT_0 . METHOD_7 ( ) ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ) { return IDENT_9 . get ( ) ; }
org . junit . Assert . assertTrue ( ( ! ( IDENT_0 . METHOD_7 ( ) ) ) ) 