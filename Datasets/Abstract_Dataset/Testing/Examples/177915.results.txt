METHOD_0 ( ) { System . out . println ( STRING_0 ) ; java . lang . String token = "" ; System . out . println ( STRING_1 ) ; IDENT_0 . METHOD_1 ( 1 ) ; try { System . out . println ( ( ( STRING_2 + ( IDENT_1 ) ) + ( IDENT_2 ) ) ) ; token = IDENT_0 . METHOD_2 ( user , IDENT_3 , IDENT_1 , IDENT_2 ) ; System . out . println ( ( STRING_3 + token ) ) ; System . out . println ( STRING_4 ) ; java . lang . Thread . sleep ( INT_0 ) ; System . out . println ( ( ( STRING_2 + ( IDENT_1 ) ) + ( IDENT_2 ) ) ) ; token = IDENT_0 . METHOD_2 ( user , IDENT_3 , IDENT_1 , IDENT_2 ) ; System . out . println ( ( STRING_3 + token ) ) ; "<AssertPlaceHolder>" ; } catch ( com . IDENT_4 . iot . IDENT_5 . errors . IDENT_6 e ) { System . out . println ( e . getMessage ( ) ) ; org . junit . Assert . fail ( e . getMessage ( ) ) ; } catch ( com . IDENT_4 . iot . IDENT_5 . errors . IDENT_7 e ) { System . out . println ( e . getMessage ( ) ) ; org . junit . Assert . fail ( e . getMessage ( ) ) ; } catch ( java . lang . IDENT_8 e ) { System . out . println ( e . getMessage ( ) ) ; org . junit . Assert . fail ( e . getMessage ( ) ) ; } } METHOD_2 ( java . lang . String , java . lang . String , java . lang . String , java . lang . String ) { try { return IDENT_9 . METHOD_3 ( IDENT_1 , IDENT_2 ) ; } catch ( com . IDENT_4 . iot . IDENT_5 . errors . IDENT_10 e ) { if ( IDENT_9 . METHOD_4 ( IDENT_1 , com . IDENT_4 . iot . IDENT_5 . utils . auth . IDENT_11 . IDENT_12 . IDENT_13 ) ) { return METHOD_5 ( user , IDENT_3 , IDENT_1 , com . IDENT_4 . iot . IDENT_5 . utils . auth . IDENT_11 . IDENT_12 . IDENT_13 ) ; } else { return METHOD_5 ( user , IDENT_3 , IDENT_1 , IDENT_2 ) ; } } catch ( com . IDENT_4 . iot . IDENT_5 . errors . IDENT_6 e ) { try { return METHOD_5 ( user , IDENT_3 , IDENT_1 , com . IDENT_4 . iot . IDENT_5 . utils . auth . IDENT_11 . IDENT_12 . IDENT_13 ) ; } catch ( java . lang . Exception IDENT_14 ) { return METHOD_5 ( user , IDENT_3 , IDENT_1 , IDENT_2 ) ; } } }
org . junit . Assert . assertTrue ( ( ! ( token . equals ( "" ) ) ) ) 