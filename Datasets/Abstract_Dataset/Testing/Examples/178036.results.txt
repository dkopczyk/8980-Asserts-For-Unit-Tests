METHOD_0 ( ) { System . out . println ( ( ( METHOD_1 ( STRING_0 ) ) + STRING_1 ) ) ; java . lang . String IDENT_0 = null ; java . lang . String IDENT_1 = null ; java . lang . String IDENT_2 = null ; java . lang . String IDENT_3 = null ; java . lang . String IDENT_4 = STRING_2 ; com . IDENT_5 . iot . IDENT_6 . IDENT_7 . IDENT_8 IDENT_9 = new com . IDENT_5 . iot . IDENT_6 . IDENT_7 . METHOD_2 ( ) ; IDENT_9 . METHOD_3 ( METHOD_4 ( IDENT_0 , IDENT_1 , IDENT_2 , IDENT_3 , IDENT_4 ) ) ; try { boolean [ ] expected = new boolean [ ] { true , false , false , false , true } ; "<AssertPlaceHolder>" ; System . out . println ( ( ( METHOD_1 ( STRING_0 ) ) + STRING_3 ) ) ; } catch ( java . lang . IDENT_10 e ) { System . out . println ( ( ( METHOD_1 ( STRING_0 ) ) + STRING_4 ) ) ; throw e ; } METHOD_4 ( java . lang . String , java . lang . String , java . lang . String , java . lang . String , java . lang . String ) { org . apache . IDENT_11 . Context context = com . IDENT_5 . iot . IDENT_6 . utils . IDENT_12 . METHOD_5 ( IDENT_0 , IDENT_1 , IDENT_2 , IDENT_3 ) ; context . put ( STRING_5 , IDENT_4 ) ; return context ; }
org . junit . Assert . assertTrue ( java . util . Arrays . equals ( expected , IDENT_9 . IDENT_4 ) ) 