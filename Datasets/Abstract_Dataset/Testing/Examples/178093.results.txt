METHOD_0 ( ) { @ org . IDENT_0 . IDENT_1 . command . METHOD_1 ( STRING_0 ) java . util . concurrent . IDENT_2 < org . IDENT_0 . IDENT_1 . command . IDENT_3 > IDENT_4 = METHOD_2 ( java . util . concurrent . IDENT_2 . class ) ; expect ( IDENT_4 . METHOD_3 ( ) ) . andReturn ( true ) ; expect ( IDENT_4 . METHOD_4 ( ) ) . andReturn ( true ) ; @ org . IDENT_0 . IDENT_1 . command . METHOD_1 ( STRING_0 ) java . util . concurrent . IDENT_2 < org . IDENT_0 . IDENT_1 . command . IDENT_3 > IDENT_5 = METHOD_2 ( java . util . concurrent . IDENT_2 . class ) ; expect ( IDENT_5 . METHOD_3 ( ) ) . andReturn ( false ) . andReturn ( true ) ; expect ( IDENT_5 . METHOD_4 ( ) ) . andReturn ( true ) ; java . util . IDENT_6 < org . IDENT_0 . IDENT_1 . service . IDENT_7 . IDENT_8 > IDENT_9 = new java . util . METHOD_5 ( ) ; IDENT_9 . add ( new org . IDENT_0 . IDENT_1 . service . IDENT_7 . METHOD_6 ( METHOD_2 ( org . IDENT_0 . IDENT_1 . command . IDENT_3 . class ) , IDENT_5 ) ) ; IDENT_9 . add ( new org . IDENT_0 . IDENT_1 . service . IDENT_7 . METHOD_6 ( METHOD_2 ( org . IDENT_0 . IDENT_1 . command . IDENT_3 . class ) , IDENT_4 ) ) ; expect ( IDENT_10 . METHOD_7 ( ) ) . andReturn ( IDENT_9 ) ; IDENT_11 . METHOD_8 ( IDENT_9 . get ( 1 ) ) ; IDENT_11 . METHOD_8 ( IDENT_9 . get ( 0 ) ) ; METHOD_9 ( ) ; execute ( ) ; "<AssertPlaceHolder>" ; } execute ( ) { org . IDENT_0 . IDENT_1 . command . IDENT_12 command = new org . IDENT_0 . IDENT_1 . command . METHOD_10 ( METHOD_11 ( ) , IDENT_10 ) ; command . call ( ) ; }
org . junit . Assert . assertTrue ( IDENT_9 . isEmpty ( ) ) 