METHOD_0 ( ) { try { byte [ ] IDENT_0 = com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_5 . IDENT_6 , com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_5 . IDENT_7 ) ; java . lang . StringBuilder IDENT_8 = new java . lang . StringBuilder ( ) ; for ( int i = 0 ; i < ( IDENT_0 . length ) ; ++ i ) { java . lang . String IDENT_9 = java . lang . Integer . METHOD_2 ( ( ( IDENT_0 [ i ] ) & 255 ) ) ; if ( ( IDENT_9 . length ( ) ) == 1 ) { IDENT_8 . append ( STRING_0 ) ; } IDENT_8 . append ( IDENT_9 ) ; } java . lang . String IDENT_10 = STRING_1 ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( ) ; } } equals ( java . lang . Object ) { if ( ( this ) == obj ) { return true ; } if ( ( ( ( ( com . IDENT_1 . IDENT_2 . meta . IDENT_11 ) ( obj ) ) . METHOD_3 ( ) ) == ( this . IDENT_12 ) ) && ( ( ( ( com . IDENT_1 . IDENT_2 . meta . IDENT_11 ) ( obj ) ) . METHOD_4 ( ) ) == ( this . IDENT_13 ) ) ) { return true ; } else { return false ; } }
org . junit . Assert . assertTrue ( IDENT_10 . equals ( IDENT_8 . toString ( ) ) ) 