METHOD_0 ( ) { java . lang . Exception exception = new org . IDENT_0 . IDENT_1 . common . exception . METHOD_1 ( "" , STRING_0 ) ; org . IDENT_0 . IDENT_1 . common . exception . IDENT_2 IDENT_3 = IDENT_4 . METHOD_2 ( exception ) ; org . IDENT_0 . IDENT_1 . common . exception . IDENT_2 IDENT_5 = org . IDENT_0 . IDENT_1 . common . exception . IDENT_2 . IDENT_6 ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . Exception ) { java . lang . String IDENT_7 = METHOD_3 ( ex ) ; if ( ( IDENT_7 == null ) || ( IDENT_7 . isEmpty ( ) ) ) { return IDENT_2 . IDENT_6 ; } java . lang . String IDENT_8 = IDENT_7 . substring ( 0 , 1 ) ; if ( STRING_1 . equalsIgnoreCase ( IDENT_8 ) ) { return IDENT_2 . IDENT_6 ; } if ( STRING_2 . equalsIgnoreCase ( IDENT_8 ) ) { return IDENT_2 . IDENT_9 ; } if ( STRING_3 . equalsIgnoreCase ( IDENT_8 ) ) { return IDENT_2 . IDENT_10 ; } return IDENT_2 . IDENT_6 ; }
org . junit . Assert . assertThat ( IDENT_3 , org . hamcrest . CoreMatchers . is ( IDENT_5 ) ) 