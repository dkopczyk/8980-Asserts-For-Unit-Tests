METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_2 = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( ) . command ( STRING_0 , STRING_1 , STRING_2 ) . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( STRING_3 , STRING_4 ) . build ( ) ; try { IDENT_2 . METHOD_5 ( 1 , TimeUnit . IDENT_4 ) ; org . junit . Assert . fail ( ) ; } catch ( java . util . concurrent . IDENT_5 IDENT_6 ) { } "<AssertPlaceHolder>" ; } METHOD_5 ( long , java . util . concurrent . TimeUnit ) { if ( ! ( METHOD_6 ( ) ) ) { return process . METHOD_7 ( ) ; } try { return future . get ( time , unit ) ; } catch ( java . util . concurrent . IDENT_7 e ) { if ( ( e . METHOD_8 ( ) ) instanceof java . lang . IDENT_8 ) { throw ( ( java . lang . IDENT_8 ) ( e . METHOD_8 ( ) ) ) ; } if ( ( e . METHOD_8 ( ) ) instanceof java . lang . IDENT_9 ) { throw ( ( java . lang . IDENT_9 ) ( e . METHOD_8 ( ) ) ) ; } if ( ( e . METHOD_8 ( ) ) instanceof java . lang . RuntimeException ) { throw ( ( java . lang . RuntimeException ) ( e . METHOD_8 ( ) ) ) ; } throw new java . lang . RuntimeException ( e . METHOD_8 ( ) ) ; } }
org . junit . Assert . assertEquals ( 0 , IDENT_2 . METHOD_5 ( 3 , TimeUnit . IDENT_4 ) ) 