METHOD_0 ( ) { java . util . Properties properties = new java . util . Properties ( ) ; properties . put ( IDENT_0 . IDENT_1 , STRING_0 ) ; properties . put ( IDENT_0 . IDENT_2 , STRING_1 ) ; java . net . IDENT_3 server = java . net . IDENT_3 . METHOD_1 ( STRING_2 , 0 ) ; org . IDENT_4 . connection . IDENT_5 connection = org . IDENT_4 . connection . IDENT_6 . connect ( java . util . Collections . singletonList ( server ) , properties ) ; org . IDENT_4 . IDENT_7 . IDENT_8 IDENT_9 = org . IDENT_4 . IDENT_7 . IDENT_10 . METHOD_2 ( connection ) ; org . IDENT_4 . IDENT_7 . IDENT_11 . METHOD_3 ( IDENT_9 ) ; org . IDENT_4 . IDENT_7 . IDENT_12 IDENT_13 = IDENT_9 . METHOD_4 ( ) ; java . lang . Thread . sleep ( INT_0 ) ; org . IDENT_4 . IDENT_7 . IDENT_12 IDENT_14 = IDENT_9 . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( org . IDENT_4 . IDENT_7 . IDENT_12 ) { if ( ! ( IDENT_15 instanceof org . IDENT_4 . IDENT_7 . IDENT_16 ) ) { return false ; } org . IDENT_4 . IDENT_7 . IDENT_16 IDENT_17 = ( ( org . IDENT_4 . IDENT_7 . IDENT_16 ) ( IDENT_15 ) ) ; if ( ( IDENT_18 ) != ( IDENT_17 . IDENT_18 ) ) { return false ; } return isValid ( ) ; }
org . junit . Assert . assertTrue ( IDENT_14 . METHOD_5 ( IDENT_13 ) ) 