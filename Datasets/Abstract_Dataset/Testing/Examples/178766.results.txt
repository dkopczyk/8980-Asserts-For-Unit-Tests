METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 < org . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 > IDENT_5 = org . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_1 ( org . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 . class ) . mapping ( org . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 . IDENT_7 , 1 ) . mapping ( org . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 . IDENT_8 , 2 ) . mapping ( org . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 . IDENT_9 , 3 ) . build ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 < java . lang . IDENT_10 > IDENT_11 = org . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_1 ( org . IDENT_0 . IDENT_1 . IDENT_10 . class ) . mapping ( org . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_12 , 1 ) . mapping ( org . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_13 , 2 ) . mapping ( org . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_14 , 3 ) . mapping ( org . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_15 , 4 ) . build ( ) ; org . IDENT_0 . IDENT_1 . IDENT_16 IDENT_17 = org . IDENT_0 . IDENT_1 . IDENT_18 . METHOD_2 ( ) . METHOD_3 ( STRING_0 , 1 , IDENT_5 ) . build ( ) ; org . IDENT_0 . IDENT_1 . IDENT_16 IDENT_19 = org . IDENT_0 . IDENT_1 . IDENT_18 . METHOD_2 ( ) . METHOD_3 ( STRING_1 , 1 , IDENT_11 ) . METHOD_4 ( STRING_2 , 3 , IDENT_17 ) . METHOD_3 ( STRING_3 , 5 , IDENT_11 ) . build ( ) ; java . nio . ByteBuffer IDENT_20 = METHOD_4 . METHOD_5 ( ) . METHOD_3 ( STRING_1 , org . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_12 ) . METHOD_4 ( STRING_2 ) . METHOD_3 ( STRING_0 , org . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_4 . IDENT_7 ) . end ( ) . METHOD_3 ( STRING_3 , org . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_13 ) . encode ( ) ; IDENT_20 . METHOD_6 ( ) ; org . IDENT_0 . IDENT_1 . IDENT_21 . IDENT_22 < java . lang . IDENT_23 > IDENT_24 = METHOD_4 . METHOD_7 ( IDENT_20 ) ; "<AssertPlaceHolder>" ; } get ( ) { try { return IDENT_25 . get ( ) ; } catch ( java . util . concurrent . IDENT_26 e ) { throw new java . lang . RuntimeException ( e . METHOD_8 ( ) ) ; } }
org . junit . Assert . assertThat ( METHOD_7 . < java . lang . IDENT_10 > METHOD_3 ( STRING_3 ) . get ( ) , org . hamcrest . CoreMatchers . is ( org . IDENT_0 . IDENT_1 . IDENT_3 . IDENT_13 ) ) 