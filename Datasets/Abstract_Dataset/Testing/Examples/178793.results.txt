METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 index = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . get ( IDENT_4 . IDENT_5 , IDENT_4 . IDENT_6 ) ; "<AssertPlaceHolder>" ; } get ( java . lang . String , java . lang . String ) { int IDENT_7 ; java . io . File IDENT_8 = new java . io . File ( path ) ; java . io . File [ ] IDENT_9 = IDENT_8 . METHOD_1 ( ) ; java . util . regex . IDENT_10 p = java . util . regex . IDENT_10 . METHOD_2 ( ( IDENT_11 + STRING_0 ) ) ; java . util . List < java . lang . Integer > IDENT_12 = new java . util . ArrayList < java . lang . Integer > ( ) ; for ( java . io . File file : IDENT_9 ) { java . util . regex . IDENT_13 m = p . matcher ( file . getName ( ) ) ; if ( m . matches ( ) ) IDENT_12 . add ( java . lang . Integer . METHOD_3 ( m . group ( 1 ) ) ) ; } java . util . Collections . METHOD_4 ( IDENT_12 ) ; int IDENT_14 = IDENT_12 . size ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . logger . info ( ( STRING_1 + IDENT_14 ) ) ; for ( int IDENT_15 : IDENT_12 ) org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . logger . info ( java . lang . String . valueOf ( IDENT_15 ) ) ; if ( IDENT_14 == 0 ) { java . io . File IDENT_16 = new java . io . File ( ( ( ( path + ( org . IDENT_0 . IDENT_17 . IDENT_4 . IDENT_18 ) ) + IDENT_11 ) + STRING_2 ) ) ; if ( IDENT_16 . exists ( ) ) { IDENT_7 = 1 ; org . IDENT_0 . IDENT_19 . IDENT_20 [ ] IDENT_21 = new org . IDENT_0 . IDENT_19 . IDENT_20 [ 2 ] ; IDENT_21 [ 0 ] = org . IDENT_0 . IDENT_19 . IDENT_20 . METHOD_5 ( path , IDENT_11 ) ; org . IDENT_0 . IDENT_1 . IDENT_22 . IDENT_23 IDENT_24 = new org . IDENT_0 . IDENT_1 . IDENT_22 . METHOD_6 ( ) ; IDENT_21 [ 1 ] = IDENT_24 ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_25 = new org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_7 ( IDENT_21 ) ; IDENT_25 . IDENT_22 = IDENT_24 ; IDENT_25 . METHOD_8 ( path ) ; IDENT_25 . METHOD_9 ( IDENT_11 ) ; IDENT_25 . METHOD_10 ( IDENT_7 ) ; return IDENT_25 ; } else { IDENT_7 = 1 ; org . IDENT_0 . IDENT_1 . IDENT_22 . METHOD_6 IDENT_24 ; org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_7 IDENT_25 = new org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_7 ( new org . IDENT_0 . IDENT_19 . IDENT_20 [ ] { IDENT_24 = new org . IDENT_0 . IDENT_1 . IDENT_22 . METHOD_6 ( ) } ) ; IDENT_25 . IDENT_22 = IDENT_24 ; IDENT_25 . METHOD_8 ( path ) ; IDENT_25 . METHOD_9 ( IDENT_11 ) ; IDENT_25 . METHOD_10 ( IDENT_7 ) ; return IDENT_25 ; } } else { IDENT_7 = ( IDENT_12 . get ( ( IDENT_14 - 1 ) ) ) + 1 ; java . io . File IDENT_16 = new java . io . File ( ( ( ( path + ( org . IDENT_0 . IDENT_17 . IDENT_4 . IDENT_18 ) ) + IDENT_11 ) + STRING_2 ) ) ; if ( IDENT_16 . exists ( ) ) { IDENT_14 ++ ; org . IDENT_0 . IDENT_19 . IDENT_20 [ ] IDENT_21 = new org . IDENT_0 . IDENT_19 . IDENT_20 [ IDENT_14 + 1 ] ; IDENT_21 [ 0 ] = org . IDENT_0 . IDENT_19 . IDENT_20 . METHOD_5 ( path , IDENT_11 ) ; for ( int i = 1 ; i < IDENT_14 ; i ++ ) IDENT_21 [ i ] = org . IDENT_0 . IDENT_19 . IDENT_20 . METHOD_5 ( path , ( ( IDENT_11 + STRING_3 ) + ( IDENT_12 . remove ( 0 ) ) ) ) ; org . IDENT_0 . IDENT_1 . IDENT_22 . METHOD_6 IDENT_26 ; IDENT_21 [ IDENT_14 ] = IDENT_26 = new org . IDENT_0 . IDENT_1 . IDENT_22 . METHOD_6 ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_7 IDENT_25 = new org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_7 ( IDENT_21 ) ; IDENT_25 . IDENT_22 = IDENT_26 ; IDENT_25 . METHOD_8 ( path ) ; IDENT_25 . METHOD_9 ( IDENT_11 ) ; IDENT_25 . METHOD_10 ( IDENT_7 ) ; return IDENT_25 ; } else { org . IDENT_0 . IDENT_19 . IDENT_20 [ ] IDENT_21 = new org . IDENT_0 . IDENT_19 . IDENT_20 [ IDENT_14 + 1 ] ; for ( int i = 0 ; i < IDENT_14 ; i ++ ) IDENT_21 [ i ] = org . IDENT_0 . IDENT_19 . IDENT_20 . METHOD_5 ( path , ( ( IDENT_11 + STRING_3 ) + ( IDENT_12 . remove ( 0 ) ) ) ) ; org . IDENT_0 . IDENT_1 . IDENT_22 . METHOD_6 IDENT_26 ; IDENT_21 [ IDENT_14 ] = IDENT_26 = new org . IDENT_0 . IDENT_1 . IDENT_22 . METHOD_6 ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_7 IDENT_25 = new org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_7 ( IDENT_21 ) ; IDENT_25 . IDENT_22 = IDENT_26 ; IDENT_25 . METHOD_8 ( path ) ; IDENT_25 . METHOD_9 ( IDENT_11 ) ; IDENT_25 . METHOD_10 ( IDENT_7 ) ; return IDENT_25 ; } } }
org . junit . Assert . assertNotNull ( index ) 