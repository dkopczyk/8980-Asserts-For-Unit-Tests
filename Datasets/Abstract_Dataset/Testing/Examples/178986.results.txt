METHOD_0 ( ) { IDENT_0 . IDENT_1 . cs . IDENT_2 . core . domain . IDENT_3 IDENT_4 = new IDENT_0 . IDENT_1 . cs . IDENT_2 . core . domain . METHOD_1 ( STRING_0 ) ; when ( IDENT_5 . METHOD_2 ( any ( IDENT_0 . IDENT_1 . cs . IDENT_2 . core . domain . IDENT_6 . class ) , eq ( IDENT_4 ) ) ) . thenReturn ( METHOD_3 ( IDENT_0 . IDENT_1 . cs . IDENT_2 . core . commands . IDENT_7 . IDENT_8 . class , STRING_1 ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( IDENT_0 . IDENT_1 . cs . IDENT_2 . cli . core . IDENT_9 , IDENT_0 . IDENT_1 . cs . IDENT_2 . core . domain . METHOD_1 ) { try { IDENT_0 . IDENT_1 . cs . IDENT_2 . core . IDENT_10 core = ctx . METHOD_5 ( ) ; return core . METHOD_2 ( IDENT_6 . IDENT_11 , IDENT_4 ) . call ( ) ; } catch ( java . lang . Exception e ) { IDENT_0 . IDENT_1 . cs . IDENT_2 . cli . backend . IDENT_12 . METHOD_6 ( ctx , e ) ; IDENT_0 . IDENT_1 . cs . IDENT_2 . cli . backend . IDENT_12 . logger . warn ( STRING_2 , e ) ; return null ; } }
org . junit . Assert . assertNull ( IDENT_0 . IDENT_1 . cs . IDENT_2 . cli . backend . IDENT_12 . METHOD_4 ( ctx , IDENT_4 ) ) 