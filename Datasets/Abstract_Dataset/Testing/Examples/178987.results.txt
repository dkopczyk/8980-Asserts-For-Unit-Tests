METHOD_0 ( ) { final java . net . URI IDENT_0 = new java . net . URI ( STRING_0 ) ; IDENT_1 . IDENT_2 . cs . IDENT_3 . core . domain . IDENT_4 IDENT_5 = new IDENT_1 . IDENT_2 . cs . IDENT_3 . core . domain . METHOD_1 ( STRING_1 ) ; when ( IDENT_6 . METHOD_2 ( any ( IDENT_1 . IDENT_2 . cs . IDENT_3 . core . domain . IDENT_7 . class ) , eq ( IDENT_5 ) , eq ( STRING_2 ) ) ) . thenReturn ( METHOD_3 ( IDENT_0 ) ) ; java . net . URI result = IDENT_1 . IDENT_2 . cs . IDENT_3 . cli . backend . IDENT_8 . METHOD_0 ( ctx , IDENT_5 , STRING_2 ) ; "<AssertPlaceHolder>" ; } METHOD_0 ( IDENT_1 . IDENT_2 . cs . IDENT_3 . cli . core . IDENT_9 , IDENT_1 . IDENT_2 . cs . IDENT_3 . core . domain . METHOD_1 , java . lang . String ) { try { IDENT_1 . IDENT_2 . cs . IDENT_3 . core . IDENT_10 core = ctx . METHOD_4 ( ) ; return core . METHOD_2 ( IDENT_7 . IDENT_11 , IDENT_5 , message ) . call ( ) ; } catch ( java . lang . Exception e ) { IDENT_1 . IDENT_2 . cs . IDENT_3 . cli . backend . IDENT_8 . METHOD_5 ( ctx , e ) ; IDENT_1 . IDENT_2 . cs . IDENT_3 . cli . backend . IDENT_8 . logger . error ( STRING_3 , e ) ; return null ; } }
org . junit . Assert . assertEquals ( IDENT_0 , result ) 