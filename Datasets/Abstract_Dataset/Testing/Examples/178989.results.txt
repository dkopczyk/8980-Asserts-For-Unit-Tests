METHOD_0 ( ) { final IDENT_0 . IDENT_1 . cs . IDENT_2 . IDENT_3 . domain . IDENT_4 IDENT_5 = org . IDENT_6 . api . mockito . IDENT_7 . mock ( IDENT_0 . IDENT_1 . cs . IDENT_2 . IDENT_3 . domain . IDENT_4 . class ) ; IDENT_0 . IDENT_1 . cs . IDENT_2 . core . domain . IDENT_8 IDENT_9 = new IDENT_0 . IDENT_1 . cs . IDENT_2 . core . domain . METHOD_1 ( STRING_0 ) ; when ( IDENT_10 . METHOD_2 ( any ( IDENT_0 . IDENT_1 . cs . IDENT_2 . core . domain . IDENT_11 . class ) , eq ( IDENT_9 ) ) ) . thenReturn ( METHOD_3 ( IDENT_5 ) ) ; IDENT_0 . IDENT_1 . cs . IDENT_2 . IDENT_3 . domain . IDENT_4 result = IDENT_0 . IDENT_1 . cs . IDENT_2 . cli . backend . IDENT_12 . METHOD_0 ( ctx , IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_0 ( IDENT_0 . IDENT_1 . cs . IDENT_2 . cli . core . IDENT_13 , IDENT_0 . IDENT_1 . cs . IDENT_2 . core . domain . METHOD_1 ) { try { IDENT_0 . IDENT_1 . cs . IDENT_2 . core . IDENT_14 core = ctx . METHOD_4 ( ) ; return core . METHOD_2 ( IDENT_11 . IDENT_15 , IDENT_9 ) . call ( ) ; } catch ( java . lang . Exception e ) { IDENT_0 . IDENT_1 . cs . IDENT_2 . cli . backend . IDENT_12 . METHOD_5 ( ctx , e ) ; IDENT_0 . IDENT_1 . cs . IDENT_2 . cli . backend . IDENT_12 . logger . error ( STRING_1 , e ) ; return null ; } }
org . junit . Assert . assertEquals ( IDENT_5 , result ) 