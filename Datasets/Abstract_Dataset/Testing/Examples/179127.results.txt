METHOD_0 ( ) { java . lang . String query = STRING_0 ; java . util . List < edu . IDENT_0 . IDENT_1 . IDENT_2 . api . tuple . IDENT_3 > IDENT_4 = edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_1 ( edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . IDENT_6 . IDENT_8 . IDENT_9 . IDENT_10 , query , STRING_1 , java . util . Arrays . asList ( IDENT_11 . IDENT_12 ) , STRING_2 , false , Integer . MAX_VALUE , 0 , STRING_3 , STRING_4 ) ; java . util . List < edu . IDENT_0 . IDENT_1 . IDENT_2 . api . tuple . IDENT_3 > IDENT_13 = new java . util . ArrayList ( ) ; java . util . List < edu . IDENT_0 . IDENT_1 . IDENT_2 . api . tuple . IDENT_3 > data = edu . IDENT_0 . IDENT_1 . IDENT_2 . api . IDENT_14 . test . IDENT_11 . METHOD_2 ( ) ; edu . IDENT_0 . IDENT_1 . IDENT_2 . api . schema . Schema IDENT_15 = new edu . IDENT_0 . IDENT_1 . IDENT_2 . api . schema . Schema . Builder ( ) . add ( IDENT_11 . IDENT_16 ) . add ( edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . IDENT_6 . IDENT_8 . IDENT_9 . IDENT_17 , IDENT_18 . IDENT_19 ) . build ( ) ; java . util . List < edu . IDENT_0 . IDENT_1 . IDENT_2 . api . IDENT_20 . IDENT_21 > IDENT_22 = new java . util . ArrayList ( ) ; IDENT_22 . add ( new edu . IDENT_0 . IDENT_1 . IDENT_2 . api . IDENT_20 . METHOD_3 ( edu . IDENT_0 . IDENT_1 . IDENT_2 . api . IDENT_14 . test . IDENT_11 . IDENT_12 , 4 , 20 , query , STRING_5 ) ) ; edu . IDENT_0 . IDENT_1 . IDENT_2 . api . field . IDENT_23 IDENT_24 = new edu . IDENT_0 . IDENT_1 . IDENT_2 . api . field . METHOD_4 ( new java . util . ArrayList ( IDENT_22 ) ) ; java . util . List < edu . IDENT_0 . IDENT_1 . IDENT_2 . api . field . IDENT_23 > fields = new java . util . ArrayList ( data . get ( 3 ) . METHOD_5 ( ) ) ; fields . add ( IDENT_24 ) ; IDENT_13 . add ( new edu . IDENT_0 . IDENT_1 . IDENT_2 . api . tuple . METHOD_6 ( IDENT_15 , fields . toArray ( new edu . IDENT_0 . IDENT_1 . IDENT_2 . api . field . IDENT_23 [ fields . size ( ) ] ) ) ) ; java . util . List < java . lang . String > IDENT_25 = new java . util . ArrayList ( ) ; IDENT_25 . add ( edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . IDENT_6 . IDENT_8 . IDENT_9 . IDENT_17 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( java . util . List , java . util . List , java . util . List ) { if ( ( IDENT_13 . size ( ) ) != ( IDENT_4 . size ( ) ) ) return false ; if ( ( IDENT_4 . size ( ) ) == 0 ) return true ; java . util . List < java . lang . String > IDENT_26 = new java . util . ArrayList ( IDENT_13 . get ( 0 ) . METHOD_8 ( ) . METHOD_9 ( ) ) ; IDENT_26 . METHOD_10 ( IDENT_25 ) ; java . lang . String [ ] IDENT_27 = IDENT_26 . toArray ( new java . lang . String [ IDENT_26 . size ( ) ] ) ; IDENT_13 = METHOD_6 . Builder . METHOD_11 ( IDENT_13 , IDENT_27 ) ; java . util . List < java . lang . String > IDENT_28 = new java . util . ArrayList ( IDENT_4 . get ( 0 ) . METHOD_8 ( ) . METHOD_9 ( ) ) ; IDENT_28 . METHOD_10 ( IDENT_25 ) ; java . lang . String [ ] IDENT_29 = IDENT_28 . toArray ( new java . lang . String [ IDENT_28 . size ( ) ] ) ; IDENT_4 = METHOD_6 . Builder . METHOD_11 ( IDENT_4 , IDENT_29 ) ; return ( IDENT_13 . METHOD_12 ( IDENT_4 ) ) && ( IDENT_4 . METHOD_12 ( IDENT_13 ) ) ; }
org . junit . Assert . assertTrue ( edu . IDENT_0 . IDENT_1 . IDENT_2 . api . utils . TestUtils . METHOD_7 ( IDENT_13 , IDENT_4 , IDENT_25 ) ) 