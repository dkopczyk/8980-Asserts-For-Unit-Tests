METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 . commons . IDENT_3 IDENT_4 = mock ( com . IDENT_0 . IDENT_1 . IDENT_2 . commons . IDENT_3 . class ) ; when ( IDENT_4 . apply ( IDENT_5 , IDENT_6 ) ) . thenReturn ( false ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . commons . IDENT_3 IDENT_7 = mock ( com . IDENT_0 . IDENT_1 . IDENT_2 . commons . IDENT_3 . class ) ; when ( IDENT_7 . apply ( any ( java . util . IDENT_8 . class ) , any ( java . util . IDENT_8 . class ) ) ) . METHOD_1 ( new java . lang . IllegalStateException ( ) ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . commons . IDENT_9 IDENT_10 = com . IDENT_0 . IDENT_1 . IDENT_2 . commons . IDENT_9 . and ( IDENT_4 , IDENT_7 ) ; "<AssertPlaceHolder>" ; } apply ( java . util . IDENT_8 , java . util . IDENT_8 ) { for ( com . IDENT_0 . IDENT_1 . IDENT_2 . commons . IDENT_3 IDENT_11 : IDENT_12 ) { if ( ! ( IDENT_11 . apply ( first , IDENT_13 ) ) ) { return false ; } } return true ; }
org . junit . Assert . assertEquals ( false , IDENT_10 . apply ( IDENT_5 , IDENT_6 ) ) 