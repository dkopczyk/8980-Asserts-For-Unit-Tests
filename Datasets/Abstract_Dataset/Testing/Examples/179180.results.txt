METHOD_0 ( ) { uk . ac . IDENT_0 . IDENT_1 . IDENT_2 . core . data . IDENT_3 IDENT_4 = new uk . ac . IDENT_0 . IDENT_1 . IDENT_2 . core . data . impl . METHOD_1 ( ) ; IDENT_4 . setId ( 1L ) ; IDENT_4 . METHOD_2 ( STRING_0 ) ; uk . ac . IDENT_0 . IDENT_1 . IDENT_2 . core . data . IDENT_3 IDENT_5 = new uk . ac . IDENT_0 . IDENT_1 . IDENT_2 . core . data . impl . METHOD_1 ( ) ; IDENT_5 . setId ( IDENT_4 . getId ( ) ) ; IDENT_5 . METHOD_2 ( STRING_1 ) ; com . IDENT_6 . IDENT_7 . core . IDENT_8 IDENT_9 = new com . IDENT_6 . IDENT_7 . core . METHOD_3 ( ) ; IDENT_9 . METHOD_4 ( INT_0 ) ; com . IDENT_6 . IDENT_7 . core . User IDENT_10 = new uk . ac . IDENT_0 . IDENT_1 . IDENT_2 . core . data . impl . METHOD_5 ( ) ; IDENT_10 . METHOD_6 ( INT_1 ) ; IDENT_9 . METHOD_7 ( IDENT_10 ) ; IDENT_5 . METHOD_8 ( IDENT_9 ) ; org . mockito . Mockito . when ( IDENT_11 . get ( IDENT_4 . getId ( ) ) ) . thenReturn ( IDENT_5 ) ; IDENT_12 . METHOD_9 ( IDENT_4 , IDENT_9 . METHOD_10 ( ) ) ; org . mockito . Mockito . verify ( IDENT_13 ) . METHOD_11 ( IDENT_10 ) ; org . mockito . IDENT_14 < uk . ac . IDENT_0 . IDENT_1 . IDENT_2 . core . data . IDENT_3 > IDENT_15 = org . mockito . IDENT_14 . METHOD_12 ( uk . ac . IDENT_0 . IDENT_1 . IDENT_2 . core . data . IDENT_3 . class ) ; org . mockito . Mockito . verify ( IDENT_11 ) . save ( IDENT_15 . METHOD_13 ( ) ) ; uk . ac . IDENT_0 . IDENT_1 . IDENT_2 . core . data . IDENT_3 IDENT_16 = METHOD_13 . getValue ( ) ; "<AssertPlaceHolder>" ; } METHOD_14 ( ) { return IDENT_17 ; }
org . junit . Assert . assertTrue ( IDENT_16 . METHOD_14 ( ) . isEmpty ( ) ) 