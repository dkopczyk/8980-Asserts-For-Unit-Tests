METHOD_0 ( ) { "<AssertPlaceHolder>" ; } METHOD_1 ( long ) { org . hibernate . IDENT_0 IDENT_1 = METHOD_2 ( ) . METHOD_3 ( uk . ac . IDENT_2 . IDENT_3 . IDENT_4 . core . data . IDENT_5 . class ) ; IDENT_1 . METHOD_3 ( STRING_0 ) . METHOD_4 ( STRING_1 , STRING_1 ) . add ( org . hibernate . IDENT_6 . IDENT_7 . eq ( STRING_2 , IDENT_8 ) ) ; IDENT_1 . METHOD_5 ( org . hibernate . IDENT_6 . IDENT_9 . METHOD_6 ( org . hibernate . IDENT_6 . IDENT_9 . property ( STRING_3 ) ) ) ; @ uk . ac . IDENT_2 . IDENT_3 . IDENT_4 . persistence . impl . METHOD_7 ( STRING_4 ) java . util . List < java . lang . Long > IDENT_10 = IDENT_1 . list ( ) ; if ( IDENT_10 . isEmpty ( ) ) { return java . util . Collections . emptyList ( ) ; } org . hibernate . IDENT_0 criteria = METHOD_2 ( ) . METHOD_3 ( uk . ac . IDENT_2 . IDENT_3 . IDENT_4 . core . data . IDENT_5 . class ) ; criteria . add ( org . hibernate . IDENT_6 . IDENT_7 . in ( STRING_3 , IDENT_10 ) ) ; @ uk . ac . IDENT_2 . IDENT_3 . IDENT_4 . persistence . impl . METHOD_7 ( STRING_4 ) java . util . List < uk . ac . IDENT_2 . IDENT_3 . IDENT_4 . core . data . IDENT_5 > results = criteria . list ( ) ; return results ; }
org . junit . Assert . assertEquals ( 0 , dao . METHOD_1 ( 2 ) . size ( ) ) 