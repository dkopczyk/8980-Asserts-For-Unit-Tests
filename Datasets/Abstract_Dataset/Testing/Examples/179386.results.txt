METHOD_0 ( ) { io . IDENT_0 . service . IDENT_1 IDENT_2 = new io . IDENT_0 . service . METHOD_1 ( java . math . BigInteger . valueOf ( 1 ) , java . math . BigInteger . valueOf ( INT_0 ) ) ; java . util . Map < java . util . List < java . lang . String > , java . util . List < java . lang . String > > IDENT_3 = com . google . common . collect . IDENT_4 . METHOD_2 ( ) ; IDENT_3 . put ( java . util . Arrays . asList ( "1" , STRING_0 ) , java . util . Arrays . asList ( STRING_1 , STRING_2 , STRING_3 0 ) ) ; IDENT_3 . put ( java . util . Arrays . asList ( STRING_0 , STRING_4 ) , java . util . Arrays . asList ( STRING_1 , STRING_2 , STRING_3 0 ) ) ; IDENT_3 . put ( java . util . Arrays . asList ( STRING_4 , STRING_3 3 ) , java . util . Arrays . asList ( STRING_1 , STRING_2 , STRING_3 0 ) ) ; IDENT_3 . put ( java . util . Arrays . asList ( STRING_3 3 , STRING_3 1 ) , java . util . Arrays . asList ( STRING_1 , STRING_2 , STRING_3 0 ) ) ; IDENT_3 . put ( java . util . Arrays . asList ( STRING_3 1 , STRING_5 ) , java . util . Arrays . asList ( STRING_1 , STRING_2 , STRING_3 0 ) ) ; IDENT_3 . put ( java . util . Arrays . asList ( STRING_6 , STRING_7 ) , java . util . Arrays . asList ( STRING_2 , STRING_3 0 , STRING_1 ) ) ; IDENT_3 . put ( java . util . Arrays . asList ( STRING_7 , STRING_3 2 ) , java . util . Arrays . asList ( STRING_2 , STRING_3 0 , STRING_1 ) ) ; IDENT_3 . put ( java . util . Arrays . asList ( STRING_3 2 , STRING_3 ) , java . util . Arrays . asList ( STRING_2 , STRING_3 0 , STRING_1 ) ) ; IDENT_3 . put ( java . util . Arrays . asList ( STRING_3 , STRING_8 ) , java . util . Arrays . asList ( STRING_2 , STRING_3 0 , STRING_1 ) ) ; java . util . Map < java . util . List < java . lang . String > , java . util . List < io . IDENT_0 . service . IDENT_5 > > IDENT_6 = io . IDENT_0 . service . IDENT_7 . METHOD_3 ( IDENT_3 ) ; java . util . List < io . IDENT_0 . core . IDENT_8 > IDENT_9 = IDENT_2 . METHOD_4 ( java . math . BigInteger . valueOf ( 1 ) , IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . math . BigInteger , java . util . Map ) { java . util . List < io . IDENT_0 . core . IDENT_8 > IDENT_10 = com . google . common . collect . Lists . newArrayList ( ) ; java . util . List < io . IDENT_0 . service . IDENT_5 > IDENT_11 = com . google . common . collect . Lists . newArrayList ( ) ; java . math . BigInteger IDENT_12 = java . math . BigInteger . IDENT_13 ; for ( java . util . Map . Entry < java . util . List < java . lang . String > , java . util . List < io . IDENT_0 . service . IDENT_5 > > IDENT_14 : IDENT_15 . entrySet ( ) ) { io . IDENT_0 . service . METHOD_1 . LOG . info ( STRING_9 , IDENT_14 . getKey ( ) ) ; for ( io . IDENT_0 . service . IDENT_5 IDENT_16 : IDENT_14 . getValue ( ) ) { if ( ( ( IDENT_16 . METHOD_5 ( IDENT_17 ) . add ( IDENT_12 ) . compareTo ( IDENT_18 ) ) > 0 ) && ( ! ( IDENT_11 . isEmpty ( ) ) ) ) { io . IDENT_0 . service . METHOD_1 . LOG . info ( STRING_10 , IDENT_12 , IDENT_11 ) ; IDENT_10 . add ( io . IDENT_0 . core . IDENT_8 . builder ( ) . METHOD_6 ( IDENT_11 ) . build ( ) ) ; IDENT_11 = com . google . common . collect . Lists . newArrayList ( ) ; IDENT_12 = java . math . BigInteger . IDENT_13 ; } IDENT_12 = IDENT_12 . add ( IDENT_16 . METHOD_5 ( IDENT_17 ) ) ; IDENT_11 . add ( IDENT_16 ) ; } if ( ! ( IDENT_11 . isEmpty ( ) ) ) { IDENT_10 . add ( io . IDENT_0 . core . IDENT_8 . builder ( ) . METHOD_6 ( IDENT_11 ) . build ( ) ) ; IDENT_11 = com . google . common . collect . Lists . newArrayList ( ) ; } } com . google . common . base . IDENT_19 . METHOD_7 ( io . IDENT_0 . service . METHOD_1 . METHOD_8 ( IDENT_10 , IDENT_15 ) , STRING_11 ) ; return IDENT_10 ; }
org . junit . Assert . assertEquals ( 9 , IDENT_9 . size ( ) ) 