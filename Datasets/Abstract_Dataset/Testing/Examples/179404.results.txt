METHOD_0 ( ) { org . IDENT_0 . utils . IDENT_1 log = new org . IDENT_0 . utils . METHOD_1 ( ) ; for ( java . lang . String msg : messages ) { log . METHOD_2 ( msg ) ; } java . util . ArrayList < org . IDENT_0 . utils . METHOD_1 . IDENT_2 > IDENT_3 = log . METHOD_3 ( ) ; for ( int i = 0 ; i < ( messages . length ) ; i ++ ) { "<AssertPlaceHolder>" ; } } get ( org . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 ) { final java . io . IDENT_8 f = IDENT_9 ; if ( f == null ) throw new org . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_4 ( STRING_0 ) ; IDENT_10 . METHOD_5 ( ) ; try { org . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_11 IDENT_12 = cache . get ( hash ) ; if ( IDENT_12 != null ) return IDENT_12 ; if ( ( IDENT_13 . get ( hash ) ) != null ) return null ; final byte [ ] IDENT_14 = hash . getBytes ( ) ; byte [ ] IDENT_15 = new byte [ org . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_16 . IDENT_17 ] ; long IDENT_18 = ( org . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_16 . IDENT_19 ) + ( ( org . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_16 . IDENT_20 ) * ( METHOD_6 ( ) ) ) ; f . METHOD_7 ( org . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_16 . IDENT_19 ) ; while ( ( f . METHOD_8 ( ) ) < IDENT_18 ) { f . read ( IDENT_15 ) ; if ( java . util . Arrays . equals ( IDENT_14 , IDENT_15 ) ) { byte [ ] IDENT_21 = new byte [ org . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_16 . IDENT_22 ] ; f . read ( IDENT_21 ) ; org . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_11 block = org . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_11 . METHOD_9 ( params , java . nio . ByteBuffer . METHOD_10 ( IDENT_21 ) ) ; cache . put ( hash , block ) ; return block ; } f . METHOD_11 ( org . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_16 . IDENT_22 ) ; } IDENT_13 . put ( hash , org . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_16 . IDENT_23 ) ; return null ; } catch ( java . io . IOException e ) { throw new org . IDENT_0 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_4 ( e ) ; } finally { METHOD_5 . METHOD_12 ( ) ; } }
org . junit . Assert . assertEquals ( messages [ i ] , IDENT_3 . get ( i ) . getMessage ( ) ) 