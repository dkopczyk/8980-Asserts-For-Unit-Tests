METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . core . IDENT_2 IDENT_3 = IDENT_4 . METHOD_1 ( STRING_0 ) . METHOD_2 ( java . lang . String . class ) . METHOD_3 ( ) ; IDENT_4 . METHOD_4 ( STRING_1 , org . apache . tinkerpop . IDENT_5 . IDENT_6 . IDENT_7 . class ) . METHOD_5 ( IDENT_3 ) . METHOD_6 ( com . IDENT_0 . IDENT_1 . IDENT_8 . IDENT_9 . IDENT_10 ) ; IDENT_4 . commit ( ) ; com . IDENT_0 . IDENT_1 . core . IDENT_11 v1 = tx . METHOD_7 ( ) ; com . IDENT_0 . IDENT_1 . core . IDENT_11 v2 = tx . METHOD_7 ( ) ; com . IDENT_0 . IDENT_1 . core . IDENT_11 IDENT_12 = tx . METHOD_7 ( ) ; v1 . property ( STRING_0 , STRING_2 ) ; v2 . property ( STRING_0 , STRING_3 ) ; IDENT_12 . property ( STRING_0 , STRING_4 ) ; tx . commit ( ) ; java . lang . Thread . sleep ( INT_0 ) ; java . util . Set < java . lang . Double > IDENT_13 = new java . util . HashSet < java . lang . Double > ( ) ; for ( com . IDENT_0 . IDENT_1 . core . IDENT_14 . Result < com . IDENT_0 . IDENT_1 . core . IDENT_11 > r : graph . METHOD_8 ( STRING_1 , STRING_5 ) . METHOD_9 ( ) ) { IDENT_13 . add ( r . METHOD_10 ( ) ) ; } "<AssertPlaceHolder>" ; } size ( ) { return METHOD_9 . size ( ) ; }
org . junit . Assert . assertEquals ( 3 , IDENT_13 . size ( ) ) 