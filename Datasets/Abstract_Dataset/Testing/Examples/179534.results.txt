METHOD_0 ( ) { long [ ] values = new long [ ] { INT_0 , INT_1 , 0 , - 1 , - INT_2 } ; byte [ ] array = new byte [ ( values . length ) * 8 ] ; for ( int i = 0 ; i < ( values . length ) ; i ++ ) { com . IDENT_0 . IDENT_1 . IDENT_2 . util . IDENT_3 . METHOD_1 ( array , ( i * 8 ) , values [ i ] ) ; } for ( int i = 0 ; i < ( values . length ) ; i ++ ) { "<AssertPlaceHolder>" ; } } METHOD_2 ( byte [ ] , int ) { return ( ( ( ( ( ( ( ( ( long ) ( array [ ( offset ++ ) ] ) ) << INT_3 ) | ( ( ( long ) ( ( array [ ( offset ++ ) ] ) & 255 ) ) << INT_4 ) ) | ( ( ( long ) ( ( array [ ( offset ++ ) ] ) & 255 ) ) << INT_5 ) ) | ( ( ( long ) ( ( array [ ( offset ++ ) ] ) & 255 ) ) << INT_6 ) ) | ( ( ( long ) ( ( array [ ( offset ++ ) ] ) & 255 ) ) << INT_7 ) ) | ( ( ( array [ ( offset ++ ) ] ) & 255 ) << 16 ) ) | ( ( ( array [ ( offset ++ ) ] ) & 255 ) << 8 ) ) | ( ( array [ ( offset ++ ) ] ) & 255 ) ; }
org . junit . Assert . assertEquals ( values [ i ] , com . IDENT_0 . IDENT_1 . IDENT_2 . util . IDENT_3 . METHOD_2 ( array , ( i * 8 ) ) ) 