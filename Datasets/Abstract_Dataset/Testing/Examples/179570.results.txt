METHOD_0 ( ) { java . lang . String IDENT_0 = new java . io . File ( com . IDENT_1 . IDENT_2 . IDENT_3 . class . getResource ( STRING_0 ) . METHOD_1 ( ) ) . getAbsolutePath ( ) ; unit . METHOD_2 ( IDENT_0 ) ; java . lang . String [ ] IDENT_4 = new java . lang . String [ ] { STRING_1 , STRING_2 , STRING_3 , "test" , STRING_4 , STRING_5 , STRING_6 } ; for ( java . lang . String IDENT_5 : IDENT_4 ) { "<AssertPlaceHolder>" ; } } METHOD_3 ( java . lang . String ) { METHOD_4 ( ) ; METHOD_5 ( STRING_7 , IDENT_5 ) ; org . IDENT_6 . IDENT_7 < java . lang . IDENT_8 > IDENT_9 = METHOD_6 ( IDENT_5 ) ; int result = com . IDENT_1 . IDENT_2 . IDENT_10 . METHOD_7 ( IDENT_11 , IDENT_9 ) ; return result != 0 ; }
org . junit . Assert . assertThat ( IDENT_5 , unit . METHOD_3 ( IDENT_5 ) , org . hamcrest . CoreMatchers . is ( true ) ) 