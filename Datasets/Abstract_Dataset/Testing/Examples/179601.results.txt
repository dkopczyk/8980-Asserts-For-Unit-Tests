METHOD_0 ( ) { de . IDENT_0 . IDENT_1 . IDENT_2 t = new de . IDENT_0 . IDENT_1 . METHOD_1 ( 1 ) ; de . IDENT_0 . IDENT_1 . METHOD_1 IDENT_3 = new de . IDENT_0 . IDENT_1 . METHOD_1 ( 1 ) ; int IDENT_4 = 0 ; int y = 0 ; double [ ] IDENT_5 = new double [ ] { 1 , 0 , 0 } ; for ( int i = 0 ; i < 100 ; i ++ ) { t . add ( new org . IDENT_6 . IDENT_7 . METHOD_2 ( i , y , IDENT_4 ) ) ; IDENT_3 . add ( new org . IDENT_6 . IDENT_7 . METHOD_2 ( ( i + ( i * ( IDENT_5 [ 0 ] ) ) ) , y , IDENT_4 ) ) ; } de . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_8 IDENT_9 = new de . IDENT_0 . IDENT_1 . IDENT_5 . METHOD_3 ( IDENT_5 ) ; de . IDENT_0 . IDENT_1 . METHOD_1 IDENT_10 = IDENT_9 . METHOD_4 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { double [ ] [ ] IDENT_11 = new double [ size ( ) ] [ 3 ] ; for ( int i = 0 ; i < ( size ( ) ) ; i ++ ) { if ( ( get ( i ) ) != null ) { IDENT_11 [ i ] [ 0 ] = get ( i ) . x ; IDENT_11 [ i ] [ 1 ] = get ( i ) . y ; IDENT_11 [ i ] [ 2 ] = get ( i ) . IDENT_4 ; } else { IDENT_11 [ i ] = null ; } } return IDENT_11 ; }
org . junit . Assert . assertArrayEquals ( t . METHOD_5 ( ) , IDENT_10 . METHOD_5 ( ) ) 