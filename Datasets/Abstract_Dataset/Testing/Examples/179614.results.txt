METHOD_0 ( ) { int count = 10 ; byte [ ] IDENT_0 = new byte [ count ] ; byte [ ] IDENT_1 = new byte [ count ] ; for ( int i = 0 ; i < count ; i ++ ) { if ( i < ( count / 2 ) ) { IDENT_0 [ i ] = ( ( byte ) ( i ) ) ; IDENT_1 [ i ] = - 1 ; } else { IDENT_0 [ i ] = - 1 ; IDENT_1 [ i ] = ( ( byte ) ( i ) ) ; } } java . nio . ByteBuffer IDENT_2 = java . nio . ByteBuffer . METHOD_1 ( IDENT_0 ) ; IDENT_2 . METHOD_2 ( ( count / 2 ) ) ; java . nio . ByteBuffer IDENT_3 = java . nio . ByteBuffer . METHOD_1 ( IDENT_1 ) ; IDENT_3 . position ( ( count / 2 ) ) ; org . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 IDENT_8 = new org . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_3 ( false , IDENT_2 , IDENT_3 ) ; for ( int i = 0 ; i < count ; i ++ ) { "<AssertPlaceHolder>" ; } } get ( byte [ ] ) { if ( IDENT_9 . METHOD_4 ( ) ) { if ( IDENT_9 . METHOD_5 ( ) ) { int IDENT_10 = super . get ( IDENT_11 ) ; IDENT_12 += IDENT_10 ; return IDENT_10 ; } else { throw new java . lang . IllegalStateException ( org . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_13 . IDENT_14 ) ; } } else { return super . get ( IDENT_11 ) ; } }
org . junit . Assert . assertEquals ( ( ( byte ) ( i ) ) , IDENT_8 . get ( i ) ) 