METHOD_0 ( ) { java . util . List < org . IDENT_0 . concurrent . IDENT_1 . IDENT_2 > IDENT_3 = new java . util . ArrayList ( IDENT_4 ) ; java . util . concurrent . IDENT_5 < ? > IDENT_6 = null ; for ( int i = 0 ; i < ( IDENT_4 ) ; i ++ ) { org . IDENT_0 . concurrent . IDENT_7 tc = new org . IDENT_0 . concurrent . METHOD_1 ( ) ; if ( ( ( IDENT_4 ) / 2 ) == i ) { IDENT_6 = tc ; } IDENT_3 . add ( new org . IDENT_0 . concurrent . IDENT_1 . METHOD_2 ( new org . IDENT_0 . concurrent . IDENT_1 . METHOD_3 ( tc ) ) ) ; } "<AssertPlaceHolder>" ; } remove ( java . util . Collection , java . lang . IDENT_8 ) { java . util . Iterator < ? extends org . IDENT_0 . concurrent . IDENT_9 > it = source . iterator ( ) ; while ( it . hasNext ( ) ) { org . IDENT_0 . concurrent . IDENT_9 IDENT_10 = it . next ( ) ; if ( ( org . IDENT_0 . concurrent . IDENT_11 . METHOD_4 ( IDENT_10 . METHOD_5 ( ) , compareTo ) ) && ( source . remove ( IDENT_10 ) ) ) { return true ; } } return false ; }
org . junit . Assert . assertTrue ( org . IDENT_0 . concurrent . IDENT_11 . remove ( IDENT_3 , IDENT_6 ) ) 