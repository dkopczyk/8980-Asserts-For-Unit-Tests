METHOD_0 ( ) { "<AssertPlaceHolder>" ; } get ( java . lang . String ) { if ( IDENT_0 == null ) { return com . google . common . collect . IDENT_1 . of ( ) ; } java . util . Set < java . security . IDENT_2 > IDENT_3 ; if ( ! ( IDENT_4 . containsKey ( IDENT_0 ) ) ) { java . lang . String [ ] IDENT_5 = IDENT_6 . get ( IDENT_0 ) ; if ( IDENT_5 == null ) { IDENT_3 = com . google . common . collect . IDENT_1 . of ( ) ; } else { com . google . common . collect . IDENT_1 . Builder < java . security . IDENT_2 > builder = com . google . common . collect . IDENT_1 . builder ( ) ; for ( java . lang . String IDENT_7 : IDENT_6 . get ( IDENT_0 ) ) { try { org . apache . jackrabbit . api . security . user . IDENT_8 IDENT_9 = IDENT_10 . METHOD_1 ( IDENT_7 ) ; if ( ( IDENT_9 != null ) && ( IDENT_9 . METHOD_2 ( ) ) ) { java . security . IDENT_2 IDENT_11 = IDENT_9 . METHOD_3 ( ) ; if ( org . apache . jackrabbit . oak . spi . security . IDENT_12 . IDENT_13 . METHOD_2 ( IDENT_11 ) ) { builder . add ( IDENT_11 ) ; } else { org . apache . jackrabbit . oak . spi . security . authentication . IDENT_14 . impl . IDENT_12 . IDENT_15 . log . warn ( STRING_0 , IDENT_7 ) ; } } else { org . apache . jackrabbit . oak . spi . security . authentication . IDENT_14 . impl . IDENT_12 . IDENT_15 . log . warn ( STRING_1 , IDENT_7 ) ; } } catch ( javax . jcr . IDENT_16 e ) { org . apache . jackrabbit . oak . spi . security . authentication . IDENT_14 . impl . IDENT_12 . IDENT_15 . log . debug ( STRING_2 , IDENT_7 , e ) ; } } IDENT_3 = builder . build ( ) ; } IDENT_4 . put ( IDENT_0 , IDENT_3 ) ; } else { IDENT_3 = IDENT_4 . get ( IDENT_0 ) ; } return IDENT_3 ; }
org . junit . Assert . assertNull ( properties . get ( null ) ) 