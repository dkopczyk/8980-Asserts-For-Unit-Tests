METHOD_0 ( ) { for ( int i = 1 ; i < INT_0 ; i ++ ) { final IDENT_0 . value . impl . IDENT_1 IDENT_2 = new IDENT_0 . value . impl . METHOD_1 ( new IDENT_0 . value . impl . METHOD_2 ( 1 , i ) ) ; long IDENT_3 = 0L ; for ( int j = 0 ; j <= i ; j ++ ) { IDENT_3 += IDENT_2 . METHOD_3 ( j ) ; } "<AssertPlaceHolder>" ; } } METHOD_3 ( int ) { final int size = this . set . size ( ) ; if ( ( ( k < 0 ) || ( size < k ) ) || ( size > INT_0 ) ) { throw new java . lang . IllegalArgumentException ( java . lang . String . format ( STRING_0 , k , size ) ) ; } if ( ( k == 0 ) || ( k == size ) ) { return 1 ; } return IDENT_0 . util . IDENT_4 . METHOD_4 ( size , k ) ; }
org . junit . Assert . assertEquals ( ( 1L << i ) , IDENT_3 ) 