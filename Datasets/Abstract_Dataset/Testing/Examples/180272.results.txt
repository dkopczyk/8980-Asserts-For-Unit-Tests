METHOD_0 ( ) { java . awt . image . IDENT_0 IDENT_1 = org . IDENT_2 . IDENT_3 . util . IDENT_4 . METHOD_1 ( 1 , 1 ) ; org . IDENT_2 . IDENT_3 . util . IDENT_4 . METHOD_2 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . awt . image . IDENT_0 , int , int , int , int , int [ ] ) { if ( ( IDENT_5 == 0 ) || ( IDENT_6 == 0 ) ) { return new int [ 0 ] ; } if ( IDENT_7 == null ) { IDENT_7 = new int [ IDENT_5 * IDENT_6 ] ; } else if ( ( IDENT_7 . length ) < ( IDENT_5 * IDENT_6 ) ) { throw new java . lang . IllegalArgumentException ( ( STRING_0 + STRING_1 ) ) ; } int IDENT_8 = IDENT_1 . getType ( ) ; if ( ( IDENT_8 == ( java . awt . image . IDENT_0 . IDENT_9 ) ) || ( IDENT_8 == ( java . awt . image . IDENT_0 . IDENT_10 ) ) ) { java . awt . image . IDENT_11 IDENT_12 = IDENT_1 . METHOD_4 ( ) ; return ( ( int [ ] ) ( IDENT_12 . METHOD_5 ( x , y , IDENT_5 , IDENT_6 , IDENT_7 ) ) ) ; } return IDENT_1 . METHOD_6 ( x , y , IDENT_5 , IDENT_6 , IDENT_7 , 0 , IDENT_5 ) ; }
org . junit . Assert . assertThat ( org . IDENT_2 . IDENT_3 . util . IDENT_4 . METHOD_3 ( IDENT_1 , 0 , 0 , 1 , 1 , null ) [ 0 ] , org . hamcrest . CoreMatchers . is ( 0 ) ) 