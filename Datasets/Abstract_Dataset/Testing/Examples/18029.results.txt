METHOD_0 ( ) { java . util . concurrent . IDENT_0 IDENT_1 = java . util . concurrent . IDENT_2 . METHOD_1 ( ) ; final java . util . concurrent . IDENT_3 IDENT_4 = new java . util . concurrent . METHOD_2 ( 1 ) ; IDENT_1 . METHOD_3 ( new java . util . concurrent . IDENT_5 < java . lang . IDENT_6 > ( ) { @ org . apache . jackrabbit . oak . commons . concurrent . Override public org . apache . jackrabbit . oak . commons . concurrent . IDENT_6 call ( ) throws org . apache . jackrabbit . oak . commons . concurrent . Exception { IDENT_4 . METHOD_4 ( ) ; return null ; } } ) ; new org . apache . jackrabbit . oak . commons . concurrent . METHOD_5 ( IDENT_1 , 100 , java . util . concurrent . TimeUnit . IDENT_7 ) . close ( ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( ) { throw new java . lang . IllegalStateException ( STRING_0 ) ; }
org . junit . Assert . assertTrue ( IDENT_1 . METHOD_6 ( ) ) 