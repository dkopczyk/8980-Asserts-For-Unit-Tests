METHOD_0 ( ) { org . osgi . framework . IDENT_0 IDENT_1 = mock ( org . osgi . framework . IDENT_0 . class ) ; org . apache . jackrabbit . oak . osgi . IDENT_2 IDENT_3 = new org . apache . jackrabbit . oak . osgi . METHOD_1 ( IDENT_1 ) ; java . lang . IDENT_4 r = new java . lang . METHOD_2 ( ) { @ org . apache . jackrabbit . oak . osgi . Override public void run ( ) { } } ; final java . util . concurrent . atomic . IDENT_5 IDENT_6 = new java . util . concurrent . atomic . METHOD_3 ( ) ; org . osgi . framework . IDENT_7 IDENT_8 = new org . osgi . framework . METHOD_4 ( ) { @ org . apache . jackrabbit . oak . osgi . Override public void METHOD_5 ( ) { if ( IDENT_6 . get ( ) ) { throw new java . lang . IllegalStateException ( STRING_0 ) ; } IDENT_6 . set ( true ) ; } @ org . apache . jackrabbit . oak . osgi . Override public void METHOD_6 ( java . util . IDENT_9 properties ) { } @ org . apache . jackrabbit . oak . osgi . Override public org . osgi . framework . IDENT_10 METHOD_7 ( ) { return null ; } } ; when ( IDENT_1 . METHOD_8 ( org . apache . jackrabbit . oak . osgi . METHOD_2 . class . getName ( ) , r , new java . util . IDENT_11 < java . lang . Object , java . lang . Object > ( ) ) ) . thenReturn ( IDENT_8 ) ; org . apache . jackrabbit . oak . spi . IDENT_12 . IDENT_13 IDENT_14 = IDENT_3 . METHOD_9 ( org . apache . jackrabbit . oak . osgi . METHOD_2 . class , r , new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ) ; IDENT_14 . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; IDENT_14 . METHOD_5 ( ) ; } get ( ) { return result ; }
org . junit . Assert . assertTrue ( IDENT_6 . get ( ) ) 