METHOD_0 ( ) { org . apache . jackrabbit . oak . spi . IDENT_0 . IDENT_1 IDENT_2 = new org . apache . jackrabbit . oak . spi . IDENT_0 . METHOD_1 ( 2 , of ( STRING_0 ) , of ( STRING_1 ) , of ( STRING_2 ) , of ( STRING_3 ) , of ( STRING_4 ) ) ; java . lang . String json = IDENT_2 . METHOD_2 ( ) ; org . apache . jackrabbit . oak . spi . IDENT_0 . METHOD_1 IDENT_3 = org . apache . jackrabbit . oak . spi . IDENT_0 . METHOD_1 . METHOD_3 ( json ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String ) { org . apache . jackrabbit . oak . commons . json . IDENT_4 reader = new org . apache . jackrabbit . oak . commons . json . METHOD_4 ( json ) ; int IDENT_5 = 0 ; java . util . Set < java . lang . String > IDENT_6 = null ; java . util . Set < java . lang . String > IDENT_7 = null ; java . util . Set < java . lang . String > IDENT_8 = null ; java . util . Set < java . lang . String > IDENT_9 = null ; java . util . Set < java . lang . String > IDENT_10 = null ; reader . read ( STRING_5 ) ; if ( ! ( reader . matches ( STRING_6 ) ) ) { do { java . lang . String name = reader . METHOD_5 ( ) ; reader . read ( STRING_7 ) ; if ( STRING_8 . equals ( name ) ) { IDENT_5 = java . lang . Integer . METHOD_6 ( reader . read ( IDENT_4 . IDENT_11 ) ) ; } else { java . util . Set < java . lang . String > data = org . apache . jackrabbit . oak . spi . IDENT_0 . METHOD_1 . METHOD_7 ( reader ) ; if ( STRING_9 . equals ( name ) ) { IDENT_6 = data ; } else if ( STRING_10 . equals ( name ) ) { IDENT_7 = data ; } else if ( STRING_11 . equals ( name ) ) { IDENT_8 = data ; } else if ( STRING_12 . equals ( name ) ) { IDENT_9 = data ; } else if ( STRING_13 . equals ( name ) ) { IDENT_10 = data ; } } } while ( reader . matches ( STRING_14 ) ) ; reader . read ( STRING_6 ) ; } reader . read ( IDENT_4 . IDENT_12 ) ; return new org . apache . jackrabbit . oak . spi . IDENT_0 . METHOD_1 ( IDENT_5 , IDENT_6 , IDENT_7 , IDENT_8 , IDENT_9 , IDENT_10 ) ; }
org . junit . Assert . assertEquals ( IDENT_2 , IDENT_3 ) 