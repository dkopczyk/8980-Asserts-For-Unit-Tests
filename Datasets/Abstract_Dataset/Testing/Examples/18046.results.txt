METHOD_0 ( ) { org . apache . jackrabbit . oak . api . IDENT_0 repo = new org . apache . jackrabbit . oak . METHOD_1 ( ) . with ( "test" ) . with ( new org . apache . jackrabbit . oak . spi . security . METHOD_2 ( ) ) . METHOD_3 ( ) ; java . lang . String [ ] IDENT_1 = new java . lang . String [ ] { null , "test" } ; for ( java . lang . String IDENT_2 : IDENT_1 ) { org . apache . jackrabbit . oak . api . IDENT_3 cs = null ; try { cs = repo . METHOD_4 ( null , IDENT_2 ) ; "<AssertPlaceHolder>" ; } finally { if ( cs != null ) { cs . close ( ) ; } } } java . lang . String [ ] IDENT_4 = new java . lang . String [ ] { "" , STRING_0 , METHOD_1 . IDENT_5 } ; for ( java . lang . String IDENT_2 : IDENT_4 ) { org . apache . jackrabbit . oak . api . IDENT_3 cs = null ; try { cs = repo . METHOD_4 ( null , IDENT_2 ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( javax . jcr . IDENT_6 e ) { } finally { if ( cs != null ) { cs . close ( ) ; } } } } METHOD_5 ( ) { return IDENT_7 ; }
org . junit . Assert . assertEquals ( "test" , cs . METHOD_5 ( ) ) 