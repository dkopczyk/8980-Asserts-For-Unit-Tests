METHOD_0 ( ) { java . lang . String result = IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( "" , 10 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , int ) { if ( ( input == null ) || ( length < 1 ) ) { throw new java . lang . IllegalArgumentException ( STRING_0 ) ; } final java . lang . String text = input . trim ( ) ; if ( ( ( text . length ( ) ) > length ) && ( text . contains ( " " ) ) ) { final java . lang . String line = text . substring ( 0 , length ) ; final int IDENT_4 = line . indexOf ( "\n" ) ; final int IDENT_5 = line . METHOD_2 ( " " ) ; final int IDENT_6 = text . indexOf ( " " ) ; final int IDENT_7 = ( IDENT_4 > ( - 1 ) ) ? IDENT_4 : IDENT_5 > ( - 1 ) ? IDENT_5 : IDENT_6 ; return ( ( text . substring ( 0 , IDENT_7 ) ) + "\n" ) + ( IDENT_0 . IDENT_1 . METHOD_1 . IDENT_3 . METHOD_1 ( text . substring ( ( IDENT_7 + 1 ) ) , length ) ) ; } else { return text ; } }
org . junit . Assert . assertEquals ( "" , result ) 