METHOD_0 ( ) { expect ( IDENT_0 . METHOD_1 ( ) ) . METHOD_2 ( IDENT_1 ) ; expect ( IDENT_0 . METHOD_3 ( ) ) . METHOD_2 ( IDENT_2 ) ; expect ( IDENT_3 . METHOD_1 ( ) ) . METHOD_2 ( IDENT_4 ) ; expect ( IDENT_3 . METHOD_3 ( ) ) . METHOD_2 ( IDENT_5 ) ; expect ( IDENT_1 . METHOD_4 ( ) ) . METHOD_2 ( IDENT_6 ) ; expect ( IDENT_2 . METHOD_4 ( ) ) . METHOD_2 ( IDENT_7 ) ; expect ( IDENT_4 . METHOD_4 ( ) ) . METHOD_2 ( IDENT_8 ) ; expect ( IDENT_5 . METHOD_4 ( ) ) . METHOD_2 ( IDENT_9 ) ; expect ( IDENT_0 . METHOD_5 ( ) ) . METHOD_2 ( IDENT_10 ) ; expect ( IDENT_3 . METHOD_5 ( ) ) . METHOD_2 ( IDENT_11 ) ; expect ( IDENT_10 . getValue ( ) ) . METHOD_2 ( IDENT_12 ) ; expect ( IDENT_11 . getValue ( ) ) . METHOD_2 ( IDENT_13 ) ; client . METHOD_6 ( IDENT_0 ) ; client . METHOD_6 ( IDENT_3 ) ; replay ( IDENT_0 , IDENT_3 , IDENT_1 , IDENT_2 , IDENT_4 , IDENT_5 , IDENT_10 , IDENT_11 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ) { java . math . BigDecimal value = java . math . BigDecimal . IDENT_14 ; for ( com . IDENT_15 . IDENT_16 . IDENT_17 . IDENT_18 . IDENT_19 f : IDENT_20 ) { value = value . add ( f . getValue ( ) ) ; } return value ; }
org . junit . Assert . assertEquals ( java . math . BigDecimal . valueOf ( ( ( ( 5 + 1 ) * 3 ) + ( ( 4 + 1 ) * 2 ) ) ) , client . METHOD_7 ( ) ) 