METHOD_0 ( ) { java . lang . String [ ] IDENT_0 = new java . lang . String [ INT_0 ] ; for ( int i = 0 ; i < INT_0 ; i ++ ) { IDENT_0 [ i ] = IDENT_1 . IDENT_2 . METHOD_1 ( ) ; } IDENT_1 . IDENT_3 br = new IDENT_1 . METHOD_2 ( STRING_0 ) . METHOD_3 ( STRING_1 ) ; IDENT_1 . IDENT_3 IDENT_4 = IDENT_1 . METHOD_2 . METHOD_4 ( STRING_2 , STRING_3 ) . METHOD_3 ( " " ) ; IDENT_1 . IDENT_3 IDENT_5 = IDENT_1 . METHOD_2 . METHOD_4 ( STRING_4 , STRING_3 ) . METHOD_3 ( " " ) ; java . lang . StringBuilder sb = new java . lang . StringBuilder ( INT_1 ) ; java . lang . StringBuilder IDENT_6 = new java . lang . StringBuilder ( INT_1 ) ; java . lang . StringBuilder IDENT_7 = new java . lang . StringBuilder ( INT_1 ) ; boolean found ; for ( int i = 0 ; i < INT_0 ; i ++ ) { IDENT_4 . replace ( IDENT_0 [ i ] , sb ) ; IDENT_5 . replace ( IDENT_0 [ i ] , IDENT_6 ) ; "<AssertPlaceHolder>" ; br . replace ( IDENT_0 [ i ] , IDENT_7 ) ; } System . out . println ( IDENT_7 ) ; } toString ( ) { java . lang . StringBuilder b = new java . lang . StringBuilder ( 100 ) ; b . append ( IDENT_8 ) ; b . append ( STRING_5 ) ; b . append ( IDENT_1 . IDENT_9 . METHOD_5 ( type ) ) ; b . append ( STRING_6 3 ) ; if ( IDENT_10 ) b . append ( STRING_7 ) ; switch ( type ) { case IDENT_1 . IDENT_9 . IDENT_11 : b . append ( STRING_8 ) ; b . append ( STRING_9 0 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_12 : b . append ( IDENT_1 . IDENT_13 . METHOD_6 ( c ) ) ; b . append ( STRING_9 0 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_14 : b . append ( STRING_10 8 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_15 : b . append ( STRING_11 5 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_16 : b . append ( STRING_12 ) ; b . append ( IDENT_1 . IDENT_13 . METHOD_7 ( IDENT_17 ) ) ; b . append ( STRING_13 ) ; b . append ( STRING_9 2 ) ; b . append ( IDENT_18 ) ; b . append ( STRING_9 0 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_19 : b . append ( STRING_12 ) ; b . append ( IDENT_1 . IDENT_13 . METHOD_8 ( IDENT_20 ) ) ; b . append ( STRING_13 ) ; b . append ( STRING_14 2 ) ; b . append ( IDENT_18 ) ; b . append ( STRING_9 0 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_21 : b . append ( STRING_8 2 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_22 : b . append ( STRING_11 0 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_23 : b . append ( STRING_11 8 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_24 : b . append ( STRING_14 3 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_25 : b . append ( STRING_14 8 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_26 : if ( IDENT_10 ) b . append ( STRING_8 7 ) ; b . append ( STRING_14 4 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_27 : if ( IDENT_10 ) b . append ( STRING_8 7 ) ; b . append ( STRING_14 4 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_28 : if ( IDENT_10 ) b . append ( STRING_8 7 ) ; b . append ( STRING_14 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_29 : b . append ( STRING_10 9 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_30 : b . append ( STRING_14 0 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_31 : b . append ( STRING_15 ) ; case IDENT_1 . IDENT_9 . IDENT_32 : b . append ( STRING_6 1 ) ; b . append ( target ) ; b . append ( STRING_14 1 ) ; b . append ( IDENT_33 ) ; if ( IDENT_34 ) { b . append ( STRING_8 4 ) ; } b . append ( STRING_11 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_35 : b . append ( STRING_8 8 ) ; b . append ( target ) ; b . append ( STRING_9 6 ) ; if ( ( IDENT_36 ) != null ) { b . append ( STRING_9 9 ) ; b . append ( IDENT_36 . IDENT_8 ) ; b . append ( STRING_11 ) ; } break ; case IDENT_1 . IDENT_9 . IDENT_37 : b . append ( STRING_8 8 ) ; b . append ( target ) ; b . append ( STRING_6 4 ) ; b . append ( IDENT_38 ) ; b . append ( STRING_14 7 ) ; if ( ( IDENT_36 ) != null ) { b . append ( STRING_9 9 ) ; b . append ( IDENT_36 . IDENT_8 ) ; b . append ( STRING_11 ) ; } break ; case IDENT_1 . IDENT_9 . IDENT_39 : b . append ( STRING_8 8 ) ; b . append ( target ) ; b . append ( STRING_6 4 ) ; b . append ( IDENT_38 ) ; b . append ( STRING_6 4 ) ; b . append ( IDENT_40 ) ; b . append ( STRING_6 0 ) ; if ( ( IDENT_36 ) != null ) { b . append ( STRING_9 9 ) ; b . append ( IDENT_36 . IDENT_8 ) ; b . append ( STRING_11 ) ; } break ; case IDENT_1 . IDENT_9 . IDENT_41 : b . append ( STRING_8 9 ) ; b . append ( IDENT_42 ) ; b . append ( STRING_16 ) ; b . append ( IDENT_38 ) ; b . append ( STRING_14 7 ) ; if ( ( IDENT_36 ) != null ) { b . append ( STRING_9 9 ) ; b . append ( IDENT_36 . IDENT_8 ) ; b . append ( STRING_11 ) ; } break ; case IDENT_1 . IDENT_9 . IDENT_43 : b . append ( STRING_8 9 ) ; b . append ( IDENT_42 ) ; b . append ( STRING_16 ) ; b . append ( IDENT_38 ) ; b . append ( STRING_16 ) ; b . append ( IDENT_40 ) ; b . append ( STRING_6 0 ) ; if ( ( IDENT_36 ) != null ) { b . append ( STRING_9 9 ) ; b . append ( IDENT_36 . IDENT_8 ) ; b . append ( STRING_11 ) ; } break ; case IDENT_1 . IDENT_9 . IDENT_44 : b . append ( STRING_9 5 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_45 : b . append ( STRING_11 9 ) ; b . append ( IDENT_38 ) ; b . append ( STRING_9 7 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_46 : b . append ( STRING_11 3 ) ; b . append ( STRING_10 0 ) ; b . append ( IDENT_42 ) ; b . append ( STRING_10 3 ) ; b . append ( IDENT_38 ) ; b . append ( STRING_9 7 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_47 : b . append ( STRING_17 ) ; if ( ( IDENT_42 ) > 0 ) b . append ( IDENT_42 ) ; b . append ( STRING_18 ) ; b . append ( STRING_9 0 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_48 : b . append ( STRING_18 ) ; if ( ( IDENT_42 ) > 0 ) b . append ( IDENT_42 ) ; b . append ( STRING_19 ) ; b . append ( STRING_9 0 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_49 : b . append ( STRING_17 ) ; b . append ( STRING_9 1 ) ; b . append ( IDENT_50 ) ; b . append ( STRING_9 0 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_51 : b . append ( STRING_20 ) ; b . append ( IDENT_50 ) ; b . append ( STRING_19 ) ; b . append ( STRING_9 0 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_52 : b . append ( STRING_9 ) ; b . append ( IDENT_50 ) ; b . append ( STRING_9 0 ) ; if ( ( IDENT_36 ) != null ) { b . append ( STRING_9 9 ) ; b . append ( IDENT_36 . IDENT_8 ) ; b . append ( STRING_11 ) ; } break ; case IDENT_1 . IDENT_9 . IDENT_53 : b . append ( STRING_21 ) ; b . append ( IDENT_50 ) ; b . append ( STRING_19 ) ; b . append ( STRING_9 0 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_54 : b . append ( STRING_17 ) ; b . append ( STRING_14 5 ) ; b . append ( IDENT_50 ) ; b . append ( STRING_22 ) ; b . append ( IDENT_33 ) ; b . append ( STRING_9 0 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_55 : b . append ( STRING_14 5 ) ; b . append ( IDENT_50 ) ; b . append ( STRING_19 ) ; b . append ( STRING_9 0 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_56 : b . append ( STRING_14 9 ) ; b . append ( IDENT_50 ) ; b . append ( STRING_22 ) ; b . append ( IDENT_33 ) ; b . append ( STRING_9 0 ) ; if ( ( IDENT_36 ) != null ) { b . append ( STRING_9 9 ) ; b . append ( IDENT_36 . IDENT_8 ) ; b . append ( STRING_11 ) ; } break ; case IDENT_1 . IDENT_9 . IDENT_57 : b . append ( STRING_8 3 ) ; b . append ( IDENT_50 ) ; b . append ( STRING_19 ) ; b . append ( STRING_9 0 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_58 : b . append ( STRING_8 0 ) ; b . append ( IDENT_42 ) ; b . append ( STRING_11 1 ) ; if ( ( IDENT_36 ) != null ) { b . append ( STRING_9 9 ) ; b . append ( IDENT_36 . IDENT_8 ) ; b . append ( STRING_11 ) ; } break ; case IDENT_1 . IDENT_9 . IDENT_59 : b . append ( STRING_10 1 ) ; b . append ( IDENT_50 ) ; b . append ( ( ( ( IDENT_1 . IDENT_60 ) ( this ) ) . IDENT_61 ? STRING_20 : STRING_21 ) ) ; b . append ( STRING_9 0 ) ; if ( ( IDENT_36 ) != null ) { b . append ( STRING_9 9 ) ; b . append ( IDENT_36 . IDENT_8 ) ; b . append ( STRING_11 ) ; } break ; case IDENT_1 . IDENT_9 . IDENT_62 : b . append ( STRING_6 ) ; b . append ( IDENT_50 ) ; b . append ( STRING_9 7 ) ; if ( ( IDENT_36 ) != null ) { b . append ( STRING_9 9 ) ; b . append ( IDENT_36 . IDENT_8 ) ; b . append ( STRING_11 ) ; } break ; case IDENT_1 . IDENT_9 . IDENT_63 : b . append ( STRING_11 6 ) ; b . append ( IDENT_42 ) ; b . append ( STRING_11 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_64 : return b . append ( STRING_23 ) . toString ( ) ; case IDENT_1 . IDENT_9 . IDENT_65 : b . append ( STRING_24 ) ; case IDENT_1 . IDENT_9 . IDENT_66 : b . append ( STRING_11 4 ) ; case IDENT_1 . IDENT_9 . IDENT_67 : b . append ( STRING_11 7 ) ; if ( ( IDENT_36 ) != null ) b . append ( IDENT_36 . IDENT_8 ) ; else b . append ( STRING_9 8 ) ; b . append ( STRING_9 0 ) ; break ; default : b . append ( STRING_12 ) ; switch ( type ) { case IDENT_1 . IDENT_9 . IDENT_68 : b . append ( STRING_10 2 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_69 : b . append ( STRING_6 2 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_70 : b . append ( STRING_10 4 ) . append ( IDENT_40 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_71 : b . append ( STRING_25 ) . append ( IDENT_40 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_72 : b . append ( STRING_8 5 ) . append ( IDENT_42 ) . append ( STRING_8 6 ) . append ( IDENT_73 ) . append ( STRING_8 6 ) . append ( IDENT_73 ) . append ( STRING_10 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_74 : b . append ( STRING_9 3 ) . append ( IDENT_73 ) . append ( STRING_10 5 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_75 : b . append ( STRING_9 3 ) . append ( IDENT_73 ) . append ( STRING_9 4 ) . append ( IDENT_40 ) ; break ; case IDENT_1 . IDENT_9 . IDENT_76 : b . append ( STRING_9 3 ) . append ( IDENT_73 ) . append ( STRING_11 2 ) . append ( IDENT_40 ) ; break ; default : b . append ( STRING_10 7 ) . append ( type ) ; } b . append ( STRING_8 1 ) ; } if ( ( next ) != null ) { b . append ( STRING_14 6 ) ; b . append ( next . IDENT_8 ) ; b . append ( STRING_11 ) ; } return b . toString ( ) ; }
org . junit . Assert . assertEquals ( sb . toString ( ) , IDENT_6 . toString ( ) ) 