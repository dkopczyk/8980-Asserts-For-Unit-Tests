METHOD_0 ( ) { java . util . IDENT_0 IDENT_1 = new java . util . METHOD_1 ( INT_0 ) ; for ( int i = 0 ; i < 100 ; i ++ ) { byte [ ] test = new byte [ 1000 + i ] ; IDENT_1 . METHOD_2 ( test ) ; int start = IDENT_1 . METHOD_3 ( test . length ) ; int len = IDENT_1 . METHOD_3 ( ( ( test . length ) - start ) ) ; net . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 a = new net . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_4 ( ) ; a . update ( test , start , len ) ; int val = a . value ( ) ; a . METHOD_5 ( test ) ; val = a . value ( ) ; a . METHOD_6 ( ) ; a . update ( test , ( start + 1 ) , len ) ; int IDENT_6 = a . value ( ) ; "<AssertPlaceHolder>" ; } } value ( ) { return ( ( b ) << 16 ) | ( a ) ; }
org . junit . Assert . assertEquals ( val , IDENT_6 ) 