METHOD_0 ( ) { net . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new net . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; net . IDENT_0 . IDENT_1 . METHOD_1 IDENT_4 = new net . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; net . IDENT_0 . IDENT_1 . IDENT_5 IDENT_6 = null ; net . IDENT_0 . IDENT_1 . IDENT_5 IDENT_7 = null ; net . IDENT_0 . connection . IDENT_8 cc = null ; try { IDENT_6 = new net . IDENT_0 . IDENT_1 . METHOD_2 ( new net . IDENT_0 . IDENT_9 . METHOD_3 ( new net . IDENT_0 . IDENT_10 . METHOD_4 ( STRING_0 ) ) . METHOD_5 ( INT_0 ) . METHOD_6 ( INT_1 ) . start ( ) ) . storage ( IDENT_3 ) . start ( ) ; IDENT_7 = new net . IDENT_0 . IDENT_1 . METHOD_2 ( new net . IDENT_0 . IDENT_9 . METHOD_3 ( new net . IDENT_0 . IDENT_10 . METHOD_4 ( STRING_1 ) ) . METHOD_5 ( INT_0 ) . METHOD_6 ( INT_2 ) . start ( ) ) . storage ( IDENT_4 ) . start ( ) ; net . IDENT_0 . IDENT_1 . IDENT_11 IDENT_12 = IDENT_6 . METHOD_7 ( ) ; java . util . IDENT_13 < net . IDENT_0 . IDENT_10 . METHOD_4 , net . IDENT_0 . storage . IDENT_14 > IDENT_15 = new java . util . IDENT_16 < net . IDENT_0 . IDENT_10 . METHOD_4 , net . IDENT_0 . storage . IDENT_14 > ( ) ; byte [ ] IDENT_17 = new byte [ ( 50 * INT_3 ) * INT_3 ] ; IDENT_15 . put ( new net . IDENT_0 . IDENT_10 . METHOD_4 ( INT_4 ) , new net . IDENT_0 . storage . METHOD_8 ( IDENT_17 ) ) ; net . IDENT_0 . IDENT_18 . IDENT_19 IDENT_20 = IDENT_6 . METHOD_9 ( ) . METHOD_10 ( ) . METHOD_11 ( ) . create ( 0 , 1 ) ; IDENT_20 . METHOD_12 ( ) ; cc = IDENT_20 . METHOD_13 ( ) ; net . IDENT_0 . IDENT_1 . IDENT_21 IDENT_22 = new net . IDENT_0 . IDENT_1 . METHOD_14 ( IDENT_6 , new net . IDENT_0 . IDENT_10 . METHOD_4 ( INT_5 ) ) ; IDENT_22 . METHOD_15 ( net . IDENT_0 . IDENT_10 . METHOD_4 . METHOD_16 ( "test" ) ) ; IDENT_22 . METHOD_17 ( IDENT_15 ) ; IDENT_22 . METHOD_18 ( METHOD_4 . IDENT_23 ) ; net . IDENT_0 . IDENT_18 . IDENT_24 fr = IDENT_12 . put ( IDENT_7 . METHOD_19 ( ) , IDENT_22 , cc ) ; java . lang . Thread . sleep ( 50 ) ; fr . METHOD_20 ( ) ; "<AssertPlaceHolder>" ; System . err . println ( STRING_2 ) ; fr . METHOD_21 ( ) ; } finally { if ( cc != null ) { cc . METHOD_22 ( ) . METHOD_23 ( ) ; } if ( IDENT_6 != null ) { IDENT_6 . METHOD_22 ( ) . METHOD_24 ( ) ; } if ( IDENT_7 != null ) { IDENT_7 . METHOD_22 ( ) . METHOD_24 ( ) ; } } } METHOD_25 ( ) { if ( ! ( super . METHOD_25 ( ) ) ) { return false ; } return METHOD_26 ( result ( ) , IDENT_25 . size ( ) , IDENT_26 ) ; }
org . junit . Assert . assertEquals ( false , fr . METHOD_25 ( ) ) 