METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 IDENT_6 = mock ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . class ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_3 . IDENT_8 . IDENT_9 IDENT_10 = new org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_3 . IDENT_8 . METHOD_1 ( STRING_0 ) ; when ( IDENT_6 . METHOD_2 ( org . IDENT_0 . IDENT_1 . api . IDENT_2 . IDENT_11 [ ] . class ) ) . thenReturn ( IDENT_10 ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_12 IDENT_13 = mock ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_12 . class ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_12 IDENT_14 = mock ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_12 . class ) ; java . util . Map < java . lang . Class , org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_12 > IDENT_15 = new java . util . HashMap < java . lang . Class , org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_12 > ( 4 ) ; IDENT_15 . put ( javax . servlet . IDENT_16 . class , IDENT_13 ) ; java . util . concurrent . IDENT_17 IDENT_18 = new java . util . concurrent . METHOD_3 ( 1 ) ; IDENT_19 = METHOD_4 ( configuration , new org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_5 ( IDENT_14 , IDENT_15 ) , IDENT_6 , IDENT_18 ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_20 . IDENT_21 < javax . servlet . IDENT_16 > context = mock ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_20 . IDENT_22 . class ) ; when ( context . METHOD_6 ( ) ) . thenReturn ( javax . servlet . IDENT_16 . class ) ; java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_20 . IDENT_21 > IDENT_23 = new java . util . ArrayList < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_20 . IDENT_21 > ( 1 ) ; IDENT_23 . add ( context ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . domain . api . IDENT_24 IDENT_25 = METHOD_7 ( ) ; java . util . List < java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_20 . IDENT_21 > > list = new java . util . ArrayList < java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_20 . IDENT_21 > > ( 1 ) ; list . add ( IDENT_23 ) ; IDENT_19 . METHOD_8 ( METHOD_9 ( new org . IDENT_0 . IDENT_1 . IDENT_2 . domain . api . IDENT_24 [ ] { IDENT_25 } ) , list ) ; try { boolean IDENT_26 = IDENT_18 . METHOD_10 ( INT_0 , TimeUnit . IDENT_27 ) ; if ( IDENT_26 == false ) org . junit . Assert . fail ( STRING_1 ) ; } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( STRING_1 ) ; } "<AssertPlaceHolder>" ; verify ( IDENT_13 , times ( 1 ) ) . METHOD_11 ( eq ( IDENT_28 . IDENT_29 ) , eq ( IDENT_28 . IDENT_30 ) , any ( org . IDENT_0 . IDENT_1 . IDENT_2 . domain . api . IDENT_24 . class ) , any ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_20 . IDENT_21 . class ) ) ; verify ( IDENT_14 , times ( 0 ) ) . METHOD_11 ( anyString ( ) , anyString ( ) , any ( org . IDENT_0 . IDENT_1 . IDENT_2 . domain . api . IDENT_24 . class ) , any ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_20 . IDENT_21 . class ) ) ; verify ( context , times ( 1 ) ) . close ( ) ; } METHOD_12 ( ) { return IDENT_31 . get ( ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_10 . METHOD_12 ( ) ) 