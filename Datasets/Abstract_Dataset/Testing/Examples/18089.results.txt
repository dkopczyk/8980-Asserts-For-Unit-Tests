METHOD_0 ( ) { final org . apache . jackrabbit . oak . spi . state . IDENT_0 builder = IDENT_1 . IDENT_2 . builder ( ) ; for ( int i = 1 ; i < 20 ; i ++ ) { builder . child ( ( "a" + i ) ) ; } final org . apache . jackrabbit . oak . plugins . IDENT_3 . report . IDENT_4 IDENT_5 = new org . apache . jackrabbit . oak . plugins . IDENT_3 . report . METHOD_1 ( 10 , 10 ) ; final org . apache . jackrabbit . oak . spi . state . IDENT_6 IDENT_7 = org . apache . jackrabbit . oak . plugins . IDENT_3 . report . IDENT_8 . METHOD_2 ( builder . METHOD_3 ( ) , IDENT_5 ) ; IDENT_5 . METHOD_4 ( ) ; int IDENT_9 = 0 ; java . lang . String name = STRING_0 ; for ( final org . apache . jackrabbit . oak . spi . state . IDENT_10 child : IDENT_7 . METHOD_5 ( ) ) { if ( ( ++ IDENT_9 ) == 10 ) { name = child . getName ( ) ; break ; } } "<AssertPlaceHolder>" ; } METHOD_6 ( int , java . lang . String ) { return org . apache . jackrabbit . oak . plugins . IDENT_3 . report . METHOD_1 . METHOD_7 ( METHOD_8 ( ( ( long ) ( count ) ) , path ) , org . apache . jackrabbit . oak . plugins . IDENT_3 . report . METHOD_1 . METHOD_9 ( ) ) ; }
org . junit . Assert . assertThat ( IDENT_5 , org . apache . jackrabbit . oak . plugins . IDENT_3 . report . METHOD_1 . METHOD_6 ( 10 , ( "/" + name ) ) ) 