METHOD_0 ( ) { IDENT_0 = new org . IDENT_1 . IDENT_2 . input . METHOD_1 ( METHOD_2 ( STRING_0 . getBytes ( ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { METHOD_4 ( ) ; char c = ( ( char ) ( source ( ) . METHOD_5 ( ) ) ) ; switch ( c ) { case STRING_1 : { source ( ) . read ( ) ; c = ( ( char ) ( source ( ) . METHOD_5 ( ) ) ) ; source ( ) . METHOD_6 ( ) ; if ( c == STRING_1 ) { return METHOD_7 ( ) ; } return METHOD_8 ( ) ; } case STRING_2 : return METHOD_9 ( ) ; case STRING_3 : return METHOD_10 ( ) ; case STRING_4 : return METHOD_11 ( ) ; case STRING_5 : return METHOD_12 ( ) ; case STRING_6 : case STRING_7 : return METHOD_13 ( ) ; case STRING_8 : case STRING_9 : case STRING_10 : return METHOD_14 ( ) ; case STRING_11 : case STRING_12 : case STRING_13 : case STRING_14 : case STRING_15 : case STRING_16 : case STRING_17 : case STRING_18 : case STRING_19 : case STRING_20 : return METHOD_15 ( ) ; case ( ( char ) ( - 1 ) ) : return null ; default : { java . lang . String IDENT_3 = METHOD_16 ( ) ; if ( ( ( org . IDENT_1 . IDENT_2 . input . IDENT_4 . equals ( IDENT_3 ) ) || ( org . IDENT_1 . IDENT_2 . input . IDENT_5 . equals ( IDENT_3 ) ) ) || ( org . IDENT_1 . IDENT_2 . input . IDENT_6 . equals ( IDENT_3 ) ) ) { source ( ) . METHOD_6 ( IDENT_3 . getBytes ( IDENT_7 . IDENT_8 ) . length ) ; } else { org . IDENT_1 . IDENT_2 . input . METHOD_1 . LOG . warn ( java . lang . String . format ( STRING_21 , IDENT_3 , position ( ) ) ) ; if ( ( IDENT_3 . length ( ) ) <= 0 ) { source ( ) . read ( ) ; } } } } return null ; }
org . junit . Assert . assertNull ( IDENT_0 . METHOD_3 ( ) ) 