METHOD_0 ( ) { org . apache . jackrabbit . oak . plugins . IDENT_0 . filter . IDENT_1 p = new org . apache . jackrabbit . oak . plugins . IDENT_0 . filter . METHOD_1 ( new java . lang . String [ ] { org . apache . jackrabbit . oak . commons . IDENT_2 . METHOD_2 ( ) , org . apache . jackrabbit . oak . commons . IDENT_2 . METHOD_2 ( ) , org . apache . jackrabbit . oak . commons . IDENT_2 . METHOD_2 ( ) } ) ; org . apache . jackrabbit . oak . spi . state . IDENT_3 tree = org . apache . jackrabbit . oak . plugins . IDENT_0 . filter . IDENT_4 . METHOD_3 ( org . apache . jackrabbit . oak . commons . IDENT_2 . METHOD_2 ( ) ) ; "<AssertPlaceHolder>" ; } apply ( java . lang . String ) { return new org . apache . jackrabbit . oak . plugins . IDENT_5 . METHOD_4 ( input , IDENT_6 ) ; }
org . junit . Assert . assertFalse ( p . apply ( tree ) ) 