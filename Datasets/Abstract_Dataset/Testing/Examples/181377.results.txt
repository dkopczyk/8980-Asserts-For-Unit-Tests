METHOD_0 ( ) { org . eclipse . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 IDENT_2 = org . eclipse . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_4 . create ( 0 , IDENT_3 . IDENT_5 ) ; org . eclipse . IDENT_0 . IDENT_1 . core . trace . IDENT_6 result = fixture . METHOD_1 ( IDENT_2 ) ; "<AssertPlaceHolder>" ; result . METHOD_2 ( ) ; } METHOD_1 ( double ) { if ( ( IDENT_7 ) == null ) { return new org . eclipse . IDENT_0 . IDENT_1 . core . trace . METHOD_3 ( org . eclipse . IDENT_0 . IDENT_8 . core . trace . IDENT_9 . IDENT_10 , org . eclipse . IDENT_0 . IDENT_1 . core . trace . IDENT_6 . IDENT_11 ) ; } try { long pos = ( java . lang . Math . METHOD_4 ( ( IDENT_12 * ( IDENT_7 . length ( ) ) ) ) ) - ( IDENT_13 ) ; while ( pos > 0 ) { IDENT_14 . METHOD_5 ( ( pos - 1 ) ) ; if ( ( IDENT_14 . read ( ) ) == STRING_0 ) { break ; } pos OP_0 ; } final org . eclipse . IDENT_0 . IDENT_1 . core . trace . location . IDENT_15 location = new org . eclipse . IDENT_0 . IDENT_1 . core . trace . location . METHOD_6 ( pos ) ; final org . eclipse . IDENT_0 . IDENT_1 . core . trace . IDENT_6 context = METHOD_1 ( location ) ; context . METHOD_7 ( IDENT_6 . IDENT_11 ) ; return context ; } catch ( final java . io . IOException e ) { org . eclipse . IDENT_0 . IDENT_8 . core . IDENT_16 . METHOD_8 ( ( STRING_1 + ( getPath ( ) ) ) , e ) ; return new org . eclipse . IDENT_0 . IDENT_1 . core . IDENT_17 . IDENT_18 . METHOD_9 ( org . eclipse . IDENT_0 . IDENT_8 . core . trace . IDENT_9 . IDENT_10 , org . eclipse . IDENT_0 . IDENT_1 . core . trace . IDENT_6 . IDENT_11 ) ; } }
org . junit . Assert . assertNotNull ( result ) 