METHOD_0 ( ) { org . apache . jackrabbit . oak . security . authentication . token . IDENT_0 IDENT_1 = new org . apache . jackrabbit . oak . security . authentication . token . METHOD_1 ( ) ; IDENT_1 . METHOD_2 ( new javax . security . auth . METHOD_3 ( ) , new org . apache . jackrabbit . oak . security . authentication . token . IDENT_2 . METHOD_4 ( javax . security . auth . IDENT_3 . IDENT_4 . class ) , com . google . common . collect . ImmutableMap . < java . lang . String , java . lang . Object > of ( ) , com . google . common . collect . ImmutableMap . < java . lang . String , java . lang . Object > of ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { if ( ( ( IDENT_5 ) == null ) || ( ( IDENT_6 ) == null ) ) { return false ; } IDENT_7 = METHOD_6 ( ) ; final org . apache . jackrabbit . oak . spi . security . authentication . IDENT_8 IDENT_9 = METHOD_7 ( ) ; final java . lang . String IDENT_10 = METHOD_8 ( IDENT_9 , IDENT_7 ) ; if ( ( IDENT_10 == null ) && ( ( IDENT_7 ) == null ) ) { org . apache . jackrabbit . oak . spi . security . authentication . IDENT_11 . impl . IDENT_12 . log . debug ( STRING_0 ) ; return false ; } java . lang . Object IDENT_13 = ( IDENT_10 != null ) ? IDENT_10 : IDENT_7 ; try { org . apache . jackrabbit . oak . spi . security . authentication . IDENT_11 . IDENT_14 IDENT_15 = METHOD_9 ( IDENT_10 ) ; if ( METHOD_10 ( IDENT_15 , IDENT_9 ) ) { return false ; } if ( IDENT_9 != null ) { IDENT_16 = IDENT_5 . METHOD_11 ( IDENT_9 . METHOD_8 ( ) ) ; } else { IDENT_16 = IDENT_5 . METHOD_12 ( IDENT_7 ) ; } if ( ( IDENT_16 ) != null ) { org . apache . jackrabbit . oak . spi . security . authentication . IDENT_11 . impl . IDENT_12 . log . debug ( STRING_1 , IDENT_5 . getName ( ) , IDENT_16 ) ; if ( ( IDENT_7 ) != null ) { IDENT_17 . put ( org . apache . jackrabbit . oak . spi . security . authentication . IDENT_11 . impl . IDENT_18 , IDENT_7 ) ; } IDENT_17 . put ( org . apache . jackrabbit . oak . spi . security . authentication . IDENT_11 . impl . IDENT_19 , IDENT_16 . getId ( ) ) ; METHOD_13 ( IDENT_16 ) ; return true ; } else { org . apache . jackrabbit . oak . spi . security . authentication . IDENT_11 . impl . IDENT_12 . debug ( STRING_2 , IDENT_5 . getName ( ) , IDENT_13 . toString ( ) ) ; if ( IDENT_15 != null ) { org . apache . jackrabbit . oak . spi . security . authentication . IDENT_11 . impl . IDENT_12 . log . debug ( STRING_3 , IDENT_15 . getId ( ) ) ; METHOD_14 ( IDENT_15 . getId ( ) ) ; } return false ; } } catch ( org . apache . jackrabbit . oak . spi . security . authentication . IDENT_11 . IDENT_20 e ) { org . apache . jackrabbit . oak . spi . security . authentication . IDENT_11 . impl . IDENT_12 . log . error ( STRING_4 , IDENT_13 , IDENT_5 . getName ( ) , e ) ; METHOD_15 ( ) ; return false ; } catch ( javax . security . auth . METHOD_5 . IDENT_21 e ) { org . apache . jackrabbit . oak . spi . security . authentication . IDENT_11 . impl . IDENT_12 . log . debug ( STRING_5 , IDENT_5 . getName ( ) , IDENT_13 , e . getMessage ( ) ) ; throw e ; } catch ( org . apache . jackrabbit . oak . spi . security . authentication . IDENT_11 . IDENT_22 | javax . jcr . IDENT_23 e ) { METHOD_15 ( ) ; org . apache . jackrabbit . oak . spi . security . authentication . IDENT_11 . impl . IDENT_12 . log . error ( STRING_6 , IDENT_6 . getName ( ) , IDENT_13 , e ) ; javax . security . auth . METHOD_5 . IDENT_21 IDENT_24 = new javax . security . auth . METHOD_5 . METHOD_16 ( STRING_7 ) ; IDENT_24 . METHOD_17 ( e ) ; throw IDENT_24 ; } }
org . junit . Assert . assertFalse ( IDENT_1 . METHOD_5 ( ) ) 