METHOD_0 ( ) { final net . IDENT_0 . auth . IDENT_1 module = new net . IDENT_0 . auth . METHOD_1 ( ) ; final javax . security . auth . message . IDENT_2 IDENT_3 = mock ( javax . security . auth . message . IDENT_2 . class ) ; when ( IDENT_3 . METHOD_2 ( ) ) . thenReturn ( true ) ; module . METHOD_3 ( IDENT_3 , null , null , options ) ; final javax . security . auth . message . IDENT_4 IDENT_5 = mock ( javax . security . auth . message . IDENT_4 . class ) ; final javax . servlet . http . IDENT_6 IDENT_7 = mock ( javax . servlet . http . IDENT_6 . class ) ; when ( IDENT_7 . METHOD_4 ( ) ) . thenReturn ( STRING_0 ) ; when ( IDENT_7 . METHOD_5 ( ) ) . thenReturn ( false ) ; when ( IDENT_5 . METHOD_6 ( ) ) . thenReturn ( IDENT_7 ) ; final javax . servlet . http . IDENT_8 IDENT_9 = mock ( javax . servlet . http . IDENT_8 . class ) ; when ( IDENT_5 . METHOD_7 ( ) ) . thenReturn ( IDENT_9 ) ; final javax . security . auth . IDENT_10 client = new javax . security . auth . METHOD_8 ( ) ; "<AssertPlaceHolder>" ; verify ( IDENT_9 ) . METHOD_9 ( IDENT_11 . IDENT_12 , STRING_1 ) ; } METHOD_10 ( javax . security . auth . message . IDENT_4 , javax . security . auth . METHOD_8 , javax . security . auth . METHOD_8 ) { final javax . servlet . http . IDENT_6 req = ( ( javax . servlet . http . IDENT_6 ) ( IDENT_5 . METHOD_6 ( ) ) ) ; final javax . servlet . http . IDENT_8 IDENT_13 = ( ( javax . servlet . http . IDENT_8 ) ( IDENT_5 . METHOD_7 ( ) ) ) ; try { if ( ( ! ( IDENT_14 ) ) && ( ! ( req . METHOD_5 ( ) ) ) ) { return javax . security . auth . message . IDENT_15 . IDENT_16 ; } if ( ! ( req . METHOD_5 ( ) ) ) { IDENT_13 . METHOD_9 ( IDENT_11 . IDENT_12 , net . IDENT_0 . auth . IDENT_17 . IDENT_18 . getString ( STRING_2 ) ) ; return javax . security . auth . message . IDENT_15 . IDENT_19 ; } final java . lang . String IDENT_20 = req . METHOD_11 ( IDENT_21 ) ; if ( ( IDENT_20 == null ) && ( IDENT_14 ) ) { return javax . security . auth . message . IDENT_15 . IDENT_22 ; } else if ( ( IDENT_20 == null ) && ( ! ( IDENT_14 ) ) ) { return javax . security . auth . message . IDENT_15 . IDENT_16 ; } handler . METHOD_12 ( new javax . security . auth . IDENT_23 . IDENT_24 [ ] { new javax . security . auth . message . IDENT_23 . METHOD_13 ( client , IDENT_20 ) , new javax . security . auth . message . IDENT_23 . METHOD_14 ( client , METHOD_15 ( req ) ) } ) ; return javax . security . auth . message . IDENT_15 . IDENT_16 ; } catch ( java . io . IOException | javax . security . auth . IDENT_23 . IDENT_25 e ) { net . IDENT_0 . auth . IDENT_17 . LOG . METHOD_16 ( this . getClass ( ) . getName ( ) , STRING_3 , e ) ; throw new javax . security . auth . message . METHOD_17 ( e . getMessage ( ) ) ; } }
org . junit . Assert . assertEquals ( IDENT_15 . IDENT_19 , module . METHOD_10 ( IDENT_5 , client , null ) ) 