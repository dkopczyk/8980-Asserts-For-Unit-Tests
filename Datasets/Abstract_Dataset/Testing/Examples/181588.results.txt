METHOD_0 ( ) { final javax . crypto . IDENT_0 IDENT_1 = net . IDENT_2 . auth . internal . IDENT_3 . METHOD_1 ( STRING_0 , STRING_1 ) ; final java . io . InputStream is = this . getClass ( ) . getResourceAsStream ( STRING_2 ) ; final java . util . IDENT_4 IDENT_5 = new java . util . METHOD_2 ( is ) ; final byte [ ] IDENT_6 = IDENT_5 . METHOD_3 ( STRING_3 ) . next ( ) . getBytes ( ) ; is . close ( ) ; IDENT_5 . close ( ) ; final byte [ ] IDENT_7 = net . IDENT_2 . auth . internal . IDENT_3 . METHOD_4 ( IDENT_6 , IDENT_1 ) ; System . out . println ( IDENT_7 . length ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( byte [ ] , javax . crypto . IDENT_0 ) { final java . io . ByteArrayInputStream is = new java . io . ByteArrayInputStream ( IDENT_8 ) ; final java . io . InputStream IDENT_9 = net . IDENT_2 . auth . internal . IDENT_3 . METHOD_6 ( is , IDENT_1 ) ; final java . io . ByteArrayOutputStream IDENT_10 = new java . io . ByteArrayOutputStream ( INT_0 ) ; int ch = IDENT_9 . read ( ) ; while ( ch != ( - 1 ) ) { IDENT_10 . write ( ch ) ; ch = IDENT_9 . read ( ) ; } IDENT_9 . close ( ) ; IDENT_10 . close ( ) ; return IDENT_10 . toByteArray ( ) ; }
org . junit . Assert . assertArrayEquals ( IDENT_6 , net . IDENT_2 . auth . internal . IDENT_3 . METHOD_5 ( IDENT_7 , IDENT_1 ) ) 