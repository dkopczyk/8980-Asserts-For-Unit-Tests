METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . Boolean > IDENT_0 = com . google . common . collect . ImmutableMap . < java . lang . String , java . lang . Boolean > builder ( ) . put ( org . apache . jackrabbit . oak . security . authorization . IDENT_1 . IDENT_2 , false ) . put ( org . apache . jackrabbit . oak . security . authorization . IDENT_1 . IDENT_3 , true ) . put ( org . apache . jackrabbit . oak . security . authorization . IDENT_1 . IDENT_4 , true ) . put ( org . apache . jackrabbit . oak . security . authorization . IDENT_1 . IDENT_5 , true ) . put ( org . apache . jackrabbit . oak . security . authorization . IDENT_1 . IDENT_6 , false ) . put ( ( ( IDENT_6 ) + STRING_0 ) , false ) . build ( ) ; org . apache . jackrabbit . oak . spi . security . authorization . IDENT_7 . IDENT_8 IDENT_9 = org . apache . jackrabbit . oak . spi . security . authorization . IDENT_7 . IDENT_8 . IDENT_10 ; for ( java . lang . String IDENT_11 : IDENT_0 . METHOD_1 ( ) ) { org . apache . jackrabbit . oak . api . IDENT_12 tree = IDENT_13 . METHOD_2 ( IDENT_11 ) ; org . apache . jackrabbit . oak . spi . security . authorization . IDENT_7 . IDENT_8 IDENT_14 = IDENT_15 . METHOD_3 ( tree , IDENT_9 ) ; boolean IDENT_16 = IDENT_0 . get ( IDENT_11 ) ; "<AssertPlaceHolder>" ; IDENT_9 = IDENT_14 ; } } METHOD_4 ( ) { return false ; }
org . junit . Assert . assertEquals ( IDENT_11 , IDENT_16 , IDENT_14 . METHOD_4 ( ) ) 