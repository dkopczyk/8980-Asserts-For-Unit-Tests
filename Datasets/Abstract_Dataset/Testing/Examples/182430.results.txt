METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . Node root = com . IDENT_0 . IDENT_1 . TestUtils . METHOD_1 ( ) ; root . METHOD_2 ( IDENT_2 . IDENT_3 ) ; try { new com . IDENT_0 . IDENT_1 . METHOD_3 ( ) . METHOD_4 ( root ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . lang . IllegalArgumentException e ) { "<AssertPlaceHolder>" ; } } METHOD_4 ( com . IDENT_0 . IDENT_1 . Node ) { if ( ( IDENT_4 . getType ( ) ) != ( IDENT_5 . IDENT_6 ) ) { throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } return METHOD_5 ( IDENT_4 ) ; }
org . junit . Assert . assertTrue ( true ) 