METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . IDENT_6 ) ; long IDENT_7 = IDENT_4 . METHOD_2 ( null ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . apache . hadoop . hbase . client . Result ) { if ( value == null ) { throw new java . lang . IllegalArgumentException ( ( STRING_0 + STRING_1 ) ) ; } org . apache . hadoop . hbase . IDENT_8 IDENT_9 = value . METHOD_3 ( Constants . IDENT_10 , Constants . IDENT_11 ) ; if ( IDENT_9 == null ) { throw new com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_4 ( com . IDENT_0 . IDENT_1 . Constants . IDENT_10 , com . IDENT_0 . IDENT_1 . Constants . IDENT_11 ) ; } byte [ ] IDENT_12 = org . apache . hadoop . hbase . IDENT_13 . METHOD_5 ( IDENT_9 ) ; long IDENT_14 = org . apache . hadoop . hbase . util . IDENT_15 . METHOD_6 ( IDENT_12 ) ; long IDENT_16 = IDENT_14 - ( com . IDENT_0 . IDENT_1 . Constants . IDENT_17 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 . LOG . debug ( ( ( ( STRING_2 + IDENT_16 ) + STRING_3 ) + IDENT_14 ) ) ; return IDENT_16 ; }
org . junit . Assert . assertEquals ( 0L , IDENT_7 ) 