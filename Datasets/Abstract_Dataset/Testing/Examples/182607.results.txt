METHOD_0 ( ) { METHOD_1 ( ) ; IDENT_0 . METHOD_2 ( ) ; net . IDENT_1 . message . IDENT_2 msg = new net . IDENT_1 . message . METHOD_3 ( 1 , new net . IDENT_1 . message . IDENT_3 [ ] { } ) ; IDENT_4 . METHOD_4 ( msg , IDENT_5 ) ; "<AssertPlaceHolder>" ; METHOD_5 ( ) ; } METHOD_6 ( int , int , long ) { long end = ( IDENT_6 == 0 ) ? 0 : ( java . lang . System . currentTimeMillis ( ) ) + IDENT_6 ; IDENT_7 . METHOD_7 ( ) ; IDENT_8 . METHOD_7 ( ) ; while ( ( ( IDENT_8 . METHOD_8 ( ) ) < IDENT_9 ) || ( ( IDENT_7 . METHOD_8 ( ) ) < IDENT_10 ) ) { if ( end != 0 ) { long time = end - ( java . lang . System . currentTimeMillis ( ) ) ; if ( time > 0 ) { IDENT_11 . select ( time ) ; } } else { IDENT_11 . select ( ) ; } java . util . Iterator < java . nio . IDENT_12 . IDENT_13 > IDENT_14 = IDENT_11 . METHOD_9 ( ) . iterator ( ) ; if ( ( ! ( IDENT_14 . hasNext ( ) ) ) && ( ( java . lang . System . currentTimeMillis ( ) ) >= end ) ) { return false ; } while ( IDENT_14 . hasNext ( ) ) { java . nio . IDENT_12 . IDENT_13 key = IDENT_14 . next ( ) ; net . IDENT_1 . message . IDENT_15 channel = ( ( net . IDENT_1 . message . IDENT_15 ) ( key . METHOD_10 ( ) ) ) ; if ( ( key . isValid ( ) ) && ( key . METHOD_11 ( ) ) ) { channel . read ( ( ( now ) + 10 ) ) ; } if ( ( key . isValid ( ) ) && ( key . METHOD_12 ( ) ) ) { channel . write ( now ) ; } IDENT_14 . remove ( ) ; } } return true ; }
org . junit . Assert . assertTrue ( METHOD_6 ( 1 , 0 , 1000 ) ) 