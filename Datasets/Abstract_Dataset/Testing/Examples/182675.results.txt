METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . Object > IDENT_0 = METHOD_1 ( ) ; IDENT_0 . put ( IDENT_1 . IDENT_2 , 1 ) ; final java . util . concurrent . atomic . IDENT_3 IDENT_4 = new java . util . concurrent . atomic . METHOD_2 ( false ) ; org . glassfish . IDENT_5 . test . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 handler = new org . glassfish . IDENT_5 . test . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_3 ( ) { @ org . glassfish . IDENT_5 . test . IDENT_6 . IDENT_7 . Override public void METHOD_4 ( java . util . logging . IDENT_10 record ) { java . lang . String IDENT_11 = org . glassfish . IDENT_5 . core . IDENT_12 . IDENT_13 . METHOD_5 ( 2 , org . glassfish . IDENT_5 . test . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_14 . class . METHOD_6 ( ) [ 0 ] . getName ( ) , org . glassfish . IDENT_5 . test . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_14 . class . getName ( ) , 1 ) ; System . out . println ( ( STRING_0 + IDENT_11 ) ) ; System . out . println ( ( STRING_1 + ( record . getMessage ( ) ) ) ) ; if ( IDENT_11 . equals ( record . getMessage ( ) ) ) { IDENT_4 . set ( true ) ; } } } ; logger . METHOD_7 ( IDENT_15 . IDENT_16 ) ; logger . METHOD_8 ( handler ) ; org . glassfish . IDENT_5 . server . IDENT_17 server = null ; try { server = METHOD_9 ( org . glassfish . IDENT_5 . test . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_14 . class ) ; } finally { METHOD_10 ( server ) ; } "<AssertPlaceHolder>" ; logger . METHOD_11 ( handler ) ; } get ( ) { if ( ( buffer ) == null ) { buffer = java . nio . ByteBuffer . METHOD_12 ( IDENT_18 . METHOD_13 ( ) . METHOD_14 ( ) ) ; } return buffer ; }
org . junit . Assert . assertTrue ( IDENT_4 . get ( ) ) 