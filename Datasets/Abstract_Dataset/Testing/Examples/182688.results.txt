METHOD_0 ( ) { org . glassfish . IDENT_0 . server . IDENT_1 server = METHOD_1 ( org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_4 . class , org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_5 . class ) ; try { org . glassfish . IDENT_0 . client . IDENT_6 client = METHOD_2 ( ) ; final javax . IDENT_7 . IDENT_8 session = client . METHOD_3 ( org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_9 . class , METHOD_4 ( org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_4 . class ) ) ; METHOD_5 ( client , org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_5 . class , org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_10 , STRING_0 ) ; org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_9 . IDENT_11 = new java . util . concurrent . METHOD_6 ( 1 ) ; org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_9 . IDENT_12 = null ; org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_9 . IDENT_13 = null ; session . METHOD_7 ( ) . METHOD_8 ( STRING_1 ) ; org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_9 . IDENT_11 . METHOD_9 ( 1 , TimeUnit . IDENT_14 ) ; "<AssertPlaceHolder>" ; METHOD_5 ( client , org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_5 . class , org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_15 , STRING_2 ) ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; throw new java . lang . RuntimeException ( e . getMessage ( ) , e ) ; } finally { METHOD_10 ( server ) ; } } METHOD_11 ( ) { return count ; }
org . junit . Assert . assertEquals ( 0 , org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_9 . IDENT_11 . METHOD_11 ( ) ) 