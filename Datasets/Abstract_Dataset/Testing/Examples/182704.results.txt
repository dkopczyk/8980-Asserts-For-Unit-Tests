METHOD_0 ( ) { org . glassfish . IDENT_0 . server . IDENT_1 server = METHOD_1 ( org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_4 . class ) ; final java . util . concurrent . IDENT_5 IDENT_6 = new java . util . concurrent . METHOD_2 ( 1 ) ; try { final javax . IDENT_7 . IDENT_8 IDENT_9 = IDENT_8 . Builder . create ( ) . build ( ) ; org . glassfish . IDENT_0 . client . IDENT_10 client = METHOD_3 ( ) ; client . METHOD_4 ( new org . glassfish . IDENT_0 . test . IDENT_2 . METHOD_5 ( ) { @ org . glassfish . IDENT_0 . test . IDENT_2 . Override public javax . IDENT_7 . IDENT_11 METHOD_6 ( ) { return IDENT_9 ; } @ org . glassfish . IDENT_0 . test . IDENT_2 . Override public void METHOD_7 ( javax . IDENT_7 . IDENT_12 session ) { session . METHOD_8 ( new org . glassfish . IDENT_0 . test . IDENT_2 . METHOD_9 ( this ) ) ; try { session . METHOD_10 ( ) . METHOD_11 ( STRING_0 ) ; } catch ( java . io . IOException e ) { } } @ org . glassfish . IDENT_0 . test . IDENT_2 . Override public void METHOD_12 ( javax . IDENT_7 . IDENT_12 session , javax . IDENT_7 . IDENT_13 IDENT_14 ) { if ( ( ( IDENT_14 != null ) && ( ( IDENT_14 . METHOD_13 ( ) . getCode ( ) ) == INT_0 ) ) && ( IDENT_14 . METHOD_14 ( ) . equals ( org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_15 ) ) ) { IDENT_6 . METHOD_15 ( ) ; } } @ org . glassfish . IDENT_0 . test . IDENT_2 . Override public void METHOD_16 ( java . lang . String message ) { } } , IDENT_9 , METHOD_17 ( org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_4 . class ) ) ; IDENT_6 . METHOD_18 ( 5 , TimeUnit . IDENT_16 ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; throw new java . lang . RuntimeException ( e . getMessage ( ) , e ) ; } finally { METHOD_19 ( server ) ; } } METHOD_20 ( ) { return count ; }
org . junit . Assert . assertEquals ( 0L , IDENT_6 . METHOD_20 ( ) ) 