METHOD_0 ( ) { org . glassfish . IDENT_0 . server . IDENT_1 server = METHOD_1 ( org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_4 . class ) ; final java . util . concurrent . IDENT_5 IDENT_6 = new java . util . concurrent . METHOD_2 ( 1 ) ; org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_7 . set ( false ) ; try { final javax . IDENT_8 . IDENT_9 IDENT_10 = IDENT_9 . Builder . create ( ) . build ( ) ; org . glassfish . IDENT_0 . client . IDENT_11 client = METHOD_3 ( ) ; client . METHOD_4 ( new org . glassfish . IDENT_0 . test . IDENT_2 . METHOD_5 ( ) { @ org . glassfish . IDENT_0 . test . IDENT_2 . Override public void METHOD_6 ( java . lang . String message ) { } @ org . glassfish . IDENT_0 . test . IDENT_2 . Override public void METHOD_7 ( javax . IDENT_8 . IDENT_12 session ) { session . METHOD_8 ( 200 ) ; } @ org . glassfish . IDENT_0 . test . IDENT_2 . Override public javax . IDENT_8 . IDENT_13 METHOD_9 ( ) { return IDENT_10 ; } @ org . glassfish . IDENT_0 . test . IDENT_2 . Override public void METHOD_10 ( javax . IDENT_8 . IDENT_12 session , javax . IDENT_8 . IDENT_14 IDENT_15 ) { org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_7 . set ( true ) ; IDENT_6 . METHOD_11 ( ) ; } } , IDENT_10 , METHOD_12 ( org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_4 . class ) ) ; IDENT_6 . METHOD_13 ( 2 , TimeUnit . IDENT_16 ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; throw new java . lang . RuntimeException ( e . getMessage ( ) , e ) ; } finally { METHOD_14 ( server ) ; } } get ( ) { if ( ( buffer ) == null ) { buffer = java . nio . ByteBuffer . METHOD_15 ( IDENT_17 . METHOD_16 ( ) . METHOD_17 ( ) ) ; } return buffer ; }
org . junit . Assert . assertTrue ( org . glassfish . IDENT_0 . test . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_7 . get ( ) ) 