METHOD_0 ( ) { java . util . IDENT_0 IDENT_1 = new java . util . METHOD_1 ( ) ; for ( int i = 0 ; i < ( ch . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 ) ; i ++ ) { long [ ] l = new long [ ] { IDENT_1 . METHOD_2 ( ) , IDENT_1 . METHOD_2 ( ) } ; long [ ] x = ch . IDENT_2 . IDENT_3 . IDENT_4 . util . IDENT_8 . METHOD_3 ( INT_0 , l ) ; long [ ] IDENT_9 = ch . IDENT_2 . IDENT_3 . IDENT_4 . util . IDENT_8 . METHOD_4 ( 2 , INT_0 , x ) ; "<AssertPlaceHolder>" ; } } METHOD_4 ( int , int , long [ ] ) { long [ ] IDENT_10 = new long [ IDENT_11 ] ; long IDENT_12 = 1L << ( IDENT_13 - 1 ) ; for ( int k = 0 ; k < IDENT_13 ; k ++ ) { for ( int j = 0 ; j < ( IDENT_10 . length ) ; j ++ ) { int IDENT_14 = ( k * ( IDENT_10 . length ) ) + j ; boolean IDENT_15 = ch . IDENT_2 . IDENT_3 . IDENT_4 . util . IDENT_8 . METHOD_5 ( IDENT_16 , IDENT_14 ) ; if ( IDENT_15 ) { IDENT_10 [ j ] OP_0 IDENT_12 ; } } IDENT_12 OP_1 1 ; } return IDENT_10 ; }
org . junit . Assert . assertArrayEquals ( l , IDENT_9 ) 