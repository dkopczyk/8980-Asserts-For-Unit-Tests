METHOD_0 ( ) { ch . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = create ( INT_0 , INT_1 ) ; java . util . ArrayList < long [ ] > IDENT_6 = METHOD_1 ( INT_2 , INT_0 , FLOAT_0 ) ; for ( long [ ] v : IDENT_6 ) { IDENT_5 . insert ( v ) ; } for ( long [ ] v : IDENT_6 ) { "<AssertPlaceHolder>" ; } } contains ( long ) { org . IDENT_7 . index . IDENT_8 . IDENT_9 < IDENT_10 > info = this . info ; int size = info . size ; if ( size == 0 ) { return false ; } if ( size == 1 ) { return key == ( info . IDENT_11 ) ; } org . IDENT_7 . index . IDENT_8 . Node < IDENT_10 > n = info . root ; long IDENT_12 = info . IDENT_11 ; while ( METHOD_2 ( n . IDENT_13 , key , IDENT_12 ) ) { if ( org . IDENT_7 . index . IDENT_8 . IDENT_14 . METHOD_3 ( key , n . IDENT_13 ) ) { if ( ( n . IDENT_15 ) != null ) { IDENT_12 = n . IDENT_16 ; n = n . IDENT_15 ; continue ; } return key == ( n . IDENT_16 ) ; } else { if ( ( n . IDENT_17 ) != null ) { IDENT_12 = n . IDENT_18 ; n = n . IDENT_17 ; continue ; } return key == ( n . IDENT_18 ) ; } } return false ; }
org . junit . Assert . assertTrue ( IDENT_5 . contains ( v ) ) 