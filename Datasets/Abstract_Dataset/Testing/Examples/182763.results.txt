METHOD_0 ( ) { double [ ] [ ] data = new double [ ] [ ] { new double [ ] { INT_0 , 15 , INT_1 } , new double [ ] { INT_2 , INT_3 , INT_3 } , new double [ ] { INT_4 , INT_5 , INT_6 } } ; final int IDENT_0 = data [ 0 ] . length ; final int IDENT_1 = data . length ; ch . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 < java . lang . Object > IDENT_6 = METHOD_1 ( IDENT_0 ) ; for ( int i = 0 ; i < IDENT_1 ; i ++ ) { IDENT_6 . put ( data [ i ] , data [ i ] ) ; } double [ ] v = new double [ ] { INT_7 , INT_8 , INT_9 } ; double [ ] exp = METHOD_2 ( IDENT_6 , v ) ; java . util . List < double [ ] > IDENT_7 = toList ( IDENT_6 . METHOD_3 ( 1 , ch . IDENT_2 . IDENT_3 . IDENT_4 . test . IDENT_8 . IDENT_9 , v ) ) ; "<AssertPlaceHolder>" ; double [ ] IDENT_10 = IDENT_7 . get ( 0 ) ; METHOD_4 ( v , exp , IDENT_10 ) ; } isEmpty ( ) { return ( size ( ) ) == 0 ; }
org . junit . Assert . assertTrue ( ( ! ( IDENT_7 . isEmpty ( ) ) ) ) 