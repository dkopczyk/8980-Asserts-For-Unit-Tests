METHOD_0 ( ) { ch . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 < long [ ] > IDENT_4 = ch . IDENT_0 . IDENT_1 . IDENT_2 . test . util . IDENT_5 . METHOD_1 ( 2 , 8 ) ; IDENT_4 . put ( new long [ ] { 3 , 3 } , new long [ ] { 3 , 3 } ) ; IDENT_4 . put ( new long [ ] { 2 , 2 } , new long [ ] { 2 , 2 } ) ; IDENT_4 . put ( new long [ ] { 4 , 4 } , new long [ ] { 4 , 4 } ) ; IDENT_4 . put ( new long [ ] { 2 , 4 } , new long [ ] { 2 , 4 } ) ; IDENT_4 . put ( new long [ ] { 4 , 2 } , new long [ ] { 4 , 2 } ) ; java . util . List < long [ ] > result = toList ( IDENT_4 . METHOD_2 ( FLOAT_0 , 3 , 3 ) ) ; METHOD_3 ( result , 3 , 3 ) ; int n = 1 ; n += ( contains ( result , 4 , 4 ) ) ? 1 : 0 ; n += ( contains ( result , 4 , 2 ) ) ? 1 : 0 ; n += ( contains ( result , 2 , 2 ) ) ? 1 : 0 ; n += ( contains ( result , 2 , 4 ) ) ? 1 : 0 ; "<AssertPlaceHolder>" ; } METHOD_2 ( double , ch . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_7 , long [ ] ) { ch . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_8 filter = new ch . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_4 ( ) ; if ( IDENT_9 == null ) { IDENT_9 = IDENT_10 . IDENT_11 ; } filter . set ( IDENT_12 , IDENT_9 , IDENT_13 ) ; ch . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_14 < T > q = new ch . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_5 ( this , filter ) ; ch . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_15 < T > IDENT_16 = new ch . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_6 ( q , this , IDENT_9 , filter ) ; IDENT_16 . METHOD_7 ( IDENT_13 , IDENT_12 ) ; return IDENT_16 ; }
org . junit . Assert . assertEquals ( 5 , n ) 