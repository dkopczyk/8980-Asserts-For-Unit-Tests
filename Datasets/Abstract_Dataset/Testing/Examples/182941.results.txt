METHOD_0 ( ) { if ( METHOD_1 ( ) ) { return ; } final java . lang . String IDENT_0 = STRING_0 ; final java . lang . String query = ( ( STRING_1 + STRING_2 ) + IDENT_0 ) + STRING_3 ; final java . util . List < com . IDENT_1 . model . test . IDENT_2 > IDENT_3 = IDENT_4 . METHOD_2 ( query , com . IDENT_1 . model . test . IDENT_2 . class ) ; "<AssertPlaceHolder>" ; final com . IDENT_1 . IDENT_5 . IDENT_6 < com . IDENT_1 . model . test . IDENT_2 > IDENT_7 = METHOD_3 ( com . IDENT_1 . model . test . IDENT_2 . class ) ; final com . IDENT_1 . IDENT_5 . IDENT_6 < com . IDENT_1 . model . test . IDENT_8 > IDENT_9 = IDENT_7 . METHOD_4 ( STRING_4 , com . IDENT_1 . model . test . IDENT_8 . class ) ; METHOD_4 . METHOD_5 ( 0 , STRING_5 , STRING_6 ) . METHOD_5 ( 0 , STRING_7 , INT_0 ) ; METHOD_4 . METHOD_5 ( 1 , STRING_8 , true ) . METHOD_5 ( 1 , STRING_9 , INT_1 ) ; IDENT_7 . METHOD_6 ( STRING_4 , METHOD_4 ) ; METHOD_7 ( IDENT_3 , IDENT_7 . METHOD_8 ( ) ) ; } METHOD_2 ( java . lang . String , java . lang . Class ) { return METHOD_2 ( query , IDENT_10 , null ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_3 . size ( ) ) > 0 ) ) 