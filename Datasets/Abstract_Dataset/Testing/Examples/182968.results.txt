METHOD_0 ( ) { org . apache . IDENT_0 . hadoop . IDENT_1 reader = mock ( org . apache . IDENT_0 . hadoop . IDENT_1 . class ) ; when ( reader . read ( ) ) . thenReturn ( 1 ) . thenReturn ( null ) ; com . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 < java . lang . Integer > iterator = new com . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( reader ) ; int IDENT_6 = 0 ; while ( IDENT_6 < 3 ) { "<AssertPlaceHolder>" ; IDENT_6 ++ ; } } hasNext ( ) { if ( ( IDENT_7 ) == null ) { IDENT_8 key = reader . METHOD_2 ( ) ; IDENT_9 val = reader . METHOD_3 ( ) ; try { boolean IDENT_10 = reader . next ( key , val ) ; if ( ! IDENT_10 ) { return false ; } this . IDENT_7 = val ; } catch ( java . io . IOException e ) { com . IDENT_2 . IDENT_3 . hadoop . IDENT_11 . LOG . error ( STRING_0 ) ; throw new com . IDENT_2 . IDENT_3 . exception . METHOD_4 ( e ) ; } } return true ; }
org . junit . Assert . assertTrue ( iterator . hasNext ( ) ) 