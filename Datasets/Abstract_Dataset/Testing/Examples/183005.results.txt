METHOD_0 ( ) { METHOD_1 ( eu . IDENT_0 . concurrent . IDENT_1 . IDENT_2 ) . when ( IDENT_3 ) . get ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . util . function . IDENT_4 ) { try { return new eu . IDENT_0 . concurrent . METHOD_3 ( IDENT_5 , IDENT_6 . get ( ) ) ; } catch ( final java . lang . Exception e ) { return new eu . IDENT_0 . concurrent . METHOD_4 ( IDENT_5 , e ) ; } }
org . junit . Assert . assertThat ( base . METHOD_2 ( IDENT_3 ) , org . hamcrest . core . Is . is ( new eu . IDENT_0 . concurrent . METHOD_4 ( IDENT_5 , eu . IDENT_0 . concurrent . IDENT_1 . IDENT_2 ) ) ) 