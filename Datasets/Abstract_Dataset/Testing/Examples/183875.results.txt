METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . logging . IDENT_2 logger = org . IDENT_0 . IDENT_1 . logging . IDENT_3 . METHOD_1 ( org . IDENT_0 . IDENT_1 . logging . IDENT_4 . class ) ; java . io . IDENT_5 IDENT_6 = System . out ; java . io . ByteArrayOutputStream IDENT_7 = new java . io . ByteArrayOutputStream ( ) ; java . io . IDENT_5 IDENT_8 = new java . io . METHOD_2 ( IDENT_7 ) ; try { java . lang . System . METHOD_3 ( IDENT_8 ) ; logger . info ( STRING_0 , new java . lang . Exception ( STRING_1 ) ) ; java . lang . String str = IDENT_7 . toString ( ) ; "<AssertPlaceHolder>" ; } finally { java . lang . System . METHOD_3 ( IDENT_6 ) ; } } toString ( ) { org . IDENT_0 . IDENT_1 . resource . expression . IDENT_9 IDENT_10 = ( ( org . IDENT_0 . IDENT_1 . resource . expression . IDENT_9 ) ( METHOD_4 ( ) ) ) ; java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; sb . append ( STRING_2 ) ; for ( java . lang . String IDENT_11 : IDENT_10 . METHOD_5 ( ) ) { sb . append ( IDENT_11 ) . append ( STRING_3 ) ; } sb . METHOD_6 ( ( ( sb . length ( ) ) - 1 ) , STRING_4 ) ; return sb . toString ( ) ; }
org . junit . Assert . assertTrue ( ( ( str . indexOf ( STRING_0 ) ) > 0 ) ) 