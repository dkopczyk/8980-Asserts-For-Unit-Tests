METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . resource . model . entity . IDENT_2 IDENT_3 = org . IDENT_0 . IDENT_1 . resource . model . IDENT_4 . METHOD_1 ( ) . parse ( getClass ( ) . getResourceAsStream ( STRING_0 ) , STRING_1 ) ; org . IDENT_0 . IDENT_1 . resource . model . entity . IDENT_2 IDENT_5 = org . IDENT_0 . IDENT_1 . resource . model . IDENT_4 . METHOD_1 ( ) . parse ( getClass ( ) . getResourceAsStream ( STRING_2 ) , STRING_1 ) ; org . IDENT_0 . IDENT_1 . resource . model . entity . IDENT_2 expected = org . IDENT_0 . IDENT_1 . resource . model . IDENT_4 . METHOD_1 ( ) . parse ( getClass ( ) . getResourceAsStream ( STRING_3 ) , STRING_1 ) ; org . IDENT_0 . IDENT_1 . resource . model . entity . IDENT_2 IDENT_6 = new org . IDENT_0 . IDENT_1 . resource . model . entity . METHOD_2 ( ) ; org . IDENT_0 . IDENT_1 . resource . model . IDENT_4 . METHOD_3 ( ) . METHOD_4 ( IDENT_6 , IDENT_3 , IDENT_5 ) ; "<AssertPlaceHolder>" ; } toString ( ) { org . IDENT_0 . IDENT_1 . resource . expression . IDENT_7 IDENT_8 = ( ( org . IDENT_0 . IDENT_1 . resource . expression . IDENT_7 ) ( METHOD_5 ( ) ) ) ; java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; sb . append ( STRING_4 ) ; for ( java . lang . String IDENT_9 : IDENT_8 . METHOD_6 ( ) ) { sb . append ( IDENT_9 ) . append ( STRING_5 ) ; } sb . METHOD_7 ( ( ( sb . length ( ) ) - 1 ) , STRING_6 ) ; return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( expected . toString ( ) , IDENT_6 . toString ( ) ) 