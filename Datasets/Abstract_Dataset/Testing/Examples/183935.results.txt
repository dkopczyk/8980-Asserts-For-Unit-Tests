METHOD_0 ( ) { try { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = IDENT_2 . IDENT_3 . METHOD_1 ( ( ( IDENT_2 . server . IDENT_4 . IDENT_5 . IDENT_6 ) + IDENT_0 ) ) ; IDENT_7 . IDENT_8 . stream . IDENT_9 IDENT_10 = new IDENT_7 . IDENT_8 . stream . METHOD_2 ( IDENT_1 ) ; java . lang . String IDENT_11 = ( IDENT_2 . server . IDENT_4 . IDENT_5 . IDENT_12 ) + IDENT_0 ; IDENT_7 . IDENT_8 . IDENT_13 IDENT_14 = IDENT_7 . IDENT_8 . IDENT_13 . METHOD_3 ( IDENT_11 ) ; java . util . IDENT_15 f = new java . util . METHOD_4 ( ) ; IDENT_7 . IDENT_8 . util . IDENT_16 IDENT_17 = new IDENT_7 . IDENT_8 . util . METHOD_5 ( f , true , true , true ) ; boolean IDENT_18 = IDENT_17 . compare ( IDENT_14 , IDENT_10 , new IDENT_2 . server . IDENT_4 . IDENT_19 . METHOD_6 ( ) , true , false , true ) ; System . out . METHOD_7 ( STRING_1 , IDENT_11 , IDENT_1 ) ; System . out . METHOD_7 ( STRING_2 , f ) ; "<AssertPlaceHolder>" ; IDENT_14 . close ( ) ; IDENT_10 . close ( ) ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; assert false ; } } METHOD_3 ( java . lang . String ) { return IDENT_7 . IDENT_8 . IDENT_13 . METHOD_3 ( location , null ) ; }
org . junit . Assert . assertTrue ( IDENT_18 ) 