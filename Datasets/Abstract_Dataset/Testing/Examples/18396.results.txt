METHOD_0 ( ) { javax . jcr . IDENT_0 session = METHOD_1 ( ) ; session . METHOD_2 ( ) . METHOD_3 ( STRING_0 ) . METHOD_3 ( STRING_1 ) ; session . save ( ) ; javax . jcr . IDENT_0 IDENT_1 = METHOD_4 ( ) ; javax . jcr . Node IDENT_2 = IDENT_1 . METHOD_5 ( STRING_2 ) ; javax . jcr . Node n = session . METHOD_5 ( STRING_2 ) ; n . METHOD_6 ( ) . remove ( ) ; session . save ( ) ; IDENT_1 . METHOD_7 ( false ) ; try { IDENT_2 . getPath ( ) ; org . junit . Assert . fail ( ) ; } catch ( javax . jcr . IDENT_3 e ) { } session . METHOD_2 ( ) . METHOD_3 ( STRING_0 ) . METHOD_3 ( STRING_1 ) ; session . save ( ) ; IDENT_1 . METHOD_7 ( false ) ; "<AssertPlaceHolder>" ; IDENT_1 . METHOD_8 ( ) ; } getPath ( ) { java . lang . String IDENT_4 = IDENT_5 . getPath ( ) ; if ( METHOD_9 ( ) ) { return IDENT_4 ; } else if ( org . apache . jackrabbit . oak . commons . IDENT_6 . METHOD_10 ( IDENT_4 ) ) { return ( plan . METHOD_11 ( ) ) + IDENT_4 ; } else { return org . apache . jackrabbit . oak . commons . IDENT_6 . METHOD_12 ( plan . METHOD_11 ( ) , IDENT_4 ) ; } }
org . junit . Assert . assertEquals ( STRING_2 , IDENT_2 . getPath ( ) ) 