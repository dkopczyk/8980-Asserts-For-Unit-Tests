METHOD_0 ( ) { javax . IDENT_0 . spi . IDENT_1 < IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 > IDENT_8 = IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 . getInstance ( IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . class ) ; javax . IDENT_0 . spi . IDENT_1 < IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 > IDENT_10 = IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 . getInstance ( IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . class ) ; "<AssertPlaceHolder>" ; } getInstance ( java . lang . Class ) { if ( type == null ) { throw new java . lang . METHOD_1 ( ) ; } IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 . logger . log ( IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 . IDENT_11 , ( ( ( STRING_0 + type ) + STRING_1 ) + ( type . METHOD_2 ( ) ) ) ) ; if ( ( ! ( type . METHOD_2 ( ) ) ) && ( ( type . METHOD_3 ( ) . length ) > 0 ) ) { IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 . logger . log ( IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 . IDENT_11 , ( STRING_2 + ( type . METHOD_3 ( ) [ 0 ] ) ) ) ; java . lang . Class < ? > IDENT_12 = IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 . METHOD_4 ( type ) ; return IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 . METHOD_5 ( ( ( java . lang . Class < IDENT_13 > ) ( IDENT_12 ) ) ) ; } else { return IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 . METHOD_5 ( type ) ; } }
org . junit . Assert . assertEquals ( IDENT_8 , IDENT_10 ) 