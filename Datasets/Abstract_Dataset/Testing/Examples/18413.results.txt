METHOD_0 ( ) { METHOD_1 ( ) . METHOD_2 ( org . apache . jackrabbit . oak . jcr . IDENT_0 . IDENT_1 . IDENT_2 ) ; org . apache . jackrabbit . api . IDENT_0 . IDENT_3 IDENT_4 = IDENT_5 . METHOD_3 ( INT_0 , 10 ) ; "<AssertPlaceHolder>" ; try { IDENT_5 . METHOD_4 ( ( ( IDENT_4 . METHOD_5 ( ) ) + STRING_0 ) ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . IllegalArgumentException e ) { } } METHOD_3 ( long , int ) { org . apache . jackrabbit . oak . api . IDENT_6 . IDENT_7 IDENT_4 = METHOD_6 ( ) . METHOD_7 ( IDENT_8 , IDENT_9 ) ; if ( null == IDENT_4 ) { return null ; } return new org . apache . jackrabbit . api . IDENT_0 . METHOD_8 ( ) { @ org . apache . jackrabbit . oak . plugins . value . jcr . Override @ org . IDENT_10 . IDENT_11 . IDENT_12 public org . apache . jackrabbit . oak . plugins . value . jcr . IDENT_13 < java . net . URI > METHOD_9 ( ) { return IDENT_4 . METHOD_9 ( ) ; } @ org . apache . jackrabbit . oak . plugins . value . jcr . Override public long METHOD_10 ( ) { return IDENT_4 . METHOD_10 ( ) ; } @ org . apache . jackrabbit . oak . plugins . value . jcr . Override public long METHOD_11 ( ) { return IDENT_4 . METHOD_11 ( ) ; } @ org . apache . jackrabbit . oak . plugins . value . jcr . Override @ org . IDENT_10 . IDENT_11 . IDENT_12 public java . lang . String METHOD_5 ( ) { return IDENT_4 . METHOD_5 ( ) ; } } ; }
org . junit . Assert . assertNotNull ( IDENT_4 ) 