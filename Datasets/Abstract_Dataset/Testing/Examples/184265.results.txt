METHOD_0 ( ) { java . util . stream . IDENT_0 < gov . IDENT_1 . services . security . IDENT_2 > IDENT_3 = IDENT_4 . stream ( ) . filter ( ( r ) -> ( r . METHOD_1 ( ) ) == 2 ) ; java . util . Set < gov . IDENT_1 . services . security . IDENT_2 > IDENT_5 = IDENT_3 . collect ( java . util . stream . IDENT_6 . METHOD_2 ( ) ) ; gov . IDENT_1 . services . IDENT_7 . logger . info ( IDENT_5 . toString ( ) ) ; gov . IDENT_1 . services . security . IDENT_8 IDENT_9 = new gov . IDENT_1 . services . security . METHOD_3 ( STRING_0 , STRING_1 , "test" , STRING_2 , 1 , IDENT_5 , null ) ; gov . IDENT_1 . services . security . METHOD_3 IDENT_10 = null ; try { IDENT_10 = IDENT_11 . create ( IDENT_9 ) ; } catch ( java . lang . Exception e ) { gov . IDENT_1 . services . IDENT_7 . logger . error ( STRING_3 , e ) ; } "<AssertPlaceHolder>" ; } METHOD_4 ( ) { return IDENT_12 ; }
org . junit . Assert . assertEquals ( IDENT_9 . METHOD_4 ( ) , IDENT_10 . METHOD_4 ( ) ) 