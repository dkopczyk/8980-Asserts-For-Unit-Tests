METHOD_0 ( ) { org . apache . jackrabbit . oak . spi . state . IDENT_0 IDENT_1 = METHOD_1 ( builder , "test" , of ( "foo" ) , STRING_0 ) ; org . apache . jackrabbit . oak . plugins . index . lucene . IDENT_2 node = METHOD_2 ( new org . apache . jackrabbit . oak . plugins . index . lucene . METHOD_3 ( root , IDENT_1 . METHOD_4 ( ) , STRING_1 ) ) ; org . apache . jackrabbit . oak . query . index . IDENT_3 filter = METHOD_5 ( STRING_2 ) ; filter . METHOD_6 ( "bar" , IDENT_4 . IDENT_5 , org . apache . jackrabbit . oak . plugins . IDENT_6 . IDENT_7 . METHOD_7 ( "bar" ) ) ; org . apache . jackrabbit . oak . plugins . index . search . spi . query . IDENT_8 IDENT_9 = new org . apache . jackrabbit . oak . plugins . index . search . spi . query . METHOD_8 ( node , STRING_1 , filter , java . util . Collections . < org . apache . jackrabbit . oak . spi . query . IDENT_10 . IDENT_11 > emptyList ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( ) { if ( ( IDENT_12 ) == null ) { org . apache . jackrabbit . oak . plugins . index . search . spi . query . METHOD_8 . log . debug ( STRING_3 , IDENT_13 ) ; return null ; } org . apache . jackrabbit . oak . plugins . index . search . spi . query . IDENT_14 . Builder builder = METHOD_10 ( ) ; if ( IDENT_12 . METHOD_11 ( ) ) { if ( builder == null ) { if ( METHOD_12 ( ) ) { return null ; } java . lang . String msg = java . lang . String . format ( ( STRING_4 + STRING_5 ) , filter , IDENT_12 ) ; throw new java . lang . IllegalStateException ( msg ) ; } else { builder . METHOD_13 ( 1 ) . METHOD_14 ( FLOAT_0 ) . METHOD_15 ( FLOAT_0 ) ; } } return builder != null ? builder . build ( ) : null ; }
org . junit . Assert . assertNull ( IDENT_9 . METHOD_9 ( ) ) 