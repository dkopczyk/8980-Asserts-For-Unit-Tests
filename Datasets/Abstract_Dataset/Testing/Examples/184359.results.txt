METHOD_0 ( ) { java . lang . String text = STRING_0 ; java . lang . String expect = STRING_1 ; java . lang . String actual = gov . IDENT_0 . IDENT_1 . doc . xml . IDENT_2 . IDENT_3 . METHOD_0 ( text ) ; "<AssertPlaceHolder>" ; } METHOD_0 ( java . lang . String ) { java . lang . StringBuffer IDENT_4 = new java . lang . StringBuffer ( ) ; java . util . regex . IDENT_5 matcher = gov . IDENT_0 . IDENT_1 . doc . xml . IDENT_6 . IDENT_7 . matcher ( IDENT_8 ) ; while ( matcher . find ( ) ) { java . lang . String IDENT_9 = matcher . group ( 1 ) ; java . lang . String IDENT_10 = matcher . group ( 2 ) ; IDENT_9 = IDENT_9 . trim ( ) ; if ( IDENT_9 . contains ( STRING_2 ) ) { continue ; } matcher . METHOD_1 ( IDENT_4 , IDENT_10 ) ; } matcher . METHOD_2 ( IDENT_4 ) ; java . lang . String IDENT_11 = java . text . IDENT_12 . METHOD_3 ( IDENT_4 . toString ( ) , IDENT_12 . IDENT_13 . IDENT_14 ) ; IDENT_11 = IDENT_11 . replaceAll ( STRING_3 , "" ) ; return IDENT_11 ; }
org . junit . Assert . assertEquals ( expect , actual ) 