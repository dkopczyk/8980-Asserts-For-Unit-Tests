METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; boolean IDENT_2 = true ; boolean IDENT_3 = false ; boolean IDENT_4 = true ; org . apache . jackrabbit . oak . plugins . index . lucene . IDENT_5 node = METHOD_1 ( IDENT_0 , IDENT_2 , IDENT_3 ) ; org . apache . jackrabbit . oak . spi . query . IDENT_6 . IDENT_7 plan = METHOD_2 ( node , IDENT_1 , IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . apache . jackrabbit . oak . plugins . index . lucene . IDENT_5 , java . lang . String , boolean ) { org . apache . jackrabbit . oak . query . index . IDENT_8 filter = METHOD_3 ( IDENT_9 ) ; filter . METHOD_4 ( IDENT_10 . METHOD_5 ( ) . METHOD_6 ( ) , IDENT_11 . IDENT_12 , org . apache . jackrabbit . oak . plugins . IDENT_13 . IDENT_14 . METHOD_7 ( ( ( IDENT_15 ? STRING_2 : STRING_3 ) + STRING_4 ) ) ) ; org . apache . jackrabbit . oak . plugins . index . search . spi . query . IDENT_16 IDENT_17 = new org . apache . jackrabbit . oak . plugins . index . search . spi . query . METHOD_8 ( IDENT_10 , STRING_5 , filter , java . util . Collections . < org . apache . jackrabbit . oak . spi . query . IDENT_6 . IDENT_18 > emptyList ( ) ) ; return IDENT_17 . METHOD_9 ( ) ; }
org . junit . Assert . assertNull ( plan ) 