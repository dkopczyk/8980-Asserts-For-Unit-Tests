METHOD_0 ( ) { com . vaadin . flow . internal . IDENT_0 . IDENT_1 IDENT_2 = new com . vaadin . flow . internal . IDENT_0 . METHOD_1 ( ) ; com . vaadin . flow . internal . IDENT_0 . METHOD_1 node = METHOD_2 ( IDENT_2 , INT_0 ) ; com . vaadin . flow . internal . IDENT_3 tree = METHOD_3 ( ) ; com . vaadin . flow . internal . IDENT_0 . METHOD_4 ( IDENT_2 , tree . METHOD_5 ( ) ) ; java . util . Set < java . lang . Integer > set = java . util . stream . IDENT_4 . range ( ( - 1 ) , ( ( node . METHOD_6 ( ) ) + 1 ) ) . METHOD_7 ( ) . collect ( java . util . stream . IDENT_5 . METHOD_8 ( ) ) ; IDENT_2 . METHOD_9 ( ( n ) -> METHOD_10 ( ( ( com . vaadin . flow . internal . METHOD_1 ) ( n ) ) , tree , set ) ) ; "<AssertPlaceHolder>" ; } isEmpty ( ) { return IDENT_6 . isEmpty ( ) ; }
org . junit . Assert . assertTrue ( set . isEmpty ( ) ) 