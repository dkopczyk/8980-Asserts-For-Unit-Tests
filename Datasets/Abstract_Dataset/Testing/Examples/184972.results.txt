METHOD_0 ( ) { try { IDENT_0 . METHOD_1 ( ) ; } catch ( java . sql . IDENT_1 e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( ( STRING_0 + ( e . getMessage ( ) ) ) ) ; } java . sql . IDENT_2 conn = IDENT_0 . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( ) { if ( ! ( IDENT_3 ) ) { METHOD_2 ( ) ; } if ( IDENT_4 . isEmpty ( ) ) { if ( ( IDENT_5 . size ( ) ) < ( IDENT_6 ) ) { IDENT_4 . add ( METHOD_3 ( ) ) ; } else { throw new java . sql . METHOD_4 ( STRING_1 ) ; } } java . sql . IDENT_2 c = IDENT_4 . iterator ( ) . next ( ) ; IDENT_4 . remove ( c ) ; IDENT_5 . add ( c ) ; return c ; }
org . junit . Assert . assertNotNull ( conn ) 