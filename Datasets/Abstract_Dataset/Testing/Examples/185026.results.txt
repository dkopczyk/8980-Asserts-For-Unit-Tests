METHOD_0 ( ) { com . vaadin . IDENT_0 . data . util . IDENT_1 . query . IDENT_2 IDENT_3 = new com . vaadin . IDENT_0 . data . util . IDENT_1 . query . METHOD_1 ( STRING_0 , IDENT_4 , com . vaadin . IDENT_0 . data . util . IDENT_1 . IDENT_5 . IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . Object [ ] ) { java . lang . String query = null ; boolean contains = false ; if ( ( delegate ) != null ) { if ( ( delegate ) instanceof com . vaadin . IDENT_0 . data . util . IDENT_1 . query . IDENT_7 ) { try { com . vaadin . IDENT_0 . data . util . IDENT_1 . query . generator . IDENT_8 IDENT_9 = ( ( com . vaadin . IDENT_0 . data . util . IDENT_1 . query . IDENT_7 ) ( delegate ) ) . METHOD_3 ( keys ) ; java . sql . IDENT_10 IDENT_11 = null ; java . sql . ResultSet rs = null ; java . sql . IDENT_12 c = METHOD_4 ( ) ; try { IDENT_11 = c . METHOD_5 ( IDENT_9 . METHOD_6 ( ) ) ; IDENT_9 . METHOD_7 ( IDENT_11 ) ; rs = IDENT_11 . METHOD_8 ( ) ; contains = rs . next ( ) ; return contains ; } finally { METHOD_9 ( c , IDENT_11 , rs ) ; } } catch ( java . lang . IDENT_13 e ) { } } try { query = delegate . METHOD_10 ( keys ) ; } catch ( java . lang . IDENT_13 e ) { query = METHOD_11 ( keys ) ; } } else { query = METHOD_11 ( keys ) ; } java . sql . IDENT_14 statement = null ; java . sql . ResultSet rs = null ; java . sql . IDENT_12 conn = METHOD_4 ( ) ; try { statement = conn . METHOD_12 ( ) ; rs = statement . METHOD_8 ( query ) ; contains = rs . next ( ) ; } finally { METHOD_9 ( conn , statement , rs ) ; } return contains ; }
org . junit . Assert . assertTrue ( IDENT_3 . METHOD_2 ( 1 ) ) 