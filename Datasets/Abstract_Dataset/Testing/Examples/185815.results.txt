METHOD_0 ( ) { io . vertx . ext . IDENT_0 . IDENT_1 options = new io . vertx . ext . IDENT_0 . METHOD_1 ( ) ; io . vertx . core . json . IDENT_2 fields = io . vertx . ext . IDENT_0 . IDENT_3 . METHOD_2 ( ) ; io . vertx . core . json . IDENT_2 IDENT_4 = io . vertx . ext . IDENT_0 . IDENT_3 . METHOD_2 ( ) ; int IDENT_5 = io . vertx . test . core . TestUtils . METHOD_3 ( ) ; int IDENT_6 = io . vertx . test . core . TestUtils . METHOD_3 ( ) ; options . METHOD_4 ( fields ) ; options . METHOD_5 ( IDENT_4 ) ; options . METHOD_6 ( IDENT_5 ) ; options . METHOD_7 ( IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( ) { io . vertx . core . json . IDENT_2 IDENT_7 = new io . vertx . core . json . METHOD_9 ( ) ; if ( ( IDENT_8 ) != ( io . vertx . ext . IDENT_0 . IDENT_9 . IDENT_10 ) ) { IDENT_7 . put ( io . vertx . ext . IDENT_0 . IDENT_9 . IDENT_11 , IDENT_8 ) ; } if ( ( IDENT_12 ) != ( io . vertx . ext . IDENT_0 . IDENT_9 . IDENT_13 ) ) { IDENT_7 . put ( io . vertx . ext . IDENT_0 . IDENT_9 . IDENT_14 , IDENT_12 ) ; } if ( ( IDENT_15 ) != ( io . vertx . ext . IDENT_0 . IDENT_9 . IDENT_16 ) ) { IDENT_7 . put ( io . vertx . ext . IDENT_0 . IDENT_9 . IDENT_17 , IDENT_15 ) ; } if ( ( IDENT_18 ) != ( io . vertx . ext . IDENT_0 . IDENT_9 . IDENT_19 ) ) { IDENT_7 . put ( io . vertx . ext . IDENT_0 . IDENT_9 . IDENT_20 , IDENT_18 ) ; } if ( ( IDENT_21 ) != null ) { IDENT_7 . put ( io . vertx . ext . IDENT_0 . IDENT_9 . IDENT_22 , new io . vertx . core . json . METHOD_10 ( IDENT_21 ) ) ; } return IDENT_7 ; }
org . junit . Assert . assertEquals ( options , new io . vertx . ext . IDENT_0 . METHOD_1 ( options . METHOD_8 ( ) ) ) 