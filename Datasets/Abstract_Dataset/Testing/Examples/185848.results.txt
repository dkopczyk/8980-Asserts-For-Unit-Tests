METHOD_0 ( ) { io . vertx . core . IDENT_0 < java . lang . IDENT_1 > IDENT_2 = io . vertx . core . IDENT_0 . future ( ) ; try { io . IDENT_3 . IDENT_4 IDENT_5 = io . IDENT_3 . IDENT_4 . METHOD_1 ( ) ; io . IDENT_3 . plugins . IDENT_6 . METHOD_2 ( ( IDENT_7 ) -> METHOD_1 ) ; io . IDENT_3 . IDENT_4 IDENT_8 = io . vertx . IDENT_3 . impl . IDENT_9 . METHOD_3 ( IDENT_2 :: IDENT_10 ) ; "<AssertPlaceHolder>" ; } finally { io . IDENT_3 . plugins . IDENT_6 . METHOD_4 ( ) ; } } METHOD_3 ( java . util . function . IDENT_11 ) { return io . IDENT_3 . plugins . IDENT_6 . METHOD_5 ( new io . vertx . IDENT_3 . impl . METHOD_6 ( IDENT_12 ) ) ; }
org . junit . Assert . assertSame ( IDENT_8 , METHOD_1 ) 