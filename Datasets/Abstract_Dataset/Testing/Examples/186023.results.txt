METHOD_0 ( ) { org . apache . avro . Schema schema = org . apache . avro . reflect . IDENT_0 . get ( ) . METHOD_1 ( org . springframework . cloud . stream . IDENT_1 . IDENT_2 . class ) ; org . springframework . cloud . stream . schema . IDENT_3 client = mock ( org . springframework . cloud . stream . schema . IDENT_3 . class ) ; when ( client . METHOD_2 ( any ( ) ) ) . thenReturn ( 10 ) ; when ( client . METHOD_3 ( eq ( 10 ) ) ) . thenReturn ( schema ) ; org . springframework . cloud . stream . codec . avro . IDENT_4 codec = new org . springframework . cloud . stream . codec . avro . METHOD_4 ( ) ; org . springframework . cloud . stream . codec . avro . IDENT_5 properties = new org . springframework . cloud . stream . codec . avro . METHOD_5 ( ) ; properties . METHOD_6 ( true ) ; codec . METHOD_7 ( properties ) ; codec . METHOD_8 ( client ) ; codec . METHOD_9 ( new org . springframework . core . io . support . METHOD_10 ( new org . springframework . context . annotation . METHOD_11 ( ) ) ) ; codec . init ( ) ; org . springframework . cloud . stream . IDENT_1 . IDENT_2 IDENT_6 = new org . springframework . cloud . stream . IDENT_1 . METHOD_12 ( ) ; IDENT_6 . METHOD_13 ( java . lang . System . currentTimeMillis ( ) ) ; IDENT_6 . setId ( 1L ) ; byte [ ] results = codec . encode ( IDENT_6 ) ; org . springframework . cloud . stream . IDENT_1 . METHOD_12 IDENT_7 = codec . decode ( results , org . springframework . cloud . stream . IDENT_1 . METHOD_12 . class ) ; "<AssertPlaceHolder>" ; } getId ( ) { return id ; }
org . junit . Assert . assertEquals ( IDENT_6 . getId ( ) , IDENT_7 . getId ( ) ) 