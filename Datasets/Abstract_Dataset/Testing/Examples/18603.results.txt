METHOD_0 ( ) { org . apache . jackrabbit . oak . spi . security . authorization . IDENT_0 . IDENT_1 IDENT_2 = METHOD_1 ( IDENT_3 , IDENT_4 . IDENT_5 . get ( IDENT_6 . IDENT_7 ) , true ) ; org . apache . jackrabbit . oak . spi . security . authorization . IDENT_0 . IDENT_1 IDENT_8 = METHOD_1 ( IDENT_3 , IDENT_4 . IDENT_5 . get ( IDENT_6 . IDENT_7 ) , true ) ; "<AssertPlaceHolder>" ; } get ( java . lang . String ) { if ( IDENT_9 == null ) { return com . google . common . collect . IDENT_10 . of ( ) ; } java . util . Set < java . security . IDENT_11 > IDENT_12 ; if ( ! ( IDENT_13 . containsKey ( IDENT_9 ) ) ) { java . lang . String [ ] IDENT_14 = IDENT_15 . get ( IDENT_9 ) ; if ( IDENT_14 == null ) { IDENT_12 = com . google . common . collect . IDENT_10 . of ( ) ; } else { com . google . common . collect . IDENT_10 . Builder < java . security . IDENT_11 > builder = com . google . common . collect . IDENT_10 . builder ( ) ; for ( java . lang . String IDENT_16 : IDENT_15 . get ( IDENT_9 ) ) { try { org . apache . jackrabbit . api . security . user . IDENT_17 IDENT_18 = IDENT_19 . METHOD_2 ( IDENT_16 ) ; if ( ( IDENT_18 != null ) && ( IDENT_18 . METHOD_3 ( ) ) ) { java . security . IDENT_11 IDENT_20 = IDENT_18 . METHOD_4 ( ) ; if ( org . apache . jackrabbit . oak . spi . security . IDENT_21 . IDENT_22 . METHOD_3 ( IDENT_20 ) ) { builder . add ( IDENT_20 ) ; } else { org . apache . jackrabbit . oak . spi . security . authentication . IDENT_23 . impl . IDENT_21 . IDENT_24 . log . warn ( STRING_0 , IDENT_16 ) ; } } else { org . apache . jackrabbit . oak . spi . security . authentication . IDENT_23 . impl . IDENT_21 . IDENT_24 . log . warn ( STRING_1 , IDENT_16 ) ; } } catch ( javax . jcr . IDENT_25 e ) { org . apache . jackrabbit . oak . spi . security . authentication . IDENT_23 . impl . IDENT_21 . IDENT_24 . log . debug ( STRING_2 , IDENT_16 , e ) ; } } IDENT_12 = builder . build ( ) ; } IDENT_13 . put ( IDENT_9 , IDENT_12 ) ; } else { IDENT_12 = IDENT_13 . get ( IDENT_9 ) ; } return IDENT_12 ; }
org . junit . Assert . assertEquals ( IDENT_2 , IDENT_8 ) 