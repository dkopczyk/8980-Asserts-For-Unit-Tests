METHOD_0 ( ) { edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . configuration . IDENT_6 . IDENT_7 validator = new edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . configuration . IDENT_6 . METHOD_1 ( ) ; edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_8 . IDENT_9 IDENT_10 = new edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_8 . METHOD_2 ( ) ; IDENT_10 . METHOD_3 ( STRING_0 ) ; IDENT_10 . METHOD_4 ( java . util . Arrays . asList ( STRING_1 , STRING_2 , STRING_3 ) ) ; java . util . Map < java . lang . String , java . lang . String [ ] > params = new java . util . HashMap < java . lang . String , java . lang . String [ ] > ( ) ; java . lang . String [ ] IDENT_11 = new java . lang . String [ ] { STRING_4 } ; params . put ( STRING_1 , IDENT_11 ) ; java . lang . String [ ] IDENT_12 = new java . lang . String [ ] { STRING_5 } ; params . put ( STRING_2 , IDENT_12 ) ; java . lang . String [ ] IDENT_13 = new java . lang . String [ ] { STRING_6 } ; params . put ( STRING_3 , IDENT_13 ) ; edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_8 . IDENT_14 IDENT_15 = new edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_8 . METHOD_5 ( params , IDENT_10 ) ; java . util . Map < java . lang . String , java . lang . String > res = validator . validate ( IDENT_10 , IDENT_15 ) ; "<AssertPlaceHolder>" ; } validate ( edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_8 . METHOD_2 , edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_8 . METHOD_5 ) { java . util . Map < java . lang . String , java . util . List < org . apache . jena . IDENT_16 . model . IDENT_17 > > IDENT_18 = IDENT_19 . METHOD_6 ( ) ; java . util . Map < java . lang . String , java . lang . String > errors = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; java . util . List < org . apache . jena . IDENT_16 . model . IDENT_17 > IDENT_20 = IDENT_18 . get ( STRING_7 2 ) ; org . apache . jena . IDENT_16 . model . IDENT_17 IDENT_21 = null ; if ( ( IDENT_20 != null ) && ( ( IDENT_20 . size ( ) ) > 0 ) ) { IDENT_21 = IDENT_20 . get ( 0 ) ; } java . lang . String IDENT_22 = "" ; if ( IDENT_21 != null ) { IDENT_22 = IDENT_21 . METHOD_7 ( ) ; if ( "" . equals ( IDENT_22 ) ) { IDENT_21 = null ; } } if ( IDENT_21 != null ) { if ( ( IDENT_23 . indexOf ( STRING_8 ) ) > ( - 1 ) ) { if ( ! ( IDENT_24 . matcher ( IDENT_22 ) . matches ( ) ) ) { errors . put ( STRING_9 , IDENT_25 . text ( STRING_7 3 ) ) ; } } else if ( ( IDENT_23 . indexOf ( STRING_10 ) ) > ( - 1 ) ) { if ( ! ( IDENT_26 . matcher ( IDENT_22 ) . matches ( ) ) ) { errors . put ( STRING_11 , IDENT_25 . text ( STRING_12 ) ) ; } } else if ( ( IDENT_23 . indexOf ( STRING_7 1 ) ) > ( - 1 ) ) { if ( ! ( IDENT_27 . matcher ( IDENT_22 ) . matches ( ) ) ) { errors . put ( STRING_7 , IDENT_25 . text ( STRING_7 9 ) ) ; } } else if ( ( IDENT_23 . indexOf ( STRING_13 ) ) > ( - 1 ) ) { if ( ! ( IDENT_28 . matcher ( IDENT_22 ) . matches ( ) ) ) { errors . put ( STRING_14 , IDENT_25 . text ( STRING_7 5 ) ) ; } } else if ( ( IDENT_23 . indexOf ( STRING_7 4 ) ) > ( - 1 ) ) { if ( ! ( IDENT_29 . matcher ( IDENT_22 ) . matches ( ) ) ) { errors . put ( STRING_7 7 , IDENT_25 . text ( STRING_7 0 ) ) ; } } else if ( ( IDENT_23 . indexOf ( STRING_7 8 ) ) > ( - 1 ) ) { if ( ! ( IDENT_30 . matcher ( IDENT_22 ) . matches ( ) ) ) { errors . put ( STRING_9 2 , IDENT_25 . text ( STRING_9 1 ) ) ; } } else if ( ( IDENT_23 . indexOf ( STRING_7 6 ) ) > ( - 1 ) ) { if ( ! ( IDENT_31 . matcher ( IDENT_22 ) . matches ( ) ) ) { errors . put ( STRING_9 0 , IDENT_25 . text ( STRING_15 ) ) ; } } } else { return null ; } return ( errors . size ( ) ) != 0 ? errors : null ; }
org . junit . Assert . assertNull ( res ) 