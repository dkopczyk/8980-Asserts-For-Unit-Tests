METHOD_0 ( ) { METHOD_1 ( ( IDENT_0 ) -> { IDENT_0 . METHOD_2 ( new com . IDENT_1 . IDENT_2 . IDENT_3 . hibernate . IDENT_4 . pagination . METHOD_3 ( ) . setId ( INT_0 ) . METHOD_4 ( STRING_0 ) . METHOD_5 ( java . sql . IDENT_5 . valueOf ( java . time . IDENT_6 . of ( INT_1 , 10 , 8 , 12 , 0 , 0 , 0 ) ) ) ) ; } ) ; java . util . List < com . IDENT_1 . IDENT_2 . IDENT_3 . hibernate . IDENT_4 . pagination . METHOD_3 > IDENT_7 = METHOD_1 ( ( IDENT_0 ) -> { com . IDENT_1 . IDENT_2 . IDENT_3 . hibernate . IDENT_4 . pagination . IDENT_8 IDENT_9 = new com . IDENT_1 . IDENT_2 . IDENT_3 . hibernate . IDENT_4 . pagination . METHOD_6 ( IDENT_0 ) ; return IDENT_0 . METHOD_7 ( STRING_1 ) . METHOD_8 ( STRING_2 , STRING_3 ) . METHOD_8 ( STRING_4 , 2 ) . METHOD_9 ( IDENT_10 . IDENT_11 , true ) . METHOD_10 ( . class ) . METHOD_11 ( IDENT_9 ) . METHOD_12 ( ) ; } ) ; "<AssertPlaceHolder>" ; com . IDENT_1 . IDENT_2 . IDENT_3 . hibernate . IDENT_4 . pagination . METHOD_3 IDENT_12 = IDENT_7 . get ( 0 ) ; long IDENT_13 = ( ( IDENT_12 . getId ( ) ) - 1 ) * ( com . IDENT_1 . IDENT_2 . IDENT_3 . hibernate . IDENT_4 . pagination . IDENT_14 . IDENT_15 ) ; IDENT_12 . METHOD_13 ( new com . IDENT_1 . IDENT_2 . IDENT_3 . hibernate . IDENT_4 . pagination . METHOD_14 ( ) . setId ( IDENT_13 ) . METHOD_15 ( java . lang . String . format ( STRING_5 , IDENT_13 ) ) . METHOD_5 ( java . sql . IDENT_5 . valueOf ( java . time . IDENT_6 . now ( ) ) ) ) ; com . IDENT_1 . IDENT_2 . IDENT_3 . hibernate . IDENT_4 . pagination . METHOD_3 IDENT_16 = IDENT_7 . get ( 1 ) ; IDENT_16 . METHOD_16 ( IDENT_16 . METHOD_17 ( ) . get ( 0 ) ) ; METHOD_1 ( ( IDENT_0 ) -> { IDENT_0 . METHOD_18 ( IDENT_12 ) ; IDENT_0 . METHOD_18 ( IDENT_16 ) ; } ) ; } METHOD_4 ( java . lang . String ) { this . IDENT_17 = IDENT_17 ; }
org . junit . Assert . assertEquals ( 2 , IDENT_7 . size ( ) ) 