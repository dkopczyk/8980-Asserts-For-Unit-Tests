test ( ) { int IDENT_0 = 3 ; for ( long IDENT_1 = 0 ; IDENT_1 < ( IDENT_2 ) ; IDENT_1 ++ ) { com . IDENT_3 . IDENT_4 . IDENT_5 . hibernate . query . IDENT_6 . IDENT_7 . List < com . IDENT_3 . IDENT_4 . IDENT_5 . hibernate . query . IDENT_6 . IDENT_8 > result = METHOD_0 ( IDENT_1 , IDENT_0 ) ; "<AssertPlaceHolder>" ; } IDENT_9 . report ( ) ; } METHOD_0 ( java . lang . Long , int ) { return METHOD_1 ( ( sql ) -> { return sql . select ( field ( name ( IDENT_10 , STRING_0 ) , . class ) , field ( name ( IDENT_10 , STRING_1 ) , . class ) , field ( name ( IDENT_10 , STRING_2 ) , . class ) , field ( name ( IDENT_10 , STRING_3 ) , . class ) , field ( name ( IDENT_10 , STRING_4 ) , . class ) ) . from ( sql . select ( field ( name ( IDENT_11 , STRING_0 ) ) , field ( name ( IDENT_11 , STRING_1 ) ) , field ( name ( IDENT_11 , STRING_2 ) ) , field ( name ( IDENT_11 , STRING_3 ) ) , field ( name ( IDENT_11 , STRING_4 ) ) , METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( field ( name ( IDENT_11 , STRING_5 ) ) . METHOD_5 ( ) ) ) . as ( STRING_6 ) ) . from ( sql . select ( field ( name ( IDENT_12 , STRING_0 ) ) , field ( name ( IDENT_12 , STRING_1 ) ) , field ( name ( IDENT_12 , STRING_2 ) ) , field ( name ( IDENT_12 , STRING_3 ) ) , field ( name ( IDENT_12 , STRING_4 ) ) , METHOD_6 ( field ( name ( IDENT_12 , STRING_4 ) , . class ) ) . METHOD_3 ( METHOD_7 ( field ( name ( IDENT_12 , STRING_7 ) ) ) ) . as ( STRING_5 ) ) . from ( sql . METHOD_8 ( METHOD_9 ( sql , IDENT_1 ) ) . select ( field ( name ( IDENT_13 , STRING_0 ) ) , field ( name ( IDENT_13 , STRING_1 ) ) , field ( name ( IDENT_13 , STRING_7 ) ) , field ( name ( IDENT_13 , STRING_2 ) ) , field ( name ( IDENT_13 , STRING_3 ) ) , field ( name ( IDENT_13 , STRING_4 ) ) ) . from ( table ( IDENT_13 ) ) . METHOD_10 ( IDENT_12 ) ) . METHOD_10 ( IDENT_11 ) ) . METHOD_4 ( field ( name ( IDENT_11 , STRING_5 ) ) . METHOD_5 ( ) , field ( name ( IDENT_11 , STRING_0 ) ) . METHOD_11 ( ) ) . METHOD_10 ( IDENT_10 ) ) . METHOD_12 ( field ( name ( IDENT_10 , STRING_6 ) , . class ) . METHOD_13 ( IDENT_0 ) ) . METHOD_14 ( . class ) ; } ) ; }
org . junit . Assert . assertNotNull ( result ) 