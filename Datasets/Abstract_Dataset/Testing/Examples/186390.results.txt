METHOD_0 ( ) { com . vmware . IDENT_0 . compute . container . IDENT_1 . IDENT_2 IDENT_3 = METHOD_1 ( ) ; for ( int i = 0 ; i < ( IDENT_4 . size ( ) ) ; i ++ ) { java . lang . String IDENT_5 = IDENT_4 . get ( i ) ; METHOD_2 ( IDENT_3 , IDENT_5 ) ; } "<AssertPlaceHolder>" ; filter = new com . vmware . IDENT_0 . request . IDENT_6 . filter . METHOD_3 ( host , IDENT_3 ) ; filter ( IDENT_7 ) ; } METHOD_2 ( com . vmware . IDENT_0 . adapter . IDENT_8 . service . IDENT_9 , com . vmware . IDENT_10 . common . Operation . IDENT_11 ) { METHOD_4 ( input ) ; java . net . URI uri = com . vmware . IDENT_10 . common . IDENT_12 . METHOD_5 ( input . METHOD_6 ( ) , STRING_0 ) ; java . lang . String IDENT_13 = ( ( java . lang . String ) ( input . METHOD_7 ( ) . get ( com . vmware . IDENT_0 . adapter . IDENT_8 . service . IDENT_14 ) ) ) ; if ( IDENT_13 != null ) { uri = com . vmware . IDENT_10 . common . IDENT_12 . METHOD_8 ( uri , "name" , IDENT_13 ) ; } com . vmware . IDENT_0 . adapter . IDENT_8 . service . IDENT_15 . logger . info ( ( STRING_1 + uri ) ) ; METHOD_9 ( uri , input . METHOD_7 ( ) , com . vmware . IDENT_0 . adapter . IDENT_8 . service . IDENT_15 . IDENT_16 . IDENT_17 , IDENT_18 ) ; }
org . junit . Assert . assertEquals ( IDENT_4 . size ( ) , IDENT_7 . size ( ) ) 