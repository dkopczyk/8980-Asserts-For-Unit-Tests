METHOD_0 ( ) { final int size = 1000 ; final int range = 1000 ; org . IDENT_0 . utils . IDENT_1 IDENT_2 = new org . IDENT_0 . utils . METHOD_1 ( 2 ) ; final org . IDENT_0 . table . IDENT_3 . IDENT_4 IDENT_5 = org . IDENT_0 . utils . IDENT_6 . METHOD_2 ( size , range , STRING_0 , IDENT_2 ) ; final org . IDENT_0 . table . api . IDENT_7 IDENT_8 = IDENT_5 . METHOD_3 ( ) ; final java . lang . Integer [ ] order = new java . lang . Integer [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { order [ i ] = i ; } java . util . Arrays . METHOD_4 ( order , IDENT_8 ) ; for ( int i = 0 ; i < ( size - 1 ) ; i ++ ) { "<AssertPlaceHolder>" ; } } METHOD_5 ( int ) { throw new java . lang . METHOD_6 ( ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_5 . METHOD_5 ( order [ i ] ) ) <= ( IDENT_5 . METHOD_5 ( order [ ( i + 1 ) ] ) ) ) ) 