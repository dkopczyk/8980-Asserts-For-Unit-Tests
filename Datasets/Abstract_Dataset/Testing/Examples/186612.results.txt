METHOD_0 ( ) { java . lang . String IDENT_0 = com . vmware . IDENT_1 . common . IDENT_2 . METHOD_1 ( this . IDENT_3 ) ; for ( int i = 0 ; i < ( this . IDENT_4 ) ; i ++ ) { java . lang . String IDENT_5 = METHOD_2 ( i ) ; METHOD_3 ( IDENT_0 , IDENT_5 , null ) ; METHOD_4 ( IDENT_0 , ( i + 1 ) ) ; METHOD_5 ( IDENT_0 , IDENT_5 , FLOAT_0 , null ) ; METHOD_6 ( IDENT_0 , IDENT_5 , FLOAT_0 ) ; } boolean IDENT_6 = com . vmware . IDENT_1 . common . IDENT_2 . METHOD_7 ( this . IDENT_3 , IDENT_0 ) ; "<AssertPlaceHolder>" ; METHOD_4 ( null , 0 ) ; } METHOD_7 ( com . vmware . IDENT_1 . common . test . IDENT_7 , java . lang . String ) { com . vmware . IDENT_1 . common . test . IDENT_8 IDENT_9 = new com . vmware . IDENT_1 . common . test . METHOD_8 ( host ) ; try { com . vmware . IDENT_1 . common . Operation IDENT_10 = IDENT_9 . METHOD_9 ( com . vmware . IDENT_1 . common . IDENT_2 . METHOD_10 ( host , IDENT_0 ) ) ; if ( ( IDENT_10 . getStatusCode ( ) ) == ( Operation . IDENT_11 ) ) { return true ; } } catch ( java . lang . Exception e ) { host . log ( IDENT_12 . IDENT_13 , STRING_0 , e . getMessage ( ) ) ; } return false ; }
org . junit . Assert . assertTrue ( IDENT_6 ) 