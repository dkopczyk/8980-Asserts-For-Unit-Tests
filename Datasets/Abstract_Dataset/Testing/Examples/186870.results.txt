METHOD_0 ( ) { java . io . File IDENT_0 = new java . io . File ( STRING_0 ) ; IDENT_0 . METHOD_1 ( ) ; java . io . File xml = new java . io . File ( IDENT_0 , STRING_1 ) ; org . IDENT_1 . conf . IDENT_2 . IDENT_3 IDENT_4 = new org . IDENT_1 . conf . IDENT_2 . METHOD_2 ( xml . getPath ( ) , false ) ; try { IDENT_4 . METHOD_3 ( ) ; org . IDENT_1 . commands . IDENT_5 command = new org . IDENT_1 . commands . METHOD_4 ( STRING_2 , null , false , null , null , null , null , false ) ; IDENT_4 . METHOD_5 ( null , null , command . METHOD_6 ( ) , false , null , null ) ; java . lang . String content = org . apache . commons . io . IDENT_6 . METHOD_7 ( xml ) ; "<AssertPlaceHolder>" ; } finally { xml . delete ( ) ; } } METHOD_6 ( ) { org . IDENT_1 . conf . entities . IDENT_7 IDENT_8 = new org . IDENT_1 . conf . entities . impl . METHOD_8 ( ) ; IDENT_8 . METHOD_9 ( type . get ( 0 ) ) ; IDENT_8 . METHOD_10 ( METHOD_10 ) ; IDENT_8 . METHOD_11 ( IDENT_9 ) ; IDENT_8 . setName ( name ) ; if ( ( params ) != null ) { IDENT_8 . METHOD_12 ( new java . util . HashMap < java . lang . String , java . lang . Object > ( params ) ) ; } return IDENT_8 ; }
org . junit . Assert . assertTrue ( content . contains ( STRING_2 ) ) 