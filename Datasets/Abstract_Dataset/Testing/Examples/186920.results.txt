test ( ) { java . util . List < IDENT_0 . com . IDENT_1 . IDENT_2 . core . plugin . processor . support . filter . IDENT_3 > filters = new java . util . ArrayList ( ) ; IDENT_0 . com . IDENT_1 . IDENT_2 . core . plugin . processor . support . filter . IDENT_3 IDENT_4 = new IDENT_0 . com . IDENT_1 . IDENT_2 . core . plugin . processor . support . filter . METHOD_0 ( ) { @ IDENT_0 . com . IDENT_1 . IDENT_2 . core . test . plugin . processor . support . filter . Override public void METHOD_1 ( IDENT_0 . com . IDENT_1 . IDENT_2 . core . dto . IDENT_5 entry , IDENT_0 . com . IDENT_1 . IDENT_2 . core . plugin . processor . support . filter . IDENT_6 IDENT_7 ) throws IDENT_0 . com . IDENT_1 . IDENT_2 . core . exception . IDENT_8 { IDENT_7 . METHOD_1 ( entry ) ; } } ; filters . add ( IDENT_4 ) ; IDENT_0 . com . IDENT_1 . IDENT_2 . core . plugin . processor . support . filter . IDENT_6 IDENT_7 = IDENT_0 . com . IDENT_1 . IDENT_2 . core . plugin . processor . support . filter . IDENT_9 . METHOD_2 ( filters ) ; try { IDENT_7 . METHOD_1 ( new IDENT_0 . com . IDENT_1 . IDENT_2 . core . dto . METHOD_3 ( STRING_0 , new IDENT_0 . com . IDENT_1 . IDENT_2 . core . dto . METHOD_4 ( ) ) ) ; } catch ( IDENT_0 . com . IDENT_1 . IDENT_2 . core . exception . IDENT_8 e ) { "<AssertPlaceHolder>" ; } } METHOD_1 ( IDENT_0 . com . IDENT_1 . IDENT_2 . core . dto . METHOD_3 , IDENT_0 . com . IDENT_1 . IDENT_2 . core . plugin . processor . support . filter . IDENT_6 ) { IDENT_0 . com . IDENT_1 . IDENT_2 . core . dto . METHOD_4 IDENT_10 = entry . METHOD_5 ( ) ; if ( ( IDENT_10 . METHOD_6 ( ) ) == ( IDENT_0 . com . IDENT_1 . IDENT_2 . core . dto . METHOD_4 . IDENT_11 ) ) { IDENT_0 . com . IDENT_1 . IDENT_2 . processor . impl . IDENT_12 . IDENT_13 . LOGGER . debug ( STRING_1 , IDENT_14 . getClass ( ) ) ; IDENT_14 . METHOD_7 ( entry ) ; } else if ( ( IDENT_10 . METHOD_6 ( ) ) == ( IDENT_0 . com . IDENT_1 . IDENT_2 . core . dto . METHOD_4 . IDENT_15 ) ) { IDENT_0 . com . IDENT_1 . IDENT_2 . processor . impl . IDENT_12 . IDENT_13 . LOGGER . debug ( STRING_2 , IDENT_14 . getClass ( ) ) ; IDENT_14 . METHOD_8 ( entry ) ; } else if ( ( IDENT_10 . METHOD_6 ( ) ) == ( IDENT_0 . com . IDENT_1 . IDENT_2 . core . dto . METHOD_4 . IDENT_16 ) ) { IDENT_0 . com . IDENT_1 . IDENT_2 . processor . impl . IDENT_12 . IDENT_13 . LOGGER . debug ( STRING_3 , IDENT_14 . getClass ( ) ) ; IDENT_14 . METHOD_9 ( entry ) ; } }
org . junit . Assert . assertTrue ( false ) 