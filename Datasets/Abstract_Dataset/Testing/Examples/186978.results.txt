METHOD_0 ( ) { com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_2 IDENT_3 = new com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_2 . Builder ( ) . METHOD_1 ( 5 ) . build ( ) ; com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_4 IDENT_5 = new com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_4 . Builder ( ) . METHOD_2 ( METHOD_2 ) . build ( ) ; com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_6 parameters = new com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_6 . Builder ( ) . text ( text ) . METHOD_3 ( METHOD_3 ) . build ( ) ; com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_7 results = service . METHOD_4 ( parameters ) . execute ( ) . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_6 ) { com . ibm . cloud . sdk . core . util . IDENT_8 . METHOD_6 ( IDENT_9 , STRING_0 ) ; java . lang . String [ ] IDENT_10 = new java . lang . String [ ] { STRING_1 } ; com . ibm . cloud . sdk . core . http . IDENT_11 builder = com . ibm . cloud . sdk . core . http . IDENT_11 . METHOD_7 ( com . ibm . cloud . sdk . core . http . IDENT_11 . METHOD_8 ( METHOD_9 ( ) , IDENT_10 ) ) ; builder . query ( STRING_2 , IDENT_12 ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_13 = com . ibm . IDENT_0 . common . IDENT_14 . METHOD_10 ( STRING_3 4 , STRING_3 3 , STRING_4 ) ; for ( java . util . Map . Entry < java . lang . String , java . lang . String > header : IDENT_13 . entrySet ( ) ) { builder . header ( header . getKey ( ) , header . getValue ( ) ) ; } builder . header ( STRING_5 , STRING_6 ) ; final com . google . gson . IDENT_15 IDENT_16 = new com . google . gson . METHOD_11 ( ) ; IDENT_16 . add ( STRING_3 7 , com . ibm . cloud . sdk . core . util . IDENT_17 . METHOD_12 ( ) . METHOD_13 ( IDENT_9 . METHOD_3 ( ) ) ) ; if ( ( IDENT_9 . text ( ) ) != null ) { IDENT_16 . METHOD_14 ( STRING_3 6 , IDENT_9 . text ( ) ) ; } if ( ( IDENT_9 . html ( ) ) != null ) { IDENT_16 . METHOD_14 ( STRING_7 , IDENT_9 . html ( ) ) ; } if ( ( IDENT_9 . url ( ) ) != null ) { IDENT_16 . METHOD_14 ( STRING_3 , IDENT_9 . url ( ) ) ; } if ( ( IDENT_9 . METHOD_15 ( ) ) != null ) { IDENT_16 . METHOD_14 ( STRING_3 0 , IDENT_9 . METHOD_15 ( ) ) ; } if ( ( IDENT_9 . METHOD_16 ( ) ) != null ) { IDENT_16 . METHOD_14 ( STRING_8 , IDENT_9 . METHOD_16 ( ) ) ; } if ( ( IDENT_9 . METHOD_17 ( ) ) != null ) { IDENT_16 . METHOD_14 ( STRING_3 1 , IDENT_9 . METHOD_17 ( ) ) ; } if ( ( IDENT_9 . METHOD_18 ( ) ) != null ) { IDENT_16 . METHOD_14 ( STRING_3 5 , IDENT_9 . METHOD_18 ( ) ) ; } if ( ( IDENT_9 . METHOD_19 ( ) ) != null ) { IDENT_16 . METHOD_14 ( STRING_9 , IDENT_9 . METHOD_19 ( ) ) ; } if ( ( IDENT_9 . METHOD_20 ( ) ) != null ) { IDENT_16 . METHOD_14 ( STRING_3 2 , IDENT_9 . METHOD_20 ( ) ) ; } builder . METHOD_21 ( IDENT_16 ) ; return METHOD_22 ( builder . build ( ) , com . ibm . cloud . sdk . core . util . IDENT_18 . METHOD_23 ( com . ibm . IDENT_0 . IDENT_1 . v1 . model . IDENT_7 . class ) ) ; }
org . junit . Assert . assertNotNull ( results ) 