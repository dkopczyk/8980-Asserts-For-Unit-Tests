METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . String > IDENT_0 = new java . util . METHOD_1 ( ) ; IDENT_0 . put ( STRING_0 , STRING_1 5 ) ; IDENT_0 . put ( STRING_2 , STRING_1 2 ) ; IDENT_0 . put ( STRING_1 6 , STRING_1 ) ; IDENT_0 . put ( STRING_3 , STRING_2 0 ) ; IDENT_0 . put ( STRING_1 9 , STRING_1 1 ) ; IDENT_0 . put ( STRING_1 3 , STRING_4 ) ; IDENT_0 . put ( STRING_1 0 , STRING_1 8 ) ; IDENT_0 . put ( STRING_1 7 , STRING_5 ) ; IDENT_0 . put ( STRING_6 , STRING_7 ) ; IDENT_0 . put ( STRING_8 , STRING_1 4 ) ; for ( java . util . Map . Entry < java . lang . String , java . lang . String > IDENT_1 : IDENT_0 . entrySet ( ) ) { "<AssertPlaceHolder>" ; } long start = java . lang . System . currentTimeMillis ( ) ; for ( int n = 0 ; n < INT_0 ; n ++ ) { for ( java . util . Map . Entry < java . lang . String , java . lang . String > IDENT_1 : IDENT_0 . entrySet ( ) ) { de . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_2 ( IDENT_1 . getKey ( ) ) ; } } System . out . METHOD_3 ( STRING_9 , ( ( java . lang . System . currentTimeMillis ( ) ) - start ) ) ; } getValue ( ) { return IDENT_8 ; }
org . junit . Assert . assertEquals ( IDENT_1 . getValue ( ) , de . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_2 ( IDENT_1 . getKey ( ) ) ) 