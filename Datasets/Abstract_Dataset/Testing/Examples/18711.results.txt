METHOD_0 ( ) { java . util . List < org . apache . jackrabbit . oak . IDENT_0 . IDENT_1 > IDENT_2 ; try ( org . apache . jackrabbit . oak . IDENT_0 . file . IDENT_3 store = METHOD_1 ( ) ) { } try ( org . apache . jackrabbit . oak . IDENT_0 . file . IDENT_4 store = METHOD_2 ( ) ) { IDENT_2 = newArrayList ( store . METHOD_3 ( ) ) ; } try ( org . apache . jackrabbit . oak . IDENT_0 . file . IDENT_3 store = METHOD_1 ( ) ) { org . apache . jackrabbit . oak . IDENT_0 . IDENT_5 . METHOD_4 ( STRING_0 ) . build ( store ) . METHOD_5 ( ) ; } java . util . List < org . apache . jackrabbit . oak . IDENT_0 . IDENT_1 > IDENT_6 ; try ( org . apache . jackrabbit . oak . IDENT_0 . file . IDENT_4 store = METHOD_2 ( ) ) { IDENT_6 = newArrayList ( store . METHOD_3 ( ) ) ; } "<AssertPlaceHolder>" ; } METHOD_3 ( ) { java . util . List < org . apache . jackrabbit . oak . IDENT_0 . IDENT_1 > IDENT_7 = new java . util . ArrayList ( ) ; for ( java . util . UUID id : IDENT_8 . METHOD_3 ( ) ) { long IDENT_9 = id . METHOD_6 ( ) ; long IDENT_10 = id . METHOD_7 ( ) ; IDENT_7 . add ( IDENT_11 . METHOD_8 ( IDENT_9 , IDENT_10 ) ) ; } return IDENT_7 ; }
org . junit . Assert . assertEquals ( IDENT_2 , IDENT_6 ) 