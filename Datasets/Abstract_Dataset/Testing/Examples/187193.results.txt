METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . String > params = IDENT_0 . METHOD_1 ( STRING_0 , STRING_1 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String ) { boolean IDENT_1 = true ; java . util . Map < java . lang . String , java . lang . String > result = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; while ( IDENT_1 ) { int IDENT_2 = IDENT_3 . indexOf ( STRING_2 ) ; if ( IDENT_2 >= 0 ) { if ( IDENT_2 > 0 ) { if ( IDENT_4 . startsWith ( IDENT_3 . substring ( 0 , IDENT_2 ) ) ) { IDENT_4 = IDENT_4 . substring ( IDENT_2 ) ; IDENT_3 = IDENT_3 . substring ( ( IDENT_2 + 1 ) ) ; } else { return null ; } } else { IDENT_3 = IDENT_3 . substring ( 1 ) ; } IDENT_2 = IDENT_3 . indexOf ( STRING_3 ) ; int IDENT_5 = IDENT_3 . indexOf ( STRING_2 ) ; if ( ( IDENT_5 >= 0 ) && ( IDENT_2 > IDENT_5 ) ) { return null ; } if ( IDENT_2 >= 0 ) { java . lang . String parameter = IDENT_3 . substring ( 0 , IDENT_2 ) ; IDENT_3 = IDENT_3 . substring ( ( IDENT_2 + 1 ) ) ; if ( ( IDENT_3 . length ( ) ) > 0 ) { int IDENT_6 = IDENT_3 . indexOf ( STRING_2 ) ; if ( IDENT_6 >= 0 ) { java . lang . String IDENT_7 = IDENT_3 . substring ( 0 , IDENT_6 ) ; int IDENT_8 = - 1 ; if ( parameter . equals ( STRING_4 ) ) { IDENT_8 = IDENT_4 . METHOD_2 ( IDENT_7 ) ; } else { IDENT_8 = IDENT_4 . indexOf ( IDENT_7 ) ; } if ( IDENT_8 >= 0 ) { java . lang . String IDENT_9 = IDENT_4 . substring ( 0 , IDENT_8 ) ; result . put ( parameter , IDENT_9 ) ; IDENT_4 = IDENT_4 . substring ( IDENT_8 ) ; } else { return null ; } } else { if ( IDENT_4 . METHOD_3 ( IDENT_3 ) ) { IDENT_4 = IDENT_4 . substring ( 0 , ( ( IDENT_4 . length ( ) ) - ( IDENT_3 . length ( ) ) ) ) ; result . put ( parameter , IDENT_4 ) ; return result ; } else { return null ; } } } else { result . put ( parameter , IDENT_4 ) ; return result ; } } else { return null ; } } else { if ( IDENT_4 . equals ( IDENT_3 ) ) { return result ; } else { return null ; } } } return null ; }
org . junit . Assert . assertTrue ( ( params == null ) ) 