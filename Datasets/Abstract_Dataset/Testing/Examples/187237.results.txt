METHOD_0 ( ) { com . alibaba . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = factory . METHOD_0 ( java . lang . String . class , 2 ) ; com . alibaba . IDENT_0 . IDENT_1 . IDENT_2 IDENT_4 = factory . METHOD_0 ( factory . getType ( java . lang . String . class ) , 2 ) ; "<AssertPlaceHolder>" ; } getType ( java . lang . Class ) { if ( c . METHOD_1 ( ) ) { else if ( c == ( IDENT_5 . IDENT_6 ) ) { return com . alibaba . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . Type . IDENT_9 ; } else if ( c == ( Boolean . IDENT_6 ) ) { return com . alibaba . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . Type . IDENT_10 ; } else if ( c == ( IDENT_11 . IDENT_6 ) ) { return com . alibaba . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . Type . IDENT_12 ; } else if ( c == ( IDENT_13 . IDENT_6 ) ) { return com . alibaba . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . Type . IDENT_14 ; } else if ( c == ( IDENT_15 . IDENT_6 ) ) { return com . alibaba . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . Type . IDENT_16 ; } else if ( c == ( Double . IDENT_6 ) ) { return com . alibaba . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . Type . IDENT_17 ; } else if ( c == ( IDENT_18 . IDENT_6 ) ) { return com . alibaba . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . Type . IDENT_19 ; } else { return com . alibaba . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . Type . IDENT_20 ; } } else { return com . alibaba . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . Type . getType ( METHOD_2 ( c ) ) ; } }
org . junit . Assert . assertSame ( IDENT_3 , IDENT_4 ) 