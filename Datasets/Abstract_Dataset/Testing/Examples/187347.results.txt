METHOD_0 ( ) { random . init ( ) ; java . lang . String [ ] results = new java . lang . String [ ] { STRING_0 7 , STRING_1 6 , STRING_2 8 , STRING_3 0 , STRING_2 0 , STRING_4 2 , STRING_0 2 , STRING_5 9 , STRING_4 3 , STRING_6 1 , STRING_4 8 , STRING_2 3 , STRING_7 7 , STRING_5 0 , STRING_8 2 , STRING_8 6 , STRING_7 0 , STRING_1 4 , STRING_7 1 , STRING_4 4 , STRING_5 8 , STRING_3 1 , STRING_8 7 , STRING_1 1 , STRING_4 0 , STRING_2 6 , STRING_2 4 , STRING_4 1 , STRING_7 5 , STRING_0 6 , STRING_4 7 , STRING_0 3 , STRING_8 0 , STRING_7 4 , STRING_3 , STRING_6 2 , STRING_3 3 , STRING_4 6 , STRING_4 , STRING_7 8 , STRING_3 7 , STRING_3 9 , STRING_8 , STRING_8 3 , STRING_1 5 , STRING_2 5 , STRING_1 2 , STRING_6 3 , STRING_5 7 , STRING_8 9 , STRING_6 0 , STRING_0 8 , STRING_2 , STRING_7 6 , STRING_3 6 , STRING_5 1 , STRING_5 2 , STRING_6 , STRING_5 6 , STRING_8 8 , STRING_0 4 , STRING_1 8 , STRING_6 7 , STRING_7 3 , STRING_6 8 , STRING_7 , STRING_4 9 , STRING_8 5 , STRING_2 1 , STRING_2 9 , STRING_7 2 , STRING_8 1 , STRING_1 9 , STRING_5 , STRING_3 5 , STRING_8 4 , STRING_0 1 , STRING_2 7 , STRING_3 8 , STRING_6 9 , STRING_5 4 , STRING_7 9 , STRING_1 , STRING_5 3 , STRING_0 , STRING_3 4 , STRING_6 6 , STRING_5 5 , STRING_1 3 , STRING_1 7 , STRING_6 5 , STRING_2 2 , STRING_0 9 , STRING_3 2 , STRING_6 4 , STRING_0 5 , STRING_4 5 , STRING_0 0 , STRING_9 , STRING_1 0 } ; for ( int i = 0 ; i < ( results . length ) ; i ++ ) { "<AssertPlaceHolder>" ; } } METHOD_0 ( long ) { if ( IDENT_0 == 0 ) { return java . lang . String . valueOf ( IDENT_1 [ 0 ] ) ; } if ( IDENT_0 < 0 ) { IDENT_0 = - IDENT_0 ; } java . lang . StringBuilder IDENT_2 = new java . lang . StringBuilder ( ) ; while ( IDENT_0 != 0 ) { int IDENT_3 = ( ( int ) ( IDENT_0 OP_0 ( IDENT_4 ) ) ) ; IDENT_0 = IDENT_0 / ( IDENT_4 ) ; IDENT_2 . append ( IDENT_1 [ IDENT_3 ] ) ; } return IDENT_2 . METHOD_1 ( ) . toString ( ) ; }
org . junit . Assert . assertEquals ( results [ i ] , random . METHOD_0 ( i ) ) 