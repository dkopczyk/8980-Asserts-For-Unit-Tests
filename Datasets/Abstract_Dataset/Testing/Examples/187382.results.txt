METHOD_0 ( ) { final org . jboss . IDENT_0 . api . IDENT_1 < ? > IDENT_2 = create ( org . jboss . IDENT_0 . api . IDENT_3 . class ) . METHOD_1 ( org . jboss . IDENT_4 . IDENT_5 . IDENT_6 . test . builder . IDENT_7 . IDENT_8 . class ) ; final java . io . File IDENT_9 = java . io . File . METHOD_2 ( STRING_0 , STRING_1 ) ; IDENT_9 . METHOD_3 ( ) ; IDENT_2 . as ( org . jboss . IDENT_0 . api . IDENT_10 . IDENT_11 . class ) . METHOD_4 ( IDENT_9 , true ) ; java . lang . IDENT_12 IDENT_13 = new java . net . METHOD_5 ( new java . net . URL [ ] { IDENT_9 . METHOD_6 ( ) . METHOD_7 ( ) } ) { @ org . jboss . IDENT_4 . IDENT_5 . IDENT_6 . test . builder . IDENT_7 . Override public java . util . IDENT_14 < java . net . URL > METHOD_8 ( java . lang . String name ) throws java . io . IOException { if ( IDENT_15 . IDENT_16 . equals ( name ) ) { return METHOD_9 ( name ) ; } return super . METHOD_8 ( name ) ; } } ; try ( org . jboss . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_17 IDENT_4 = new org . jboss . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_10 ( ) . METHOD_11 ( IDENT_13 ) . METHOD_12 ( ) ) { java . util . concurrent . atomic . IDENT_18 payload = new java . util . concurrent . atomic . METHOD_13 ( ) ; IDENT_4 . event ( ) . METHOD_14 ( payload ) ; "<AssertPlaceHolder>" ; } } METHOD_15 ( ) { return 0 ; }
org . junit . Assert . assertEquals ( 10 , payload . METHOD_15 ( ) ) 