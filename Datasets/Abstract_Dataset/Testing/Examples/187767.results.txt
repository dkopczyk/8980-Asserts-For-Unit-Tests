METHOD_0 ( ) { de . IDENT_0 . IDENT_1 . IDENT_2 . rule . IDENT_3 matcher = new de . IDENT_0 . IDENT_1 . IDENT_2 . rule . METHOD_1 ( rule ) ; "<AssertPlaceHolder>" ; } match ( java . lang . String ) { if ( domain == null ) { return null ; } java . lang . String match = matcher . match ( domain ) ; if ( match == null ) { return null ; } if ( ! ( METHOD_2 ( ) ) ) { return match ; } else { java . lang . String [ ] IDENT_4 = de . IDENT_0 . IDENT_1 . IDENT_2 . util . IDENT_5 . METHOD_3 ( match ) ; java . lang . String [ ] IDENT_6 = java . util . Arrays . METHOD_4 ( IDENT_4 , 1 , IDENT_4 . length ) ; return de . IDENT_0 . IDENT_1 . IDENT_2 . util . IDENT_5 . METHOD_5 ( IDENT_6 ) ; } }
org . junit . Assert . assertEquals ( match , matcher . match ( domain ) ) 