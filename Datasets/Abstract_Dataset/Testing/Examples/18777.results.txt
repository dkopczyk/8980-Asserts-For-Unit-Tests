METHOD_0 ( ) { org . apache . jackrabbit . oak . query . ast . IDENT_0 IDENT_1 = mock ( org . apache . jackrabbit . oak . query . ast . IDENT_0 . class ) ; org . apache . jackrabbit . oak . plugins . index . solr . query . IDENT_2 IDENT_3 = new org . apache . jackrabbit . oak . plugins . index . solr . query . METHOD_1 ( null , null , null ) ; org . apache . jackrabbit . oak . query . index . IDENT_4 filter = new org . apache . jackrabbit . oak . query . index . METHOD_2 ( IDENT_1 , "" , new org . apache . jackrabbit . oak . query . METHOD_3 ( ) ) ; java . util . List < org . apache . jackrabbit . oak . spi . query . IDENT_5 . IDENT_6 > IDENT_7 = new java . util . IDENT_8 < org . apache . jackrabbit . oak . spi . query . IDENT_5 . IDENT_6 > ( ) ; java . util . List < org . apache . jackrabbit . oak . spi . query . IDENT_5 . IDENT_9 > IDENT_10 = IDENT_3 . METHOD_4 ( filter , IDENT_7 , IDENT_11 ) ; "<AssertPlaceHolder>" ; } size ( ) { return size ; }
org . junit . Assert . assertEquals ( 0 , IDENT_10 . size ( ) ) 