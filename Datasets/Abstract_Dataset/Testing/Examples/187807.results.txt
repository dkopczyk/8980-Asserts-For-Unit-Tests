METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 + ( this . METHOD_1 ( ) ) ; final java . lang . String IDENT_1 = STRING_1 + ( this . METHOD_1 ( ) ) ; final java . lang . String IDENT_2 = STRING_2 + ( this . METHOD_1 ( ) ) ; final java . lang . String IDENT_3 = STRING_3 3 ; final java . lang . String IDENT_4 = STRING_4 + ( this . METHOD_1 ( ) ) ; try { this . METHOD_2 ( IDENT_4 ) ; try { this . METHOD_3 ( IDENT_0 , STRING_5 , new com . amazonaws . services . IDENT_5 . model . METHOD_4 ( ) . METHOD_5 ( STRING_3 ) . METHOD_6 ( IDENT_3 ) ) ; try { this . METHOD_3 ( IDENT_1 , STRING_6 , new com . amazonaws . services . IDENT_5 . model . METHOD_4 ( ) . METHOD_5 ( STRING_7 ) . METHOD_6 ( IDENT_0 ) ) ; final java . lang . String url = this . METHOD_7 ( IDENT_1 , STRING_3 0 ) ; try { this . METHOD_3 ( IDENT_2 , STRING_8 , new com . amazonaws . services . IDENT_5 . model . METHOD_4 ( ) . METHOD_5 ( STRING_7 ) . METHOD_6 ( IDENT_0 ) , new com . amazonaws . services . IDENT_5 . model . METHOD_4 ( ) . METHOD_5 ( STRING_9 ) . METHOD_6 ( IDENT_1 ) , new com . amazonaws . services . IDENT_5 . model . METHOD_4 ( ) . METHOD_5 ( STRING_3 1 ) . METHOD_6 ( STRING_3 2 ) ) ; final java . util . concurrent . IDENT_6 < java . lang . String > IDENT_7 = ( ) -> { final org . apache . http . IDENT_8 response = de . IDENT_9 . IDENT_10 . IDENT_11 . url ( url ) . METHOD_8 ( INT_0 ) . get ( ) ; if ( ( de . IDENT_9 . IDENT_10 . IDENT_11 . getStatus ( response ) ) != 200 ) { throw new java . lang . RuntimeException ( ( STRING_3 5 + ( de . IDENT_9 . IDENT_10 . IDENT_11 . getStatus ( response ) ) ) ) ; } return de . IDENT_9 . IDENT_10 . IDENT_11 . METHOD_9 ( response ) ; } ; final java . lang . String response = this . METHOD_10 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; } finally { this . METHOD_11 ( IDENT_2 ) ; } } finally { this . METHOD_11 ( IDENT_1 ) ; } } finally { this . METHOD_11 ( IDENT_0 ) ; } } finally { this . METHOD_12 ( IDENT_4 ) ; } } METHOD_10 ( java . util . concurrent . IDENT_6 ) { final java . util . concurrent . IDENT_6 < T > IDENT_12 = ( ) -> { try { return IDENT_7 . call ( ) ; } catch ( final e ) { System . out . println ( ( STRING_10 + ( de . IDENT_13 . IDENT_14 . e . getMessage ( ) ) ) ) ; de . IDENT_13 . IDENT_14 . e . printStackTrace ( ) ; throw de . IDENT_13 . IDENT_14 . e ; } } ; final com . IDENT_15 . IDENT_16 . IDENT_17 config = new com . IDENT_15 . IDENT_16 . METHOD_13 ( ) . METHOD_14 ( ) . METHOD_15 ( INT_1 ) . METHOD_16 ( 10 , IDENT_18 . IDENT_19 ) . METHOD_17 ( ) . build ( ) ; final com . IDENT_15 . IDENT_16 . IDENT_20 < java . lang . Object > results = new com . IDENT_15 . IDENT_16 . METHOD_18 ( config ) . execute ( IDENT_12 ) ; return ( ( T ) ( results . METHOD_19 ( ) ) ) ; }
org . junit . Assert . assertTrue ( response . contains ( STRING_3 4 ) ) 