METHOD_0 ( ) { for ( java . lang . String host : IDENT_0 ) { boolean IDENT_1 = false ; try { IDENT_1 = METHOD_1 ( host ) ; } catch ( java . lang . Exception e ) { } if ( IDENT_1 ) { java . lang . String collection = STRING_0 + ( java . lang . System . METHOD_2 ( ) ) ; org . apache . jackrabbit . oak . plugins . index . solr . server . IDENT_2 IDENT_3 = new org . apache . jackrabbit . oak . plugins . index . solr . server . METHOD_3 ( new org . apache . jackrabbit . oak . plugins . index . solr . configuration . METHOD_4 ( host , collection , 2 , 2 , null , 10 , 10 , null ) ) ; org . apache . solr . client . IDENT_4 . IDENT_5 IDENT_6 = IDENT_3 . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; IDENT_6 . close ( ) ; break ; } } } METHOD_5 ( ) { if ( ( IDENT_6 ) == null ) { IDENT_6 = new org . apache . solr . client . IDENT_4 . impl . IDENT_7 . Builder ( ) . METHOD_6 ( ( ( ( ( org . apache . jackrabbit . oak . plugins . index . solr . configuration . IDENT_8 . IDENT_9 ) + STRING_1 ) + ( org . apache . jackrabbit . oak . plugins . index . solr . configuration . IDENT_8 . IDENT_10 ) ) + ( org . apache . jackrabbit . oak . plugins . index . solr . configuration . IDENT_8 . IDENT_11 ) ) ) . build ( ) ; } return IDENT_6 ; }
org . junit . Assert . assertNotNull ( IDENT_6 ) 