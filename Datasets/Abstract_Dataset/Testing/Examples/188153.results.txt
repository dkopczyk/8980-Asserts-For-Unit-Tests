METHOD_0 ( ) { final javax . security . IDENT_0 . IDENT_1 IDENT_2 = METHOD_1 ( org . wildfly . security . IDENT_0 . entity . IDENT_3 . class ) ; "<AssertPlaceHolder>" ; final javax . security . IDENT_0 . IDENT_4 IDENT_5 = METHOD_2 ( IDENT_6 . IDENT_7 . IDENT_8 , STRING_0 , METHOD_3 ( IDENT_9 , org . wildfly . security . IDENT_0 . entity . IDENT_10 . IDENT_11 ) , IDENT_12 ) ; final java . lang . String [ ] IDENT_13 = new java . lang . String [ ] { IDENT_6 . IDENT_7 . IDENT_8 } ; javax . security . auth . IDENT_14 . IDENT_15 IDENT_16 = METHOD_4 ( IDENT_13 , IDENT_17 , org . wildfly . security . IDENT_0 . entity . IDENT_10 . IDENT_18 , org . wildfly . security . IDENT_0 . entity . IDENT_10 . IDENT_11 , null ) ; final javax . security . IDENT_0 . IDENT_19 IDENT_20 = IDENT_2 . METHOD_5 ( IDENT_13 , null , "test" , STRING_0 , java . util . Collections . < java . lang . String , java . lang . Object > METHOD_6 ( ) , IDENT_16 ) ; byte [ ] message = IDENT_5 . METHOD_7 ( new byte [ 0 ] ) ; message = IDENT_20 . METHOD_8 ( message ) ; message = IDENT_5 . METHOD_7 ( message ) ; try { IDENT_20 . METHOD_8 ( message ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( javax . security . IDENT_0 . IDENT_21 expected ) { } } METHOD_1 ( java . lang . Class ) { java . util . IDENT_22 < javax . security . IDENT_0 . IDENT_1 > IDENT_23 = javax . security . IDENT_0 . IDENT_24 . METHOD_9 ( ) ; while ( IDENT_23 . METHOD_10 ( ) ) { javax . security . IDENT_0 . IDENT_1 IDENT_25 = IDENT_23 . METHOD_11 ( ) ; if ( IDENT_25 . getClass ( ) . equals ( IDENT_26 ) ) { return IDENT_26 . METHOD_12 ( IDENT_25 ) ; } } return null ; }
org . junit . Assert . assertNotNull ( IDENT_2 ) 