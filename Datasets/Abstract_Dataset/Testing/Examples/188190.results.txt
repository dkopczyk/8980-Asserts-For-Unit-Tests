METHOD_0 ( ) { java . io . File IDENT_0 = IDENT_1 . INSTANCE . METHOD_1 ( STRING_0 , null ) ; java . nio . file . Path IDENT_2 = IDENT_0 . METHOD_2 ( ) ; java . lang . String group = STRING_1 ; java . lang . String IDENT_3 = STRING_2 ; java . lang . String IDENT_4 = "test" ; java . lang . String version = STRING_3 ; java . lang . String IDENT_5 = STRING_4 ; org . jboss . IDENT_6 . maven . IDENT_7 IDENT_8 = new org . jboss . IDENT_6 . maven . METHOD_3 ( group , IDENT_4 , version , IDENT_5 ) ; java . nio . file . Path IDENT_9 = java . nio . file . IDENT_10 . METHOD_4 ( IDENT_2 . resolve ( group ) . resolve ( IDENT_4 ) . resolve ( version ) . resolve ( STRING_5 ) ) ; java . io . File IDENT_11 = java . nio . file . IDENT_10 . METHOD_5 ( IDENT_9 . resolve ( ( ( ( ( ( IDENT_4 + STRING_6 ) + version ) + STRING_6 ) + IDENT_5 ) + STRING_7 ) ) ) . METHOD_6 ( ) ; org . wildfly . IDENT_12 . IDENT_13 . IDENT_6 . IDENT_14 resolver = new org . wildfly . IDENT_12 . IDENT_13 . IDENT_6 . METHOD_7 ( IDENT_2 . toString ( ) ) ; java . io . File IDENT_15 = resolver . METHOD_8 ( IDENT_8 , IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( org . jboss . IDENT_6 . maven . METHOD_3 , java . lang . String ) { java . lang . String IDENT_16 = IDENT_17 . METHOD_9 ( File . IDENT_18 ) ; java . lang . String IDENT_19 = IDENT_17 . METHOD_9 ( STRING_8 ) ; java . lang . String IDENT_20 = IDENT_17 . METHOD_10 ( STRING_8 ) ; final org . jboss . IDENT_6 . maven . IDENT_21 IDENT_22 = org . jboss . IDENT_6 . maven . IDENT_21 . METHOD_11 ( ) ; final java . nio . file . Path IDENT_23 = IDENT_22 . METHOD_12 ( ) ; final java . io . File IDENT_24 = IDENT_23 . METHOD_6 ( ) ; final java . lang . String IDENT_25 = IDENT_16 + STRING_7 ; MOD_0 ( org . jboss . IDENT_6 . maven . IDENT_26 . IDENT_27 ) { if ( STRING_9 . equals ( IDENT_3 ) ) { java . nio . file . Path IDENT_28 = IDENT_23 . resolve ( IDENT_25 ) ; if ( java . nio . file . IDENT_10 . exists ( IDENT_28 ) ) { return IDENT_28 . METHOD_6 ( ) ; } java . util . List < java . lang . String > IDENT_29 = IDENT_22 . METHOD_13 ( ) ; if ( IDENT_29 . isEmpty ( ) ) { return null ; } final java . io . File IDENT_30 = new java . io . File ( IDENT_24 , IDENT_25 ) ; for ( java . lang . String IDENT_31 : IDENT_29 ) { try { java . lang . String IDENT_32 = ( IDENT_31 + IDENT_19 ) + STRING_7 ; org . jboss . IDENT_6 . maven . IDENT_26 . METHOD_14 ( ( ( IDENT_17 + STRING_10 ) + IDENT_3 ) , IDENT_32 , IDENT_30 ) ; if ( IDENT_30 . exists ( ) ) { return IDENT_30 ; } } catch ( java . io . IOException e ) { org . jboss . IDENT_6 . IDENT_33 . METHOD_15 ( ) . trace ( e , STRING_11 , IDENT_16 , IDENT_31 ) ; } } if ( IDENT_17 . METHOD_16 ( ) ) { java . lang . String IDENT_34 ; for ( java . lang . String IDENT_31 : IDENT_29 ) { try { java . lang . String IDENT_35 = IDENT_31 + IDENT_20 ; IDENT_34 = IDENT_17 . METHOD_9 ( STRING_8 , org . jboss . IDENT_6 . maven . IDENT_26 . METHOD_17 ( ( ( IDENT_17 + STRING_10 ) + IDENT_3 ) , IDENT_35 ) ) ; java . lang . String IDENT_32 = ( IDENT_31 + IDENT_34 ) + STRING_7 ; org . jboss . IDENT_6 . maven . IDENT_26 . METHOD_14 ( ( ( IDENT_17 + STRING_10 ) + IDENT_3 ) , IDENT_32 , IDENT_30 ) ; if ( IDENT_30 . exists ( ) ) { return IDENT_30 ; } } catch ( java . io . IOException | javax . xml . IDENT_36 . IDENT_37 e ) { org . jboss . IDENT_6 . IDENT_33 . METHOD_15 ( ) . trace ( e , STRING_11 , IDENT_16 , IDENT_31 ) ; } } } } else { final java . lang . String IDENT_38 = IDENT_17 . METHOD_18 ( ) ; java . lang . String IDENT_5 = ( IDENT_38 . isEmpty ( ) ) ? "" : STRING_6 + IDENT_38 ; java . lang . String IDENT_39 = ( ( IDENT_16 + IDENT_5 ) + STRING_12 ) + IDENT_3 ; java . nio . file . Path IDENT_28 = IDENT_23 . resolve ( IDENT_39 ) ; if ( java . nio . file . IDENT_10 . exists ( IDENT_28 ) ) { return IDENT_28 . METHOD_6 ( ) ; } java . util . List < java . lang . String > IDENT_29 = IDENT_22 . METHOD_13 ( ) ; if ( IDENT_29 . isEmpty ( ) ) { return null ; } final java . io . File IDENT_11 = new java . io . File ( IDENT_24 , IDENT_39 ) ; final java . io . File IDENT_30 = new java . io . File ( IDENT_24 , IDENT_25 ) ; for ( java . lang . String IDENT_31 : IDENT_29 ) { try { java . lang . String IDENT_32 = ( IDENT_31 + IDENT_19 ) + STRING_7 ; java . lang . String IDENT_40 = ( ( ( IDENT_31 + IDENT_19 ) + IDENT_5 ) + STRING_12 ) + IDENT_3 ; org . jboss . IDENT_6 . maven . IDENT_26 . METHOD_14 ( ( IDENT_17 + STRING_13 ) , IDENT_32 , IDENT_30 ) ; if ( ! ( IDENT_30 . exists ( ) ) ) { continue ; } org . jboss . IDENT_6 . maven . IDENT_26 . METHOD_14 ( ( ( IDENT_17 + STRING_10 ) + IDENT_3 ) , IDENT_40 , IDENT_11 ) ; if ( IDENT_11 . exists ( ) ) { return IDENT_11 ; } } catch ( java . io . IOException e ) { org . jboss . IDENT_6 . IDENT_33 . METHOD_15 ( ) . trace ( e , STRING_11 , IDENT_16 , IDENT_31 ) ; } } if ( IDENT_17 . METHOD_16 ( ) ) { java . lang . String IDENT_34 ; for ( java . lang . String IDENT_31 : IDENT_29 ) { try { java . lang . String IDENT_35 = IDENT_31 + IDENT_20 ; IDENT_34 = IDENT_17 . METHOD_9 ( STRING_8 , org . jboss . IDENT_6 . maven . IDENT_26 . METHOD_17 ( ( ( IDENT_17 + STRING_10 ) + IDENT_3 ) , IDENT_35 ) ) ; java . lang . String IDENT_32 = ( IDENT_31 + IDENT_34 ) + STRING_7 ; java . lang . String IDENT_40 = ( ( ( IDENT_31 + IDENT_34 ) + IDENT_5 ) + STRING_12 ) + IDENT_3 ; org . jboss . IDENT_6 . maven . IDENT_26 . METHOD_14 ( ( IDENT_17 + STRING_13 ) , IDENT_32 , IDENT_30 ) ; if ( ! ( IDENT_30 . exists ( ) ) ) { continue ; } org . jboss . IDENT_6 . maven . IDENT_26 . METHOD_14 ( ( ( IDENT_17 + STRING_10 ) + IDENT_3 ) , IDENT_40 , IDENT_11 ) ; if ( IDENT_11 . exists ( ) ) { return IDENT_11 ; } } catch ( java . io . IOException | javax . xml . IDENT_36 . IDENT_37 e ) { org . jboss . IDENT_6 . IDENT_33 . METHOD_15 ( ) . trace ( e , STRING_11 , IDENT_16 , IDENT_31 ) ; } } } } org . jboss . IDENT_6 . IDENT_33 . METHOD_15 ( ) . trace ( STRING_14 ) ; return null ; } }
org . junit . Assert . assertNull ( IDENT_15 ) 