METHOD_0 ( ) { java . lang . System . setProperty ( STRING_0 , STRING_1 ) ; try { org . jboss . IDENT_0 . IDENT_1 node = new org . jboss . as . controller . METHOD_1 ( ) { @ org . jboss . as . controller . Override MOD_0 void METHOD_2 ( org . jboss . IDENT_0 . IDENT_1 node ) { java . lang . String s = node . METHOD_3 ( ) ; if ( s . equals ( STRING_2 ) ) { node . set ( STRING_3 ) ; } } } . METHOD_4 ( new org . jboss . IDENT_0 . METHOD_5 ( new org . jboss . IDENT_0 . METHOD_6 ( STRING_4 ) ) ) ; "<AssertPlaceHolder>" ; } finally { java . lang . System . METHOD_7 ( STRING_0 ) ; } } METHOD_3 ( ) { java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; if ( ( ( ( org . apache . commons . lang3 . StringUtils . METHOD_8 ( IDENT_2 ) ) || ( org . apache . commons . lang3 . StringUtils . METHOD_8 ( IDENT_3 ) ) ) || ( org . apache . commons . lang3 . StringUtils . METHOD_8 ( store ) ) ) || ( org . apache . commons . lang3 . StringUtils . METHOD_8 ( type ) ) ) { sb . append ( STRING_5 ) ; if ( org . apache . commons . lang3 . StringUtils . METHOD_8 ( IDENT_2 ) ) { sb . append ( java . lang . String . format ( STRING_6 , IDENT_2 ) ) ; } if ( org . apache . commons . lang3 . StringUtils . METHOD_8 ( store ) ) { sb . append ( java . lang . String . format ( STRING_7 , store ) ) ; } if ( org . apache . commons . lang3 . StringUtils . METHOD_8 ( type ) ) { sb . append ( java . lang . String . format ( STRING_8 , type ) ) ; } if ( org . apache . commons . lang3 . StringUtils . METHOD_8 ( IDENT_3 ) ) { sb . append ( java . lang . String . format ( STRING_9 , IDENT_3 ) ) ; } sb . append ( STRING_10 ) ; } return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( STRING_3 , node . METHOD_3 ( ) ) 