METHOD_0 ( ) { org . apache . jackrabbit . oak . plugins . document . IDENT_0 IDENT_1 = IDENT_2 . METHOD_1 ( ) ; org . apache . jackrabbit . oak . spi . state . IDENT_3 builder = IDENT_1 . METHOD_2 ( ) . builder ( ) ; builder . child ( "test" ) ; IDENT_1 . METHOD_3 ( builder , IDENT_4 . INSTANCE , IDENT_5 . IDENT_6 ) ; java . lang . String METHOD_0 = com . google . common . base . IDENT_7 . METHOD_4 ( STRING_0 , INT_0 ) ; java . lang . String IDENT_8 = java . lang . String . format ( STRING_1 , METHOD_0 ) ; builder = IDENT_1 . METHOD_2 ( ) . builder ( ) ; builder . child ( "test" ) . child ( METHOD_0 ) ; try { IDENT_1 . METHOD_3 ( builder , IDENT_4 . INSTANCE , IDENT_5 . IDENT_6 ) ; } catch ( org . apache . jackrabbit . oak . api . IDENT_9 e ) { return ; } java . lang . String id = org . apache . jackrabbit . oak . plugins . document . util . Utils . METHOD_5 ( IDENT_8 ) ; org . apache . jackrabbit . oak . plugins . document . IDENT_10 doc = IDENT_1 . METHOD_6 ( ) . find ( Collection . IDENT_11 , id , 0 ) ; "<AssertPlaceHolder>" ; } find ( org . apache . jackrabbit . oak . plugins . document . Collection , java . lang . String , int ) { ( METHOD_7 ( collection ) . IDENT_12 ) ++ ; if ( IDENT_13 ) { new java . lang . Exception ( ( ( ( ( ( ( ( ( STRING_2 + ( METHOD_7 ( collection ) . IDENT_12 ) ) + STRING_3 ) + collection ) + STRING_4 ) + key ) + STRING_5 ) + IDENT_14 ) + "]" ) ) . printStackTrace ( ) ; } return delegate . find ( collection , key , IDENT_14 ) ; }
org . junit . Assert . assertNotNull ( doc ) 