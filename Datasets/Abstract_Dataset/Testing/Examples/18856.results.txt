METHOD_0 ( ) { org . apache . jackrabbit . oak . plugins . document . IDENT_0 IDENT_1 = METHOD_1 ( 200 ) ; org . apache . jackrabbit . oak . plugins . document . IDENT_2 IDENT_3 = IDENT_1 . METHOD_2 ( ) ; org . apache . jackrabbit . oak . plugins . document . IDENT_4 root = METHOD_3 ( IDENT_1 . METHOD_4 ( ) ) ; java . util . Iterator < org . apache . jackrabbit . oak . plugins . document . IDENT_4 > it = root . METHOD_0 ( ) ; while ( it . hasNext ( ) ) { org . apache . jackrabbit . oak . plugins . document . IDENT_4 IDENT_5 = it . next ( ) ; org . apache . jackrabbit . oak . plugins . document . IDENT_2 r = IDENT_5 . METHOD_5 ( ) . iterator ( ) . next ( ) ; "<AssertPlaceHolder>" ; IDENT_3 = r ; } IDENT_1 . METHOD_6 ( ) ; } METHOD_7 ( org . apache . jackrabbit . oak . plugins . document . IDENT_2 ) { if ( ( IDENT_6 ) != ( other . IDENT_6 ) ) { throw new java . lang . IllegalArgumentException ( ( ( ( STRING_0 + ( this ) ) + STRING_1 ) + other ) ) ; } int IDENT_7 = ( ( IDENT_8 ) < ( other . IDENT_8 ) ) ? - 1 : ( IDENT_8 ) > ( other . IDENT_8 ) ? 1 : 0 ; if ( IDENT_7 == 0 ) { IDENT_7 = ( ( IDENT_9 ) < ( other . IDENT_9 ) ) ? - 1 : ( IDENT_9 ) > ( other . IDENT_9 ) ? 1 : 0 ; } return IDENT_7 ; }
org . junit . Assert . assertTrue ( ( ( IDENT_3 . METHOD_7 ( r ) ) > 0 ) ) 