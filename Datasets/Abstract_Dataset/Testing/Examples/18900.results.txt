METHOD_0 ( ) { int IDENT_0 = 5 ; int IDENT_1 = 100 ; final org . apache . jackrabbit . oak . plugins . document . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = new org . apache . jackrabbit . oak . plugins . document . IDENT_2 . IDENT_3 . METHOD_1 ( ) ; java . lang . Thread IDENT_6 = new java . lang . Thread ( IDENT_5 ) ; IDENT_6 . start ( ) ; java . util . List < org . apache . jackrabbit . oak . plugins . document . IDENT_2 . IDENT_3 . IDENT_7 . IDENT_8 > IDENT_9 = new java . util . ArrayList < org . apache . jackrabbit . oak . plugins . document . IDENT_2 . IDENT_3 . IDENT_7 . IDENT_8 > ( ) ; java . util . List < java . lang . Thread > IDENT_10 = new java . util . ArrayList < java . lang . Thread > ( ) ; for ( int i = 0 ; i < IDENT_0 ; i ++ ) { final java . util . List < org . apache . jackrabbit . oak . plugins . document . IDENT_2 . IDENT_3 . IDENT_7 . IDENT_8 > IDENT_11 = new java . util . ArrayList < org . apache . jackrabbit . oak . plugins . document . IDENT_2 . IDENT_3 . IDENT_7 . IDENT_8 > ( ) ; for ( int j = 0 ; j < IDENT_1 ; j ++ ) { org . apache . jackrabbit . oak . plugins . document . IDENT_2 . IDENT_3 . IDENT_7 . IDENT_8 action = new org . apache . jackrabbit . oak . plugins . document . IDENT_2 . IDENT_3 . IDENT_7 . METHOD_2 ( java . lang . String . format ( STRING_0 , i , j ) ) ; IDENT_11 . add ( action ) ; IDENT_9 . add ( action ) ; } java . lang . Thread t = new java . lang . Thread ( new java . lang . METHOD_3 ( ) { @ org . apache . jackrabbit . oak . plugins . document . IDENT_2 . IDENT_3 . Override public void run ( ) { for ( org . apache . jackrabbit . oak . plugins . document . IDENT_2 . IDENT_3 . IDENT_7 . METHOD_2 a : IDENT_11 ) { IDENT_5 . add ( a ) ; } } } ) ; IDENT_10 . add ( t ) ; } for ( java . lang . Thread t : IDENT_10 ) { t . start ( ) ; } for ( java . lang . Thread t : IDENT_10 ) { t . join ( ) ; } long start = java . lang . System . currentTimeMillis ( ) ; while ( ! ( IDENT_9 . isEmpty ( ) ) ) { java . util . Iterator < org . apache . jackrabbit . oak . plugins . document . IDENT_2 . IDENT_3 . IDENT_7 . METHOD_2 > it = IDENT_9 . iterator ( ) ; while ( it . hasNext ( ) ) { if ( it . next ( ) . IDENT_12 ) { it . remove ( ) ; } } if ( ( ( java . lang . System . currentTimeMillis ( ) ) - start ) > INT_0 ) { org . junit . Assert . fail ( ( STRING_1 + IDENT_9 ) ) ; } } IDENT_5 . METHOD_4 ( ) ; IDENT_6 . join ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { return METHOD_5 ; }
org . junit . Assert . assertFalse ( IDENT_6 . METHOD_5 ( ) ) 