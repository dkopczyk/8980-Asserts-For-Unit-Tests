METHOD_0 ( ) { java . lang . StringBuilder sb = new java . lang . StringBuilder ( INT_0 ) ; for ( int i = 0 ; i < INT_1 ; i ++ ) { sb . append ( STRING_0 ) ; } java . lang . String input = sb . toString ( ) ; java . lang . String output = METHOD_1 ( input ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { java . io . ByteArrayOutputStream IDENT_0 = new java . io . ByteArrayOutputStream ( ) ; org . apache . IDENT_1 . IDENT_2 . codec . IDENT_3 IDENT_4 = new org . apache . IDENT_1 . IDENT_2 . codec . METHOD_2 ( IDENT_0 , INT_2 ) ; org . apache . IDENT_1 . IDENT_2 . util . IDENT_5 . METHOD_3 ( org . apache . IDENT_1 . IDENT_2 . io . IDENT_6 . create ( input , IDENT_7 . IDENT_8 ) , IDENT_4 ) ; IDENT_4 . METHOD_4 ( ) ; IDENT_4 . close ( ) ; java . io . InputStream is = new org . apache . IDENT_1 . IDENT_2 . codec . METHOD_5 ( org . apache . IDENT_1 . IDENT_2 . io . IDENT_6 . create ( IDENT_0 . toByteArray ( ) ) ) ; byte [ ] buf = org . apache . IDENT_1 . IDENT_2 . util . IDENT_5 . buffer ( is ) ; return org . apache . IDENT_1 . IDENT_2 . util . IDENT_5 . METHOD_6 ( buf ) ; }
org . junit . Assert . assertEquals ( input , output ) 