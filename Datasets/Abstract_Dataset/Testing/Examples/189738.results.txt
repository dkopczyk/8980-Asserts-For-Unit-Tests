METHOD_0 ( ) { value = new org . IDENT_0 . IDENT_1 . IDENT_2 . model . METHOD_1 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { org . IDENT_0 . IDENT_1 . IDENT_3 . core . model . IDENT_4 IDENT_5 = IDENT_6 . METHOD_3 ( ) ; if ( ( IDENT_7 ) != null ) { IDENT_5 . METHOD_4 ( STRING_1 , IDENT_7 . getName ( ) , true ) ; } else { IDENT_5 . remove ( STRING_1 ) ; } IDENT_5 . METHOD_4 ( STRING_2 , METHOD_5 ( ) , true ) ; IDENT_5 . remove ( STRING_3 ) ; IDENT_5 . METHOD_6 ( STRING_4 1 , IDENT_8 , IDENT_4 . IDENT_9 ) ; IDENT_5 . METHOD_6 ( STRING_4 , IDENT_10 , IDENT_4 . IDENT_11 ) ; if ( ( ! ( METHOD_7 ( ) ) ) && ( ( IDENT_12 ) != null ) ) { IDENT_5 . METHOD_4 ( STRING_5 , IDENT_12 . METHOD_8 ( ) , true ) ; } else if ( ( METHOD_7 ( ) ) && ( ( IDENT_6 . get ( STRING_5 ) ) != null ) ) { IDENT_5 . METHOD_4 ( STRING_5 , ( ( java . lang . String ) ( IDENT_6 . get ( STRING_5 ) ) ) , true ) ; } else { IDENT_5 . remove ( STRING_5 ) ; } IDENT_5 . METHOD_4 ( "name" , IDENT_13 , true ) ; if ( ( ( IDENT_14 ) != null ) && ( ( IDENT_14 ) != ( IDENT_15 . IDENT_16 ) ) ) { IDENT_5 . METHOD_4 ( STRING_4 0 , IDENT_14 . METHOD_8 ( ) , true ) ; } else { IDENT_5 . remove ( STRING_4 0 ) ; } IDENT_5 . METHOD_6 ( STRING_6 , IDENT_17 , IDENT_4 . IDENT_9 ) ; IDENT_5 . METHOD_6 ( STRING_7 , IDENT_18 , IDENT_4 . IDENT_9 ) ; IDENT_5 . METHOD_9 ( STRING_8 , IDENT_19 ) ; java . util . Set < java . util . Map > IDENT_20 = new org . IDENT_0 . IDENT_1 . IDENT_3 . core . model . IDENT_21 < java . util . Map > ( ) ; for ( org . IDENT_0 . IDENT_1 . IDENT_3 . core . model . IDENT_22 join : IDENT_23 ) { org . IDENT_0 . IDENT_1 . IDENT_3 . core . model . IDENT_4 IDENT_24 = join . METHOD_2 ( ) ; IDENT_20 . add ( IDENT_24 ) ; } IDENT_5 . METHOD_10 ( STRING_9 , IDENT_20 , true ) ; METHOD_11 ( IDENT_5 ) ; if ( METHOD_7 ( ) ) { if ( ! ( org . IDENT_0 . IDENT_1 . IDENT_25 . util . IDENT_26 . METHOD_12 ( IDENT_5 , IDENT_6 ) ) ) { IDENT_5 . remove ( STRING_5 ) ; } } return IDENT_5 ; }
org . junit . Assert . assertThat ( ( ( java . lang . String ) ( value . METHOD_2 ( ) ) ) , org . hamcrest . CoreMatchers . is ( STRING_0 ) ) 