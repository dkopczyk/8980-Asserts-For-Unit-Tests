METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . api . entity . IDENT_2 . IDENT_3 IDENT_4 = new org . IDENT_0 . IDENT_1 . api . entity . IDENT_2 . METHOD_1 ( ) ; IDENT_4 . METHOD_2 ( 1 ) ; IDENT_4 . METHOD_3 ( 1 ) ; IDENT_4 . METHOD_4 ( STRING_0 ) ; IDENT_4 . setName ( STRING_1 ) ; org . IDENT_0 . IDENT_1 . api . json . IDENT_5 < org . IDENT_0 . IDENT_1 . api . entity . IDENT_2 . METHOD_1 > serializer = org . IDENT_0 . IDENT_1 . api . json . IDENT_6 . getInstance ( org . IDENT_0 . IDENT_1 . api . entity . IDENT_2 . METHOD_1 . class ) ; java . lang . String json = serializer . serialize ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } serialize ( T ) { java . lang . String json = gson . METHOD_5 ( object ) ; if ( ( object . getClass ( ) ) == ( org . IDENT_0 . IDENT_1 . api . entity . IDENT_2 . IDENT_7 . class ) ) { org . IDENT_0 . IDENT_1 . api . entity . IDENT_2 . IDENT_7 n = ( ( org . IDENT_0 . IDENT_1 . api . entity . IDENT_2 . IDENT_7 ) ( object ) ) ; org . IDENT_0 . IDENT_1 . api . json . Map < java . lang . String , org . IDENT_0 . IDENT_1 . api . entity . IDENT_2 . IDENT_8 > IDENT_9 = n . METHOD_6 ( ) ; if ( ( IDENT_9 != null ) && ( ( IDENT_9 . size ( ) ) > 0 ) ) { org . json . JSONObject IDENT_10 = new org . json . JSONObject ( json ) ; for ( Map . Entry < java . lang . String , org . IDENT_0 . IDENT_1 . api . entity . IDENT_2 . IDENT_8 > IDENT_11 : IDENT_9 . entrySet ( ) ) { java . lang . String name = IDENT_11 . getKey ( ) ; org . json . JSONObject IDENT_12 = new org . json . JSONObject ( ) ; org . IDENT_0 . IDENT_1 . api . json . ArrayList < org . IDENT_0 . IDENT_1 . api . json . HashMap < java . lang . String , java . lang . String > > values = IDENT_11 . getValue ( ) . METHOD_7 ( ) ; for ( int i = 0 ; i < ( values . size ( ) ) ; i ++ ) { org . json . JSONObject IDENT_13 = new org . json . JSONObject ( ) ; org . IDENT_0 . IDENT_1 . api . json . HashMap < java . lang . String , java . lang . String > value = values . get ( i ) ; for ( Map . Entry < java . lang . String , java . lang . String > entry : value . entrySet ( ) ) { if ( entry . getValue ( ) . startsWith ( STRING_2 ) ) { IDENT_13 . put ( entry . getKey ( ) , new org . json . JSONObject ( entry . getValue ( ) ) ) ; } else { IDENT_13 . put ( entry . getKey ( ) , entry . getValue ( ) ) ; } } IDENT_12 . put ( java . lang . String . valueOf ( i ) , IDENT_13 ) ; } IDENT_10 . put ( name , IDENT_12 ) ; } json = IDENT_10 . toString ( ) ; } } return json ; }
org . junit . Assert . assertNotNull ( json ) 