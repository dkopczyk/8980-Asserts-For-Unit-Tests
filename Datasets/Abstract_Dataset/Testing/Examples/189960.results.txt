METHOD_0 ( ) { IDENT_0 = IDENT_1 . IDENT_2 . IDENT_3 . util . provider . IDENT_4 . of ( IDENT_1 . IDENT_2 . IDENT_3 . model . resource . processor . support . IDENT_5 . class ) ; "<AssertPlaceHolder>" ; } find ( ) { final java . util . List < T > IDENT_6 = new java . util . ArrayList < T > ( ) ; try { final java . util . Iterator < T > iterator = METHOD_1 ( type ) ; for ( ; iterator . hasNext ( ) ; ) { final T provider = iterator . next ( ) ; IDENT_1 . IDENT_2 . IDENT_3 . util . provider . IDENT_4 . LOG . debug ( STRING_0 , provider ) ; IDENT_6 . add ( provider ) ; } METHOD_2 ( IDENT_6 ) ; } catch ( final java . lang . Exception e ) { IDENT_1 . IDENT_2 . IDENT_3 . util . provider . IDENT_4 . LOG . error ( STRING_1 , e ) ; throw IDENT_1 . IDENT_2 . IDENT_3 . IDENT_7 . METHOD_3 ( e ) ; } java . util . Collections . METHOD_4 ( IDENT_6 , IDENT_8 . IDENT_9 ) ; IDENT_1 . IDENT_2 . IDENT_3 . util . provider . IDENT_4 . LOG . debug ( STRING_2 , IDENT_6 ) ; return IDENT_6 ; }
org . junit . Assert . assertEquals ( 3 , IDENT_0 . find ( ) . size ( ) ) 