METHOD_0 ( ) { java . lang . String str = STRING_0 0 ; org . apache . jena . query . IDENT_0 IDENT_1 = new org . apache . jena . query . METHOD_1 ( str ) ; java . util . List < java . util . List < ? extends org . apache . jena . query . IDENT_2 > > IDENT_3 = new java . util . ArrayList ( ) ; java . util . List < org . apache . jena . query . IDENT_2 > IDENT_4 = new java . util . ArrayList ( ) ; IDENT_4 . add ( org . apache . jena . query . IDENT_5 . METHOD_2 ( STRING_1 ) ) ; IDENT_4 . add ( org . apache . jena . query . IDENT_5 . METHOD_3 ( STRING_2 ) ) ; IDENT_3 . add ( IDENT_4 ) ; java . util . List < org . apache . jena . query . IDENT_2 > IDENT_6 = new java . util . ArrayList ( ) ; IDENT_6 . add ( org . apache . jena . query . IDENT_5 . METHOD_2 ( STRING_3 ) ) ; IDENT_6 . add ( org . apache . jena . query . IDENT_5 . METHOD_3 ( STRING_4 ) ) ; IDENT_3 . add ( IDENT_6 ) ; IDENT_1 . METHOD_4 ( STRING_5 , IDENT_3 ) ; java . lang . String exp = STRING_6 ; java . lang . String res = IDENT_1 . toString ( ) ; "<AssertPlaceHolder>" ; } toString ( ) { return ( ( ( ( ( ( ( ( ( ( ( STRING_7 + STRING_8 ) + ( IDENT_7 ) ) + STRING_9 ) + ( IDENT_8 ) ) + STRING_10 ) + STRING_11 ) + ( IDENT_9 ) ) + STRING_12 ) + ( IDENT_10 ) ) + STRING_13 ) + ( IDENT_11 ) ) + STRING_14 ; }
org . junit . Assert . assertEquals ( exp , res ) 