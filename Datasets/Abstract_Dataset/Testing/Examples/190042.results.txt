METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . rest . api . store . impl . IDENT_3 . METHOD_1 ( ) ; java . lang . String IDENT_4 = java . util . UUID . METHOD_2 ( ) . toString ( ) ; java . lang . String IDENT_5 = STRING_0 ; org . IDENT_0 . IDENT_1 . IDENT_2 . rest . api . store . impl . IDENT_6 IDENT_7 = new org . IDENT_0 . IDENT_1 . IDENT_2 . rest . api . store . impl . METHOD_3 ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . core . api . IDENT_8 IDENT_9 = org . mockito . Mockito . mock ( org . IDENT_0 . IDENT_1 . IDENT_2 . core . impl . IDENT_10 . class ) ; org . IDENT_11 . api . mockito . IDENT_12 . METHOD_4 ( org . IDENT_0 . IDENT_1 . IDENT_2 . rest . api . common . util . IDENT_13 . class ) ; org . IDENT_11 . api . mockito . IDENT_12 . when ( org . IDENT_0 . IDENT_1 . IDENT_2 . rest . api . common . util . IDENT_13 . METHOD_5 ( org . IDENT_0 . IDENT_1 . IDENT_2 . rest . api . store . impl . IDENT_14 . IDENT_15 ) ) . thenReturn ( IDENT_9 ) ; org . IDENT_0 . IDENT_16 . IDENT_17 request = METHOD_6 ( ) ; org . IDENT_11 . api . mockito . IDENT_12 . when ( org . IDENT_0 . IDENT_1 . IDENT_2 . rest . api . common . util . IDENT_13 . METHOD_7 ( request ) ) . thenReturn ( org . IDENT_0 . IDENT_1 . IDENT_2 . rest . api . store . impl . IDENT_14 . IDENT_15 ) ; java . util . List < java . lang . String > IDENT_18 = new java . util . ArrayList ( ) ; IDENT_18 . add ( STRING_1 ) ; IDENT_18 . add ( STRING_2 ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . core . models . IDENT_19 IDENT_20 = new org . IDENT_0 . IDENT_1 . IDENT_2 . core . models . METHOD_8 ( ) ; IDENT_20 . METHOD_9 ( IDENT_5 ) ; IDENT_20 . METHOD_10 ( java . util . UUID . METHOD_2 ( ) . toString ( ) ) ; IDENT_20 . METHOD_11 ( java . util . UUID . METHOD_2 ( ) . toString ( ) ) ; IDENT_20 . METHOD_12 ( IDENT_18 ) ; IDENT_20 . METHOD_13 ( STRING_3 ) ; org . mockito . Mockito . when ( IDENT_9 . METHOD_14 ( IDENT_4 , IDENT_5 ) ) . thenReturn ( IDENT_20 ) ; javax . ws . rs . core . Response response = IDENT_7 . METHOD_15 ( IDENT_4 , IDENT_5 , request ) ; "<AssertPlaceHolder>" ; } getStatus ( ) { return status ; }
org . junit . Assert . assertEquals ( 200 , response . getStatus ( ) ) 