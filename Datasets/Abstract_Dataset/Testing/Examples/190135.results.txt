METHOD_0 ( ) { final com . github . IDENT_0 . engine . core . IDENT_1 IDENT_2 = new com . github . IDENT_0 . engine . core . METHOD_1 ( ) ; IDENT_2 . init ( false ) ; IDENT_2 . METHOD_2 ( new com . github . IDENT_0 . METHOD_3 ( STRING_0 ) ) ; final com . github . IDENT_0 . IDENT_3 . IDENT_4 IDENT_3 = new com . github . IDENT_0 . IDENT_3 . METHOD_4 ( STRING_1 . getBytes ( ) , STRING_2 , new com . github . IDENT_0 . METHOD_3 ( java . nio . IDENT_5 . IDENT_6 . METHOD_5 ( ) . METHOD_6 ( ) ) . METHOD_7 ( IDENT_7 . IDENT_8 ) , 1L , false ) ; final com . github . IDENT_0 . IDENT_3 . IDENT_9 IDENT_10 = org . mockito . Mockito . mock ( com . github . IDENT_0 . IDENT_3 . IDENT_9 . class ) ; org . mockito . Mockito . when ( IDENT_10 . METHOD_8 ( ) ) . thenReturn ( java . util . Arrays . asList ( IDENT_3 ) ) ; final com . github . IDENT_0 . engine . IDENT_11 request = new com . github . IDENT_0 . engine . METHOD_9 ( STRING_3 , IDENT_10 , null , new com . github . IDENT_0 . METHOD_3 ( java . nio . IDENT_5 . IDENT_6 . METHOD_5 ( ) . METHOD_6 ( ) ) ) . build ( ) ; final java . util . List < com . github . IDENT_0 . IDENT_3 . IDENT_12 > res = IDENT_2 . parse ( request ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( com . github . IDENT_0 . IDENT_3 . IDENT_12 ) { return com . github . IDENT_0 . util . IDENT_13 . METHOD_10 ( new com . github . IDENT_0 . util . METHOD_11 ( ) , n ) ; }
org . junit . Assert . assertEquals ( STRING_1 , com . github . IDENT_0 . util . IDENT_13 . METHOD_10 ( res . get ( 0 ) ) ) 