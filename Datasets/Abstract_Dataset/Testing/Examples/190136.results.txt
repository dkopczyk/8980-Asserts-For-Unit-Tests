METHOD_0 ( ) { final java . lang . String content = STRING_0 + ( ( ( ( ( ( ( ( ( ( ( STRING_1 + STRING_2 ) + STRING_3 ) + STRING_1 6 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_1 2 ) + STRING_7 ) + STRING_8 ) + STRING_1 3 ) + STRING_1 0 ) ; final java . util . concurrent . atomic . IDENT_0 count = new java . util . concurrent . atomic . METHOD_1 ( ) ; final com . github . IDENT_1 . IDENT_2 . IDENT_3 n = org . mockito . Mockito . mock ( com . github . IDENT_1 . IDENT_2 . IDENT_3 . class ) ; org . mockito . Mockito . when ( n . getName ( ) ) . thenReturn ( STRING_9 ) ; org . mockito . Mockito . when ( n . METHOD_2 ( ) ) . thenReturn ( new com . github . IDENT_1 . METHOD_3 ( com . github . IDENT_1 . IDENT_4 . IDENT_5 , java . nio . IDENT_6 . IDENT_7 . METHOD_4 ( ) . METHOD_5 ( ) ) ) ; org . mockito . Mockito . when ( n . METHOD_6 ( ) ) . thenReturn ( STRING_9 ) ; org . mockito . Mockito . when ( n . METHOD_7 ( ) ) . thenReturn ( new com . github . IDENT_1 . METHOD_3 ( com . github . IDENT_1 . IDENT_4 . IDENT_5 , java . nio . IDENT_6 . IDENT_7 . METHOD_4 ( ) . METHOD_5 ( ) ) ) ; org . mockito . Mockito . when ( n . METHOD_8 ( ) ) . thenReturn ( new com . github . IDENT_1 . IDENT_2 . METHOD_9 ( ) ) ; org . mockito . Mockito . when ( n . METHOD_10 ( ) ) . thenReturn ( new com . github . IDENT_1 . util . METHOD_11 ( 1L ) ) ; final com . github . IDENT_1 . IDENT_2 . dao . IDENT_8 dao = org . mockito . Mockito . mock ( com . github . IDENT_1 . IDENT_2 . dao . IDENT_8 . class ) ; org . mockito . Mockito . when ( dao . create ( org . mockito . Mockito . anyString ( ) , org . mockito . Mockito . any ( com . github . IDENT_1 . IDENT_9 . class ) ) ) . thenReturn ( java . util . Arrays . asList ( ( ( com . github . IDENT_1 . IDENT_2 . IDENT_10 ) ( n ) ) ) ) ; final com . github . IDENT_1 . IDENT_2 . IDENT_11 IDENT_12 = new com . github . IDENT_1 . IDENT_2 . METHOD_12 ( this , java . util . Arrays . asList ( STRING_1 1 ) , dao , STRING_1 4 , new com . github . IDENT_1 . METHOD_13 ( java . nio . IDENT_6 . IDENT_7 . METHOD_4 ( ) . METHOD_5 ( ) ) ) ; IDENT_12 . METHOD_14 ( com . github . IDENT_1 . test . engine . IDENT_13 . IDENT_14 . METHOD_15 ( ) ) ; final com . github . IDENT_1 . engine . IDENT_15 r = new com . github . IDENT_1 . engine . METHOD_16 ( STRING_1 5 , IDENT_12 , org . mockito . Mockito . mock ( com . github . IDENT_1 . context . Context . class ) , new com . github . IDENT_1 . METHOD_13 ( java . nio . IDENT_6 . IDENT_7 . METHOD_4 ( ) . METHOD_5 ( ) ) ) . build ( ) ; com . github . IDENT_1 . engine . core . IDENT_16 . newInstance ( org . mockito . Mockito . mock ( com . github . IDENT_1 . engine . IDENT_17 . class ) ) . METHOD_17 ( new com . github . IDENT_1 . engine . METHOD_18 ( ) { @ com . github . IDENT_1 . test . engine . Override public void METHOD_19 ( final char [ ] data , final int offset , final int length , final java . lang . String IDENT_18 , final java . util . List < ? extends com . github . IDENT_1 . IDENT_2 . IDENT_3 > IDENT_19 ) throws com . github . IDENT_1 . exception . IDENT_20 { count . METHOD_20 ( ) ; } } , content . METHOD_21 ( ) , r , null , n ) ; "<AssertPlaceHolder>" ; } get ( ) { return METHOD_22 ( super . get ( ) ) ; }
org . junit . Assert . assertEquals ( 1 , count . get ( ) ) 