METHOD_0 ( ) { java . util . List < java . lang . String > list = new java . util . ArrayList < java . lang . String > ( ) ; for ( int i = STRING_0 ; i <= STRING_1 ; i ++ ) { list . add ( java . lang . String . valueOf ( ( ( char ) ( i ) ) ) ) ; } java . util . Set < java . lang . String > IDENT_0 = METHOD_1 ( list ) ; int i = 0 ; for ( java . lang . String x : IDENT_0 ) { "<AssertPlaceHolder>" ; } } get ( java . lang . String ) { return new redis . IDENT_1 . IDENT_2 . IDENT_3 < java . lang . String > ( IDENT_4 , IDENT_5 ) { @ redis . IDENT_1 . IDENT_2 . Override public redis . IDENT_1 . IDENT_2 . String execute ( redis . IDENT_1 . IDENT_2 . IDENT_6 connection ) { return connection . get ( key ) ; } } . run ( key ) ; }
org . junit . Assert . assertEquals ( list . get ( ( i ++ ) ) , x ) 