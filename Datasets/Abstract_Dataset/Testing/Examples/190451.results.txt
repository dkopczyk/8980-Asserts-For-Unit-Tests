METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; com . IDENT_1 . IDENT_2 . IDENT_3 . common . IDENT_4 IDENT_5 = IDENT_6 . METHOD_1 ( IDENT_0 ) . METHOD_2 ( ) ; com . IDENT_1 . IDENT_2 . IDENT_3 . common . IDENT_7 result = IDENT_8 . search ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } search ( com . IDENT_1 . IDENT_2 . IDENT_3 . common . IDENT_4 ) { final com . google . common . base . IDENT_9 IDENT_10 = com . google . common . base . IDENT_9 . METHOD_3 ( ) ; return IDENT_11 . apply ( new com . IDENT_12 . util . IDENT_13 < com . IDENT_1 . IDENT_2 . IDENT_3 . common . IDENT_7 > ( ) { @ com . IDENT_1 . IDENT_2 . service . Override public com . IDENT_1 . IDENT_2 . IDENT_3 . common . IDENT_7 apply ( ) { com . IDENT_1 . IDENT_2 . IDENT_3 . common . IDENT_7 result = null ; java . lang . String IDENT_14 = null ; long IDENT_15 = 0 ; try { IDENT_15 = IDENT_10 . METHOD_4 ( TimeUnit . IDENT_16 ) ; if ( IDENT_15 > 10 ) { com . IDENT_1 . IDENT_2 . service . IDENT_17 . LOGGER . warn ( ( ( STRING_1 + IDENT_15 ) + STRING_2 ) ) ; if ( IDENT_15 > ( IDENT_18 ) ) { result = METHOD_5 ( ( ( STRING_3 + IDENT_15 ) + STRING_4 ) ) ; IDENT_14 = STRING_5 ; return result ; } } result = IDENT_8 . search ( request ) ; if ( result . METHOD_6 ( ) ) { IDENT_14 = STRING_6 ; } else { IDENT_14 = STRING_7 ; } } catch ( java . lang . Exception e ) { java . lang . String IDENT_19 = com . google . common . base . IDENT_20 . METHOD_7 ( e ) ; result = METHOD_5 ( IDENT_19 ) ; IDENT_14 = STRING_4 0 ; } finally { IDENT_21 . time ( IDENT_10 . METHOD_4 ( TimeUnit . IDENT_22 ) , IDENT_14 ) ; long IDENT_23 = IDENT_10 . METHOD_4 ( TimeUnit . IDENT_16 ) ; result . METHOD_8 ( ( ( int ) ( IDENT_23 ) ) ) ; if ( result . METHOD_6 ( ) ) { if ( IDENT_23 >= ( IDENT_24 ) ) { com . IDENT_1 . IDENT_2 . service . IDENT_17 . IDENT_25 . warn ( STRING_8 , request . METHOD_9 ( ) , result . METHOD_10 ( ) , IDENT_15 , result . METHOD_11 ( ) ) ; } else { com . IDENT_1 . IDENT_2 . service . IDENT_17 . LOGGER . info ( STRING_9 , request . METHOD_9 ( ) , result . METHOD_12 ( ) , result . METHOD_11 ( ) ) ; } } else { com . IDENT_1 . IDENT_2 . service . IDENT_17 . LOGGER . error ( STRING_10 , request . METHOD_9 ( ) , result . METHOD_13 ( ) , result . METHOD_11 ( ) ) ; } return result ; } } } ) ; }
org . junit . Assert . assertEquals ( 6 , result . METHOD_10 ( ) ) 