METHOD_0 ( ) { me . IDENT_0 . IDENT_1 . server . model . User IDENT_2 = IDENT_3 . METHOD_1 ( IDENT_4 . IDENT_5 ) ; me . IDENT_0 . IDENT_1 . server . model . User IDENT_6 = IDENT_3 . METHOD_1 ( IDENT_4 . IDENT_7 ) ; me . IDENT_0 . IDENT_1 . server . model . IDENT_8 IDENT_9 = new me . IDENT_0 . IDENT_1 . server . model . METHOD_2 ( ) ; IDENT_9 . setId ( java . util . UUID . METHOD_3 ( ) . toString ( ) ) ; IDENT_9 . METHOD_4 ( IDENT_4 . IDENT_10 ) ; IDENT_9 . METHOD_5 ( IDENT_2 ) ; IDENT_11 . insert ( IDENT_9 ) ; me . IDENT_0 . IDENT_1 . server . model . METHOD_2 IDENT_12 = new me . IDENT_0 . IDENT_1 . server . model . METHOD_2 ( ) ; IDENT_12 . setId ( java . util . UUID . METHOD_3 ( ) . toString ( ) ) ; IDENT_12 . METHOD_4 ( IDENT_4 . IDENT_10 ) ; IDENT_12 . METHOD_5 ( IDENT_6 ) ; IDENT_11 . insert ( IDENT_12 ) ; java . util . List < me . IDENT_0 . IDENT_1 . server . model . METHOD_2 > list = IDENT_11 . METHOD_6 ( IDENT_4 . IDENT_10 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( java . lang . String ) { java . util . List < me . IDENT_0 . IDENT_1 . server . resource . vo . IDENT_13 > result = new java . util . ArrayList < me . IDENT_0 . IDENT_1 . server . resource . vo . IDENT_13 > ( ) ; java . util . List < me . IDENT_0 . IDENT_1 . server . model . METHOD_2 > IDENT_14 = IDENT_11 . METHOD_6 ( IDENT_15 ) ; for ( me . IDENT_0 . IDENT_1 . server . model . METHOD_2 IDENT_16 : IDENT_14 ) { if ( ( IDENT_16 . METHOD_7 ( ) ) == null ) { continue ; } result . add ( new me . IDENT_0 . IDENT_1 . server . resource . vo . METHOD_8 ( IDENT_16 . METHOD_7 ( ) ) ) ; } return result ; }
org . junit . Assert . assertTrue ( ( ( list . size ( ) ) == 2 ) ) 