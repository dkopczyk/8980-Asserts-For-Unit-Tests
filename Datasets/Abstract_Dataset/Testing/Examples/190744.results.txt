METHOD_0 ( ) { for ( int i = 0 ; i < ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 ) ; i ++ ) { long IDENT_5 = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; } } METHOD_2 ( java . lang . Long ) { int IDENT_7 = 0 ; java . util . IDENT_8 random = new java . util . METHOD_3 ( IDENT_9 ) ; for ( int i = 1 ; i <= ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_10 . length ) ; i ++ ) { java . util . List < java . lang . Object [ ] > IDENT_11 = IDENT_12 . get ( ( i - 1 ) ) ; if ( IDENT_11 != null ) IDENT_12 . put ( i , new java . util . IDENT_13 < java . lang . Object [ ] > ( IDENT_11 ) ) ; else IDENT_11 = new java . util . IDENT_13 < java . lang . Object [ ] > ( ) ; int IDENT_14 = ( random . METHOD_4 ( ( ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_15 ) - ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_16 ) ) ) ) + ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_16 ) ; java . util . List < java . util . List < java . lang . Object > > IDENT_17 = new java . util . IDENT_13 < java . util . List < java . lang . Object > > ( ) ; for ( int y = 0 ; y < IDENT_14 ; y ++ ) { IDENT_11 = IDENT_12 . get ( i ) ; if ( IDENT_11 == null ) IDENT_11 = new java . util . IDENT_13 < java . lang . Object [ ] > ( ) ; java . util . List < java . lang . Object > operation ; if ( ( IDENT_11 . size ( ) ) <= 1 ) { operation = METHOD_5 ( random , IDENT_7 , i ) ; IDENT_7 ++ ; } else { org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_18 . Operation op = org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_18 . Operation . values ( ) [ random . METHOD_4 ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_18 . Operation . values ( ) . length ) ] ; switch ( op ) { case create : operation = METHOD_5 ( random , IDENT_7 , i ) ; IDENT_7 ++ ; break ; case IDENT_19 : operation = METHOD_6 ( random , IDENT_7 , i ) ; IDENT_7 ++ ; break ; case delete : operation = METHOD_7 ( random , i ) ; break ; default : throw new java . lang . METHOD_8 ( ( STRING_0 + ( op . toString ( ) ) ) ) ; } } IDENT_17 . add ( operation ) ; } IDENT_20 . put ( i , IDENT_17 ) ; } org . IDENT_0 . IDENT_21 . logging . IDENT_22 . METHOD_9 ( IDENT_22 . IDENT_23 , IDENT_24 . IDENT_1 , this , STRING_1 , this . toString ( ) ) ; return IDENT_20 ; }
org . junit . Assert . assertEquals ( new org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_10 ( ) . METHOD_2 ( IDENT_5 ) . toString ( ) , new org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_10 ( ) . METHOD_2 ( IDENT_5 ) . toString ( ) ) 