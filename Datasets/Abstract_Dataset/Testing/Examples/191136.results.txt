METHOD_0 ( ) { com . IDENT_0 . xwiki . store . IDENT_1 IDENT_2 = com . IDENT_0 . xwiki . store . IDENT_1 . METHOD_1 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { com . IDENT_0 . xwiki . store . IDENT_1 IDENT_2 ; if ( IDENT_3 . equalsIgnoreCase ( com . IDENT_0 . xwiki . store . IDENT_1 . IDENT_4 . METHOD_2 ( ) ) ) { IDENT_2 = com . IDENT_0 . xwiki . store . IDENT_1 . IDENT_4 ; } else if ( IDENT_3 . equalsIgnoreCase ( com . IDENT_0 . xwiki . store . IDENT_1 . IDENT_5 . METHOD_2 ( ) ) ) { IDENT_2 = com . IDENT_0 . xwiki . store . IDENT_1 . IDENT_5 ; } else if ( IDENT_3 . equalsIgnoreCase ( com . IDENT_0 . xwiki . store . IDENT_1 . IDENT_6 . METHOD_2 ( ) ) ) { IDENT_2 = com . IDENT_0 . xwiki . store . IDENT_1 . IDENT_6 ; } else if ( IDENT_3 . equalsIgnoreCase ( com . IDENT_0 . xwiki . store . IDENT_1 . IDENT_7 . METHOD_2 ( ) ) ) { IDENT_2 = com . IDENT_0 . xwiki . store . IDENT_1 . IDENT_7 ; } else if ( IDENT_3 . startsWith ( com . IDENT_0 . xwiki . store . IDENT_1 . IDENT_8 . METHOD_2 ( ) ) ) { IDENT_2 = com . IDENT_0 . xwiki . store . IDENT_1 . IDENT_8 ; } else if ( IDENT_3 . equalsIgnoreCase ( com . IDENT_0 . xwiki . store . IDENT_1 . IDENT_9 . METHOD_2 ( ) ) ) { IDENT_2 = com . IDENT_0 . xwiki . store . IDENT_1 . IDENT_9 ; } else if ( IDENT_3 . equalsIgnoreCase ( com . IDENT_0 . xwiki . store . IDENT_1 . IDENT_10 . METHOD_2 ( ) ) ) { IDENT_2 = com . IDENT_0 . xwiki . store . IDENT_1 . IDENT_10 ; } else if ( IDENT_3 . equalsIgnoreCase ( com . IDENT_0 . xwiki . store . IDENT_1 . IDENT_11 . METHOD_2 ( ) ) ) { IDENT_2 = com . IDENT_0 . xwiki . store . IDENT_1 . IDENT_11 ; } else { IDENT_2 = com . IDENT_0 . xwiki . store . IDENT_1 . IDENT_12 ; } return IDENT_2 ; }
org . junit . Assert . assertSame ( IDENT_1 . IDENT_12 , IDENT_2 ) 