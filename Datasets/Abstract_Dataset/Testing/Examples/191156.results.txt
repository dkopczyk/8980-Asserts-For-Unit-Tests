METHOD_0 ( ) { org . xwiki . model . reference . IDENT_0 IDENT_1 = new org . xwiki . model . reference . METHOD_1 ( STRING_0 , java . util . Arrays . asList ( STRING_1 ) , STRING_2 ) ; com . IDENT_2 . xwiki . doc . IDENT_3 document = mock ( com . IDENT_2 . xwiki . doc . IDENT_3 . class ) ; when ( document . METHOD_2 ( ) ) . thenReturn ( IDENT_1 ) ; when ( document . METHOD_3 ( ) ) . thenReturn ( false ) ; context . METHOD_4 ( document ) ; when ( IDENT_4 . METHOD_5 ( STRING_3 ) ) . thenReturn ( STRING_4 ) ; when ( IDENT_4 . METHOD_5 ( STRING_5 ) ) . thenReturn ( STRING_3 ) ; java . lang . String result = action . render ( context ) ; "<AssertPlaceHolder>" ; verify ( IDENT_5 ) . METHOD_6 ( STRING_6 , STRING_2 , STRING_7 , STRING_8 , null , STRING_0 , context ) ; } render ( com . IDENT_2 . xwiki . IDENT_6 ) { com . IDENT_2 . xwiki . web . IDENT_7 request = context . METHOD_7 ( ) ; java . lang . String path = request . METHOD_8 ( ) ; java . lang . String IDENT_8 = com . IDENT_2 . xwiki . util . IDENT_9 . METHOD_9 ( path . substring ( ( ( path . METHOD_10 ( "/" ) ) + 1 ) ) , context ) ; try { ( ( com . IDENT_2 . xwiki . plugin . IDENT_10 . IDENT_11 ) ( context . METHOD_11 ( ) . METHOD_12 ( STRING_9 , context ) ) ) . METHOD_13 ( IDENT_8 , context ) ; } catch ( java . io . IOException e ) { throw new com . IDENT_2 . xwiki . METHOD_14 ( com . IDENT_2 . xwiki . METHOD_14 . IDENT_12 , com . IDENT_2 . xwiki . METHOD_14 . IDENT_13 , STRING_10 , e ) ; } return null ; }
org . junit . Assert . assertNull ( result ) 