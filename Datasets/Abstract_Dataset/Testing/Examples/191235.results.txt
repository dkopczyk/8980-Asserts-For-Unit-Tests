METHOD_0 ( ) { org . xwiki . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = mock ( org . xwiki . IDENT_0 . IDENT_1 . IDENT_2 . class ) ; when ( IDENT_3 . getId ( ) ) . thenReturn ( STRING_0 ) ; when ( IDENT_3 . METHOD_1 ( ) ) . thenReturn ( STRING_1 ) ; when ( IDENT_4 . METHOD_2 ( IDENT_3 . getId ( ) ) ) . thenReturn ( IDENT_3 ) ; org . xwiki . IDENT_0 . IDENT_1 . IDENT_2 IDENT_1 = new org . xwiki . IDENT_0 . IDENT_1 . METHOD_3 ( IDENT_3 . getId ( ) , STRING_2 ) ; IDENT_1 . METHOD_4 ( IDENT_3 . METHOD_1 ( ) ) ; boolean result = IDENT_5 . METHOD_5 ( ) . METHOD_6 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_3 , times ( 2 ) ) . METHOD_1 ( ) ; verify ( IDENT_4 ) . METHOD_6 ( IDENT_1 ) ; } METHOD_6 ( org . xwiki . IDENT_0 . IDENT_1 . METHOD_3 ) { try { this . IDENT_6 . get ( ) . save ( IDENT_1 ) ; } catch ( org . xwiki . IDENT_0 . internal . IDENT_1 . builder . IDENT_7 e ) { throw new org . xwiki . IDENT_0 . manager . METHOD_7 ( java . lang . String . format ( STRING_3 , IDENT_1 . getId ( ) ) , e ) ; } }
org . junit . Assert . assertTrue ( result ) 