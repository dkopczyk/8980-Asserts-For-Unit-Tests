METHOD_0 ( ) { long count = 8 ; long IDENT_0 = 0 ; long IDENT_1 = count - 1 ; int IDENT_2 = 3 ; long [ ] result = com . alibaba . IDENT_3 . common . util . IDENT_4 . METHOD_1 ( IDENT_0 , IDENT_1 , IDENT_2 ) ; ( result [ ( ( result . length ) - 1 ) ] ) ++ ; for ( int i = 0 ; i < ( ( result . length ) - 1 ) ; i ++ ) { System . out . println ( ( ( ( STRING_0 + ( result [ i ] ) ) + STRING_1 ) + ( ( result [ ( i + 1 ) ] ) - ( result [ i ] ) ) ) ) ; } "<AssertPlaceHolder>" ; System . out . println ( java . util . Arrays . toString ( result ) ) ; } METHOD_1 ( long , long , int ) { java . math . BigInteger [ ] result = com . alibaba . IDENT_3 . common . util . IDENT_4 . METHOD_2 ( java . math . BigInteger . valueOf ( IDENT_0 ) , java . math . BigInteger . valueOf ( IDENT_1 ) , IDENT_2 ) ; long [ ] IDENT_5 = new long [ result . length ] ; for ( int i = 0 , len = result . length ; i < len ; i ++ ) { IDENT_5 [ i ] = result [ i ] . METHOD_3 ( ) ; } return IDENT_5 ; }
org . junit . Assert . assertTrue ( ( ( ( result . length ) - 1 ) == IDENT_2 ) ) 