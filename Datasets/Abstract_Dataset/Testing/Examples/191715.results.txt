METHOD_0 ( ) { "<AssertPlaceHolder>" ; } METHOD_1 ( int [ ] ) { if ( ( IDENT_0 == null ) || ( ( IDENT_0 . length ) == 0 ) ) { return 0 ; } int IDENT_1 = 0 ; java . util . Set < java . lang . Integer > set = new java . util . HashSet < java . lang . Integer > ( ) ; for ( int i = 0 ; i < ( IDENT_0 . length ) ; i ++ ) { set . add ( IDENT_0 [ i ] ) ; } for ( int i = 0 ; i < ( IDENT_0 . length ) ; i ++ ) { int length = 1 ; int n = IDENT_0 [ i ] ; while ( set . contains ( ( n + 1 ) ) ) { length ++ ; n ++ ; set . remove ( n ) ; } n = IDENT_0 [ i ] ; while ( set . contains ( ( n - 1 ) ) ) { length ++ ; n OP_0 ; set . remove ( n ) ; } if ( IDENT_1 < length ) { IDENT_1 = length ; } } return IDENT_1 ; }
org . junit . Assert . assertEquals ( 0 , s . METHOD_1 ( new int [ ] { } ) ) 