METHOD_0 ( ) { int [ ] IDENT_0 = new int [ 1 ] ; int [ ] IDENT_1 = new int [ ] { 1 } ; s . METHOD_1 ( IDENT_0 , 0 , IDENT_1 , 1 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( int [ ] , int , int [ ] , int ) { if ( ( m < 0 ) || ( n < 0 ) ) { return ; } if ( ( m == 0 ) && ( n == 0 ) ) { return ; } if ( n == 0 ) { return ; } if ( m == 0 ) { java . lang . System . METHOD_2 ( IDENT_1 , 0 , IDENT_0 , 0 , n ) ; } int IDENT_2 = m - 1 ; int IDENT_3 = n - 1 ; int IDENT_4 = ( m + n ) - 1 ; while ( ( IDENT_2 >= 0 ) && ( IDENT_3 >= 0 ) ) { if ( ( IDENT_0 [ IDENT_2 ] ) >= ( IDENT_1 [ IDENT_3 ] ) ) { IDENT_0 [ IDENT_4 ] = IDENT_0 [ IDENT_2 ] ; IDENT_2 OP_0 ; } else { IDENT_0 [ IDENT_4 ] = IDENT_1 [ IDENT_3 ] ; IDENT_3 OP_0 ; } IDENT_4 OP_0 ; } if ( IDENT_2 < 0 ) { while ( IDENT_3 >= 0 ) { IDENT_0 [ IDENT_4 ] = IDENT_1 [ IDENT_3 ] ; IDENT_3 OP_0 ; IDENT_4 OP_0 ; } } else { while ( IDENT_2 >= 0 ) { IDENT_0 [ IDENT_4 ] = IDENT_0 [ IDENT_2 ] ; IDENT_2 OP_0 ; IDENT_4 OP_0 ; } } }
org . junit . Assert . assertEquals ( 1 , IDENT_0 [ 0 ] ) 