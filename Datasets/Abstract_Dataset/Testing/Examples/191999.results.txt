METHOD_0 ( ) { System . out . METHOD_1 ( STRING_0 ) ; IDENT_0 . com . IDENT_1 . model . order . IDENT_2 order = IDENT_0 . com . IDENT_1 . model . order . IDENT_2 . METHOD_2 ( ) . build ( ) ; IDENT_0 . com . IDENT_1 . model . IDENT_3 . IDENT_4 IDENT_3 ; IDENT_0 . com . IDENT_1 . model . position . IDENT_5 IDENT_6 ; double IDENT_7 = 0 ; for ( int i = 0 ; i < 10 ; i ++ ) { IDENT_3 = new IDENT_0 . com . IDENT_1 . model . IDENT_3 . METHOD_3 ( ) ; IDENT_3 . METHOD_4 ( java . lang . Math . random ( ) ) ; IDENT_6 = new IDENT_0 . com . IDENT_1 . model . position . METHOD_5 ( ) ; IDENT_6 . METHOD_6 ( IDENT_3 ) ; order . METHOD_7 ( IDENT_6 ) ; IDENT_7 += IDENT_3 . METHOD_8 ( ) ; } "<AssertPlaceHolder>" ; System . out . println ( STRING_1 ) ; } METHOD_8 ( ) { double IDENT_7 = 0 ; for ( IDENT_0 . com . IDENT_1 . model . position . METHOD_5 IDENT_6 : this . IDENT_8 ) { IDENT_7 += IDENT_6 . METHOD_8 ( ) ; } return IDENT_7 ; }
org . junit . Assert . assertTrue ( ( ( order . METHOD_8 ( ) ) == IDENT_7 ) ) 