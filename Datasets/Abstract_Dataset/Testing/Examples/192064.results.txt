METHOD_0 ( ) { algorithm . IDENT_0 . IDENT_1 IDENT_2 = new algorithm . IDENT_0 . METHOD_1 ( ) ; java . lang . String IDENT_3 = STRING_0 ; int IDENT_4 = 2 ; algorithm . IDENT_0 . List < java . lang . String > IDENT_5 = new algorithm . IDENT_0 . ArrayList < java . lang . String > ( algorithm . IDENT_0 . Arrays . asList ( new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 } ) ) ; algorithm . IDENT_0 . Set < java . lang . String > IDENT_6 = new algorithm . IDENT_0 . HashSet < java . lang . String > ( algorithm . IDENT_0 . Arrays . asList ( new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 } ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String , algorithm . IDENT_0 . List , int ) { algorithm . IDENT_0 . Set < java . lang . String > res = new algorithm . IDENT_0 . HashSet < java . lang . String > ( ) ; for ( java . lang . String IDENT_7 : IDENT_8 ) { if ( METHOD_3 ( target , IDENT_7 , k ) ) { res . add ( IDENT_7 ) ; } } return res ; }
org . junit . Assert . assertTrue ( IDENT_6 . equals ( IDENT_2 . METHOD_2 ( IDENT_3 , IDENT_5 , IDENT_4 ) ) ) 