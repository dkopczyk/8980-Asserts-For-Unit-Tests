METHOD_0 ( ) { java . io . InputStream stream = getClass ( ) . getResourceAsStream ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) ; com . IDENT_0 . IDENT_4 . IDENT_5 . parse ( stream , STRING_0 , 2 , new com . IDENT_0 . IDENT_4 . IDENT_5 . METHOD_1 ( ) { @ com . IDENT_0 . IDENT_1 . Override public void METHOD_2 ( int IDENT_6 , javax . xml . stream . events . IDENT_7 element ) { final javax . xml . stream . events . IDENT_8 IDENT_9 = element . METHOD_3 ( new javax . xml . IDENT_10 . METHOD_4 ( STRING_1 ) ) ; boolean IDENT_11 = ( IDENT_9 == null ) || ( IDENT_9 . getValue ( ) . startsWith ( "2" ) ) ; if ( IDENT_11 ) { throw new java . lang . RuntimeException ( STRING_2 ) ; } } @ com . IDENT_0 . IDENT_1 . Override public boolean METHOD_5 ( org . w3c . dom . Element element ) { final java . lang . String IDENT_12 = element . METHOD_6 ( ) ; if ( ( IDENT_12 . equals ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_13 ) ) || ( IDENT_12 . equals ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_14 ) ) ) { final com . IDENT_0 . IDENT_1 . IDENT_15 . IDENT_16 IDENT_17 = new com . IDENT_0 . IDENT_1 . IDENT_15 . METHOD_7 ( element ) ; com . IDENT_0 . IDENT_1 . IDENT_18 . base . IDENT_19 IDENT_20 = new com . IDENT_0 . IDENT_1 . IDENT_18 . base . IDENT_15 . METHOD_8 ( IDENT_17 ) ; System . out . println ( STRING_3 ) ; System . out . println ( com . IDENT_0 . IDENT_1 . IDENT_21 . METHOD_9 ( IDENT_17 ) ) ; System . out . println ( STRING_4 ) ; System . out . println ( ( IDENT_22 = com . IDENT_0 . IDENT_1 . IDENT_21 . METHOD_10 ( IDENT_20 ) ) ) ; } return true ; } } ) ; com . IDENT_0 . IDENT_1 . IDENT_23 . source ( getClass ( ) . getResourceAsStream ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) ) . METHOD_11 ( ) . METHOD_12 ( 1 ) . METHOD_13 ( ( record ) -> IDENT_24 = com . IDENT_0 . IDENT_1 . IDENT_21 . METHOD_10 ( record . IDENT_17 ) ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( java . lang . Object ) { java . util . IDENT_25 . METHOD_14 ( object ) ; try { return com . IDENT_0 . IDENT_1 . IDENT_21 . IDENT_26 . METHOD_15 ( object ) ; } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( e ) ; } }
org . junit . Assert . assertEquals ( IDENT_22 , IDENT_24 ) 