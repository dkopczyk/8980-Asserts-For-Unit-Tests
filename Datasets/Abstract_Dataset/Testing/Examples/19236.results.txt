METHOD_0 ( ) { org . apache . jena . IDENT_0 . store . IDENT_1 IDENT_2 = dataset ( ) ; org . apache . jena . IDENT_0 . store . IDENT_3 . METHOD_1 ( IDENT_2 . METHOD_2 ( ) ) ; org . apache . jena . IDENT_0 . store . IDENT_3 . METHOD_3 ( IDENT_2 . METHOD_4 ( STRING_0 ) ) ; org . apache . jena . IDENT_0 . store . IDENT_3 . METHOD_5 ( IDENT_2 . METHOD_4 ( STRING_1 ) ) ; org . apache . jena . IDENT_4 . model . IDENT_5 m = IDENT_2 . METHOD_4 ( STRING_1 ) ; org . apache . jena . IDENT_0 . store . IDENT_1 IDENT_6 = org . apache . jena . IDENT_0 . store . IDENT_7 . create ( ) ; IDENT_6 . METHOD_6 ( IDENT_2 . METHOD_4 ( STRING_1 ) ) ; java . lang . String IDENT_8 = STRING_2 ; org . apache . jena . IDENT_0 . store . Query q = org . apache . jena . IDENT_0 . store . IDENT_9 . create ( IDENT_8 ) ; org . apache . jena . IDENT_0 . store . IDENT_10 IDENT_11 = org . apache . jena . IDENT_0 . store . IDENT_12 . create ( q , IDENT_6 ) ; org . apache . jena . IDENT_4 . model . IDENT_5 IDENT_13 = IDENT_11 . METHOD_7 ( ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( org . apache . jena . graph . impl . IDENT_14 ) { return base . METHOD_8 ( g ) ; }
org . junit . Assert . assertTrue ( m . METHOD_8 ( IDENT_13 ) ) 