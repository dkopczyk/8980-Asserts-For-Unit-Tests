METHOD_0 ( ) { double [ ] d = new double [ ] { 2 , 1 , 1 , INT_0 , INT_1 , INT_2 , INT_3 , 5 , INT_4 , INT_5 , INT_6 , 3 } ; int [ ] IDENT_0 = new int [ ] { 7 , INT_7 , 0 , 2 , 1 } ; int [ ] IDENT_1 = IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_1 ( d , 5 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( double [ ] , int ) { if ( ( values . length ) < n ) { throw new java . lang . IllegalArgumentException ( STRING_0 ) ; } java . lang . Integer [ ] IDENT_9 = new java . lang . Integer [ values . length ] ; for ( int i = 0 ; i < ( values . length ) ; i ++ ) IDENT_9 [ i ] = i ; java . util . Arrays . METHOD_2 ( IDENT_9 , new java . util . IDENT_10 < java . lang . Integer > ( ) { @ IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . Override public int compare ( java . lang . Integer IDENT_11 , java . lang . Integer IDENT_12 ) { return java . lang . Double . compare ( values [ IDENT_11 ] , values [ IDENT_12 ] ) ; } } ) ; int [ ] result = new int [ n ] ; for ( int i = 0 ; i < ( result . length ) ; i ++ ) result [ i ] = IDENT_9 [ i ] ; return result ; }
org . junit . Assert . assertArrayEquals ( IDENT_0 , IDENT_1 ) 