METHOD_0 ( ) { final java . io . File in = new java . io . File ( this . getClass ( ) . getResource ( STRING_0 ) . METHOD_1 ( ) ) ; final java . io . File out = java . io . File . METHOD_2 ( STRING_1 , null ) ; out . METHOD_3 ( ) ; final io . github . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new io . github . IDENT_0 . IDENT_1 . METHOD_4 ( java . nio . IDENT_4 . IDENT_5 . UTF_8 ) ; IDENT_3 . METHOD_5 ( in , out ) ; final byte [ ] expected = java . nio . file . IDENT_6 . METHOD_6 ( new java . io . File ( this . getClass ( ) . getResource ( STRING_0 ) . METHOD_1 ( ) ) . METHOD_7 ( ) ) ; final byte [ ] actual = java . nio . file . IDENT_6 . METHOD_6 ( out . METHOD_7 ( ) ) ; "<AssertPlaceHolder>" ; out . delete ( ) ; } METHOD_5 ( java . io . File , java . io . File ) { try ( final java . io . IDENT_7 writer = new java . io . METHOD_8 ( new java . io . METHOD_9 ( new java . io . METHOD_10 ( out ) , java . nio . IDENT_4 . IDENT_5 . UTF_8 ) ) ) { final java . util . List < java . lang . String > IDENT_8 = java . nio . file . IDENT_6 . METHOD_11 ( in . METHOD_7 ( ) , IDENT_5 . UTF_8 ) ; for ( int i = 0 ; i < ( IDENT_8 . size ( ) ) ; i ++ ) { if ( i != ( IDENT_9 ) ) { try { writer . write ( IDENT_8 . get ( i ) ) ; writer . write ( STRING_2 ) ; } catch ( java . io . IOException e ) { } } } } }
org . junit . Assert . assertArrayEquals ( expected , actual ) 