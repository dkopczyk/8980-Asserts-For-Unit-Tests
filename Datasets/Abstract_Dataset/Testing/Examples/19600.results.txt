METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; int IDENT_1 = 0 ; org . apache . kafka . common . Node IDENT_2 = new org . apache . kafka . common . Node ( 0 , STRING_1 , INT_0 ) ; org . apache . kafka . common . Node IDENT_3 = new org . apache . kafka . common . Node ( 1 , STRING_1 , INT_1 ) ; org . apache . kafka . common . Node IDENT_4 = new org . apache . kafka . common . Node ( 2 , STRING_1 , INT_2 ) ; org . apache . kafka . common . Node [ ] IDENT_5 = new org . apache . kafka . common . Node [ ] { IDENT_2 , IDENT_3 , IDENT_4 } ; org . apache . kafka . common . Node [ ] IDENT_6 = new org . apache . kafka . common . Node [ ] { IDENT_2 , IDENT_3 } ; org . apache . kafka . common . Node [ ] IDENT_7 = new org . apache . kafka . common . Node [ ] { IDENT_4 } ; org . apache . kafka . common . IDENT_8 IDENT_9 = new org . apache . kafka . common . METHOD_1 ( IDENT_0 , IDENT_1 , IDENT_2 , IDENT_5 , IDENT_6 , IDENT_7 ) ; java . lang . String expected = java . lang . String . format ( STRING_2 , IDENT_0 , IDENT_1 , IDENT_2 . METHOD_2 ( ) , STRING_3 , STRING_4 , STRING_5 ) ; "<AssertPlaceHolder>" ; } toString ( ) { return ( ( ( ( ( STRING_6 + ( key ) ) + STRING_7 ) + ( value ( ) ) ) + STRING_8 ) + ( schema ( ) ) ) + STRING_9 ; }
org . junit . Assert . assertEquals ( expected , IDENT_9 . toString ( ) ) 