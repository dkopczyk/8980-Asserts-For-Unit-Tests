METHOD_0 ( ) { com . amazon . IDENT_0 . attributes . persistence . IDENT_1 IDENT_2 = mock ( com . amazon . IDENT_0 . attributes . persistence . IDENT_1 . class ) ; org . mockito . IDENT_3 < java . util . Map < java . lang . String , java . lang . Object > > IDENT_4 = org . mockito . IDENT_3 . METHOD_1 ( ( ( java . lang . Class ) ( java . util . Map . class ) ) ) ; java . util . Map < java . lang . String , java . lang . Object > attributes = java . util . Collections . METHOD_2 ( STRING_0 , STRING_1 ) ; com . amazon . IDENT_0 . IDENT_5 . request . handler . IDENT_6 input = com . amazon . IDENT_0 . IDENT_5 . request . handler . IDENT_6 . builder ( ) . METHOD_3 ( com . amazon . IDENT_0 . model . IDENT_7 . builder ( ) . METHOD_4 ( com . amazon . IDENT_0 . model . IDENT_8 . builder ( ) . build ( ) ) . build ( ) ) . METHOD_5 ( IDENT_2 ) . build ( ) ; input . METHOD_6 ( ) . METHOD_7 ( attributes ) ; input . METHOD_6 ( ) . METHOD_8 ( ) ; verify ( IDENT_2 ) . METHOD_9 ( any ( com . amazon . IDENT_0 . model . IDENT_7 . class ) , IDENT_4 . METHOD_10 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( com . amazon . IDENT_0 . model . IDENT_7 , java . util . Map ) { java . lang . String IDENT_9 = IDENT_10 . apply ( IDENT_11 ) ; com . amazonaws . services . IDENT_12 . model . IDENT_13 request = new com . amazonaws . services . IDENT_12 . model . METHOD_11 ( ) . METHOD_12 ( tableName ) . METHOD_13 ( METHOD_14 ( IDENT_9 , attributes ) ) ; try { IDENT_14 . METHOD_15 ( request ) ; } catch ( com . amazonaws . services . IDENT_12 . model . IDENT_15 e ) { throw new com . amazon . IDENT_0 . exception . METHOD_16 ( java . lang . String . format ( STRING_2 , tableName ) , e ) ; } catch ( com . amazonaws . services . IDENT_12 . model . IDENT_16 e ) { throw new com . amazon . IDENT_0 . exception . METHOD_16 ( STRING_3 , e ) ; } }
org . junit . Assert . assertEquals ( attributes , IDENT_4 . getValue ( ) ) 