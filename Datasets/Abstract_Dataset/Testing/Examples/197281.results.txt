METHOD_0 ( ) { org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new org . eclipse . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; java . io . File IDENT_4 = new java . io . File ( METHOD_1 . IDENT_5 ) ; "<AssertPlaceHolder>" ; for ( java . io . File child : IDENT_4 . METHOD_2 ( ) ) { java . lang . String IDENT_6 = child . getName ( ) ; if ( ( child . METHOD_3 ( ) ) && ( METHOD_1 . IDENT_7 . contains ( IDENT_6 ) ) ) { java . util . List < java . lang . String > IDENT_8 = new java . util . ArrayList < java . lang . String > ( ) ; for ( java . io . File IDENT_9 : child . METHOD_2 ( ) ) { java . lang . String name = IDENT_9 . getName ( ) ; if ( ( ( ! ( STRING_0 . equals ( name ) ) ) && ( IDENT_9 . METHOD_3 ( ) ) ) && ( new java . io . File ( IDENT_9 , STRING_1 ) . METHOD_4 ( ) ) ) { IDENT_8 . add ( org . eclipse . IDENT_0 . IDENT_1 . METHOD_1 . METHOD_5 ( IDENT_9 ) ) ; } } org . eclipse . IDENT_0 . IDENT_1 . METHOD_1 . METHOD_6 ( IDENT_8 ) ; java . lang . String IDENT_10 = IDENT_3 . METHOD_7 ( IDENT_6 , false ) ; System . out . println ( ( STRING_2 + IDENT_10 ) ) ; org . eclipse . IDENT_0 . IDENT_1 . IDENT_11 . METHOD_8 ( IDENT_10 ) ; IDENT_3 . METHOD_9 ( IDENT_8 , IDENT_6 , false ) ; java . util . List < java . lang . String > IDENT_12 = new java . util . ArrayList < java . lang . String > ( ) ; if ( ! ( IDENT_8 . isEmpty ( ) ) ) { IDENT_12 . add ( IDENT_8 . get ( 0 ) ) ; } java . lang . String IDENT_13 = IDENT_3 . METHOD_7 ( IDENT_6 , true ) ; System . out . println ( ( STRING_2 + IDENT_13 ) ) ; org . eclipse . IDENT_0 . IDENT_1 . IDENT_11 . METHOD_8 ( IDENT_13 ) ; IDENT_3 . METHOD_9 ( IDENT_12 , IDENT_6 , true ) ; } } }
org . junit . Assert . assertTrue ( IDENT_4 . METHOD_3 ( ) ) 