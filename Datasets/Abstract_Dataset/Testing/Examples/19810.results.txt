METHOD_0 ( ) { IDENT_0 . put ( METHOD_1 ( new org . apache . kafka . streams . IDENT_1 . METHOD_2 ( "a" , IDENT_2 [ 0 ] ) ) , METHOD_3 ( INT_0 ) ) ; IDENT_0 . put ( METHOD_1 ( new org . apache . kafka . streams . IDENT_1 . METHOD_2 ( "a" , IDENT_2 [ 1 ] ) ) , METHOD_3 ( 50 ) ) ; IDENT_0 . remove ( METHOD_1 ( new org . apache . kafka . streams . IDENT_1 . METHOD_2 ( "a" , IDENT_2 [ 0 ] ) ) ) ; final org . apache . kafka . streams . state . IDENT_3 < org . apache . kafka . common . utils . IDENT_4 , byte [ ] > value = IDENT_0 . METHOD_4 ( org . apache . kafka . common . utils . IDENT_4 . METHOD_5 ( "a" . getBytes ( ) ) , 0 , 100 ) ; "<AssertPlaceHolder>" ; } hasNext ( ) { return false ; }
org . junit . Assert . assertFalse ( value . hasNext ( ) ) 