METHOD_0 ( ) { IDENT_0 . put ( eq ( IDENT_1 ) , METHOD_1 ( IDENT_2 ) ) ; METHOD_2 ( ) ; init ( ) ; IDENT_3 . put ( key , value ) ; final org . apache . kafka . common . metrics . IDENT_4 IDENT_5 = METHOD_3 ( STRING_0 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_0 ) ; } METHOD_4 ( ) { long now = time . METHOD_5 ( ) ; MOD_0 ( this . IDENT_6 ) { if ( ( this . IDENT_7 ) instanceof org . apache . kafka . common . metrics . IDENT_8 ) return ( ( org . apache . kafka . common . metrics . IDENT_8 ) ( IDENT_7 ) ) . METHOD_6 ( config , now ) ; else if ( ( this . IDENT_7 ) instanceof org . apache . kafka . common . metrics . IDENT_9 ) return ( ( org . apache . kafka . common . metrics . IDENT_9 < ? > ) ( IDENT_7 ) ) . value ( config , now ) ; else throw new java . lang . IllegalStateException ( ( STRING_1 + ( this . IDENT_7 . getClass ( ) ) ) ) ; } }
org . junit . Assert . assertTrue ( ( ( ( java . lang . Double ) ( METHOD_3 . METHOD_4 ( ) ) ) > 0 ) ) 