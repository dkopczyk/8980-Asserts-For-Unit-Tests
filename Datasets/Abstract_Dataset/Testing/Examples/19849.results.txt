METHOD_0 ( ) { IDENT_0 . METHOD_1 ( METHOD_2 ( java . util . List . class ) ) ; METHOD_3 ( ) ; init ( ) ; IDENT_1 . METHOD_1 ( java . util . Collections . singletonList ( org . apache . kafka . streams . IDENT_2 . METHOD_4 ( key , IDENT_3 ) ) ) ; final org . apache . kafka . common . metrics . IDENT_4 IDENT_5 = METHOD_5 ( STRING_0 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_0 ) ; } METHOD_6 ( ) { long now = time . METHOD_7 ( ) ; MOD_0 ( this . IDENT_6 ) { if ( ( this . IDENT_7 ) instanceof org . apache . kafka . common . metrics . IDENT_8 ) return ( ( org . apache . kafka . common . metrics . IDENT_8 ) ( IDENT_7 ) ) . METHOD_8 ( config , now ) ; else if ( ( this . IDENT_7 ) instanceof org . apache . kafka . common . metrics . IDENT_9 ) return ( ( org . apache . kafka . common . metrics . IDENT_9 < ? > ) ( IDENT_7 ) ) . value ( config , now ) ; else throw new java . lang . IllegalStateException ( ( STRING_1 + ( this . IDENT_7 . getClass ( ) ) ) ) ; } }
org . junit . Assert . assertTrue ( ( ( ( java . lang . Double ) ( METHOD_5 . METHOD_6 ( ) ) ) > 0 ) ) 