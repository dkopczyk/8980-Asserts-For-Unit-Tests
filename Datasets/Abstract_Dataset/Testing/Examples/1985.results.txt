METHOD_0 ( ) { com . amazon . IDENT_0 . model . Response response = com . amazon . IDENT_0 . model . Response . builder ( ) . METHOD_1 ( com . amazon . IDENT_0 . model . ui . IDENT_1 . builder ( ) . METHOD_2 ( ( STRING_0 + ( "foo" + STRING_1 ) ) ) . METHOD_3 ( com . amazon . IDENT_0 . model . ui . IDENT_2 . IDENT_3 ) . build ( ) ) . build ( ) ; java . util . Optional < com . amazon . IDENT_0 . model . Response > IDENT_4 = builder . METHOD_4 ( "foo" , com . amazon . IDENT_0 . model . ui . IDENT_2 . IDENT_3 ) . build ( ) ; "<AssertPlaceHolder>" ; } build ( ) { com . amazon . IDENT_0 . attributes . persistence . impl . IDENT_5 IDENT_6 = null ; if ( ( tableName ) != null ) { com . amazon . IDENT_0 . attributes . persistence . impl . IDENT_5 . Builder IDENT_7 = com . amazon . IDENT_0 . attributes . persistence . impl . IDENT_5 . builder ( ) . METHOD_5 ( tableName ) ; if ( ( IDENT_8 ) != null ) { IDENT_7 . METHOD_6 ( IDENT_8 ) ; } if ( ( IDENT_9 ) != null ) { IDENT_7 . METHOD_7 ( IDENT_9 ) ; } if ( ( IDENT_10 ) != null ) { IDENT_7 . METHOD_8 ( IDENT_10 ) ; } IDENT_6 = IDENT_7 . build ( ) ; } com . amazon . IDENT_0 . services . IDENT_11 IDENT_12 = com . amazon . IDENT_0 . services . IDENT_11 . METHOD_9 ( ) . METHOD_10 ( ( ( IDENT_13 ) != null ? IDENT_13 : org . apache . http . impl . client . IDENT_14 . METHOD_11 ( ) ) ) . build ( ) ; return new com . amazon . IDENT_0 . module . METHOD_12 ( IDENT_12 , IDENT_6 ) ; }
org . junit . Assert . assertEquals ( IDENT_4 . get ( ) , response ) 