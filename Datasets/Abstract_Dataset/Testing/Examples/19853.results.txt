METHOD_0 ( ) { expect ( IDENT_0 . METHOD_1 ( org . apache . kafka . common . utils . IDENT_1 . METHOD_2 ( "a" . getBytes ( ) ) , 0 ) ) . andReturn ( null ) ; replay ( IDENT_0 ) ; store . init ( context , store ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( IDENT_2 , long ) { final long IDENT_3 = time . METHOD_3 ( ) ; try { final byte [ ] result = org . apache . kafka . streams . state . IDENT_4 . IDENT_5 . METHOD_4 ( ) . METHOD_1 ( METHOD_5 ( key ) , IDENT_6 ) ; if ( result == null ) { return null ; } return IDENT_7 . METHOD_6 ( result ) ; } finally { metrics . METHOD_7 ( IDENT_8 , IDENT_3 , time . METHOD_3 ( ) ) ; } }
org . junit . Assert . assertNull ( store . METHOD_1 ( "a" , 0 ) ) 