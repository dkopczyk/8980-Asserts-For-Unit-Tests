METHOD_0 ( ) { com . amazon . IDENT_0 . model . IDENT_1 IDENT_2 = com . amazon . IDENT_0 . model . IDENT_1 . builder ( ) . METHOD_1 ( IDENT_3 . IDENT_4 ) . METHOD_2 ( STRING_0 ) . METHOD_3 ( STRING_1 ) . build ( ) ; com . amazon . IDENT_0 . model . IDENT_5 IDENT_6 = com . amazon . IDENT_0 . model . IDENT_5 . builder ( ) . METHOD_1 ( IDENT_7 . IDENT_4 ) . METHOD_2 ( STRING_2 ) . METHOD_4 ( java . util . Collections . METHOD_5 ( STRING_0 , IDENT_2 ) ) . build ( ) ; java . util . Optional < com . amazon . IDENT_0 . model . Response > IDENT_8 = builder . METHOD_6 ( IDENT_6 ) . build ( ) ; com . amazon . IDENT_0 . model . IDENT_9 . IDENT_10 IDENT_11 = com . amazon . IDENT_0 . model . IDENT_9 . IDENT_10 . builder ( ) . METHOD_7 ( IDENT_6 ) . build ( ) ; com . amazon . IDENT_0 . model . Response response = com . amazon . IDENT_0 . model . Response . builder ( ) . METHOD_8 ( java . util . Collections . singletonList ( IDENT_11 ) ) . build ( ) ; "<AssertPlaceHolder>" ; } build ( ) { com . amazon . IDENT_0 . attributes . persistence . impl . IDENT_12 IDENT_13 = null ; if ( ( tableName ) != null ) { com . amazon . IDENT_0 . attributes . persistence . impl . IDENT_12 . Builder IDENT_14 = com . amazon . IDENT_0 . attributes . persistence . impl . IDENT_12 . builder ( ) . METHOD_9 ( tableName ) ; if ( ( IDENT_15 ) != null ) { IDENT_14 . METHOD_10 ( IDENT_15 ) ; } if ( ( IDENT_16 ) != null ) { IDENT_14 . METHOD_11 ( IDENT_16 ) ; } if ( ( IDENT_17 ) != null ) { IDENT_14 . METHOD_12 ( IDENT_17 ) ; } IDENT_13 = IDENT_14 . build ( ) ; } com . amazon . IDENT_0 . services . IDENT_18 IDENT_19 = com . amazon . IDENT_0 . services . IDENT_18 . METHOD_13 ( ) . METHOD_14 ( ( ( IDENT_20 ) != null ? IDENT_20 : org . apache . http . impl . client . IDENT_21 . METHOD_15 ( ) ) ) . build ( ) ; return new com . amazon . IDENT_0 . module . METHOD_16 ( IDENT_19 , IDENT_13 ) ; }
org . junit . Assert . assertEquals ( IDENT_8 . get ( ) , response ) 