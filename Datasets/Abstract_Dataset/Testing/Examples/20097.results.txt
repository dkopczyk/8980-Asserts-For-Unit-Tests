METHOD_0 ( ) { java . util . List < org . apache . IDENT_0 . metadata . model . IDENT_1 > IDENT_2 = METHOD_1 ( ) ; org . apache . IDENT_0 . metadata . filter . IDENT_3 filter = METHOD_2 ( IDENT_2 , STRING_0 ) ; byte [ ] bytes = org . apache . IDENT_0 . metadata . filter . IDENT_4 . serialize ( filter , org . apache . IDENT_0 . storage . hbase . common . IDENT_5 . IDENT_6 ) ; org . apache . IDENT_0 . metadata . filter . IDENT_3 IDENT_7 = org . apache . IDENT_0 . metadata . filter . IDENT_4 . METHOD_3 ( bytes , org . apache . IDENT_0 . storage . hbase . common . IDENT_5 . IDENT_6 ) ; int IDENT_8 = INT_0 ; int [ ] IDENT_9 = new int [ ] { 0 , 0 , 0 } ; java . util . Collection < org . apache . IDENT_0 . metadata . tuple . IDENT_10 > IDENT_11 = METHOD_4 ( IDENT_8 , IDENT_2 , IDENT_9 ) ; int match = METHOD_5 ( IDENT_11 , IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . util . Collection , org . apache . IDENT_0 . metadata . filter . IDENT_3 ) { int match = 0 ; for ( org . apache . IDENT_0 . metadata . tuple . IDENT_10 t : IDENT_11 ) { if ( filter . evaluate ( t , org . apache . IDENT_0 . storage . hbase . common . IDENT_5 . IDENT_12 . IDENT_6 ) ) { match ++ ; } } return match ; }
org . junit . Assert . assertEquals ( match , IDENT_9 [ 2 ] ) 