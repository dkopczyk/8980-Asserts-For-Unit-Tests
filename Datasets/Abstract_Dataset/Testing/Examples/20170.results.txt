METHOD_0 ( ) { java . lang . System . setProperty ( IDENT_0 . IDENT_1 , STRING_0 ) ; org . apache . logging . log4j . spi . IDENT_2 . init ( ) ; try { final java . lang . IDENT_3 < java . util . Map < java . lang . String , java . lang . String > > IDENT_4 = org . apache . logging . log4j . spi . IDENT_0 . METHOD_1 ( true ) ; "<AssertPlaceHolder>" ; } finally { java . lang . System . METHOD_2 ( IDENT_0 . IDENT_1 ) ; } } METHOD_1 ( boolean ) { if ( org . apache . logging . log4j . spi . IDENT_0 . IDENT_5 ) { return new java . lang . IDENT_6 < java . util . Map < java . lang . String , java . lang . String > > ( ) { @ org . apache . logging . log4j . spi . Override MOD_0 java . util . Map < java . lang . String , java . lang . String > METHOD_3 ( final java . util . Map < java . lang . String , java . lang . String > IDENT_7 ) { return ( IDENT_7 != null ) && IDENT_8 ? java . util . Collections . METHOD_4 ( new java . util . HashMap ( IDENT_7 ) ) : null ; } } ; } return new java . lang . METHOD_5 ( ) ; }
org . junit . Assert . assertTrue ( ( IDENT_4 instanceof java . lang . IDENT_6 < ? > ) ) 