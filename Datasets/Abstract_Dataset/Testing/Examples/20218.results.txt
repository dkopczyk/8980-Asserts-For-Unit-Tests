METHOD_0 ( ) { final java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 } ; for ( final java . lang . String size : IDENT_0 ) { final org . apache . logging . log4j . core . IDENT_1 . IDENT_2 . action . IDENT_3 condition = org . apache . logging . log4j . core . IDENT_1 . IDENT_2 . action . IDENT_3 . METHOD_1 ( size ) ; final org . apache . logging . log4j . core . IDENT_1 . IDENT_2 . action . IDENT_4 IDENT_5 = new org . apache . logging . log4j . core . IDENT_1 . IDENT_2 . action . METHOD_2 ( ) ; IDENT_5 . size = ( condition . METHOD_3 ( ) ) + 1 ; "<AssertPlaceHolder>" ; } } accept ( java . lang . String , java . lang . Object , com . fasterxml . jackson . core . IDENT_6 ) { try { IDENT_7 . METHOD_4 ( key , java . lang . String . valueOf ( value ) ) ; } catch ( final java . lang . Exception ex ) { throw new java . lang . IllegalStateException ( ( STRING_3 + key ) , ex ) ; } }
org . junit . Assert . assertTrue ( condition . accept ( null , null , IDENT_5 ) ) 