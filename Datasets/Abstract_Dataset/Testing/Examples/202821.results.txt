METHOD_0 ( ) { final double IDENT_0 = java . lang . Math . METHOD_1 ( 1.0 ) ; final double IDENT_1 = 2 * ( Math . IDENT_2 ) ; for ( double a = - 15 ; a <= 15 ; a += FLOAT_0 ) { for ( double IDENT_3 = - 15 ; IDENT_3 <= 15 ; IDENT_3 += 1 ) { final double IDENT_4 = org . apache . commons . math3 . util . IDENT_5 . METHOD_2 ( a , IDENT_3 ) ; final double offset = IDENT_3 - ( Math . IDENT_2 ) ; final double r = org . apache . commons . math3 . util . IDENT_5 . METHOD_3 ( a , IDENT_1 , offset ) ; "<AssertPlaceHolder>" ; } } }
org . junit . Assert . assertEquals ( IDENT_4 , ( r + offset ) , IDENT_0 ) 