METHOD_0 ( ) { final java . lang . String [ ] options = new java . lang . String [ ] { STRING_0 } ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String [ ] ) { if ( ( ( options == null ) || ( ( options . length ) == 0 ) ) || ( ( options [ 0 ] ) == null ) ) { return new org . apache . logging . log4j . core . time . internal . format . METHOD_2 ( org . apache . logging . log4j . core . time . internal . format . METHOD_2 . IDENT_0 . IDENT_1 , java . util . IDENT_2 . METHOD_3 ( ) ) ; } final java . util . IDENT_2 IDENT_3 ; if ( ( options . length ) > 1 ) { if ( ( options [ 1 ] ) != null ) { java . lang . String IDENT_4 = options [ 1 ] ; if ( ( IDENT_4 . startsWith ( STRING_1 ) ) || ( IDENT_4 . startsWith ( STRING_2 ) ) ) { IDENT_4 = STRING_3 + IDENT_4 ; } IDENT_3 = java . util . IDENT_2 . METHOD_4 ( IDENT_4 ) ; } else { IDENT_3 = java . util . IDENT_2 . METHOD_3 ( ) ; } } else { IDENT_3 = java . util . IDENT_2 . METHOD_3 ( ) ; } final java . lang . String IDENT_5 = options [ 0 ] ; final org . apache . logging . log4j . core . time . internal . format . METHOD_2 . IDENT_0 IDENT_6 = org . apache . logging . log4j . core . time . internal . format . METHOD_2 . IDENT_0 . METHOD_5 ( IDENT_5 ) ; if ( IDENT_6 != null ) { final int [ ] IDENT_7 = org . apache . logging . log4j . core . time . internal . format . METHOD_2 . IDENT_0 . METHOD_6 ( IDENT_5 ) ; final int IDENT_8 = METHOD_6 [ 0 ] ; final int IDENT_9 = METHOD_6 [ 1 ] ; final int IDENT_10 = IDENT_9 - IDENT_8 ; return new org . apache . logging . log4j . core . time . internal . format . METHOD_2 ( IDENT_6 , IDENT_3 , IDENT_10 ) ; } final org . apache . logging . log4j . core . time . internal . format . METHOD_2 . IDENT_0 type = org . apache . logging . log4j . core . time . internal . format . METHOD_2 . IDENT_0 . METHOD_7 ( IDENT_5 ) ; return type == null ? null : new org . apache . logging . log4j . core . time . internal . format . METHOD_2 ( type , IDENT_3 ) ; }
org . junit . Assert . assertNull ( STRING_0 , org . apache . logging . log4j . core . time . internal . format . METHOD_2 . METHOD_1 ( options ) ) 