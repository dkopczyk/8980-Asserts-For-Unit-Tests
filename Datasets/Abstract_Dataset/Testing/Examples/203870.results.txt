METHOD_0 ( ) { final double [ ] t = new double [ ] { Double . IDENT_0 , 1 , 5 , 2 , 1 , 0 , 9 , 1 , Double . IDENT_0 , 2 , 4 , 6 , 8 , 9 , 10 , 12 , 1 , 7 } ; for ( int to = 1 ; to < ( t . length ) ; to ++ ) for ( int from = 0 ; from < to ; from ++ ) { final int [ ] IDENT_1 = new int [ t . length ] ; for ( int i = IDENT_1 . length ; ( i OP_0 ) != 0 ; ) IDENT_1 [ i ] = i ; it . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_1 ( IDENT_1 , t , t , from , to , true ) ; for ( int i = to - 1 ; ( i OP_0 ) != from ; ) "<AssertPlaceHolder>" ; } }
org . junit . Assert . assertTrue ( ( ( java . lang . Double . compare ( t [ IDENT_1 [ i ] ] , t [ IDENT_1 [ ( i + 1 ) ] ] ) ) <= 0 ) ) 