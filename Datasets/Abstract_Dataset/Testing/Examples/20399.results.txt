METHOD_0 ( ) { org . apache . maven . project . IDENT_0 IDENT_1 = METHOD_1 ( ) ; org . apache . maven . project . IDENT_0 IDENT_2 = METHOD_2 ( IDENT_1 ) ; org . apache . maven . project . IDENT_0 IDENT_3 = METHOD_3 ( IDENT_2 ) ; org . apache . maven . project . IDENT_0 IDENT_4 = METHOD_4 ( IDENT_2 ) ; java . util . List < org . apache . maven . project . IDENT_0 > IDENT_5 = java . util . Arrays . asList ( IDENT_2 , IDENT_3 , IDENT_4 ) ; METHOD_5 ( IDENT_5 ) ; rule . execute ( helper ) ; "<AssertPlaceHolder>" ; } execute ( org . apache . maven . IDENT_6 . rule . api . IDENT_7 ) { org . apache . maven . plugin . logging . IDENT_8 log = helper . METHOD_6 ( ) ; try { org . apache . maven . project . IDENT_0 project = ( ( org . apache . maven . project . IDENT_0 ) ( helper . evaluate ( STRING_0 ) ) ) ; org . apache . maven . IDENT_9 . IDENT_10 session = ( ( org . apache . maven . IDENT_9 . IDENT_10 ) ( helper . evaluate ( STRING_1 ) ) ) ; java . lang . String target = ( ( java . lang . String ) ( helper . evaluate ( STRING_2 ) ) ) ; java . lang . String IDENT_11 = ( ( java . lang . String ) ( helper . evaluate ( STRING_3 ) ) ) ; org . apache . maven . IDENT_12 . resolver . IDENT_13 resolver = ( ( org . apache . maven . IDENT_12 . resolver . IDENT_13 ) ( helper . METHOD_7 ( org . apache . maven . IDENT_12 . resolver . IDENT_13 . class ) ) ) ; org . apache . maven . IDENT_9 . IDENT_14 IDENT_15 = ( ( org . apache . maven . IDENT_9 . IDENT_14 ) ( helper . METHOD_7 ( org . apache . maven . IDENT_9 . IDENT_14 . class ) ) ) ; log . info ( ( STRING_0 2 + target ) ) ; log . info ( ( STRING_4 + IDENT_11 ) ) ; log . info ( ( STRING_5 + project ) ) ; log . info ( ( STRING_6 + IDENT_15 ) ) ; log . info ( ( STRING_0 0 + session ) ) ; log . info ( ( STRING_0 1 + resolver ) ) ; if ( this . IDENT_16 ) { throw new org . apache . maven . IDENT_6 . rule . api . METHOD_8 ( STRING_7 ) ; } } catch ( org . IDENT_17 . IDENT_18 . component . repository . exception . IDENT_19 e ) { throw new org . apache . maven . IDENT_6 . rule . api . METHOD_8 ( ( STRING_8 + ( e . METHOD_9 ( ) ) ) , e ) ; } catch ( org . IDENT_17 . IDENT_18 . component . IDENT_20 . expression . IDENT_21 e ) { throw new org . apache . maven . IDENT_6 . rule . api . METHOD_8 ( ( STRING_9 + ( e . METHOD_9 ( ) ) ) , e ) ; } }
org . junit . Assert . assertTrue ( true ) 