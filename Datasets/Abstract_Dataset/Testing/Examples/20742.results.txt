METHOD_0 ( ) { final java . util . Map < java . lang . String , java . util . Map < java . lang . String , java . lang . Object > > value = new java . util . HashMap ( ) ; final java . util . Map < java . lang . String , java . lang . Object > IDENT_0 = new java . util . HashMap ( ) ; IDENT_0 . put ( "bar" , STRING_0 ) ; value . put ( "foo" , IDENT_0 ) ; final org . apache . IDENT_1 . query . IDENT_2 IDENT_3 = new org . apache . IDENT_1 . query . METHOD_1 ( "foo" , STRING_1 ) ; final org . apache . IDENT_1 . data . IDENT_4 row = new org . apache . IDENT_1 . data . METHOD_2 ( new org . apache . IDENT_1 . data . METHOD_3 ( new org . apache . IDENT_1 . query . METHOD_1 [ ] { IDENT_3 } ) , new java . lang . Object [ ] { value } ) ; final java . lang . Object v1 = function . evaluate ( row , new java . lang . Object [ ] { STRING_2 } , IDENT_3 ) ; "<AssertPlaceHolder>" ; } toString ( ) { return METHOD_4 ( ) ; }
org . junit . Assert . assertEquals ( STRING_0 , v1 . toString ( ) ) 