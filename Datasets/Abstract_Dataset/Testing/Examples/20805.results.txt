METHOD_0 ( ) { java . io . File IDENT_0 = new java . io . File ( IDENT_1 , STRING_0 ) ; org . apache . IDENT_2 . integration . utils . TestUtils . write ( IDENT_0 , org . apache . IDENT_2 . common . cli . IDENT_3 . IDENT_4 ) ; java . io . File IDENT_5 = new java . io . File ( IDENT_6 , STRING_1 ) ; org . apache . IDENT_2 . integration . utils . TestUtils . write ( IDENT_5 , org . apache . IDENT_2 . common . cli . IDENT_3 . IDENT_7 ) ; METHOD_1 ( org . apache . IDENT_2 . common . cli . IDENT_8 , IDENT_9 , java . util . Optional . of ( STRING_2 ) ) ; METHOD_2 ( org . apache . IDENT_2 . common . cli . IDENT_8 , java . util . Optional . of ( IDENT_0 ) , java . util . Optional . of ( STRING_2 ) , java . util . Optional . empty ( ) , java . util . Optional . empty ( ) , java . util . Optional . empty ( ) ) ; byte [ ] expected = IDENT_10 . INSTANCE . METHOD_3 ( org . apache . IDENT_2 . common . cli . IDENT_3 . IDENT_11 ) ; byte [ ] actual = IDENT_10 . INSTANCE . METHOD_3 ( METHOD_4 ( METHOD_5 ( org . apache . IDENT_2 . common . cli . IDENT_8 , java . util . Optional . of ( STRING_2 ) ) , 1 ) ) ; "<AssertPlaceHolder>" ; } of ( java . lang . String ) { if ( IDENT_12 . METHOD_6 ( ) ) { return new org . apache . IDENT_2 . IDENT_13 . service . IDENT_14 . IDENT_15 < > ( this , value ) ; } return new org . apache . IDENT_2 . IDENT_13 . service . IDENT_14 . IDENT_15 < > ( this , null ) ; }
org . junit . Assert . assertThat ( actual , org . hamcrest . CoreMatchers . equalTo ( expected ) ) 