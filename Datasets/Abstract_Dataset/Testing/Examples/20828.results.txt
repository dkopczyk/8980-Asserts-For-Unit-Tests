METHOD_0 ( ) { final java . lang . String writer = STRING_0 ; final java . lang . String IDENT_0 = STRING_1 ; org . apache . IDENT_1 . common . configuration . writer . IDENT_2 config = METHOD_1 ( writer , IDENT_0 , org . apache . IDENT_1 . common . field . IDENT_3 . IDENT_4 ) ; org . apache . IDENT_1 . common . field . IDENT_5 converter = org . apache . IDENT_1 . common . field . IDENT_6 . create ( IDENT_0 , config ) ; "<AssertPlaceHolder>" ; } create ( java . lang . String , org . apache . IDENT_1 . common . configuration . writer . IDENT_2 ) { org . apache . IDENT_1 . common . field . IDENT_5 result = null ; java . lang . String IDENT_7 = config . METHOD_2 ( IDENT_8 ) ; if ( org . apache . commons . lang . StringUtils . METHOD_3 ( IDENT_7 ) ) { try { result = org . apache . IDENT_1 . common . field . IDENT_6 . valueOf ( IDENT_7 ) ; } catch ( java . lang . IllegalArgumentException e ) { org . apache . IDENT_1 . common . field . IDENT_6 . LOG . error ( STRING_2 , IDENT_7 , org . apache . IDENT_1 . common . field . IDENT_6 . values ( ) , org . apache . commons . lang3 . exception . IDENT_9 . METHOD_4 ( e ) ) ; } } if ( result == null ) { result = org . apache . IDENT_1 . common . field . IDENT_6 . IDENT_10 ; } org . apache . IDENT_1 . common . field . IDENT_6 . LOG . debug ( STRING_3 , IDENT_8 , IDENT_7 , org . apache . commons . lang . IDENT_11 . METHOD_5 ( result , STRING_4 ) ) ; return result ; }
org . junit . Assert . assertEquals ( IDENT_6 . IDENT_10 , converter ) 