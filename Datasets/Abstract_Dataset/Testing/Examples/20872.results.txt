METHOD_0 ( ) { long IDENT_0 = TimeUnit . IDENT_1 . METHOD_1 ( 1 ) ; org . apache . IDENT_2 . hbase . client . IDENT_3 . client . METHOD_2 ( IDENT_4 , IDENT_5 , IDENT_6 . IDENT_7 , IDENT_0 ) ; org . apache . IDENT_2 . hbase . client . IDENT_3 . client . METHOD_2 ( IDENT_8 , IDENT_9 , IDENT_6 . IDENT_7 , IDENT_0 ) ; org . apache . IDENT_2 . hbase . client . IDENT_3 . client . METHOD_3 ( ) ; org . apache . IDENT_2 . hbase . IDENT_10 . mapper . IDENT_11 criteria = new org . apache . IDENT_2 . hbase . IDENT_10 . mapper . METHOD_4 ( ) ; criteria . METHOD_5 ( IDENT_12 . IDENT_13 ) ; java . lang . Thread . sleep ( TimeUnit . IDENT_14 . METHOD_1 ( 2 ) ) ; org . apache . IDENT_2 . hbase . client . IDENT_3 . client . METHOD_6 ( IDENT_4 , criteria ) ; org . apache . IDENT_2 . hbase . client . IDENT_3 . client . METHOD_6 ( IDENT_8 , criteria ) ; org . apache . hadoop . hbase . client . Result [ ] results = org . apache . IDENT_2 . hbase . client . IDENT_3 . client . METHOD_7 ( ) ; java . util . List < org . apache . IDENT_2 . hbase . IDENT_15 > widgets = java . util . Arrays . stream ( results ) . map ( ( r ) -> METHOD_8 ( r ) ) . filter ( ( IDENT_16 ) -> IDENT_16 != null ) . collect ( java . util . stream . IDENT_17 . toList ( ) ) ; "<AssertPlaceHolder>" ; } size ( ) { int size = 0 ; for ( java . util . Map m : IDENT_18 ) { size += m . size ( ) ; } return size ; }
org . junit . Assert . assertEquals ( 0 , widgets . size ( ) ) 