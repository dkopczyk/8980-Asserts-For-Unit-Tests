METHOD_0 ( ) { org . apache . solr . common . IDENT_0 IDENT_1 = new org . apache . solr . common . METHOD_1 ( ) ; IDENT_1 . METHOD_2 ( IDENT_2 . IDENT_3 , 1.0 ) ; IDENT_1 . METHOD_2 ( Constants . IDENT_4 , STRING_0 ) ; IDENT_1 . METHOD_2 ( Constants . IDENT_5 , STRING_1 ) ; IDENT_1 . METHOD_2 ( STRING_2 , "value" ) ; org . apache . IDENT_6 . indexing . dao . update . Document IDENT_7 = new org . apache . IDENT_6 . indexing . dao . update . Document ( new java . util . HashMap < java . lang . String , java . lang . Object > ( ) { { put ( STRING_2 , "value" ) ; put ( Constants . IDENT_4 , STRING_0 ) ; put ( Constants . IDENT_5 , STRING_1 ) ; } } , STRING_0 , STRING_1 , 0L ) ; org . apache . IDENT_6 . indexing . dao . update . Document IDENT_8 = org . apache . IDENT_6 . solr . dao . IDENT_9 . METHOD_3 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . apache . solr . common . METHOD_1 ) { java . util . Map < java . lang . String , java . lang . Object > document = new java . util . HashMap ( ) ; IDENT_1 . METHOD_4 ( ) . stream ( ) . filter ( ( name ) -> ! ( name . equals ( IDENT_2 . IDENT_3 ) ) ) . METHOD_5 ( ( name ) -> document . put ( name , IDENT_1 . METHOD_6 ( name ) ) ) ; org . apache . IDENT_6 . solr . dao . IDENT_9 . METHOD_7 ( IDENT_1 , document ) ; org . apache . IDENT_6 . solr . dao . IDENT_9 . METHOD_8 ( IDENT_1 , document ) ; return new org . apache . IDENT_6 . indexing . dao . update . Document ( document , ( ( java . lang . String ) ( IDENT_1 . METHOD_6 ( Constants . IDENT_4 ) ) ) , ( ( java . lang . String ) ( IDENT_1 . METHOD_6 ( Constants . IDENT_5 ) ) ) , 0L ) ; }
org . junit . Assert . assertEquals ( IDENT_7 , IDENT_8 ) 