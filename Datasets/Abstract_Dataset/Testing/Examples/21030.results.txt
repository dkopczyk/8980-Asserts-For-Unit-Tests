METHOD_0 ( ) { IDENT_0 . METHOD_1 ( java . util . Arrays . asList ( STRING_0 ) ) ; java . nio . ByteBuffer buffer = java . nio . ByteBuffer . METHOD_2 ( 100 ) . put ( org . apache . IDENT_1 . IDENT_2 . hbase . IDENT_3 . METHOD_3 ( IDENT_0 . METHOD_4 ( ) , org . apache . IDENT_1 . IDENT_2 . hbase . IDENT_4 . IDENT_5 ) ) . put ( IDENT_0 . METHOD_5 ( ) . getBytes ( ) ) . put ( IDENT_0 . METHOD_6 ( ) . getBytes ( ) ) . put ( STRING_0 . getBytes ( ) ) . METHOD_7 ( INT_0 ) ; buffer . METHOD_8 ( ) ; final byte [ ] expected = new byte [ buffer . METHOD_9 ( ) ] ; buffer . get ( expected , 0 , buffer . METHOD_9 ( ) ) ; byte [ ] actual = IDENT_6 . METHOD_10 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( org . apache . IDENT_7 . tuple . IDENT_8 ) { org . apache . IDENT_1 . IDENT_2 . IDENT_9 IDENT_0 = ( ( org . apache . IDENT_1 . IDENT_2 . IDENT_9 ) ( tuple . METHOD_11 ( STRING_1 ) ) ) ; return IDENT_6 . METHOD_10 ( IDENT_0 ) ; }
org . junit . Assert . assertTrue ( java . util . Arrays . equals ( expected , actual ) ) 