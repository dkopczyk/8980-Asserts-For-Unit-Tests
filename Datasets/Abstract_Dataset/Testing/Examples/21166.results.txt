METHOD_0 ( ) { final java . util . Set < java . net . URL > IDENT_0 = new java . util . HashSet ( ) ; java . net . URL IDENT_1 = java . nio . file . IDENT_2 . get ( STRING_0 ) . METHOD_1 ( ) . METHOD_2 ( ) ; IDENT_0 . add ( IDENT_1 ) ; java . lang . String IDENT_3 = org . apache . nifi . util . file . IDENT_4 . IDENT_5 . METHOD_3 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . util . Set ) { java . util . List < java . lang . String > IDENT_6 = IDENT_0 . stream ( ) . map ( Object :: toString ) . collect ( java . util . stream . IDENT_7 . toList ( ) ) ; java . lang . StringBuffer IDENT_8 = new java . lang . StringBuffer ( ) ; java . util . Collections . METHOD_4 ( IDENT_6 ) ; try { java . security . IDENT_9 IDENT_10 = java . security . IDENT_9 . getInstance ( STRING_1 ) ; IDENT_6 . METHOD_5 ( ( url ) -> { IDENT_8 . append ( url ) . append ( STRING_2 ) . append ( METHOD_6 ( url ) ) . append ( STRING_3 ) ; } ) ; byte [ ] IDENT_11 = IDENT_8 . toString ( ) . getBytes ( STRING_4 ) ; byte [ ] IDENT_12 = IDENT_10 . METHOD_7 ( IDENT_11 ) ; return javax . xml . IDENT_13 . IDENT_14 . METHOD_8 ( IDENT_12 ) ; } catch ( java . security . IDENT_15 | java . io . IDENT_16 e ) { org . apache . nifi . util . file . IDENT_4 . IDENT_5 . LOGGER . error ( STRING_5 , new java . lang . Object [ ] { IDENT_0 , e } ) ; return null ; } }
org . junit . Assert . assertNotNull ( IDENT_3 ) 