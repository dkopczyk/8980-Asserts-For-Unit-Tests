METHOD_0 ( ) { org . apache . nifi . IDENT_0 . IDENT_1 IDENT_2 = controller . METHOD_1 ( ) . METHOD_2 ( STRING_0 ) ; IDENT_2 . setName ( STRING_0 ) ; org . apache . nifi . controller . service . IDENT_3 cs = controller . METHOD_1 ( ) . METHOD_3 ( STRING_1 , STRING_2 , IDENT_4 . METHOD_4 ( ) . METHOD_5 ( ) , null , false , true ) ; IDENT_2 . METHOD_6 ( cs ) ; controller . METHOD_1 ( ) . METHOD_7 ( ) . METHOD_8 ( IDENT_2 ) ; controller . METHOD_1 ( ) . METHOD_7 ( ) . METHOD_9 ( IDENT_2 ) ; IDENT_2 . METHOD_10 ( true ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( java . util . Map ) { final java . util . Set < org . apache . nifi . web . api . dto . IDENT_5 > IDENT_6 = new java . util . HashSet ( ) ; for ( final Map . Entry < org . apache . nifi . components . IDENT_7 , java . lang . String > entry : IDENT_8 . entrySet ( ) ) { final org . apache . nifi . components . IDENT_7 IDENT_9 = entry . getKey ( ) ; if ( ( IDENT_9 . METHOD_11 ( ) ) != null ) { final java . lang . String IDENT_10 = entry . getValue ( ) ; if ( IDENT_10 != null ) { final org . apache . nifi . controller . service . IDENT_3 IDENT_11 = IDENT_12 . METHOD_1 ( ) . METHOD_12 ( IDENT_10 ) ; if ( IDENT_11 != null ) { IDENT_6 . add ( IDENT_13 . METHOD_13 ( IDENT_11 ) ) ; final java . util . Set < org . apache . nifi . web . api . dto . IDENT_5 > IDENT_14 = METHOD_10 ( IDENT_11 . METHOD_14 ( ) ) ; IDENT_6 . addAll ( IDENT_14 ) ; } } } } return IDENT_6 ; }
org . junit . Assert . assertTrue ( IDENT_2 . METHOD_10 ( true ) . isEmpty ( ) ) 