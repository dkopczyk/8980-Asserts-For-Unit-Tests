METHOD_0 ( ) { org . junit . IDENT_0 . METHOD_1 ( METHOD_2 ( ) ) ; final org . apache . nifi . IDENT_1 . IDENT_2 config = org . apache . nifi . IDENT_1 . IDENT_3 . METHOD_3 ( ) ; config . METHOD_4 ( 3 , TimeUnit . IDENT_4 ) ; org . apache . nifi . IDENT_1 . IDENT_3 . IDENT_5 IDENT_6 = new org . apache . nifi . IDENT_1 . IDENT_3 . METHOD_5 ( config , org . apache . nifi . IDENT_1 . IDENT_3 . IDENT_7 ) ; IDENT_6 . METHOD_6 ( METHOD_7 ( ) , null , null , null ) ; final java . util . Map < java . lang . String , java . lang . String > attributes = new java . util . HashMap ( ) ; final org . apache . nifi . IDENT_1 . IDENT_8 builder = new org . apache . nifi . IDENT_1 . IDENT_9 . Builder ( ) ; builder . METHOD_8 ( java . lang . System . currentTimeMillis ( ) ) ; builder . METHOD_9 ( IDENT_10 . IDENT_11 ) ; builder . METHOD_10 ( STRING_0 ) ; attributes . put ( STRING_1 , STRING_2 ) ; builder . METHOD_11 ( org . apache . nifi . IDENT_1 . IDENT_12 . METHOD_12 ( INT_0 , INT_1 , attributes ) ) ; builder . METHOD_13 ( STRING_3 ) ; builder . METHOD_14 ( STRING_4 ) ; final org . apache . nifi . IDENT_1 . IDENT_13 record = builder . build ( ) ; final java . util . concurrent . IDENT_14 exec = java . util . concurrent . IDENT_15 . METHOD_15 ( 10 ) ; final java . util . List < java . util . concurrent . IDENT_16 < ? > > IDENT_17 = new java . util . ArrayList ( ) ; for ( int i = 0 ; i < INT_2 ; i ++ ) { IDENT_17 . add ( exec . METHOD_16 ( new java . lang . METHOD_17 ( ) { @ org . apache . nifi . IDENT_1 . Override public void run ( ) { IDENT_6 . METHOD_18 ( record ) ; } } ) ) ; } for ( java . util . concurrent . IDENT_16 < ? > future : IDENT_17 ) { while ( ! ( future . METHOD_19 ( ) ) ) { java . lang . Thread . sleep ( 10 ) ; } } org . apache . nifi . IDENT_1 . serialization . IDENT_18 IDENT_19 = IDENT_6 . METHOD_20 ( ) [ 0 ] ; METHOD_21 ( IDENT_19 . METHOD_22 ( ) , ( ( ( org . apache . nifi . IDENT_1 . IDENT_3 . IDENT_20 ) + 15 ) + ( org . apache . nifi . IDENT_1 . IDENT_3 . IDENT_21 ) ) , STRING_5 , STRING_6 ) ; IDENT_6 . METHOD_23 ( ) ; final java . io . File IDENT_22 = config . METHOD_24 ( ) . values ( ) . iterator ( ) . next ( ) ; "<AssertPlaceHolder>" ; } METHOD_25 ( java . io . File , java . lang . Boolean ) { java . io . File [ ] IDENT_23 = IDENT_22 . METHOD_26 ( ) ; long IDENT_24 = 0 ; org . junit . Assert . assertNotNull ( IDENT_23 ) ; for ( final java . io . File file : IDENT_23 ) { if ( file . METHOD_27 ( ) ) { try ( org . apache . nifi . IDENT_1 . serialization . IDENT_25 reader = org . apache . nifi . IDENT_1 . serialization . IDENT_26 . METHOD_28 ( file , null , INT_3 ) ) { org . apache . nifi . IDENT_1 . IDENT_13 r ; org . apache . nifi . IDENT_1 . IDENT_13 IDENT_27 = null ; while ( ( r = reader . METHOD_29 ( ) ) != null ) { if ( IDENT_28 ) { org . junit . Assert . assertTrue ( ( ( IDENT_24 ++ ) == ( r . METHOD_30 ( ) ) ) ) ; } else { org . junit . Assert . assertTrue ( ( ( IDENT_24 ++ ) <= ( r . METHOD_30 ( ) ) ) ) ; } } } } } return IDENT_24 ; }
org . junit . Assert . assertTrue ( ( ( METHOD_25 ( IDENT_22 , false ) ) < INT_2 ) ) 