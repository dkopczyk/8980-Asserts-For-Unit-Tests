METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final java . lang . String IDENT_1 = STRING_1 ; final java . lang . String IDENT_2 = STRING_2 ; final java . lang . String msg = ( IDENT_0 + IDENT_1 ) + IDENT_2 ; final byte [ ] input = msg . getBytes ( IDENT_3 . UTF_8 ) ; java . util . List < org . apache . nifi . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 > IDENT_9 = new java . util . ArrayList ( ) ; for ( byte b : input ) { if ( IDENT_10 . process ( b ) ) { IDENT_9 . add ( IDENT_10 . METHOD_1 ( ) ) ; } } "<AssertPlaceHolder>" ; } size ( ) { return bytes . length ; }
org . junit . Assert . assertEquals ( 3 , IDENT_9 . size ( ) ) 