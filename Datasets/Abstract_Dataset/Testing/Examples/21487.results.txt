METHOD_0 ( ) { try { parser = new org . apache . olingo . odata2 . jpa . processor . core . METHOD_1 ( mock ( STRING_0 ) ) ; org . apache . olingo . odata2 . api . uri . IDENT_0 IDENT_1 = parser . METHOD_2 ( ( - 1 ) , ( - 1 ) ) ; "<AssertPlaceHolder>" ; } catch ( org . apache . olingo . odata2 . jpa . processor . api . exception . IDENT_2 e ) { org . junit . Assert . fail ( ( ( ( org . apache . olingo . odata2 . jpa . processor . core . common . IDENT_3 . IDENT_4 ) + ( e . getMessage ( ) ) ) + ( org . apache . olingo . odata2 . jpa . processor . core . common . IDENT_3 . IDENT_5 ) ) ) ; } } METHOD_2 ( int , int ) { org . apache . olingo . odata2 . api . uri . IDENT_0 IDENT_1 = null ; if ( ( ( IDENT_6 == IDENT_7 ) || ( IDENT_6 > IDENT_7 ) ) || ( IDENT_6 < 0 ) ) { return IDENT_1 ; } try { IDENT_8 = METHOD_3 ( ) ; java . util . List < org . apache . olingo . odata2 . api . uri . IDENT_9 > IDENT_10 = context . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) ; java . util . List < org . apache . olingo . odata2 . api . uri . IDENT_9 > IDENT_11 = IDENT_10 . METHOD_7 ( IDENT_6 , IDENT_7 ) ; IDENT_1 = org . apache . olingo . odata2 . api . uri . IDENT_12 . parse ( IDENT_8 , IDENT_11 , java . util . Collections . < java . lang . String , java . lang . String > METHOD_8 ( ) ) ; } catch ( org . apache . olingo . odata2 . api . exception . IDENT_13 e ) { throw org . apache . olingo . odata2 . jpa . processor . api . exception . IDENT_2 . METHOD_9 ( IDENT_2 . IDENT_14 . METHOD_10 ( e . getMessage ( ) ) , e ) ; } return IDENT_1 ; }
org . junit . Assert . assertNull ( IDENT_1 ) 