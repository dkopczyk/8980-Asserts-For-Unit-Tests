METHOD_0 ( ) { try { java . lang . reflect . Method method = org . apache . olingo . odata2 . jpa . processor . core . IDENT_0 . data . IDENT_1 . class . METHOD_1 ( STRING_0 , ( ( java . lang . Class < ? > [ ] ) ( null ) ) ) ; java . lang . Object output = ( ( java . lang . Object ) ( org . apache . olingo . odata2 . jpa . processor . core . IDENT_0 . data . IDENT_2 . METHOD_2 ( method , this , "" ) ) ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . IDENT_3 e ) { org . junit . Assert . fail ( ( ( ( org . apache . olingo . odata2 . jpa . processor . core . common . IDENT_4 . IDENT_5 ) + ( e . getMessage ( ) ) ) + ( org . apache . olingo . odata2 . jpa . processor . core . common . IDENT_4 . IDENT_6 ) ) ) ; } catch ( java . lang . IDENT_7 e ) { org . junit . Assert . fail ( ( ( ( org . apache . olingo . odata2 . jpa . processor . core . common . IDENT_4 . IDENT_5 ) + ( e . getMessage ( ) ) ) + ( org . apache . olingo . odata2 . jpa . processor . core . common . IDENT_4 . IDENT_6 ) ) ) ; } catch ( org . apache . olingo . odata2 . jpa . processor . api . exception . IDENT_8 e ) { org . junit . Assert . fail ( ( ( ( org . apache . olingo . odata2 . jpa . processor . core . common . IDENT_4 . IDENT_5 ) + ( e . getMessage ( ) ) ) + ( org . apache . olingo . odata2 . jpa . processor . core . common . IDENT_4 . IDENT_6 ) ) ) ; } } METHOD_2 ( java . lang . reflect . Method , java . lang . Object , java . lang . String ) { java . lang . Object IDENT_9 = null ; if ( method == null ) { return null ; } try { method . METHOD_3 ( true ) ; java . lang . Class < ? > IDENT_10 = method . METHOD_4 ( ) ; if ( IDENT_10 . equals ( char [ ] . class ) ) { char [ ] ch = ( ( char [ ] ) ( method . invoke ( entity ) ) ) ; if ( ch != null ) { IDENT_9 = ( ( java . lang . String ) ( java . lang . String . valueOf ( ( ( char [ ] ) ( method . invoke ( entity ) ) ) ) ) ) ; } } else if ( IDENT_10 . equals ( org . apache . olingo . odata2 . jpa . processor . core . IDENT_0 . data . IDENT_11 [ ] . class ) ) { IDENT_9 = ( ( java . lang . String ) ( org . apache . olingo . odata2 . jpa . processor . core . IDENT_0 . data . IDENT_2 . toString ( ( ( java . lang . IDENT_11 [ ] ) ( method . invoke ( entity ) ) ) ) ) ) ; } else if ( IDENT_10 . equals ( char . class ) ) { char c = ( ( java . lang . IDENT_11 ) ( method . invoke ( entity ) ) ) ; if ( c != STRING_1 ) { IDENT_9 = ( ( java . lang . String ) ( java . lang . String . valueOf ( c ) ) ) ; } } else if ( IDENT_10 . equals ( org . apache . olingo . odata2 . jpa . processor . core . IDENT_0 . data . IDENT_11 . class ) ) { java . lang . IDENT_11 c = ( ( java . lang . IDENT_11 ) ( method . invoke ( entity ) ) ) ; if ( c != null ) { IDENT_9 = org . apache . olingo . odata2 . jpa . processor . core . IDENT_0 . data . IDENT_2 . toString ( new java . lang . IDENT_11 [ ] { c } ) ; } } else if ( IDENT_10 . equals ( java . sql . IDENT_12 . class ) ) { IDENT_9 = org . apache . olingo . odata2 . jpa . processor . core . IDENT_0 . data . IDENT_2 . getBytes ( ( ( java . sql . IDENT_12 ) ( method . invoke ( entity ) ) ) ) ; } else if ( IDENT_10 . equals ( java . sql . IDENT_13 . class ) ) { IDENT_9 = org . apache . olingo . odata2 . jpa . processor . core . IDENT_0 . data . IDENT_2 . getString ( ( ( java . sql . IDENT_13 ) ( method . invoke ( entity ) ) ) ) ; } else { if ( ( method . METHOD_5 ( ) . length ) > 0 ) { IDENT_9 = method . invoke ( entity , IDENT_14 ) ; } else { IDENT_9 = method . invoke ( entity ) ; } } } catch ( java . lang . IDENT_15 e ) { throw org . apache . olingo . odata2 . jpa . processor . api . exception . IDENT_8 . METHOD_6 ( IDENT_8 . IDENT_16 , e ) ; } catch ( java . lang . IllegalArgumentException e ) { throw org . apache . olingo . odata2 . jpa . processor . api . exception . IDENT_8 . METHOD_6 ( IDENT_8 . IDENT_16 , e ) ; } catch ( java . lang . reflect . IDENT_17 e ) { throw org . apache . olingo . odata2 . jpa . processor . api . exception . IDENT_8 . METHOD_6 ( IDENT_8 . IDENT_16 , e ) ; } catch ( java . lang . IDENT_7 e ) { throw org . apache . olingo . odata2 . jpa . processor . api . exception . IDENT_8 . METHOD_6 ( IDENT_8 . IDENT_16 , e ) ; } return IDENT_9 ; }
org . junit . Assert . assertTrue ( ( output != null ) ) 