METHOD_0 ( ) { org . apache . olingo . commons . api . IDENT_0 . IDENT_1 set = mock ( org . apache . olingo . commons . api . IDENT_0 . IDENT_1 . class ) ; when ( set . METHOD_1 ( STRING_0 ) ) . thenReturn ( set ) ; org . apache . olingo . commons . api . IDENT_0 . IDENT_1 IDENT_2 = IDENT_3 . METHOD_2 ( set ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . apache . olingo . commons . api . IDENT_0 . IDENT_1 ) { org . apache . olingo . commons . api . IDENT_0 . IDENT_1 IDENT_2 = null ; if ( ( IDENT_4 != null ) && ( ( operation . METHOD_3 ( ) ) != null ) ) { final org . apache . olingo . commons . api . IDENT_0 . IDENT_5 IDENT_6 = IDENT_4 . METHOD_1 ( operation . METHOD_3 ( ) ) ; if ( IDENT_6 == null ) { throw new org . apache . olingo . commons . api . IDENT_0 . METHOD_4 ( ( STRING_1 + ( operation . METHOD_3 ( ) ) ) ) ; } if ( IDENT_6 instanceof org . apache . olingo . commons . api . IDENT_0 . IDENT_1 ) { IDENT_2 = ( ( org . apache . olingo . commons . api . IDENT_0 . IDENT_1 ) ( IDENT_6 ) ) ; } else { throw new org . apache . olingo . commons . api . IDENT_0 . METHOD_4 ( ( ( STRING_2 + ( IDENT_6 . getName ( ) ) ) + STRING_3 ) ) ; } } return IDENT_2 ; }
org . junit . Assert . assertEquals ( set , IDENT_2 ) 