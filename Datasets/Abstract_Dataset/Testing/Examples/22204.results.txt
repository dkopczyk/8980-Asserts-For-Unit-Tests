METHOD_0 ( ) { org . apache . IDENT_0 . proxy . IDENT_1 IDENT_2 = new org . apache . IDENT_0 . proxy . METHOD_1 ( new org . apache . IDENT_0 . config . METHOD_2 ( ) ) ; java . lang . IDENT_3 IDENT_4 = new java . net . METHOD_3 ( new java . net . URL [ 0 ] ) ; java . lang . Class < org . apache . IDENT_0 . test . IDENT_5 . factory . beans . IDENT_6 > IDENT_7 = IDENT_2 . METHOD_4 ( IDENT_4 , org . apache . IDENT_0 . test . IDENT_5 . factory . beans . IDENT_6 . class ) ; "<AssertPlaceHolder>" ; org . apache . IDENT_0 . test . IDENT_5 . factory . beans . IDENT_6 IDENT_8 = new org . apache . IDENT_0 . test . IDENT_5 . factory . beans . METHOD_5 ( ) { @ org . apache . IDENT_0 . test . IDENT_5 . factory . Override public java . lang . Object test ( java . lang . Object e ) { return e ; } } ; org . apache . IDENT_0 . test . IDENT_5 . factory . IDENT_9 . IDENT_10 provider = new org . apache . IDENT_0 . test . IDENT_5 . factory . IDENT_9 . METHOD_6 ( IDENT_8 ) ; org . apache . IDENT_0 . test . IDENT_5 . factory . beans . METHOD_5 proxy = IDENT_2 . METHOD_7 ( IDENT_7 , provider ) ; proxy . test ( new java . lang . Object ( ) ) ; } METHOD_4 ( java . lang . IDENT_3 , java . lang . Class ) { java . lang . String IDENT_11 = METHOD_8 ( IDENT_4 , ( ( ( IDENT_12 . METHOD_9 ( ) ) != null ? METHOD_10 ( IDENT_12 ) : IDENT_12 . getName ( ) ) + STRING_0 ) ) ; java . lang . reflect . Method [ ] IDENT_13 ; java . lang . reflect . Method [ ] IDENT_14 = null ; if ( IDENT_12 . METHOD_11 ( ) ) { IDENT_13 = IDENT_12 . METHOD_12 ( ) ; } else { java . util . List < java . lang . reflect . Method > methods = new java . util . ArrayList ( ) ; java . util . List < java . lang . reflect . Method > IDENT_15 = new java . util . ArrayList ( ) ; for ( java . lang . reflect . Method method : org . apache . IDENT_0 . util . IDENT_16 . METHOD_13 ( IDENT_12 , true ) ) { if ( METHOD_14 ( method ) ) { continue ; } if ( java . lang . reflect . IDENT_17 . METHOD_15 ( method . METHOD_16 ( ) ) ) { IDENT_15 . add ( method ) ; } else { methods . add ( method ) ; } } IDENT_13 = methods . toArray ( new java . lang . reflect . Method [ methods . size ( ) ] ) ; IDENT_14 = IDENT_15 . toArray ( new java . lang . reflect . Method [ IDENT_15 . size ( ) ] ) ; } java . lang . Class < T > clazz = METHOD_4 ( IDENT_4 , IDENT_11 , IDENT_12 , IDENT_14 , IDENT_13 ) ; if ( ( IDENT_14 != null ) && ( ( IDENT_14 . length ) > 0 ) ) { try { java . lang . reflect . Field IDENT_18 = clazz . METHOD_17 ( org . apache . IDENT_0 . proxy . METHOD_1 . IDENT_19 ) ; IDENT_18 . METHOD_18 ( true ) ; IDENT_18 . set ( null , IDENT_14 ) ; } catch ( java . lang . Exception e ) { throw new org . apache . IDENT_0 . exception . METHOD_19 ( e ) ; } } return clazz ; }
org . junit . Assert . assertNotNull ( IDENT_7 ) 