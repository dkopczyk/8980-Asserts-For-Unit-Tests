METHOD_0 ( ) { java . lang . String IDENT_0 = METHOD_1 ( ) ; java . lang . String IDENT_1 = METHOD_2 ( ) ; java . lang . String query = ( STRING_0 + IDENT_0 ) + STRING_1 ; java . util . Properties props = org . apache . phoenix . util . IDENT_2 . METHOD_3 ( org . apache . phoenix . IDENT_3 . IDENT_4 ) ; java . sql . IDENT_5 conn = java . sql . IDENT_6 . METHOD_4 ( METHOD_5 ( ) , props ) ; try { org . apache . phoenix . IDENT_3 . IDENT_7 . METHOD_6 ( IDENT_0 , IDENT_1 , org . apache . phoenix . IDENT_3 . IDENT_7 . METHOD_7 ( IDENT_1 ) ) ; java . sql . IDENT_8 statement = conn . METHOD_8 ( query ) ; statement . METHOD_9 ( 1 , IDENT_1 . substring ( 0 , 3 ) ) ; statement . METHOD_9 ( 2 , org . apache . phoenix . IDENT_3 . IDENT_7 . IDENT_9 ) ; java . sql . ResultSet rs = statement . METHOD_10 ( ) ; "<AssertPlaceHolder>" ; } finally { conn . close ( ) ; } } next ( ) { if ( ! ( org . apache . phoenix . util . IDENT_10 . METHOD_11 ( IDENT_11 ) ) ) { return null ; } else if ( ( IDENT_12 ) == ( IDENT_13 ) ) { return null ; } org . apache . phoenix . schema . tuple . IDENT_14 next = delegate . next ( ) ; org . apache . phoenix . util . IDENT_10 . METHOD_12 ( IDENT_11 , next , delegate . METHOD_13 ( ) ) ; ( IDENT_13 ) ++ ; return next ; }
org . junit . Assert . assertFalse ( rs . next ( ) ) 