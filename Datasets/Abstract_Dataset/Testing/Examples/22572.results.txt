METHOD_0 ( ) { java . lang . String [ ] IDENT_0 = new java . lang . String [ 2 ] ; IDENT_0 [ 0 ] = STRING_0 ; IDENT_0 [ 1 ] = STRING_1 ; org . apache . phoenix . schema . types . IDENT_1 arr = org . apache . phoenix . schema . types . IDENT_2 . METHOD_1 ( IDENT_3 . INSTANCE , IDENT_0 ) ; byte [ ] bytes = IDENT_4 . INSTANCE . METHOD_2 ( arr ) ; org . apache . hadoop . hbase . io . IDENT_5 IDENT_6 = new org . apache . hadoop . hbase . io . METHOD_3 ( bytes ) ; org . apache . phoenix . schema . types . IDENT_7 . METHOD_4 ( IDENT_6 , 1 , IDENT_3 . INSTANCE , IDENT_3 . INSTANCE . METHOD_5 ( ) ) ; int offset = IDENT_6 . METHOD_6 ( ) ; int length = IDENT_6 . METHOD_7 ( ) ; byte [ ] IDENT_8 = IDENT_6 . get ( ) ; byte [ ] res = new byte [ length ] ; java . lang . System . METHOD_8 ( IDENT_8 , offset , res , 0 , length ) ; "<AssertPlaceHolder>" ; } toString ( org . apache . hadoop . hbase . IDENT_9 ) { return ( ( IDENT_10 . toString ( ) ) + STRING_2 ) + ( org . apache . hadoop . hbase . util . IDENT_11 . METHOD_9 ( IDENT_10 . METHOD_10 ( ) , IDENT_10 . METHOD_11 ( ) , IDENT_10 . METHOD_12 ( ) ) ) ; }
org . junit . Assert . assertEquals ( STRING_1 , org . apache . hadoop . hbase . util . IDENT_11 . toString ( res ) ) 