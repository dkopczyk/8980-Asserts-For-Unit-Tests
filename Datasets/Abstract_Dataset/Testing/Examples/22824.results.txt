METHOD_0 ( ) { org . apache . poi . IDENT_0 . record . IDENT_1 [ ] IDENT_2 = new org . apache . poi . IDENT_0 . record . IDENT_1 [ ] { org . apache . poi . IDENT_0 . model . IDENT_3 . METHOD_1 ( ) , new org . apache . poi . IDENT_0 . record . METHOD_2 ( ) , new org . apache . poi . IDENT_0 . record . METHOD_3 ( 1 ) , new org . apache . poi . IDENT_0 . record . METHOD_4 ( 1 , 3 , new short [ ] { 15 , 15 , 15 } ) , new org . apache . poi . IDENT_0 . record . METHOD_3 ( 2 ) , org . apache . poi . IDENT_0 . model . IDENT_4 . METHOD_5 ( ) , org . apache . poi . IDENT_0 . record . IDENT_5 . instance } ; org . apache . poi . IDENT_0 . model . IDENT_3 IDENT_6 = org . apache . poi . IDENT_0 . model . IDENT_4 . METHOD_6 ( java . util . Arrays . asList ( IDENT_2 ) ) ; org . apache . poi . IDENT_0 . model . IDENT_3 IDENT_7 ; try { IDENT_7 = IDENT_6 . METHOD_7 ( ) ; } catch ( java . lang . RuntimeException e ) { if ( e . getMessage ( ) . equals ( STRING_0 ) ) { throw new junit . framework . METHOD_8 ( STRING_1 ) ; } throw e ; } org . apache . poi . IDENT_0 . IDENT_8 . IDENT_9 . IDENT_10 IDENT_11 = new org . apache . poi . IDENT_0 . IDENT_8 . IDENT_9 . METHOD_9 ( ) ; IDENT_7 . METHOD_10 ( IDENT_11 , 0 ) ; org . apache . poi . IDENT_0 . record . IDENT_1 [ ] IDENT_12 = IDENT_11 . METHOD_11 ( ) ; "<AssertPlaceHolder>" ; } METHOD_11 ( ) { org . apache . poi . IDENT_0 . record . IDENT_1 [ ] result = new org . apache . poi . IDENT_0 . record . IDENT_1 [ IDENT_13 . size ( ) ] ; IDENT_13 . toArray ( result ) ; return result ; }
org . junit . Assert . assertEquals ( ( ( IDENT_2 . length ) + 2 ) , IDENT_12 . length ) 