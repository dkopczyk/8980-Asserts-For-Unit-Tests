METHOD_0 ( ) { try ( org . apache . poi . IDENT_0 . IDENT_1 . IDENT_2 IDENT_0 = new org . apache . poi . IDENT_0 . IDENT_1 . METHOD_1 ( ) ) { org . apache . poi . IDENT_0 . IDENT_1 . IDENT_3 . METHOD_2 ( IDENT_0 , org . apache . poi . IDENT_0 . IDENT_1 . IDENT_4 ) ; org . apache . poi . IDENT_0 . IDENT_1 . IDENT_3 . METHOD_2 ( IDENT_0 , ( ( IDENT_4 ) + 1 ) ) ; org . apache . poi . IDENT_0 . IDENT_1 . IDENT_3 . METHOD_2 ( IDENT_0 , ( ( IDENT_4 ) - 1 ) ) ; org . apache . poi . IDENT_0 . IDENT_1 . IDENT_3 . METHOD_2 ( IDENT_0 , INT_0 ) ; org . apache . poi . IDENT_0 . IDENT_1 . IDENT_5 document = org . apache . poi . IDENT_0 . IDENT_1 . IDENT_3 . METHOD_2 ( IDENT_0 , ( ( IDENT_4 ) + 1 ) ) ; org . apache . poi . IDENT_0 . property . IDENT_6 property = document . METHOD_3 ( ) ; java . io . ByteArrayOutputStream stream = new java . io . ByteArrayOutputStream ( ) ; property . METHOD_4 ( stream ) ; byte [ ] output = stream . toByteArray ( ) ; byte [ ] IDENT_7 = org . apache . poi . IDENT_0 . storage . IDENT_8 . METHOD_5 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } } METHOD_5 ( java . lang . String ) { byte [ ] IDENT_9 = javax . xml . IDENT_10 . IDENT_11 . METHOD_6 ( data ) ; return org . apache . poi . util . IDENT_12 . toByteArray ( new java . util . IDENT_13 . METHOD_7 ( new java . io . ByteArrayInputStream ( IDENT_9 ) ) ) ; }
org . junit . Assert . assertArrayEquals ( IDENT_7 , output ) 