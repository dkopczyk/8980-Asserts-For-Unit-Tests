METHOD_0 ( ) { org . apache . poi . IDENT_0 . IDENT_1 . IDENT_2 fs = new org . apache . poi . IDENT_0 . IDENT_1 . METHOD_1 ( org . apache . poi . IDENT_3 . record . IDENT_4 . IDENT_5 . METHOD_2 ( org . apache . poi . IDENT_3 . record . IDENT_4 . IDENT_6 ) ) ; org . apache . poi . IDENT_0 . IDENT_1 . IDENT_7 IDENT_8 = ( ( org . apache . poi . IDENT_0 . IDENT_1 . IDENT_7 ) ( fs . METHOD_3 ( ) . METHOD_4 ( STRING_0 ) ) ) ; byte [ ] IDENT_9 = new byte [ IDENT_8 . METHOD_5 ( ) ] ; java . io . InputStream in = fs . METHOD_3 ( ) . METHOD_6 ( STRING_0 ) ; in . read ( IDENT_9 ) ; in . close ( ) ; fs . close ( ) ; org . apache . poi . IDENT_3 . record . IDENT_10 IDENT_11 = new org . apache . poi . IDENT_3 . record . METHOD_7 ( ) ; IDENT_11 . METHOD_8 ( STRING_1 ) ; IDENT_11 . METHOD_9 ( INT_0 ) ; java . io . ByteArrayOutputStream IDENT_12 = new java . io . ByteArrayOutputStream ( ) ; IDENT_11 . METHOD_10 ( IDENT_12 ) ; byte [ ] out = IDENT_12 . toByteArray ( ) ; "<AssertPlaceHolder>" ; } toByteArray ( ) { byte [ ] result = new byte [ ( ( org . apache . poi . util . IDENT_13 . IDENT_14 ) * 2 ) + ( IDENT_15 . length ) ] ; org . apache . poi . util . IDENT_16 IDENT_17 = new org . apache . poi . util . METHOD_11 ( result , 0 ) ; try { IDENT_17 . METHOD_12 ( ( ( org . apache . poi . util . IDENT_13 . IDENT_14 ) + ( IDENT_15 . length ) ) ) ; IDENT_17 . METHOD_12 ( IDENT_18 ) ; IDENT_17 . write ( IDENT_15 ) ; return result ; } finally { org . apache . poi . util . IDENT_19 . METHOD_13 ( IDENT_17 ) ; } }
org . junit . Assert . assertArrayEquals ( IDENT_9 , out ) 