METHOD_0 ( ) { boolean IDENT_0 = IDENT_1 . METHOD_1 ( null , null , null , id , IDENT_2 . IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . util . List , org . apache . IDENT_4 . view . IDENT_5 , java . lang . Long , int ) { if ( ( ( IDENT_6 . isEmpty ( IDENT_7 ) ) || ( IDENT_8 == null ) ) || ( IDENT_9 == null ) ) { return false ; } java . lang . String [ ] IDENT_10 = IDENT_6 . split ( IDENT_7 , org . apache . IDENT_4 . IDENT_11 . IDENT_12 . IDENT_13 ) ; if ( ( ( IDENT_10 . length ) < 1 ) || ( ( IDENT_10 . length ) > 3 ) ) { org . apache . IDENT_4 . IDENT_11 . IDENT_12 . logger . debug ( ( STRING_0 + IDENT_7 ) ) ; return false ; } java . lang . String IDENT_14 = ( ( IDENT_10 . length ) > 0 ) ? IDENT_10 [ 0 ] : org . apache . IDENT_4 . common . IDENT_15 . IDENT_16 ; java . lang . String IDENT_17 = ( ( IDENT_10 . length ) > 1 ) ? IDENT_10 [ 1 ] : org . apache . IDENT_4 . common . IDENT_15 . IDENT_16 ; java . lang . String IDENT_18 = ( ( IDENT_10 . length ) > 2 ) ? IDENT_10 [ 2 ] : org . apache . IDENT_4 . common . IDENT_15 . IDENT_16 ; boolean IDENT_19 = false ; for ( org . apache . IDENT_4 . entity . IDENT_20 IDENT_21 : IDENT_8 ) { if ( ( IDENT_21 . METHOD_2 ( ) ) != ( org . apache . IDENT_4 . common . IDENT_2 . IDENT_22 ) ) { continue ; } java . lang . Long IDENT_23 = IDENT_21 . getId ( ) ; boolean IDENT_24 = METHOD_3 ( IDENT_9 , IDENT_25 , IDENT_23 ) ; if ( ! IDENT_24 ) { continue ; } java . lang . String [ ] IDENT_26 = ( IDENT_6 . isEmpty ( IDENT_21 . METHOD_4 ( ) ) ) ? null : IDENT_6 . split ( IDENT_21 . METHOD_4 ( ) , STRING_1 ) ; boolean IDENT_27 = ( ( IDENT_26 == null ) || ( ( IDENT_26 . length ) == 0 ) ) || ( METHOD_5 ( IDENT_14 , IDENT_26 ) ) ; if ( IDENT_27 ) { java . lang . String [ ] IDENT_28 = ( IDENT_6 . isEmpty ( IDENT_21 . METHOD_6 ( ) ) ) ? null : IDENT_6 . split ( IDENT_21 . METHOD_6 ( ) , STRING_1 ) ; IDENT_27 = ( ( IDENT_28 == null ) || ( ( IDENT_28 . length ) == 0 ) ) || ( METHOD_5 ( IDENT_17 , IDENT_28 ) ) ; if ( IDENT_27 ) { java . lang . String [ ] IDENT_29 = ( IDENT_6 . isEmpty ( IDENT_21 . METHOD_7 ( ) ) ) ? null : IDENT_6 . split ( IDENT_21 . METHOD_7 ( ) , STRING_1 ) ; IDENT_27 = ( ( IDENT_29 == null ) || ( ( IDENT_29 . length ) == 0 ) ) || ( METHOD_5 ( IDENT_18 , IDENT_29 ) ) ; } } if ( IDENT_27 ) { IDENT_19 = true ; break ; } } return IDENT_19 ; }
org . junit . Assert . assertFalse ( IDENT_0 ) 