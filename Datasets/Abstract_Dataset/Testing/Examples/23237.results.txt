METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; org . apache . IDENT_1 . view . IDENT_2 IDENT_3 = new org . apache . IDENT_1 . view . METHOD_1 ( ) ; IDENT_3 . METHOD_2 ( 0 ) ; org . apache . IDENT_1 . plugin . util . IDENT_4 filter = new org . apache . IDENT_1 . plugin . util . METHOD_3 ( ) ; filter . METHOD_4 ( METHOD_3 . IDENT_5 , STRING_1 ) ; filter . METHOD_4 ( METHOD_3 . IDENT_6 , STRING_2 ) ; org . apache . IDENT_1 . plugin . store . IDENT_7 < org . apache . IDENT_1 . plugin . model . IDENT_8 > IDENT_9 = IDENT_10 . METHOD_5 ( IDENT_0 , filter ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . String , org . apache . IDENT_1 . plugin . util . METHOD_3 ) { if ( org . apache . IDENT_1 . IDENT_11 . IDENT_12 . LOG . METHOD_6 ( ) ) { org . apache . IDENT_1 . IDENT_11 . IDENT_12 . LOG . debug ( ( ( STRING_3 + IDENT_0 ) + STRING_4 ) ) ; } if ( filter == null ) { filter = new org . apache . IDENT_1 . plugin . util . METHOD_3 ( ) ; } filter . METHOD_4 ( METHOD_3 . IDENT_6 , IDENT_0 ) ; org . apache . IDENT_1 . plugin . store . IDENT_7 < org . apache . IDENT_1 . plugin . model . IDENT_8 > ret = METHOD_7 ( filter ) ; if ( org . apache . IDENT_1 . IDENT_11 . IDENT_12 . LOG . METHOD_6 ( ) ) { org . apache . IDENT_1 . IDENT_11 . IDENT_12 . LOG . debug ( ( ( ( STRING_5 + IDENT_0 ) + STRING_6 ) + ( ret == null ? 0 : ret . METHOD_8 ( ) ) ) ) ; } return ret ; }
org . junit . Assert . assertNotNull ( IDENT_9 ) 