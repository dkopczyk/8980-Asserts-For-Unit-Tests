METHOD_0 ( ) { org . apache . IDENT_0 . plugin . util . IDENT_1 IDENT_2 = new org . apache . IDENT_0 . plugin . util . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( METHOD_1 . IDENT_3 , STRING_0 ) ; IDENT_2 . METHOD_2 ( METHOD_1 . IDENT_4 , STRING_1 ) ; org . apache . IDENT_0 . view . IDENT_5 IDENT_6 = IDENT_7 . METHOD_3 ( IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . apache . IDENT_0 . plugin . util . METHOD_1 ) { org . apache . IDENT_0 . view . IDENT_5 IDENT_8 = new org . apache . IDENT_0 . view . METHOD_4 ( ) ; int IDENT_9 = IDENT_2 . METHOD_5 ( ) ; int IDENT_10 = IDENT_2 . METHOD_6 ( ) ; IDENT_2 . METHOD_7 ( 0 ) ; IDENT_2 . METHOD_8 ( Integer . MAX_VALUE ) ; java . util . List < T > IDENT_11 = METHOD_9 ( IDENT_2 , IDENT_12 , IDENT_13 , IDENT_8 ) ; java . util . List < T > IDENT_14 = new java . util . ArrayList < T > ( ) ; for ( T IDENT_15 : IDENT_11 ) { if ( IDENT_16 . METHOD_10 ( IDENT_15 , null ) ) { IDENT_14 . add ( IDENT_15 ) ; } } if ( ! ( IDENT_14 . isEmpty ( ) ) ) { METHOD_11 ( IDENT_14 , IDENT_9 , IDENT_10 , IDENT_8 ) ; } return IDENT_8 ; }
org . junit . Assert . assertNotNull ( IDENT_6 ) 