METHOD_0 ( ) { System . out . println ( ( ( org . apache . IDENT_0 . IDENT_1 . test . IDENT_2 . IDENT_3 ) + ( name . METHOD_1 ( ) ) ) ) ; final org . apache . IDENT_0 . IDENT_1 . test . Set < org . apache . IDENT_0 . IDENT_1 . test . IDENT_2 . IDENT_4 > IDENT_5 = org . apache . IDENT_0 . IDENT_1 . test . Collections . METHOD_2 ( new org . apache . IDENT_0 . IDENT_1 . test . HashSet < org . apache . IDENT_0 . IDENT_1 . test . IDENT_2 . IDENT_4 > ( ) ) ; final org . apache . IDENT_0 . IDENT_1 . test . Set < org . apache . IDENT_0 . IDENT_1 . test . IDENT_2 . IDENT_4 > IDENT_6 = org . apache . IDENT_0 . IDENT_1 . test . Collections . METHOD_2 ( new org . apache . IDENT_0 . IDENT_1 . test . HashSet < org . apache . IDENT_0 . IDENT_1 . test . IDENT_2 . IDENT_4 > ( ) ) ; final org . apache . IDENT_0 . IDENT_1 . IDENT_7 < org . apache . IDENT_0 . IDENT_1 . test . IDENT_2 . IDENT_8 > IDENT_9 = new org . apache . IDENT_0 . IDENT_1 . test . IDENT_2 . METHOD_3 ( IDENT_5 ) ; final org . apache . IDENT_0 . IDENT_1 . impl . IDENT_10 p = new org . apache . IDENT_0 . IDENT_1 . impl . METHOD_4 ( 10 ) ; final org . apache . IDENT_0 . IDENT_1 . IDENT_11 < org . apache . IDENT_0 . IDENT_1 . test . IDENT_2 . IDENT_8 > IDENT_12 = new org . apache . IDENT_0 . IDENT_1 . impl . METHOD_5 ( IDENT_9 , p ) ; for ( int i = 0 ; i < 10 ; ++ i ) { final org . apache . IDENT_0 . IDENT_1 . test . IDENT_2 . IDENT_8 a = new org . apache . IDENT_0 . IDENT_1 . test . IDENT_2 . METHOD_6 ( ) ; IDENT_6 . add ( a ) ; IDENT_12 . METHOD_7 ( a ) ; } while ( ( IDENT_5 . size ( ) ) < 10 ) { } p . close ( ) ; IDENT_12 . close ( ) ; "<AssertPlaceHolder>" ; } close ( ) { super . close ( ) ; buffer . METHOD_8 ( ) ; }
org . junit . Assert . assertEquals ( IDENT_6 , IDENT_5 ) 