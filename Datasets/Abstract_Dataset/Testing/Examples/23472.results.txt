METHOD_0 ( ) { final int IDENT_0 = INT_0 ; final int IDENT_1 = INT_1 ; final int IDENT_2 = INT_2 ; final int IDENT_3 = INT_3 ; final int IDENT_4 = IDENT_0 + ( INT_4 * IDENT_1 ) ; final int IDENT_5 = IDENT_2 + ( INT_4 * IDENT_3 ) ; final java . util . concurrent . atomic . IDENT_6 i = new java . util . concurrent . atomic . METHOD_1 ( 0 ) ; final org . apache . IDENT_7 . IDENT_8 . impl . IDENT_9 < java . lang . Integer , java . lang . Integer > IDENT_10 = new org . apache . IDENT_7 . IDENT_8 . impl . METHOD_2 ( new org . apache . IDENT_7 . IDENT_8 . IDENT_11 < org . apache . IDENT_7 . IDENT_8 . impl . METHOD_2 . IDENT_12 < java . lang . Integer , java . lang . Integer > > ( ) { @ org . apache . IDENT_7 . IDENT_8 . test . Override public void METHOD_3 ( final org . apache . IDENT_7 . IDENT_8 . impl . METHOD_2 . IDENT_12 < java . lang . Integer , java . lang . Integer > value ) { i . METHOD_4 ( ( ( value . METHOD_5 ( ) ) + ( INT_4 * ( value . METHOD_6 ( ) ) ) ) ) ; } } ) ; IDENT_10 . METHOD_7 ( ) . METHOD_3 ( IDENT_0 ) ; IDENT_10 . METHOD_8 ( ) . METHOD_3 ( IDENT_1 ) ; IDENT_10 . METHOD_7 ( ) . METHOD_3 ( IDENT_2 ) ; IDENT_10 . METHOD_8 ( ) . METHOD_3 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } get ( ) { if ( ( instance ) != null ) { return instance ; } try { MOD_0 ( IDENT_13 ) { final T t ; if ( org . apache . IDENT_7 . IDENT_14 . IDENT_15 . IDENT_16 . class . METHOD_9 ( IDENT_17 ) ) { t = IDENT_13 . METHOD_10 ( ( ( java . lang . Class < org . apache . IDENT_7 . IDENT_14 . IDENT_15 . IDENT_16 < T > > ) ( IDENT_17 ) ) ) ; } else { t = IDENT_13 . getInstance ( IDENT_17 ) ; } final org . apache . IDENT_7 . IDENT_14 . IDENT_18 a = IDENT_13 . METHOD_11 ( ) ; if ( a != null ) { a . METHOD_12 ( this , t ) ; } return t ; } } catch ( final org . apache . IDENT_7 . IDENT_14 . exceptions . IDENT_19 e ) { throw new java . lang . RuntimeException ( e ) ; } }
org . junit . Assert . assertEquals ( ( IDENT_4 + IDENT_5 ) , i . get ( ) ) 