METHOD_0 ( ) { org . apache . IDENT_0 . provider . db . service . IDENT_1 . IDENT_2 store = org . mockito . Mockito . mock ( org . apache . IDENT_0 . provider . db . service . IDENT_1 . IDENT_2 . class ) ; org . apache . IDENT_0 . service . IDENT_3 . IDENT_4 IDENT_5 = org . mockito . Mockito . mock ( org . apache . IDENT_0 . service . IDENT_3 . IDENT_4 . class ) ; org . apache . hadoop . hive . IDENT_6 . IDENT_7 IDENT_8 = org . mockito . Mockito . mock ( org . apache . hadoop . hive . IDENT_6 . IDENT_7 . class ) ; org . mockito . Mockito . when ( IDENT_5 . connect ( ) ) . thenReturn ( new org . apache . IDENT_0 . service . IDENT_3 . METHOD_1 ( IDENT_8 ) ) ; try ( org . apache . IDENT_0 . service . IDENT_3 . IDENT_9 IDENT_10 = new org . apache . IDENT_0 . service . IDENT_3 . METHOD_2 ( store , IDENT_5 ) ) { java . util . List < org . apache . hadoop . hive . IDENT_6 . api . IDENT_11 > events ; org . mockito . Mockito . when ( IDENT_8 . METHOD_3 ( 0 , Integer . MAX_VALUE , null ) ) . thenReturn ( new org . apache . hadoop . hive . IDENT_6 . api . METHOD_4 ( java . util . Collections . < org . apache . hadoop . hive . IDENT_6 . api . IDENT_11 > emptyList ( ) ) ) ; events = IDENT_10 . METHOD_5 ( 0 ) ; "<AssertPlaceHolder>" ; } } isEmpty ( ) { return ( ( ( IDENT_12 ) == null ) || ( IDENT_12 . isEmpty ( ) ) ) && ( ( ( IDENT_13 ) == null ) || ( IDENT_13 . isEmpty ( ) ) ) ; }
org . junit . Assert . assertTrue ( events . isEmpty ( ) ) 