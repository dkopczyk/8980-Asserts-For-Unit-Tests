METHOD_0 ( ) { javax . servlet . http . IDENT_0 IDENT_1 = METHOD_1 ( javax . servlet . http . IDENT_0 . class ) ; javax . servlet . http . IDENT_2 IDENT_3 = METHOD_1 ( javax . servlet . http . IDENT_2 . class ) ; org . apache . IDENT_4 . web . subject . IDENT_5 context = new org . apache . IDENT_4 . web . subject . support . METHOD_2 ( ) ; context . METHOD_3 ( IDENT_1 ) ; context . METHOD_4 ( IDENT_3 ) ; expect ( IDENT_1 . METHOD_5 ( IDENT_6 . IDENT_7 ) ) . andReturn ( null ) ; javax . servlet . http . IDENT_8 [ ] IDENT_9 = new javax . servlet . http . IDENT_8 [ ] { new < javax . servlet . http . org . apache . IDENT_4 . web . servlet . IDENT_8 > javax . servlet . http . METHOD_6 ( IDENT_10 . IDENT_11 ) } ; expect ( IDENT_1 . METHOD_7 ( ) ) . andReturn ( IDENT_9 ) ; replay ( IDENT_1 ) ; org . apache . IDENT_4 . web . IDENT_12 . IDENT_10 IDENT_13 = new org . apache . IDENT_4 . web . IDENT_12 . METHOD_8 ( ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( org . apache . IDENT_4 . subject . IDENT_14 ) { if ( ! ( org . apache . IDENT_4 . web . util . IDENT_15 . METHOD_10 ( IDENT_16 ) ) ) { if ( org . apache . IDENT_4 . web . IDENT_12 . METHOD_8 . log . METHOD_11 ( ) ) { java . lang . String msg = STRING_0 + ( STRING_1 + STRING_2 ) ; org . apache . IDENT_4 . web . IDENT_12 . METHOD_8 . log . debug ( msg ) ; } return null ; } org . apache . IDENT_4 . web . subject . IDENT_5 IDENT_17 = ( ( org . apache . IDENT_4 . web . subject . IDENT_5 ) ( IDENT_16 ) ) ; if ( METHOD_12 ( IDENT_17 ) ) { return null ; } javax . servlet . http . IDENT_0 request = org . apache . IDENT_4 . web . util . IDENT_15 . METHOD_13 ( IDENT_17 ) ; javax . servlet . http . IDENT_2 response = org . apache . IDENT_4 . web . util . IDENT_15 . METHOD_14 ( IDENT_17 ) ; java . lang . String IDENT_18 = METHOD_15 ( ) . METHOD_16 ( request , response ) ; if ( METHOD_6 . IDENT_19 . equals ( IDENT_18 ) ) return null ; if ( IDENT_18 != null ) { IDENT_18 = METHOD_17 ( IDENT_18 ) ; if ( org . apache . IDENT_4 . web . IDENT_12 . METHOD_8 . log . METHOD_18 ( ) ) { org . apache . IDENT_4 . web . IDENT_12 . METHOD_8 . log . trace ( ( ( STRING_3 + IDENT_18 ) + "]" ) ) ; } byte [ ] IDENT_20 = org . apache . IDENT_4 . codec . IDENT_21 . decode ( IDENT_18 ) ; if ( org . apache . IDENT_4 . web . IDENT_12 . METHOD_8 . log . METHOD_18 ( ) ) { org . apache . IDENT_4 . web . IDENT_12 . METHOD_8 . log . trace ( ( ( STRING_4 + ( IDENT_20 != null ? IDENT_20 . length : 0 ) ) + STRING_5 ) ) ; } return IDENT_20 ; } else { return null ; } }
org . junit . Assert . assertNull ( IDENT_13 . METHOD_9 ( context ) ) 