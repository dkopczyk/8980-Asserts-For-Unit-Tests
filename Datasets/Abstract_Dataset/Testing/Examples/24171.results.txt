METHOD_0 ( ) { try { com . google . api . services . IDENT_0 . model . Person person = new com . google . api . services . IDENT_0 . model . Person ( ) ; person . METHOD_1 ( STRING_0 ) ; java . lang . Class IDENT_1 = org . apache . streams . IDENT_2 . serializer . util . IDENT_3 . METHOD_2 ( org . apache . streams . IDENT_2 . serializer . util . IDENT_4 . mapper . METHOD_3 ( person ) ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception ex ) { } } METHOD_2 ( java . lang . String ) { java . util . IDENT_5 . METHOD_4 ( json ) ; com . google . common . base . IDENT_6 . METHOD_5 ( org . apache . commons . lang . StringUtils . METHOD_6 ( json ) ) ; com . fasterxml . jackson . databind . node . IDENT_7 IDENT_8 ; try { IDENT_8 = ( ( com . fasterxml . jackson . databind . node . IDENT_7 ) ( org . apache . streams . IDENT_2 . serializer . util . IDENT_3 . mapper . METHOD_7 ( json ) ) ) ; } catch ( java . io . IOException ex ) { ex . printStackTrace ( ) ; return null ; } if ( ( ( IDENT_8 . METHOD_8 ( STRING_1 ) ) != null ) && ( IDENT_8 . get ( STRING_1 ) . toString ( ) . equals ( org . apache . streams . IDENT_2 . serializer . util . IDENT_3 . IDENT_9 ) ) ) { return com . google . api . services . IDENT_0 . model . IDENT_10 . class ; } else if ( ( ( IDENT_8 . METHOD_8 ( STRING_1 ) ) != null ) && ( IDENT_8 . get ( STRING_1 ) . toString ( ) . equals ( org . apache . streams . IDENT_2 . serializer . util . IDENT_3 . IDENT_11 ) ) ) { return com . google . api . services . IDENT_0 . model . Person . class ; } else { return com . fasterxml . jackson . databind . node . IDENT_7 . class ; } }
org . junit . Assert . assertEquals ( IDENT_1 , com . google . api . services . IDENT_0 . model . Person . class ) 