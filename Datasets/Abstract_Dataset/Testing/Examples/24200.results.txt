METHOD_0 ( ) { java . lang . String format = STRING_0 ; java . lang . String input = STRING_1 ; java . lang . Long IDENT_0 = INT_0 ; com . fasterxml . jackson . databind . IDENT_1 mapper = org . apache . streams . jackson . IDENT_2 . getInstance ( format ) ; try { java . lang . String json = ( STRING_2 + input ) + STRING_3 ; org . apache . streams . IDENT_3 . json . IDENT_4 IDENT_5 = mapper . METHOD_1 ( json , org . apache . streams . IDENT_3 . json . IDENT_4 . class ) ; java . lang . Long result = IDENT_5 . METHOD_2 ( ) . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception ex ) { ex . printStackTrace ( ) ; org . junit . Assert . fail ( ) ; } } getInstance ( org . apache . streams . IDENT_3 . IDENT_6 ) { if ( ( org . apache . streams . jackson . IDENT_2 . IDENT_7 . containsKey ( configuration ) ) && ( ( org . apache . streams . jackson . IDENT_2 . IDENT_7 . get ( configuration ) ) != null ) ) { return org . apache . streams . jackson . IDENT_2 . IDENT_7 . get ( configuration ) ; } else { org . apache . streams . jackson . IDENT_2 . IDENT_7 . put ( configuration , new org . apache . streams . jackson . METHOD_4 ( configuration ) ) ; return org . apache . streams . jackson . METHOD_4 . IDENT_7 . get ( configuration ) ; } }
org . junit . Assert . assertEquals ( result , IDENT_0 ) 