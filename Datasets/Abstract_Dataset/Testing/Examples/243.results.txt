METHOD_0 ( ) { System . out . println ( STRING_0 ) ; boolean header = true ; edu . IDENT_0 . IDENT_1 . shared . IDENT_2 . IDENT_3 . IDENT_4 instance = new edu . IDENT_0 . IDENT_1 . shared . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_1 ) ; java . lang . String expResult = STRING_2 ; java . lang . String result = instance . METHOD_2 ( header ) . build ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } build ( edu . IDENT_0 . IDENT_1 . shared . IDENT_2 . IDENT_3 . IDENT_6 ) { java . lang . StringBuilder query = new java . lang . StringBuilder ( ) ; for ( java . lang . String key : args . METHOD_3 ( ) ) { for ( java . lang . String value : args . get ( key ) ) { if ( ( query . length ( ) ) == 0 ) { query . append ( key ) . append ( STRING_3 ) . append ( IDENT_5 . encode ( value ) ) ; } else { query . append ( STRING_4 ) . append ( key ) . append ( STRING_3 ) . append ( IDENT_5 . encode ( value ) ) ; } } } java . lang . String url = ( ( ( ( ( ( ( protocol ) + STRING_5 ) + ( host ) ) + STRING_6 ) + ( port ) ) + ( page ) ) + ( ( query . length ( ) ) > 0 ? STRING_7 : "" ) ) + ( query . toString ( ) ) ; return url ; }
org . junit . Assert . assertEquals ( expResult , result ) 