METHOD_0 ( ) { org . apache . IDENT_0 . IDENT_1 . app . IDENT_1 . impl . IDENT_2 . IDENT_3 IDENT_4 = new org . apache . IDENT_0 . IDENT_1 . app . IDENT_1 . impl . IDENT_2 . METHOD_1 ( ) ; org . apache . hadoop . yarn . event . IDENT_5 IDENT_6 = mock ( org . apache . hadoop . yarn . event . IDENT_5 . class ) ; java . lang . String [ ] IDENT_7 = new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 } ; java . util . Set < java . lang . String > IDENT_8 = new java . util . IDENT_9 < java . lang . String > ( java . util . Arrays . asList ( new java . lang . String [ ] { STRING_3 , STRING_1 , STRING_2 } ) ) ; IDENT_10 = org . apache . IDENT_0 . IDENT_1 . api . IDENT_11 . METHOD_2 ( new java . util . IDENT_9 < java . lang . String > ( java . util . Arrays . asList ( IDENT_7 ) ) , null ) ; org . apache . IDENT_0 . IDENT_1 . records . IDENT_12 IDENT_13 = org . apache . IDENT_0 . IDENT_1 . records . IDENT_12 . getInstance ( org . apache . IDENT_0 . IDENT_1 . records . IDENT_14 . getInstance ( org . apache . IDENT_0 . IDENT_1 . records . IDENT_15 . getInstance ( "1" , 1 , 1 ) , 1 ) , 1 ) ; org . apache . IDENT_0 . IDENT_1 . app . IDENT_1 . impl . IDENT_2 IDENT_16 = new org . apache . IDENT_0 . IDENT_1 . app . IDENT_1 . impl . IDENT_17 . METHOD_3 ( IDENT_13 , 1 , IDENT_6 , mock ( org . apache . IDENT_0 . IDENT_1 . app . IDENT_18 . class ) , new org . apache . hadoop . conf . Configuration ( ) , new org . apache . hadoop . yarn . util . METHOD_4 ( ) , mock ( org . apache . IDENT_0 . IDENT_1 . app . IDENT_19 . class ) , IDENT_20 , false , org . apache . hadoop . yarn . api . records . IDENT_21 . newInstance ( INT_0 , 1 ) , org . apache . IDENT_0 . IDENT_1 . app . IDENT_1 . impl . IDENT_17 . METHOD_5 ( ) , false ) ; org . apache . IDENT_0 . IDENT_1 . app . IDENT_1 . impl . IDENT_2 IDENT_22 = METHOD_6 ( IDENT_16 ) ; when ( IDENT_22 . METHOD_7 ( IDENT_7 ) ) . thenReturn ( IDENT_8 . toArray ( new java . lang . String [ 3 ] ) ) ; org . apache . IDENT_0 . IDENT_1 . app . IDENT_1 . event . IDENT_23 IDENT_24 = mock ( org . apache . IDENT_0 . IDENT_1 . app . IDENT_1 . event . IDENT_23 . class ) ; IDENT_4 . METHOD_8 ( IDENT_22 , IDENT_24 ) ; verify ( IDENT_22 ) . METHOD_7 ( IDENT_7 ) ; org . mockito . IDENT_25 < org . apache . hadoop . yarn . event . IDENT_26 > IDENT_27 = org . mockito . IDENT_25 . METHOD_9 ( org . apache . hadoop . yarn . event . IDENT_26 . class ) ; verify ( IDENT_6 , times ( 1 ) ) . METHOD_10 ( IDENT_27 . METHOD_11 ( ) ) ; if ( ! ( ( IDENT_27 . METHOD_12 ( ) . get ( 0 ) ) instanceof org . apache . IDENT_0 . IDENT_1 . app . IDENT_28 . IDENT_29 ) ) { org . junit . Assert . fail ( STRING_4 ) ; } java . util . Map < java . lang . String , java . lang . Boolean > expected = new java . util . HashMap < java . lang . String , java . lang . Boolean > ( ) ; expected . put ( STRING_3 , true ) ; expected . put ( STRING_1 , true ) ; expected . put ( STRING_2 , true ) ; java . util . Set < java . lang . String > IDENT_30 = IDENT_22 . IDENT_31 ; for ( java . lang . String IDENT_32 : IDENT_30 ) { expected . remove ( IDENT_32 ) ; } "<AssertPlaceHolder>" ; } size ( ) { return count ; }
org . junit . Assert . assertEquals ( 0 , expected . size ( ) ) 