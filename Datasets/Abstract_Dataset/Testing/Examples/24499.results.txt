METHOD_0 ( ) { org . apache . IDENT_0 . request . IDENT_1 request = METHOD_1 ( org . apache . IDENT_0 . request . IDENT_1 . class ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_2 = METHOD_1 ( java . util . Map . class ) ; expect ( request . METHOD_2 ( STRING_0 ) ) . andReturn ( IDENT_2 ) ; expect ( IDENT_2 . get ( org . apache . IDENT_0 . impl . IDENT_3 . IDENT_4 ) ) . andReturn ( null ) ; expect ( IDENT_2 . put ( eq ( org . apache . IDENT_0 . impl . IDENT_3 . IDENT_4 ) , METHOD_3 ( java . util . IDENT_5 . class ) ) ) . andReturn ( null ) ; replay ( IDENT_6 , IDENT_7 , IDENT_8 , IDENT_9 , IDENT_10 , request , IDENT_2 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_6 , IDENT_7 , IDENT_8 , IDENT_9 , IDENT_10 , request , IDENT_2 ) ; } METHOD_4 ( org . apache . IDENT_0 . request . IDENT_1 ) { java . util . Map < java . lang . String , java . lang . Object > IDENT_2 = IDENT_11 . METHOD_2 ( STRING_0 ) ; java . util . IDENT_12 < org . apache . IDENT_0 . IDENT_13 > IDENT_14 = ( ( java . util . IDENT_12 < org . apache . IDENT_0 . IDENT_13 > ) ( IDENT_2 . get ( org . apache . IDENT_0 . impl . IDENT_15 . IDENT_4 ) ) ) ; if ( IDENT_14 == null ) { IDENT_14 = new java . util . IDENT_5 < org . apache . IDENT_0 . IDENT_13 > ( ) ; IDENT_2 . put ( org . apache . IDENT_0 . impl . IDENT_15 . IDENT_4 , IDENT_14 ) ; } return IDENT_14 ; }
org . junit . Assert . assertTrue ( ( ( container . METHOD_4 ( request ) ) instanceof java . util . IDENT_5 ) ) 