METHOD_0 ( ) { final org . apache . tinkerpop . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 graph = org . apache . tinkerpop . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_4 . METHOD_1 ( ) ; final org . apache . tinkerpop . IDENT_0 . process . IDENT_5 . IDENT_6 . graph . IDENT_7 g = graph . METHOD_2 ( ) ; final java . util . concurrent . IDENT_8 IDENT_9 = java . util . concurrent . IDENT_10 . METHOD_3 ( IDENT_11 ) ; final org . apache . tinkerpop . IDENT_0 . IDENT_12 . engine . IDENT_13 IDENT_14 = org . apache . tinkerpop . IDENT_0 . IDENT_12 . engine . IDENT_13 . build ( ) . METHOD_4 ( IDENT_9 ) . create ( ) ; final java . util . Map < java . lang . String , java . lang . Object > IDENT_15 = new java . util . HashMap ( ) ; IDENT_15 . put ( STRING_0 , g ) ; final java . util . concurrent . atomic . IDENT_16 IDENT_17 = new java . util . concurrent . atomic . METHOD_5 ( 0 ) ; final java . util . concurrent . IDENT_8 IDENT_18 = java . util . concurrent . IDENT_10 . METHOD_3 ( IDENT_11 ) ; IDENT_14 . METHOD_6 ( STRING_1 , IDENT_15 ) . METHOD_7 ( ( o ) -> { final java . util . Iterator IDENT_19 = ( ( java . util . Iterator ) ( o ) ) ; IDENT_19 . METHOD_8 ( ( v ) -> IDENT_17 . METHOD_9 ( ) ) ; } , IDENT_18 ) . join ( ) ; "<AssertPlaceHolder>" ; IDENT_14 . close ( ) ; IDENT_9 . METHOD_10 ( ) ; IDENT_9 . METHOD_11 ( INT_0 , TimeUnit . IDENT_20 ) ; IDENT_18 . METHOD_10 ( ) ; IDENT_18 . METHOD_11 ( INT_0 , TimeUnit . IDENT_20 ) ; } get ( ) { return this . t ; }
org . junit . Assert . assertEquals ( 6 , IDENT_17 . get ( ) ) 