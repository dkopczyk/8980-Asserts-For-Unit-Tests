METHOD_0 ( ) { final java . util . concurrent . atomic . IDENT_0 IDENT_1 = new java . util . concurrent . atomic . METHOD_1 ( 0 ) ; final org . apache . tinkerpop . IDENT_2 . IDENT_3 . engine . IDENT_4 IDENT_5 = org . apache . tinkerpop . IDENT_2 . IDENT_3 . engine . IDENT_4 . build ( ) . METHOD_2 ( ( b , t ) -> IDENT_1 . set ( 1 ) ) . create ( ) ; try { IDENT_5 . METHOD_3 ( STRING_0 , null , new javax . script . METHOD_4 ( ) , IDENT_4 . IDENT_6 . build ( ) . METHOD_2 ( ( b , t ) -> IDENT_1 . set ( 200 ) ) . create ( ) ) . get ( ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( java . lang . Exception IDENT_7 ) { } java . lang . Thread . sleep ( INT_0 ) ; "<AssertPlaceHolder>" ; } get ( ) { return this . t ; }
org . junit . Assert . assertEquals ( 200 , IDENT_1 . get ( ) ) 