METHOD_0 ( ) { org . junit . IDENT_0 . METHOD_1 ( IDENT_1 , org . hamcrest . core . IDENT_2 . startsWith ( STRING_0 ) ) ; try ( final java . io . ByteArrayOutputStream IDENT_3 = new java . io . ByteArrayOutputStream ( ) ) { final org . apache . tinkerpop . IDENT_4 . IDENT_5 . io . IDENT_6 writer = IDENT_7 . apply ( graph ) ; writer . METHOD_2 ( IDENT_3 , g . METHOD_3 ( ) . METHOD_4 ( STRING_1 , org . apache . tinkerpop . IDENT_4 . process . IDENT_8 . IDENT_9 . METHOD_5 ( INT_0 ) ) ) ; final java . util . concurrent . atomic . IDENT_10 IDENT_11 = new java . util . concurrent . atomic . METHOD_6 ( 0 ) ; final org . apache . tinkerpop . IDENT_4 . IDENT_5 . io . IDENT_12 reader = IDENT_13 . apply ( graph ) ; try ( final java . io . IDENT_14 br = new java . io . METHOD_7 ( new java . io . METHOD_8 ( new java . io . ByteArrayInputStream ( IDENT_3 . toByteArray ( ) ) ) ) ) { java . lang . String line = br . METHOD_9 ( ) ; reader . METHOD_10 ( new java . io . ByteArrayInputStream ( line . getBytes ( ) ) , ( IDENT_15 ) -> { IDENT_11 . METHOD_11 ( ) ; return mock ( . class ) ; } ) ; line = br . METHOD_9 ( ) ; reader . METHOD_10 ( new java . io . ByteArrayInputStream ( line . getBytes ( ) ) , ( IDENT_16 ) -> { IDENT_11 . METHOD_11 ( ) ; return mock ( . class ) ; } ) ; } "<AssertPlaceHolder>" ; } } get ( ) { return this . t ; }
org . junit . Assert . assertEquals ( 2 , IDENT_11 . get ( ) ) 