METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 loader = new IDENT_0 . IDENT_1 . METHOD_1 ( ) ; java . lang . Class IDENT_3 = loader . METHOD_2 ( STRING_0 ) ; java . util . List < java . util . Map < java . lang . String , java . lang . Object > > IDENT_4 = IDENT_5 . IDENT_6 . IDENT_7 . METHOD_3 ( ) ; IDENT_8 . trace ( new IDENT_5 . IDENT_6 . METHOD_4 ( STRING_1 ) ) ; java . lang . Object obj = IDENT_3 . newInstance ( ) ; IDENT_3 . METHOD_5 ( ) [ 0 ] . invoke ( obj , STRING_2 ) ; java . util . List < java . util . Map < java . lang . String , java . lang . Object > > IDENT_9 = IDENT_5 . IDENT_6 . IDENT_7 . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { IDENT_5 . IDENT_6 . Iterator < IDENT_5 . IDENT_6 . IDENT_10 > it = IDENT_5 . IDENT_6 . IDENT_7 . METHOD_6 ( ) . iterator ( ) ; IDENT_5 . IDENT_6 . List < IDENT_5 . IDENT_6 . Map < java . lang . String , java . lang . Object > > IDENT_11 = new IDENT_5 . IDENT_6 . ArrayList ( ) ; while ( it . hasNext ( ) ) { try { IDENT_5 . IDENT_6 . IDENT_10 IDENT_12 = it . next ( ) ; IDENT_5 . IDENT_6 . Map < java . lang . String , java . lang . Object > map = new IDENT_5 . IDENT_6 . HashMap ( ) ; map . put ( STRING_3 , IDENT_5 . IDENT_6 . IDENT_13 . METHOD_7 ( IDENT_12 . when ) ) ; map . put ( STRING_4 , IDENT_12 . IDENT_14 . toString ( ) ) ; map . put ( STRING_5 , IDENT_12 . IDENT_15 . IDENT_16 ) ; map . put ( STRING_6 1 , IDENT_12 . IDENT_15 . IDENT_17 ) ; map . put ( STRING_7 , IDENT_12 . IDENT_18 ) ; map . put ( STRING_6 , IDENT_12 . IDENT_19 ) ; map . put ( STRING_6 2 , IDENT_12 . IDENT_20 ) ; map . put ( STRING_8 , IDENT_12 . IDENT_21 ) ; map . put ( STRING_9 , IDENT_12 . IDENT_22 ) ; map . put ( STRING_6 0 , IDENT_12 . IDENT_23 ) ; map . put ( STRING_10 , IDENT_12 . IDENT_24 ) ; map . put ( STRING_11 , IDENT_12 . IDENT_25 ) ; map . put ( STRING_12 , IDENT_12 . IDENT_26 ) ; IDENT_11 . add ( map ) ; } catch ( IDENT_5 . IDENT_6 . IDENT_27 IDENT_28 ) { } } return IDENT_11 ; }
org . junit . Assert . assertEquals ( 2 , ( ( IDENT_9 . size ( ) ) - ( IDENT_4 . size ( ) ) ) ) 