METHOD_0 ( ) { javax . el . IDENT_0 handler = new javax . el . METHOD_1 ( ) ; handler . METHOD_2 ( STRING_0 ) ; java . lang . Class < ? > clazz = handler . METHOD_3 ( null ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String ) { if ( ( name == null ) || ( name . contains ( STRING_1 ) ) ) { return null ; } java . lang . Class < ? > result = IDENT_1 . get ( name ) ; if ( result != null ) { if ( javax . el . METHOD_1 . IDENT_2 . class . equals ( result ) ) { return null ; } else { return result ; } } java . lang . String IDENT_3 = IDENT_4 . get ( name ) ; if ( IDENT_3 != null ) { java . lang . Class < ? > clazz = METHOD_4 ( IDENT_3 , true ) ; if ( clazz != null ) { IDENT_1 . put ( name , clazz ) ; return clazz ; } } for ( java . lang . String p : IDENT_5 ) { IDENT_3 = ( p + STRING_2 ) + name ; java . lang . Class < ? > clazz = METHOD_4 ( IDENT_3 , false ) ; if ( clazz != null ) { if ( result != null ) { throw new javax . el . METHOD_5 ( javax . el . IDENT_6 . message ( null , STRING_3 , IDENT_3 , result . getName ( ) ) ) ; } result = clazz ; } } if ( result == null ) { IDENT_1 . put ( name , javax . el . METHOD_1 . IDENT_2 . class ) ; } else { IDENT_1 . put ( name , result ) ; } return result ; }
org . junit . Assert . assertNull ( clazz ) 