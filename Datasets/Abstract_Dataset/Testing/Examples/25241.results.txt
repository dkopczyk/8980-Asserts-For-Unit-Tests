METHOD_0 ( ) { final javax . IDENT_0 . IDENT_1 expr = new javax . IDENT_0 . METHOD_1 ( ) . METHOD_2 ( 20 ) . METHOD_3 ( STRING_0 ) . start ( new java . util . Date ( 0 ) ) ; final org . apache . IDENT_2 . core . IDENT_3 . IDENT_4 IDENT_5 = new org . apache . IDENT_2 . core . IDENT_3 . METHOD_4 ( expr ) ; java . util . Calendar IDENT_6 = new java . util . METHOD_5 ( INT_0 , 0 , 4 ) ; IDENT_5 . METHOD_6 ( IDENT_6 . getTime ( ) ) ; IDENT_6 = new java . util . METHOD_5 ( INT_0 , 0 , 1 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( java . util . Date ) { org . apache . IDENT_2 . core . IDENT_3 . METHOD_4 . log . debug ( ( STRING_1 + IDENT_7 ) ) ; final java . util . Calendar IDENT_6 = new java . util . METHOD_5 ( IDENT_8 ) ; IDENT_6 . METHOD_8 ( Calendar . IDENT_9 ) ; if ( ( ( METHOD_9 ( ) ) != null ) && ( METHOD_9 ( ) . METHOD_10 ( IDENT_7 ) ) ) { IDENT_6 . METHOD_11 ( METHOD_9 ( ) ) ; } else { IDENT_6 . METHOD_11 ( IDENT_7 ) ; IDENT_6 . add ( Calendar . IDENT_10 , 1 ) ; } final java . util . Calendar IDENT_11 = new java . util . METHOD_5 ( IDENT_8 ) ; if ( ( METHOD_12 ( ) ) != null ) { IDENT_11 . METHOD_11 ( METHOD_12 ( ) ) ; } else { final int IDENT_12 = ( IDENT_6 . get ( Calendar . IDENT_13 ) ) + 100 ; IDENT_11 . set ( Calendar . IDENT_13 , IDENT_12 ) ; } int IDENT_14 = 0 ; while ( ( IDENT_14 <= 6 ) && ( IDENT_6 . METHOD_13 ( IDENT_11 ) ) ) { final org . apache . IDENT_2 . core . IDENT_3 . METHOD_4 . IDENT_15 expr = expressions [ IDENT_14 ] ; java . lang . Integer value = expr . METHOD_14 ( IDENT_6 ) ; else if ( value != null ) { final int IDENT_16 = IDENT_6 . get ( expr . field ) ; if ( IDENT_16 != value ) { if ( ( IDENT_14 == 3 ) && ( ! ( ( expressions [ 2 ] ) instanceof org . apache . IDENT_2 . core . IDENT_3 . METHOD_4 . IDENT_17 ) ) ) { IDENT_14 ++ ; } else { IDENT_6 . set ( expr . field , value ) ; METHOD_15 ( IDENT_6 , expr . field , false ) ; IDENT_14 ++ ; } } else { IDENT_14 ++ ; } } else { org . apache . IDENT_2 . core . IDENT_3 . METHOD_4 . log . debug ( ( STRING_2 + null ) ) ; return null ; } } org . apache . IDENT_2 . core . IDENT_3 . METHOD_4 . log . debug ( ( STRING_2 + ( IDENT_6 . METHOD_13 ( IDENT_11 ) ? IDENT_6 . getTime ( ) : null ) ) ) ; return IDENT_6 . METHOD_13 ( IDENT_11 ) ? IDENT_6 . getTime ( ) : null ; }
org . junit . Assert . assertNull ( IDENT_5 . METHOD_7 ( IDENT_6 . getTime ( ) ) ) 