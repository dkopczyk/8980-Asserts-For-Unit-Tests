METHOD_0 ( ) { final java . util . concurrent . IDENT_0 IDENT_1 = new java . util . concurrent . METHOD_1 ( 1 ) ; final java . util . concurrent . IDENT_2 < ? > IDENT_3 = IDENT_4 . METHOD_2 ( 1 , STRING_0 , IDENT_1 ) ; try { IDENT_1 . METHOD_3 ( 200 , TimeUnit . IDENT_5 ) ; IDENT_3 . get ( 200 , TimeUnit . IDENT_5 ) ; } catch ( java . util . concurrent . IDENT_6 e ) { "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( ( STRING_1 + e ) ) ; } if ( ! ( IDENT_3 . METHOD_4 ( ) ) ) { IDENT_3 . METHOD_5 ( true ) ; org . IDENT_7 . executor . IDENT_8 . LOGGER . info ( STRING_2 ) ; } } METHOD_6 ( ) { return IDENT_9 ; }
org . junit . Assert . assertEquals ( STRING_0 , e . METHOD_6 ( ) . getMessage ( ) ) 