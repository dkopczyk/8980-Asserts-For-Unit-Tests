METHOD_0 ( ) { final java . util . concurrent . atomic . IDENT_0 < java . lang . String > method = new java . util . concurrent . atomic . IDENT_0 < java . lang . String > ( ) ; final org . apache . IDENT_1 . server . IDENT_2 . IDENT_3 registry = org . apache . IDENT_1 . loader . IDENT_4 . get ( ) . METHOD_1 ( org . apache . IDENT_1 . server . IDENT_2 . IDENT_3 . class ) ; registry . METHOD_2 ( new org . apache . IDENT_1 . server . IDENT_2 . METHOD_3 ( ) { @ org . apache . IDENT_1 . server . IDENT_2 . Override public void METHOD_4 ( final org . apache . IDENT_1 . server . IDENT_2 . IDENT_5 request , final org . apache . IDENT_1 . server . IDENT_2 . IDENT_6 response ) throws org . apache . IDENT_1 . server . IDENT_2 . Exception { method . set ( request . METHOD_5 ( ) ) ; } } , STRING_0 ) ; try { final java . net . URL url = new java . net . URL ( ( ( STRING_1 + ( IDENT_7 ) ) + STRING_0 ) ) ; final java . net . IDENT_8 connection = java . net . IDENT_8 . class . METHOD_6 ( url . METHOD_7 ( ) ) ; connection . METHOD_8 ( STRING_2 ) ; final java . io . InputStream IDENT_9 = connection . METHOD_9 ( ) ; org . apache . IDENT_1 . loader . IDENT_10 . METHOD_10 ( IDENT_9 ) ; "<AssertPlaceHolder>" ; IDENT_9 . close ( ) ; } finally { registry . METHOD_11 ( STRING_0 ) ; } } get ( ) { org . junit . Assert . assertEquals ( STRING_3 , org . apache . IDENT_1 . IDENT_11 . common . IDENT_10 . METHOD_10 ( new java . net . URL ( ( ( url . METHOD_12 ( ) ) + STRING_4 ) ) ) ) ; }
org . junit . Assert . assertEquals ( STRING_2 , method . get ( ) ) 