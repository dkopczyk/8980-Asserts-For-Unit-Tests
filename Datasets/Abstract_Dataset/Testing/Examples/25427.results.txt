METHOD_0 ( ) { java . util . List < org . apache . IDENT_0 . internal . IDENT_1 . IDENT_2 > IDENT_3 = com . google . common . collect . Lists . newArrayList ( ) ; java . util . List < org . apache . IDENT_0 . IDENT_1 . IDENT_4 > IDENT_5 = com . google . common . collect . Lists . newArrayList ( ) ; final java . util . concurrent . IDENT_6 IDENT_7 = new java . util . concurrent . METHOD_1 ( 0 ) ; final java . util . concurrent . METHOD_1 IDENT_8 = new java . util . concurrent . METHOD_1 ( 0 ) ; final java . util . concurrent . atomic . IDENT_9 IDENT_10 = new java . util . concurrent . atomic . METHOD_2 ( ) ; try { for ( int i = 0 ; i < 2 ; i ++ ) { org . apache . IDENT_0 . IDENT_1 . IDENT_4 IDENT_11 = IDENT_4 . Builder . of ( org . apache . IDENT_0 . internal . IDENT_1 . IDENT_12 . IDENT_13 . METHOD_3 ( ) ) . build ( ) ; IDENT_11 . METHOD_4 ( ) ; IDENT_5 . add ( IDENT_11 ) ; final int IDENT_14 = i ; IDENT_3 . add ( new org . apache . IDENT_0 . internal . IDENT_1 . METHOD_5 ( IDENT_11 , STRING_0 , new org . apache . IDENT_0 . api . METHOD_6 ( ) { @ org . apache . IDENT_0 . internal . IDENT_1 . Override public void METHOD_7 ( ) { IDENT_10 . set ( IDENT_14 ) ; IDENT_7 . METHOD_8 ( ) ; } @ org . apache . IDENT_0 . internal . IDENT_1 . Override public void METHOD_9 ( ) { IDENT_8 . METHOD_8 ( ) ; } } ) ) ; } for ( org . apache . IDENT_0 . internal . IDENT_1 . METHOD_5 IDENT_15 : IDENT_3 ) { IDENT_15 . start ( ) ; } IDENT_7 . METHOD_10 ( 10 , TimeUnit . IDENT_16 ) ; IDENT_8 . METHOD_10 ( 10 , TimeUnit . IDENT_16 ) ; int METHOD_7 = IDENT_10 . get ( ) ; int METHOD_9 = 1 - METHOD_7 ; org . apache . IDENT_0 . internal . IDENT_1 . IDENT_17 . METHOD_11 ( IDENT_5 . get ( METHOD_9 ) . METHOD_12 ( ) . get ( ) , IDENT_5 . get ( METHOD_9 ) . METHOD_13 ( ) , INT_0 ) ; IDENT_3 . get ( METHOD_7 ) . METHOD_14 ( ) ; IDENT_7 . METHOD_10 ( INT_1 , TimeUnit . IDENT_16 ) ; METHOD_7 = IDENT_10 . get ( ) ; METHOD_9 = 1 - METHOD_7 ; IDENT_3 . set ( METHOD_9 , new org . apache . IDENT_0 . internal . IDENT_1 . METHOD_5 ( IDENT_5 . get ( METHOD_9 ) , STRING_0 , new org . apache . IDENT_0 . api . METHOD_6 ( ) { @ org . apache . IDENT_0 . internal . IDENT_1 . Override public void METHOD_7 ( ) { IDENT_7 . METHOD_8 ( ) ; } @ org . apache . IDENT_0 . internal . IDENT_1 . Override public void METHOD_9 ( ) { IDENT_8 . METHOD_8 ( ) ; } } ) ) ; IDENT_3 . get ( METHOD_9 ) . start ( ) ; IDENT_3 . get ( METHOD_9 ) . METHOD_14 ( ) ; IDENT_3 . get ( METHOD_7 ) . METHOD_14 ( ) ; "<AssertPlaceHolder>" ; } finally { for ( org . apache . IDENT_0 . IDENT_1 . IDENT_4 IDENT_11 : IDENT_5 ) { IDENT_11 . METHOD_14 ( ) ; } } } METHOD_14 ( ) { return IDENT_18 . METHOD_14 ( ) ; }
org . junit . Assert . assertFalse ( IDENT_7 . METHOD_10 ( 10 , TimeUnit . IDENT_16 ) ) 