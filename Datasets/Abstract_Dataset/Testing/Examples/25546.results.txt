METHOD_0 ( ) { com . google . IDENT_0 . IDENT_1 IDENT_2 = METHOD_1 ( ) ; org . apache . IDENT_3 . persistence . IDENT_4 . serialization . IDENT_5 . IDENT_6 IDENT_7 = IDENT_2 . getInstance ( org . apache . IDENT_3 . persistence . IDENT_4 . serialization . IDENT_5 . IDENT_6 . class ) ; java . lang . String IDENT_8 = STRING_0 + ( org . apache . commons . lang . IDENT_9 . METHOD_2 ( 10 ) ) ; int IDENT_10 = 20 ; int IDENT_11 = 20 ; int IDENT_12 = INT_0 ; java . util . concurrent . IDENT_13 IDENT_14 = java . util . concurrent . IDENT_15 . METHOD_3 ( IDENT_10 ) ; for ( int i = 0 ; i < IDENT_11 ; i ++ ) { IDENT_14 . METHOD_4 ( ( ) -> { for ( int j = 0 ; j < IDENT_12 ; j ++ ) { IDENT_7 . METHOD_5 ( IDENT_8 , IDENT_16 . Type . IDENT_17 , 1 ) ; } for ( int k = 0 ; k < IDENT_12 ; k ++ ) { IDENT_7 . METHOD_6 ( IDENT_8 , IDENT_16 . Type . IDENT_17 , 1 ) ; } } ) ; } IDENT_14 . METHOD_7 ( ) ; try { while ( ! ( IDENT_14 . METHOD_8 ( 3 , TimeUnit . IDENT_18 ) ) ) { System . out . println ( ( STRING_1 + ( IDENT_7 . METHOD_9 ( IDENT_8 , IDENT_16 . Type . IDENT_17 ) ) ) ) ; } } catch ( java . lang . IDENT_19 e ) { e . printStackTrace ( ) ; } "<AssertPlaceHolder>" ; } METHOD_9 ( java . lang . String , org . apache . IDENT_3 . persistence . IDENT_4 . serialization . IDENT_5 . IDENT_20 ) { java . lang . String key = METHOD_10 ( IDENT_8 , type ) ; if ( ( IDENT_21 . get ( key ) ) == null ) { java . lang . Long value = METHOD_11 ( IDENT_8 , type ) ; if ( value == null ) { throw new org . apache . IDENT_3 . persistence . IDENT_4 . exceptions . METHOD_12 ( java . text . IDENT_22 . format ( STRING_2 , IDENT_8 , type ) ) ; } else { IDENT_21 . put ( key , new org . apache . IDENT_3 . persistence . IDENT_4 . serialization . IDENT_5 . impl . IDENT_23 . METHOD_13 ( value ) ) ; } } MOD_0 ( IDENT_21 ) { METHOD_14 ( IDENT_8 , type ) ; } return IDENT_21 . get ( key ) . value ( ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_7 . METHOD_9 ( IDENT_8 , IDENT_16 . Type . IDENT_17 ) ) 