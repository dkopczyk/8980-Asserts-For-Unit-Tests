METHOD_0 ( ) { this . METHOD_1 ( ) ; byte [ ] data = org . apache . commons . io . IDENT_0 . toByteArray ( this . getClass ( ) . getResourceAsStream ( STRING_0 ) ) ; org . glassfish . jersey . media . IDENT_1 . IDENT_2 IDENT_3 = new org . glassfish . jersey . media . IDENT_1 . METHOD_2 ( ) . field ( STRING_1 , data , IDENT_4 . IDENT_5 ) ; org . apache . IDENT_6 . rest . test . resource . model . IDENT_7 IDENT_8 = METHOD_3 ( METHOD_4 ( STRING_2 ) ) . METHOD_5 ( IDENT_3 ) ; java . util . UUID IDENT_9 = IDENT_8 . METHOD_6 ( ) . get ( 0 ) . METHOD_7 ( ) ; org . apache . IDENT_6 . rest . IDENT_10 . IDENT_11 . IDENT_12 . logger . info ( STRING_3 ) ; java . lang . Thread . sleep ( INT_0 ) ; org . apache . IDENT_6 . rest . test . resource . model . IDENT_7 IDENT_13 = METHOD_3 ( METHOD_4 ( ( STRING_4 + IDENT_9 ) ) ) . get ( org . apache . IDENT_6 . rest . test . resource . model . IDENT_7 . class ) ; org . apache . IDENT_6 . rest . IDENT_10 . IDENT_11 . IDENT_12 . logger . info ( STRING_5 ) ; java . io . InputStream is = METHOD_3 ( METHOD_4 ( ( STRING_4 + IDENT_9 ) ) ) . METHOD_8 ( ) ; byte [ ] IDENT_14 = org . apache . commons . io . IDENT_0 . toByteArray ( is ) ; "<AssertPlaceHolder>" ; METHOD_3 ( METHOD_4 ( ( STRING_4 + IDENT_9 ) ) ) . delete ( ) ; } METHOD_8 ( ) { return METHOD_8 ( true ) ; }
org . junit . Assert . assertEquals ( data . length , IDENT_14 . length ) 