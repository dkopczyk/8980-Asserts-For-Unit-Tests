METHOD_0 ( ) { org . apache . IDENT_0 . rest . test . resource . IDENT_1 . IDENT_2 IDENT_3 = this . app ( ) . collection ( STRING_0 ) ; java . util . Map IDENT_4 = METHOD_1 ( STRING_1 , STRING_2 ) ; java . util . Map IDENT_5 = METHOD_1 ( STRING_1 , STRING_3 ) ; java . util . Map props = new java . util . HashMap ( ) ; props . put ( STRING_4 , IDENT_4 ) ; props . put ( STRING_5 , STRING_6 ) ; props . put ( STRING_7 , STRING_8 1 ) ; for ( int i = 0 ; i < 5 ; i ++ ) { props . put ( STRING_8 , i ) ; org . apache . IDENT_0 . rest . test . resource . model . Entity IDENT_6 = IDENT_3 . METHOD_2 ( new org . apache . IDENT_0 . rest . test . resource . model . Entity ( props ) ) ; } METHOD_3 ( ) ; java . lang . String query = STRING_9 ; org . apache . IDENT_0 . rest . test . resource . model . Collection collection = IDENT_3 . get ( ) ; java . lang . String IDENT_7 = collection . METHOD_4 ( ) . METHOD_5 ( ) . get ( 0 ) . METHOD_6 ( ) . toString ( ) ; java . lang . StringBuilder buf = new java . lang . StringBuilder ( IDENT_7 ) ; buf . append ( STRING_8 0 ) ; buf . append ( buf ) ; props . put ( STRING_4 , IDENT_5 ) ; org . apache . IDENT_0 . rest . test . resource . model . Entity IDENT_6 = IDENT_3 . METHOD_2 ( new org . apache . IDENT_0 . rest . test . resource . model . Entity ( props ) ) ; METHOD_3 ( ) ; collection = IDENT_3 . get ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { return response ; }
org . junit . Assert . assertEquals ( 6 , collection . METHOD_4 ( ) . METHOD_5 ( ) . size ( ) ) 