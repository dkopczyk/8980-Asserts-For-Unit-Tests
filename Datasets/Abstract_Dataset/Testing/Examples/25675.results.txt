METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 field = new org . IDENT_0 . IDENT_1 . METHOD_1 ( STRING_0 ) ; field . METHOD_2 ( STRING_1 ) ; field . METHOD_3 ( org . apache . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 ) ; field . METHOD_4 ( org . apache . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_7 ) ; IDENT_8 . METHOD_5 ( field ) ; java . lang . String actual = builder . build ( IDENT_8 ) ; java . lang . String expected = STRING_2 ; "<AssertPlaceHolder>" ; } build ( java . util . Map ) { org . IDENT_0 . IDENT_1 . packet . IDENT_9 IDENT_10 = new org . IDENT_0 . IDENT_1 . packet . METHOD_6 ( ) ; IDENT_10 . METHOD_7 ( METHOD_8 ( parameters , IDENT_11 . IDENT_12 ) ) ; org . IDENT_0 . IDENT_1 . packet . IDENT_13 IDENT_8 = new org . IDENT_0 . IDENT_1 . packet . METHOD_9 ( STRING_3 ) ; for ( java . util . Map . Entry < java . lang . String , java . lang . String [ ] > entry : parameters . entrySet ( ) ) { if ( ! ( IDENT_11 . IDENT_12 . equals ( entry . getKey ( ) ) ) ) { org . IDENT_0 . IDENT_1 . METHOD_1 field = new org . IDENT_0 . IDENT_1 . METHOD_1 ( entry . getKey ( ) ) ; for ( java . lang . String value : entry . getValue ( ) ) { java . lang . String [ ] IDENT_14 = value . split ( STRING_4 ) ; for ( java . lang . String IDENT_15 : IDENT_14 ) { field . METHOD_3 ( IDENT_15 ) ; } } IDENT_8 . METHOD_5 ( field ) ; } } IDENT_10 . METHOD_10 ( IDENT_8 ) ; return IDENT_10 ; }
org . junit . Assert . assertEquals ( expected , actual ) 