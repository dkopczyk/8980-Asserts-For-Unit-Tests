METHOD_0 ( ) { service = io . IDENT_0 . IDENT_1 . service . IDENT_2 . IDENT_3 . METHOD_1 ( ) ; service . start ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { IDENT_4 . METHOD_3 ( ) ; try { if ( ( process ) == null ) { return false ; } if ( ! ( process . METHOD_2 ( ) ) ) { return false ; } try { METHOD_4 ( INT_0 , TimeUnit . IDENT_5 ) ; return true ; } catch ( org . openqa . selenium . net . IDENT_6 e ) { return false ; } catch ( java . net . IDENT_7 e ) { throw new io . IDENT_0 . IDENT_1 . service . IDENT_2 . METHOD_5 ( e . getMessage ( ) , e ) ; } } finally { METHOD_3 . METHOD_6 ( ) ; } }
org . junit . Assert . assertTrue ( service . METHOD_2 ( ) ) 