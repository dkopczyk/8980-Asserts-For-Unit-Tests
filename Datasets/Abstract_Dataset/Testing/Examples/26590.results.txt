test ( ) { org . IDENT_0 . reflect . IDENT_1 < org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . T , org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . IDENT_4 > IDENT_5 = new org . IDENT_0 . reflect . IDENT_1 < org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . T , org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . IDENT_4 > ( ) { @ org . IDENT_0 . reflect . test . IDENT_2 . Override public org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . IDENT_4 get ( org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . T target ) throws org . IDENT_0 . reflect . test . IDENT_2 . Exception { return target . s ; } } ; org . IDENT_0 . reflect . IDENT_6 < org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . IDENT_4 , org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . IDENT_7 > IDENT_8 = new org . IDENT_0 . reflect . IDENT_6 < org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . IDENT_4 , org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . IDENT_7 > ( ) { @ org . IDENT_0 . reflect . test . IDENT_2 . Override public org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . IDENT_7 newInstance ( org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . IDENT_4 s ) throws org . IDENT_0 . reflect . test . IDENT_2 . Exception { return new org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . METHOD_0 ( s ) ; } } ; org . IDENT_0 . reflect . IDENT_2 . IDENT_9 < org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . IDENT_4 , org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . T , org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . METHOD_0 > IDENT_2 = new org . IDENT_0 . reflect . IDENT_2 . IDENT_9 < org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . IDENT_4 , org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . T , org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . METHOD_0 > ( IDENT_8 , IDENT_5 ) ; org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . T t = new org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . T ( new org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . METHOD_1 ( ) ) ; org . IDENT_0 . reflect . test . IDENT_2 . IDENT_3 . METHOD_0 p = IDENT_2 . get ( t ) ; "<AssertPlaceHolder>" ; } get ( java . sql . ResultSet ) { return target . METHOD_2 ( column ) ; }
org . junit . Assert . assertEquals ( t . s , p . s ) 