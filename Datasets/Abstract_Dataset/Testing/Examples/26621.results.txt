METHOD_0 ( ) { try { final java . lang . reflect . Field field = net . sf . IDENT_0 . IDENT_1 . IDENT_2 . class . METHOD_1 ( STRING_0 ) ; field . METHOD_2 ( true ) ; field . set ( manager , null ) ; } catch ( java . lang . IDENT_3 | java . lang . IDENT_4 ex ) { org . junit . Assert . fail ( ex . getMessage ( ) ) ; } IDENT_5 . application . IDENT_6 . METHOD_3 ( ( ) -> manager . METHOD_4 ( ) ) ; org . IDENT_7 . util . IDENT_8 . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { if ( ( IDENT_9 ) == null ) { try { final IDENT_5 . IDENT_10 . IDENT_11 root = IDENT_5 . IDENT_12 . IDENT_13 . load ( getClass ( ) . getResource ( STRING_1 ) , lang , IDENT_14 . getInstance ( IDENT_5 . util . IDENT_15 . class ) , ( IDENT_16 ) -> IDENT_14 . getInstance ( IDENT_16 ) ) ; final IDENT_5 . IDENT_10 . IDENT_17 IDENT_10 = new IDENT_5 . IDENT_10 . METHOD_6 ( root ) ; IDENT_9 = new IDENT_5 . IDENT_18 . METHOD_7 ( IDENT_5 . IDENT_18 . IDENT_19 . IDENT_20 ) ; IDENT_9 . METHOD_8 ( IDENT_10 ) ; IDENT_9 . METHOD_9 ( ) ; } catch ( final java . io . IOException ex ) { IDENT_21 . INSTANCE . add ( ex ) ; } } return IDENT_9 ; }
org . junit . Assert . assertNotNull ( manager . METHOD_4 ( ) ) 