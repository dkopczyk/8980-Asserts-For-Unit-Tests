METHOD_0 ( ) { IDENT_0 . METHOD_1 ( FLOAT_0 , FLOAT_1 ) ; IDENT_0 . METHOD_2 ( FLOAT_2 ) ; IDENT_1 . METHOD_3 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { final double IDENT_2 = METHOD_5 ( ) ; final net . sf . IDENT_3 . model . api . IDENT_1 . IDENT_4 pos = METHOD_6 ( ) ; final double IDENT_5 = METHOD_7 ( ) ; final double IDENT_6 = java . util . stream . IDENT_7 . range ( 0 , METHOD_8 ( ) ) . METHOD_9 ( ( x ) -> METHOD_10 ( ( IDENT_5 + ( x * IDENT_2 ) ) ) ) . min ( ) . METHOD_11 ( 0.0 ) ; return IDENT_8 . IDENT_9 . METHOD_12 ( ( ( pos . METHOD_13 ( ) ) + ( ( IDENT_5 * ( net . sf . IDENT_3 . model . api . IDENT_1 . IDENT_10 . IDENT_11 ) ) * ( METHOD_14 ( ) ) ) ) , ( ( pos . METHOD_10 ( ) ) - ( ( IDENT_6 * ( net . sf . IDENT_3 . model . api . IDENT_1 . IDENT_10 . IDENT_11 ) ) * ( METHOD_15 ( ) ) ) ) ) ; }
org . junit . Assert . assertEquals ( IDENT_0 . METHOD_4 ( ) , IDENT_1 . METHOD_4 ( ) ) 