METHOD_0 ( ) { final java . io . File IDENT_0 = IDENT_1 . METHOD_1 ( ) ; org . IDENT_2 . IDENT_3 . impl . IDENT_4 . IDENT_5 . IDENT_6 IDENT_7 = new org . IDENT_2 . IDENT_3 . impl . IDENT_4 . IDENT_5 . METHOD_2 ( new java . net . URL ( STRING_0 ) ) ; METHOD_2 . IDENT_8 = METHOD_1 . getAbsolutePath ( ) ; final java . nio . file . Path path = java . nio . file . IDENT_9 . get ( METHOD_1 . getAbsolutePath ( ) , STRING_1 ) ; java . nio . file . IDENT_10 . write ( path , STRING_2 . getBytes ( STRING_3 ) ) ; java . io . InputStream is = IDENT_7 . METHOD_3 ( ) ; java . lang . String content = org . IDENT_2 . IDENT_3 . impl . IDENT_4 . IDENT_5 . IDENT_11 . METHOD_4 ( is ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . io . InputStream ) { final java . io . ByteArrayOutputStream out = new java . io . ByteArrayOutputStream ( ) ; final byte [ ] buffer = new byte [ INT_0 ] ; int length ; while ( ( length = in . read ( buffer ) ) != ( - 1 ) ) { out . write ( buffer , 0 , length ) ; } out . METHOD_5 ( ) ; return new java . lang . String ( out . toByteArray ( ) ) ; }
org . junit . Assert . assertThat ( content , org . hamcrest . core . Is . is ( STRING_2 ) ) 