METHOD_0 ( ) { try { org . IDENT_0 . IDENT_1 . container . configuration . IDENT_2 . METHOD_1 ( STRING_0 , STRING_1 ) ; org . junit . Assert . fail ( ) ; } catch ( org . IDENT_0 . IDENT_1 . container . configuration . IDENT_3 ex ) { java . lang . String expected = STRING_1 ; "<AssertPlaceHolder>" ; } } METHOD_1 ( java . lang . String , java . lang . String ) { org . IDENT_0 . IDENT_1 . container . configuration . IDENT_2 . METHOD_2 ( IDENT_4 , STRING_2 ) ; org . IDENT_0 . IDENT_1 . container . configuration . IDENT_2 . METHOD_2 ( message , STRING_3 ) ; if ( IDENT_4 . METHOD_3 ( java . lang . System . getProperty ( STRING_4 ) ) ) { throw new org . IDENT_0 . IDENT_1 . container . configuration . METHOD_4 ( ( STRING_5 + STRING_6 ) ) ; } java . lang . String [ ] tokens = new java . io . File ( IDENT_4 ) . getName ( ) . split ( STRING_7 ) ; if ( ( ( ! ( ( tokens . length ) >= 2 ) ) || ( ! ( tokens [ ( ( tokens . length ) - 1 ) ] . equals ( STRING_8 ) ) ) ) || ( tokens [ 0 ] . trim ( ) . isEmpty ( ) ) ) { throw new org . IDENT_0 . IDENT_1 . container . configuration . METHOD_4 ( message ) ; } }
org . junit . Assert . assertEquals ( expected , ex . getMessage ( ) ) 