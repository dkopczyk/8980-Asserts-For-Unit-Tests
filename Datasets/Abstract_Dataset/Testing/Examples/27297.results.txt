METHOD_0 ( ) { com . asakusafw . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new com . asakusafw . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; org . apache . poi . IDENT_4 . IDENT_5 . IDENT_6 IDENT_7 = METHOD_2 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . apache . poi . IDENT_4 . IDENT_5 . IDENT_6 ) { if ( METHOD_2 == null ) { throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } com . asakusafw . IDENT_0 . IDENT_1 . IDENT_8 item = IDENT_8 . IDENT_9 ; java . lang . String IDENT_10 = com . asakusafw . IDENT_0 . IDENT_1 . METHOD_1 . METHOD_4 ( METHOD_2 , item . METHOD_5 ( ) , item . METHOD_6 ( ) ) ; if ( ( IDENT_10 . equals ( item . METHOD_7 ( ) ) ) == false ) { return false ; } java . lang . String format = com . asakusafw . IDENT_0 . IDENT_1 . METHOD_1 . METHOD_4 ( METHOD_2 , item . METHOD_5 ( ) , ( ( item . METHOD_6 ( ) ) + 1 ) ) ; return com . asakusafw . IDENT_0 . IDENT_1 . METHOD_1 . IDENT_11 . contains ( format ) ; }
org . junit . Assert . assertThat ( IDENT_3 . METHOD_3 ( METHOD_2 ) , is ( false ) ) 