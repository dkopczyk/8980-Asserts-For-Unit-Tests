METHOD_0 ( ) { compiler . METHOD_1 ( ( conf , flow , IDENT_0 ) -> { flow . start ( ) ; return METHOD_2 ( STRING_0 , STRING_1 , STRING_2 ) ; } ) ; com . asakusafw . IDENT_1 . IDENT_2 IDENT_3 = new com . asakusafw . IDENT_1 . METHOD_3 ( getClass ( ) ) ; IDENT_3 . METHOD_4 ( framework . METHOD_5 ( ) ) ; com . asakusafw . IDENT_4 . flow . IDENT_5 < com . asakusafw . IDENT_1 . testing . model . IDENT_6 > in = IDENT_3 . input ( STRING_1 , com . asakusafw . IDENT_1 . testing . model . IDENT_6 . class ) . METHOD_6 ( STRING_3 ) ; com . asakusafw . IDENT_4 . flow . IDENT_7 < com . asakusafw . IDENT_1 . testing . model . IDENT_6 > out = IDENT_3 . output ( STRING_2 , com . asakusafw . IDENT_1 . testing . model . IDENT_6 . class ) . verify ( STRING_4 , new com . asakusafw . IDENT_1 . METHOD_7 ( ) ) ; java . util . concurrent . atomic . IDENT_8 IDENT_9 = new java . util . concurrent . atomic . METHOD_8 ( ) ; IDENT_3 . METHOD_9 ( ( ) -> { out . add ( in ) ; IDENT_9 . set ( true ) ; } ) ; "<AssertPlaceHolder>" ; } get ( ) { if ( IDENT_10 ) { return next ; } throw new java . io . IOException ( ) ; }
org . junit . Assert . assertThat ( IDENT_9 . get ( ) , is ( true ) ) 