METHOD_0 ( ) { char IDENT_0 = STRING_0 ; char IDENT_1 = STRING_1 ; char IDENT_2 = STRING_1 ; char IDENT_3 = STRING_1 ; char IDENT_4 = STRING_1 ; char IDENT_5 = STRING_2 ; int IDENT_6 = INT_0 ; int IDENT_7 = - INT_1 ; java . lang . Class < ? > c = com . IDENT_8 . IDENT_9 . IDENT_10 . METHOD_1 ( STRING_3 ) ; java . lang . reflect . Method m = c . METHOD_2 ( STRING_4 , com . IDENT_8 . IDENT_9 . IDENT_10 . METHOD_1 ( STRING_5 ) , com . IDENT_8 . IDENT_9 . IDENT_10 . METHOD_1 ( STRING_5 ) , com . IDENT_8 . IDENT_9 . IDENT_10 . METHOD_1 ( STRING_5 ) , com . IDENT_8 . IDENT_9 . IDENT_10 . METHOD_1 ( STRING_5 ) , com . IDENT_8 . IDENT_9 . IDENT_10 . METHOD_1 ( STRING_5 ) , com . IDENT_8 . IDENT_9 . IDENT_10 . METHOD_1 ( STRING_5 ) , com . IDENT_8 . IDENT_9 . IDENT_10 . METHOD_1 ( STRING_6 ) , com . IDENT_8 . IDENT_9 . IDENT_10 . METHOD_1 ( STRING_6 ) ) ; m . METHOD_3 ( true ) ; boolean IDENT_11 = ( ( java . lang . Boolean ) ( m . invoke ( null , IDENT_0 , IDENT_1 , IDENT_2 , IDENT_3 , IDENT_4 , IDENT_5 , IDENT_6 , IDENT_7 ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . reflect . IDENT_12 ) { if ( ! ( com . alibaba . IDENT_13 . util . IDENT_14 . IDENT_15 ) ) { return ; } if ( obj . METHOD_4 ( ) ) { return ; } try { obj . METHOD_3 ( true ) ; } catch ( java . security . IDENT_16 error ) { com . alibaba . IDENT_13 . util . IDENT_14 . IDENT_15 = false ; } }
org . junit . Assert . assertEquals ( false , IDENT_11 ) 