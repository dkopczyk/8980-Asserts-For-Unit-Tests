METHOD_0 ( ) { METHOD_1 ( ) ; java . util . concurrent . atomic . IDENT_0 call = new java . util . concurrent . atomic . METHOD_2 ( ) ; com . asakusafw . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_3 ( ( args , conf ) -> { call . set ( true ) ; return 0 ; } ) ; try { executor . execute ( context , com . asakusafw . IDENT_1 . IDENT_2 . IDENT_4 . task ( com . asakusafw . IDENT_1 . IDENT_2 . IDENT_3 . class . getName ( ) ) ) ; } catch ( java . io . IOException | java . lang . IDENT_5 e ) { throw new java . lang . METHOD_4 ( e ) ; } "<AssertPlaceHolder>" ; } get ( ) { if ( IDENT_6 ) { return next ; } throw new java . io . IOException ( ) ; }
org . junit . Assert . assertThat ( call . get ( ) , is ( true ) ) 