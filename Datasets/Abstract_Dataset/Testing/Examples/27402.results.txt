execute ( ) { java . io . File in = IDENT_0 . METHOD_0 ( STRING_0 ) ; java . io . File out = IDENT_0 . METHOD_0 ( STRING_1 ) ; put ( in , STRING_2 , STRING_3 , STRING_4 ) ; try ( com . asakusafw . IDENT_1 . core . IDENT_2 task = new com . asakusafw . IDENT_1 . core . METHOD_1 ( METHOD_2 ( ) , script ( p ( STRING_5 , STRING_6 , in , STRING_7 , out ) ) , STRING_5 , true , true , new com . asakusafw . IDENT_1 . core . METHOD_3 ( ) ) ) { task . execute ( ) ; } java . util . List < java . lang . String > results = get ( out ) ; "<AssertPlaceHolder>" ; } is ( java . lang . IDENT_3 , int , char ) { return ( string . charAt ( column ) ) == value ; }
org . junit . Assert . assertThat ( results , is ( java . util . Arrays . asList ( STRING_2 , STRING_3 , STRING_4 ) ) ) 