METHOD_0 ( ) { java . util . Properties p = new java . util . Properties ( ) ; p . setProperty ( ( ( IDENT_0 . IDENT_1 ) + STRING_0 ) , com . asakusafw . IDENT_2 . core . process . IDENT_3 . class . getName ( ) ) ; java . util . Collection < ? extends com . asakusafw . IDENT_2 . core . process . IDENT_0 > IDENT_4 = com . asakusafw . IDENT_2 . core . process . IDENT_0 . METHOD_1 ( p , com . asakusafw . IDENT_2 . core . IDENT_5 . METHOD_2 ( getClass ( ) . METHOD_3 ( ) ) ) ; java . util . Properties IDENT_6 = new java . util . Properties ( ) ; for ( com . asakusafw . IDENT_2 . core . process . IDENT_0 IDENT_7 : IDENT_4 ) { IDENT_7 . METHOD_0 ( IDENT_6 ) ; } "<AssertPlaceHolder>" ; } is ( java . lang . String ) { com . asakusafw . IDENT_8 . java . util . IDENT_9 IDENT_10 = com . asakusafw . IDENT_8 . java . util . IDENT_9 . of ( new com . asakusafw . IDENT_8 . model . METHOD_4 ( null , name ) ) ; IDENT_10 . METHOD_5 ( STRING_1 ) ; java . lang . Object result = invoke ( IDENT_10 . METHOD_6 ( ) ) ; return ( ( java . lang . Boolean ) ( result ) ) ; }
org . junit . Assert . assertThat ( IDENT_6 , is ( p ) ) 