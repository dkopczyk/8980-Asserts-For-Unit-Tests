METHOD_0 ( ) { java . io . File file = IDENT_0 . METHOD_1 ( STRING_0 ) ; put ( file , STRING_1 ) ; java . lang . StringBuilder buf = new java . lang . StringBuilder ( ) ; try ( com . asakusafw . IDENT_1 . stream . IDENT_2 < java . lang . StringBuilder > driver = new com . asakusafw . IDENT_1 . stream . METHOD_2 ( STRING_2 , STRING_0 , METHOD_3 ( new com . asakusafw . IDENT_1 . stream . IDENT_3 < java . io . InputStream > ( ) { @ com . asakusafw . IDENT_1 . stream . Override public java . lang . String METHOD_4 ( ) { return STRING_3 ; } @ com . asakusafw . IDENT_1 . stream . Override public java . io . InputStream METHOD_5 ( ) throws java . io . IOException { return new java . io . InputStream ( ) { @ com . asakusafw . IDENT_1 . stream . Override public int read ( ) throws java . io . IOException { return - 1 ; } @ com . asakusafw . IDENT_1 . stream . Override public void close ( ) throws java . io . IOException { throw new java . io . IOException ( ) ; } } ; } } ) , new com . asakusafw . IDENT_1 . stream . METHOD_6 ( ) , buf ) ) { driver . METHOD_7 ( ) ; "<AssertPlaceHolder>" ; } } next ( ) { if ( input . METHOD_8 ( object ) ) { return IDENT_4 . METHOD_9 ( object ) ; } return null ; }
org . junit . Assert . assertThat ( driver . next ( ) , is ( false ) ) 