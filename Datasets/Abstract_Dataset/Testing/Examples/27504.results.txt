METHOD_0 ( ) { java . util . Properties properties = new java . util . Properties ( ) ; properties . put ( STRING_0 , STRING_0 ) ; properties . put ( STRING_1 , STRING_1 ) ; properties . put ( STRING_2 , STRING_2 ) ; properties . put ( STRING_3 , STRING_3 ) ; properties . put ( STRING_4 , STRING_4 ) ; properties . put ( STRING_5 , STRING_5 ) ; properties . put ( STRING_6 , STRING_6 ) ; char [ ] array = STRING_7 . METHOD_1 ( ) ; properties . put ( array , STRING_7 ) ; properties . put ( STRING_7 , array ) ; java . util . Properties IDENT_0 = new java . util . Properties ( ) ; IDENT_0 . put ( STRING_3 , STRING_3 ) ; IDENT_0 . put ( STRING_4 , STRING_4 ) ; IDENT_0 . put ( STRING_5 , STRING_5 ) ; IDENT_0 . put ( STRING_6 , STRING_6 ) ; IDENT_0 . put ( array , STRING_7 ) ; com . asakusafw . IDENT_1 . core . util . IDENT_2 . METHOD_0 ( properties , STRING_2 ) ; "<AssertPlaceHolder>" ; } is ( java . lang . String ) { com . asakusafw . IDENT_3 . java . util . IDENT_4 IDENT_5 = com . asakusafw . IDENT_3 . java . util . IDENT_4 . of ( new com . asakusafw . IDENT_3 . model . METHOD_2 ( null , name ) ) ; IDENT_5 . METHOD_3 ( STRING_8 ) ; java . lang . Object result = invoke ( IDENT_5 . METHOD_4 ( ) ) ; return ( ( java . lang . Boolean ) ( result ) ) ; }
org . junit . Assert . assertThat ( properties , is ( IDENT_0 ) ) 