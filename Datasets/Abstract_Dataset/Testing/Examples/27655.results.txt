METHOD_0 ( ) { org . IDENT_0 . media . entity . IDENT_1 item = new org . IDENT_0 . media . entity . METHOD_1 ( ) ; item . METHOD_2 ( IDENT_2 . IDENT_3 ) ; item . METHOD_3 ( STRING_0 ) ; org . IDENT_0 . media . entity . IDENT_4 IDENT_5 = METHOD_4 ( new org . joda . time . METHOD_5 ( ) . METHOD_6 ( 2 ) , new org . joda . time . METHOD_5 ( ) . METHOD_6 ( 6 ) ) ; IDENT_5 . METHOD_2 ( IDENT_2 . IDENT_6 ) ; IDENT_5 . METHOD_3 ( STRING_1 ) ; org . IDENT_0 . media . entity . METHOD_1 IDENT_7 = METHOD_7 ( new org . joda . time . METHOD_5 ( ) . METHOD_6 ( 4 ) , new org . joda . time . METHOD_5 ( ) . METHOD_6 ( 5 ) ) ; IDENT_7 . METHOD_2 ( IDENT_2 . IDENT_6 ) ; IDENT_7 . METHOD_3 ( STRING_2 ) ; java . util . List < org . IDENT_0 . IDENT_8 . results . IDENT_9 . IDENT_10 < org . IDENT_0 . media . entity . IDENT_11 > > IDENT_12 = com . google . common . collect . ImmutableList . of ( org . IDENT_0 . IDENT_8 . results . IDENT_9 . IDENT_13 . < org . IDENT_0 . media . entity . IDENT_11 > METHOD_8 ( STRING_3 ) . METHOD_9 ( IDENT_5 , org . IDENT_0 . IDENT_8 . results . IDENT_9 . IDENT_14 . valueOf ( FLOAT_0 ) ) . METHOD_9 ( IDENT_7 , org . IDENT_0 . IDENT_8 . results . IDENT_9 . IDENT_14 . valueOf ( FLOAT_1 ) ) . build ( ) ) ; org . IDENT_0 . IDENT_8 . results . IDENT_15 IDENT_16 = IDENT_17 . METHOD_10 ( item , IDENT_12 , new org . IDENT_0 . IDENT_8 . results . description . METHOD_11 ( ) , IDENT_18 ) ; "<AssertPlaceHolder>" ; } METHOD_12 ( ) { return results . stream ( ) . map ( IDENT_15 :: METHOD_12 ) . map ( IDENT_19 :: values ) . METHOD_13 ( Collection :: stream ) . map ( IDENT_20 :: IDENT_21 ) . collect ( com . IDENT_22 . common . stream . IDENT_23 . METHOD_14 ( ) ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_16 . METHOD_12 ( ) . values ( ) . size ( ) ) == 1 ) ) 