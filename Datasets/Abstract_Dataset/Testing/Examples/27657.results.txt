METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . results . IDENT_2 IDENT_3 = METHOD_1 ( new org . joda . time . METHOD_2 ( ) . METHOD_3 ( 2 ) , new org . joda . time . METHOD_2 ( ) . METHOD_3 ( 4 ) , new org . joda . time . METHOD_2 ( ) . METHOD_3 ( 2 ) , new org . joda . time . METHOD_2 ( ) . METHOD_3 ( 3 ) , new org . joda . time . METHOD_2 ( ) . METHOD_3 ( 9 ) , new org . joda . time . METHOD_2 ( ) . METHOD_3 ( 4 ) , new org . joda . time . METHOD_2 ( ) . METHOD_3 ( 6 ) , new org . joda . time . METHOD_2 ( ) . METHOD_3 ( 9 ) . METHOD_4 ( 15 ) , FLOAT_0 , FLOAT_1 , FLOAT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { return results . stream ( ) . map ( IDENT_2 :: METHOD_5 ) . map ( IDENT_4 :: values ) . METHOD_6 ( Collection :: stream ) . map ( IDENT_5 :: IDENT_6 ) . collect ( com . IDENT_7 . common . stream . IDENT_8 . METHOD_7 ( ) ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_3 . METHOD_5 ( ) . values ( ) . size ( ) ) == 1 ) ) 