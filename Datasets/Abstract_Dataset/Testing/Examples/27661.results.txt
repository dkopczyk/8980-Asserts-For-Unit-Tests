METHOD_0 ( ) { org . IDENT_0 . media . entity . IDENT_1 item = new org . IDENT_0 . media . entity . METHOD_1 ( ) ; item . METHOD_2 ( IDENT_2 . IDENT_3 ) ; item . METHOD_3 ( STRING_0 ) ; org . IDENT_0 . media . entity . METHOD_1 IDENT_4 = new org . IDENT_0 . media . entity . METHOD_1 ( ) ; IDENT_4 . METHOD_2 ( IDENT_2 . IDENT_5 ) ; IDENT_4 . METHOD_3 ( STRING_1 ) ; org . IDENT_0 . media . entity . METHOD_1 IDENT_6 = new org . IDENT_0 . media . entity . METHOD_1 ( ) ; IDENT_6 . METHOD_2 ( IDENT_2 . IDENT_5 ) ; IDENT_6 . METHOD_3 ( STRING_2 ) ; java . util . List < org . IDENT_0 . IDENT_7 . results . IDENT_8 . IDENT_9 < org . IDENT_0 . media . entity . METHOD_1 > > IDENT_10 = com . google . common . collect . ImmutableList . of ( org . IDENT_0 . IDENT_7 . results . IDENT_8 . IDENT_11 . < org . IDENT_0 . media . entity . METHOD_1 > METHOD_4 ( STRING_3 ) . METHOD_5 ( IDENT_4 , org . IDENT_0 . IDENT_7 . results . IDENT_8 . IDENT_12 . valueOf ( FLOAT_0 ) ) . METHOD_5 ( IDENT_6 , org . IDENT_0 . IDENT_7 . results . IDENT_8 . IDENT_12 . valueOf ( FLOAT_0 ) ) . build ( ) ) ; org . IDENT_0 . IDENT_7 . results . IDENT_13 IDENT_14 = IDENT_15 . METHOD_6 ( item , IDENT_10 , new org . IDENT_0 . IDENT_7 . results . description . METHOD_7 ( ) , IDENT_16 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( ) { return results . stream ( ) . map ( IDENT_13 :: METHOD_8 ) . map ( IDENT_17 :: values ) . METHOD_9 ( Collection :: stream ) . map ( IDENT_18 :: IDENT_19 ) . collect ( com . IDENT_20 . common . stream . IDENT_21 . METHOD_10 ( ) ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_14 . METHOD_8 ( ) . values ( ) . size ( ) ) == 1 ) ) 