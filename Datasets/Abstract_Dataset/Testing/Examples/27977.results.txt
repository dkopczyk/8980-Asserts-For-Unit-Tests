METHOD_0 ( ) { com . android . IDENT_0 . IDENT_1 device = org . mockito . Mockito . mock ( com . android . IDENT_0 . IDENT_1 . class ) ; IDENT_2 = org . mockito . Mockito . mock ( com . IDENT_3 . IDENT_4 . core . IDENT_5 . IDENT_6 . IDENT_7 . class ) ; com . IDENT_3 . IDENT_4 . core . IDENT_5 . impl . IDENT_8 IDENT_9 = org . mockito . Mockito . METHOD_1 ( new com . IDENT_3 . IDENT_4 . core . IDENT_5 . impl . METHOD_2 ( ) ) ; org . mockito . Mockito . when ( IDENT_9 . METHOD_3 ( ) ) . thenReturn ( IDENT_2 ) ; org . mockito . Mockito . when ( IDENT_2 . METHOD_4 ( ) ) . thenReturn ( false ) ; org . mockito . Mockito . when ( device . METHOD_5 ( ) ) . thenReturn ( IDENT_1 . IDENT_10 . IDENT_11 ) ; IDENT_9 . METHOD_6 ( android ) ; java . lang . String [ ] IDENT_12 = new java . lang . String [ ] { STRING_0 } ; org . mockito . Mockito . when ( android . METHOD_7 ( org . mockito . Mockito . any ( com . android . IDENT_0 . IDENT_1 . class ) , org . mockito . Mockito . anyString ( ) ) ) . thenReturn ( IDENT_12 ) ; boolean IDENT_13 = IDENT_9 . METHOD_8 ( device ) ; IDENT_13 = IDENT_9 . METHOD_8 ( device ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( com . android . IDENT_0 . IDENT_1 ) { if ( device == null ) { throw new java . lang . Exception ( STRING_1 ) ; } com . android . IDENT_0 . IDENT_1 . IDENT_10 state = device . METHOD_5 ( ) ; if ( state . equals ( IDENT_10 . IDENT_14 ) ) { return false ; } for ( java . lang . String IDENT_15 : new java . lang . String [ ] { STRING_2 , STRING_3 } ) { java . lang . String [ ] res = android . METHOD_7 ( device , IDENT_15 ) ; for ( java . lang . String string : res ) { if ( string . contains ( STRING_4 ) ) { return true ; } } } return false ; }
org . junit . Assert . assertTrue ( ( IDENT_13 == false ) ) 