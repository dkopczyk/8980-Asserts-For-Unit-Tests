METHOD_0 ( ) { java . lang . reflect . Method IDENT_0 = null ; try { IDENT_0 = org . IDENT_1 . core . IDENT_2 . IDENT_3 . class . METHOD_1 ( STRING_0 , java . lang . String . class ) ; } catch ( java . lang . IDENT_4 e ) { e . printStackTrace ( ) ; } catch ( java . lang . IDENT_5 e ) { e . printStackTrace ( ) ; } java . lang . Object [ ] args = new java . lang . Object [ 5 ] ; args [ 0 ] = STRING_1 ; org . IDENT_1 . core . dto . IDENT_6 IDENT_7 = new org . IDENT_1 . core . dto . METHOD_2 ( ) ; IDENT_7 . METHOD_3 ( org . IDENT_1 . core . IDENT_2 . IDENT_3 . class ) ; IDENT_7 . METHOD_4 ( IDENT_0 ) ; IDENT_7 . METHOD_5 ( args ) ; org . IDENT_1 . core . util . IDENT_8 IDENT_9 = new org . IDENT_1 . core . util . METHOD_6 ( ) ; IDENT_9 . start ( STRING_2 ) ; org . IDENT_1 . core . IDENT_10 IDENT_11 = new org . IDENT_1 . core . METHOD_7 ( ) ; org . IDENT_1 . core . dto . IDENT_12 event = IDENT_11 . METHOD_8 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; IDENT_9 . METHOD_9 ( ) ; org . IDENT_1 . core . util . IDENT_13 . info ( IDENT_9 . METHOD_10 ( ) ) ; } METHOD_8 ( org . IDENT_1 . core . dto . METHOD_2 ) { org . IDENT_1 . core . dto . IDENT_12 event = null ; if ( ( IDENT_14 . METHOD_11 ( ) . METHOD_12 ( org . IDENT_1 . core . annotation . IDENT_15 . class ) ) && ( ! ( IDENT_14 . METHOD_1 ( ) . METHOD_12 ( org . IDENT_1 . core . annotation . IDENT_16 . class ) ) ) ) { event = new org . IDENT_1 . core . dto . METHOD_13 ( ) ; org . IDENT_1 . core . annotation . IDENT_15 IDENT_17 = IDENT_14 . METHOD_11 ( ) . METHOD_14 ( org . IDENT_1 . core . annotation . IDENT_15 . class ) ; event . METHOD_15 ( METHOD_16 ( IDENT_14 . METHOD_1 ( ) , IDENT_14 . METHOD_17 ( ) ) ) ; java . lang . String IDENT_18 = IDENT_17 . action ( ) ; if ( org . IDENT_1 . core . METHOD_7 . IDENT_19 . equals ( IDENT_18 ) ) { event . METHOD_18 ( IDENT_14 . METHOD_1 ( ) . getName ( ) ) ; } else { event . METHOD_18 ( IDENT_18 ) ; } event . METHOD_19 ( IDENT_17 . repository ( ) ) ; event . METHOD_20 ( IDENT_14 . METHOD_21 ( ) ) ; event . METHOD_22 ( IDENT_14 . METHOD_23 ( ) ) ; } else if ( ( ! ( IDENT_14 . METHOD_11 ( ) . METHOD_12 ( org . IDENT_1 . core . annotation . IDENT_15 . class ) ) ) && ( IDENT_14 . METHOD_1 ( ) . METHOD_12 ( org . IDENT_1 . core . annotation . IDENT_15 . class ) ) ) { event = new org . IDENT_1 . core . dto . METHOD_13 ( ) ; org . IDENT_1 . core . annotation . IDENT_15 IDENT_17 = IDENT_14 . METHOD_1 ( ) . METHOD_14 ( org . IDENT_1 . core . annotation . IDENT_15 . class ) ; event . METHOD_15 ( METHOD_16 ( IDENT_14 . METHOD_1 ( ) , IDENT_14 . METHOD_17 ( ) ) ) ; java . lang . String IDENT_18 = IDENT_17 . action ( ) ; if ( org . IDENT_1 . core . METHOD_7 . IDENT_19 . equals ( IDENT_18 ) ) { event . METHOD_18 ( IDENT_14 . METHOD_1 ( ) . getName ( ) ) ; } else { event . METHOD_18 ( IDENT_18 ) ; } event . METHOD_19 ( IDENT_17 . repository ( ) ) ; event . METHOD_20 ( IDENT_14 . METHOD_21 ( ) ) ; event . METHOD_22 ( IDENT_14 . METHOD_23 ( ) ) ; } return event ; }
org . junit . Assert . assertNull ( event ) 