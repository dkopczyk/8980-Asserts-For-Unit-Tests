METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; java . lang . String IDENT_2 = STRING_2 ; java . lang . String IDENT_3 = STRING_3 ; java . lang . String [ ] IDENT_4 = new java . lang . String [ ] { IDENT_0 , IDENT_1 , IDENT_2 , IDENT_3 } ; for ( java . lang . String sql : IDENT_4 ) { com . alibaba . IDENT_5 . plan . parser . druid . IDENT_6 . context . METHOD_1 ( sql ) ; boolean result = com . alibaba . IDENT_5 . plan . parser . druid . IDENT_7 . execute ( com . alibaba . IDENT_5 . plan . parser . druid . IDENT_6 . context , IDENT_8 ) ; "<AssertPlaceHolder>" ; } } execute ( com . alibaba . IDENT_5 . plan . parser . IDENT_9 , com . alibaba . IDENT_5 . plan . parser . druid . IDENT_10 ) { try { IDENT_11 . METHOD_2 ( context ) ; IDENT_11 . METHOD_3 ( context ) ; return true ; } catch ( java . lang . Exception IDENT_12 ) { com . alibaba . IDENT_5 . plan . parser . druid . IDENT_7 . LOG . error ( STRING_4 , IDENT_12 ) ; return false ; } }
org . junit . Assert . assertFalse ( result ) 