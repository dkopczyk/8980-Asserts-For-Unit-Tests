METHOD_0 ( ) { java . lang . String name = STRING_0 ; java . lang . String IDENT_0 = STRING_1 ; org . IDENT_1 . entity . IDENT_2 IDENT_3 = fr . IDENT_4 . IDENT_5 . service . IDENT_6 . METHOD_1 ( name , IDENT_0 ) ; METHOD_2 ( IDENT_7 . getProperty ( IDENT_8 . IDENT_9 ) ) . METHOD_3 ( 8 ) ; METHOD_2 ( IDENT_10 . METHOD_4 ( name ) ) . METHOD_3 ( true ) ; fr . IDENT_4 . IDENT_5 . data . auth . IDENT_11 auth = fr . IDENT_4 . IDENT_5 . data . auth . IDENT_11 . builder ( ) . name ( name ) . METHOD_5 ( ( ( java . lang . System . currentTimeMillis ( ) ) - ( ( 10 * INT_0 ) * 1000 ) ) ) . METHOD_6 ( IDENT_0 ) . build ( ) ; METHOD_2 ( IDENT_10 . METHOD_7 ( name ) ) . METHOD_3 ( auth ) ; boolean result = IDENT_12 . METHOD_8 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_7 ) . getProperty ( IDENT_8 . IDENT_13 ) ; verify ( IDENT_10 ) . METHOD_4 ( name ) ; verify ( IDENT_10 ) . METHOD_9 ( name ) ; verify ( IDENT_10 ) . METHOD_10 ( name ) ; } METHOD_8 ( org . IDENT_1 . entity . IDENT_2 ) { final java . lang . String name = IDENT_3 . getName ( ) ; if ( ( IDENT_14 ) && ( database . METHOD_4 ( name ) ) ) { database . METHOD_9 ( name ) ; database . METHOD_10 ( name ) ; fr . IDENT_4 . IDENT_5 . data . auth . IDENT_11 auth = database . METHOD_7 ( name ) ; fr . IDENT_4 . IDENT_5 . service . IDENT_15 state = METHOD_11 ( auth , IDENT_3 ) ; if ( state . equals ( IDENT_15 . IDENT_16 ) ) { fr . IDENT_4 . IDENT_5 . events . IDENT_17 event = IDENT_18 . METHOD_12 ( ( IDENT_19 ) -> new fr . IDENT_4 . IDENT_5 . events . METHOD_13 ( IDENT_3 , IDENT_19 ) ) ; return ! ( event . METHOD_14 ( ) ) ; } else if ( state . equals ( IDENT_15 . IDENT_20 ) ) { service . METHOD_15 ( IDENT_3 , IDENT_21 . IDENT_22 ) ; } } return false ; }
org . junit . Assert . assertThat ( result , org . hamcrest . Matchers . equalTo ( false ) ) 