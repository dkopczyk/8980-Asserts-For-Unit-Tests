METHOD_0 ( ) { java . util . Map < java . lang . String , IDENT_0 . amazon . IDENT_1 . IDENT_2 > headers = new java . util . METHOD_1 ( ) ; headers . put ( STRING_0 , IDENT_0 . amazon . IDENT_1 . IDENT_2 . METHOD_2 ( STRING_1 ) ) ; IDENT_0 . amazon . IDENT_1 . Message message = new IDENT_0 . amazon . IDENT_1 . Message ( headers , new byte [ ] { INT_0 , 12 , ( ( byte ) ( INT_1 ) ) , INT_2 , INT_3 , INT_4 } ) ; java . lang . String expected = STRING_2 + ( "\n" + STRING_3 ) ; "<AssertPlaceHolder>" ; } toString ( ) { return ( ( ( ( ( STRING_4 + STRING_5 ) + ( name ) ) + STRING_6 ) + STRING_7 ) + ( value ) ) + STRING_8 ; }
org . junit . Assert . assertEquals ( expected , message . toString ( ) ) 