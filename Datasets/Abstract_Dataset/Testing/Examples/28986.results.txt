METHOD_0 ( ) { final java . io . InputStream IDENT_0 = METHOD_1 ( ) ; IDENT_1 . amazon . IDENT_2 . utils . IDENT_3 . METHOD_2 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } read ( ) { int read = IDENT_0 . read ( ) ; if ( ( read != ( - 1 ) ) && ( ( IDENT_4 ) < ( IDENT_5 ) ) ) { IDENT_6 . update ( read ) ; } if ( read != ( - 1 ) ) { ( IDENT_4 ) ++ ; } if ( ( read != ( - 1 ) ) && ( ( IDENT_4 ) == ( IDENT_5 ) ) ) { int IDENT_7 = - 1 ; IDENT_7 = IDENT_0 . read ( ) ; while ( ( IDENT_7 != ( - 1 ) ) && ( ( IDENT_4 ) < ( ( IDENT_5 ) + ( IDENT_1 . amazon . IDENT_2 . services . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_11 ) ) ) ) { int index = java . lang . Math . min ( ( ( int ) ( ( IDENT_4 ) - ( IDENT_5 ) ) ) , ( ( IDENT_1 . amazon . IDENT_2 . services . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_11 ) - 1 ) ) ; IDENT_12 [ index ] = ( ( byte ) ( IDENT_7 ) ) ; ( IDENT_4 ) ++ ; IDENT_7 = IDENT_0 . read ( ) ; } } if ( read == ( - 1 ) ) { METHOD_3 ( ) ; } return read ; }
org . junit . Assert . assertEquals ( ( - 1 ) , IDENT_0 . read ( ) ) 