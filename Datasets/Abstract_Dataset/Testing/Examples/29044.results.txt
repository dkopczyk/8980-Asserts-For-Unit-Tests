METHOD_0 ( ) { IDENT_0 . amazon . IDENT_1 . IDENT_2 . config . IDENT_3 . IDENT_4 expected = IDENT_0 . amazon . IDENT_1 . IDENT_2 . config . IDENT_3 . IDENT_4 . builder ( ) . METHOD_1 ( INT_0 ) . build ( ) ; IDENT_0 . amazon . IDENT_1 . IDENT_2 . config . IDENT_5 IDENT_6 = new IDENT_0 . amazon . IDENT_1 . IDENT_2 . config . METHOD_2 ( IDENT_0 . amazon . IDENT_1 . IDENT_2 . config . IDENT_3 . IDENT_4 . class , IDENT_7 ) ; IDENT_8 . setProperty ( IDENT_6 , STRING_0 , expected . METHOD_1 ) ; IDENT_0 . amazon . IDENT_1 . IDENT_2 . config . IDENT_3 . IDENT_4 actual = IDENT_6 . build ( IDENT_0 . amazon . IDENT_1 . IDENT_2 . config . IDENT_3 . IDENT_4 . class ) ; "<AssertPlaceHolder>" ; } build ( java . util . function . IDENT_9 [ ] ) { java . lang . reflect . Method IDENT_10 ; try { IDENT_10 = IDENT_11 . METHOD_3 ( IDENT_0 . amazon . IDENT_1 . IDENT_2 . config . IDENT_12 . IDENT_13 ) ; } catch ( java . lang . IDENT_14 e ) { throw new java . lang . RuntimeException ( e ) ; } java . lang . Object source ; try { source = IDENT_10 . invoke ( null ) ; } catch ( java . lang . IDENT_15 | java . lang . reflect . IDENT_16 e ) { throw new java . lang . RuntimeException ( e ) ; } for ( Map . Entry < java . lang . String , java . lang . Object > setValue : values . entrySet ( ) ) { java . lang . Object IDENT_17 = METHOD_4 ( setValue ) ; java . lang . reflect . Method IDENT_18 = properties . get ( setValue . getKey ( ) ) . stream ( ) . filter ( ( t ) -> org . apache . commons . lang3 . IDENT_19 . METHOD_5 ( IDENT_17 . getClass ( ) , t . type ) ) . METHOD_6 ( ) . map ( ( a ) -> a . IDENT_10 ) . METHOD_7 ( ( ) -> new java . lang . IllegalStateException ( java . lang . String . format ( STRING_1 , setValue . getKey ( ) , IDENT_17 . getClass ( ) . getName ( ) ) ) ) ; try { source = IDENT_18 . invoke ( source , IDENT_17 ) ; } catch ( java . lang . IDENT_15 | java . lang . reflect . IDENT_16 e ) { throw new java . lang . RuntimeException ( e ) ; } } if ( IDENT_20 != null ) { for ( java . util . function . IDENT_9 < java . lang . Object , java . lang . Object > IDENT_18 : IDENT_20 ) { source = IDENT_18 . apply ( source ) ; } } java . lang . reflect . Method IDENT_21 ; try { IDENT_21 = IDENT_22 . METHOD_3 ( IDENT_0 . amazon . IDENT_1 . IDENT_2 . config . IDENT_12 . IDENT_23 ) ; return IDENT_21 . invoke ( source ) ; } catch ( java . lang . IDENT_15 | java . lang . IDENT_14 | java . lang . reflect . IDENT_16 e ) { throw new java . lang . RuntimeException ( e ) ; } }
org . junit . Assert . assertThat ( actual , org . hamcrest . CoreMatchers . equalTo ( expected ) ) 