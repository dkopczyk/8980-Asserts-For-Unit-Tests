METHOD_0 ( ) { java . util . List < com . amazonaws . services . IDENT_0 . IDENT_1 . elasticsearch . IDENT_2 > records = new java . util . ArrayList < com . amazonaws . services . IDENT_0 . IDENT_1 . elasticsearch . IDENT_2 > ( ) ; com . amazonaws . services . IDENT_0 . IDENT_1 . elasticsearch . IDENT_2 IDENT_3 = METHOD_1 ( STRING_0 , STRING_1 , "1" , STRING_2 ) ; records . add ( IDENT_3 ) ; com . amazonaws . services . IDENT_0 . IDENT_1 . elasticsearch . IDENT_2 IDENT_4 = METHOD_1 ( STRING_0 , STRING_1 , "2" , STRING_2 ) ; records . add ( IDENT_4 ) ; com . amazonaws . services . IDENT_0 . IDENT_1 . elasticsearch . IDENT_2 IDENT_5 = METHOD_1 ( STRING_0 , STRING_1 , STRING_3 , STRING_2 ) ; records . add ( IDENT_5 ) ; METHOD_2 ( records ) ; org . elasticsearch . action . IDENT_6 . IDENT_7 [ ] IDENT_8 = new org . elasticsearch . action . IDENT_6 . IDENT_7 [ records . size ( ) ] ; for ( int i = 0 ; i < ( IDENT_8 . length ) ; i ++ ) { IDENT_8 [ i ] = METHOD_3 ( org . elasticsearch . action . IDENT_6 . IDENT_7 . class ) ; expect ( IDENT_8 [ i ] . METHOD_4 ( ) ) . andReturn ( false ) ; replay ( IDENT_8 [ i ] ) ; } expect ( IDENT_9 . METHOD_5 ( ) ) . andReturn ( IDENT_8 ) ; replay ( IDENT_10 , IDENT_3 , IDENT_4 , IDENT_5 , buffer , IDENT_11 , IDENT_12 , IDENT_13 , IDENT_9 ) ; java . util . List < com . amazonaws . services . IDENT_0 . IDENT_1 . elasticsearch . IDENT_2 > IDENT_14 = IDENT_15 . METHOD_6 ( buffer ) ; "<AssertPlaceHolder>" ; verify ( IDENT_10 , IDENT_3 , IDENT_4 , IDENT_5 , buffer , IDENT_11 , IDENT_12 , IDENT_13 , IDENT_9 ) ; METHOD_7 ( records ) ; METHOD_8 ( IDENT_8 ) ; } METHOD_6 ( com . amazonaws . services . IDENT_0 . IDENT_1 . IDENT_16 ) { java . util . List < com . amazonaws . services . IDENT_0 . IDENT_1 . elasticsearch . IDENT_2 > records = buffer . METHOD_9 ( ) ; if ( records . isEmpty ( ) ) { return java . util . Collections . emptyList ( ) ; } org . elasticsearch . action . IDENT_6 . IDENT_17 IDENT_18 = IDENT_19 . METHOD_10 ( ) ; for ( com . amazonaws . services . IDENT_0 . IDENT_1 . elasticsearch . IDENT_2 record : records ) { org . elasticsearch . action . index . IDENT_20 IDENT_21 = IDENT_19 . METHOD_11 ( record . METHOD_12 ( ) , record . getType ( ) , record . getId ( ) ) ; IDENT_21 . METHOD_13 ( record . METHOD_14 ( ) ) ; java . lang . Long version = record . METHOD_15 ( ) ; if ( version != null ) { IDENT_21 . METHOD_16 ( version ) ; } java . lang . Long IDENT_22 = record . METHOD_17 ( ) ; if ( IDENT_22 != null ) { IDENT_21 . METHOD_18 ( IDENT_22 ) ; } java . lang . Boolean create = record . METHOD_19 ( ) ; if ( create != null ) { IDENT_21 . METHOD_20 ( create ) ; } IDENT_18 . add ( IDENT_21 ) ; } while ( true ) { try { org . elasticsearch . action . IDENT_6 . IDENT_23 IDENT_24 = IDENT_18 . execute ( ) . METHOD_21 ( ) ; org . elasticsearch . action . IDENT_6 . IDENT_7 [ ] IDENT_8 = IDENT_24 . METHOD_5 ( ) ; java . util . List < com . amazonaws . services . IDENT_0 . IDENT_1 . elasticsearch . IDENT_2 > IDENT_14 = new java . util . ArrayList < com . amazonaws . services . IDENT_0 . IDENT_1 . elasticsearch . IDENT_2 > ( ) ; int IDENT_25 = 0 ; for ( int i = 0 ; i < ( IDENT_8 . length ) ; i ++ ) { if ( IDENT_8 [ i ] . METHOD_4 ( ) ) { com . amazonaws . services . IDENT_0 . IDENT_1 . elasticsearch . IDENT_26 . LOG . error ( ( STRING_4 + ( IDENT_8 [ i ] . METHOD_22 ( ) ) ) ) ; org . elasticsearch . action . IDENT_6 . IDENT_7 . IDENT_27 IDENT_28 = IDENT_8 [ i ] . METHOD_23 ( ) ; if ( ( IDENT_28 . getMessage ( ) . contains ( STRING_5 ) ) || ( IDENT_28 . getMessage ( ) . contains ( STRING_6 ) ) ) { IDENT_25 ++ ; } else { IDENT_14 . add ( records . get ( i ) ) ; } } } com . amazonaws . services . IDENT_0 . IDENT_1 . elasticsearch . IDENT_26 . LOG . info ( ( ( STRING_4 1 + ( ( ( records . size ( ) ) - ( IDENT_14 . size ( ) ) ) - IDENT_25 ) ) + STRING_4 0 ) ) ; if ( ! ( IDENT_14 . isEmpty ( ) ) ) { METHOD_24 ( ) ; com . amazonaws . services . IDENT_0 . IDENT_1 . elasticsearch . IDENT_26 . LOG . warn ( ( ( STRING_7 + ( IDENT_14 . size ( ) ) ) + STRING_8 ) ) ; } return IDENT_14 ; } catch ( org . elasticsearch . client . transport . IDENT_29 IDENT_30 ) { com . amazonaws . services . IDENT_0 . IDENT_1 . elasticsearch . IDENT_26 . LOG . error ( ( ( ( ( ( ( STRING_9 + ( IDENT_31 ) ) + STRING_10 ) + ( IDENT_32 ) ) + STRING_11 ) + ( IDENT_33 ) ) + STRING_12 ) , IDENT_30 ) ; sleep ( IDENT_33 ) ; } catch ( java . lang . Exception e ) { com . amazonaws . services . IDENT_0 . IDENT_1 . elasticsearch . IDENT_26 . LOG . error ( STRING_13 , e ) ; sleep ( IDENT_33 ) ; } } }
org . junit . Assert . assertTrue ( IDENT_14 . isEmpty ( ) ) 