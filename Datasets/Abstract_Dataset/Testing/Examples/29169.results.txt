METHOD_0 ( ) { try { com . amazonaws . services . IDENT_0 . json . IDENT_1 . IDENT_2 . util . IDENT_3 . METHOD_1 ( STRING_0 ) ; com . amazonaws . services . IDENT_0 . json . IDENT_1 . IDENT_2 . util . IDENT_3 . METHOD_1 ( STRING_1 ) ; } catch ( java . lang . IDENT_4 | com . amazonaws . services . IDENT_0 . json . IDENT_1 . IDENT_2 . IDENT_5 e ) { org . junit . Assert . fail ( STRING_2 ) ; } try { com . amazonaws . services . IDENT_0 . json . IDENT_1 . IDENT_2 . util . IDENT_3 . METHOD_1 ( STRING_3 ) ; org . junit . Assert . fail ( STRING_4 ) ; } catch ( final com . amazonaws . services . IDENT_0 . json . IDENT_1 . IDENT_2 . IDENT_5 e ) { "<AssertPlaceHolder>" ; } com . amazonaws . services . IDENT_0 . json . IDENT_1 . IDENT_2 . util . IDENT_3 . METHOD_1 ( null ) ; org . junit . Assert . fail ( STRING_5 ) ; } METHOD_1 ( java . lang . String ) { if ( val == null ) { throw new com . amazonaws . services . IDENT_0 . json . IDENT_1 . IDENT_2 . METHOD_2 ( STRING_6 ) ; } final java . lang . String IDENT_6 = val . toLowerCase ( ) ; if ( ! ( ( IDENT_6 . equals ( STRING_0 ) ) || ( IDENT_6 . equals ( STRING_1 ) ) ) ) { throw new com . amazonaws . services . IDENT_0 . json . IDENT_1 . IDENT_2 . METHOD_2 ( ( STRING_7 + val ) ) ; } }
org . junit . Assert . assertTrue ( true ) 