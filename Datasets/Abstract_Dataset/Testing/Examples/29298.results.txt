METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; java . lang . String IDENT_2 = STRING_2 ; final java . lang . String [ ] IDENT_3 = new java . lang . String [ ] { null , STRING_2 , STRING_1 , STRING_0 } ; final java . util . List < com . amazonaws . services . IDENT_4 . model . IDENT_5 > IDENT_6 = new java . util . METHOD_1 ( ) ; final java . util . List < com . amazonaws . services . IDENT_4 . model . IDENT_5 > IDENT_7 = METHOD_2 ( 10 , com . amazonaws . services . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_11 , com . amazonaws . services . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_12 ) ; IDENT_7 . get ( ( ( IDENT_7 . size ( ) ) - 1 ) ) . METHOD_3 ( IDENT_0 ) ; final java . util . List < com . amazonaws . services . IDENT_4 . model . IDENT_5 > IDENT_13 = METHOD_2 ( 20 , com . amazonaws . services . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_11 , com . amazonaws . services . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_12 ) ; IDENT_13 . get ( ( ( IDENT_13 . size ( ) ) - 1 ) ) . METHOD_3 ( IDENT_1 ) ; final java . util . List < com . amazonaws . services . IDENT_4 . model . IDENT_5 > IDENT_14 = METHOD_2 ( INT_0 , com . amazonaws . services . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_11 , com . amazonaws . services . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_12 ) ; IDENT_14 . get ( ( ( IDENT_14 . size ( ) ) - 1 ) ) . METHOD_3 ( IDENT_2 ) ; IDENT_7 . addAll ( IDENT_13 ) ; IDENT_7 . addAll ( IDENT_14 ) ; final com . amazonaws . services . IDENT_4 . model . IDENT_15 IDENT_16 = METHOD_4 ( IDENT_7 , com . amazonaws . services . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_17 ) ; final com . amazonaws . services . IDENT_4 . model . IDENT_5 IDENT_18 = new com . amazonaws . services . IDENT_4 . model . METHOD_5 ( ) . METHOD_6 ( IDENT_2 ) . METHOD_7 ( STRING_3 ) ; final com . amazonaws . services . IDENT_4 . model . METHOD_5 IDENT_19 = new com . amazonaws . services . IDENT_4 . model . METHOD_5 ( ) . METHOD_6 ( IDENT_1 ) . METHOD_7 ( STRING_4 ) ; final com . amazonaws . services . IDENT_4 . model . METHOD_5 IDENT_20 = new com . amazonaws . services . IDENT_4 . model . METHOD_5 ( ) . METHOD_6 ( IDENT_0 ) . METHOD_7 ( STRING_5 ) ; final java . util . List < com . amazonaws . services . IDENT_4 . model . METHOD_5 > IDENT_21 = new java . util . METHOD_1 ( ) ; IDENT_21 . add ( IDENT_18 ) ; final com . amazonaws . services . IDENT_4 . model . IDENT_15 IDENT_22 = METHOD_4 ( IDENT_21 , com . amazonaws . services . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_17 ) ; final java . util . List < com . amazonaws . services . IDENT_4 . model . METHOD_5 > IDENT_23 = new java . util . METHOD_1 ( ) ; IDENT_23 . add ( IDENT_19 ) ; final com . amazonaws . services . IDENT_4 . model . IDENT_15 IDENT_24 = METHOD_4 ( IDENT_23 , com . amazonaws . services . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_17 ) ; final java . util . List < com . amazonaws . services . IDENT_4 . model . METHOD_5 > IDENT_25 = new java . util . METHOD_1 ( ) ; IDENT_25 . add ( IDENT_20 ) ; IDENT_6 . addAll ( IDENT_7 ) ; IDENT_6 . addAll ( IDENT_21 ) ; IDENT_6 . addAll ( IDENT_23 ) ; IDENT_6 . addAll ( IDENT_25 ) ; final com . amazonaws . services . IDENT_4 . model . IDENT_15 IDENT_26 = METHOD_4 ( IDENT_25 , com . amazonaws . services . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_27 ) ; when ( IDENT_28 . METHOD_8 ( any ( com . amazonaws . services . IDENT_4 . model . IDENT_29 . class ) ) ) . thenReturn ( IDENT_16 ) . thenReturn ( IDENT_22 ) . thenReturn ( IDENT_24 ) . thenReturn ( IDENT_26 ) ; final org . mockito . IDENT_30 < com . amazonaws . services . IDENT_4 . model . IDENT_29 > IDENT_31 = org . mockito . IDENT_30 . METHOD_9 ( com . amazonaws . services . IDENT_4 . model . IDENT_29 . class ) ; final org . mockito . IDENT_30 < java . lang . Long > IDENT_32 = org . mockito . IDENT_30 . METHOD_9 ( com . amazonaws . services . IDENT_8 . IDENT_9 . Long . class ) ; final java . util . List < com . amazonaws . services . IDENT_4 . model . METHOD_5 > result = IDENT_33 . METHOD_2 ( ) ; final int IDENT_34 = 3 ; verify ( IDENT_28 , times ( 4 ) ) . METHOD_8 ( IDENT_31 . METHOD_10 ( ) ) ; verify ( IDENT_35 , times ( IDENT_34 ) ) . sleep ( IDENT_32 . METHOD_10 ( ) ) ; METHOD_11 ( IDENT_31 . METHOD_12 ( ) , java . util . Arrays . asList ( IDENT_3 ) ) ; METHOD_13 ( IDENT_32 . METHOD_12 ( ) ) ; int IDENT_36 = ( ( com . amazonaws . services . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_11 ) * 3 ) + 3 ; "<AssertPlaceHolder>" ; METHOD_14 ( IDENT_6 , result ) ; } size ( ) { return nodes . size ( ) ; }
org . junit . Assert . assertEquals ( IDENT_36 , result . size ( ) ) 