METHOD_0 ( ) { byte [ ] IDENT_0 = new byte [ ] { ( ( byte ) ( 1 ) ) } ; byte [ ] IDENT_1 = new byte [ ] { ( ( byte ) ( 1 ) ) } ; com . amazonaws . services . IDENT_2 . model . IDENT_3 IDENT_4 = new com . amazonaws . services . IDENT_2 . model . METHOD_1 ( ) . METHOD_2 ( java . nio . ByteBuffer . METHOD_3 ( IDENT_0 ) , java . nio . ByteBuffer . METHOD_3 ( IDENT_0 ) ) ; com . amazonaws . services . IDENT_2 . model . METHOD_1 IDENT_5 = new com . amazonaws . services . IDENT_2 . model . METHOD_1 ( ) . METHOD_2 ( java . nio . ByteBuffer . METHOD_3 ( IDENT_1 ) , null ) ; com . amazonaws . services . IDENT_2 . util . IDENT_6 IDENT_7 = new com . amazonaws . services . IDENT_2 . util . METHOD_4 ( IDENT_4 ) ; com . amazonaws . services . IDENT_2 . util . METHOD_4 IDENT_8 = new com . amazonaws . services . IDENT_2 . util . METHOD_4 ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } equals ( java . lang . Object ) { if ( ( this ) == obj ) return true ; if ( obj == null ) return false ; if ( ( getClass ( ) ) != ( obj . getClass ( ) ) ) return false ; com . amazonaws . services . IDENT_2 . util . METHOD_4 other = ( ( com . amazonaws . services . IDENT_2 . util . METHOD_4 ) ( obj ) ) ; if ( ! ( java . util . Arrays . equals ( b , other . b ) ) ) return false ; if ( ( IDENT_9 ) == null ) { if ( ( other . IDENT_9 ) != null ) return false ; } else if ( ! ( IDENT_9 . equals ( other . IDENT_9 ) ) ) { if ( ( other . IDENT_9 ) == null ) return false ; if ( ( IDENT_9 . size ( ) ) != ( other . IDENT_9 . size ( ) ) ) return false ; for ( int i = 0 ; i < ( IDENT_9 . size ( ) ) ; i ++ ) { if ( ! ( java . util . Arrays . equals ( IDENT_9 . get ( i ) , other . IDENT_9 . get ( i ) ) ) ) return false ; } return true ; } if ( ( n ) == null ) { if ( ( other . n ) != null ) return false ; } else if ( ! ( n . equals ( other . n ) ) ) return false ; if ( ( IDENT_10 ) == null ) { if ( ( other . IDENT_10 ) != null ) return false ; } else if ( ! ( IDENT_10 . equals ( other . IDENT_10 ) ) ) return false ; if ( ( s ) == null ) { if ( ( other . s ) != null ) return false ; } else if ( ! ( s . equals ( other . s ) ) ) return false ; if ( ( IDENT_11 ) == null ) { if ( ( other . IDENT_11 ) != null ) return false ; } else if ( ! ( IDENT_11 . equals ( other . IDENT_11 ) ) ) return false ; return true ; }
org . junit . Assert . assertFalse ( IDENT_7 . equals ( IDENT_8 ) ) 