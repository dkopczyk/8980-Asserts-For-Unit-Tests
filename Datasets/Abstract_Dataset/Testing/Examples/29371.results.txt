METHOD_0 ( ) { int IDENT_0 = IDENT_1 . METHOD_1 ( 1 , 1 , org . apache . hadoop . IDENT_2 . util . IDENT_3 . IDENT_4 , org . apache . hadoop . IDENT_2 . util . IDENT_3 . IDENT_5 , org . apache . hadoop . IDENT_2 . util . IDENT_3 . IDENT_6 , org . apache . hadoop . IDENT_2 . util . IDENT_3 . IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( int , int , int , int , int , int ) { int [ ] IDENT_8 = new int [ nodes ] ; for ( int k = 0 ; k < nodes ; k ++ ) { IDENT_8 [ k ] = IDENT_9 ; } IDENT_8 [ 0 ] OP_0 IDENT_10 ; int IDENT_11 = 0 ; int IDENT_12 = 1 ; for ( ; IDENT_11 < IDENT_13 ; IDENT_11 ++ ) { if ( IDENT_12 >= nodes ) { IDENT_12 = 0 ; } if ( ( IDENT_8 [ IDENT_12 ] ) >= IDENT_14 ) { IDENT_8 [ IDENT_12 ] OP_0 IDENT_14 ; } else { break ; } IDENT_12 ++ ; } if ( IDENT_11 < IDENT_13 ) { org . apache . hadoop . IDENT_2 . util . IDENT_15 . log . warn ( STRING_0 ) ; return 0 ; } int IDENT_0 = 0 ; for ( IDENT_12 = 0 ; IDENT_12 < nodes ; IDENT_12 ++ ) { IDENT_0 += ( IDENT_8 [ IDENT_12 ] ) / IDENT_16 ; } return IDENT_0 ; }
org . junit . Assert . assertEquals ( 1 , IDENT_0 ) 