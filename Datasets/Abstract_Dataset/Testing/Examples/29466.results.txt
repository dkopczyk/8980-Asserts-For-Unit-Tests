METHOD_0 ( ) { final org . IDENT_0 . common . IDENT_1 . IDENT_2 IDENT_1 = org . IDENT_0 . common . IDENT_1 . IDENT_2 . builder ( ) . build ( ) ; final java . util . concurrent . IDENT_3 IDENT_4 = new java . util . concurrent . METHOD_1 ( 1 ) ; final java . util . concurrent . METHOD_1 IDENT_5 = new java . util . concurrent . METHOD_1 ( 1 ) ; final java . util . concurrent . atomic . IDENT_6 IDENT_7 = new java . util . concurrent . atomic . METHOD_2 ( false ) ; java . lang . Thread IDENT_8 = METHOD_3 ( IDENT_4 , IDENT_5 , IDENT_7 , IDENT_1 , STRING_0 , IDENT_1 , STRING_1 ) ; IDENT_8 . start ( ) ; IDENT_1 . METHOD_4 ( STRING_1 ) ; IDENT_4 . METHOD_5 ( ) ; IDENT_5 . METHOD_6 ( ) ; try { IDENT_1 . METHOD_4 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } catch ( org . IDENT_0 . common . IDENT_1 . IDENT_9 e ) { } } get ( ) { if ( org . IDENT_0 . IDENT_10 . IDENT_11 . IDENT_12 . isEmpty ( ) ) { throw new java . lang . IllegalStateException ( STRING_2 ) ; } return org . IDENT_0 . IDENT_10 . IDENT_11 . IDENT_12 . IDENT_13 . get ( ) . METHOD_7 ( ) ; }
org . junit . Assert . assertTrue ( IDENT_7 . get ( ) ) 