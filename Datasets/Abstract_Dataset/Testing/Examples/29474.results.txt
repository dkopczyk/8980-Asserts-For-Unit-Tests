METHOD_0 ( ) { IDENT_0 . METHOD_1 ( STRING_0 , 7 ) ; int [ ] actual = IDENT_0 . METHOD_2 ( STRING_0 ) ; java . util . Arrays . METHOD_3 ( actual ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { java . sql . IDENT_1 connection = METHOD_4 ( ) ; try { java . util . List < java . lang . Integer > IDENT_2 = METHOD_5 ( connection , ( c ) -> METHOD_6 ( c , IDENT_3 ) , METHOD_7 ( ( rs ) -> rs . METHOD_8 ( schema . METHOD_9 ( ) ) ) , ( e ) -> new org . IDENT_4 . common . jdbc . METHOD_10 ( format ( STRING_1 , IDENT_3 ) , e ) ) ; return IDENT_2 . stream ( ) . METHOD_11 ( ( i ) -> i ) . toArray ( ) ; } finally { METHOD_12 ( connection ) ; } }
org . junit . Assert . assertArrayEquals ( new int [ ] { 0 , 1 , 2 , 3 , 4 , 5 , 6 } , actual ) 