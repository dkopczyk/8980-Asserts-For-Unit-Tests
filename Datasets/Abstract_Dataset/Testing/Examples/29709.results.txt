METHOD_0 ( ) { com . microsoft . azure . sdk . iot . IDENT_0 . ws . impl . IDENT_1 IDENT_2 = new com . microsoft . azure . sdk . iot . IDENT_0 . ws . impl . METHOD_1 ( ) ; java . nio . ByteBuffer IDENT_3 = java . nio . ByteBuffer . METHOD_2 ( 10 ) ; java . nio . ByteBuffer IDENT_4 = java . nio . ByteBuffer . METHOD_2 ( 10 ) ; byte [ ] buffer = new byte [ 10 ] ; buffer [ 0 ] = ( com . microsoft . azure . sdk . iot . IDENT_0 . ws . IDENT_5 . IDENT_6 ) | ( com . microsoft . azure . sdk . iot . IDENT_0 . ws . IDENT_5 . IDENT_7 ) ; IDENT_3 . put ( buffer ) ; IDENT_3 . METHOD_3 ( ) ; IDENT_2 . METHOD_4 ( IDENT_3 , IDENT_4 ) ; int actual = IDENT_4 . array ( ) [ 0 ] ; int expected = ( com . microsoft . azure . sdk . iot . IDENT_0 . ws . IDENT_5 . IDENT_6 ) | ( com . microsoft . azure . sdk . iot . IDENT_0 . ws . IDENT_5 . IDENT_8 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . nio . ByteBuffer , java . nio . ByteBuffer ) { if ( ( IDENT_3 == null ) || ( IDENT_4 == null ) ) { throw new java . lang . IllegalArgumentException ( STRING_0 ) ; } if ( ( IDENT_3 . METHOD_5 ( ) ) > ( IDENT_4 . METHOD_5 ( ) ) ) { throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } if ( ( IDENT_3 . METHOD_6 ( ) ) > 0 ) { byte [ ] buffer = IDENT_3 . array ( ) ; buffer [ 0 ] = ( com . microsoft . azure . sdk . iot . IDENT_0 . ws . IDENT_5 . IDENT_6 ) | ( com . microsoft . azure . sdk . iot . IDENT_0 . ws . IDENT_5 . IDENT_8 ) ; IDENT_4 . METHOD_7 ( ) ; IDENT_4 . put ( buffer ) ; } else { IDENT_4 . METHOD_7 ( ) ; IDENT_4 . METHOD_8 ( 0 ) ; } }
org . junit . Assert . assertEquals ( actual , expected ) 