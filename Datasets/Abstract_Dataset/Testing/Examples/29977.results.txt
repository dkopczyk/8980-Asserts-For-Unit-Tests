METHOD_0 ( ) { METHOD_1 ( ) ; METHOD_2 ( ) ; tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_0 . IDENT_1 connection = new tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_0 . METHOD_3 ( IDENT_2 ) ; tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_0 . IDENT_3 . METHOD_4 ( connection , STRING_0 , IDENT_4 ) ; connection . METHOD_5 ( IDENT_5 , IDENT_6 ) ; tests . unit . com . microsoft . azure . sdk . iot . device . transport . IDENT_0 . IDENT_7 result = connection . METHOD_6 ( null ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( com . microsoft . azure . sdk . iot . device . transport . IDENT_0 . Message ) { MOD_0 ( IDENT_8 ) { if ( ( ( message == null ) || ( ( message . getBytes ( ) ) == null ) ) || ( ( ( ( message . METHOD_7 ( ) ) != ( com . microsoft . azure . sdk . iot . device . IDENT_9 . IDENT_10 ) ) && ( ( message . METHOD_7 ( ) ) != ( com . microsoft . azure . sdk . iot . device . IDENT_9 . IDENT_11 ) ) ) && ( ( message . getBytes ( ) . length ) == 0 ) ) ) { return IDENT_7 . IDENT_12 ; } if ( ( this . state ) == ( IDENT_13 . IDENT_14 ) ) { throw new java . lang . IllegalStateException ( STRING_1 ) ; } com . microsoft . azure . sdk . iot . device . transport . IDENT_0 . IDENT_7 result = IDENT_7 . IDENT_15 ; if ( ( message . METHOD_7 ( ) ) == ( com . microsoft . azure . sdk . iot . device . IDENT_9 . IDENT_11 ) ) { this . IDENT_16 . start ( ) ; this . IDENT_16 . METHOD_8 ( ( ( com . microsoft . azure . sdk . iot . device . transport . IDENT_0 . IDENT_17 ) ( message ) ) ) ; } else if ( ( message . METHOD_7 ( ) ) == ( com . microsoft . azure . sdk . iot . device . IDENT_9 . IDENT_10 ) ) { this . IDENT_18 . start ( ) ; this . IDENT_18 . METHOD_8 ( ( ( com . microsoft . azure . sdk . iot . device . transport . IDENT_0 . IDENT_17 ) ( message ) ) ) ; } else { this . IDENT_19 . METHOD_8 ( message ) ; } return result ; } }
org . junit . Assert . assertEquals ( IDENT_7 . IDENT_12 , result ) 