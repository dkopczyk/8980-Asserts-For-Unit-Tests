METHOD_0 ( ) { final java . lang . String IDENT_0 = ( ( ( ( ( ( ( ( STRING_0 + ( tests . unit . com . microsoft . azure . sdk . iot . IDENT_1 . device . internal . IDENT_2 . IDENT_3 . IDENT_4 ) ) + "/" ) + ( tests . unit . com . microsoft . azure . sdk . iot . IDENT_1 . device . internal . IDENT_2 . IDENT_3 . IDENT_5 ) ) + STRING_1 ) + ( tests . unit . com . microsoft . azure . sdk . iot . IDENT_1 . device . internal . IDENT_2 . IDENT_3 . IDENT_6 ) ) + STRING_2 ) + ( tests . unit . com . microsoft . azure . sdk . iot . IDENT_1 . device . internal . IDENT_2 . IDENT_3 . IDENT_7 ) ) + STRING_3 ) + ( tests . unit . com . microsoft . azure . sdk . iot . IDENT_1 . device . internal . IDENT_2 . IDENT_3 . IDENT_8 ) ; com . microsoft . azure . sdk . iot . IDENT_1 . device . internal . IDENT_2 . IDENT_9 IDENT_10 = new com . microsoft . azure . sdk . iot . IDENT_1 . device . internal . IDENT_2 . METHOD_1 ( tests . unit . com . microsoft . azure . sdk . iot . IDENT_1 . device . internal . IDENT_2 . IDENT_3 . IDENT_4 , tests . unit . com . microsoft . azure . sdk . iot . IDENT_1 . device . internal . IDENT_2 . IDENT_3 . IDENT_5 , com . microsoft . azure . sdk . iot . IDENT_1 . device . IDENT_11 . IDENT_12 ) ; java . lang . String IDENT_13 = IDENT_10 . METHOD_2 ( tests . unit . com . microsoft . azure . sdk . iot . IDENT_1 . device . internal . IDENT_2 . IDENT_3 . IDENT_6 , tests . unit . com . microsoft . azure . sdk . iot . IDENT_1 . device . internal . IDENT_2 . IDENT_3 . IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String , java . lang . String ) { if ( ( IDENT_14 == null ) || ( IDENT_14 . isEmpty ( ) ) ) { throw new java . lang . IllegalArgumentException ( STRING_4 ) ; } if ( ( IDENT_15 == null ) || ( ( IDENT_15 . length ( ) ) == 0 ) ) { throw new java . lang . IllegalArgumentException ( STRING_4 ) ; } switch ( IDENT_16 ) { case IDENT_12 : return METHOD_3 ( IDENT_14 , IDENT_15 ) ; case IDENT_17 : case IDENT_18 : return null ; case IDENT_19 : case IDENT_20 : return null ; default : throw new java . io . IOException ( STRING_5 ) ; } }
org . junit . Assert . assertEquals ( IDENT_0 , METHOD_2 ) 