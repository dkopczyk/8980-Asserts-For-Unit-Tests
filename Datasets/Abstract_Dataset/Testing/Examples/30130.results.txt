METHOD_0 ( ) { java . lang . String IDENT_0 = "" ; com . microsoft . azure . sdk . iot . service . IDENT_1 IDENT_2 = com . microsoft . azure . sdk . iot . service . IDENT_3 . parse ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } parse ( java . lang . String ) { com . microsoft . azure . sdk . iot . service . IDENT_1 IDENT_4 = new com . microsoft . azure . sdk . iot . service . METHOD_1 ( ) ; if ( ! ( com . microsoft . azure . sdk . iot . service . IDENT_5 . METHOD_2 ( IDENT_0 ) ) ) { if ( IDENT_0 . startsWith ( STRING_0 0 ) ) { IDENT_0 = IDENT_0 . substring ( 5 , ( ( IDENT_0 . length ( ) ) - 1 ) ) ; } if ( ! ( IDENT_0 . equals ( "" ) ) ) { try ( javax . json . IDENT_6 IDENT_7 = javax . json . IDENT_8 . METHOD_3 ( new java . io . METHOD_4 ( IDENT_0 ) ) ) { javax . json . IDENT_9 IDENT_10 = IDENT_7 . METHOD_5 ( ) ; java . util . ArrayList < com . microsoft . azure . sdk . iot . service . IDENT_11 > records = new java . util . ArrayList ( ) ; for ( int i = 0 ; i < ( IDENT_10 . size ( ) ) ; i ++ ) { javax . json . IDENT_12 IDENT_13 = ( ( javax . json . IDENT_12 ) ( IDENT_10 . get ( i ) ) ) ; com . microsoft . azure . sdk . iot . service . IDENT_11 IDENT_14 = new com . microsoft . azure . sdk . iot . service . METHOD_6 ( ) ; IDENT_14 . METHOD_7 ( java . time . IDENT_15 . parse ( com . microsoft . azure . sdk . iot . service . IDENT_5 . METHOD_8 ( IDENT_13 , STRING_1 ) ) ) ; java . lang . String IDENT_16 = com . microsoft . azure . sdk . iot . service . IDENT_5 . METHOD_8 ( IDENT_13 , STRING_2 ) ; IDENT_14 . METHOD_9 ( IDENT_16 ) ; IDENT_14 . METHOD_10 ( "" ) ; java . lang . String description = com . microsoft . azure . sdk . iot . service . IDENT_5 . METHOD_8 ( IDENT_13 , STRING_3 ) ; IDENT_14 . METHOD_11 ( description ) ; java . lang . String IDENT_17 = com . microsoft . azure . sdk . iot . service . IDENT_5 . METHOD_8 ( IDENT_13 , STRING_4 ) ; if ( IDENT_17 . toLowerCase ( ) . equals ( STRING_0 1 ) ) { IDENT_14 . METHOD_12 ( IDENT_18 . IDENT_19 ) ; } else if ( IDENT_17 . toLowerCase ( ) . equals ( STRING_5 ) ) { IDENT_14 . METHOD_12 ( IDENT_18 . IDENT_20 ) ; } else if ( IDENT_17 . toLowerCase ( ) . equals ( STRING_6 ) ) { IDENT_14 . METHOD_12 ( IDENT_18 . IDENT_21 ) ; } else if ( IDENT_17 . toLowerCase ( ) . equals ( STRING_0 ) ) { IDENT_14 . METHOD_12 ( IDENT_18 . IDENT_22 ) ; } else { IDENT_14 . METHOD_12 ( IDENT_18 . IDENT_23 ) ; } IDENT_14 . METHOD_13 ( com . microsoft . azure . sdk . iot . service . IDENT_5 . METHOD_8 ( IDENT_13 , STRING_7 ) ) ; IDENT_14 . METHOD_14 ( com . microsoft . azure . sdk . iot . service . IDENT_5 . METHOD_8 ( IDENT_13 , STRING_8 ) ) ; records . add ( IDENT_14 ) ; } if ( ( records . size ( ) ) > 0 ) { IDENT_4 . METHOD_7 ( records . get ( ( ( records . size ( ) ) - 1 ) ) . METHOD_15 ( ) ) ; IDENT_4 . METHOD_16 ( "" ) ; IDENT_4 . METHOD_17 ( "" ) ; IDENT_4 . METHOD_18 ( records ) ; } } } } return IDENT_4 ; }
org . junit . Assert . assertNotNull ( IDENT_2 ) 