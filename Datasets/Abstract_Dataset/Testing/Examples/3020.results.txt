METHOD_0 ( ) { com . IDENT_0 . http . IDENT_1 response = mock ( com . IDENT_0 . http . IDENT_1 . class ) ; when ( response . getStatus ( ) ) . thenReturn ( IDENT_2 . IDENT_3 ) ; java . lang . String content = STRING_0 ; when ( response . METHOD_1 ( ) ) . thenReturn ( content . getBytes ( ) ) ; org . IDENT_4 . api . mockito . IDENT_5 . METHOD_2 ( com . IDENT_0 . http . IDENT_6 . IDENT_7 . class ) ; org . mockito . IDENT_8 . METHOD_3 ( com . IDENT_0 . http . IDENT_6 . IDENT_7 . METHOD_4 ( any ( com . IDENT_0 . http . IDENT_9 . class ) ) ) . METHOD_5 ( response ) ; com . IDENT_0 . auth . IDENT_10 IDENT_11 = new com . IDENT_0 . auth . METHOD_6 ( ) ; IDENT_11 . METHOD_7 ( STRING_1 ) ; java . lang . String res = IDENT_11 . METHOD_8 ( ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( ) { com . IDENT_0 . http . IDENT_9 request = new com . IDENT_0 . http . METHOD_9 ( IDENT_12 . toString ( ) ) ; request . METHOD_10 ( IDENT_13 . IDENT_14 ) ; request . METHOD_11 ( IDENT_15 ) ; request . METHOD_12 ( IDENT_15 ) ; com . IDENT_0 . http . IDENT_1 response ; try { response = com . IDENT_0 . http . IDENT_6 . IDENT_7 . METHOD_4 ( request ) ; } catch ( java . lang . Exception e ) { throw new com . IDENT_0 . exceptions . METHOD_13 ( ( STRING_2 + ( e . toString ( ) ) ) ) ; } if ( ( response . getStatus ( ) ) != ( java . net . IDENT_2 . IDENT_3 ) ) { throw new com . IDENT_0 . exceptions . METHOD_13 ( ( ( ( com . IDENT_0 . auth . METHOD_6 . IDENT_16 ) + STRING_3 ) + ( response . getStatus ( ) ) ) ) ; } return new java . lang . String ( response . METHOD_1 ( ) ) ; }
org . junit . Assert . assertEquals ( content , res ) 