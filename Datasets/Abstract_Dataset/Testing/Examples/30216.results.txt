METHOD_0 ( ) { tests . unit . com . microsoft . azure . sdk . iot . service . IDENT_0 . IDENT_1 IDENT_2 = new tests . unit . com . microsoft . azure . sdk . iot . service . IDENT_0 . METHOD_1 ( ) ; new tests . unit . com . microsoft . azure . sdk . iot . service . IDENT_0 . METHOD_2 ( IDENT_2 ) { { IDENT_2 . hasNext ( IDENT_3 ) ; result = false ; } } ; tests . unit . com . microsoft . azure . sdk . iot . service . IDENT_0 . IDENT_4 IDENT_5 = IDENT_2 . next ( IDENT_3 , IDENT_6 ) ; "<AssertPlaceHolder>" ; } next ( com . microsoft . azure . sdk . iot . service . IDENT_0 . IDENT_7 , com . microsoft . azure . sdk . iot . service . IDENT_0 . IDENT_8 ) { if ( IDENT_9 == null ) { throw new java . lang . IllegalArgumentException ( STRING_0 ) ; } if ( ! ( this . hasNext ( IDENT_9 ) ) ) { return null ; } com . microsoft . azure . sdk . iot . service . IDENT_0 . IDENT_4 < java . lang . String > IDENT_10 = IDENT_9 . next ( options ) ; com . microsoft . azure . sdk . iot . service . IDENT_0 . Iterator < java . lang . String > IDENT_11 = IDENT_10 . METHOD_3 ( ) . iterator ( ) ; com . microsoft . azure . sdk . iot . service . IDENT_0 . Collection < com . microsoft . azure . sdk . iot . service . IDENT_0 . IDENT_12 > IDENT_13 = new com . microsoft . azure . sdk . iot . service . IDENT_0 . ArrayList ( ) ; while ( IDENT_11 . hasNext ( ) ) { IDENT_13 . add ( METHOD_4 ( IDENT_11 . next ( ) ) ) ; } return new com . microsoft . azure . sdk . iot . service . IDENT_0 . IDENT_4 < com . microsoft . azure . sdk . iot . service . IDENT_0 . IDENT_12 > ( IDENT_13 , IDENT_10 . METHOD_5 ( ) ) ; }
org . junit . Assert . assertNull ( IDENT_5 ) 