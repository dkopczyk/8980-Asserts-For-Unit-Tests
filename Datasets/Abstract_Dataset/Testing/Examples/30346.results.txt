METHOD_0 ( ) { final java . lang . String IDENT_0 = ( ( java . lang . System . METHOD_1 ( STRING_0 ) ) == null ) ? "" : java . lang . System . METHOD_1 ( STRING_0 ) ; IDENT_1 . core . IDENT_2 . IDENT_3 < byte [ ] > IDENT_4 = IDENT_1 . core . IDENT_2 . IDENT_3 . range ( 0 , com . azure . common . IDENT_5 . IDENT_6 . IDENT_7 ) . map ( ( IDENT_8 ) -> { final java . nio . file . Path IDENT_9 = com . azure . common . IDENT_5 . IDENT_6 . IDENT_10 . resolve ( ( ( STRING_1 + IDENT_8 ) + STRING_2 ) ) ; try { return java . nio . file . IDENT_11 . METHOD_2 ( IDENT_9 ) ; } catch ( IDENT_12 ) { throw IDENT_1 . core . IDENT_13 . METHOD_3 ( com . azure . common . IDENT_5 . IDENT_12 ) ; } } ) ; java . time . IDENT_14 IDENT_15 = java . time . IDENT_14 . now ( ) ; IDENT_1 . core . IDENT_2 . IDENT_3 . range ( 0 , com . azure . common . IDENT_5 . IDENT_6 . IDENT_7 ) . METHOD_4 ( IDENT_4 , ( id , IDENT_16 ) -> { java . nio . IDENT_17 . IDENT_18 IDENT_19 = null ; try { IDENT_19 = java . nio . IDENT_17 . IDENT_18 . METHOD_5 ( com . azure . common . IDENT_5 . IDENT_6 . IDENT_10 . resolve ( ( ( STRING_1 + id ) + STRING_3 ) ) , IDENT_20 . IDENT_21 ) ; } catch ( IDENT_12 ) { IDENT_1 . core . IDENT_13 . METHOD_3 ( com . azure . common . IDENT_5 . IDENT_12 ) ; } io . netty . buffer . IDENT_22 IDENT_23 = null ; IDENT_3 < io . netty . buffer . IDENT_22 > stream = null ; try { java . nio . IDENT_24 IDENT_25 = IDENT_19 . map ( IDENT_18 . IDENT_26 . IDENT_27 , 0 , IDENT_19 . size ( ) ) ; IDENT_23 = io . netty . buffer . IDENT_28 . METHOD_6 ( IDENT_25 ) ; stream = com . azure . common . IDENT_5 . util . IDENT_29 . split ( IDENT_23 , com . azure . common . IDENT_5 . IDENT_6 . IDENT_30 ) ; } catch ( IDENT_12 ) { IDENT_23 . METHOD_7 ( ) ; IDENT_1 . core . IDENT_13 . METHOD_3 ( com . azure . common . IDENT_5 . IDENT_12 ) ; } return com . azure . common . IDENT_5 . IDENT_6 . service . METHOD_8 ( java . lang . String . valueOf ( id ) , IDENT_0 , STRING_4 , stream , com . azure . common . IDENT_5 . IDENT_6 . IDENT_31 ) . map ( ( response ) -> { java . lang . String IDENT_32 = response . headers ( ) . value ( STRING_5 ) ; byte [ ] IDENT_33 = java . util . IDENT_34 . METHOD_9 ( ) . decode ( IDENT_32 ) ; "<AssertPlaceHolder>" ; return response ; } ) ; } ) . METHOD_10 ( ( m ) -> m , 15 , 1 ) . METHOD_11 ( ) ; long IDENT_35 = java . time . IDENT_36 . METHOD_12 ( IDENT_15 , java . time . IDENT_14 . now ( ) ) . METHOD_13 ( ) ; org . IDENT_37 . IDENT_38 . METHOD_14 ( getClass ( ) ) . info ( ( ( STRING_6 + IDENT_35 ) + STRING_7 ) ) ; } decode ( byte [ ] ) { return IDENT_39 == null ? null : java . util . IDENT_34 . METHOD_9 ( ) . decode ( IDENT_39 ) ; }
org . junit . Assert . assertArrayEquals ( IDENT_16 , IDENT_33 ) 