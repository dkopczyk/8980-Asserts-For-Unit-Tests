METHOD_0 ( ) { com . azure . common . IDENT_0 . IDENT_1 IDENT_2 = IDENT_3 . IDENT_4 ; java . lang . String actual = IDENT_2 . METHOD_1 ( com . azure . common . IDENT_0 . IDENT_5 . simple ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { java . lang . StringBuilder output = new java . lang . StringBuilder ( ) ; for ( int i = 0 ; i != ( METHOD_2 ( original ) . length ( ) ) ; i ++ ) { char c = original . charAt ( i ) ; if ( c == STRING_0 ) { output . append ( ( IDENT_6 ? STRING_1 : com . azure . common . IDENT_0 . IDENT_1 . IDENT_7 [ STRING_0 ] ) ) ; } else if ( ( c >= STRING_2 ) && ( c <= STRING_3 ) ) { output . append ( c ) ; } else if ( ( c >= STRING_4 ) && ( c <= STRING_5 ) ) { output . append ( c ) ; } else if ( ( c >= STRING_6 ) && ( c <= STRING_7 ) ) { output . append ( c ) ; } else if ( IDENT_8 . contains ( c ) ) { output . append ( c ) ; } else { output . append ( com . azure . common . IDENT_0 . IDENT_1 . IDENT_7 [ c ] ) ; } } return output . toString ( ) ; }
org . junit . Assert . assertEquals ( com . azure . common . IDENT_0 . IDENT_5 . simple , actual ) 