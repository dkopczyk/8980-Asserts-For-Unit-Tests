METHOD_0 ( ) { com . microsoft . azure . IDENT_0 . IDENT_1 . IDENT_2 options = new com . microsoft . azure . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; options . METHOD_2 ( INT_0 ) ; IDENT_3 = com . microsoft . azure . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 . METHOD_3 ( com . microsoft . azure . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_6 , com . microsoft . azure . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_7 , com . microsoft . azure . IDENT_0 . IDENT_1 . IDENT_8 . METHOD_4 ( ) , options ) ; IDENT_3 . METHOD_5 ( java . time . IDENT_9 . METHOD_6 ( 2 ) ) ; int IDENT_10 = 0 ; int IDENT_11 = 0 ; while ( ( IDENT_10 < ( com . microsoft . azure . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_12 ) ) && ( IDENT_11 < ( com . microsoft . azure . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_13 ) ) ) { final java . lang . IDENT_14 < com . microsoft . azure . IDENT_0 . IDENT_1 . IDENT_15 > events = IDENT_3 . METHOD_7 ( com . microsoft . azure . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_12 ) ; if ( ( events == null ) || ( ! ( events . iterator ( ) . hasNext ( ) ) ) ) { IDENT_11 ++ ; } else { IDENT_10 += ( ( java . util . IDENT_16 < com . microsoft . azure . IDENT_0 . IDENT_1 . IDENT_15 > ) ( events ) ) . size ( ) ; } } "<AssertPlaceHolder>" ; } size ( ) { return this . size ; }
org . junit . Assert . assertTrue ( ( IDENT_10 >= ( com . microsoft . azure . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_12 ) ) ) 