METHOD_0 ( ) { java . lang . String IDENT_0 = ( com . microsoft . azure . IDENT_1 . IDENT_2 . test . IDENT_3 . IDENT_4 ) + "1" ; try { com . microsoft . azure . IDENT_1 . IDENT_5 . IDENT_6 request = new com . microsoft . azure . IDENT_1 . IDENT_5 . IDENT_6 . Builder ( METHOD_1 ( ) , IDENT_0 , com . microsoft . azure . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_9 ) . build ( ) ; com . microsoft . azure . IDENT_1 . models . IDENT_10 IDENT_11 = IDENT_12 . METHOD_2 ( request ) ; if ( IDENT_11 != null ) { try { com . microsoft . azure . IDENT_1 . IDENT_2 . IDENT_13 resolver = new com . microsoft . azure . IDENT_1 . IDENT_2 . METHOD_3 ( IDENT_12 , IDENT_14 ) ; java . util . concurrent . IDENT_15 < com . microsoft . azure . IDENT_1 . core . IDENT_16 > IDENT_17 = resolver . METHOD_4 ( IDENT_11 . METHOD_5 ( ) . METHOD_6 ( ) ) ; java . util . concurrent . IDENT_15 < com . microsoft . azure . IDENT_1 . core . IDENT_16 > IDENT_18 = resolver . METHOD_4 ( IDENT_11 . METHOD_5 ( ) . METHOD_7 ( ) ) ; com . microsoft . azure . IDENT_1 . core . IDENT_16 IDENT_19 = IDENT_17 . get ( ) ; com . microsoft . azure . IDENT_1 . core . IDENT_16 IDENT_20 = IDENT_18 . get ( ) ; "<AssertPlaceHolder>" ; } finally { IDENT_12 . METHOD_8 ( METHOD_1 ( ) , IDENT_0 ) ; METHOD_9 ( METHOD_1 ( ) , IDENT_0 ) ; IDENT_12 . METHOD_10 ( METHOD_1 ( ) , IDENT_0 ) ; } } } catch ( java . lang . Exception ex ) { org . junit . Assert . fail ( ex . getMessage ( ) ) ; } } METHOD_11 ( ) { return IDENT_21 ; }
org . junit . Assert . assertEquals ( IDENT_19 . METHOD_11 ( ) , IDENT_20 . METHOD_11 ( ) ) 