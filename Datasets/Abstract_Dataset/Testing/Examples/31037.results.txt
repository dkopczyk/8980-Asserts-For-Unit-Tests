METHOD_0 ( ) { org . junit . IDENT_0 . METHOD_1 ( com . IDENT_1 . IDENT_2 . client . api . IDENT_3 . IDENT_4 ) ; com . IDENT_1 . IDENT_2 . client . api . IDENT_5 client = null ; int i = 0 ; try { client = new com . IDENT_1 . IDENT_2 . client . api . METHOD_2 ( com . IDENT_1 . IDENT_2 . client . api . IDENT_3 . cluster ) ; com . IDENT_1 . IDENT_2 . client . api . IDENT_3 . cluster . start ( ) ; final com . IDENT_1 . IDENT_2 . client . core . query . IDENT_6 IDENT_7 = new com . IDENT_1 . IDENT_2 . client . core . query . METHOD_3 ( STRING_0 , java . lang . Integer . toString ( com . IDENT_1 . IDENT_2 . client . api . IDENT_3 . random . METHOD_4 ( ) ) ) ; for ( i = 0 ; i < 1000 ; i ++ ) { METHOD_5 ( client , new com . IDENT_1 . IDENT_2 . client . core . query . METHOD_6 ( IDENT_7 , java . lang . Integer . toString ( i ) ) ) ; } } catch ( java . lang . Exception ex ) { logger . debug ( STRING_1 , ex ) ; logger . debug ( STRING_2 , com . IDENT_1 . IDENT_2 . client . api . IDENT_3 . cluster . METHOD_7 ( ) . get ( 0 ) . METHOD_8 ( ) . toString ( ) , i ) ; org . junit . Assert . fail ( ex . getMessage ( ) ) ; } finally { final java . lang . Boolean IDENT_8 = client . METHOD_9 ( ) . get ( 3 , TimeUnit . IDENT_9 ) ; "<AssertPlaceHolder>" ; } } get ( long , com . IDENT_1 . IDENT_2 . client . core . TimeUnit ) { boolean IDENT_10 = IDENT_11 . METHOD_10 ( IDENT_12 , unit ) ; if ( ! IDENT_10 ) { throw new com . IDENT_1 . IDENT_2 . client . core . METHOD_11 ( ) ; } else if ( ( exception ) != null ) { if ( ( exception . getClass ( ) ) == ( com . IDENT_1 . IDENT_2 . client . core . IDENT_13 . class ) ) { throw ( ( com . IDENT_1 . IDENT_2 . client . core . IDENT_13 ) ( exception ) ) ; } throw new com . IDENT_1 . IDENT_2 . client . core . METHOD_12 ( exception ) ; } else { return IDENT_14 ; } }
org . junit . Assert . assertTrue ( IDENT_8 ) 