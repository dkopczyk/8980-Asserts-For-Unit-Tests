METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . client . core . IDENT_2 node = new com . IDENT_0 . IDENT_1 . client . core . IDENT_2 . Builder ( ) . METHOD_1 ( ( ( IDENT_3 ) + ( com . IDENT_0 . IDENT_1 . client . core . fixture . IDENT_4 . IDENT_5 ) ) ) . METHOD_2 ( 10 ) . METHOD_3 ( 10 ) . build ( ) ; com . IDENT_0 . IDENT_1 . client . core . IDENT_6 . IDENT_7 listener = new com . IDENT_0 . IDENT_1 . client . core . IDENT_6 . METHOD_4 ( com . IDENT_0 . IDENT_1 . client . core . IDENT_2 . IDENT_8 . IDENT_9 ) ; node . METHOD_5 ( listener ) ; node . start ( ) ; "<AssertPlaceHolder>" ; node . METHOD_6 ( ) . get ( ) ; } get ( java . lang . Class ) { java . util . concurrent . IDENT_10 < com . IDENT_0 . IDENT_1 . client . api . convert . IDENT_11 . IDENT_12 > IDENT_13 = cache . get ( clazz ) ; if ( IDENT_13 == null ) { java . util . concurrent . IDENT_14 < com . IDENT_0 . IDENT_1 . client . api . convert . IDENT_11 . IDENT_12 > IDENT_15 = new java . util . concurrent . METHOD_7 ( new com . IDENT_0 . IDENT_1 . client . api . convert . IDENT_11 . METHOD_8 ( clazz ) ) ; IDENT_13 = cache . METHOD_9 ( clazz , IDENT_15 ) ; if ( IDENT_13 == null ) { IDENT_13 = IDENT_15 ; IDENT_15 . run ( ) ; } } try { return IDENT_13 . get ( ) ; } catch ( java . lang . IDENT_16 e ) { java . lang . Thread . METHOD_10 ( ) . METHOD_11 ( ) ; throw new java . lang . RuntimeException ( e ) ; } catch ( java . util . concurrent . IDENT_17 e ) { cache . remove ( clazz ) ; throw new java . lang . RuntimeException ( e . METHOD_12 ( ) ) ; } }
org . junit . Assert . assertTrue ( listener . get ( 10 ) ) 