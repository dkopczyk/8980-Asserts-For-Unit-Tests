METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; org . batfish . datamodel . IDENT_1 IDENT_2 = org . batfish . datamodel . IDENT_3 . builder ( ) . METHOD_1 ( org . batfish . datamodel . IDENT_4 . IDENT_5 ) . METHOD_2 ( org . batfish . datamodel . IDENT_4 . IDENT_6 . METHOD_3 ( ) ) . METHOD_4 ( 1 ) . build ( ) ; org . batfish . datamodel . IDENT_1 IDENT_7 = org . batfish . datamodel . IDENT_3 . builder ( ) . METHOD_1 ( org . batfish . datamodel . IDENT_4 . IDENT_5 ) . METHOD_2 ( org . batfish . datamodel . IDENT_4 . IDENT_6 . METHOD_5 ( ) ) . METHOD_4 ( 1 ) . build ( ) ; org . batfish . datamodel . IDENT_1 IDENT_8 = new org . batfish . datamodel . METHOD_6 ( org . batfish . datamodel . IDENT_4 . IDENT_6 , IDENT_0 ) ; java . util . Set < org . batfish . datamodel . IDENT_1 > IDENT_9 = com . google . common . collect . IDENT_10 . of ( IDENT_2 , IDENT_7 , IDENT_8 ) ; org . batfish . datamodel . IDENT_11 IDENT_12 = org . batfish . datamodel . IDENT_13 . builder ( ) . METHOD_7 ( com . google . common . collect . ImmutableMap . of ( IDENT_2 , com . google . common . collect . ImmutableMap . of ( IDENT_0 , com . google . common . collect . ImmutableMap . of ( IDENT_2 . METHOD_8 ( ) , com . google . common . collect . IDENT_10 . of ( IDENT_8 ) ) ) , IDENT_7 , com . google . common . collect . ImmutableMap . of ( IDENT_0 , com . google . common . collect . ImmutableMap . of ( IDENT_7 . METHOD_8 ( ) , com . google . common . collect . IDENT_10 . of ( IDENT_8 ) ) ) , IDENT_8 , com . google . common . collect . ImmutableMap . of ( IDENT_0 , com . google . common . collect . ImmutableMap . of ( IDENT_14 . IDENT_15 , com . google . common . collect . IDENT_10 . of ( IDENT_8 ) ) ) ) ) . build ( ) ; java . util . Set < org . batfish . datamodel . IDENT_1 > result = org . batfish . datamodel . IDENT_16 . METHOD_9 ( IDENT_12 , IDENT_0 , IDENT_9 , com . google . common . collect . ImmutableMap . of ( IDENT_0 , org . batfish . datamodel . IDENT_4 . IDENT_6 . METHOD_3 ( ) . METHOD_10 ( ) ) ) ; "<AssertPlaceHolder>" ; } contains ( org . batfish . datamodel . table . IDENT_17 ) { return IDENT_18 . contains ( row ) ; }
org . junit . Assert . assertThat ( result , org . hamcrest . Matchers . contains ( IDENT_7 ) ) 