METHOD_0 ( ) { org . batfish . datamodel . IDENT_0 . IDENT_1 expr = org . batfish . datamodel . IDENT_0 . IDENT_2 . and ( org . batfish . datamodel . IDENT_0 . IDENT_3 . IDENT_4 , org . batfish . datamodel . IDENT_0 . IDENT_3 . IDENT_5 , org . batfish . datamodel . IDENT_0 . IDENT_2 . METHOD_1 ( org . batfish . datamodel . IDENT_0 . IDENT_2 . and ( org . batfish . datamodel . IDENT_0 . IDENT_3 . IDENT_6 , org . batfish . datamodel . IDENT_0 . IDENT_3 . IDENT_7 ) , org . batfish . datamodel . IDENT_0 . IDENT_3 . IDENT_8 ) ) ; org . batfish . datamodel . IDENT_0 . IDENT_1 IDENT_9 = org . batfish . datamodel . IDENT_0 . IDENT_2 . METHOD_1 ( org . batfish . datamodel . IDENT_0 . IDENT_2 . and ( org . batfish . datamodel . IDENT_0 . IDENT_3 . IDENT_4 , org . batfish . datamodel . IDENT_0 . IDENT_3 . IDENT_5 , org . batfish . datamodel . IDENT_0 . IDENT_3 . IDENT_6 , org . batfish . datamodel . IDENT_0 . IDENT_3 . IDENT_7 ) , org . batfish . datamodel . IDENT_0 . IDENT_2 . and ( org . batfish . datamodel . IDENT_0 . IDENT_3 . IDENT_4 , org . batfish . datamodel . IDENT_0 . IDENT_3 . IDENT_5 , org . batfish . datamodel . IDENT_0 . IDENT_3 . IDENT_8 ) ) ; org . batfish . datamodel . IDENT_0 . IDENT_1 actual = METHOD_2 ( expr ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . batfish . datamodel . IDENT_0 . IDENT_1 ) { return org . batfish . datamodel . IDENT_0 . IDENT_10 . METHOD_2 ( IDENT_11 , expr ) ; }
org . junit . Assert . assertThat ( actual , org . hamcrest . Matchers . equalTo ( IDENT_9 ) ) 