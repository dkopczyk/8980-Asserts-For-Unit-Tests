METHOD_0 ( ) { org . batfish . datamodel . IDENT_0 IDENT_1 = org . batfish . datamodel . IDENT_0 . parse ( STRING_0 ) ; net . sf . IDENT_2 . IDENT_3 IDENT_4 = IDENT_5 . METHOD_1 ( ) . value ( IDENT_1 . METHOD_2 ( ) ) ; org . batfish . datamodel . IDENT_6 IDENT_7 = METHOD_3 ( org . batfish . IDENT_8 . IDENT_9 . IDENT_10 . METHOD_4 ( org . batfish . datamodel . IDENT_11 . builder ( ) . METHOD_5 ( IDENT_1 . METHOD_6 ( ) ) . build ( ) ) ) ; java . util . Map < java . lang . String , org . batfish . datamodel . IDENT_6 > IDENT_12 = new java . util . METHOD_7 ( ) ; IDENT_12 . put ( "foo" , IDENT_7 ) ; org . batfish . datamodel . IDENT_6 IDENT_13 = METHOD_3 ( org . batfish . IDENT_8 . IDENT_9 . IDENT_10 . METHOD_4 ( new org . batfish . datamodel . IDENT_13 . METHOD_8 ( "foo" ) ) ) ; IDENT_12 . put ( STRING_1 , IDENT_13 ) ; org . batfish . datamodel . IDENT_6 IDENT_14 = METHOD_3 ( org . batfish . IDENT_8 . IDENT_9 . IDENT_10 . METHOD_4 ( new org . batfish . datamodel . IDENT_13 . METHOD_8 ( STRING_1 ) ) ) ; net . sf . IDENT_2 . IDENT_3 IDENT_9 = org . batfish . IDENT_8 . IDENT_9 . IDENT_15 . create ( IDENT_5 , IDENT_14 , IDENT_12 , com . google . common . collect . ImmutableMap . of ( ) ) . METHOD_9 ( ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( ) { return IDENT_16 ; }
org . junit . Assert . assertThat ( IDENT_9 , org . hamcrest . Matchers . equalTo ( IDENT_4 ) ) 