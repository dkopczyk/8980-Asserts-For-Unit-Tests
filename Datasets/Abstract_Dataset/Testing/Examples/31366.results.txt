METHOD_0 ( ) { org . batfish . datamodel . table . IDENT_0 row = org . batfish . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( new org . batfish . IDENT_1 . IDENT_2 . IDENT_4 . METHOD_2 ( STRING_0 , STRING_1 , null ) , com . google . common . collect . IDENT_5 . of ( STRING_2 , 3 , STRING_2 , 4 , STRING_3 , INT_0 ) , org . batfish . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_3 ( new org . batfish . IDENT_1 . IDENT_2 . METHOD_4 ( true ) ) . METHOD_5 ( ) ) ; org . batfish . datamodel . table . IDENT_0 expected = org . batfish . datamodel . table . IDENT_0 . of ( org . batfish . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_6 , com . google . common . collect . ImmutableList . of ( new org . batfish . datamodel . collections . METHOD_6 ( STRING_2 , com . google . common . collect . IDENT_7 . of ( 3 , 4 ) ) , new org . batfish . datamodel . collections . METHOD_6 ( STRING_3 , com . google . common . collect . IDENT_7 . of ( INT_0 ) ) ) , org . batfish . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_8 , STRING_0 , org . batfish . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_9 , STRING_1 , org . batfish . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_10 , STRING_4 ) ; "<AssertPlaceHolder>" ; } of ( int ) { return org . batfish . datamodel . IDENT_11 . builder ( ) . METHOD_7 ( com . google . common . collect . IDENT_12 . METHOD_8 ( value ) ) . build ( ) ; }
org . junit . Assert . assertThat ( row , org . hamcrest . Matchers . equalTo ( expected ) ) 