METHOD_0 ( ) { org . batfish . datamodel . IDENT_0 IDENT_1 = new org . batfish . datamodel . METHOD_1 ( ) ; org . batfish . datamodel . Configuration c = IDENT_1 . METHOD_2 ( ) . METHOD_3 ( IDENT_2 . IDENT_3 ) . build ( ) ; org . batfish . datamodel . IDENT_4 . IDENT_5 IDENT_6 = IDENT_1 . METHOD_4 ( ) . METHOD_5 ( c ) . setName ( STRING_0 ) . build ( ) ; org . batfish . datamodel . IDENT_4 . IDENT_5 IDENT_7 = IDENT_1 . METHOD_4 ( ) . METHOD_5 ( c ) . setName ( STRING_1 ) . build ( ) ; IDENT_1 . METHOD_6 ( ) . METHOD_5 ( c ) . build ( ) ; java . util . Map < java . lang . String , org . batfish . datamodel . Configuration > IDENT_8 = com . google . common . collect . ImmutableMap . of ( STRING_2 , c ) ; org . batfish . IDENT_9 . IDENT_10 . IDENT_11 IDENT_9 = new org . batfish . IDENT_9 . IDENT_10 . METHOD_7 ( org . batfish . IDENT_9 . IDENT_10 . IDENT_12 . IDENT_13 , new org . batfish . datamodel . IDENT_14 . METHOD_8 ( org . batfish . datamodel . IDENT_14 . METHOD_8 . IDENT_15 ) , null , null , false ) ; com . google . common . collect . IDENT_16 < org . batfish . datamodel . table . IDENT_17 > IDENT_18 = org . batfish . IDENT_9 . IDENT_10 . IDENT_19 . METHOD_9 ( IDENT_9 , IDENT_8 . METHOD_10 ( ) , IDENT_8 , org . batfish . IDENT_9 . IDENT_10 . IDENT_19 . METHOD_11 ( IDENT_9 ) . METHOD_12 ( ) ) ; com . google . common . collect . IDENT_16 < org . batfish . datamodel . table . IDENT_17 > expected = com . google . common . collect . IDENT_20 . create ( com . google . common . collect . ImmutableList . of ( org . batfish . datamodel . table . IDENT_17 . builder ( ) . put ( IDENT_19 . IDENT_21 , new org . batfish . datamodel . IDENT_22 . Node ( STRING_2 ) ) . put ( IDENT_19 . IDENT_23 , METHOD_8 . IDENT_15 ) . put ( IDENT_19 . IDENT_24 , STRING_0 ) . put ( IDENT_19 . IDENT_25 , org . batfish . IDENT_9 . IDENT_10 . IDENT_19 . METHOD_13 ( IDENT_6 , METHOD_8 . IDENT_15 ) ) . build ( ) , org . batfish . datamodel . table . IDENT_17 . builder ( ) . put ( IDENT_19 . IDENT_21 , new org . batfish . datamodel . IDENT_22 . Node ( STRING_2 ) ) . put ( IDENT_19 . IDENT_23 , METHOD_8 . IDENT_15 ) . put ( IDENT_19 . IDENT_24 , STRING_1 ) . put ( IDENT_19 . IDENT_25 , org . batfish . IDENT_9 . IDENT_10 . IDENT_19 . METHOD_13 ( IDENT_7 , METHOD_8 . IDENT_15 ) ) . build ( ) ) ) ; "<AssertPlaceHolder>" ; } build ( ) { METHOD_14 ( ( ( IDENT_26 ) != null ) , STRING_3 ) ; METHOD_14 ( ( ( IDENT_27 ) != null ) , STRING_4 ) ; METHOD_14 ( ( ( IDENT_28 ) != null ) , STRING_5 ) ; return new org . batfish . IDENT_29 . METHOD_15 ( IDENT_26 , IDENT_27 , IDENT_30 , IDENT_28 , IDENT_31 , IDENT_32 , IDENT_33 ) ; }
org . junit . Assert . assertThat ( IDENT_18 , org . hamcrest . Matchers . equalTo ( expected ) ) 