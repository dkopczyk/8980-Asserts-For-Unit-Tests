METHOD_0 ( ) { org . batfish . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = org . batfish . IDENT_0 . IDENT_1 . IDENT_2 . builder ( ) . METHOD_1 ( STRING_0 ) . build ( ) ; org . batfish . IDENT_0 . IDENT_1 . IDENT_2 IDENT_4 = org . batfish . IDENT_0 . IDENT_1 . IDENT_2 . builder ( ) . METHOD_1 ( STRING_1 ) . build ( ) ; org . batfish . IDENT_0 . IDENT_1 . IDENT_2 IDENT_5 = org . batfish . IDENT_0 . IDENT_1 . IDENT_2 . builder ( ) . METHOD_1 ( STRING_2 ) . build ( ) ; java . util . List < java . util . List < org . batfish . IDENT_0 . IDENT_1 . IDENT_2 > > IDENT_6 = org . batfish . IDENT_0 . IDENT_1 . IDENT_7 . METHOD_2 ( com . google . common . collect . ImmutableList . of ( IDENT_5 ) , com . google . common . collect . ImmutableList . of ( IDENT_3 , IDENT_4 , IDENT_5 ) ) ; java . util . List < java . util . List < org . batfish . IDENT_0 . IDENT_1 . IDENT_2 > > IDENT_8 = com . google . common . collect . ImmutableList . of ( com . google . common . collect . Lists . newArrayList ( null , IDENT_3 ) , com . google . common . collect . Lists . newArrayList ( null , IDENT_4 ) , com . google . common . collect . Lists . newArrayList ( IDENT_5 , IDENT_5 ) ) ; "<AssertPlaceHolder>" ; } of ( int ) { return org . batfish . datamodel . IDENT_9 . builder ( ) . METHOD_3 ( com . google . common . collect . IDENT_10 . METHOD_4 ( value ) ) . build ( ) ; }
org . junit . Assert . assertThat ( IDENT_6 , org . hamcrest . Matchers . equalTo ( IDENT_8 ) ) 