METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . Object > expected = com . google . common . collect . ImmutableMap . < java . lang . String , java . lang . Object > of ( STRING_0 , "value" , STRING_1 , INT_0 ) ; when ( IDENT_0 . get ( STRING_2 , STRING_3 , IDENT_1 . IDENT_2 ) ) . thenReturn ( expected ) ; java . util . Map < java . lang . String , java . lang . Object > actual = METHOD_1 ( test . integration . IDENT_3 . IDENT_4 . IDENT_5 ) . get ( STRING_2 , STRING_3 , IDENT_1 . IDENT_2 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_0 ) . get ( STRING_2 , STRING_3 , IDENT_1 . IDENT_2 ) ; METHOD_2 ( IDENT_0 ) ; } get ( java . lang . String , java . lang . String , com . IDENT_6 . IDENT_7 . web . resources . IDENT_8 . IDENT_9 ) { com . IDENT_6 . IDENT_7 . IDENT_8 . api . IDENT_10 IDENT_11 = ( IDENT_12 != null ) ? IDENT_12 . get ( ) : null ; final com . IDENT_6 . IDENT_7 . IDENT_8 . api . IDENT_13 IDENT_8 = IDENT_14 . get ( table , IDENT_15 , IDENT_11 ) ; javax . ws . rs . core . Response . IDENT_16 response = javax . ws . rs . core . Response . METHOD_3 ( new javax . ws . rs . core . METHOD_4 ( ) { @ com . IDENT_6 . IDENT_7 . web . resources . IDENT_8 . Override public void write ( java . io . IDENT_17 output ) throws java . io . IOException { IDENT_8 . METHOD_5 ( output ) ; } } ) ; METHOD_6 ( response , IDENT_8 , ( IDENT_11 != null ? IDENT_8 . METHOD_7 ( ) : null ) ) ; return response . build ( ) ; }
org . junit . Assert . assertEquals ( actual , expected ) 