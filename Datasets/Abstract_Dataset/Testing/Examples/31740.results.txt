METHOD_0 ( ) { java . util . HashMap < java . lang . String , java . lang . Object > IDENT_0 = new java . util . HashMap ( ) ; org . IDENT_1 . beam . IDENT_2 . IDENT_3 [ ] IDENT_4 = new org . IDENT_1 . beam . IDENT_2 . IDENT_3 [ ] { new org . IDENT_1 . beam . IDENT_2 . METHOD_1 ( STRING_0 , FLOAT_0 , FLOAT_0 , null ) , new org . IDENT_1 . beam . IDENT_2 . METHOD_1 ( STRING_1 , FLOAT_1 , FLOAT_1 , null ) , new org . IDENT_1 . beam . IDENT_2 . METHOD_1 ( STRING_2 , FLOAT_2 , FLOAT_2 , null ) } ; int IDENT_5 = 5 ; java . io . File IDENT_6 = org . IDENT_1 . beam . IDENT_2 . IDENT_7 . METHOD_2 ( STRING_3 , getClass ( ) ) ; IDENT_0 . put ( STRING_4 , IDENT_6 ) ; IDENT_0 . put ( STRING_5 , false ) ; IDENT_0 . put ( STRING_6 2 , false ) ; IDENT_0 . put ( STRING_6 3 , IDENT_4 ) ; IDENT_0 . put ( STRING_7 , IDENT_5 ) ; java . lang . String [ ] IDENT_8 = new java . lang . String [ ] { STRING_8 , STRING_6 6 } ; java . lang . String [ ] IDENT_9 = new java . lang . String [ ] { STRING_6 , STRING_9 } ; org . IDENT_1 . beam . framework . datamodel . IDENT_10 [ ] IDENT_11 = new org . IDENT_1 . beam . framework . datamodel . IDENT_10 [ ] { org . IDENT_1 . beam . IDENT_2 . IDENT_7 . METHOD_3 ( STRING_6 0 , STRING_6 1 , IDENT_8 ) , org . IDENT_1 . beam . IDENT_2 . IDENT_7 . METHOD_3 ( STRING_6 5 , STRING_6 4 , IDENT_9 ) } ; org . IDENT_1 . beam . IDENT_2 . IDENT_7 . METHOD_4 ( IDENT_0 , IDENT_11 ) ; final org . IDENT_1 . beam . IDENT_2 . IDENT_12 reader = new org . IDENT_1 . beam . IDENT_2 . METHOD_5 ( IDENT_6 ) ; final java . util . List < org . IDENT_1 . beam . IDENT_13 . IDENT_14 > IDENT_15 = METHOD_6 ( reader ) ; try { "<AssertPlaceHolder>" ; METHOD_7 ( IDENT_15 , STRING_0 , 1 , FLOAT_3 , FLOAT_4 , FLOAT_5 , FLOAT_6 ) ; METHOD_7 ( IDENT_15 , STRING_1 , 2 , FLOAT_7 , FLOAT_8 , FLOAT_9 , FLOAT_10 ) ; METHOD_7 ( IDENT_15 , STRING_2 , 3 , FLOAT_2 , FLOAT_2 , FLOAT_11 , FLOAT_12 ) ; } finally { reader . close ( ) ; } } size ( ) { return size ; }
org . junit . Assert . assertEquals ( ( ( ( IDENT_5 * IDENT_5 ) * ( IDENT_11 . length ) ) * ( IDENT_4 . length ) ) , IDENT_15 . size ( ) ) 