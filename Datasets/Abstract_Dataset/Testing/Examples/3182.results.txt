METHOD_0 ( ) { com . allanbank . mongodb . bson . builder . IDENT_0 builder = com . allanbank . mongodb . bson . builder . IDENT_1 . start ( ) ; builder . METHOD_1 ( STRING_0 2 , true ) ; final com . allanbank . mongodb . bson . Document simple = builder . build ( ) ; builder = com . allanbank . mongodb . bson . builder . IDENT_1 . start ( ) ; builder . add ( new com . allanbank . mongodb . bson . element . METHOD_2 ( STRING_1 , false ) ) ; builder . METHOD_3 ( STRING_2 6 , new byte [ 20 ] ) ; builder . METHOD_3 ( STRING_3 6 , ( ( byte ) ( 2 ) ) , new byte [ INT_0 ] ) ; builder . METHOD_1 ( STRING_0 2 , true ) ; builder . METHOD_1 ( STRING_4 8 , false ) ; builder . METHOD_4 ( STRING_2 9 , STRING_4 9 , STRING_0 9 , new com . allanbank . mongodb . bson . element . METHOD_5 ( 1 , INT_1 ) ) ; builder . METHOD_6 ( STRING_2 4 , FLOAT_0 ) ; builder . METHOD_7 ( STRING_5 , simple ) ; builder . METHOD_8 ( STRING_3 7 , INT_2 ) ; builder . METHOD_9 ( STRING_3 0 , STRING_2 3 ) ; builder . METHOD_9 ( STRING_4 4 , STRING_2 3 , simple ) ; builder . METHOD_10 ( STRING_4 , INT_3 ) ; builder . METHOD_11 ( STRING_2 ) ; builder . METHOD_12 ( STRING_3 3 ) ; builder . METHOD_13 ( STRING_0 1 , java . lang . System . currentTimeMillis ( ) ) ; builder . METHOD_14 ( STRING_3 2 ) ; builder . METHOD_15 ( STRING_4 1 , new com . allanbank . mongodb . bson . element . METHOD_5 ( ( ( ( int ) ( java . lang . System . currentTimeMillis ( ) ) ) / 1000 ) , INT_4 ) ) ; builder . METHOD_16 ( STRING_2 1 , STRING_2 7 , STRING_2 5 ) ; builder . METHOD_17 ( STRING_4 5 , STRING_6 ) ; builder . METHOD_18 ( STRING_4 0 , STRING_4 0 ) ; builder . METHOD_19 ( STRING_0 6 , java . lang . System . currentTimeMillis ( ) ) ; builder . METHOD_20 ( STRING_2 8 ) . METHOD_1 ( STRING_0 2 , true ) . METHOD_21 ( ) ; final com . allanbank . mongodb . bson . builder . IDENT_2 IDENT_3 = builder . METHOD_22 ( STRING_4 6 ) ; IDENT_3 . METHOD_3 ( new byte [ 20 ] ) ; IDENT_3 . METHOD_3 ( ( ( byte ) ( 2 ) ) , new byte [ INT_0 ] ) ; IDENT_3 . METHOD_1 ( true ) ; IDENT_3 . METHOD_1 ( false ) ; IDENT_3 . METHOD_4 ( STRING_4 9 , STRING_0 9 , new com . allanbank . mongodb . bson . element . METHOD_5 ( 1 , INT_1 ) ) ; IDENT_3 . METHOD_6 ( FLOAT_0 ) ; IDENT_3 . METHOD_8 ( INT_2 ) ; IDENT_3 . METHOD_9 ( STRING_2 3 ) ; IDENT_3 . METHOD_9 ( STRING_2 3 , simple ) ; IDENT_3 . METHOD_10 ( INT_3 ) ; IDENT_3 . METHOD_11 ( ) ; IDENT_3 . METHOD_12 ( ) ; IDENT_3 . METHOD_13 ( java . lang . System . currentTimeMillis ( ) ) ; IDENT_3 . METHOD_14 ( ) ; IDENT_3 . METHOD_15 ( new com . allanbank . mongodb . bson . element . METHOD_5 ( ( ( ( int ) ( java . lang . System . currentTimeMillis ( ) ) ) / 1000 ) , INT_4 ) ) ; IDENT_3 . METHOD_16 ( STRING_2 7 , STRING_2 5 ) ; IDENT_3 . METHOD_17 ( STRING_4 5 ) ; IDENT_3 . METHOD_18 ( STRING_4 0 ) ; IDENT_3 . METHOD_19 ( java . lang . System . currentTimeMillis ( ) ) ; IDENT_3 . METHOD_20 ( ) . METHOD_1 ( STRING_0 2 , true ) . METHOD_21 ( ) ; final com . allanbank . mongodb . bson . Document doc = builder . build ( ) ; final java . util . List < java . lang . String > expected = java . util . Arrays . asList ( STRING_1 , STRING_2 6 , STRING_3 6 , STRING_0 2 , STRING_4 8 , STRING_2 9 , STRING_2 4 , STRING_5 , STRING_0 2 , STRING_3 7 , STRING_3 0 , STRING_4 4 , STRING_0 2 , STRING_4 , STRING_2 , STRING_3 3 , STRING_0 1 , STRING_3 2 , STRING_4 1 , STRING_2 1 , STRING_4 5 , STRING_4 0 , STRING_0 6 , STRING_2 8 , STRING_0 2 , STRING_4 6 , STRING_0 0 , STRING_0 5 , STRING_4 2 , STRING_0 3 , STRING_3 1 , STRING_7 , STRING_2 0 , STRING_3 , STRING_4 3 , STRING_0 2 , STRING_4 7 , STRING_0 7 , STRING_2 2 , STRING_0 , STRING_0 8 , STRING_3 5 , STRING_3 8 , STRING_8 , STRING_3 4 , STRING_0 4 , STRING_9 , STRING_0 2 ) ; final java . util . List < java . lang . String > IDENT_4 = new java . util . ArrayList < java . lang . String > ( ) ; final com . allanbank . mongodb . bson . IDENT_5 adapter = new com . allanbank . mongodb . bson . METHOD_23 ( ) { @ com . allanbank . mongodb . bson . Override public void METHOD_24 ( final java . lang . String name ) { super . METHOD_24 ( name ) ; IDENT_4 . add ( name ) ; } } ; doc . accept ( adapter ) ; "<AssertPlaceHolder>" ; } accept ( com . allanbank . mongodb . bson . IDENT_6 ) { IDENT_7 . METHOD_25 ( getName ( ) , METHOD_26 ( ) ) ; }
org . junit . Assert . assertThat ( IDENT_4 , org . hamcrest . Matchers . is ( expected ) ) 