METHOD_0 ( ) { IDENT_0 = mock ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . class ) ; IDENT_6 = mock ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_7 . class ) ; IDENT_8 = mock ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_9 . class ) ; when ( IDENT_8 . METHOD_1 ( ) ) . thenReturn ( 0 ) ; when ( IDENT_8 . METHOD_2 ( ) ) . thenReturn ( true ) ; java . util . List < java . lang . String > IDENT_10 = new java . util . ArrayList ( ) ; IDENT_10 . add ( STRING_0 ) ; IDENT_10 . add ( STRING_1 ) ; when ( IDENT_6 . METHOD_3 ( ) ) . thenReturn ( IDENT_10 ) ; when ( IDENT_6 . METHOD_4 ( ) ) . thenReturn ( IDENT_8 ) ; when ( IDENT_0 . METHOD_5 ( ) ) . thenReturn ( IDENT_6 ) ; METHOD_6 ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . class ) . METHOD_7 ( ) . thenReturn ( IDENT_0 ) ; IDENT_11 = new com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_8 ( ) ; boolean IDENT_12 = IDENT_11 . METHOD_9 ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_13 . IDENT_14 ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( java . lang . String ) { java . lang . String IDENT_15 = com . IDENT_1 . IDENT_3 . IDENT_16 . IDENT_17 . get ( STRING_2 1 ) ; java . lang . String IDENT_18 = com . IDENT_1 . IDENT_3 . IDENT_16 . IDENT_17 . get ( STRING_2 2 ) ; com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 IDENT_4 = com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_19 . create ( ) . METHOD_10 ( STRING_3 ) . METHOD_11 ( STRING_4 ) . METHOD_12 ( STRING_2 0 , STRING_2 0 , STRING_5 , IDENT_18 , IDENT_15 , STRING_6 , IDENT_20 ) . METHOD_13 ( ) . build ( ) ; com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_7 IDENT_21 = IDENT_4 . METHOD_5 ( ) ; com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_9 IDENT_22 = IDENT_21 . METHOD_4 ( ) ; try { IDENT_22 . METHOD_14 ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_8 . IDENT_23 ) ; } catch ( java . lang . IDENT_24 exception ) { throw new com . IDENT_1 . IDENT_2 . IDENT_3 . exceptions . METHOD_15 ( ( ( STRING_7 + IDENT_20 ) + STRING_2 ) ) ; } if ( ( IDENT_22 . METHOD_1 ( ) ) == 0 ) { java . util . List < java . lang . String > IDENT_25 = METHOD_16 ( IDENT_21 . METHOD_3 ( ) ) ; for ( java . lang . String group : IDENT_25 ) { if ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_8 . IDENT_26 . equals ( group ) ) { return true ; } } com . IDENT_1 . IDENT_2 . commons . IDENT_27 . METHOD_17 ( ) . METHOD_18 ( ( ( ( ( ( STRING_8 + IDENT_20 ) + STRING_9 ) + ( java . lang . String . join ( STRING_10 , IDENT_25 ) ) ) + STRING_11 ) + ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_8 . IDENT_26 ) ) ) ; } return false ; }
org . junit . Assert . assertThat ( IDENT_12 , org . hamcrest . CoreMatchers . equalTo ( true ) ) 