METHOD_0 ( ) { de . IDENT_0 . IDENT_1 . IDENT_2 . graph . Configuration config = new de . IDENT_0 . IDENT_1 . IDENT_2 . graph . METHOD_1 ( STRING_0 ) ; de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 < de . IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_5 , de . IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_6 > IDENT_7 = de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_8 . METHOD_2 ( config ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . apache . commons . configuration . Configuration ) { de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 . IDENT_10 IDENT_11 = de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 . IDENT_12 . METHOD_3 ( config ) ; de . IDENT_0 . IDENT_1 . IDENT_2 . graph . IDENT_13 IDENT_14 = de . IDENT_0 . IDENT_1 . IDENT_2 . graph . IDENT_13 . METHOD_4 ( config ) ; de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 < T , IDENT_15 > IDENT_7 ; java . lang . String IDENT_16 = config . getString ( de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_8 . IDENT_17 ) ; try { @ de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_5 ( STRING_1 ) java . lang . Class < ? extends de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 > IDENT_18 = java . lang . Class . METHOD_6 ( IDENT_16 ) . METHOD_7 ( de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . class ) ; IDENT_7 = IDENT_18 . METHOD_8 ( de . IDENT_0 . IDENT_1 . IDENT_2 . graph . IDENT_13 . class , de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 . IDENT_10 . class ) . newInstance ( IDENT_14 , IDENT_11 ) ; } catch ( java . lang . IDENT_19 | java . lang . IDENT_20 | java . lang . IDENT_21 | java . lang . IDENT_22 | java . lang . IDENT_23 | java . lang . IllegalArgumentException | java . lang . reflect . IDENT_24 e ) { throw new java . lang . RuntimeException ( java . lang . String . format ( STRING_2 , IDENT_16 ) , e ) ; } de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_25 IDENT_26 = de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_25 . METHOD_4 ( config ) ; if ( IDENT_26 != null ) { double IDENT_27 = de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_25 . METHOD_9 ( config ) ; de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_8 . LOGGER . debug ( STRING_3 , IDENT_26 , IDENT_27 ) ; return new de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_10 ( IDENT_7 , IDENT_26 , IDENT_27 ) ; } else return IDENT_7 ; }
org . junit . Assert . assertNotNull ( IDENT_7 ) 