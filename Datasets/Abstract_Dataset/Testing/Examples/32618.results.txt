METHOD_0 ( ) { java . util . List < ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 > IDENT_4 = new java . util . ArrayList ( ) ; ch . IDENT_0 . IDENT_1 . math . IDENT_5 . IDENT_6 . classes . IDENT_7 IDENT_8 = ch . IDENT_0 . IDENT_1 . math . IDENT_5 . IDENT_6 . classes . IDENT_7 . getInstance ( IDENT_9 . IDENT_10 ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 , 5 ) ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 , 6 ) ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 , 9 ) ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 , 10 ) ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 , INT_0 ) ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 ) ) ; IDENT_8 = ch . IDENT_0 . IDENT_1 . math . IDENT_5 . IDENT_6 . classes . IDENT_7 . getInstance ( IDENT_9 . IDENT_11 ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 , 7 ) ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 , INT_1 ) ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 , INT_2 ) ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 , INT_3 ) ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 ) ) ; IDENT_8 = ch . IDENT_0 . IDENT_1 . math . IDENT_5 . IDENT_6 . classes . IDENT_7 . getInstance ( IDENT_9 . IDENT_12 ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 , 4 ) ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 , 5 ) ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 , 6 ) ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 , INT_4 ) ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 , INT_5 ) ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 , INT_6 ) ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 ) ) ; IDENT_8 = ch . IDENT_0 . IDENT_1 . math . IDENT_5 . IDENT_6 . classes . IDENT_7 . getInstance ( IDENT_9 . IDENT_13 ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 , 8 ) ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 ) ) ; IDENT_8 = ch . IDENT_0 . IDENT_1 . math . IDENT_5 . IDENT_6 . classes . IDENT_7 . getInstance ( IDENT_9 . IDENT_14 ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 , 8 ) ) ; IDENT_4 . add ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 . getInstance ( IDENT_8 ) ) ; for ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_2 . classes . IDENT_3 IDENT_2 : IDENT_4 ) { for ( ch . IDENT_0 . IDENT_1 . math . IDENT_5 . IDENT_15 . classes . IDENT_16 element : IDENT_2 . METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( 100 ) ) { ch . IDENT_0 . IDENT_1 . math . IDENT_5 . IDENT_6 . classes . IDENT_17 IDENT_18 = IDENT_2 . encode ( element ) ; ch . IDENT_0 . IDENT_1 . math . IDENT_5 . IDENT_15 . classes . IDENT_16 IDENT_19 = IDENT_2 . decode ( IDENT_18 ) ; "<AssertPlaceHolder>" ; } } } decode ( ch . IDENT_0 . IDENT_1 . math . IDENT_5 . IDENT_20 . interfaces . Element ) { return ( ( IDENT_21 ) ( this . METHOD_4 ( ) . apply ( element ) ) ) ; }
org . junit . Assert . assertEquals ( element , IDENT_19 ) 