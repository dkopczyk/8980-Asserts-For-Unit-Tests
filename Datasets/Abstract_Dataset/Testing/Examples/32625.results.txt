METHOD_0 ( ) { final ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . IDENT_4 IDENT_5 = ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_6 . classes . IDENT_7 . getInstance ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_8 . IDENT_9 . IDENT_10 , ch . IDENT_0 . IDENT_1 . crypto . IDENT_8 . IDENT_9 . IDENT_11 ) ; final ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_12 . classes . IDENT_13 IDENT_14 = ( ( ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_12 . classes . IDENT_13 ) ( IDENT_5 . METHOD_1 ( ) ) ) ; final ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . IDENT_4 IDENT_15 = ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_6 . classes . IDENT_16 . getInstance ( ch . IDENT_0 . IDENT_1 . crypto . IDENT_8 . IDENT_9 . IDENT_11 ) ; final ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_12 . classes . IDENT_13 IDENT_17 = ( ( ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_12 . classes . IDENT_13 ) ( IDENT_15 . METHOD_1 ( ) ) ) ; final ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . Element g = IDENT_5 . METHOD_2 ( java . math . BigInteger . valueOf ( INT_0 ) ) ; final ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . Element IDENT_18 = IDENT_5 . METHOD_2 ( java . math . BigInteger . valueOf ( INT_1 ) ) ; final ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . Element IDENT_19 = IDENT_15 . METHOD_2 ( java . math . BigInteger . valueOf ( INT_2 ) ) ; final ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . Element IDENT_20 = IDENT_15 . METHOD_2 ( java . math . BigInteger . valueOf ( INT_3 ) ) ; final ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . Element IDENT_21 = IDENT_15 . METHOD_2 ( java . math . BigInteger . valueOf ( INT_4 ) ) ; ch . IDENT_0 . IDENT_1 . crypto . IDENT_22 . IDENT_23 . classes . IDENT_24 IDENT_25 = ch . IDENT_0 . IDENT_1 . crypto . IDENT_22 . IDENT_23 . classes . IDENT_24 . getInstance ( g , IDENT_18 ) ; ch . IDENT_0 . IDENT_1 . crypto . IDENT_22 . IDENT_23 . classes . IDENT_26 IDENT_27 = ch . IDENT_0 . IDENT_1 . crypto . IDENT_22 . IDENT_23 . classes . IDENT_26 . getInstance ( IDENT_19 , ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . classes . IDENT_28 . getInstance ( IDENT_20 , IDENT_21 ) ) ; ch . IDENT_0 . IDENT_1 . crypto . IDENT_8 . classes . IDENT_29 IDENT_30 = ch . IDENT_0 . IDENT_1 . crypto . IDENT_8 . classes . IDENT_29 . getInstance ( IDENT_25 , IDENT_27 , 3 ) ; ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . Element IDENT_31 = IDENT_17 . METHOD_2 ( 7 ) ; ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . Element IDENT_32 = IDENT_17 . METHOD_2 ( INT_5 ) ; ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . Element x = IDENT_14 . METHOD_2 ( IDENT_20 . METHOD_3 ( IDENT_31 ) . apply ( IDENT_21 . METHOD_3 ( IDENT_32 ) ) . METHOD_4 ( ) ) ; ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . Element r = IDENT_14 . METHOD_2 ( java . math . BigInteger . valueOf ( INT_6 ) ) ; ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . Element s = IDENT_17 . METHOD_2 ( java . math . BigInteger . valueOf ( INT_7 ) ) ; ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . classes . IDENT_28 IDENT_33 = ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . classes . IDENT_28 . getInstance ( x , r , s , ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . classes . IDENT_28 . getInstance ( IDENT_31 , IDENT_32 ) ) ; ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . Element IDENT_34 = IDENT_25 . commit ( x , r ) ; ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . Element IDENT_35 = IDENT_27 . commit ( ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . classes . IDENT_28 . getInstance ( IDENT_31 , IDENT_32 ) , s ) ; ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . classes . IDENT_36 IDENT_37 = ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . classes . IDENT_36 . getInstance ( IDENT_34 , IDENT_35 ) ; ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . classes . IDENT_38 IDENT_39 = IDENT_30 . METHOD_5 ( IDENT_33 , IDENT_37 ) ; boolean verify = IDENT_30 . verify ( IDENT_39 , IDENT_37 ) ; "<AssertPlaceHolder>" ; } verify ( ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . Element , ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . interfaces . Element ) { if ( ( ! ( this . METHOD_6 ( ) . contains ( IDENT_39 ) ) ) || ( ! ( this . METHOD_7 ( ) . contains ( IDENT_37 ) ) ) ) { throw new java . lang . IllegalArgumentException ( ) ; } return this . METHOD_8 ( ( ( IDENT_40 ) ( IDENT_39 ) ) , ( ( IDENT_41 ) ( IDENT_37 ) ) ) ; }
org . junit . Assert . assertTrue ( verify ) 