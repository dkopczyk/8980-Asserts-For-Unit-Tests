METHOD_0 ( ) { for ( int i = 1 ; i < 5 ; i ++ ) { for ( int j = 0 ; j < 5 ; j ++ ) { ch . IDENT_0 . IDENT_1 . helper . converter . classes . IDENT_2 . IDENT_3 converter = ch . IDENT_0 . IDENT_1 . helper . converter . classes . IDENT_2 . IDENT_3 . getInstance ( i , j ) ; for ( int k = 0 ; k < INT_0 ; k ++ ) { java . math . BigInteger value = java . math . BigInteger . valueOf ( k ) ; "<AssertPlaceHolder>" ; } try { converter . METHOD_1 ( java . math . BigInteger . valueOf ( ( - 1 ) ) ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . Exception e ) { } } } } convert ( long ) { return this . convert ( java . math . BigInteger . valueOf ( value ) ) ; }
org . junit . Assert . assertEquals ( value , converter . convert ( converter . METHOD_1 ( value ) ) ) 