METHOD_0 ( ) { ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . classes . IDENT_4 IDENT_5 = ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . classes . IDENT_4 . getInstance ( 2 ) ; for ( java . math . BigInteger i = java . math . BigInteger . valueOf ( 0 ) ; ( i . compareTo ( java . math . BigInteger . valueOf ( INT_0 ) ) ) <= 0 ; i = i . add ( IDENT_6 . IDENT_7 ) ) { ch . IDENT_0 . IDENT_1 . math . IDENT_2 . IDENT_3 . classes . IDENT_8 element ; try { element = IDENT_5 . METHOD_1 ( i ) ; "<AssertPlaceHolder>" ; } catch ( ch . IDENT_0 . IDENT_1 . IDENT_9 ex ) { org . junit . Assert . fail ( ) ; } } } METHOD_2 ( ) { return this . METHOD_3 ( ) ; }
org . junit . Assert . assertEquals ( i , element . METHOD_2 ( ) ) 