METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 engine = new com . IDENT_0 . IDENT_1 . IDENT_2 . Builder ( ) . build ( ) ; com . IDENT_0 . IDENT_1 . template . IDENT_3 IDENT_4 = engine . METHOD_1 ( STRING_0 ) ; java . util . Map < java . lang . String , java . lang . Object > context = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; context . put ( STRING_1 , STRING_2 ) ; context . put ( STRING_3 , STRING_4 ) ; java . io . IDENT_5 writer = new java . io . StringWriter ( ) ; IDENT_4 . evaluate ( writer , context ) ; java . lang . String output = writer . toString ( ) ; System . out . println ( output ) ; io . github . IDENT_6 . IDENT_7 . IDENT_8 . subject ( STRING_5 ) . from ( "" ) . to ( io . github . IDENT_6 . IDENT_7 . IDENT_9 . IDENT_10 ) . html ( output ) . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { if ( ( ( text ) == null ) && ( ( html ) == null ) ) { throw new java . lang . IllegalArgumentException ( STRING_6 ) ; } io . github . IDENT_6 . IDENT_7 . IDENT_11 IDENT_12 ; boolean IDENT_13 = false ; boolean IDENT_14 = ( IDENT_15 . size ( ) ) > 0 ; try { if ( ( ( text ) != null ) && ( ( html ) == null ) ) { IDENT_12 = new io . github . IDENT_6 . IDENT_7 . METHOD_3 ( STRING_7 ) ; IDENT_12 . METHOD_4 ( METHOD_5 ( ) ) ; } else if ( ( ( text ) == null ) && ( ( html ) != null ) ) { IDENT_12 = new io . github . IDENT_6 . IDENT_7 . METHOD_3 ( STRING_7 ) ; IDENT_12 . METHOD_4 ( METHOD_6 ( ) ) ; } else { IDENT_12 = new io . github . IDENT_6 . IDENT_7 . METHOD_3 ( STRING_8 ) ; IDENT_12 . METHOD_4 ( METHOD_5 ( ) ) ; IDENT_12 . METHOD_4 ( METHOD_6 ( ) ) ; IDENT_13 = true ; } io . github . IDENT_6 . IDENT_7 . METHOD_3 content = IDENT_12 ; if ( IDENT_13 && IDENT_14 ) { content = new io . github . IDENT_6 . IDENT_7 . METHOD_3 ( STRING_7 ) ; content . METHOD_4 ( METHOD_7 ( IDENT_12 ) ) ; } for ( io . github . IDENT_6 . IDENT_7 . IDENT_16 IDENT_17 : IDENT_15 ) { content . METHOD_4 ( IDENT_17 ) ; } msg . METHOD_8 ( content ) ; msg . METHOD_9 ( new io . github . IDENT_6 . IDENT_7 . Date ( ) ) ; io . github . IDENT_6 . IDENT_7 . IDENT_18 . METHOD_2 ( msg ) ; } catch ( java . lang . Exception e ) { throw new io . github . IDENT_6 . IDENT_7 . METHOD_10 ( e ) ; } }
org . junit . Assert . assertTrue ( true ) 