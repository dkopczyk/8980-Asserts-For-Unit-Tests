METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . util . List < org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 > IDENT_6 = METHOD_1 ( IDENT_0 ) ; try { IDENT_7 : for ( org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 IDENT_8 : IDENT_6 ) { java . util . Set < org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_9 > IDENT_10 = IDENT_8 . METHOD_2 ( ) ; for ( org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_9 g : IDENT_10 ) { if ( ! ( g . METHOD_3 ( ) . equals ( STRING_1 ) ) ) continue IDENT_7 ; } org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_11 IDENT_12 = IDENT_8 . METHOD_4 ( ) . METHOD_5 ( ) ; if ( ! ( IDENT_12 . equals ( IDENT_11 . IDENT_13 ) ) ) { org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_14 . logger . info ( org . IDENT_1 . IDENT_2 . IDENT_3 . io . IDENT_15 . METHOD_6 ( IDENT_8 ) ) ; org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_14 . logger . info ( IDENT_12 . toString ( ) ) ; org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_14 . logger . info ( IDENT_8 . toString ( ) ) ; } "<AssertPlaceHolder>" ; } } catch ( java . lang . Exception e ) { org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_14 . logger . error ( STRING_2 , e ) ; org . junit . Assert . fail ( e . getMessage ( ) ) ; } } toString ( ) { return ( ( ( STRING_3 + ( id ) ) + STRING_4 ) + ( type ) ) + "]" ; }
org . junit . Assert . assertEquals ( IDENT_11 . IDENT_13 , IDENT_12 ) 