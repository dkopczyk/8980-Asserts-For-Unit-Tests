METHOD_0 ( ) { java . util . ArrayList < org . IDENT_0 . IDENT_1 . dto . IDENT_2 . IDENT_3 > IDENT_4 = new java . util . ArrayList ( ) ; java . util . ArrayList < org . IDENT_0 . IDENT_1 . dto . IDENT_2 . IDENT_3 > IDENT_5 = new java . util . ArrayList ( ) ; org . IDENT_0 . IDENT_1 . dto . IDENT_2 . IDENT_3 IDENT_6 = new org . IDENT_0 . IDENT_1 . dto . IDENT_2 . METHOD_1 ( IDENT_7 . IDENT_8 . IDENT_9 , new java . math . BigDecimal ( FLOAT_0 ) , org . IDENT_0 . IDENT_1 . IDENT_10 . IDENT_11 . IDENT_12 , "1" , new java . util . Date ( ) , new java . math . BigDecimal ( FLOAT_0 ) ) ; IDENT_4 . add ( IDENT_6 ) ; org . IDENT_0 . IDENT_1 . dto . IDENT_2 . METHOD_1 IDENT_13 = new org . IDENT_0 . IDENT_1 . dto . IDENT_2 . METHOD_1 ( IDENT_7 . IDENT_8 . IDENT_14 , new java . math . BigDecimal ( FLOAT_1 ) , org . IDENT_0 . IDENT_1 . IDENT_10 . IDENT_11 . IDENT_12 , "2" , new java . util . Date ( ) , new java . math . BigDecimal ( FLOAT_1 ) ) ; IDENT_5 . add ( IDENT_13 ) ; org . IDENT_0 . IDENT_1 . dto . IDENT_15 . IDENT_16 IDENT_17 = new org . IDENT_0 . IDENT_1 . dto . IDENT_15 . METHOD_2 ( new java . util . Date ( ) , IDENT_4 , IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . IDENT_0 . IDENT_1 . dto . IDENT_15 . METHOD_2 ) { java . util . List < org . IDENT_0 . IDENT_1 . dto . IDENT_2 . METHOD_1 > IDENT_4 = IDENT_17 . METHOD_4 ( IDENT_7 . IDENT_8 . IDENT_9 ) ; if ( ! ( java . util . IDENT_18 . equals ( IDENT_4 , IDENT_17 . METHOD_5 ( ) ) ) ) return STRING_0 ; java . util . List < org . IDENT_0 . IDENT_1 . dto . IDENT_2 . METHOD_1 > IDENT_5 = IDENT_17 . METHOD_4 ( IDENT_7 . IDENT_8 . IDENT_14 ) ; if ( ! ( java . util . IDENT_18 . equals ( IDENT_5 , IDENT_17 . METHOD_6 ( ) ) ) ) return STRING_1 ; org . IDENT_0 . IDENT_1 . dto . IDENT_2 . METHOD_1 IDENT_19 = null ; if ( ! ( IDENT_4 . isEmpty ( ) ) ) { IDENT_19 = IDENT_4 . get ( 0 ) ; java . lang . String IDENT_20 = info . IDENT_21 . IDENT_22 . util . IDENT_23 . METHOD_3 ( IDENT_4 . iterator ( ) ) ; if ( IDENT_20 != null ) return IDENT_20 ; } org . IDENT_0 . IDENT_1 . dto . IDENT_2 . METHOD_1 IDENT_24 = null ; if ( ! ( IDENT_5 . isEmpty ( ) ) ) { IDENT_24 = IDENT_5 . get ( 0 ) ; java . lang . String IDENT_25 = info . IDENT_21 . IDENT_22 . util . IDENT_23 . METHOD_3 ( info . IDENT_21 . IDENT_22 . util . IDENT_26 . METHOD_7 ( IDENT_5 ) . iterator ( ) ) ; if ( IDENT_25 != null ) return IDENT_25 ; } if ( ( ( IDENT_19 != null ) && ( IDENT_24 != null ) ) && ( ( IDENT_19 . METHOD_8 ( ) . compareTo ( IDENT_24 . METHOD_8 ( ) ) ) <= 0 ) ) return java . lang . String . format ( STRING_2 , IDENT_19 , IDENT_24 ) ; return null ; }
org . junit . Assert . assertEquals ( java . lang . String . format ( STRING_2 , IDENT_6 , IDENT_13 ) , info . IDENT_21 . IDENT_22 . util . IDENT_23 . METHOD_3 ( IDENT_17 ) ) 