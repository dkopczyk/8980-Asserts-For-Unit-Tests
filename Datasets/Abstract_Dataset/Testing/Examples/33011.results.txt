METHOD_0 ( ) { java . util . ArrayList < org . IDENT_0 . IDENT_1 . dto . IDENT_2 . IDENT_3 > IDENT_4 = new java . util . ArrayList ( ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( org . IDENT_0 . IDENT_1 . dto . IDENT_5 . IDENT_6 ) { java . util . List < org . IDENT_0 . IDENT_1 . dto . IDENT_2 . IDENT_3 > IDENT_7 = IDENT_8 . METHOD_2 ( IDENT_9 . IDENT_10 . IDENT_11 ) ; if ( ! ( java . util . IDENT_12 . equals ( IDENT_7 , IDENT_8 . METHOD_3 ( ) ) ) ) return STRING_0 ; java . util . List < org . IDENT_0 . IDENT_1 . dto . IDENT_2 . IDENT_3 > IDENT_13 = IDENT_8 . METHOD_2 ( IDENT_9 . IDENT_10 . IDENT_14 ) ; if ( ! ( java . util . IDENT_12 . equals ( IDENT_13 , IDENT_8 . METHOD_4 ( ) ) ) ) return STRING_1 ; org . IDENT_0 . IDENT_1 . dto . IDENT_2 . IDENT_3 IDENT_15 = null ; if ( ! ( IDENT_7 . isEmpty ( ) ) ) { IDENT_15 = IDENT_7 . get ( 0 ) ; java . lang . String IDENT_16 = info . IDENT_17 . IDENT_18 . util . IDENT_19 . METHOD_1 ( IDENT_7 . iterator ( ) ) ; if ( IDENT_16 != null ) return IDENT_16 ; } org . IDENT_0 . IDENT_1 . dto . IDENT_2 . IDENT_3 IDENT_20 = null ; if ( ! ( IDENT_13 . isEmpty ( ) ) ) { IDENT_20 = IDENT_13 . get ( 0 ) ; java . lang . String IDENT_21 = info . IDENT_17 . IDENT_18 . util . IDENT_19 . METHOD_1 ( info . IDENT_17 . IDENT_18 . util . IDENT_22 . METHOD_5 ( IDENT_13 ) . iterator ( ) ) ; if ( IDENT_21 != null ) return IDENT_21 ; } if ( ( ( IDENT_15 != null ) && ( IDENT_20 != null ) ) && ( ( IDENT_15 . METHOD_6 ( ) . compareTo ( IDENT_20 . METHOD_6 ( ) ) ) <= 0 ) ) return java . lang . String . format ( STRING_2 , IDENT_15 , IDENT_20 ) ; return null ; }
org . junit . Assert . assertNull ( info . IDENT_17 . IDENT_18 . util . IDENT_19 . METHOD_1 ( IDENT_4 . iterator ( ) ) ) 