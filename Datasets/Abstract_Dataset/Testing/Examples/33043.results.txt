METHOD_0 ( ) { java . lang . String [ ] [ ] tests = new java . lang . String [ ] [ ] { new java . lang . String [ ] { STRING_0 , "" } , new java . lang . String [ ] { STRING_1 , "" } , new java . lang . String [ ] { STRING_2 , STRING_3 } } ; for ( java . lang . String [ ] test : tests ) { IDENT_0 . IDENT_1 template = IDENT_0 . IDENT_1 . parse ( test [ 0 ] ) ; java . lang . String IDENT_2 = java . lang . String . valueOf ( template . render ( ) ) ; "<AssertPlaceHolder>" ; } } render ( ) { return render ( new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ) ; }
org . junit . Assert . assertThat ( IDENT_2 , org . hamcrest . CoreMatchers . is ( test [ 1 ] ) ) 