METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( IDENT_1 . IDENT_2 ) ) . thenReturn ( STRING_0 ) ; IDENT_3 . init ( ) ; java . lang . String IDENT_4 = IDENT_3 . encode ( de . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 ) ; "<AssertPlaceHolder>" ; } matches ( java . lang . IDENT_10 , java . lang . String ) { com . google . common . base . IDENT_11 IDENT_12 = new com . google . common . base . METHOD_2 ( ) . start ( ) ; boolean IDENT_13 = IDENT_14 . matches ( IDENT_15 , IDENT_16 ) ; if ( log . METHOD_3 ( ) ) { log . trace ( STRING_1 , IDENT_12 . METHOD_4 ( ) . METHOD_5 ( TimeUnit . IDENT_17 ) ) ; } return IDENT_13 ; }
org . junit . Assert . assertTrue ( IDENT_3 . matches ( de . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 , IDENT_4 ) ) 