METHOD_0 ( ) { when ( response . METHOD_1 ( ) ) . thenReturn ( IDENT_0 . UTF_8 . name ( ) ) ; de . IDENT_1 . IDENT_2 . web . filter . IDENT_3 IDENT_4 = new de . IDENT_1 . IDENT_2 . web . filter . METHOD_2 ( response ) ; IDENT_4 . METHOD_3 ( STRING_0 ) ; java . lang . String s = STRING_1 ; java . io . IDENT_5 out = null ; try { out = IDENT_4 . METHOD_4 ( ) ; out . write ( s ) ; } finally { de . IDENT_1 . IDENT_2 . util . IDENT_6 . METHOD_5 ( out ) ; } "<AssertPlaceHolder>" ; } METHOD_6 ( ) { if ( ( ( IDENT_7 ) != null ) && ( ! ( IDENT_7 . METHOD_7 ( ) ) ) ) { throw new java . lang . IllegalStateException ( STRING_2 ) ; } if ( ( writer ) != null ) { writer . METHOD_8 ( ) ; } if ( ( IDENT_8 ) != null ) { IDENT_8 . METHOD_8 ( ) ; } return buffer . toByteArray ( ) ; }
org . junit . Assert . assertTrue ( java . util . Arrays . equals ( s . getBytes ( IDENT_0 . UTF_8 ) , IDENT_4 . METHOD_6 ( ) ) ) 