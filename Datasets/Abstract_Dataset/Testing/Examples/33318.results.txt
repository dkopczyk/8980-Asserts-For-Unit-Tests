METHOD_0 ( ) { java . io . File f = IDENT_0 . METHOD_1 ( ) ; com . IDENT_1 . store . IDENT_2 . METHOD_2 ( f , STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . io . File ) { try { try ( java . io . IDENT_3 IDENT_4 = new java . io . METHOD_4 ( file ) ) { byte [ ] buffer = new byte [ ( ( int ) ( IDENT_4 . METHOD_5 ( ) . size ( ) ) ) ] ; int IDENT_5 = 0 ; int read ; while ( ( IDENT_5 < ( buffer . length ) ) && ( ( read = IDENT_4 . read ( buffer , IDENT_5 , ( ( buffer . length ) - IDENT_5 ) ) ) > 0 ) ) { IDENT_5 += read ; } return new java . lang . String ( buffer , com . IDENT_1 . IDENT_6 . IDENT_2 . UTF_8 ) ; } } catch ( java . io . IOException e ) { throw new com . IDENT_1 . IDENT_6 . ex . METHOD_6 ( STRING_1 , e , file . getAbsolutePath ( ) ) ; } }
org . junit . Assert . assertEquals ( STRING_0 , com . IDENT_1 . store . IDENT_2 . METHOD_3 ( f ) ) 