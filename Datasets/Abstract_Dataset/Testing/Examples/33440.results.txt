METHOD_0 ( ) { long max = IDENT_0 . METHOD_1 ( ) ; long IDENT_1 = ( java . lang . System . currentTimeMillis ( ) ) - max ; try ( com . IDENT_2 . store . IDENT_3 < com . IDENT_2 . model . IDENT_4 > IDENT_5 = METHOD_2 ( ) . writer ( com . IDENT_2 . model . IDENT_4 . class , STRING_0 ) ) { for ( com . IDENT_2 . model . IDENT_4 a : com . IDENT_2 . store . IDENT_6 . METHOD_3 ( q . METHOD_4 ( ) ) ) { a . METHOD_5 ( ( ( a . METHOD_6 ( ) ) + IDENT_1 ) ) ; IDENT_5 . append ( a ) ; } com . IDENT_2 . store . query . api . Query < com . IDENT_2 . model . IDENT_4 > q = IDENT_5 . query ( ) ; long IDENT_7 ; com . IDENT_2 . store . IDENT_8 IDENT_9 = new com . IDENT_2 . store . METHOD_7 ( com . IDENT_2 . IDENT_10 . time . IDENT_11 . METHOD_8 ( ( IDENT_7 = java . lang . System . currentTimeMillis ( ) ) , ( - 1 ) ) , IDENT_7 ) ; com . IDENT_2 . store . query . IDENT_12 < com . IDENT_2 . model . IDENT_4 > rs = q . METHOD_4 ( ) . query ( ) . METHOD_9 ( ) . METHOD_10 ( ) . METHOD_11 ( IDENT_9 ) . METHOD_12 ( ) ; "<AssertPlaceHolder>" ; } } size ( ) { return IDENT_13 . size ( ) ; }
org . junit . Assert . assertEquals ( 10 , rs . size ( ) ) 