METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new com . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; com . IDENT_0 . store . IDENT_4 IDENT_5 = new com . IDENT_0 . store . METHOD_2 ( IDENT_6 . METHOD_3 ( ) , 16 , IDENT_7 . IDENT_8 ) ; long [ ] IDENT_9 = new long [ 100 ] ; long pos = IDENT_5 . METHOD_4 ( ) ; for ( int i = 0 ; i < INT_0 ; i ++ ) { for ( int k = 0 ; k < ( IDENT_9 . length ) ; k ++ ) { IDENT_9 [ k ] = IDENT_3 . METHOD_5 ( ) ; } IDENT_5 . put ( IDENT_9 ) ; } IDENT_3 . METHOD_6 ( ) ; IDENT_5 . METHOD_7 ( pos ) ; for ( int i = 0 ; i < INT_0 ; i ++ ) { IDENT_5 . get ( IDENT_9 ) ; for ( int k = 0 ; k < ( IDENT_9 . length ) ; k ++ ) { "<AssertPlaceHolder>" ; } } } METHOD_5 ( ) { long IDENT_10 = IDENT_11 ; long IDENT_12 = IDENT_13 ; IDENT_11 = IDENT_12 ; IDENT_10 OP_0 IDENT_10 << INT_1 ; return ( IDENT_13 = ( ( IDENT_10 OP_1 IDENT_12 ) OP_1 ( IDENT_10 > > INT_2 ) ) OP_1 ( IDENT_12 > > INT_3 ) ) + IDENT_12 ; }
org . junit . Assert . assertEquals ( IDENT_3 . METHOD_5 ( ) , IDENT_9 [ k ] ) 