METHOD_0 ( ) { final com . allanbank . mongodb . client . IDENT_0 < java . lang . Object > IDENT_1 = new com . allanbank . mongodb . client . IDENT_0 < java . lang . Object > ( com . allanbank . mongodb . IDENT_2 . IDENT_3 ) ; final java . lang . Object result = new java . lang . Object ( ) ; final java . lang . Thread t = new java . lang . Thread ( new java . lang . METHOD_1 ( ) { @ com . allanbank . mongodb . client . Override public void run ( ) { try { java . lang . Thread . sleep ( 50 ) ; } catch ( final java . lang . IDENT_4 e ) { } finally { IDENT_1 . METHOD_2 ( result ) ; } } } ) ; t . start ( ) ; try { "<AssertPlaceHolder>" ; } catch ( final java . lang . IDENT_4 e ) { final java . lang . IDENT_5 error = new java . lang . METHOD_3 ( STRING_0 ) ; error . METHOD_4 ( e ) ; throw error ; } catch ( final java . util . concurrent . IDENT_6 e ) { final java . lang . METHOD_3 error = new java . lang . METHOD_3 ( STRING_1 ) ; error . METHOD_4 ( e ) ; throw error ; } } start ( ) { final java . lang . Thread t = new java . lang . Thread ( this , STRING_2 ) ; t . start ( ) ; }
org . junit . Assert . assertSame ( result , METHOD_2 . get ( ) ) 