METHOD_0 ( ) { cc . IDENT_0 . server . db . model . IDENT_1 [ ] list = new cc . IDENT_0 . server . db . model . IDENT_1 [ 1 ] ; java . lang . String token = java . util . UUID . METHOD_1 ( ) . toString ( ) . replace ( STRING_0 , "" ) ; cc . IDENT_0 . server . db . model . IDENT_1 IDENT_2 = new cc . IDENT_0 . server . db . model . METHOD_2 ( STRING_1 , token , STRING_2 , 1 , 0 ) ; list [ 0 ] = IDENT_2 ; cc . IDENT_0 . server . db . IDENT_3 . IDENT_4 . METHOD_3 ( list ) ; cc . IDENT_0 . server . db . model . METHOD_2 IDENT_5 = cc . IDENT_0 . server . db . IDENT_3 . IDENT_4 . METHOD_4 ( token ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String ) { cc . IDENT_0 . server . db . dao . IDENT_6 . log . info ( STRING_3 , token ) ; try ( java . sql . IDENT_7 connection = IDENT_8 . METHOD_5 ( ) ; java . sql . IDENT_9 statement = connection . METHOD_6 ( cc . IDENT_0 . server . db . dao . IDENT_6 . IDENT_10 ) ) { statement . METHOD_7 ( 1 , token ) ; try ( java . sql . ResultSet rs = statement . METHOD_8 ( ) ) { connection . commit ( ) ; if ( rs . next ( ) ) { return new cc . IDENT_0 . server . db . model . METHOD_2 ( rs . getString ( STRING_4 ) , rs . getString ( STRING_5 ) , rs . getString ( STRING_6 ) , rs . METHOD_9 ( STRING_7 ) , rs . METHOD_9 ( STRING_8 ) , rs . METHOD_10 ( STRING_9 ) , rs . METHOD_11 ( STRING_10 ) ) ; } } } catch ( java . lang . Exception e ) { cc . IDENT_0 . server . db . dao . IDENT_6 . log . error ( STRING_11 , e ) ; } return null ; }
org . junit . Assert . assertEquals ( IDENT_2 , IDENT_5 ) 