METHOD_0 ( ) { final java . util . List < com . github . IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_3 > IDENT_4 = test . utils . TestUtils . METHOD_1 ( STRING_0 ) ; when ( filter . METHOD_2 ( any ( com . github . IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_5 . class ) ) ) . thenReturn ( true ) ; com . github . IDENT_0 . core . IDENT_1 . filters . IDENT_6 . METHOD_2 ( IDENT_4 ) . METHOD_3 ( asList ( filter ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . util . List ) { final java . util . Iterator < com . github . IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_3 > it = IDENT_4 . iterator ( ) ; while ( it . hasNext ( ) ) { final com . github . IDENT_0 . core . IDENT_1 . IDENT_2 . IDENT_3 feature = it . next ( ) ; for ( final com . github . IDENT_0 . core . IDENT_1 . filters . IDENT_7 filter : filters ) { if ( filter . METHOD_2 ( feature ) ) { it . remove ( ) ; break ; } } } return IDENT_4 ; }
org . junit . Assert . assertThat ( IDENT_4 . isEmpty ( ) , org . hamcrest . CoreMatchers . is ( true ) ) 