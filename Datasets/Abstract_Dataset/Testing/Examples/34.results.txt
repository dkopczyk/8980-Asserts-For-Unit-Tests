METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 . query . IDENT_3 IDENT_4 = new org . IDENT_0 . IDENT_1 . IDENT_2 . query . METHOD_1 ( STRING_0 ) ; IDENT_4 . METHOD_2 ( new org . IDENT_0 . IDENT_1 . IDENT_2 . query . METHOD_3 ( STRING_1 ) ) ; this . IDENT_5 . METHOD_4 ( ) . add ( IDENT_4 ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . query . METHOD_1 IDENT_6 = new org . IDENT_0 . IDENT_1 . IDENT_2 . query . METHOD_1 ( STRING_0 ) ; IDENT_6 . METHOD_2 ( new org . IDENT_0 . IDENT_1 . IDENT_2 . query . METHOD_3 ( STRING_2 ) ) ; IDENT_5 . METHOD_4 ( ) . add ( IDENT_6 ) ; java . util . Set < org . IDENT_0 . IDENT_1 . model . IDENT_7 > IDENT_8 = IDENT_9 . METHOD_5 ( IDENT_2 , filter ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( org . IDENT_0 . IDENT_1 . model . IDENT_10 , org . IDENT_0 . IDENT_1 . IDENT_2 . query . IDENT_11 ) { try { org . IDENT_0 . IDENT_1 . dao . query . hibernate . IDENT_12 IDENT_13 = new org . IDENT_0 . IDENT_1 . dao . query . hibernate . METHOD_6 ( ) ; try { if ( collection instanceof org . IDENT_0 . IDENT_1 . model . hibernate . IDENT_14 ) { java . util . Set < org . IDENT_0 . IDENT_1 . model . IDENT_7 > results = new java . util . HashSet < org . IDENT_0 . IDENT_1 . model . IDENT_7 > ( ) ; java . util . Set < org . IDENT_0 . IDENT_1 . model . IDENT_15 > IDENT_16 = collection . METHOD_7 ( ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . query . IDENT_17 IDENT_18 = new org . IDENT_0 . IDENT_1 . IDENT_2 . query . METHOD_8 ( ) ; for ( org . IDENT_0 . IDENT_1 . model . IDENT_15 child : IDENT_16 ) { if ( child instanceof org . IDENT_0 . IDENT_1 . model . IDENT_7 ) { org . IDENT_0 . IDENT_1 . model . IDENT_7 content = ( ( org . IDENT_0 . IDENT_1 . model . IDENT_7 ) ( child ) ) ; net . IDENT_19 . IDENT_20 . model . Calendar IDENT_2 = IDENT_21 . METHOD_9 ( content ) ; if ( ( IDENT_2 != null ) && ( IDENT_18 . evaluate ( IDENT_2 , filter ) ) ) { results . add ( content ) ; } } } return results ; } catch ( org . hibernate . IDENT_22 e ) { this . em . METHOD_10 ( ) ; throw org . springframework . IDENT_23 . IDENT_24 . IDENT_25 . METHOD_11 ( e ) ; } }
org . junit . Assert . assertEquals ( 3 , IDENT_8 . size ( ) ) 