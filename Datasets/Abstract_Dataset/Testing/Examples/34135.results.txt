METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = IDENT_1 . METHOD_1 ( ) ; java . util . Set < java . lang . String > IDENT_5 = new java . util . HashSet < java . lang . String > ( ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 > IDENT_2 = IDENT_4 . METHOD_2 ( IDENT_5 , 0 , 0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . util . Set , int , int ) { java . util . Map < java . lang . String , java . lang . Object > parameters = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; parameters . put ( STRING_0 , com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_8 ) ; if ( ( IDENT_5 != null ) && ( ! ( IDENT_5 . isEmpty ( ) ) ) ) { parameters . put ( IDENT_9 . IDENT_10 , com . IDENT_0 . IDENT_1 . util . IDENT_11 . join ( IDENT_5 , STRING_1 ) ) ; } if ( IDENT_12 > 0 ) { parameters . put ( STRING_2 , java . lang . Integer . toString ( IDENT_12 ) ) ; } if ( page > 0 ) { parameters . put ( STRING_3 , java . lang . Integer . toString ( page ) ) ; } com . IDENT_0 . IDENT_1 . Response response = transport . get ( transport . getPath ( ) , parameters , IDENT_13 , IDENT_14 ) ; if ( response . METHOD_3 ( ) ) { throw new com . IDENT_0 . IDENT_1 . METHOD_4 ( response . METHOD_5 ( ) , response . METHOD_6 ( ) ) ; } org . w3c . dom . Element IDENT_15 = response . METHOD_7 ( ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 < com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 > IDENT_2 = com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_16 . METHOD_8 ( IDENT_15 ) ; return IDENT_2 ; }
org . junit . Assert . assertNotNull ( IDENT_2 ) 