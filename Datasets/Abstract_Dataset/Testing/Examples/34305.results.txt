METHOD_0 ( ) { final org . bonitasoft . engine . IDENT_0 . model . IDENT_1 IDENT_2 = METHOD_1 ( STRING_0 , STRING_1 , STRING_2 4 ) ; final org . bonitasoft . engine . IDENT_0 . model . IDENT_1 IDENT_3 = METHOD_1 ( STRING_2 , STRING_2 1 , STRING_2 3 , IDENT_2 . getId ( ) ) ; final org . bonitasoft . engine . IDENT_0 . model . IDENT_1 IDENT_4 = METHOD_1 ( STRING_3 , STRING_4 , STRING_5 , IDENT_3 . getId ( ) ) ; final org . bonitasoft . engine . IDENT_0 . model . IDENT_1 IDENT_5 = METHOD_1 ( STRING_6 , STRING_7 , STRING_8 ) ; final org . bonitasoft . engine . core . process . IDENT_6 . model . IDENT_7 IDENT_8 = METHOD_2 ( STRING_2 0 , STRING_9 , STRING_2 2 , true , java . util . Arrays . asList ( IDENT_3 , IDENT_4 , IDENT_5 ) ) ; METHOD_3 ( ) . METHOD_4 ( ) ; final org . bonitasoft . engine . persistence . IDENT_9 IDENT_10 = new org . bonitasoft . engine . persistence . METHOD_5 ( org . bonitasoft . engine . IDENT_0 . model . IDENT_1 . class , org . bonitasoft . engine . IDENT_0 . IDENT_11 . IDENT_12 , IDENT_2 . getId ( ) ) ; final org . bonitasoft . engine . persistence . IDENT_13 IDENT_14 = new org . bonitasoft . engine . persistence . METHOD_6 ( org . bonitasoft . engine . IDENT_0 . model . IDENT_1 . class , org . bonitasoft . engine . IDENT_0 . IDENT_11 . IDENT_15 , org . bonitasoft . engine . persistence . IDENT_16 . IDENT_17 ) ; final org . bonitasoft . engine . persistence . IDENT_18 IDENT_19 = new org . bonitasoft . engine . persistence . METHOD_7 ( 0 , 5 , java . util . Arrays . asList ( IDENT_14 ) , java . util . Arrays . asList ( IDENT_10 ) , null ) ; final java . util . List < org . bonitasoft . engine . IDENT_0 . model . IDENT_1 > result = IDENT_20 . METHOD_8 ( IDENT_8 . getId ( ) , IDENT_19 ) ; METHOD_3 ( ) . METHOD_9 ( ) ; "<AssertPlaceHolder>" ; METHOD_10 ( IDENT_8 ) ; METHOD_11 ( IDENT_2 , IDENT_3 ) ; } get ( java . lang . Class ) { final T IDENT_21 = org . bonitasoft . engine . builder . IDENT_22 . getInstance ( ) . METHOD_12 ( clazz ) ; if ( IDENT_21 == null ) { throw new java . lang . RuntimeException ( ( STRING_10 + clazz ) ) ; } return IDENT_21 ; }
org . junit . Assert . assertEquals ( IDENT_3 , result . get ( 0 ) ) 