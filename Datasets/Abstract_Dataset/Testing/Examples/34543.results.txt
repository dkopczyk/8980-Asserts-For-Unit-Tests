METHOD_0 ( ) { final java . util . List < org . bonitasoft . engine . command . model . IDENT_0 > IDENT_1 = new java . util . ArrayList < org . bonitasoft . engine . command . model . IDENT_0 > ( ) ; final java . lang . String field = "name" ; final org . bonitasoft . engine . persistence . IDENT_2 IDENT_3 = org . bonitasoft . engine . persistence . IDENT_2 . IDENT_4 ; final int IDENT_5 = 0 ; final int IDENT_6 = 1 ; when ( persistence . METHOD_1 ( org . bonitasoft . engine . command . api . record . IDENT_7 . METHOD_2 ( field , IDENT_3 , IDENT_5 , IDENT_6 ) ) ) . thenReturn ( IDENT_1 ) ; final java . util . List < org . bonitasoft . engine . command . model . IDENT_0 > IDENT_8 = IDENT_9 . METHOD_0 ( IDENT_5 , IDENT_6 , IDENT_10 . IDENT_11 ) ; "<AssertPlaceHolder>" ; } METHOD_0 ( int , int , org . bonitasoft . engine . command . model . IDENT_10 ) { final boolean trace = logger . METHOD_3 ( getClass ( ) , IDENT_12 . IDENT_13 ) ; if ( trace ) { logger . log ( this . getClass ( ) , IDENT_12 . IDENT_13 , org . bonitasoft . engine . commons . IDENT_14 . METHOD_4 ( this . getClass ( ) , STRING_0 ) ) ; } java . lang . String field = null ; org . bonitasoft . engine . persistence . IDENT_2 IDENT_3 = null ; switch ( IDENT_15 ) { case IDENT_11 : IDENT_3 = org . bonitasoft . engine . persistence . IDENT_2 . IDENT_4 ; field = "name" ; break ; case IDENT_16 : IDENT_3 = org . bonitasoft . engine . persistence . IDENT_2 . IDENT_17 ; field = "name" ; break ; default : throw new java . lang . IllegalStateException ( ) ; } try { final org . bonitasoft . engine . persistence . IDENT_18 < org . bonitasoft . engine . command . model . IDENT_0 > IDENT_19 = org . bonitasoft . engine . command . api . record . IDENT_7 . METHOD_2 ( field , IDENT_3 , IDENT_5 , IDENT_6 ) ; if ( trace ) { logger . log ( this . getClass ( ) , IDENT_12 . IDENT_13 , org . bonitasoft . engine . commons . IDENT_14 . METHOD_5 ( this . getClass ( ) , STRING_0 ) ) ; } return IDENT_20 . METHOD_1 ( IDENT_19 ) ; } catch ( final org . bonitasoft . engine . persistence . IDENT_21 e ) { if ( trace ) { logger . log ( this . getClass ( ) , IDENT_12 . IDENT_13 , org . bonitasoft . engine . commons . IDENT_14 . METHOD_6 ( this . getClass ( ) , STRING_0 , e ) ) ; } throw new org . bonitasoft . engine . command . METHOD_7 ( STRING_1 , e ) ; } }
org . junit . Assert . assertEquals ( IDENT_1 , IDENT_8 ) 