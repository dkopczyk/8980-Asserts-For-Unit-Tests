METHOD_0 ( ) { final org . bonitasoft . IDENT_0 . model . expression . IDENT_1 expr = IDENT_2 . IDENT_3 . METHOD_1 ( ) ; final org . bonitasoft . IDENT_0 . model . process . IDENT_4 IDENT_5 = IDENT_6 . IDENT_3 . METHOD_2 ( ) ; IDENT_5 . setName ( STRING_0 ) ; expr . METHOD_3 ( ) . add ( IDENT_5 ) ; final org . bonitasoft . IDENT_0 . model . expression . Operation op = IDENT_2 . IDENT_3 . METHOD_4 ( ) ; op . METHOD_5 ( expr ) ; final org . bonitasoft . IDENT_0 . model . process . IDENT_7 IDENT_8 = IDENT_6 . IDENT_3 . METHOD_6 ( ) ; IDENT_8 . METHOD_7 ( ) . add ( op ) ; final org . bonitasoft . IDENT_0 . model . process . IDENT_9 pool = IDENT_6 . IDENT_3 . METHOD_8 ( ) ; pool . METHOD_9 ( ) . add ( IDENT_8 ) ; final org . bonitasoft . IDENT_0 . model . process . IDENT_4 data = IDENT_6 . IDENT_3 . METHOD_2 ( ) ; data . setName ( STRING_0 ) ; final org . bonitasoft . IDENT_0 . model . process . IDENT_4 IDENT_10 = IDENT_6 . IDENT_3 . METHOD_2 ( ) ; IDENT_10 . setName ( STRING_1 ) ; pool . METHOD_10 ( ) . add ( IDENT_10 ) ; final org . eclipse . IDENT_11 . IDENT_12 . IDENT_13 container = org . bonitasoft . IDENT_0 . common . IDENT_11 . tools . IDENT_14 . METHOD_11 ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_11 ( org . bonitasoft . IDENT_0 . model . process . IDENT_4 ) { org . eclipse . IDENT_11 . IDENT_12 . IDENT_13 container = IDENT_5 . METHOD_12 ( ) ; while ( ( container != null ) && ( ! ( container instanceof org . bonitasoft . IDENT_0 . model . process . IDENT_9 ) ) ) { container = container . METHOD_12 ( ) ; } if ( container != null ) { if ( ( org . bonitasoft . IDENT_0 . common . IDENT_11 . tools . IDENT_14 . METHOD_13 ( IDENT_5 , container ) ) != null ) { return ( ( org . bonitasoft . IDENT_0 . model . process . IDENT_9 ) ( container ) ) ; } } return null ; }
org . junit . Assert . assertNull ( container ) 