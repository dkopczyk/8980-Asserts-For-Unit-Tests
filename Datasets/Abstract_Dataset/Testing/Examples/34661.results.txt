METHOD_0 ( ) { final org . bonitasoft . IDENT_0 . model . expression . IDENT_1 expr = IDENT_2 . IDENT_3 . METHOD_1 ( ) ; final org . bonitasoft . IDENT_0 . model . process . IDENT_4 IDENT_5 = IDENT_6 . IDENT_3 . METHOD_2 ( ) ; IDENT_5 . setName ( STRING_0 ) ; expr . METHOD_3 ( ) . add ( IDENT_5 ) ; final org . bonitasoft . IDENT_0 . model . expression . Operation op = IDENT_2 . IDENT_3 . METHOD_4 ( ) ; op . METHOD_5 ( expr ) ; final org . bonitasoft . IDENT_0 . model . process . IDENT_7 IDENT_8 = IDENT_6 . IDENT_3 . METHOD_6 ( ) ; IDENT_8 . METHOD_7 ( ) . add ( op ) ; final org . bonitasoft . IDENT_0 . model . process . IDENT_7 IDENT_9 = IDENT_6 . IDENT_3 . METHOD_6 ( ) ; final org . bonitasoft . IDENT_0 . model . process . IDENT_4 data = IDENT_6 . IDENT_3 . METHOD_2 ( ) ; data . setName ( STRING_0 ) ; final org . bonitasoft . IDENT_0 . model . process . IDENT_4 IDENT_10 = IDENT_6 . IDENT_3 . METHOD_2 ( ) ; IDENT_10 . setName ( STRING_1 ) ; IDENT_9 . METHOD_8 ( ) . add ( data ) ; IDENT_9 . METHOD_8 ( ) . add ( IDENT_10 ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( org . eclipse . IDENT_11 . IDENT_12 . IDENT_13 , org . eclipse . IDENT_11 . IDENT_12 . IDENT_13 ) { if ( ( IDENT_14 . METHOD_10 ( ) ) != null ) { return ( ( ( org . bonitasoft . IDENT_0 . model . process . Element ) ( IDENT_15 ) ) . getName ( ) . equals ( ( ( org . bonitasoft . IDENT_0 . model . process . Element ) ( IDENT_14 ) ) . getName ( ) ) ) && ( org . bonitasoft . IDENT_0 . common . IDENT_11 . tools . IDENT_16 . METHOD_11 ( IDENT_15 , IDENT_14 ) ) ; } else { return org . eclipse . IDENT_11 . IDENT_12 . util . IDENT_17 . equals ( IDENT_14 , IDENT_15 ) ; } }
org . junit . Assert . assertFalse ( org . bonitasoft . IDENT_0 . common . IDENT_11 . tools . IDENT_16 . METHOD_9 ( data , IDENT_5 ) ) 