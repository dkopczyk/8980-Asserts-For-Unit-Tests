METHOD_0 ( ) { final org . IDENT_0 . spec . IDENT_1 . model . IDENT_2 process = IDENT_3 . IDENT_4 . METHOD_1 ( ) ; process . setId ( STRING_0 ) ; final java . util . List < org . IDENT_0 . spec . IDENT_1 . model . IDENT_2 > IDENT_5 = new java . util . ArrayList < org . IDENT_0 . spec . IDENT_1 . model . IDENT_2 > ( ) ; IDENT_5 . add ( process ) ; final org . IDENT_0 . spec . IDENT_1 . model . IDENT_6 IDENT_7 = IDENT_3 . IDENT_4 . METHOD_2 ( ) ; final java . lang . String IDENT_8 = STRING_1 ; IDENT_7 . setId ( IDENT_8 ) ; final org . IDENT_0 . spec . IDENT_1 . model . IDENT_9 IDENT_10 = IDENT_3 . IDENT_4 . METHOD_3 ( ) ; final java . lang . String IDENT_11 = STRING_2 ; IDENT_10 . setId ( IDENT_11 ) ; IDENT_10 . METHOD_4 ( IDENT_8 ) ; IDENT_7 . METHOD_5 ( IDENT_11 ) ; process . METHOD_6 ( ) . add ( IDENT_10 ) ; IDENT_12 . METHOD_7 ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( org . IDENT_0 . spec . IDENT_1 . model . IDENT_6 , java . lang . String ) { boolean IDENT_13 = false ; if ( IDENT_14 != null ) { final java . lang . String IDENT_15 = IDENT_7 . METHOD_9 ( ) ; if ( ( IDENT_15 != null ) && ( ( IDENT_15 . length ( ) ) != 0 ) ) { for ( final org . IDENT_0 . spec . IDENT_1 . model . IDENT_2 IDENT_16 : IDENT_17 ) { for ( final org . IDENT_0 . spec . IDENT_1 . model . IDENT_18 IDENT_19 : IDENT_16 . METHOD_6 ( ) ) { if ( IDENT_15 . equals ( IDENT_19 . getId ( ) ) ) { if ( IDENT_19 instanceof org . IDENT_0 . spec . IDENT_1 . model . IDENT_20 ) { if ( IDENT_14 . equals ( ( ( org . IDENT_0 . spec . IDENT_1 . model . IDENT_20 ) ( IDENT_19 ) ) . METHOD_10 ( ) ) ) { IDENT_13 = true ; } } else if ( IDENT_19 instanceof org . IDENT_0 . spec . IDENT_1 . model . IDENT_21 ) { if ( IDENT_14 . equals ( ( ( org . IDENT_0 . spec . IDENT_1 . model . IDENT_21 ) ( IDENT_19 ) ) . METHOD_10 ( ) ) ) { IDENT_13 = true ; } } else if ( IDENT_19 instanceof org . IDENT_0 . spec . IDENT_1 . model . IDENT_22 ) { if ( IDENT_14 . equals ( ( ( org . IDENT_0 . spec . IDENT_1 . model . IDENT_22 ) ( IDENT_19 ) ) . METHOD_10 ( ) ) ) { IDENT_13 = true ; } } else if ( IDENT_19 instanceof org . IDENT_0 . spec . IDENT_1 . model . IDENT_23 ) { if ( IDENT_14 . equals ( ( ( org . IDENT_0 . spec . IDENT_1 . model . IDENT_23 ) ( IDENT_19 ) ) . METHOD_10 ( ) ) ) { IDENT_13 = true ; } } break ; } } } } } else { final java . lang . String IDENT_15 = ( ( IDENT_7 . METHOD_9 ( ) ) != null ) ? IDENT_7 . METHOD_9 ( ) : STRING_3 ; final java . lang . String IDENT_24 = ( ( IDENT_7 . METHOD_11 ( ) ) != null ) ? IDENT_7 . METHOD_11 ( ) : STRING_4 ; org . bonitasoft . IDENT_25 . common . log . IDENT_26 . log ( ( ( ( STRING_5 + IDENT_15 ) + STRING_6 ) + IDENT_24 ) ) ; } return IDENT_13 ; }
org . junit . Assert . assertTrue ( IDENT_12 . METHOD_8 ( IDENT_7 , IDENT_8 ) ) 