METHOD_0 ( ) { final com . allanbank . mongodb . bson . Document IDENT_0 = com . allanbank . mongodb . bson . builder . IDENT_1 . start ( ) . add ( STRING_0 , true ) . build ( ) ; final com . allanbank . mongodb . bson . Document IDENT_2 = com . allanbank . mongodb . bson . builder . IDENT_1 . start ( ) . add ( STRING_0 , false ) . add ( STRING_1 , true ) . build ( ) ; final com . allanbank . mongodb . client . state . IDENT_3 cluster = new com . allanbank . mongodb . client . state . METHOD_1 ( new com . allanbank . mongodb . METHOD_2 ( ) , com . allanbank . mongodb . client . IDENT_4 . IDENT_5 ) ; cluster . add ( STRING_2 ) . METHOD_3 ( 100 ) ; cluster . add ( STRING_3 ) . METHOD_3 ( 50 ) ; cluster . add ( STRING_4 ) . METHOD_3 ( INT_0 ) ; cluster . add ( STRING_5 ) . METHOD_3 ( 200 ) ; cluster . add ( STRING_6 ) . METHOD_3 ( INT_1 ) ; cluster . add ( STRING_7 ) . METHOD_3 ( INT_2 ) ; cluster . get ( STRING_2 ) . update ( IDENT_0 ) ; cluster . get ( STRING_3 ) . update ( IDENT_2 ) ; cluster . get ( STRING_4 ) . update ( IDENT_0 ) ; cluster . get ( STRING_5 ) . update ( IDENT_2 ) ; cluster . get ( STRING_6 ) . update ( IDENT_0 ) ; cluster . get ( STRING_7 ) . update ( IDENT_2 ) ; final java . util . List < com . allanbank . mongodb . client . state . IDENT_6 > expected = new java . util . ArrayList < com . allanbank . mongodb . client . state . IDENT_6 > ( ) ; expected . add ( cluster . get ( STRING_4 ) ) ; expected . add ( cluster . get ( STRING_3 ) ) ; expected . add ( cluster . get ( STRING_2 ) ) ; expected . add ( cluster . get ( STRING_5 ) ) ; expected . add ( cluster . get ( STRING_6 ) ) ; expected . add ( cluster . get ( STRING_7 ) ) ; final com . allanbank . mongodb . client . state . IDENT_7 IDENT_8 = new com . allanbank . mongodb . client . state . METHOD_4 ( cluster , false ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { java . util . List < com . allanbank . mongodb . client . state . IDENT_6 > IDENT_9 ; if ( IDENT_10 ) { IDENT_9 = IDENT_11 . METHOD_6 ( ) ; } else { IDENT_9 = IDENT_11 . METHOD_7 ( ) ; } if ( IDENT_9 . isEmpty ( ) ) { return java . util . Collections . emptyList ( ) ; } IDENT_9 = new java . util . ArrayList < com . allanbank . mongodb . client . state . IDENT_6 > ( IDENT_9 ) ; java . util . Collections . METHOD_8 ( IDENT_9 , IDENT_12 . IDENT_13 ) ; return IDENT_9 ; }
org . junit . Assert . assertEquals ( expected , IDENT_8 . METHOD_5 ( ) ) 