METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . filters . IDENT_5 instance = new com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . filters . METHOD_1 ( ) ; java . lang . String expResult = STRING_1 ; java . lang . String result = instance . METHOD_2 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { java . lang . String IDENT_6 = null ; java . lang . StringBuilder IDENT_7 = new java . lang . StringBuilder ( ) ; java . util . regex . IDENT_8 pattern = java . util . regex . IDENT_8 . METHOD_3 ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . filters . METHOD_1 . IDENT_9 ) ; java . util . regex . IDENT_10 matcher = pattern . matcher ( IDENT_0 ) ; while ( matcher . find ( ) ) { java . lang . String IDENT_11 = matcher . group ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . filters . METHOD_1 . IDENT_12 ) . trim ( ) ; if ( ! ( IDENT_11 . startsWith ( STRING_2 ) ) ) { if ( ( IDENT_7 . length ( ) ) > 0 ) { IDENT_7 . append ( " " ) ; } IDENT_7 . append ( IDENT_11 ) ; } } if ( ( IDENT_7 . length ( ) ) > 0 ) { IDENT_6 = IDENT_7 . toString ( ) ; } return IDENT_6 ; }
org . junit . Assert . assertEquals ( expResult , result ) 