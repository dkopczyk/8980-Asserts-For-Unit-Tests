METHOD_0 ( ) { when ( loader . load ( any ( java . net . URI . class ) ) ) . thenReturn ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) ; when ( IDENT_4 . METHOD_1 ( METHOD_2 ( ) , anyString ( ) ) ) . thenReturn ( com . google . common . base . Optional . of ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 ) ) ; when ( IDENT_4 . METHOD_3 ( METHOD_2 ( ) , anyString ( ) ) ) . thenReturn ( com . google . common . base . Optional . of ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 ) ) ; boolean IDENT_7 = instance . METHOD_4 ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_8 , com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String , java . net . URI ) { METHOD_5 ( IDENT_10 , STRING_0 ) ; METHOD_5 ( IDENT_11 , STRING_1 ) ; com . IDENT_0 . IDENT_1 . IDENT_12 . log . debug ( STRING_2 , IDENT_11 ) ; final java . net . URI IDENT_13 = IDENT_14 . METHOD_6 ( IDENT_11 ) ; com . IDENT_0 . IDENT_1 . IDENT_12 . log . debug ( STRING_3 , IDENT_13 ) ; final com . IDENT_0 . IDENT_1 . domain . IDENT_15 IDENT_1 ; try { IDENT_1 = loader . load ( IDENT_13 ) ; } catch ( java . lang . Exception e ) { com . IDENT_0 . IDENT_1 . IDENT_12 . log . debug ( STRING_4 , e . getMessage ( ) ) ; return METHOD_7 ( IDENT_11 ) ; } if ( IDENT_1 . METHOD_8 ( ) . isEmpty ( ) ) { com . IDENT_0 . IDENT_1 . IDENT_12 . log . debug ( STRING_5 , IDENT_11 ) ; return METHOD_7 ( IDENT_11 ) ; } final com . google . common . base . Optional < com . IDENT_0 . IDENT_1 . domain . IDENT_16 > group = IDENT_4 . METHOD_1 ( IDENT_1 . METHOD_8 ( ) , IDENT_10 ) ; if ( group . METHOD_9 ( ) ) { if ( com . IDENT_0 . IDENT_1 . IDENT_12 . log . METHOD_10 ( ) ) { com . IDENT_0 . IDENT_1 . IDENT_12 . log . debug ( STRING_6 , IDENT_4 . METHOD_3 ( group . get ( ) , IDENT_10 ) . get ( ) . getValue ( ) ) ; } } else { com . IDENT_0 . IDENT_1 . IDENT_12 . log . debug ( STRING_7 ) ; return METHOD_7 ( IDENT_11 ) ; } final com . google . common . base . Optional < com . IDENT_0 . IDENT_1 . domain . IDENT_17 > IDENT_18 = IDENT_4 . METHOD_3 ( group . get ( ) . METHOD_11 ( com . IDENT_0 . IDENT_1 . domain . IDENT_17 . class ) , IDENT_14 . METHOD_12 ( IDENT_11 ) ) ; if ( ! ( IDENT_18 . METHOD_9 ( ) ) ) { com . IDENT_0 . IDENT_1 . IDENT_12 . log . debug ( STRING_8 ) ; return METHOD_7 ( IDENT_11 ) ; } else { final com . IDENT_0 . IDENT_1 . domain . IDENT_17 IDENT_19 = IDENT_18 . get ( ) ; com . IDENT_0 . IDENT_1 . IDENT_12 . log . debug ( STRING_9 , IDENT_19 . METHOD_13 ( ) , IDENT_19 . getValue ( ) ) ; return IDENT_19 . METHOD_4 ( ) ? METHOD_7 ( IDENT_11 ) : METHOD_14 ( IDENT_11 ) ; } }
org . junit . Assert . assertThat ( IDENT_7 , org . hamcrest . Matchers . equalTo ( false ) ) 