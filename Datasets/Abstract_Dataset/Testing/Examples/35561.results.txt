METHOD_0 ( ) { final int i = 1 << ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) ; set . set ( i ) ; final int ret = set . METHOD_1 ( i ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( int ) { if ( i < 0 ) { if ( i == ( - 1 ) ) return - 1 ; throw new java . lang . METHOD_2 ( ( STRING_0 + i ) ) ; } final long [ ] [ ] [ ] IDENT_4 = this . IDENT_4 ; final int IDENT_5 = ( IDENT_4 . length ) - 1 ; int IDENT_6 = i > > ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) ; int IDENT_7 = IDENT_6 & ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_8 ) ; int IDENT_9 = ( IDENT_6 > > ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_10 ) ) & ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_11 ) ; int IDENT_12 = IDENT_6 > > ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_13 ) ; if ( IDENT_12 > IDENT_5 ) return i ; IDENT_12 = java . lang . Math . min ( IDENT_12 , IDENT_5 ) ; int IDENT_14 = i OP_0 ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_15 ) ; long IDENT_16 ; long [ ] [ ] IDENT_17 ; long [ ] IDENT_18 ; for ( ; IDENT_12 >= 0 ; OP_1 IDENT_12 ) { if ( ( IDENT_17 = IDENT_4 [ IDENT_12 ] ) == null ) return ( ( ( ( IDENT_12 << ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_13 ) ) + ( IDENT_9 << ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_10 ) ) ) + IDENT_7 ) << ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) ) + IDENT_14 ; for ( ; IDENT_9 >= 0 ; OP_1 IDENT_9 ) { if ( ( IDENT_18 = IDENT_17 [ IDENT_9 ] ) == null ) return ( ( ( ( IDENT_12 << ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_13 ) ) + ( IDENT_9 << ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_10 ) ) ) + IDENT_7 ) << ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) ) + IDENT_14 ; for ( ; IDENT_7 >= 0 ; OP_1 IDENT_7 ) { if ( ( IDENT_16 = IDENT_18 [ IDENT_7 ] ) == 0 ) return ( ( ( ( IDENT_12 << ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_13 ) ) + ( IDENT_9 << ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_10 ) ) ) + IDENT_7 ) << ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) ) + IDENT_14 ; for ( int IDENT_19 = IDENT_14 ; IDENT_19 >= 0 ; OP_1 IDENT_19 ) { if ( ( IDENT_16 & ( 1L << IDENT_19 ) ) == 0 ) return ( ( ( ( IDENT_12 << ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_13 ) ) + ( IDENT_9 << ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_10 ) ) ) + IDENT_7 ) << ( com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) ) + IDENT_19 ; } IDENT_14 = com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_20 ; } IDENT_7 = com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_21 ; } IDENT_9 = com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_22 ; } return - 1 ; }
org . junit . Assert . assertEquals ( ( i - 1 ) , ret ) 