METHOD_0 ( ) { IDENT_0 . expect ( com . IDENT_1 . IDENT_2 . generator . exceptions . IDENT_3 . class ) ; IDENT_0 . METHOD_1 ( STRING_0 ) ; java . sql . IDENT_4 connection = com . IDENT_1 . IDENT_2 . generator . IDENT_5 . IDENT_6 . METHOD_2 ( STRING_1 , STRING_2 , "" , "" ) ; java . io . File IDENT_7 = com . IDENT_1 . IDENT_2 . generator . IDENT_8 . METHOD_3 ( STRING_3 ) ; "<AssertPlaceHolder>" ; com . IDENT_1 . IDENT_2 . generator . IDENT_5 . IDENT_6 . METHOD_4 ( connection , new java . io . File [ ] { IDENT_7 } ) ; java . nio . file . Path p = java . nio . file . IDENT_9 . METHOD_5 ( STRING_4 ) ; com . IDENT_1 . IDENT_2 . generator . IDENT_10 . METHOD_6 ( connection , new IDENT_11 . IDENT_11 . METHOD_7 ( ) , new IDENT_11 . IDENT_11 . METHOD_7 ( ) , null , "" , p , null , null , null , null , false , true ) ; } METHOD_3 ( java . lang . String ) { try { com . IDENT_1 . IDENT_2 . generator . InputStream in = java . lang . IDENT_12 . METHOD_8 ( ) . getResourceAsStream ( IDENT_13 ) ; if ( in == null ) { return null ; } com . IDENT_1 . IDENT_2 . generator . File IDENT_7 = com . IDENT_1 . IDENT_2 . generator . File . METHOD_9 ( java . lang . String . valueOf ( in . hashCode ( ) ) , STRING_5 ) ; IDENT_7 . METHOD_10 ( ) ; try ( com . IDENT_1 . IDENT_2 . generator . IDENT_14 out = new com . IDENT_1 . IDENT_2 . generator . METHOD_11 ( IDENT_7 ) ) { byte [ ] buffer = new byte [ INT_0 ] ; int IDENT_15 ; while ( ( IDENT_15 = in . read ( buffer ) ) != ( - 1 ) ) { out . write ( buffer , 0 , IDENT_15 ) ; } } return IDENT_7 ; } catch ( com . IDENT_1 . IDENT_2 . generator . IOException e ) { e . printStackTrace ( ) ; return null ; } }
org . junit . Assert . assertNotNull ( IDENT_7 ) 