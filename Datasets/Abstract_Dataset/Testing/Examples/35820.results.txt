METHOD_0 ( ) { java . util . Date IDENT_0 = new java . util . Date ( ) ; IDENT_1 . METHOD_1 ( STRING_0 ) ; store . METHOD_2 ( org . IDENT_2 . IDENT_3 . db . jdbc . IDENT_4 ) ; store . METHOD_3 ( new org . IDENT_2 . IDENT_3 . IDENT_5 . model . impl . METHOD_4 ( IDENT_4 , IDENT_6 , org . IDENT_2 . IDENT_3 . IDENT_5 . IDENT_7 . IDENT_8 . IDENT_9 , null ) ) ; store . METHOD_5 ( new org . IDENT_2 . IDENT_3 . IDENT_5 . model . impl . METHOD_6 ( IDENT_10 , STRING_1 , new java . util . Date ( ) , STRING_2 ) ) ; store . METHOD_5 ( new org . IDENT_2 . IDENT_3 . IDENT_5 . model . impl . METHOD_6 ( IDENT_4 , STRING_1 , new java . util . Date ( ) , STRING_3 ) ) ; int count = store . METHOD_7 ( org . IDENT_2 . IDENT_3 . db . jdbc . IDENT_6 , IDENT_0 , 0 , null , false ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( org . IDENT_11 . packet . IDENT_12 , java . util . Date , int , java . lang . String , boolean ) { if ( null == node ) { node = STRING_4 ; } if ( ( - 1 ) == IDENT_13 ) { IDENT_13 = Integer . MAX_VALUE ; } java . lang . String IDENT_14 ; java . lang . String IDENT_15 ; java . sql . IDENT_16 stmt = null ; try { org . IDENT_11 . IDENT_17 . ResultSet < org . IDENT_2 . IDENT_3 . IDENT_5 . model . IDENT_18 > IDENT_19 = this . METHOD_8 ( user ) ; java . util . ArrayList < java . lang . String > IDENT_20 = new java . util . ArrayList < java . lang . String > ( ) ; java . util . ArrayList < java . lang . Object > parameters = new java . util . ArrayList < java . lang . Object > ( ) ; for ( org . IDENT_2 . IDENT_3 . IDENT_5 . model . IDENT_18 IDENT_7 : IDENT_19 ) { if ( false == ( IDENT_7 . METHOD_9 ( ) . equals ( IDENT_8 . IDENT_9 ) ) ) { continue ; } if ( false == ( IDENT_7 . METHOD_10 ( ) . substring ( ( ( IDENT_7 . METHOD_10 ( ) . length ( ) ) - ( node . length ( ) ) ) ) . equals ( node ) ) ) { continue ; } IDENT_14 = IDENT_21 . METHOD_11 ( ) ; IDENT_15 = "" ; if ( true == IDENT_22 ) { IDENT_15 = STRING_5 ; } IDENT_14 = IDENT_14 . replace ( STRING_6 , IDENT_15 ) ; IDENT_20 . add ( IDENT_14 ) ; parameters . add ( IDENT_7 . METHOD_10 ( ) ) ; parameters . add ( new java . sql . METHOD_12 ( IDENT_0 . getTime ( ) ) ) ; parameters . add ( IDENT_13 ) ; } stmt = conn . METHOD_13 ( org . apache . commons . lang . StringUtils . join ( IDENT_20 , STRING_7 ) ) ; int index = 1 ; for ( java . lang . Object parameter : parameters ) { stmt . METHOD_14 ( index , parameter ) ; ++ index ; } java . sql . ResultSet rs = stmt . METHOD_15 ( ) ; int count = 0 ; while ( rs . next ( ) ) { count += rs . METHOD_16 ( 1 ) ; } stmt = null ; return count ; } catch ( java . sql . IDENT_23 e ) { org . IDENT_2 . IDENT_3 . db . jdbc . IDENT_24 . LOGGER . error ( e ) ; throw new org . IDENT_2 . IDENT_3 . db . exception . METHOD_17 ( e ) ; } finally { close ( stmt ) ; } }
org . junit . Assert . assertEquals ( 0 , count ) 