METHOD_0 ( ) { java . util . Date IDENT_0 = new java . util . Date ( ) ; IDENT_0 . METHOD_1 ( 0 ) ; IDENT_1 . METHOD_2 ( STRING_0 ) ; store . METHOD_3 ( org . IDENT_2 . IDENT_3 . db . jdbc . IDENT_4 ) ; store . METHOD_4 ( org . IDENT_2 . IDENT_3 . db . jdbc . IDENT_5 ) ; store . METHOD_5 ( new org . IDENT_2 . IDENT_3 . IDENT_6 . model . impl . METHOD_6 ( IDENT_4 , IDENT_7 , org . IDENT_2 . IDENT_3 . IDENT_6 . IDENT_8 . IDENT_9 . IDENT_10 , null ) ) ; org . IDENT_2 . IDENT_3 . IDENT_6 . model . IDENT_11 IDENT_12 = new org . IDENT_2 . IDENT_3 . IDENT_6 . model . impl . METHOD_7 ( IDENT_5 , STRING_1 , new java . util . Date ( ) , STRING_2 , null , new java . util . Date ( ) ) ; store . METHOD_8 ( IDENT_12 ) ; java . lang . Thread . sleep ( 1 ) ; org . IDENT_2 . IDENT_3 . IDENT_6 . model . IDENT_11 IDENT_13 = new org . IDENT_2 . IDENT_3 . IDENT_6 . model . impl . METHOD_7 ( IDENT_4 , STRING_3 , new java . util . Date ( ) , STRING_4 , STRING_5 , new java . util . Date ( ) ) ; store . METHOD_8 ( IDENT_13 ) ; java . lang . Thread . sleep ( 1 ) ; org . IDENT_2 . IDENT_3 . IDENT_6 . model . IDENT_11 IDENT_14 = new org . IDENT_2 . IDENT_3 . IDENT_6 . model . impl . METHOD_7 ( IDENT_4 , STRING_6 , new java . util . Date ( ) , STRING_7 , null , new java . util . Date ( ) ) ; store . METHOD_8 ( IDENT_14 ) ; java . lang . Thread . sleep ( 20 ) ; int IDENT_15 = store . METHOD_9 ( org . IDENT_2 . IDENT_3 . db . jdbc . IDENT_7 , IDENT_0 , ( - 1 ) , null , true ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( org . IDENT_16 . packet . IDENT_17 , java . util . Date , int , java . lang . String , boolean ) { if ( null == node ) { node = STRING_8 ; } if ( ( - 1 ) == IDENT_18 ) { IDENT_18 = Integer . MAX_VALUE ; } java . lang . String IDENT_19 ; java . lang . String IDENT_20 ; java . sql . IDENT_21 stmt = null ; try { org . IDENT_16 . IDENT_22 . ResultSet < org . IDENT_2 . IDENT_3 . IDENT_6 . model . IDENT_23 > IDENT_24 = this . METHOD_10 ( user ) ; java . util . ArrayList < java . lang . String > IDENT_25 = new java . util . ArrayList < java . lang . String > ( ) ; java . util . ArrayList < java . lang . Object > parameters = new java . util . ArrayList < java . lang . Object > ( ) ; for ( org . IDENT_2 . IDENT_3 . IDENT_6 . model . IDENT_23 IDENT_8 : IDENT_24 ) { if ( false == ( IDENT_8 . METHOD_11 ( ) . equals ( IDENT_9 . IDENT_10 ) ) ) { continue ; } if ( false == ( IDENT_8 . METHOD_12 ( ) . substring ( ( ( IDENT_8 . METHOD_12 ( ) . length ( ) ) - ( node . length ( ) ) ) ) . equals ( node ) ) ) { continue ; } IDENT_19 = IDENT_26 . METHOD_13 ( ) ; IDENT_20 = "" ; if ( true == IDENT_27 ) { IDENT_20 = STRING_9 ; } IDENT_19 = IDENT_19 . replace ( STRING_10 , IDENT_20 ) ; IDENT_25 . add ( IDENT_19 ) ; parameters . add ( IDENT_8 . METHOD_12 ( ) ) ; parameters . add ( new java . sql . METHOD_14 ( IDENT_0 . getTime ( ) ) ) ; parameters . add ( IDENT_18 ) ; } stmt = conn . METHOD_15 ( org . apache . commons . lang . StringUtils . join ( IDENT_25 , STRING_11 ) ) ; int index = 1 ; for ( java . lang . Object parameter : parameters ) { stmt . METHOD_16 ( index , parameter ) ; ++ index ; } java . sql . ResultSet rs = stmt . METHOD_17 ( ) ; int count = 0 ; while ( rs . next ( ) ) { count += rs . METHOD_18 ( 1 ) ; } stmt = null ; return count ; } catch ( java . sql . IDENT_28 e ) { org . IDENT_2 . IDENT_3 . db . jdbc . IDENT_29 . LOGGER . error ( e ) ; throw new org . IDENT_2 . IDENT_3 . db . exception . METHOD_19 ( e ) ; } finally { close ( stmt ) ; } }
org . junit . Assert . assertEquals ( 2 , IDENT_15 ) 