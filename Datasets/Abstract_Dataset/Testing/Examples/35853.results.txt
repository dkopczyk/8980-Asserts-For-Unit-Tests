METHOD_0 ( ) { net . sourceforge . IDENT_0 . IDENT_1 IDENT_2 = new net . sourceforge . IDENT_0 . METHOD_1 ( ) ; IDENT_3 . add ( IDENT_2 ) ; IDENT_3 . METHOD_2 ( false ) ; project . init ( ) ; IDENT_2 . METHOD_3 ( false ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( boolean ) { METHOD_5 ( IDENT_4 . IDENT_5 ) ; final net . sourceforge . IDENT_0 . IDENT_6 IDENT_7 = IDENT_3 . METHOD_6 ( ) ; if ( IDENT_7 == null ) { debug ( STRING_0 ) ; if ( IDENT_8 ) { info ( STRING_1 ) ; return new org . IDENT_9 . Element ( STRING_2 ) ; } if ( ! ( IDENT_10 ) ) { info ( STRING_3 ) ; return new org . IDENT_9 . Element ( STRING_2 ) ; } return null ; } final boolean IDENT_11 = METHOD_7 ( ) ; org . IDENT_9 . Element IDENT_12 ; if ( IDENT_11 ) { debug ( STRING_3 2 ) ; IDENT_12 = IDENT_7 . METHOD_8 ( IDENT_13 , IDENT_14 ) ; } else { debug ( STRING_3 0 ) ; IDENT_12 = IDENT_7 . METHOD_8 ( IDENT_15 , IDENT_14 ) ; } if ( ! ( IDENT_7 . METHOD_9 ( ) ) ) { info ( STRING_4 ) ; if ( ( IDENT_16 ) && ( ! ( IDENT_17 ) ) ) { info ( STRING_5 ) ; } else if ( ! ( IDENT_10 ) ) { info ( STRING_6 ) ; } else { if ( IDENT_8 ) { info ( STRING_7 ) ; } else { return null ; } } } if ( IDENT_11 ) { debug ( STRING_8 ) ; IDENT_12 = IDENT_7 . METHOD_8 ( IDENT_15 , IDENT_14 ) ; } return IDENT_12 ; }
org . junit . Assert . assertNotNull ( project . METHOD_4 ( false ) ) 