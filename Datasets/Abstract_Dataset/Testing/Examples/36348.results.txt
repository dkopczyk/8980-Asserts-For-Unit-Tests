METHOD_0 ( ) { final java . util . concurrent . atomic . IDENT_0 IDENT_1 = new java . util . concurrent . atomic . METHOD_1 ( ) ; final java . util . concurrent . atomic . METHOD_1 IDENT_2 = new java . util . concurrent . atomic . METHOD_1 ( ) ; org . IDENT_3 . IDENT_4 < java . lang . Integer , java . lang . Integer > c = target . cache ( new IDENT_5 . IDENT_6 < java . lang . Integer , java . lang . Integer > ( ) { @ java . lang . Override public void METHOD_2 ( final IDENT_7 < java . lang . Integer , java . lang . Integer > b ) { b . loader ( new IDENT_8 < java . lang . Integer , java . lang . Integer > ( ) { @ java . lang . Override public void load ( final java . lang . Integer key , final IDENT_8 . Context < java . lang . Integer , java . lang . Integer > ctx , final IDENT_9 < java . lang . Integer , java . lang . Integer > IDENT_10 ) { IDENT_1 . METHOD_3 ( ) ; ctx . METHOD_4 ( ) . execute ( new java . lang . METHOD_5 ( ) { @ java . lang . Override public void run ( ) { IDENT_2 . METHOD_3 ( ) ; IDENT_10 . METHOD_6 ( key ) ; } } ) ; } } ) ; } } ) ; java . lang . Integer v = c . get ( 1 ) ; "<AssertPlaceHolder>" ; } get ( IDENT_11 ) { return super . get ( key ) ; }
org . junit . Assert . assertEquals ( 1 , ( ( int ) ( v ) ) ) 