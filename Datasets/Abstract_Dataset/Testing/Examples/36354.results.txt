METHOD_0 ( ) { final long IDENT_0 = INT_0 ; org . IDENT_1 . IDENT_2 < java . lang . Integer , java . lang . Integer > c = target . cache ( new IDENT_3 . IDENT_4 < java . lang . Integer , java . lang . Integer > ( ) { @ java . lang . Override public void METHOD_1 ( final IDENT_5 < java . lang . Integer , java . lang . Integer > b ) { b . METHOD_2 ( true ) . METHOD_3 ( new IDENT_6 < java . lang . Integer , IDENT_7 < java . lang . Integer > > ( ) { @ java . lang . Override public IDENT_7 < java . lang . Integer > load ( final java . lang . Integer key , final long IDENT_8 , final IDENT_9 < java . lang . Integer , IDENT_7 < java . lang . Integer > > IDENT_10 ) throws java . lang . Exception { return org . IDENT_1 . integration . IDENT_11 . METHOD_4 ( key , IDENT_0 ) ; } } ) ; } } ) ; c . invoke ( 1 , new org . IDENT_1 . processor . IDENT_12 < java . lang . Integer , java . lang . Integer , java . lang . Object > ( ) { @ org . IDENT_1 . test . core . Override public java . lang . Object process ( final org . IDENT_1 . processor . IDENT_13 < java . lang . Integer , java . lang . Integer > e ) { java . lang . Integer v = e . getValue ( ) ; "<AssertPlaceHolder>" ; return null ; } } ) ; } METHOD_5 ( ) { if ( ( IDENT_14 ) != ( IDENT_15 ) ) { return IDENT_14 ; } return IDENT_16 ? entry . METHOD_6 ( ) : 0 ; }
org . junit . Assert . assertEquals ( IDENT_0 , e . METHOD_5 ( ) ) 