METHOD_0 ( ) { org . IDENT_0 . test . util . IDENT_1 IDENT_2 = new org . IDENT_0 . test . util . METHOD_1 ( ) ; org . IDENT_0 . IDENT_3 < java . lang . Integer , java . lang . Integer > c = builder ( org . IDENT_0 . test . core . IDENT_4 . Integer . class , org . IDENT_0 . test . core . IDENT_4 . Integer . class ) . METHOD_2 ( true ) . METHOD_3 ( true ) . METHOD_4 ( new org . IDENT_0 . IDENT_4 . IDENT_5 < java . lang . Integer , java . lang . Integer > ( ) { @ org . IDENT_0 . test . core . IDENT_4 . Override public long METHOD_5 ( final java . lang . Integer key , final java . lang . Integer value , final long IDENT_6 , final org . IDENT_0 . IDENT_7 < java . lang . Integer , java . lang . Integer > IDENT_8 ) { return 0 ; } } ) . loader ( IDENT_2 ) . build ( ) ; c . get ( 1 ) ; "<AssertPlaceHolder>" ; } containsKey ( IDENT_9 ) { org . IDENT_0 . processor . IDENT_10 < IDENT_9 , IDENT_11 , java . lang . Boolean > p = new org . IDENT_0 . processor . IDENT_10 < IDENT_9 , IDENT_11 , java . lang . Boolean > ( ) { @ org . IDENT_0 . test . core . Override public org . IDENT_0 . test . core . Boolean process ( org . IDENT_0 . processor . IDENT_12 < IDENT_9 , IDENT_11 > e ) throws org . IDENT_0 . test . core . Exception { if ( ! ( e . exists ( ) ) ) { return false ; } return true ; } } ; return invoke ( key , p ) ; }
org . junit . Assert . assertFalse ( c . containsKey ( 1 ) ) 