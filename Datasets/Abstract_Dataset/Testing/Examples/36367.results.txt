METHOD_0 ( ) { org . IDENT_0 . IDENT_1 < java . lang . Integer , java . lang . Integer > c = builder ( org . IDENT_0 . test . core . IDENT_2 . Integer . class , org . IDENT_0 . test . core . IDENT_2 . Integer . class ) . METHOD_1 ( org . IDENT_0 . test . core . IDENT_2 . IDENT_3 . IDENT_4 , TimeUnit . IDENT_5 ) . METHOD_2 ( true ) . loader ( new org . IDENT_0 . integration . IDENT_6 < java . lang . Integer , java . lang . Integer > ( ) { @ org . IDENT_0 . test . core . IDENT_2 . Override public org . IDENT_0 . test . core . IDENT_2 . Integer load ( final java . lang . Integer key ) throws org . IDENT_0 . test . core . IDENT_2 . Exception { return INT_0 ; } } ) . build ( ) ; c . put ( 1 , 2 ) ; c . invoke ( 1 , new org . IDENT_0 . processor . IDENT_7 < java . lang . Integer , java . lang . Integer , java . lang . Object > ( ) { @ org . IDENT_0 . test . core . IDENT_2 . Override public java . lang . Object process ( final org . IDENT_0 . processor . IDENT_8 < java . lang . Integer , java . lang . Integer > e ) throws org . IDENT_0 . test . core . IDENT_2 . Exception { e . METHOD_3 ( ( - ( METHOD_4 ( ) ) ) ) ; return null ; } } ) ; "<AssertPlaceHolder>" ; } containsKey ( IDENT_9 ) { org . IDENT_0 . processor . IDENT_7 < IDENT_9 , IDENT_10 , java . lang . Boolean > p = new org . IDENT_0 . processor . IDENT_7 < IDENT_9 , IDENT_10 , java . lang . Boolean > ( ) { @ org . IDENT_0 . test . core . Override public org . IDENT_0 . test . core . Boolean process ( org . IDENT_0 . processor . IDENT_8 < IDENT_9 , IDENT_10 > e ) throws org . IDENT_0 . test . core . Exception { if ( ! ( e . exists ( ) ) ) { return false ; } return true ; } } ; return invoke ( key , p ) ; }
org . junit . Assert . assertFalse ( c . containsKey ( 1 ) ) 