METHOD_0 ( ) { final edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 IDENT_6 = new edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_7 . IDENT_8 , edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_7 . IDENT_9 , edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_7 . IDENT_10 ) ; edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_11 IDENT_12 = new edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_2 ( 0 , 3 , 0 , 10 ) ; IDENT_6 . METHOD_3 ( IDENT_12 ) ; final it . IDENT_13 . IDENT_14 . IDENT_15 . IDENT_16 . IDENT_17 IDENT_18 = new it . IDENT_13 . IDENT_14 . IDENT_15 . IDENT_16 . METHOD_4 ( ) ; final int [ ] IDENT_19 = new int [ ] { 3 , 5 , 6 , 7 , 8 , 9 , 10 , 10 } ; for ( final edu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_20 . IDENT_21 entry : IDENT_6 ) { IDENT_18 . add ( entry . METHOD_5 ( ) ) ; } "<AssertPlaceHolder>" ; } size ( ) { return delegate . size ( ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_18 . size ( ) ) 