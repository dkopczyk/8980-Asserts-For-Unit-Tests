METHOD_0 ( ) { IDENT_0 . METHOD_1 ( org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 , org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_5 ) ; IDENT_0 . METHOD_1 ( org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_6 , org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_5 ) ; METHOD_2 ( org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 ) ; METHOD_2 ( org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_6 ) ; IDENT_7 . METHOD_3 ( STRING_0 , null , java . util . Arrays . asList ( org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 ) ) ; java . util . List < org . camunda . bpm . engine . IDENT_8 . IDENT_9 > result = IDENT_10 . METHOD_4 ( ) . METHOD_5 ( org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_11 ) . METHOD_6 ( org . camunda . bpm . engine . test . api . IDENT_1 . IDENT_2 . IDENT_12 ) ; "<AssertPlaceHolder>" ; } size ( ) { return ( ( ( IDENT_13 . size ( ) ) + ( IDENT_14 . size ( ) ) ) + ( IDENT_15 . size ( ) ) ) + ( IDENT_16 . size ( ) ) ; }
org . junit . Assert . assertThat ( result . size ( ) , org . hamcrest . CoreMatchers . is ( 1 ) ) 