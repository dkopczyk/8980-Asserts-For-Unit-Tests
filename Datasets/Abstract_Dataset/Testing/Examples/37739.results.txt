METHOD_0 ( ) { org . IDENT_0 . model . IDENT_1 IDENT_2 = this . METHOD_1 ( STRING_0 , STRING_1 ) ; org . IDENT_0 . model . IDENT_1 output = this . IDENT_3 . METHOD_2 ( IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . IDENT_4 ) { if ( entities == null ) { return java . util . Collections . < IDENT_5 > emptyList ( ) ; } final java . lang . IDENT_4 < IDENT_5 > IDENT_6 = entities ; final org . hibernate . internal . IDENT_7 session = ( ( org . hibernate . internal . IDENT_7 ) ( this . METHOD_3 ( ) ) ) ; final org . hibernate . metadata . IDENT_8 metadata = session . METHOD_4 ( ) . METHOD_5 ( this . IDENT_9 ) ; if ( ( ( metadata == null ) || ( ! ( metadata . METHOD_6 ( ) ) ) ) || ( ! ( metadata . METHOD_7 ( ) ) ) ) { throw new java . lang . METHOD_8 ( STRING_2 ) ; } java . lang . IDENT_4 < java . io . IDENT_10 > IDENT_11 = new java . lang . IDENT_4 < java . io . IDENT_10 > ( ) { @ org . IDENT_0 . model . Override public java . util . Iterator < java . io . IDENT_10 > iterator ( ) { return new java . util . Iterator < java . io . IDENT_10 > ( ) { MOD_0 java . util . Iterator < IDENT_5 > IDENT_12 ; { this . IDENT_12 = IDENT_6 . iterator ( ) ; } @ org . IDENT_0 . model . Override public boolean hasNext ( ) { return this . IDENT_12 . hasNext ( ) ; } @ org . IDENT_0 . model . Override public java . io . IDENT_10 next ( ) { IDENT_5 next = this . IDENT_12 . next ( ) ; return next != null ? metadata . METHOD_9 ( next , session ) : null ; } @ org . IDENT_0 . model . Override public void remove ( ) { this . IDENT_12 . remove ( ) ; } } ; } } ; return this . METHOD_10 ( this . IDENT_9 , IDENT_11 ) ; }
org . junit . Assert . assertEquals ( IDENT_2 , output ) 