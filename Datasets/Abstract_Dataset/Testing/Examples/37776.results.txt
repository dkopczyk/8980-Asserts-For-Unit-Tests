METHOD_0 ( ) { org . IDENT_0 . model . IDENT_1 consumer = new org . IDENT_0 . model . METHOD_1 ( STRING_0 , STRING_1 , IDENT_2 , IDENT_3 ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_4 = new java . util . HashMap ( ) ; IDENT_4 . put ( STRING_2 , STRING_3 ) ; IDENT_4 . put ( STRING_4 , STRING_5 ) ; consumer . METHOD_2 ( IDENT_4 ) ; consumer = IDENT_5 . create ( consumer ) ; org . IDENT_0 . model . METHOD_1 IDENT_6 = new org . IDENT_0 . model . METHOD_1 ( STRING_6 , STRING_7 , IDENT_2 , IDENT_3 ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_7 = new java . util . HashMap ( ) ; IDENT_7 . put ( STRING_8 , STRING_3 ) ; IDENT_6 . METHOD_2 ( IDENT_7 ) ; IDENT_6 = IDENT_5 . create ( IDENT_6 ) ; java . util . List < org . IDENT_0 . IDENT_8 . parameter . IDENT_9 > IDENT_10 = new java . util . METHOD_3 ( ) ; IDENT_10 . add ( new org . IDENT_0 . IDENT_8 . parameter . METHOD_4 ( STRING_9 ) ) ; java . util . List < org . IDENT_0 . model . METHOD_1 > results = IDENT_5 . METHOD_5 ( IDENT_2 , null , null , null , null , IDENT_10 , null , null , null ) . list ( ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_11 . METHOD_6 ( ) . size ( ) ; }
org . junit . Assert . assertEquals ( 0 , results . size ( ) ) 