METHOD_0 ( ) { class IDENT_0 { public int id ; public int IDENT_1 ; public java . lang . String IDENT_2 ; } java . lang . String IDENT_3 = STRING_0 ; java . lang . String IDENT_4 = STRING_1 + ( STRING_2 + STRING_3 ) ; java . lang . String IDENT_5 = STRING_4 + ( ( ( STRING_5 + STRING_6 ) + STRING_7 2 ) + STRING_7 ) ; try ( org . IDENT_6 . IDENT_7 connection = IDENT_6 . METHOD_1 ( ) ) { connection . METHOD_2 ( IDENT_3 ) . METHOD_3 ( ) ; for ( int IDENT_8 = 0 ; IDENT_8 < 100 ; IDENT_8 ++ ) { int IDENT_1 = IDENT_8 OP_0 10 ; connection . METHOD_2 ( IDENT_4 ) . METHOD_4 ( STRING_7 0 , IDENT_8 ) . METHOD_4 ( STRING_7 1 , IDENT_1 ) . METHOD_4 ( STRING_7 3 , ( STRING_8 + IDENT_8 ) ) . METHOD_3 ( ) ; } java . util . List < IDENT_0 > IDENT_9 = connection . METHOD_2 ( IDENT_5 ) . METHOD_4 ( STRING_9 , 5 ) . METHOD_5 ( IDENT_0 . class ) ; "<AssertPlaceHolder>" ; } } size ( ) { return IDENT_10 . size ( ) ; }
org . junit . Assert . assertEquals ( 10 , IDENT_9 . size ( ) ) 