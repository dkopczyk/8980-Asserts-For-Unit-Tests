METHOD_0 ( ) { org . IDENT_0 . IDENT_1 map = new org . IDENT_0 . METHOD_1 ( ) ; map . put ( IDENT_2 . IDENT_3 , STRING_0 ) ; org . IDENT_0 . IDENT_4 IDENT_5 = new org . IDENT_0 . METHOD_2 ( "name" , STRING_1 ) ; org . IDENT_0 . IDENT_6 IDENT_7 = METHOD_3 ( org . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_11 . class ) . METHOD_4 ( IDENT_5 ) . METHOD_5 ( true ) . METHOD_6 ( map ) . METHOD_7 ( true ) . build ( ) ; org . IDENT_8 . IDENT_9 . core . model . IDENT_2 IDENT_12 = new org . IDENT_8 . IDENT_9 . core . model . METHOD_8 ( ) ; IDENT_12 . METHOD_9 ( IDENT_13 . IDENT_14 ) ; org . IDENT_8 . IDENT_9 . IDENT_10 . IDENT_11 job = new org . IDENT_8 . IDENT_9 . IDENT_10 . METHOD_10 ( ) ; when ( IDENT_15 . create ( any ( org . IDENT_8 . IDENT_9 . core . model . METHOD_8 . class ) ) ) . thenReturn ( status ) ; when ( IDENT_16 . METHOD_11 ( ) ) . thenReturn ( IDENT_17 ) ; when ( IDENT_16 . METHOD_12 ( any ( org . IDENT_0 . IDENT_6 . class ) , any ( org . IDENT_0 . IDENT_18 . class ) ) ) . METHOD_13 ( new java . lang . RuntimeException ( STRING_2 ) ) ; try { job . METHOD_12 ( IDENT_15 , IDENT_16 , IDENT_7 , t ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . RuntimeException e ) { "<AssertPlaceHolder>" ; } verify ( status , times ( 1 ) ) . METHOD_9 ( IDENT_13 . IDENT_19 ) ; } getMessage ( ) { return this . message ; }
org . junit . Assert . assertEquals ( e . getMessage ( ) , STRING_2 ) 