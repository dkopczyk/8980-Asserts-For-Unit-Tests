METHOD_0 ( ) { METHOD_1 ( ) ; service . METHOD_2 ( STRING_0 , STRING_1 , 0 , "foo" , METHOD_3 ( STRING_2 , IDENT_0 . IDENT_1 ) ) ; service . METHOD_2 ( STRING_3 , STRING_1 , 0 , "foo" , METHOD_3 ( STRING_2 , IDENT_0 . IDENT_1 ) ) ; service . METHOD_2 ( STRING_4 , STRING_1 , 0 , "foo" , METHOD_3 ( STRING_2 , IDENT_0 . IDENT_1 ) ) ; METHOD_4 ( ) ; java . util . List < java . lang . String > IDENT_2 = service . METHOD_5 ( "" , 1000 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . String , long ) { org . jboss . IDENT_3 . IDENT_4 . IDENT_5 mapper = new org . jboss . IDENT_3 . IDENT_4 . METHOD_6 ( ) ; org . jboss . IDENT_3 . IDENT_4 . IDENT_6 IDENT_7 = new org . jboss . IDENT_3 . IDENT_4 . METHOD_7 ( ) ; org . jboss . IDENT_3 . IDENT_4 . IDENT_8 IDENT_9 = new org . jboss . IDENT_3 . IDENT_4 . METHOD_8 ( ) ; org . IDENT_10 . IDENT_11 . mapreduce . IDENT_12 < org . jboss . IDENT_3 . IDENT_4 . IDENT_13 , org . jboss . IDENT_3 . IDENT_4 . IDENT_14 , java . lang . String , java . util . Set < java . lang . String > > task = new org . IDENT_10 . IDENT_11 . mapreduce . METHOD_9 ( cache ) ; return task . METHOD_10 ( mapper ) . METHOD_11 ( IDENT_7 ) . execute ( IDENT_9 ) ; }
org . junit . Assert . assertEquals ( java . util . Arrays . asList ( STRING_3 , STRING_4 , STRING_0 ) , IDENT_2 ) 