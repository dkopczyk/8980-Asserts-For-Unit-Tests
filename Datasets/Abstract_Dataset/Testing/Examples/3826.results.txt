METHOD_0 ( ) { final alluxio . IDENT_0 IDENT_1 = new alluxio . METHOD_1 ( STRING_0 ) ; IDENT_2 . METHOD_2 ( IDENT_1 , alluxio . grpc . IDENT_3 . METHOD_3 ( ) . METHOD_4 ( IDENT_4 . IDENT_5 ) . build ( ) ) ; alluxio . client . file . IDENT_6 out = IDENT_2 . METHOD_5 ( new alluxio . METHOD_1 ( STRING_1 ) , alluxio . grpc . IDENT_7 . METHOD_3 ( ) . METHOD_4 ( IDENT_4 . IDENT_5 ) . build ( ) ) ; out . write ( alluxio . client . fs . IDENT_8 . IDENT_9 ) ; out . METHOD_6 ( ) ; alluxio . util . IDENT_10 . METHOD_7 ( STRING_2 , ( ) -> { try { return ( IDENT_11 . METHOD_8 ( IDENT_2 . getStatus ( IDENT_1 ) . METHOD_9 ( ) ) . length ) > 0 ; } catch ( e ) { throw new < alluxio . client . fs . e > java . lang . RuntimeException ( ) ; } } , alluxio . util . IDENT_12 . METHOD_10 ( ) . METHOD_11 ( ( 5 * ( alluxio . Constants . IDENT_13 ) ) ) ) ; IDENT_2 . delete ( new alluxio . METHOD_1 ( STRING_0 ) , alluxio . grpc . IDENT_14 . METHOD_3 ( ) . METHOD_12 ( true ) . build ( ) ) ; "<AssertPlaceHolder>" ; IDENT_15 . expect ( java . io . IOException . class ) ; out . close ( ) ; } exists ( java . lang . String ) { org . apache . hadoop . fs . IDENT_16 hdfs = METHOD_13 ( ) ; return hdfs . exists ( new org . apache . hadoop . fs . Path ( path ) ) ; }
org . junit . Assert . assertFalse ( IDENT_2 . exists ( new alluxio . METHOD_1 ( STRING_0 ) ) ) 