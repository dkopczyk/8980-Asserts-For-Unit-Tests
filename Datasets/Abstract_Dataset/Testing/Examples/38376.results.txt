METHOD_0 ( ) { org . IDENT_0 . jenkins . plugins . IDENT_1 . IDENT_2 IDENT_3 = new org . IDENT_0 . jenkins . plugins . IDENT_1 . METHOD_1 ( STRING_0 , STRING_1 2 ) ; org . IDENT_0 . jenkins . plugins . IDENT_1 . model . IDENT_4 IDENT_5 = new org . IDENT_0 . jenkins . plugins . IDENT_1 . model . METHOD_2 ( STRING_2 , STRING_3 , STRING_4 ) ; IDENT_3 . METHOD_3 ( singletonList ( IDENT_5 ) ) ; org . IDENT_0 . jenkins . plugins . IDENT_1 . METHOD_1 IDENT_6 = new org . IDENT_0 . jenkins . plugins . IDENT_1 . METHOD_1 ( STRING_5 , STRING_1 1 ) ; org . IDENT_0 . jenkins . plugins . IDENT_1 . model . METHOD_2 IDENT_7 = new org . IDENT_0 . jenkins . plugins . IDENT_1 . model . METHOD_2 ( STRING_6 , STRING_1 , STRING_7 ) ; org . IDENT_0 . jenkins . plugins . IDENT_1 . model . METHOD_2 IDENT_8 = new org . IDENT_0 . jenkins . plugins . IDENT_1 . model . METHOD_2 ( STRING_1 0 , STRING_8 , STRING_9 ) ; IDENT_6 . METHOD_3 ( asList ( IDENT_7 , IDENT_8 ) ) ; org . IDENT_0 . jenkins . plugins . IDENT_1 . METHOD_1 result = METHOD_4 ( IDENT_3 , IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { if ( ( IDENT_9 ) == null ) { return java . util . Collections . emptyList ( ) ; } return IDENT_9 ; }
org . junit . Assert . assertThat ( result . METHOD_5 ( ) , contains ( IDENT_5 , IDENT_7 , IDENT_8 ) ) 