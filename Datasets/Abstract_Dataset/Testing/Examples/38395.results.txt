METHOD_0 ( ) { final java . lang . String IDENT_0 = pool . METHOD_1 ( java . lang . String . class , null ) ; pool . METHOD_2 ( IDENT_0 , null ) ; final java . lang . String IDENT_1 = pool . METHOD_1 ( java . lang . String . class , null ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . Class , IDENT_2 ) { final IDENT_3 instance ; MOD_0 ( this ) { if ( ( IDENT_4 ) == null ) { throw new java . lang . IllegalStateException ( STRING_0 ) ; } org . IDENT_5 . util . IDENT_6 < java . lang . Class < ? extends T > , IDENT_2 > key = new org . IDENT_5 . util . IDENT_6 < java . lang . Class < ? extends T > , IDENT_2 > ( clazz , parameter ) ; java . util . ArrayList < T > list = IDENT_4 . get ( key ) ; if ( list == null ) { IDENT_4 . put ( key , ( list = METHOD_3 ( clazz , parameter ) ) ) ; } while ( ( list . size ( ) ) == 0 ) { try { this . METHOD_4 ( ) ; if ( ( this . IDENT_4 ) == null ) { throw new java . lang . METHOD_5 ( STRING_1 ) ; } } catch ( java . lang . IDENT_7 e ) { throw new java . lang . METHOD_5 ( ( ( ( STRING_2 + clazz ) + STRING_3 ) + parameter ) ) ; } } instance = ( ( IDENT_3 ) ( list . remove ( ( ( list . size ( ) ) - 1 ) ) ) ) ; } if ( ( IDENT_8 ) != null ) { IDENT_8 . METHOD_6 ( instance , parameter ) ; } return instance ; }
org . junit . Assert . assertSame ( IDENT_0 , IDENT_1 ) 