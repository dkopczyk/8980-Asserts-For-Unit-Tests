METHOD_0 ( ) { io . cdap . cdap . IDENT_0 . common . IDENT_1 IDENT_2 = io . cdap . cdap . IDENT_0 . common . IDENT_1 . builder ( IDENT_3 ) . METHOD_1 ( io . cdap . cdap . IDENT_0 . IDENT_4 . v2 . spec . IDENT_5 . builder ( STRING_0 3 , io . cdap . cdap . IDENT_0 . IDENT_6 . IDENT_7 . IDENT_8 ) . build ( ) ) . METHOD_1 ( io . cdap . cdap . IDENT_0 . IDENT_4 . v2 . spec . IDENT_5 . builder ( STRING_1 , io . cdap . cdap . IDENT_0 . IDENT_6 . IDENT_7 . METHOD_2 ( STRING_1 , Constants . IDENT_9 . IDENT_10 ) ) . build ( ) ) . METHOD_3 ( STRING_1 , STRING_0 3 ) . build ( ) ; IDENT_11 = new io . cdap . cdap . IDENT_0 . IDENT_6 . METHOD_4 ( com . google . common . collect . IDENT_12 . of ( new io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 ( STRING_2 , STRING_0 3 ) ) ) ; java . lang . String IDENT_13 = io . cdap . cdap . IDENT_0 . IDENT_6 . IDENT_14 . METHOD_6 ( IDENT_11 ) ; IDENT_15 . put ( IDENT_13 , IDENT_2 ) ; java . util . Set < io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 > IDENT_16 = new java . util . HashSet ( ) ; IDENT_16 . add ( new io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 ( IDENT_17 , IDENT_18 ) ) ; IDENT_16 . add ( new io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 ( IDENT_18 , IDENT_19 , true ) ) ; IDENT_16 . add ( new io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 ( IDENT_18 , IDENT_20 , false ) ) ; IDENT_16 . add ( new io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 ( IDENT_19 , IDENT_21 ) ) ; IDENT_16 . add ( new io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 ( IDENT_21 , IDENT_22 , true ) ) ; IDENT_16 . add ( new io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 ( IDENT_22 , IDENT_23 ) ) ; IDENT_16 . add ( new io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 ( IDENT_23 , IDENT_24 , true ) ) ; IDENT_16 . add ( new io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 ( IDENT_23 , IDENT_25 , false ) ) ; IDENT_16 . add ( new io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 ( IDENT_21 , IDENT_26 , false ) ) ; IDENT_16 . add ( new io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 ( IDENT_26 , IDENT_27 , true ) ) ; IDENT_16 . add ( new io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 ( IDENT_26 , IDENT_28 , false ) ) ; IDENT_16 . add ( new io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 ( IDENT_28 , IDENT_13 , true ) ) ; io . cdap . cdap . IDENT_0 . IDENT_6 . IDENT_29 expected = new io . cdap . cdap . IDENT_0 . IDENT_6 . METHOD_7 ( IDENT_15 , IDENT_16 ) ; io . cdap . cdap . IDENT_0 . IDENT_6 . METHOD_7 actual = IDENT_6 . plan ( IDENT_30 ) ; "<AssertPlaceHolder>" ; } plan ( io . cdap . cdap . IDENT_0 . IDENT_4 . v2 . spec . IDENT_31 ) { java . util . Set < java . lang . String > IDENT_32 = new java . util . HashSet ( ) ; java . util . Set < java . lang . String > IDENT_33 = new java . util . HashSet ( ) ; java . util . Set < java . lang . String > IDENT_34 = new java . util . HashSet ( ) ; java . util . Set < java . lang . String > IDENT_35 = new java . util . HashSet ( ) ; java . util . Set < java . lang . String > IDENT_36 = new java . util . HashSet ( ) ; java . util . Map < java . lang . String , io . cdap . cdap . IDENT_0 . IDENT_6 . IDENT_37 > IDENT_38 = new java . util . HashMap ( ) ; java . util . Map < java . lang . String , java . util . Set < java . lang . String > > IDENT_39 = new java . util . HashMap ( ) ; java . util . Map < java . lang . String , java . util . Set < java . lang . String > > IDENT_40 = new java . util . HashMap ( ) ; java . util . Map < java . lang . String , io . cdap . cdap . IDENT_0 . IDENT_4 . v2 . spec . IDENT_5 > IDENT_41 = new java . util . HashMap ( ) ; for ( io . cdap . cdap . IDENT_0 . IDENT_4 . v2 . spec . IDENT_5 IDENT_42 : spec . METHOD_8 ( ) ) { java . lang . String IDENT_43 = IDENT_42 . METHOD_9 ( ) . getType ( ) ; IDENT_36 . add ( IDENT_42 . getName ( ) ) ; if ( IDENT_44 . contains ( IDENT_43 ) ) { IDENT_32 . add ( IDENT_42 . getName ( ) ) ; } if ( IDENT_45 . contains ( IDENT_43 ) ) { IDENT_33 . add ( IDENT_42 . getName ( ) ) ; } if ( IDENT_46 . contains ( IDENT_43 ) ) { IDENT_34 . add ( IDENT_42 . getName ( ) ) ; } if ( IDENT_47 . contains ( IDENT_43 ) ) { IDENT_35 . add ( IDENT_42 . getName ( ) ) ; } if ( IDENT_48 . IDENT_49 . equals ( IDENT_43 ) ) { IDENT_38 . put ( IDENT_42 . getName ( ) , new io . cdap . cdap . IDENT_0 . IDENT_6 . METHOD_10 ( null , null ) ) ; IDENT_39 . put ( IDENT_42 . getName ( ) , new java . util . HashSet < java . lang . String > ( ) ) ; IDENT_40 . put ( IDENT_42 . getName ( ) , new java . util . HashSet < java . lang . String > ( ) ) ; } IDENT_41 . put ( IDENT_42 . getName ( ) , IDENT_42 ) ; } if ( spec . METHOD_11 ( ) . isEmpty ( ) ) { if ( ! ( IDENT_34 . METHOD_12 ( IDENT_36 ) ) ) { throw new java . lang . IllegalStateException ( STRING_3 ) ; } java . util . Map < java . lang . String , io . cdap . cdap . IDENT_0 . common . IDENT_1 > IDENT_15 = new java . util . HashMap ( ) ; for ( java . lang . String IDENT_50 : IDENT_34 ) { io . cdap . cdap . IDENT_0 . common . IDENT_1 . Builder IDENT_51 = io . cdap . cdap . IDENT_0 . common . IDENT_1 . builder ( IDENT_52 ) ; io . cdap . cdap . IDENT_0 . common . IDENT_1 IDENT_53 = IDENT_51 . METHOD_1 ( IDENT_41 . get ( IDENT_50 ) ) . build ( ) ; IDENT_15 . put ( IDENT_50 , IDENT_53 ) ; } return new io . cdap . cdap . IDENT_0 . IDENT_6 . METHOD_7 ( IDENT_15 , new java . util . HashSet < io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 > ( ) ) ; } java . util . Set < java . lang . String > IDENT_54 = com . google . common . collect . IDENT_55 . METHOD_13 ( IDENT_34 , IDENT_38 . METHOD_14 ( ) ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_56 = new java . util . HashMap ( ) ; for ( io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 connection : spec . METHOD_11 ( ) ) { if ( IDENT_38 . containsKey ( connection . METHOD_15 ( ) ) ) { IDENT_39 . get ( connection . METHOD_15 ( ) ) . add ( connection . METHOD_16 ( ) ) ; } if ( IDENT_38 . containsKey ( connection . METHOD_16 ( ) ) ) { IDENT_40 . get ( connection . METHOD_16 ( ) ) . add ( connection . METHOD_15 ( ) ) ; } if ( IDENT_38 . containsKey ( connection . METHOD_15 ( ) ) ) { if ( IDENT_38 . containsKey ( connection . METHOD_16 ( ) ) ) { IDENT_56 . put ( connection . METHOD_16 ( ) , connection . METHOD_15 ( ) ) ; } io . cdap . cdap . IDENT_0 . IDENT_6 . METHOD_10 IDENT_57 = IDENT_38 . get ( connection . METHOD_15 ( ) ) ; java . lang . String IDENT_58 ; java . lang . String IDENT_59 ; if ( connection . METHOD_17 ( ) ) { IDENT_58 = connection . METHOD_16 ( ) ; IDENT_59 = IDENT_57 . METHOD_18 ( ) ; } else { IDENT_58 = IDENT_57 . METHOD_19 ( ) ; IDENT_59 = connection . METHOD_16 ( ) ; } IDENT_38 . put ( connection . METHOD_15 ( ) , new io . cdap . cdap . IDENT_0 . IDENT_6 . METHOD_10 ( IDENT_58 , IDENT_59 ) ) ; } } java . util . Map < java . lang . String , java . lang . String > IDENT_60 = new java . util . HashMap ( ) ; java . util . Set < io . cdap . cdap . IDENT_0 . IDENT_6 . METHOD_4 > IDENT_61 = io . cdap . cdap . IDENT_0 . IDENT_6 . IDENT_14 . split ( spec . METHOD_11 ( ) , IDENT_38 . METHOD_14 ( ) , IDENT_32 , IDENT_33 , IDENT_34 , IDENT_35 , IDENT_60 ) ; java . util . Map < java . lang . String , java . lang . String > IDENT_62 = METHOD_20 ( IDENT_38 . METHOD_14 ( ) , IDENT_56 , IDENT_40 , IDENT_39 , IDENT_34 ) ; java . util . Map < java . lang . String , io . cdap . cdap . IDENT_0 . IDENT_6 . METHOD_4 > IDENT_63 = new java . util . HashMap ( ) ; for ( io . cdap . cdap . IDENT_0 . IDENT_6 . METHOD_4 IDENT_64 : IDENT_61 ) { IDENT_63 . put ( io . cdap . cdap . IDENT_0 . IDENT_6 . IDENT_14 . METHOD_6 ( IDENT_64 ) , IDENT_64 ) ; } java . util . Set < io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 > IDENT_16 = new java . util . HashSet ( ) ; java . util . Map < java . lang . String , io . cdap . cdap . IDENT_0 . common . IDENT_1 > IDENT_15 = new java . util . HashMap ( ) ; for ( Map . Entry < java . lang . String , io . cdap . cdap . IDENT_0 . IDENT_6 . METHOD_4 > IDENT_65 : IDENT_63 . entrySet ( ) ) { java . lang . String IDENT_66 = IDENT_65 . getKey ( ) ; io . cdap . cdap . IDENT_0 . IDENT_6 . METHOD_4 IDENT_67 = IDENT_65 . getValue ( ) ; java . util . Set < java . lang . String > IDENT_68 = com . google . common . collect . IDENT_55 . METHOD_21 ( IDENT_54 , IDENT_67 . METHOD_22 ( ) ) ; for ( java . lang . String IDENT_69 : IDENT_68 ) { if ( ! ( IDENT_15 . containsKey ( IDENT_69 ) ) ) { IDENT_15 . put ( IDENT_69 , io . cdap . cdap . IDENT_0 . common . IDENT_1 . builder ( IDENT_52 ) . METHOD_1 ( IDENT_41 . get ( IDENT_69 ) ) . build ( ) ) ; } } if ( ! ( IDENT_54 . METHOD_12 ( IDENT_67 . METHOD_22 ( ) ) ) ) { io . cdap . cdap . IDENT_0 . IDENT_6 . METHOD_4 IDENT_70 = METHOD_23 ( IDENT_67 , IDENT_62 ) ; if ( ! ( com . google . common . collect . IDENT_55 . METHOD_21 ( IDENT_70 . METHOD_22 ( ) , IDENT_54 ) . isEmpty ( ) ) ) { java . util . Set < java . lang . String > nodes = com . google . common . collect . IDENT_55 . METHOD_24 ( IDENT_70 . METHOD_22 ( ) , IDENT_54 ) ; IDENT_70 = IDENT_70 . METHOD_25 ( nodes ) ; } IDENT_15 . put ( IDENT_66 , METHOD_26 ( IDENT_70 , IDENT_60 , IDENT_41 , IDENT_62 ) ) ; } for ( java . lang . String IDENT_71 : com . google . common . collect . IDENT_55 . METHOD_21 ( IDENT_54 , IDENT_67 . METHOD_27 ( ) ) ) { io . cdap . cdap . IDENT_0 . IDENT_6 . METHOD_10 IDENT_57 = IDENT_38 . get ( IDENT_71 ) ; java . lang . Boolean condition = ( IDENT_57 == null ) ? null : IDENT_67 . METHOD_22 ( ) . contains ( IDENT_57 . METHOD_19 ( ) ) ; for ( java . lang . String output : IDENT_67 . METHOD_28 ( IDENT_71 ) ) { if ( IDENT_54 . contains ( output ) ) { IDENT_16 . add ( new io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 ( IDENT_71 , output , condition ) ) ; } else { IDENT_16 . add ( new io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 ( IDENT_71 , IDENT_66 , condition ) ) ; } } } for ( java . lang . String IDENT_72 : com . google . common . collect . IDENT_55 . METHOD_21 ( IDENT_54 , IDENT_67 . METHOD_29 ( ) ) ) { for ( java . lang . String input : IDENT_67 . METHOD_30 ( IDENT_72 ) ) { if ( IDENT_54 . contains ( input ) ) { io . cdap . cdap . IDENT_0 . IDENT_6 . METHOD_10 IDENT_57 = IDENT_38 . get ( input ) ; java . lang . Boolean condition = ( IDENT_57 == null ) ? null : IDENT_67 . METHOD_22 ( ) . contains ( IDENT_57 . METHOD_19 ( ) ) ; IDENT_16 . add ( new io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 ( input , IDENT_72 , condition ) ) ; } else { IDENT_16 . add ( new io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 ( IDENT_66 , IDENT_72 ) ) ; } } } java . util . Set < java . lang . String > IDENT_73 = com . google . common . collect . IDENT_55 . METHOD_24 ( IDENT_67 . METHOD_29 ( ) , IDENT_54 ) ; for ( Map . Entry < java . lang . String , io . cdap . cdap . IDENT_0 . IDENT_6 . METHOD_4 > IDENT_74 : IDENT_63 . entrySet ( ) ) { java . lang . String IDENT_75 = IDENT_74 . getKey ( ) ; io . cdap . cdap . IDENT_0 . IDENT_6 . METHOD_4 IDENT_76 = IDENT_74 . getValue ( ) ; if ( IDENT_66 . equals ( IDENT_75 ) ) { continue ; } if ( ! ( com . google . common . collect . IDENT_55 . METHOD_21 ( IDENT_73 , IDENT_76 . METHOD_27 ( ) ) . isEmpty ( ) ) ) { IDENT_16 . add ( new io . cdap . cdap . IDENT_0 . IDENT_4 . METHOD_5 ( IDENT_66 , IDENT_75 ) ) ; } } } return new io . cdap . cdap . IDENT_0 . IDENT_6 . METHOD_7 ( IDENT_15 , IDENT_16 ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 