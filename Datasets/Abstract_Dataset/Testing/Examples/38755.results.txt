test ( ) { IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 IDENT_6 = new IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_0 ( ) ; IDENT_6 . METHOD_1 ( "name" ) ; IDENT_6 . METHOD_2 ( STRING_0 ) ; IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_7 . IDENT_8 service = new IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_7 . METHOD_3 ( ) ; org . springframework . util . IDENT_9 IDENT_10 = new org . springframework . util . METHOD_4 ( ) ; IDENT_10 . METHOD_5 ( STRING_1 ) ; IDENT_10 . METHOD_6 ( service ) ; IDENT_6 . METHOD_7 ( IDENT_10 ) ; IDENT_6 . METHOD_8 ( ) ; java . util . Map < java . lang . String , java . lang . String > expected = com . google . common . collect . IDENT_11 . METHOD_9 ( ) ; expected . put ( "1" , STRING_2 ) ; expected . put ( "2" , STRING_3 ) ; expected . put ( STRING_4 , STRING_5 ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( ) { java . util . Map < java . lang . String , java . lang . String > IDENT_6 = new java . util . IDENT_12 < java . lang . String , java . lang . String > ( ) ; java . lang . reflect . Method method = org . springframework . util . IDENT_13 . METHOD_11 ( IDENT_14 , STRING_6 ) ; IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_15 < ? > [ ] result = ( ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_15 < ? > [ ] ) ( org . springframework . util . IDENT_13 . METHOD_12 ( method , IDENT_14 ) ) ) ; for ( java . lang . IDENT_15 < ? > e : result ) { IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_16 item = ( ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_16 ) ( e ) ) ; IDENT_6 . put ( item . METHOD_13 ( ) , item . METHOD_14 ( ) ) ; } return java . util . Collections . METHOD_15 ( IDENT_6 ) ; }
org . junit . Assert . assertThat ( IDENT_6 . METHOD_10 ( ) , org . hamcrest . CoreMatchers . is ( expected ) ) 