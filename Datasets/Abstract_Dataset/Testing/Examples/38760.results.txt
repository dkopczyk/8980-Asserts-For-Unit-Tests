METHOD_0 ( ) { java . util . List < com . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_4 > IDENT_5 = METHOD_1 ( STRING_0 ) ; com . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_4 process = IDENT_5 . get ( 0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { java . util . List < com . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_4 > IDENT_5 = new java . util . ArrayList < com . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_4 > ( ) ; com . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_4 IDENT_6 = null ; javax . xml . IDENT_7 . IDENT_8 IDENT_9 = javax . xml . IDENT_7 . IDENT_8 . newInstance ( STRING_1 ) ; javax . xml . IDENT_7 . IDENT_10 IDENT_11 = IDENT_9 . METHOD_2 ( ) ; java . io . File IDENT_12 = new java . io . File ( getClass ( ) . getResource ( ( STRING_2 + IDENT_13 ) ) . METHOD_3 ( ) ) ; javax . xml . IDENT_7 . IDENT_14 < com . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_15 > root = IDENT_11 . METHOD_4 ( new javax . xml . transform . stream . METHOD_5 ( IDENT_12 ) , com . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_15 . class ) ; com . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_15 IDENT_16 = root . getValue ( ) ; for ( java . util . Iterator < javax . xml . IDENT_7 . IDENT_14 < ? extends com . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_17 > > iterator = IDENT_16 . METHOD_6 ( ) . iterator ( ) ; iterator . hasNext ( ) ; ) { com . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_17 IDENT_18 = iterator . next ( ) . getValue ( ) ; if ( IDENT_18 . getClass ( ) . equals ( com . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_4 . class ) ) { IDENT_6 = ( ( com . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_4 ) ( IDENT_18 ) ) ; IDENT_5 . add ( IDENT_6 ) ; } } return IDENT_5 ; }
org . junit . Assert . assertNotNull ( process ) 