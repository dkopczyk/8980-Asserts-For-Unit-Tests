METHOD_0 ( ) { net . IDENT_0 . core . business . streaming . device . IDENT_1 device = METHOD_1 ( net . IDENT_0 . core . business . streaming . device . IDENT_1 . class ) ; java . net . IDENT_2 address = METHOD_1 ( java . net . IDENT_2 . class ) ; expect ( device . getId ( ) ) . andReturn ( STRING_0 ) ; expect ( device . METHOD_2 ( ) ) . andReturn ( address ) ; expect ( address . METHOD_3 ( ) ) . andReturn ( STRING_1 ) ; replay ( device , address ) ; net . IDENT_0 . core . business . streaming . device . IDENT_3 IDENT_4 = new net . IDENT_0 . core . business . streaming . device . METHOD_4 ( ) ; IDENT_4 . METHOD_5 ( device ) ; java . util . Collection < net . IDENT_0 . core . business . streaming . device . IDENT_1 > IDENT_5 = IDENT_4 . METHOD_6 ( STRING_1 ) ; "<AssertPlaceHolder>" ; verify ( device , address ) ; } METHOD_6 ( java . lang . String ) { return IDENT_4 . METHOD_6 ( IDENT_6 ) ; }
org . junit . Assert . assertEquals ( 1 , IDENT_5 . size ( ) ) 