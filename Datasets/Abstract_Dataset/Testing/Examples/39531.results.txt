METHOD_0 ( ) { org . openscience . cdk . interfaces . IDENT_0 IDENT_1 = new org . openscience . cdk . METHOD_1 ( STRING_0 ) ; IDENT_1 . METHOD_2 ( new javax . IDENT_2 . METHOD_3 ( 0 , 0 ) ) ; org . openscience . cdk . interfaces . IDENT_0 IDENT_3 = new org . openscience . cdk . METHOD_1 ( STRING_0 ) ; IDENT_3 . METHOD_2 ( new javax . IDENT_2 . METHOD_3 ( 1 , 0 ) ) ; org . openscience . cdk . interfaces . IDENT_4 IDENT_5 = new org . openscience . cdk . METHOD_4 ( ) ; org . openscience . cdk . interfaces . IDENT_6 IDENT_7 = new org . openscience . cdk . METHOD_5 ( ) ; IDENT_7 . METHOD_6 ( IDENT_5 ) ; IDENT_5 . METHOD_7 ( IDENT_1 ) ; IDENT_5 . METHOD_7 ( IDENT_3 ) ; IDENT_5 . METHOD_8 ( 0 , 1 , IDENT_8 . IDENT_9 . IDENT_10 ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( org . openscience . cdk . interfaces . IDENT_4 ) { double IDENT_11 = 0 ; java . util . Iterator < org . openscience . cdk . interfaces . IDENT_8 > IDENT_12 = container . METHOD_10 ( ) . iterator ( ) ; int IDENT_13 = 0 ; while ( METHOD_10 . hasNext ( ) ) { org . openscience . cdk . interfaces . IDENT_8 IDENT_14 = METHOD_10 . next ( ) ; org . openscience . cdk . interfaces . IDENT_0 IDENT_1 = IDENT_14 . METHOD_11 ( ) ; org . openscience . cdk . interfaces . IDENT_0 IDENT_3 = IDENT_14 . METHOD_12 ( ) ; if ( ( ( IDENT_1 . METHOD_13 ( ) ) != null ) && ( ( IDENT_3 . METHOD_13 ( ) ) != null ) ) { IDENT_13 ++ ; IDENT_11 += org . openscience . cdk . geometry . IDENT_15 . METHOD_14 ( IDENT_14 ) ; } } return IDENT_11 / IDENT_13 ; }
org . junit . Assert . assertEquals ( 1.0 , org . openscience . cdk . geometry . IDENT_15 . METHOD_9 ( IDENT_7 ) , 0.0 ) 