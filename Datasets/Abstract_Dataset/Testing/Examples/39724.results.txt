METHOD_0 ( ) { org . openscience . cdk . interfaces . IDENT_0 IDENT_1 = parser . METHOD_1 ( STRING_0 ) ; org . openscience . cdk . tools . IDENT_2 . IDENT_3 . METHOD_2 ( IDENT_1 ) ; org . openscience . cdk . tools . IDENT_4 IDENT_5 = org . openscience . cdk . tools . IDENT_4 . getInstance ( IDENT_1 . METHOD_3 ( ) ) ; IDENT_5 . METHOD_4 ( IDENT_1 ) ; org . openscience . cdk . tools . IDENT_2 . IDENT_3 . METHOD_5 ( IDENT_1 ) ; org . openscience . cdk . IDENT_6 . IDENT_7 . METHOD_6 ( ) . apply ( IDENT_1 ) ; org . openscience . cdk . IDENT_8 . IDENT_9 IDENT_10 = new org . openscience . cdk . IDENT_8 . METHOD_7 ( org . openscience . cdk . IDENT_11 . getInstance ( ) ) ; java . util . IDENT_12 IDENT_13 = IDENT_10 . METHOD_8 ( IDENT_1 ) . METHOD_9 ( ) ; java . util . IDENT_12 ref = org . openscience . cdk . IDENT_8 . METHOD_7 . decode ( STRING_1 ) ; "<AssertPlaceHolder>" ; } decode ( java . lang . String ) { byte [ ] IDENT_13 = org . openscience . cdk . IDENT_8 . METHOD_7 . METHOD_10 ( IDENT_14 ) ; if ( ( IDENT_13 . length ) < 4 ) { throw new java . lang . IllegalArgumentException ( STRING_2 ) ; } int len = ( ( ( ( IDENT_13 [ 0 ] ) << INT_0 ) | ( ( IDENT_13 [ 1 ] ) << 16 ) ) | ( ( IDENT_13 [ 2 ] ) << 8 ) ) | ( ( IDENT_13 [ 3 ] ) & 255 ) ; if ( len != ( org . openscience . cdk . IDENT_8 . METHOD_7 . IDENT_15 ) ) { throw new java . lang . IllegalArgumentException ( STRING_2 ) ; } org . openscience . cdk . IDENT_8 . METHOD_7 IDENT_16 = new org . openscience . cdk . IDENT_8 . METHOD_7 ( null ) ; for ( int i = 0 ; i < ( IDENT_16 . IDENT_17 . length ) ; ++ i ) { IDENT_16 . IDENT_17 [ i ] = IDENT_13 [ ( i + 4 ) ] ; } java . util . IDENT_12 ret = new java . util . METHOD_11 ( org . openscience . cdk . IDENT_8 . METHOD_7 . IDENT_15 ) ; for ( int i = 0 ; i < ( org . openscience . cdk . IDENT_8 . METHOD_7 . IDENT_15 ) ; i ++ ) { if ( IDENT_16 . METHOD_12 ( i ) ) ret . set ( i ) ; } return ret ; }
org . junit . Assert . assertEquals ( ref , IDENT_13 ) 