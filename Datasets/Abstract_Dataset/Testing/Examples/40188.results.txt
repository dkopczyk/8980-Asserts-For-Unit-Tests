METHOD_0 ( ) { org . openscience . cdk . interfaces . IDENT_0 builder = org . openscience . cdk . IDENT_1 . IDENT_2 . getInstance ( ) ; org . openscience . cdk . interfaces . IDENT_3 IDENT_4 = builder . METHOD_1 ( ) ; IDENT_4 . METHOD_2 ( builder . newInstance ( org . openscience . cdk . interfaces . IDENT_5 . class , STRING_0 ) ) ; IDENT_4 . METHOD_2 ( builder . newInstance ( org . openscience . cdk . interfaces . IDENT_5 . class , STRING_1 ) ) ; IDENT_4 . METHOD_2 ( builder . newInstance ( org . openscience . cdk . interfaces . IDENT_5 . class , STRING_1 ) ) ; IDENT_4 . METHOD_2 ( builder . newInstance ( org . openscience . cdk . interfaces . IDENT_5 . class , STRING_1 ) ) ; IDENT_4 . METHOD_2 ( builder . newInstance ( org . openscience . cdk . interfaces . IDENT_5 . class , STRING_1 ) ) ; IDENT_4 . METHOD_2 ( builder . newInstance ( org . openscience . cdk . interfaces . IDENT_5 . class , STRING_2 ) ) ; IDENT_4 . METHOD_2 ( builder . newInstance ( org . openscience . cdk . interfaces . IDENT_5 . class , STRING_0 ) ) ; IDENT_4 . METHOD_3 ( 1 , 2 , IDENT_6 . IDENT_7 . IDENT_8 ) ; IDENT_4 . METHOD_3 ( 2 , 3 , IDENT_6 . IDENT_7 . IDENT_8 ) ; IDENT_4 . METHOD_3 ( 3 , 4 , IDENT_6 . IDENT_7 . IDENT_8 ) ; IDENT_4 . METHOD_3 ( 4 , 5 , IDENT_6 . IDENT_7 . IDENT_8 ) ; IDENT_4 . METHOD_3 ( 5 , 6 , IDENT_6 . IDENT_7 . IDENT_8 ) ; IDENT_4 . METHOD_3 ( 0 , 5 , IDENT_6 . IDENT_7 . IDENT_8 ) ; IDENT_4 . METHOD_4 ( 1 ) ; org . openscience . cdk . IDENT_9 . IDENT_10 IDENT_11 = new org . openscience . cdk . IDENT_9 . METHOD_5 ( builder ) ; org . openscience . cdk . interfaces . IDENT_3 IDENT_12 = IDENT_11 . METHOD_6 ( STRING_3 ) ; org . openscience . cdk . IDENT_9 . IDENT_13 IDENT_14 = new org . openscience . cdk . IDENT_9 . METHOD_7 ( ( ( IDENT_15 . IDENT_16 ) | ( IDENT_15 . IDENT_17 ) ) ) ; "<AssertPlaceHolder>" ; } create ( java . lang . String ) { return new org . openscience . cdk . IDENT_18 . METHOD_8 ( IDENT_18 , null ) ; }
org . junit . Assert . assertThat ( IDENT_14 . create ( IDENT_4 ) , org . hamcrest . CoreMatchers . is ( IDENT_14 . create ( IDENT_12 ) ) ) 