METHOD_0 ( ) { final int [ ] i = new int [ 1 ] ; new IDENT_0 . IDENT_1 < com . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 > ( ) { @ IDENT_0 . IDENT_7 void METHOD_1 ( double [ ] IDENT_8 ) { "<AssertPlaceHolder>" ; } } ; while ( ( i [ 0 ] ) < ( com . IDENT_2 . IDENT_3 . IDENT_9 . IDENT_10 . IDENT_11 . length ) ) { IDENT_12 = new com . IDENT_2 . IDENT_3 . IDENT_9 . METHOD_2 ( com . IDENT_2 . IDENT_3 . IDENT_9 . IDENT_10 . IDENT_11 [ i [ 0 ] ] , com . IDENT_2 . IDENT_3 . IDENT_9 . IDENT_10 . IDENT_13 ) ; IDENT_12 . METHOD_3 ( new double [ INT_0 ] ) ; ( i [ 0 ] ) ++ ; } } METHOD_1 ( double [ ] ) { org . junit . Assert . assertThat ( IDENT_8 . length , org . hamcrest . Matchers . is ( org . hamcrest . Matchers . equalTo ( com . IDENT_2 . IDENT_3 . IDENT_9 . IDENT_10 . IDENT_14 [ i [ 0 ] ] ) ) ) ; }
org . junit . Assert . assertThat ( IDENT_8 . length , org . hamcrest . Matchers . is ( org . hamcrest . Matchers . equalTo ( com . IDENT_2 . IDENT_3 . IDENT_9 . IDENT_10 . IDENT_14 [ i [ 0 ] ] ) ) ) 