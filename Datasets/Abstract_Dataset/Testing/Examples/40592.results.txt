METHOD_0 ( ) { System . out . println ( ( ( IDENT_0 . IDENT_1 . IDENT_2 . core . entry . IDENT_3 . IDENT_4 ) + STRING_0 ) ) ; java . lang . String IDENT_5 = STRING_1 ; java . lang . String IDENT_6 = STRING_2 ; IDENT_0 . IDENT_1 . IDENT_2 . core . api . IDENT_7 IDENT_8 = new IDENT_0 . IDENT_1 . IDENT_2 . core . api . METHOD_1 ( ) ; IDENT_8 . setValue ( IDENT_5 ) ; IDENT_9 . METHOD_2 ( IDENT_8 ) ; IDENT_8 . setValue ( IDENT_6 ) ; boolean IDENT_10 = false ; try { IDENT_9 . METHOD_2 ( IDENT_8 ) ; } catch ( IDENT_0 . IDENT_1 . IDENT_2 . core . api . exceptions . IDENT_11 ex ) { IDENT_10 = true ; } "<AssertPlaceHolder>" ; } METHOD_2 ( IDENT_0 . IDENT_1 . IDENT_2 . core . api . METHOD_1 ) { if ( IDENT_12 == null ) return ; METHOD_3 ( ) ; java . lang . String IDENT_13 = IDENT_14 . get ( ( ( IDENT_12 . METHOD_4 ( ) ) + STRING_3 ) ) ; if ( IDENT_13 != null ) { java . util . List < java . lang . String > IDENT_15 = java . util . Arrays . asList ( IDENT_13 . split ( STRING_4 ) ) ; if ( IDENT_15 . contains ( IDENT_12 . METHOD_5 ( ) ) ) throw new IDENT_0 . IDENT_1 . IDENT_2 . core . api . exceptions . METHOD_6 ( IDENT_12 , STRING_5 ) ; } else { if ( IDENT_0 . IDENT_1 . IDENT_2 . core . IDENT_16 . IDENT_17 . IDENT_18 . contains ( IDENT_12 . METHOD_5 ( ) ) ) throw new IDENT_0 . IDENT_1 . IDENT_2 . core . api . exceptions . METHOD_6 ( IDENT_12 , STRING_5 ) ; } }
org . junit . Assert . assertTrue ( IDENT_10 ) 