filter ( ) { java . lang . Object IDENT_0 = new java . lang . Object ( ) ; java . lang . Object IDENT_1 = new java . lang . Object ( ) ; java . lang . Object IDENT_2 = new java . lang . Object ( ) ; java . util . List < java . lang . Object > IDENT_3 = new java . util . ArrayList < java . lang . Object > ( ) ; IDENT_3 . add ( IDENT_0 ) ; IDENT_3 . add ( IDENT_1 ) ; java . util . List < java . lang . Object > IDENT_4 = new java . util . ArrayList < java . lang . Object > ( ) ; IDENT_4 . add ( IDENT_1 ) ; IDENT_4 . add ( IDENT_2 ) ; doReturn ( IDENT_3 ) . doReturn ( IDENT_4 ) . when ( filter ) . filter ( METHOD_0 ( ) ) ; java . util . List < java . lang . Object > IDENT_5 = IDENT_6 . filter ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } get ( byte [ ] ) { return METHOD_1 ( ) . get ( key ) ; }
org . junit . Assert . assertEquals ( IDENT_1 , IDENT_5 . get ( 0 ) ) 