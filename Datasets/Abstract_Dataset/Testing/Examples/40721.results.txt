get ( ) { byte [ ] key = new byte [ ] { STRING_0 } ; byte [ ] value = new byte [ ] { STRING_0 } ; doReturn ( value ) . when ( IDENT_0 ) . getBytes ( ) ; byte [ ] IDENT_1 = IDENT_2 . get ( key ) ; verify ( IDENT_3 ) . execute ( IDENT_4 . IDENT_5 , key ) ; "<AssertPlaceHolder>" ; } execute ( com . IDENT_6 . IDENT_7 . redis . client . IDENT_8 , byte [ ] [ ] ) { connection . METHOD_0 ( ) ; com . IDENT_6 . IDENT_7 . redis . client . IDENT_9 IDENT_10 = connection . METHOD_1 ( ) ; IDENT_10 . write ( IDENT_11 . IDENT_12 ) ; IDENT_10 . write ( ( ( args . length ) + 1 ) ) ; IDENT_10 . METHOD_2 ( ) ; IDENT_10 . write ( IDENT_11 . IDENT_13 ) ; IDENT_10 . write ( command . getBytes ( ) . length ) ; IDENT_10 . METHOD_2 ( ) ; IDENT_10 . write ( command . getBytes ( ) ) ; IDENT_10 . METHOD_2 ( ) ; for ( final byte [ ] IDENT_14 : args ) { IDENT_10 . write ( IDENT_11 . IDENT_13 ) ; IDENT_10 . write ( IDENT_14 . length ) ; IDENT_10 . METHOD_2 ( ) ; IDENT_10 . write ( IDENT_14 ) ; IDENT_10 . METHOD_2 ( ) ; } IDENT_10 . METHOD_3 ( ) ; }
org . junit . Assert . assertEquals ( value , IDENT_1 ) 