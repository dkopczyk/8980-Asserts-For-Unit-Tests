METHOD_0 ( ) { java . lang . String s = STRING_0 ; byte [ ] IDENT_0 = s . getBytes ( ) ; java . lang . String IDENT_1 = IDENT_2 . IDENT_3 . IDENT_4 . encode ( IDENT_0 ) ; System . out . println ( ( STRING_1 + IDENT_1 ) ) ; byte [ ] IDENT_5 = IDENT_2 . IDENT_3 . IDENT_4 . decode ( IDENT_1 ) ; java . lang . String IDENT_6 = new java . lang . String ( IDENT_5 ) ; System . out . println ( ( STRING_2 + IDENT_6 ) ) ; "<AssertPlaceHolder>" ; } decode ( java . lang . String ) { byte [ ] data = str . getBytes ( ) ; int len = data . length ; java . io . ByteArrayOutputStream buf = new java . io . ByteArrayOutputStream ( len ) ; try { int i = 0 ; int IDENT_7 ; int IDENT_8 ; int IDENT_9 ; int IDENT_10 ; while ( i < len ) { do { IDENT_10 = data [ ( i ++ ) ] ; if ( IDENT_10 == INT_0 ) { return buf . toByteArray ( ) ; } IDENT_10 = IDENT_2 . IDENT_3 . IDENT_4 . IDENT_11 [ IDENT_10 ] ; } while ( ( i < len ) && ( IDENT_10 == ( - 1 ) ) ) ; if ( IDENT_10 == ( - 1 ) ) { break ; } buf . write ( ( ( int ) ( ( ( IDENT_9 & 3 ) << 6 ) | IDENT_10 ) ) ) ; } return buf . toByteArray ( ) ; } finally { buf . close ( ) ; } }
org . junit . Assert . assertEquals ( s , IDENT_6 ) 