METHOD_0 ( ) { de . IDENT_0 . IDENT_1 . jannovar . reference . IDENT_2 IDENT_3 = new de . IDENT_0 . IDENT_1 . jannovar . reference . METHOD_1 ( 3 , STRING_0 , "" ) ; de . IDENT_0 . IDENT_1 . jannovar . reference . METHOD_1 IDENT_4 = de . IDENT_0 . IDENT_1 . jannovar . reference . IDENT_5 . METHOD_2 ( ref , IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String , de . IDENT_0 . IDENT_1 . jannovar . reference . METHOD_1 ) { if ( ( ( IDENT_6 . METHOD_3 ( ) . length ( ) ) == 0 ) || ( ( IDENT_6 . METHOD_4 ( ) . length ( ) ) != 0 ) ) return IDENT_6 ; int IDENT_7 = 0 ; final int IDENT_8 = IDENT_6 . METHOD_3 ( ) . length ( ) ; while ( ( ( ( ( IDENT_6 . METHOD_5 ( ) ) + IDENT_8 ) + IDENT_7 ) < ( ref . length ( ) ) ) && ( ( ref . charAt ( IDENT_6 . METHOD_5 ( ) ) ) == ( ref . charAt ( ( ( ( IDENT_6 . METHOD_5 ( ) ) + IDENT_8 ) + IDENT_7 ) ) ) ) ) IDENT_7 += 1 ; if ( IDENT_7 == 0 ) return IDENT_6 ; java . lang . StringBuilder IDENT_9 = new java . lang . StringBuilder ( ) ; IDENT_9 . append ( ref . substring ( ( ( IDENT_6 . METHOD_5 ( ) ) + IDENT_7 ) , ( ( ( IDENT_6 . METHOD_5 ( ) ) + IDENT_7 ) + ( IDENT_6 . METHOD_3 ( ) . length ( ) ) ) ) ) ; return new de . IDENT_0 . IDENT_1 . jannovar . reference . METHOD_1 ( ( ( IDENT_6 . METHOD_5 ( ) ) + IDENT_7 ) , IDENT_9 . toString ( ) , "" ) ; }
org . junit . Assert . assertEquals ( new de . IDENT_0 . IDENT_1 . jannovar . reference . METHOD_1 ( 3 , STRING_0 , "" ) , IDENT_4 ) 