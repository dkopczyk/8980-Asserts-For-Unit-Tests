METHOD_0 ( ) { java . lang . String host = STRING_0 ; int port = INT_0 ; int IDENT_0 = 5 ; final org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 client = new org . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( ) . METHOD_2 ( host ) . METHOD_3 ( port ) . METHOD_4 ( INT_1 ) . METHOD_5 ( IDENT_0 ) . build ( ) ; try { final java . util . concurrent . IDENT_5 IDENT_6 = new java . util . concurrent . METHOD_6 ( 1 ) ; client . get ( new org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_7 < java . lang . String > ( ) { @ org . IDENT_1 . IDENT_2 . IDENT_3 . test . connection . Override public void METHOD_7 ( java . lang . Throwable IDENT_8 ) { } @ org . IDENT_1 . IDENT_2 . IDENT_3 . test . connection . Override public void METHOD_8 ( java . lang . String result ) { IDENT_6 . METHOD_9 ( ) ; } } , STRING_1 ) ; IDENT_6 . METHOD_10 ( ) ; java . lang . Thread . sleep ( INT_2 ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . IDENT_9 e ) { e . printStackTrace ( ) ; } finally { client . METHOD_11 ( ) ; } } METHOD_12 ( ) { METHOD_13 ( ) ; return IDENT_10 . METHOD_14 ( ) ; }
org . junit . Assert . assertEquals ( 1 , client . METHOD_12 ( ) ) 