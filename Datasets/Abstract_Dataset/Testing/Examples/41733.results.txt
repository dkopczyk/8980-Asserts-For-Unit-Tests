METHOD_0 ( ) { driver . get ( IDENT_0 . IDENT_1 ) ; org . openqa . selenium . IDENT_2 IDENT_3 = driver . METHOD_1 ( org . openqa . selenium . IDENT_4 . id ( STRING_0 ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { java . lang . Object value = execute ( IDENT_5 . IDENT_6 , com . google . common . collect . ImmutableMap . of ( STRING_1 , id ) ) . getValue ( ) ; try { return ( ( java . lang . Boolean ) ( value ) ) ; } catch ( java . lang . IDENT_7 ex ) { throw new org . openqa . selenium . METHOD_3 ( ( STRING_2 + value ) , ex ) ; } }
org . junit . Assert . assertTrue ( IDENT_3 . METHOD_2 ( ) ) 