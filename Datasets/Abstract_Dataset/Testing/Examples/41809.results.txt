METHOD_0 ( ) { org . openqa . selenium . IDENT_0 IDENT_1 = driver . METHOD_1 ( org . openqa . selenium . IDENT_2 . id ( STRING_0 ) ) ; IDENT_1 . METHOD_2 ( ) ; IDENT_1 . METHOD_3 ( STRING_1 ) ; org . junit . Assert . assertThat ( IDENT_1 . getText ( ) , org . hamcrest . Matchers . is ( STRING_1 ) ) ; org . openqa . selenium . IDENT_0 result = driver . METHOD_1 ( org . openqa . selenium . IDENT_2 . id ( STRING_2 ) ) ; "<AssertPlaceHolder>" ; IDENT_1 = driver . METHOD_1 ( org . openqa . selenium . IDENT_2 . id ( STRING_3 ) ) ; IDENT_1 . METHOD_2 ( ) ; IDENT_1 . METHOD_3 ( STRING_1 ) ; org . junit . Assert . assertThat ( IDENT_1 . getText ( ) , org . hamcrest . Matchers . is ( STRING_1 ) ) ; } getText ( ) { return IDENT_3 . getText ( ) ; }
org . junit . Assert . assertThat ( result . getText ( ) , org . hamcrest . Matchers . is ( STRING_1 ) ) 