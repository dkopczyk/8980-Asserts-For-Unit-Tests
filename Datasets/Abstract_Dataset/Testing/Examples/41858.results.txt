METHOD_0 ( ) { org . openqa . selenium . remote . IDENT_0 element = new org . openqa . selenium . remote . METHOD_1 ( ) ; element . setId ( STRING_0 ) ; org . openqa . selenium . remote . IDENT_1 IDENT_2 = METHOD_2 ( ) ; IDENT_2 . METHOD_3 ( "foo" , new org . openqa . selenium . remote . METHOD_4 ( ) { public java . lang . Class < ? > METHOD_5 ( ) { return org . openqa . selenium . remote . IDENT_3 . IDENT_4 . class ; } public org . openqa . selenium . remote . IDENT_5 METHOD_6 ( java . lang . Object value ) { return new org . openqa . selenium . remote . METHOD_7 ( ) { public java . lang . Object invoke ( org . openqa . selenium . remote . IDENT_6 IDENT_7 , java . lang . Object IDENT_8 , java . lang . reflect . Method method , java . lang . Object OP_0 args ) { return STRING_1 ; } } ; } } ) ; final org . openqa . selenium . remote . IDENT_9 IDENT_10 = new org . openqa . selenium . remote . METHOD_8 ( ) ; IDENT_10 . METHOD_9 ( "foo" , true ) ; org . openqa . selenium . remote . IDENT_3 . IDENT_11 executor = new org . openqa . selenium . remote . IDENT_3 . METHOD_10 ( IDENT_10 ) ; org . openqa . selenium . remote . IDENT_12 parent = new org . openqa . selenium . remote . METHOD_11 ( executor , IDENT_10 ) { @ org . openqa . selenium . remote . Override public org . openqa . selenium . IDENT_13 METHOD_12 ( ) { return IDENT_10 ; } } ; element . METHOD_13 ( parent ) ; org . openqa . selenium . IDENT_14 IDENT_15 = IDENT_2 . METHOD_14 ( element ) ; "<AssertPlaceHolder>" ; executor . expect ( IDENT_16 . IDENT_17 , com . google . common . collect . ImmutableMap . of ( STRING_2 , STRING_0 ) , null ) ; IDENT_15 . METHOD_15 ( ) ; } METHOD_14 ( org . openqa . selenium . remote . METHOD_1 ) { org . openqa . selenium . remote . METHOD_11 parent = ( ( org . openqa . selenium . remote . METHOD_11 ) ( element . METHOD_16 ( ) ) ) ; if ( parent == null ) { return element ; } return create ( parent , IDENT_18 , element ) ; }
org . junit . Assert . assertTrue ( ( IDENT_15 instanceof org . openqa . selenium . remote . IDENT_3 . IDENT_4 ) ) 