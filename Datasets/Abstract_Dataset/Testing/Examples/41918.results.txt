METHOD_0 ( ) { final org . openqa . selenium . support . IDENT_0 . IDENT_1 . IDENT_2 driver = mock ( org . openqa . selenium . support . IDENT_0 . IDENT_1 . IDENT_2 . class ) ; final org . openqa . selenium . IDENT_3 IDENT_4 = mock ( org . openqa . selenium . IDENT_3 . class , STRING_0 ) ; final org . openqa . selenium . IDENT_3 IDENT_5 = mock ( org . openqa . selenium . support . IDENT_0 . IDENT_1 . IDENT_6 . class , STRING_1 ) ; final org . openqa . selenium . IDENT_3 IDENT_7 = mock ( org . openqa . selenium . support . IDENT_0 . IDENT_1 . IDENT_6 . class , STRING_2 ) ; final org . openqa . selenium . IDENT_3 IDENT_8 = mock ( org . openqa . selenium . support . IDENT_0 . IDENT_1 . IDENT_6 . class , STRING_3 ) ; final org . openqa . selenium . IDENT_3 IDENT_9 = mock ( org . openqa . selenium . support . IDENT_0 . IDENT_1 . IDENT_6 . class , STRING_4 ) ; final java . util . List < org . openqa . selenium . IDENT_3 > IDENT_10 = new java . util . ArrayList < org . openqa . selenium . IDENT_3 > ( ) ; final java . util . List < org . openqa . selenium . IDENT_3 > IDENT_11 = new java . util . ArrayList < org . openqa . selenium . IDENT_3 > ( ) ; IDENT_11 . add ( IDENT_4 ) ; IDENT_11 . add ( IDENT_5 ) ; final java . util . List < org . openqa . selenium . IDENT_3 > IDENT_12 = new java . util . ArrayList < org . openqa . selenium . IDENT_3 > ( ) ; IDENT_12 . add ( IDENT_7 ) ; IDENT_12 . add ( IDENT_8 ) ; final java . util . List < org . openqa . selenium . IDENT_3 > IDENT_13 = new java . util . ArrayList < org . openqa . selenium . IDENT_3 > ( ) ; IDENT_13 . add ( IDENT_9 ) ; final java . util . List < org . openqa . selenium . IDENT_3 > IDENT_14 = new java . util . ArrayList < org . openqa . selenium . IDENT_3 > ( ) ; IDENT_14 . addAll ( IDENT_12 ) ; IDENT_14 . addAll ( IDENT_13 ) ; when ( driver . METHOD_1 ( STRING_5 ) ) . thenReturn ( IDENT_10 ) ; org . openqa . selenium . support . IDENT_0 . IDENT_15 IDENT_16 = new org . openqa . selenium . support . IDENT_0 . METHOD_2 ( org . openqa . selenium . IDENT_17 . name ( STRING_5 ) , org . openqa . selenium . IDENT_17 . name ( STRING_6 ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . openqa . selenium . IDENT_17 ) { return IDENT_16 . METHOD_3 ( this ) ; }
org . junit . Assert . assertThat ( IDENT_16 . METHOD_3 ( driver ) , org . hamcrest . Matchers . equalTo ( IDENT_10 ) ) 