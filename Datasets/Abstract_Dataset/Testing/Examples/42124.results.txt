METHOD_0 ( ) { controller . METHOD_1 ( new net . IDENT_0 . api . IDENT_1 . IDENT_2 . METHOD_2 ( ) , 1 ) ; controller . run ( ) ; controller . run ( ) ; "<AssertPlaceHolder>" ; } iterator ( ) { final java . util . Iterator < net . IDENT_0 . api . IDENT_1 . IDENT_3 > IDENT_4 = IDENT_5 . iterator ( ) ; return new java . util . Iterator < net . IDENT_0 . api . IDENT_1 . IDENT_3 > ( ) { net . IDENT_0 . api . IDENT_1 . IDENT_3 IDENT_6 ; @ net . IDENT_0 . api . IDENT_1 . Override public boolean hasNext ( ) { return IDENT_4 . hasNext ( ) ; } @ net . IDENT_0 . api . IDENT_1 . Override public net . IDENT_0 . api . IDENT_1 . IDENT_3 next ( ) { return IDENT_6 = IDENT_4 . next ( ) ; } @ net . IDENT_0 . api . IDENT_1 . Override public void remove ( ) { IDENT_4 . remove ( ) ; if ( ( IDENT_6 . METHOD_3 ( ) ) == ( IDENT_7 ) ) { METHOD_4 ( ) ; } } } ; }
org . junit . Assert . assertThat ( controller . iterator ( ) . hasNext ( ) , org . hamcrest . CoreMatchers . is ( false ) ) 