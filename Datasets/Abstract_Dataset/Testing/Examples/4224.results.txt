METHOD_0 ( ) { final int count = 5 ; final java . util . List < java . lang . Integer > data = new java . util . ArrayList < java . lang . Integer > ( count ) ; for ( int i = 0 ; i < count ; i ++ ) { data . add ( i ) ; } com . IDENT_0 . stream . IDENT_1 stream = com . IDENT_0 . stream . IDENT_1 . of ( new com . IDENT_0 . stream . IDENT_2 . IDENT_3 < java . lang . Integer > ( data ) ) . filter ( com . IDENT_0 . stream . IDENT_4 . METHOD_1 ( 2 ) ) ; for ( int i = 0 ; i < count ; i ++ ) { data . add ( ( count + i ) ) ; } "<AssertPlaceHolder>" ; } count ( ) { long count = 0 ; while ( iterator . hasNext ( ) ) { iterator . METHOD_2 ( ) ; count ++ ; } return count ; }
org . junit . Assert . assertEquals ( count , stream . count ( ) ) 