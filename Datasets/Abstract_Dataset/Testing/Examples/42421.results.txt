METHOD_0 ( ) { com . IDENT_0 . IDENT_1 < java . lang . String , java . lang . String > IDENT_2 = com . IDENT_0 . IDENT_3 . METHOD_1 ( ) ; IDENT_2 . add ( STRING_0 ) ; IDENT_2 . add ( STRING_1 ) ; java . lang . String node = IDENT_2 . get ( STRING_2 ) ; IDENT_2 . remove ( node ) ; IDENT_2 . add ( node ) ; "<AssertPlaceHolder>" ; } get ( IDENT_4 ) { long IDENT_5 = Long . IDENT_6 ; IDENT_7 max = null ; for ( IDENT_7 node : IDENT_8 ) { long IDENT_9 = IDENT_10 . METHOD_2 ( ) . METHOD_3 ( key , IDENT_11 ) . METHOD_3 ( node , IDENT_12 ) . hash ( ) . METHOD_4 ( ) ; if ( IDENT_9 > IDENT_5 ) { max = node ; IDENT_5 = IDENT_9 ; } } return max ; }
org . junit . Assert . assertEquals ( node , IDENT_2 . get ( STRING_2 ) ) 