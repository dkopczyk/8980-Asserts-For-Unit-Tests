METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = METHOD_1 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } validate ( com . IDENT_0 . IDENT_1 . validation . IDENT_5 . IDENT_6 , com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 , com . IDENT_0 . IDENT_1 . validation . IDENT_7 . components . IDENT_8 ) { com . google . common . base . IDENT_9 . METHOD_2 ( context ) ; com . google . common . base . IDENT_9 . METHOD_2 ( IDENT_4 ) ; com . google . common . base . IDENT_9 . METHOD_2 ( path ) ; path = METHOD_3 ( IDENT_4 , "name" , path ) ; java . lang . String IDENT_10 = IDENT_4 . getName ( ) ; java . lang . String IDENT_11 = context . IDENT_12 . getName ( ) . toLowerCase ( ) ; if ( ( ! ( IDENT_10 . startsWith ( IDENT_11 ) ) ) && ( ! ( IDENT_13 . contains ( IDENT_10 ) ) ) ) { java . lang . String msg = java . lang . String . format ( STRING_1 , IDENT_10 , IDENT_11 ) ; return METHOD_4 ( msg , IDENT_4 , IDENT_10 , path ) ; } return METHOD_5 ( ) ; }
org . junit . Assert . assertTrue ( validator . validate ( context , IDENT_4 , root ) . isEmpty ( ) ) 