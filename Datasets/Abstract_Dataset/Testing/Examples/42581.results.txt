METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; org . antlr . runtime . tree . IDENT_1 tree = com . IDENT_2 . IDENT_3 . conf . IDENT_4 . METHOD_1 ( IDENT_0 ) ; java . lang . String out = com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_2 ( tree ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . antlr . runtime . tree . IDENT_1 ) { if ( t == null ) { throw new com . IDENT_2 . IDENT_3 . conf . METHOD_3 ( STRING_1 ) ; } com . IDENT_2 . IDENT_3 . conf . IDENT_4 . IDENT_6 type = com . IDENT_2 . IDENT_3 . conf . IDENT_4 . IDENT_6 . valueOf ( t . getText ( ) ) ; switch ( type ) { case IDENT_7 : java . util . List < org . antlr . runtime . tree . IDENT_1 > IDENT_8 = ( ( java . util . List < org . antlr . runtime . tree . IDENT_1 > ) ( new java . util . ArrayList < org . antlr . runtime . tree . IDENT_1 > ( t . METHOD_4 ( ) ) ) ) ; java . lang . String IDENT_9 = IDENT_8 . remove ( 0 ) . getText ( ) ; java . util . List < java . lang . String > args = new java . util . ArrayList < java . lang . String > ( ) ; for ( org . antlr . runtime . tree . IDENT_1 IDENT_10 : IDENT_8 ) { args . add ( com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_5 ( IDENT_10 ) ) ; } return IDENT_9 + ( com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_6 ( args , STRING_2 3 , STRING_2 5 , STRING_3 ) ) ; case IDENT_11 : java . util . List < org . antlr . runtime . tree . IDENT_1 > IDENT_12 = ( ( java . util . List < org . antlr . runtime . tree . IDENT_1 > ) ( t . METHOD_4 ( ) ) ) ; java . util . List < java . lang . String > IDENT_13 = new java . util . ArrayList < java . lang . String > ( ) ; for ( org . antlr . runtime . tree . IDENT_1 IDENT_10 : IDENT_12 ) { java . lang . String IDENT_14 = com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_2 ( IDENT_10 ) ; IDENT_13 . add ( IDENT_14 ) ; } return com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_6 ( IDENT_13 , STRING_4 , STRING_2 5 , "]" ) ; case IDENT_15 : { java . util . List < org . antlr . runtime . tree . IDENT_1 > IDENT_16 = ( ( java . util . List < org . antlr . runtime . tree . IDENT_1 > ) ( t . METHOD_4 ( ) ) ) ; com . google . common . base . IDENT_17 . METHOD_7 ( ( ( ( IDENT_16 . size ( ) ) == 2 ) || ( ( IDENT_16 . size ( ) ) == 1 ) ) ) ; if ( ( IDENT_16 . size ( ) ) == 1 ) { org . antlr . runtime . tree . IDENT_1 IDENT_14 = IDENT_16 . get ( 0 ) ; return com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_2 ( IDENT_14 ) ; } org . antlr . runtime . tree . IDENT_1 IDENT_18 = IDENT_16 . get ( 0 ) ; org . antlr . runtime . tree . IDENT_1 IDENT_19 = IDENT_16 . get ( 1 ) ; java . lang . String IDENT_20 = com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_8 ( IDENT_18 ) ; java . lang . String IDENT_21 = com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_2 ( IDENT_19 ) ; return ( ( ( STRING_2 0 + IDENT_20 ) + STRING_5 ) + IDENT_21 ) + STRING_2 2 ; } case IDENT_22 : { java . util . List < org . antlr . runtime . tree . IDENT_1 > IDENT_23 = ( ( java . util . List < org . antlr . runtime . tree . IDENT_1 > ) ( t . METHOD_4 ( ) ) ) ; com . google . common . base . IDENT_17 . METHOD_7 ( ( ( IDENT_23 . size ( ) ) == 2 ) ) ; org . antlr . runtime . tree . IDENT_1 IDENT_24 = IDENT_23 . get ( 0 ) ; org . antlr . runtime . tree . IDENT_1 IDENT_25 = IDENT_23 . get ( 1 ) ; java . lang . String IDENT_26 = com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_2 ( IDENT_24 ) ; java . lang . String IDENT_27 = com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_2 ( IDENT_25 ) ; return ( ( ( STRING_6 + IDENT_26 ) + STRING_7 ) + IDENT_27 ) + STRING_8 ; } case IDENT_28 : { java . util . List < org . antlr . runtime . tree . IDENT_1 > IDENT_29 = ( ( java . util . List < org . antlr . runtime . tree . IDENT_1 > ) ( t . METHOD_4 ( ) ) ) ; com . google . common . base . IDENT_17 . METHOD_7 ( ( ( IDENT_29 . size ( ) ) == 2 ) ) ; org . antlr . runtime . tree . IDENT_1 body = IDENT_29 . get ( 0 ) ; org . antlr . runtime . tree . IDENT_1 IDENT_30 = IDENT_29 . get ( 1 ) ; java . lang . String IDENT_31 = com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_2 ( body ) ; java . util . List < java . lang . String > IDENT_32 = new java . util . ArrayList < java . lang . String > ( ) ; IDENT_32 . add ( com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_5 ( IDENT_30 ) ) ; java . lang . String IDENT_33 = com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_6 ( IDENT_32 , STRING_2 3 , STRING_2 5 , STRING_3 ) ; return ( ( ( STRING_9 + IDENT_33 ) + STRING_2 4 ) + IDENT_31 ) + STRING_2 2 ; } case IDENT_34 : { java . util . List < org . antlr . runtime . tree . IDENT_1 > IDENT_35 = ( ( java . util . List < org . antlr . runtime . tree . IDENT_1 > ) ( t . METHOD_4 ( ) ) ) ; com . google . common . base . IDENT_17 . METHOD_7 ( ( ( IDENT_35 . size ( ) ) >= 2 ) ) ; org . antlr . runtime . tree . IDENT_1 body = IDENT_35 . get ( 0 ) ; java . lang . String IDENT_31 = com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_2 ( body ) ; java . util . List < java . lang . String > IDENT_32 = new java . util . ArrayList < java . lang . String > ( ) ; for ( int i = 1 ; i < ( IDENT_35 . size ( ) ) ; i ++ ) { org . antlr . runtime . tree . IDENT_1 IDENT_30 = IDENT_35 . get ( i ) ; IDENT_32 . add ( com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_5 ( IDENT_30 ) ) ; } java . lang . String IDENT_33 = com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_6 ( IDENT_32 , STRING_2 3 , STRING_2 5 , STRING_3 ) ; return ( ( ( STRING_2 + IDENT_33 ) + STRING_2 4 ) + IDENT_31 ) + STRING_2 2 ; } case IDENT_36 : { java . util . List < org . antlr . runtime . tree . IDENT_1 > IDENT_37 = ( ( java . util . List < org . antlr . runtime . tree . IDENT_1 > ) ( t . METHOD_4 ( ) ) ) ; com . google . common . base . IDENT_17 . METHOD_7 ( ( ( IDENT_37 . size ( ) ) >= 2 ) ) ; java . lang . String IDENT_38 = IDENT_37 . get ( 0 ) . getText ( ) ; org . antlr . runtime . tree . IDENT_1 body = IDENT_37 . get ( 1 ) ; java . lang . String IDENT_31 = com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_2 ( body ) ; java . util . List < java . lang . String > IDENT_32 = new java . util . ArrayList < java . lang . String > ( ) ; for ( int i = 2 ; i < ( IDENT_37 . size ( ) ) ; i ++ ) { org . antlr . runtime . tree . IDENT_1 IDENT_30 = IDENT_37 . get ( i ) ; IDENT_32 . add ( com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_5 ( IDENT_30 ) ) ; } java . lang . String IDENT_33 = com . IDENT_2 . IDENT_3 . conf . IDENT_5 . METHOD_6 ( IDENT_32 , STRING_2 3 , STRING_2 5 , STRING_3 ) ; return ( ( ( IDENT_38 + IDENT_33 ) + STRING_2 4 ) + IDENT_31 ) + STRING_2 2 ; } default : throw new com . IDENT_2 . IDENT_3 . conf . METHOD_3 ( ( STRING_2 1 + ( t . METHOD_9 ( ) ) ) ) ; } }
org . junit . Assert . assertEquals ( IDENT_0 , out ) 