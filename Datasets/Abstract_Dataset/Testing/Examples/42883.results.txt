METHOD_0 ( ) { org . apache . hadoop . fs . shell . find . IDENT_0 IDENT_1 = new org . apache . hadoop . fs . shell . find . METHOD_1 ( ) ; org . apache . hadoop . fs . shell . IDENT_2 IDENT_3 = mock ( org . apache . hadoop . fs . shell . IDENT_2 . class ) ; org . apache . hadoop . fs . shell . find . IDENT_4 first = mock ( org . apache . hadoop . fs . shell . find . IDENT_4 . class ) ; when ( first . apply ( IDENT_3 ) ) . thenReturn ( Result . IDENT_5 ) ; org . apache . hadoop . fs . shell . find . IDENT_4 IDENT_6 = mock ( org . apache . hadoop . fs . shell . find . IDENT_4 . class ) ; when ( IDENT_6 . apply ( IDENT_3 ) ) . thenReturn ( Result . IDENT_7 ) ; java . util . IDENT_8 < org . apache . hadoop . fs . shell . find . IDENT_4 > IDENT_9 = new java . util . IDENT_10 < org . apache . hadoop . fs . shell . find . IDENT_4 > ( ) ; IDENT_9 . add ( IDENT_6 ) ; IDENT_9 . add ( first ) ; IDENT_1 . METHOD_2 ( IDENT_9 ) ; "<AssertPlaceHolder>" ; verify ( first ) . apply ( IDENT_3 ) ; verify ( IDENT_6 ) . apply ( IDENT_3 ) ; METHOD_3 ( first ) ; METHOD_3 ( IDENT_6 ) ; } apply ( org . apache . hadoop . fs . shell . IDENT_2 ) { return METHOD_4 ( METHOD_5 ( item ) . METHOD_6 ( ) ) ; }
org . junit . Assert . assertEquals ( Result . IDENT_7 , IDENT_1 . apply ( IDENT_3 ) ) 