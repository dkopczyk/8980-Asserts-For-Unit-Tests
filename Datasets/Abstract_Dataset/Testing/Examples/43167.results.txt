METHOD_0 ( ) { java . sql . IDENT_0 IDENT_1 = new java . sql . METHOD_1 ( STRING_0 ) { @ io . IDENT_2 . content . database . utils . Override public java . lang . String METHOD_2 ( ) { return io . IDENT_2 . content . database . utils . IDENT_3 . IDENT_4 ; } } ; final java . lang . String IDENT_5 = io . IDENT_2 . content . database . utils . IDENT_6 . METHOD_3 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . sql . METHOD_1 ) { final java . lang . String IDENT_7 = IDENT_1 . METHOD_2 ( ) ; if ( ( IDENT_7 != null ) && ( org . apache . commons . lang3 . StringUtils . equalsIgnoreCase ( IDENT_7 , STRING_1 ) ) ) { java . sql . METHOD_1 f = IDENT_1 ; java . lang . StringBuilder s = new java . lang . StringBuilder ( ) ; s . append ( f . getMessage ( ) ) ; while ( ( f = f . METHOD_4 ( ) ) != null ) { s . append ( "\n" ) . append ( f . getMessage ( ) ) ; } java . lang . String str = s . toString ( ) ; if ( org . apache . commons . lang3 . StringUtils . METHOD_5 ( str , STRING_0 ) ) return str ; } throw IDENT_1 ; }
org . junit . Assert . assertEquals ( STRING_0 , IDENT_5 ) 