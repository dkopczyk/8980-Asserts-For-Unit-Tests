METHOD_0 ( ) { edu . IDENT_0 . IDENT_1 . util . IDENT_2 . getInstance ( ) . METHOD_1 ( INT_0 ) ; edu . IDENT_0 . IDENT_1 . test . List < edu . IDENT_0 . IDENT_1 . test . Node > nodes = new edu . IDENT_0 . IDENT_1 . test . ArrayList ( ) ; for ( int i = 0 ; i < 10 ; i ++ ) { nodes . add ( new edu . IDENT_0 . IDENT_1 . test . METHOD_2 ( ( STRING_0 + ( i + 1 ) ) ) ) ; } edu . IDENT_0 . IDENT_1 . test . IDENT_3 graph = edu . IDENT_0 . IDENT_1 . test . IDENT_4 . METHOD_3 ( nodes , 0 , 10 , INT_1 , 15 , 15 , false ) ; edu . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_6 IDENT_7 = new edu . IDENT_0 . IDENT_1 . IDENT_5 . METHOD_4 ( graph ) ; edu . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_8 IDENT_9 = new edu . IDENT_0 . IDENT_1 . IDENT_5 . METHOD_5 ( IDENT_7 ) ; edu . IDENT_0 . IDENT_1 . test . IDENT_10 data = IDENT_9 . METHOD_6 ( 200 , false ) ; edu . IDENT_0 . IDENT_1 . util . IDENT_11 . getInstance ( ) . METHOD_7 ( false ) ; edu . IDENT_0 . IDENT_1 . test . IDENT_12 test = new edu . IDENT_0 . IDENT_1 . test . METHOD_8 ( data , FLOAT_0 ) ; edu . IDENT_0 . IDENT_1 . test . IDENT_13 IDENT_14 = new edu . IDENT_0 . IDENT_1 . test . METHOD_9 ( test ) ; IDENT_14 . METHOD_10 ( false ) ; edu . IDENT_0 . IDENT_1 . test . IDENT_3 pattern = IDENT_14 . search ( ) ; for ( int i = 0 ; i < 1 ; i ++ ) { edu . IDENT_0 . IDENT_1 . test . IDENT_10 IDENT_15 = edu . IDENT_0 . IDENT_1 . test . IDENT_16 . METHOD_11 ( data ) ; edu . IDENT_0 . IDENT_1 . test . IDENT_12 IDENT_17 = new edu . IDENT_0 . IDENT_1 . test . METHOD_8 ( IDENT_15 , FLOAT_0 ) ; edu . IDENT_0 . IDENT_1 . test . METHOD_9 IDENT_18 = new edu . IDENT_0 . IDENT_1 . test . METHOD_9 ( IDENT_17 ) ; IDENT_18 . METHOD_10 ( false ) ; edu . IDENT_0 . IDENT_1 . test . IDENT_3 IDENT_19 = IDENT_18 . search ( ) ; "<AssertPlaceHolder>" ; } } equals ( java . lang . Object ) { return o instanceof edu . IDENT_0 . IDENT_1 . session . IDENT_20 ; }
org . junit . Assert . assertTrue ( pattern . equals ( IDENT_19 ) ) 