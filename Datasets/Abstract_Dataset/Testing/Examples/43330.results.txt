METHOD_0 ( ) { edu . IDENT_0 . IDENT_1 . util . IDENT_2 . getInstance ( ) . METHOD_1 ( INT_0 ) ; edu . IDENT_0 . IDENT_1 . test . IDENT_3 graph = new edu . IDENT_0 . IDENT_1 . test . METHOD_2 ( ) ; graph . METHOD_3 ( true ) ; edu . IDENT_0 . IDENT_1 . test . Node IDENT_4 = new edu . IDENT_0 . IDENT_1 . test . METHOD_4 ( STRING_0 ) ; edu . IDENT_0 . IDENT_1 . test . Node IDENT_5 = new edu . IDENT_0 . IDENT_1 . test . METHOD_4 ( STRING_1 ) ; edu . IDENT_0 . IDENT_1 . test . Node IDENT_6 = new edu . IDENT_0 . IDENT_1 . test . METHOD_4 ( STRING_2 ) ; graph . METHOD_5 ( IDENT_4 ) ; graph . METHOD_5 ( IDENT_5 ) ; graph . METHOD_5 ( IDENT_6 ) ; graph . METHOD_3 ( true ) ; edu . IDENT_0 . IDENT_1 . test . Node IDENT_7 = graph . METHOD_6 ( IDENT_4 ) ; edu . IDENT_0 . IDENT_1 . test . Node IDENT_8 = graph . METHOD_6 ( IDENT_5 ) ; edu . IDENT_0 . IDENT_1 . test . Node IDENT_9 = graph . METHOD_6 ( IDENT_6 ) ; graph . METHOD_7 ( IDENT_4 , IDENT_6 ) ; graph . METHOD_7 ( IDENT_5 , IDENT_6 ) ; edu . IDENT_0 . IDENT_1 . IDENT_10 . IDENT_11 IDENT_12 = new edu . IDENT_0 . IDENT_1 . IDENT_10 . METHOD_8 ( graph ) ; edu . IDENT_0 . IDENT_1 . IDENT_10 . IDENT_13 IDENT_14 = new edu . IDENT_0 . IDENT_1 . IDENT_10 . METHOD_9 ( IDENT_12 ) ; edu . IDENT_0 . IDENT_1 . test . IDENT_15 IDENT_16 = IDENT_14 . METHOD_10 ( 1000 , false ) ; edu . IDENT_0 . IDENT_1 . util . IDENT_17 IDENT_18 = IDENT_16 . METHOD_11 ( ) ; IDENT_18 = edu . IDENT_0 . IDENT_1 . test . IDENT_19 . METHOD_12 ( IDENT_18 ) ; edu . IDENT_0 . IDENT_1 . test . IDENT_15 IDENT_20 = edu . IDENT_0 . IDENT_1 . test . IDENT_21 . METHOD_13 ( IDENT_16 . METHOD_14 ( ) , IDENT_18 ) ; edu . IDENT_0 . IDENT_1 . IDENT_10 . IDENT_22 IDENT_23 = new edu . IDENT_0 . IDENT_1 . IDENT_10 . METHOD_15 ( IDENT_20 , IDENT_14 . METHOD_16 ( ) ) ; edu . IDENT_0 . IDENT_1 . IDENT_10 . METHOD_9 IDENT_24 = IDENT_23 . METHOD_17 ( ) ; edu . IDENT_0 . IDENT_1 . IDENT_10 . IDENT_25 IDENT_10 = new edu . IDENT_0 . IDENT_1 . IDENT_10 . METHOD_18 ( IDENT_14 ) ; "<AssertPlaceHolder>" ; } METHOD_19 ( edu . IDENT_0 . IDENT_1 . IDENT_10 . METHOD_18 ) { edu . IDENT_0 . IDENT_1 . test . IDENT_15 IDENT_16 = IDENT_10 . METHOD_20 ( INT_1 , false ) ; edu . IDENT_0 . IDENT_1 . util . IDENT_17 IDENT_18 = IDENT_16 . METHOD_11 ( ) ; edu . IDENT_0 . IDENT_1 . util . IDENT_17 IDENT_26 = edu . IDENT_0 . IDENT_1 . test . IDENT_19 . METHOD_21 ( IDENT_18 ) ; edu . IDENT_0 . IDENT_1 . util . IDENT_27 IDENT_28 = edu . IDENT_0 . IDENT_1 . test . IDENT_19 . METHOD_22 ( IDENT_18 ) ; for ( int i = 0 ; i < ( METHOD_21 . METHOD_23 ( ) ) ; i ++ ) { if ( ! ( ( java . lang . Math . METHOD_24 ( ( ( METHOD_21 . get ( i , i ) ) - 1 ) ) ) < FLOAT_0 ) ) { return false ; } if ( ! ( ( java . lang . Math . METHOD_24 ( IDENT_28 . get ( i ) ) ) < FLOAT_0 ) ) { return false ; } } return true ; }
org . junit . Assert . assertTrue ( METHOD_19 ( IDENT_10 ) ) 