METHOD_0 ( ) { java . lang . Object result = org . apache . el . lang . IDENT_0 . METHOD_1 ( ( ( java . lang . Object ) ( null ) ) , int . class ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . IDENT_1 , java . lang . Class ) { if ( ( ( Long . IDENT_2 ) == type ) || ( org . apache . el . lang . Long . class . equals ( type ) ) ) { return java . lang . Long . valueOf ( IDENT_3 . METHOD_2 ( ) ) ; } if ( ( ( Double . IDENT_2 ) == type ) || ( org . apache . el . lang . Double . class . equals ( type ) ) ) { return new java . lang . Double ( IDENT_3 . METHOD_3 ( ) ) ; } if ( ( ( Integer . IDENT_2 ) == type ) || ( org . apache . el . lang . Integer . class . equals ( type ) ) ) { return java . lang . Integer . valueOf ( IDENT_3 . METHOD_4 ( ) ) ; } if ( java . math . BigInteger . class . equals ( type ) ) { if ( IDENT_3 instanceof java . math . BigDecimal ) { return ( ( java . math . BigDecimal ) ( IDENT_3 ) ) . METHOD_5 ( ) ; } if ( IDENT_3 instanceof java . math . BigInteger ) { return IDENT_3 ; } return java . math . BigInteger . valueOf ( IDENT_3 . METHOD_2 ( ) ) ; } if ( java . math . BigDecimal . class . equals ( type ) ) { if ( IDENT_3 instanceof java . math . BigDecimal ) { return IDENT_3 ; } if ( IDENT_3 instanceof java . math . BigInteger ) { return new java . math . BigDecimal ( ( ( java . math . BigInteger ) ( IDENT_3 ) ) ) ; } return new java . math . BigDecimal ( IDENT_3 . METHOD_3 ( ) ) ; } if ( ( ( IDENT_4 . IDENT_2 ) == type ) || ( org . apache . el . lang . IDENT_4 . class . equals ( type ) ) ) { return java . lang . IDENT_4 . valueOf ( IDENT_3 . METHOD_6 ( ) ) ; } if ( ( ( IDENT_5 . IDENT_2 ) == type ) || ( org . apache . el . lang . IDENT_5 . class . equals ( type ) ) ) { return java . lang . IDENT_5 . valueOf ( IDENT_3 . METHOD_7 ( ) ) ; } if ( ( ( IDENT_6 . IDENT_2 ) == type ) || ( org . apache . el . lang . IDENT_6 . class . equals ( type ) ) ) { return new java . lang . METHOD_8 ( IDENT_3 . METHOD_9 ( ) ) ; } if ( org . apache . el . lang . IDENT_1 . class . equals ( type ) ) { return IDENT_3 ; } throw new javax . el . METHOD_10 ( org . apache . el . util . IDENT_7 . get ( STRING_0 , IDENT_3 , IDENT_3 . getClass ( ) , type ) ) ; }
org . junit . Assert . assertEquals ( java . lang . Integer . valueOf ( 0 ) , result ) 