METHOD_0 ( ) { java . io . IDENT_0 out = mock ( java . io . IDENT_0 . class ) ; java . lang . Exception IDENT_1 = new java . lang . Exception ( ) ; java . lang . RuntimeException expected = new java . lang . RuntimeException ( ) ; METHOD_1 ( IDENT_1 ) . when ( IDENT_2 ) . METHOD_2 ( IDENT_3 , out ) ; METHOD_3 ( org . IDENT_4 . IDENT_5 . IDENT_6 . class ) ; when ( org . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_4 ( IDENT_1 ) ) . thenReturn ( expected ) ; try { IDENT_7 . METHOD_5 ( out ) ; } catch ( java . lang . Exception e ) { "<AssertPlaceHolder>" ; } } METHOD_5 ( java . io . IDENT_0 ) { if ( ( IDENT_8 ) == null ) { java . io . ByteArrayOutputStream cache = new java . io . ByteArrayOutputStream ( ) ; delegate . METHOD_5 ( cache ) ; this . IDENT_8 = cache . toByteArray ( ) ; } org . IDENT_4 . common . io . IDENT_9 . METHOD_6 ( new java . io . ByteArrayInputStream ( IDENT_8 ) , out ) ; }
org . junit . Assert . assertSame ( expected , e ) 