METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( java . lang . String . class , null , null ) ) . thenReturn ( newArrayList ( new javax . ws . rs . core . METHOD_2 ( STRING_0 , STRING_1 ) , new javax . ws . rs . core . METHOD_2 ( STRING_2 , STRING_1 ) ) ) ; org . IDENT_1 . core . IDENT_2 < org . IDENT_1 . core . provider . IDENT_3 > IDENT_4 = METHOD_3 ( newArrayList ( new javax . ws . rs . core . METHOD_2 ( STRING_0 , STRING_3 ) , new javax . ws . rs . core . METHOD_2 ( STRING_0 , STRING_4 ) ) ) ; IDENT_5 . METHOD_4 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . Class , java . lang . reflect . Type , java . lang . annotation . IDENT_6 [ ] ) { java . util . List < javax . ws . rs . core . METHOD_2 > IDENT_7 = METHOD_5 ( type , IDENT_8 , IDENT_9 ) ; IDENT_7 . addAll ( METHOD_6 ( ) . METHOD_1 ( type , IDENT_8 , IDENT_9 ) ) ; return IDENT_7 ; }
org . junit . Assert . assertEquals ( newArrayList ( new javax . ws . rs . core . METHOD_2 ( STRING_0 , STRING_4 ) , new javax . ws . rs . core . METHOD_2 ( STRING_0 , STRING_3 ) , new javax . ws . rs . core . METHOD_2 ( STRING_0 , STRING_1 ) , new javax . ws . rs . core . METHOD_2 ( STRING_2 , STRING_1 ) ) , IDENT_5 . METHOD_1 ( java . lang . String . class , null , null ) ) 