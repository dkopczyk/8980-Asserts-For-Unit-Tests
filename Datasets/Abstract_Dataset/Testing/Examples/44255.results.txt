METHOD_0 ( ) { org . IDENT_0 . core . method . IDENT_1 IDENT_2 = IDENT_3 . METHOD_1 ( java . lang . String . class , null ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . Class , java . lang . reflect . Type ) { if ( ( ( IDENT_4 == ( java . util . List . class ) ) || ( IDENT_4 == ( java . util . Set . class ) ) ) || ( IDENT_4 == ( java . util . IDENT_5 . class ) ) ) { java . lang . Class < ? > IDENT_6 = null ; if ( IDENT_7 != null ) { IDENT_6 = METHOD_2 ( IDENT_7 ) ; } java . lang . reflect . Method IDENT_8 ; java . lang . reflect . IDENT_9 < ? > IDENT_10 ; if ( ( IDENT_6 == ( org . IDENT_0 . core . impl . method . String . class ) ) || ( IDENT_6 == null ) ) { return new org . IDENT_0 . core . impl . method . METHOD_3 ( IDENT_4 ) ; } else if ( ( IDENT_8 = METHOD_4 ( IDENT_6 ) ) != null ) { return new org . IDENT_0 . core . impl . method . METHOD_5 ( IDENT_4 , IDENT_8 ) ; } else if ( ( IDENT_10 = METHOD_6 ( IDENT_6 ) ) != null ) { return new org . IDENT_0 . core . impl . method . METHOD_7 ( IDENT_4 , IDENT_10 ) ; } } else { java . lang . reflect . Method IDENT_8 ; java . lang . reflect . IDENT_9 < ? > IDENT_10 ; if ( IDENT_4 . METHOD_8 ( ) ) { return new org . IDENT_0 . core . impl . method . METHOD_9 ( IDENT_4 ) ; } else if ( IDENT_4 == ( org . IDENT_0 . core . impl . method . String . class ) ) { return new org . IDENT_0 . core . impl . method . METHOD_10 ( ) ; } else if ( ( IDENT_8 = METHOD_4 ( IDENT_4 ) ) != null ) { return new org . IDENT_0 . core . impl . method . METHOD_11 ( IDENT_8 ) ; } else if ( ( IDENT_10 = METHOD_6 ( IDENT_4 ) ) != null ) { return new org . IDENT_0 . core . impl . method . METHOD_12 ( IDENT_10 ) ; } } throw new java . lang . IllegalArgumentException ( java . lang . String . format ( STRING_0 , IDENT_4 ) ) ; }
org . junit . Assert . assertEquals ( org . IDENT_0 . core . impl . method . METHOD_10 . class , IDENT_2 . getClass ( ) ) 