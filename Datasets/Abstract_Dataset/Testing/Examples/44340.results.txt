METHOD_0 ( ) { org . IDENT_0 . core . tools . IDENT_1 IDENT_2 = METHOD_1 ( org . IDENT_0 . core . tools . IDENT_3 . IDENT_4 . class , "foo" , ( - 1 ) ) ; java . lang . reflect . Field field = org . IDENT_0 . core . tools . IDENT_3 . IDENT_5 . class . METHOD_2 ( STRING_0 ) ; org . IDENT_0 . core . IDENT_6 IDENT_7 = METHOD_3 ( field ) ; java . lang . Object instance = IDENT_2 . getInstance ( IDENT_7 ) ; "<AssertPlaceHolder>" ; } getInstance ( org . IDENT_0 . core . IDENT_8 ) { try { java . lang . Object object = IDENT_9 . get ( IDENT_10 ) ; if ( object != null ) { org . IDENT_0 . core . provider . IDENT_11 IDENT_12 = new org . IDENT_0 . core . impl . provider . METHOD_4 ( object ) ; java . util . List < org . IDENT_0 . core . IDENT_6 > IDENT_13 = model . METHOD_5 ( ) ; if ( ( IDENT_13 != null ) && ( ( IDENT_13 . size ( ) ) > 0 ) ) { IDENT_13 . stream ( ) . filter ( ( IDENT_14 ) -> ( IDENT_14 . METHOD_6 ( ) ) != null ) . METHOD_7 ( ( IDENT_14 ) -> IDENT_14 . METHOD_8 ( object , context ) ) ; } return new org . IDENT_0 . core . METHOD_9 ( IDENT_12 , object ) . getInstance ( context ) ; } else { org . IDENT_0 . core . provider . IDENT_11 IDENT_12 = new org . IDENT_0 . core . impl . provider . METHOD_4 ( IDENT_9 . getType ( ) ) ; return new org . IDENT_0 . core . METHOD_10 ( IDENT_12 ) . getInstance ( context ) ; } } catch ( java . lang . IllegalArgumentException e ) { org . IDENT_0 . IDENT_15 . IDENT_16 . LOG . error ( e . METHOD_11 ( ) , e ) ; throw new java . lang . RuntimeException ( e . METHOD_11 ( ) , e ) ; } catch ( java . lang . IDENT_17 e ) { org . IDENT_0 . IDENT_15 . IDENT_16 . LOG . error ( e . METHOD_11 ( ) , e ) ; throw new java . lang . RuntimeException ( e . METHOD_11 ( ) , e ) ; } }
org . junit . Assert . assertEquals ( "foo" , instance ) 