METHOD_0 ( ) { com . github . IDENT_0 . IDENT_1 IDENT_0 = new com . github . IDENT_0 . METHOD_1 ( ) ; com . github . IDENT_0 . schema . model . IDENT_2 . IDENT_3 IDENT_4 = IDENT_0 . METHOD_2 ( com . github . IDENT_0 . schema . model . IDENT_2 . IDENT_3 . class , ( ( org . IDENT_5 . model . IDENT_6 ) ( new org . IDENT_5 . model . impl . METHOD_3 ( STRING_0 ) ) ) ) ; com . github . IDENT_0 . schema . model . IDENT_7 . IDENT_8 IDENT_9 = IDENT_0 . METHOD_2 ( com . github . IDENT_0 . schema . model . IDENT_7 . IDENT_8 . class , ( ( org . IDENT_5 . model . IDENT_6 ) ( new org . IDENT_5 . model . impl . METHOD_3 ( STRING_1 ) ) ) ) ; com . github . IDENT_0 . schema . model . IDENT_2 . IDENT_10 IDENT_11 = IDENT_0 . METHOD_2 ( com . github . IDENT_0 . schema . model . IDENT_2 . IDENT_10 . class ) ; IDENT_11 . METHOD_4 ( com . google . common . collect . IDENT_12 . METHOD_5 ( IDENT_4 ) ) ; IDENT_11 . METHOD_6 ( com . google . common . collect . IDENT_12 . METHOD_5 ( IDENT_9 ) ) ; IDENT_11 . METHOD_7 ( com . google . common . collect . IDENT_12 . < com . github . IDENT_0 . schema . model . IDENT_2 . IDENT_3 > METHOD_5 ( IDENT_4 ) ) ; org . IDENT_13 . IDENT_14 types = new org . IDENT_13 . METHOD_8 ( new org . IDENT_13 . util . METHOD_9 ( ) . METHOD_10 ( org . IDENT_13 . util . IDENT_15 . METHOD_11 ( com . github . IDENT_0 . schema . IDENT_16 . Person . class , org . IDENT_13 . util . IDENT_15 . METHOD_12 ( ) ) , org . IDENT_13 . util . IDENT_15 . METHOD_11 ( com . github . IDENT_0 . schema . IDENT_16 . IDENT_17 . class , org . IDENT_13 . util . IDENT_15 . METHOD_12 ( ) ) ) . METHOD_13 ( new org . IDENT_13 . IDENT_18 . METHOD_14 ( ) , new org . IDENT_13 . IDENT_18 . METHOD_15 ( ) , new org . IDENT_13 . IDENT_18 . METHOD_16 ( ) , new org . IDENT_13 . IDENT_18 . METHOD_17 ( ) ) ) ; com . github . IDENT_0 . IDENT_19 transaction = IDENT_0 . METHOD_18 ( ) ; transaction . METHOD_19 ( ) ; com . github . IDENT_0 . schema . IDENT_20 IDENT_21 = new com . github . IDENT_0 . schema . METHOD_20 ( transaction . METHOD_21 ( ) ) ; boolean IDENT_22 = false ; try { IDENT_21 . METHOD_22 ( types ) ; } catch ( com . github . IDENT_0 . schema . IDENT_20 e ) { IDENT_22 = true ; } "<AssertPlaceHolder>" ; } METHOD_22 ( org . IDENT_13 . METHOD_8 ) { com . github . IDENT_0 . schema . Collection < java . lang . reflect . IDENT_23 > IDENT_24 = new com . github . IDENT_0 . schema . HashSet ( ) ; for ( java . lang . reflect . IDENT_23 object : types . METHOD_23 ( org . IDENT_5 . IDENT_25 . IDENT_26 . class ) ) { if ( ! ( METHOD_24 ( object ) ) ) { IDENT_24 . add ( object ) ; } } for ( java . lang . reflect . IDENT_23 object : types . METHOD_25 ( org . IDENT_5 . IDENT_25 . IDENT_26 . class ) ) { if ( ! ( METHOD_24 ( object ) ) ) { IDENT_24 . add ( object ) ; } } METHOD_26 ( IDENT_24 ) ; METHOD_27 ( IDENT_24 ) ; METHOD_28 ( types . METHOD_29 ( org . IDENT_5 . IDENT_25 . IDENT_26 . class ) ) ; METHOD_30 ( IDENT_24 ) ; METHOD_31 ( IDENT_24 ) ; }
org . junit . Assert . assertFalse ( IDENT_22 ) 