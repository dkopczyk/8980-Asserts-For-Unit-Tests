METHOD_0 ( ) { java . util . HashMap < java . lang . String , java . lang . Object > IDENT_0 = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; java . lang . String IDENT_1 = STRING_0 ; java . lang . String IDENT_2 = STRING_1 ; int IDENT_3 = 3 ; tests . models . IDENT_4 IDENT_5 = new tests . models . METHOD_1 ( ) ; tests . models . IDENT_6 IDENT_7 = new tests . models . METHOD_2 ( ) ; IDENT_7 . METHOD_3 ( STRING_2 1 ) ; IDENT_7 . METHOD_4 ( STRING_2 2 ) ; IDENT_5 . METHOD_5 ( STRING_3 ) ; IDENT_5 . METHOD_6 ( IDENT_7 ) ; IDENT_0 . put ( STRING_4 , IDENT_1 ) ; IDENT_0 . put ( STRING_5 , IDENT_2 ) ; IDENT_0 . put ( STRING_6 , IDENT_3 ) ; IDENT_0 . put ( STRING_2 3 , IDENT_5 ) ; com . fasterxml . jackson . databind . IDENT_8 mapper = new com . fasterxml . jackson . databind . METHOD_7 ( ) ; java . lang . String IDENT_9 = null ; try { IDENT_9 = mapper . METHOD_8 ( IDENT_0 ) ; } catch ( com . fasterxml . jackson . core . IDENT_10 IDENT_11 ) { IDENT_11 . printStackTrace ( ) ; } java . lang . String result = utils . IDENT_12 . METHOD_9 ( ( ( IDENT_13 ) + STRING_2 0 ) , IDENT_9 ) ; java . lang . String IDENT_14 = ( ( ( ( ( ( STRING_7 + IDENT_3 ) + STRING_8 ) + ( IDENT_5 . METHOD_10 ( ) ) ) + STRING_2 ) + IDENT_1 ) + STRING_9 ) + IDENT_2 ; "<AssertPlaceHolder>" ; } METHOD_10 ( ) { return IDENT_15 ; }
org . junit . Assert . assertEquals ( result , IDENT_14 ) 