METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; ddf . catalog . IDENT_1 . IDENT_2 . LOGGER . debug ( ( ( STRING_1 + IDENT_0 ) + STRING_2 ) ) ; ddf . catalog . IDENT_1 . IDENT_3 query = new ddf . catalog . IDENT_1 . METHOD_1 ( ) ; javax . xml . IDENT_4 . IDENT_5 IDENT_6 = javax . xml . IDENT_4 . IDENT_5 . newInstance ( ) ; javax . xml . IDENT_4 . IDENT_7 start = IDENT_6 . METHOD_2 ( INT_0 , 10 , INT_1 , 0 ) ; javax . xml . IDENT_4 . IDENT_7 end = IDENT_6 . METHOD_2 ( INT_0 , 10 , INT_2 , 0 ) ; query . METHOD_3 ( start , end , IDENT_8 . IDENT_9 ) ; ddf . catalog . IDENT_1 . internal . IDENT_10 IDENT_11 = new ddf . catalog . IDENT_1 . internal . METHOD_4 ( ) ; ddf . catalog . IDENT_1 . IDENT_12 . IDENT_13 IDENT_14 = ( ( ddf . catalog . IDENT_1 . IDENT_12 . IDENT_13 ) ( query . METHOD_5 ( ) . accept ( IDENT_11 , null ) ) ) ; ddf . catalog . IDENT_1 . IDENT_2 . LOGGER . debug ( ( STRING_3 + IDENT_14 ) ) ; org . opengis . filter . IDENT_15 filter = query . METHOD_5 ( ) ; org . geotools . filter . IDENT_16 transform = new org . geotools . filter . METHOD_6 ( ) ; transform . METHOD_7 ( 2 ) ; java . lang . String IDENT_17 = transform . transform ( filter ) ; ddf . catalog . IDENT_1 . IDENT_2 . LOGGER . debug ( IDENT_17 ) ; ddf . catalog . IDENT_1 . IDENT_2 . LOGGER . debug ( STRING_4 ) ; ddf . catalog . data . impl . IDENT_18 IDENT_19 = new ddf . catalog . data . impl . METHOD_8 ( ) ; IDENT_19 . METHOD_9 ( new java . util . Date ( ) ) ; IDENT_19 . METHOD_10 ( new java . util . Date ( ) ) ; IDENT_19 . METHOD_11 ( new java . util . Date ( ) ) ; javax . xml . IDENT_4 . IDENT_7 IDENT_20 = IDENT_6 . METHOD_2 ( INT_0 , 10 , INT_3 , 0 ) ; java . util . Date IDENT_21 = IDENT_20 . METHOD_12 ( ) . getTime ( ) ; IDENT_19 . METHOD_13 ( IDENT_21 ) ; java . util . HashMap < java . lang . String , java . lang . Object > properties = new java . util . HashMap ( ) ; properties . put ( IDENT_22 . IDENT_23 , IDENT_22 . IDENT_24 ) ; properties . put ( IDENT_22 . IDENT_25 , IDENT_19 ) ; org . osgi . service . event . IDENT_26 IDENT_27 = new org . osgi . service . event . METHOD_14 ( STRING_5 , properties ) ; boolean b = IDENT_14 . matches ( IDENT_27 ) ; "<AssertPlaceHolder>" ; ddf . catalog . IDENT_1 . IDENT_2 . LOGGER . debug ( ( ( STRING_6 + IDENT_0 ) + STRING_2 ) ) ; } matches ( org . osgi . service . event . METHOD_14 ) { ddf . catalog . IDENT_1 . IDENT_12 . IDENT_28 . LOGGER . debug ( STRING_7 ) ; boolean status = false ; java . util . Map < java . lang . String , java . lang . Object > IDENT_29 = ( ( java . util . Map < java . lang . String , java . lang . Object > ) ( properties . getProperty ( IDENT_22 . IDENT_30 ) ) ) ; java . lang . String operation = ( ( java . lang . String ) ( properties . getProperty ( IDENT_22 . IDENT_23 ) ) ) ; ddf . catalog . IDENT_1 . IDENT_12 . IDENT_28 . LOGGER . debug ( STRING_8 , operation ) ; if ( IDENT_29 != null ) { java . lang . String metadata = ( ( java . lang . String ) ( IDENT_29 . get ( STRING_9 ) ) ) ; if ( ( IDENT_22 . IDENT_31 . equals ( operation ) ) && ( IDENT_22 . IDENT_32 . equals ( metadata ) ) ) { ddf . catalog . IDENT_1 . IDENT_12 . IDENT_28 . LOGGER . debug ( STRING_10 ) ; ddf . catalog . IDENT_1 . IDENT_12 . IDENT_28 . LOGGER . debug ( STRING_11 ) ; return true ; } } java . lang . Object IDENT_33 = properties . getProperty ( IDENT_22 . IDENT_34 ) ; ddf . catalog . IDENT_1 . IDENT_12 . IDENT_28 . LOGGER . debug ( STRING_12 , IDENT_33 ) ; if ( IDENT_33 != null ) { ddf . catalog . IDENT_1 . criteria . IDENT_35 . IDENT_36 IDENT_37 = new ddf . catalog . IDENT_1 . criteria . IDENT_35 . METHOD_15 ( this , IDENT_33 . toString ( ) ) ; status = ddf . catalog . IDENT_1 . criteria . IDENT_35 . IDENT_38 . evaluate ( IDENT_37 ) ; } ddf . catalog . IDENT_1 . IDENT_12 . IDENT_28 . LOGGER . debug ( STRING_11 ) ; return status ; }
org . junit . Assert . assertTrue ( b ) 