METHOD_0 ( ) { ddf . catalog . data . impl . IDENT_0 IDENT_1 = new ddf . catalog . data . impl . METHOD_1 ( ) ; byte [ ] bytes = new byte [ ] { INT_0 , INT_1 , INT_2 } ; java . lang . String expected = javax . xml . IDENT_2 . IDENT_3 . METHOD_2 ( bytes ) ; IDENT_1 . METHOD_3 ( bytes ) ; org . codice . ddf . catalog . IDENT_4 . html . IDENT_5 IDENT_6 = new org . codice . ddf . catalog . IDENT_4 . html . METHOD_4 ( ) ; java . lang . Object props = IDENT_6 . resolve ( IDENT_1 , STRING_0 ) ; java . lang . Object actual = IDENT_6 . resolve ( props , STRING_1 ) ; "<AssertPlaceHolder>" ; } resolve ( java . lang . Object , java . lang . String ) { org . codice . ddf . catalog . IDENT_4 . html . METHOD_4 . LOGGER . debug ( STRING_2 , context . getClass ( ) . getName ( ) , name ) ; if ( context instanceof ddf . catalog . data . IDENT_7 ) { if ( org . codice . ddf . catalog . IDENT_4 . html . METHOD_4 . IDENT_8 . equals ( name ) ) { return ( ( ddf . catalog . data . IDENT_7 ) ( context ) ) . METHOD_5 ( ) ; } else if ( org . codice . ddf . catalog . IDENT_4 . html . METHOD_4 . IDENT_9 . equals ( name ) ) { return new org . codice . ddf . catalog . IDENT_4 . html . METHOD_4 . METHOD_6 ( ( ( ddf . catalog . data . IDENT_7 ) ( context ) ) ) ; } } else if ( ( context instanceof org . codice . ddf . catalog . IDENT_4 . html . METHOD_4 . METHOD_6 ) && ( ( ( ( org . codice . ddf . catalog . IDENT_4 . html . METHOD_4 . METHOD_6 ) ( context ) ) . METHOD_7 ( ) ) != null ) ) { ddf . catalog . data . IDENT_7 IDENT_10 = ( ( org . codice . ddf . catalog . IDENT_4 . html . METHOD_4 . METHOD_6 ) ( context ) ) . METHOD_7 ( ) ; if ( IDENT_7 . IDENT_11 . equals ( name ) ) { byte [ ] bytes = IDENT_10 . METHOD_8 ( ) ; if ( bytes == null ) { return null ; } return javax . xml . IDENT_2 . IDENT_3 . METHOD_2 ( bytes ) ; } else if ( IDENT_7 . IDENT_12 . equals ( name ) ) { return IDENT_10 . METHOD_9 ( ) ; } else if ( org . codice . ddf . catalog . IDENT_4 . html . METHOD_4 . IDENT_13 . equals ( name ) ) { return IDENT_10 . METHOD_10 ( ) . getName ( ) ; } else if ( ( IDENT_10 . METHOD_11 ( name ) ) != null ) { return IDENT_10 . METHOD_11 ( name ) . getValue ( ) ; } } return IDENT_14 ; }
org . junit . Assert . assertEquals ( expected , actual ) 