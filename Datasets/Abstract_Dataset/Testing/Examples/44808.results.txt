METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; ddf . catalog . IDENT_1 . IDENT_2 . LOGGER . debug ( STRING_1 , IDENT_0 ) ; java . lang . String IDENT_3 = STRING_2 ; java . lang . String operation = STRING_3 ; double IDENT_4 = FLOAT_0 ; ddf . catalog . IDENT_1 . IDENT_5 . IDENT_6 IDENT_5 = new ddf . catalog . IDENT_1 . IDENT_5 . METHOD_1 ( IDENT_3 , operation , IDENT_4 ) ; ddf . catalog . data . impl . IDENT_7 IDENT_8 = new ddf . catalog . data . impl . METHOD_2 ( ) ; IDENT_8 . METHOD_3 ( STRING_4 ) ; java . util . HashMap < java . lang . String , java . lang . Object > properties = new java . util . HashMap ( ) ; properties . put ( IDENT_9 . IDENT_10 , STRING_5 ) ; properties . put ( IDENT_9 . IDENT_11 , IDENT_9 . IDENT_12 ) ; properties . put ( IDENT_9 . IDENT_13 , IDENT_8 ) ; org . osgi . service . event . IDENT_14 IDENT_15 = new org . osgi . service . event . METHOD_4 ( STRING_6 , properties ) ; "<AssertPlaceHolder>" ; ddf . catalog . IDENT_1 . IDENT_2 . LOGGER . debug ( STRING_7 , IDENT_0 ) ; } matches ( org . osgi . service . event . METHOD_4 ) { ddf . catalog . IDENT_1 . IDENT_5 . IDENT_16 . LOGGER . debug ( STRING_8 ) ; boolean status = false ; java . util . Map < java . lang . String , java . lang . Object > IDENT_17 = ( ( java . util . Map < java . lang . String , java . lang . Object > ) ( properties . getProperty ( IDENT_9 . IDENT_18 ) ) ) ; java . lang . String operation = ( ( java . lang . String ) ( properties . getProperty ( IDENT_9 . IDENT_11 ) ) ) ; ddf . catalog . IDENT_1 . IDENT_5 . IDENT_16 . LOGGER . debug ( STRING_9 , operation ) ; if ( IDENT_17 != null ) { java . lang . String metadata = ( ( java . lang . String ) ( IDENT_17 . get ( STRING_10 ) ) ) ; if ( ( IDENT_9 . IDENT_19 . equals ( operation ) ) && ( IDENT_9 . IDENT_20 . equals ( metadata ) ) ) { ddf . catalog . IDENT_1 . IDENT_5 . IDENT_16 . LOGGER . debug ( STRING_11 ) ; ddf . catalog . IDENT_1 . IDENT_5 . IDENT_16 . LOGGER . debug ( STRING_12 ) ; return true ; } } java . lang . Object IDENT_21 = properties . getProperty ( IDENT_9 . IDENT_10 ) ; ddf . catalog . IDENT_1 . IDENT_5 . IDENT_16 . LOGGER . debug ( STRING_13 , IDENT_21 ) ; if ( IDENT_21 != null ) { ddf . catalog . IDENT_1 . criteria . IDENT_22 . IDENT_23 IDENT_24 = new ddf . catalog . IDENT_1 . criteria . IDENT_22 . METHOD_5 ( this , IDENT_21 . toString ( ) ) ; status = ddf . catalog . IDENT_1 . criteria . IDENT_22 . IDENT_25 . evaluate ( IDENT_24 ) ; } ddf . catalog . IDENT_1 . IDENT_5 . IDENT_16 . LOGGER . debug ( STRING_12 ) ; return status ; }
org . junit . Assert . assertTrue ( IDENT_5 . matches ( IDENT_15 ) ) 