METHOD_0 ( ) { final org . codice . solr . client . IDENT_0 . IDENT_1 client = METHOD_1 ( false ) ; ddf . catalog . source . IDENT_2 provider = new ddf . catalog . source . solr . IDENT_3 . METHOD_2 ( client ) ; final ddf . catalog . source . IDENT_4 monitor = mock ( ddf . catalog . source . IDENT_4 . class ) ; "<AssertPlaceHolder>" ; final org . mockito . IDENT_5 < org . codice . solr . client . IDENT_0 . IDENT_1 . IDENT_6 > listener = org . mockito . IDENT_5 . METHOD_3 ( org . codice . solr . client . IDENT_0 . IDENT_1 . IDENT_6 . class ) ; verify ( client ) . METHOD_4 ( listener . METHOD_5 ( ) ) ; verify ( client ) . METHOD_6 ( ) ; listener . getValue ( ) . METHOD_7 ( client , false ) ; verify ( monitor ) . METHOD_8 ( ) ; listener . getValue ( ) . METHOD_7 ( client , true ) ; verify ( monitor ) . METHOD_9 ( ) ; } METHOD_4 ( ddf . catalog . source . IDENT_4 ) { if ( METHOD_4 ( ) ) { IDENT_7 . METHOD_9 ( ) ; return true ; } else { IDENT_7 . METHOD_8 ( ) ; return false ; } }
org . junit . Assert . assertThat ( provider . METHOD_4 ( monitor ) , org . hamcrest . Matchers . is ( false ) ) 