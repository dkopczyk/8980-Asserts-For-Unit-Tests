METHOD_0 ( ) { ddf . catalog . source . solr . provider . IDENT_0 . METHOD_1 ( ddf . catalog . source . solr . provider . IDENT_1 . provider ) ; ddf . catalog . source . solr . provider . IDENT_2 IDENT_3 = new ddf . catalog . source . solr . provider . METHOD_2 ( ddf . catalog . source . solr . provider . IDENT_4 . METHOD_3 ( ) ) ; ddf . catalog . operation . IDENT_5 IDENT_6 = ddf . catalog . source . solr . provider . IDENT_0 . create ( IDENT_3 , ddf . catalog . source . solr . provider . IDENT_1 . provider ) ; ddf . catalog . operation . IDENT_7 IDENT_8 = ddf . catalog . source . solr . provider . IDENT_1 . provider . delete ( new ddf . catalog . operation . METHOD_4 ( ) { @ ddf . catalog . source . solr . provider . Override public boolean METHOD_5 ( ) { return false ; } @ ddf . catalog . source . solr . provider . Override public java . io . IDENT_9 METHOD_6 ( java . lang . String name ) { return null ; } @ ddf . catalog . source . solr . provider . Override public java . util . Set < java . lang . String > METHOD_7 ( ) { return null ; } @ ddf . catalog . source . solr . provider . Override public java . util . Map < java . lang . String , java . io . IDENT_9 > METHOD_8 ( ) { return null ; } @ ddf . catalog . source . solr . provider . Override public boolean METHOD_9 ( java . lang . String name ) { return false ; } @ ddf . catalog . source . solr . provider . Override public java . util . List < ? extends java . io . IDENT_9 > METHOD_10 ( ) { return java . util . Collections . singletonList ( METHOD_2 . IDENT_10 ) ; } @ ddf . catalog . source . solr . provider . Override public java . lang . String METHOD_11 ( ) { return ddf . catalog . data . IDENT_11 . IDENT_12 ; } } ) ; ddf . catalog . data . IDENT_11 IDENT_13 = IDENT_8 . METHOD_12 ( ) . get ( 0 ) ; METHOD_13 ( IDENT_3 , IDENT_6 , IDENT_8 , IDENT_13 ) ; org . opengis . filter . IDENT_14 filter = ddf . catalog . source . solr . provider . IDENT_0 . METHOD_14 ( ) . METHOD_15 ( IDENT_11 . IDENT_12 ) . METHOD_16 ( ) . text ( METHOD_2 . IDENT_10 ) ; ddf . catalog . operation . impl . IDENT_15 query = new ddf . catalog . operation . impl . METHOD_17 ( filter ) ; ddf . catalog . operation . IDENT_16 IDENT_17 = ddf . catalog . source . solr . provider . IDENT_1 . provider . query ( new ddf . catalog . operation . impl . METHOD_18 ( query ) ) ; java . util . List < ddf . catalog . data . Result > results = IDENT_17 . METHOD_19 ( ) ; "<AssertPlaceHolder>" ; } size ( ) { return map . size ( ) ; }
org . junit . Assert . assertEquals ( 0 , results . size ( ) ) 