METHOD_0 ( ) { ddf . catalog . source . solr . provider . IDENT_0 . METHOD_1 ( ddf . catalog . source . solr . provider . IDENT_1 . provider ) ; ddf . catalog . source . solr . provider . IDENT_2 IDENT_3 = new ddf . catalog . source . solr . provider . METHOD_2 ( ddf . catalog . source . solr . provider . IDENT_4 . METHOD_3 ( ) ) ; ddf . catalog . operation . IDENT_5 IDENT_6 = ddf . catalog . source . solr . provider . IDENT_0 . create ( IDENT_3 , ddf . catalog . source . solr . provider . IDENT_1 . provider ) ; java . lang . String id = IDENT_6 . METHOD_4 ( ) . get ( 0 ) . getId ( ) ; IDENT_3 . METHOD_5 ( STRING_0 ) ; java . lang . String [ ] IDENT_7 = new java . lang . String [ ] { id , STRING_1 } ; ddf . catalog . operation . IDENT_8 response = ddf . catalog . source . solr . provider . IDENT_0 . update ( IDENT_7 , java . util . Arrays . asList ( IDENT_3 , IDENT_3 ) , ddf . catalog . source . solr . provider . IDENT_1 . provider ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( ) { return IDENT_9 ; }
org . junit . Assert . assertEquals ( 1 , response . METHOD_6 ( ) . size ( ) ) 