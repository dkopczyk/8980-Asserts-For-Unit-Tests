METHOD_0 ( ) { ddf . catalog . util . impl . IDENT_0 runner = new ddf . catalog . util . impl . METHOD_1 ( ) ; ddf . catalog . util . impl . IDENT_1 IDENT_2 = new ddf . catalog . util . impl . METHOD_2 ( runner ) ; java . util . ArrayList < ddf . catalog . plugin . IDENT_3 > IDENT_4 = new java . util . ArrayList < ddf . catalog . plugin . IDENT_3 > ( ) ; ddf . catalog . operation . IDENT_5 request = new ddf . catalog . operation . impl . METHOD_3 ( true ) ; java . util . List < ddf . catalog . source . IDENT_6 > IDENT_7 = new java . util . ArrayList < ddf . catalog . source . IDENT_6 > ( ) ; ddf . catalog . source . IDENT_6 IDENT_8 = mock ( ddf . catalog . source . IDENT_6 . class ) ; when ( IDENT_8 . METHOD_4 ( ) ) . thenReturn ( true ) ; when ( IDENT_8 . METHOD_5 ( ) ) . thenReturn ( null ) ; IDENT_7 . add ( IDENT_8 ) ; ddf . catalog . impl . IDENT_9 IDENT_10 = new ddf . catalog . impl . METHOD_6 ( ) ; IDENT_10 . METHOD_7 ( IDENT_2 ) ; IDENT_10 . METHOD_8 ( new ddf . catalog . impl . METHOD_9 ( ) ) ; IDENT_10 . METHOD_10 ( IDENT_4 ) ; java . util . List < ddf . catalog . source . IDENT_6 > IDENT_11 = new java . util . ArrayList ( IDENT_7 ) ; IDENT_10 . METHOD_11 ( IDENT_11 ) ; ddf . catalog . impl . IDENT_12 framework = METHOD_12 ( IDENT_10 ) ; "<AssertPlaceHolder>" ; } METHOD_13 ( ddf . catalog . operation . IDENT_5 ) { return IDENT_13 . METHOD_13 ( IDENT_14 , IDENT_15 ) ; }
org . junit . Assert . assertNotNull ( framework . METHOD_13 ( request ) ) 