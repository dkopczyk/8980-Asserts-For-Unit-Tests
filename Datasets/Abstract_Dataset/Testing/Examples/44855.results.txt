METHOD_0 ( ) { when ( source . getId ( ) ) . thenReturn ( STRING_0 ) ; ddf . catalog . operation . IDENT_0 process = plugin . process ( source , IDENT_1 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_2 , METHOD_1 ( ) ) . METHOD_2 ( any ( ) , any ( ) ) ; } process ( ddf . catalog . source . IDENT_3 , ddf . catalog . operation . IDENT_0 ) { if ( ! ( METHOD_3 ( source ) ) ) { return input ; } ddf . catalog . operation . IDENT_0 request = input ; try { ddf . catalog . operation . Query query = request . METHOD_4 ( ) ; if ( IDENT_2 . METHOD_2 ( query , new ddf . catalog . filter . delegate . METHOD_5 ( ) ) ) { return request ; } java . util . List < org . opengis . filter . IDENT_4 > filters = new java . util . ArrayList ( ) ; filters . add ( IDENT_5 . METHOD_6 ( IDENT_6 . IDENT_7 ) . is ( ) . METHOD_7 ( ) . text ( IDENT_6 . IDENT_8 ) ) ; filters . add ( IDENT_5 . METHOD_6 ( IDENT_6 . IDENT_7 ) . empty ( ) ) ; org . opengis . filter . IDENT_4 IDENT_9 = IDENT_5 . METHOD_8 ( IDENT_5 . METHOD_9 ( filters ) , query ) ; ddf . catalog . operation . impl . IDENT_10 IDENT_11 = new ddf . catalog . operation . impl . METHOD_10 ( IDENT_9 , query . METHOD_11 ( ) , query . METHOD_12 ( ) , query . METHOD_13 ( ) , query . METHOD_14 ( ) , query . METHOD_15 ( ) ) ; request = new ddf . catalog . operation . impl . METHOD_16 ( IDENT_11 , request . METHOD_17 ( ) , request . METHOD_18 ( ) , request . METHOD_19 ( ) ) ; } catch ( ddf . catalog . source . IDENT_12 IDENT_13 ) { org . codice . ddf . catalog . plugin . IDENT_14 . IDENT_15 . LOGGER . debug ( STRING_1 , IDENT_13 ) ; } return request ; }
org . junit . Assert . assertThat ( process , org . hamcrest . Matchers . is ( IDENT_1 ) ) 