METHOD_0 ( ) { java . lang . String IDENT_0 ; IDENT_1 = mock ( ddf . catalog . IDENT_2 . class ) ; ddf . catalog . IDENT_3 . IDENT_4 . IDENT_5 IDENT_6 = new ddf . catalog . IDENT_3 . IDENT_4 . METHOD_1 ( IDENT_1 , null , IDENT_7 ) ; IDENT_0 = IDENT_6 . METHOD_2 ( STRING_0 , new org . codice . ddf . platform . util . METHOD_3 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ddf . camel . component . catalog . content . IDENT_8 , java . io . File ) { if ( IDENT_9 == null ) { return null ; } java . lang . String IDENT_10 = org . apache . commons . io . IDENT_11 . METHOD_4 ( IDENT_9 . getAbsolutePath ( ) ) ; java . lang . String IDENT_0 = null ; ddf . IDENT_12 . IDENT_13 IDENT_14 = IDENT_15 . METHOD_5 ( ) . METHOD_6 ( ) ; if ( ( IDENT_14 != null ) && ( IDENT_9 . exists ( ) ) ) { try ( java . io . InputStream IDENT_16 = com . google . common . io . IDENT_17 . METHOD_7 ( IDENT_9 ) . METHOD_8 ( ) ) { if ( IDENT_10 . equalsIgnoreCase ( STRING_0 ) ) { IDENT_0 = IDENT_14 . METHOD_9 ( IDENT_16 , IDENT_10 ) ; } else { IDENT_0 = IDENT_14 . METHOD_10 ( IDENT_10 ) ; } } catch ( ddf . IDENT_12 . IDENT_18 | java . io . IOException e ) { throw new ddf . camel . component . catalog . content . METHOD_11 ( e ) ; } } else if ( IDENT_9 . exists ( ) ) { ddf . camel . component . catalog . content . IDENT_19 . LOGGER . debug ( STRING_1 ) ; throw new ddf . camel . component . catalog . content . METHOD_11 ( ( STRING_2 + ( IDENT_9 . getName ( ) ) ) ) ; } return IDENT_0 ; }
org . junit . Assert . assertEquals ( "" , IDENT_0 ) 