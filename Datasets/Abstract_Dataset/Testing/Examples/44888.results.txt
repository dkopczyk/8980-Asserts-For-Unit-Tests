METHOD_0 ( ) { java . lang . String type = STRING_0 ; java . lang . String IDENT_0 = "" ; org . codice . ddf . IDENT_1 . IDENT_2 . query . IDENT_3 query = new org . codice . ddf . IDENT_1 . IDENT_2 . query . METHOD_1 ( 0 , 10 , STRING_1 , STRING_2 , INT_0 , org . codice . ddf . IDENT_1 . IDENT_2 . query . IDENT_4 . IDENT_5 ) ; query . METHOD_2 ( type , IDENT_0 ) ; org . opengis . filter . IDENT_6 filter = query . METHOD_3 ( ) ; org . codice . ddf . IDENT_1 . IDENT_2 . query . IDENT_7 IDENT_8 = new org . codice . ddf . IDENT_1 . IDENT_2 . query . METHOD_4 ( ) ; filter . accept ( IDENT_8 , null ) ; java . util . HashMap < java . lang . String , org . codice . ddf . IDENT_1 . IDENT_2 . query . IDENT_9 > map = ( ( java . util . HashMap < java . lang . String , org . codice . ddf . IDENT_1 . IDENT_2 . query . IDENT_9 > ) ( IDENT_8 . METHOD_5 ( ) ) ) ; METHOD_6 ( map ) ; java . util . List < org . opengis . filter . IDENT_6 > filters = METHOD_7 ( map , org . geotools . filter . IDENT_10 . class . getName ( ) ) ; "<AssertPlaceHolder>" ; METHOD_8 ( filters . get ( 0 ) , STRING_3 , type ) ; } size ( ) { return map . size ( ) ; }
org . junit . Assert . assertEquals ( 1 , filters . size ( ) ) 