METHOD_0 ( ) { final org . codice . ddf . configuration . IDENT_0 . IDENT_1 IDENT_2 = org . mockito . Mockito . mock ( org . codice . ddf . configuration . IDENT_0 . IDENT_1 . class ) ; final java . nio . file . Path IDENT_3 = org . mockito . Mockito . mock ( java . nio . file . Path . class ) ; final java . io . File file = org . mockito . Mockito . mock ( java . io . File . class ) ; final long IDENT_4 = INT_0 ; org . mockito . Mockito . when ( context . METHOD_1 ( ) ) . thenReturn ( IDENT_2 ) ; org . mockito . Mockito . when ( IDENT_2 . METHOD_2 ( IDENT_3 ) ) . thenReturn ( IDENT_3 ) ; org . mockito . Mockito . when ( IDENT_3 . METHOD_3 ( org . mockito . Mockito . any ( ) ) ) . thenReturn ( IDENT_3 ) ; org . mockito . Mockito . when ( IDENT_2 . METHOD_4 ( IDENT_3 ) ) . thenReturn ( IDENT_3 ) ; org . mockito . Mockito . when ( IDENT_3 . toString ( ) ) . thenReturn ( org . codice . ddf . configuration . IDENT_0 . IDENT_5 . IDENT_6 ) ; org . mockito . Mockito . when ( IDENT_3 . METHOD_5 ( ) ) . thenReturn ( file ) ; org . mockito . Mockito . when ( file . METHOD_6 ( ) ) . thenReturn ( IDENT_4 ) ; final org . codice . ddf . configuration . IDENT_0 . IDENT_7 entry = new org . codice . ddf . configuration . IDENT_0 . METHOD_7 ( context , IDENT_3 ) ; "<AssertPlaceHolder>" ; org . mockito . Mockito . verify ( file ) . METHOD_6 ( ) ; } METHOD_8 ( ) { return file . METHOD_6 ( ) ; }
org . junit . Assert . assertThat ( entry . METHOD_8 ( ) , org . hamcrest . Matchers . equalTo ( IDENT_4 ) ) 