METHOD_0 ( ) { IDENT_0 . IDENT_1 . tc . IDENT_2 . IDENT_3 . core . schema . IDENT_4 . IDENT_5 request = ddf . security . IDENT_6 . IDENT_7 . IDENT_2 . IDENT_8 . IDENT_9 . METHOD_1 ( ddf . security . IDENT_6 . IDENT_7 . IDENT_2 . IDENT_8 . IDENT_10 , METHOD_2 ( STRING_0 ) , new ddf . security . IDENT_11 . METHOD_3 ( ddf . security . IDENT_6 . IDENT_7 . IDENT_2 . IDENT_8 . IDENT_12 ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( IDENT_0 . IDENT_1 . tc . IDENT_2 . IDENT_3 . core . schema . IDENT_4 . IDENT_5 ) { boolean IDENT_13 ; IDENT_0 . IDENT_1 . tc . IDENT_2 . IDENT_3 . core . schema . IDENT_4 . IDENT_14 IDENT_15 ; try { ddf . security . IDENT_6 . IDENT_7 . IDENT_2 . IDENT_16 . LOGGER . debug ( STRING_1 ) ; IDENT_15 = IDENT_6 . evaluate ( IDENT_17 ) ; ddf . security . IDENT_6 . IDENT_7 . IDENT_2 . IDENT_16 . LOGGER . debug ( STRING_2 ) ; IDENT_13 = ( IDENT_15 != null ) && ( ( IDENT_15 . METHOD_5 ( ) . get ( 0 ) . METHOD_6 ( ) ) == ( IDENT_0 . IDENT_1 . tc . IDENT_2 . IDENT_3 . core . schema . IDENT_4 . IDENT_18 . IDENT_19 ) ) ; ddf . security . IDENT_6 . IDENT_7 . IDENT_2 . IDENT_16 . LOGGER . debug ( STRING_3 , IDENT_13 ) ; } catch ( ddf . security . IDENT_6 . IDENT_7 . IDENT_2 . processor . IDENT_20 e ) { ddf . security . IDENT_6 . IDENT_7 . IDENT_2 . IDENT_16 . LOGGER . debug ( e . getMessage ( ) , e ) ; IDENT_13 = false ; } return IDENT_13 ; }
org . junit . Assert . assertThat ( ddf . security . IDENT_6 . IDENT_7 . IDENT_2 . IDENT_8 . IDENT_9 . METHOD_4 ( request ) , org . hamcrest . Matchers . equalTo ( false ) ) 