METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = METHOD_1 ( "test" ) ; IDENT_3 . store ( IDENT_4 . IDENT_5 , key ( 0 ) , value ( 0 ) ) ; IDENT_3 . store ( IDENT_4 . IDENT_5 , key ( 1 ) , value ( 1 ) ) ; IDENT_3 . store ( IDENT_4 . IDENT_5 , key ( 2 ) , value ( 2 ) ) ; org . IDENT_0 . IDENT_1 . IDENT_6 c ; { org . IDENT_0 . IDENT_1 . IDENT_4 IDENT_7 = IDENT_8 . METHOD_2 ( ) ; IDENT_7 . METHOD_3 ( INT_0 , TimeUnit . IDENT_9 ) ; c = IDENT_3 . METHOD_4 ( IDENT_7 ) ; c . first ( ) ; } org . IDENT_0 . IDENT_1 . IDENT_4 IDENT_7 = IDENT_8 . METHOD_2 ( ) ; IDENT_3 . METHOD_5 ( IDENT_7 , key ( 1 ) ) ; java . util . concurrent . atomic . IDENT_10 < java . lang . Exception > ex = new java . util . concurrent . atomic . METHOD_6 ( ) ; java . lang . Thread t = new java . lang . Thread ( ( ) -> { try { c . METHOD_7 ( key ( 2 ) ) ; } catch ( e ) { ex . set ( org . IDENT_0 . IDENT_1 . e ) ; } } ) ; METHOD_8 ( t ) ; IDENT_3 . delete ( IDENT_7 , key ( 1 ) ) ; IDENT_7 . commit ( ) ; t . join ( ) ; "<AssertPlaceHolder>" ; METHOD_9 ( key ( 2 ) , c . key ( ) ) ; METHOD_9 ( value ( 2 ) , c . value ( ) ) ; } get ( ) { return IDENT_11 ; }
org . junit . Assert . assertNull ( ex . get ( ) ) 