METHOD_0 ( ) { final java . lang . Object IDENT_0 = new java . lang . Object ( ) ; final java . lang . Object IDENT_1 = new java . lang . Object ( ) ; java . util . concurrent . IDENT_2 < java . lang . Object > c = new org . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_1 ( ) ; org . IDENT_3 . IDENT_4 . IDENT_6 IDENT_7 = new org . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_2 ( ) { @ org . IDENT_3 . IDENT_4 . METHOD_3 ( STRING_0 ) @ org . IDENT_3 . IDENT_4 . Override public < T > T invoke ( java . util . concurrent . IDENT_2 < T > c ) throws org . IDENT_3 . IDENT_4 . Exception { return ( ( T ) ( IDENT_0 ) ) ; } } ; org . IDENT_3 . IDENT_4 . IDENT_6 IDENT_8 = new org . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_2 ( ) { @ org . IDENT_3 . IDENT_4 . METHOD_3 ( STRING_0 ) @ org . IDENT_3 . IDENT_4 . Override public < T > T invoke ( java . util . concurrent . IDENT_2 < T > c ) throws org . IDENT_3 . IDENT_4 . Exception { return ( ( T ) ( IDENT_1 ) ) ; } } ; impl = new org . IDENT_3 . IDENT_4 . METHOD_4 ( java . util . Arrays . asList ( IDENT_7 , IDENT_8 ) ) ; "<AssertPlaceHolder>" ; } invoke ( java . lang . IDENT_9 ) { final org . IDENT_3 . IDENT_4 . IDENT_10 IDENT_11 = new org . IDENT_3 . IDENT_4 . METHOD_5 ( ) ; try { IDENT_12 . invoke ( new java . lang . METHOD_6 ( ) { public void run ( ) { try { IDENT_11 . invoke ( r ) ; } catch ( java . lang . Exception e ) { throw new java . lang . RuntimeException ( org . IDENT_3 . IDENT_4 . IDENT_13 . IDENT_14 , e ) ; } } } ) ; METHOD_7 ( IDENT_11 ) ; } catch ( java . lang . RuntimeException IDENT_15 ) { METHOD_8 ( IDENT_11 ) ; if ( org . IDENT_3 . IDENT_4 . IDENT_13 . IDENT_14 . equals ( IDENT_15 . getMessage ( ) ) ) { throw ( ( java . lang . Exception ) ( IDENT_15 . METHOD_9 ( ) ) ) ; } else { throw IDENT_15 ; } } }
org . junit . Assert . assertSame ( IDENT_0 , impl . invoke ( c ) ) 