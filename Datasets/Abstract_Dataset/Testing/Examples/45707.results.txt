run ( ) { final java . lang . String IDENT_0 = STRING_0 ; org . IDENT_1 . IDENT_2 . model . core . IDENT_3 IDENT_4 = new org . IDENT_1 . IDENT_2 . model . core . METHOD_0 ( IDENT_0 ) ; client . METHOD_1 ( ) . create ( IDENT_4 , STRING_1 , org . IDENT_1 . IDENT_2 . model . core . METHOD_0 . class ) ; org . IDENT_1 . IDENT_2 . model . core . IDENT_5 key = new org . IDENT_1 . IDENT_2 . model . core . METHOD_2 ( IDENT_6 , IDENT_0 ) ; java . io . InputStream stream = new java . io . ByteArrayInputStream ( org . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_9 . content . getBytes ( ) ) ; client . content ( ) . store ( key , org . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_9 . path , stream ) ; METHOD_3 ( ) ; boolean exists = client . content ( ) . exists ( IDENT_6 , IDENT_0 , org . IDENT_1 . IDENT_2 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 , true ) ; "<AssertPlaceHolder>" ; } exists ( org . IDENT_1 . IDENT_2 . model . core . IDENT_11 , java . lang . String , java . lang . String , boolean ) { return exists ( new org . IDENT_1 . IDENT_2 . model . core . METHOD_2 ( IDENT_12 , type , name ) , path , IDENT_13 ) ; }
org . junit . Assert . assertThat ( exists , org . hamcrest . CoreMatchers . equalTo ( true ) ) 