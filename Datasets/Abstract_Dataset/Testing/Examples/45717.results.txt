METHOD_0 ( ) { final org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = IDENT_6 . METHOD_1 ( org . IDENT_0 . IDENT_1 . IDENT_7 . data . IDENT_8 . IDENT_9 , IDENT_10 . METHOD_2 ( ) ) ; IDENT_5 . METHOD_3 ( ) ; final org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_11 = IDENT_6 . METHOD_1 ( org . IDENT_0 . IDENT_1 . IDENT_7 . data . IDENT_8 . IDENT_9 , IDENT_10 . METHOD_2 ( ) , STRING_0 ) ; final org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_12 = IDENT_6 . METHOD_1 ( org . IDENT_0 . IDENT_1 . IDENT_7 . data . IDENT_8 . IDENT_9 , org . IDENT_0 . IDENT_1 . IDENT_7 . data . IDENT_13 , IDENT_10 . METHOD_2 ( ) , STRING_0 ) ; java . lang . String IDENT_14 = STRING_1 ; IDENT_11 . METHOD_4 ( IDENT_14 , new org . IDENT_0 . IDENT_1 . IDENT_15 . METHOD_5 ( org . IDENT_0 . IDENT_1 . IDENT_15 . METHOD_5 . IDENT_16 , STRING_2 ) ) ; IDENT_12 . METHOD_4 ( IDENT_14 , new org . IDENT_0 . IDENT_1 . IDENT_15 . METHOD_5 ( org . IDENT_0 . IDENT_1 . IDENT_15 . METHOD_5 . IDENT_16 , STRING_2 ) ) ; final boolean result = action . METHOD_6 ( ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( ) { java . io . File file = IDENT_17 . METHOD_7 ( ) . METHOD_8 ( ) ; if ( file . exists ( ) ) { logger . info ( STRING_3 , file ) ; java . io . File IDENT_18 = IDENT_17 . METHOD_9 ( ) . METHOD_8 ( ) ; if ( IDENT_18 . exists ( ) ) { java . io . File IDENT_19 = new java . io . File ( ( ( ( IDENT_18 . getAbsolutePath ( ) ) + STRING_4 ) + ( new java . text . METHOD_10 ( STRING_5 ) . format ( new java . util . Date ( ) ) ) ) ) ; try { logger . info ( STRING_6 , IDENT_19 ) ; org . IDENT_20 . IDENT_21 . util . IDENT_22 . METHOD_11 ( IDENT_18 , IDENT_19 ) ; } catch ( java . io . IOException e ) { throw new org . IDENT_0 . IDENT_1 . action . METHOD_12 ( STRING_7 , IDENT_18 , IDENT_19 , e ) ; } } try ( java . io . InputStream stream = new java . io . METHOD_13 ( file ) ) { controller . METHOD_14 ( stream ) ; } catch ( java . lang . Exception e ) { throw new org . IDENT_0 . IDENT_1 . action . METHOD_12 ( STRING_8 , e ) ; } java . io . File IDENT_23 = new java . io . File ( ( ( file . getAbsolutePath ( ) ) + STRING_9 ) ) ; try { org . IDENT_20 . IDENT_21 . util . IDENT_22 . METHOD_11 ( file , IDENT_23 ) ; logger . info ( STRING_10 , file , IDENT_23 ) ; } catch ( java . io . IOException e ) { throw new org . IDENT_0 . IDENT_1 . action . METHOD_12 ( STRING_11 , file , IDENT_23 , e ) ; } } else { logger . info ( STRING_12 , file . getAbsolutePath ( ) ) ; } return true ; }
org . junit . Assert . assertThat ( result , org . hamcrest . CoreMatchers . equalTo ( false ) ) 