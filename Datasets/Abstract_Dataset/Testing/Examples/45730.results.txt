METHOD_0 ( ) { org . IDENT_0 . view . IDENT_1 . IDENT_2 IDENT_1 = new org . IDENT_0 . view . IDENT_1 . METHOD_1 ( STRING_0 , STRING_1 , new java . util . HashMap ( ) , new java . util . HashMap ( ) , new java . util . HashMap ( ) ) ; IDENT_1 . METHOD_2 ( new org . IDENT_0 . view . IDENT_3 . METHOD_3 ( STRING_2 , STRING_3 , STRING_4 ) ) ; IDENT_1 . METHOD_4 ( STRING_3 ) ; java . lang . String IDENT_4 = IDENT_5 . METHOD_5 ( STRING_5 ) . getAbsolutePath ( ) ; IDENT_1 . METHOD_6 ( IDENT_4 ) ; org . IDENT_0 . view . IDENT_1 . IDENT_6 IDENT_7 = org . mockito . Mockito . mock ( org . IDENT_0 . view . IDENT_1 . IDENT_6 . class ) ; when ( IDENT_7 . METHOD_7 ( METHOD_8 ( ) ) ) . thenReturn ( IDENT_1 ) ; org . IDENT_0 . view . IDENT_1 . IDENT_8 IDENT_9 = new org . IDENT_0 . view . IDENT_1 . METHOD_9 ( org . mockito . Mockito . mock ( org . IDENT_0 . view . IDENT_3 . IDENT_10 . class ) , org . mockito . Mockito . mock ( org . IDENT_0 . view . IDENT_11 . IDENT_12 . class ) , IDENT_7 , org . mockito . Mockito . mock ( org . IDENT_0 . view . IDENT_1 . IDENT_13 . class ) , org . mockito . Mockito . mock ( org . IDENT_0 . view . IDENT_14 . IDENT_15 . class ) , org . mockito . Mockito . mock ( org . IDENT_0 . view . IDENT_16 . IDENT_17 . class ) , org . mockito . Mockito . mock ( org . IDENT_0 . view . IDENT_11 . IDENT_18 . class ) , org . mockito . Mockito . mock ( org . IDENT_0 . view . IDENT_3 . IDENT_19 . class ) , ( - 1 ) ) ; java . io . File IDENT_20 = IDENT_9 . METHOD_0 ( org . mockito . Mockito . mock ( org . IDENT_0 . view . IDENT_3 . METHOD_3 . class ) ) ; "<AssertPlaceHolder>" ; } METHOD_0 ( org . IDENT_0 . view . IDENT_3 . METHOD_3 ) { org . IDENT_0 . view . IDENT_1 . METHOD_1 IDENT_1 = METHOD_10 ( IDENT_21 ) ; if ( ( IDENT_1 == null ) || ( ( IDENT_1 . METHOD_11 ( ) ) == null ) ) { throw new org . IDENT_0 . view . IDENT_14 . METHOD_12 ( ) ; } java . io . File IDENT_22 = new java . io . File ( IDENT_1 . METHOD_11 ( ) ) ; if ( ! ( IDENT_22 . exists ( ) ) ) { IDENT_1 . METHOD_6 ( null ) ; IDENT_23 . save ( IDENT_1 ) ; METHOD_13 ( IDENT_1 ) ; throw new org . IDENT_0 . view . IDENT_14 . METHOD_12 ( ) ; } return IDENT_22 ; }
org . junit . Assert . assertEquals ( IDENT_4 , IDENT_20 . getAbsolutePath ( ) ) 