METHOD_0 ( ) { IDENT_0 = io . IDENT_1 . connect . jdbc . util . IDENT_2 . IDENT_3 ; IDENT_4 = METHOD_1 ( ) ; java . lang . String expected = STRING_0 + ( ( ( ( ( ( ( ( STRING_1 + STRING_2 ) + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) + STRING_9 ) ; java . lang . String sql = IDENT_4 . METHOD_2 ( IDENT_5 , IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( io . IDENT_1 . connect . jdbc . util . IDENT_7 , java . util . Collection ) { io . IDENT_1 . connect . jdbc . util . IDENT_8 builder = METHOD_3 ( ) ; final java . util . List < java . lang . String > IDENT_9 = METHOD_4 ( fields ) ; builder . append ( STRING_10 ) ; builder . append ( table ) ; builder . append ( STRING_11 ) ; METHOD_5 ( builder , fields ) ; if ( ! ( IDENT_9 . isEmpty ( ) ) ) { builder . append ( STRING_12 ) ; builder . append ( java . lang . System . METHOD_6 ( ) ) ; builder . append ( STRING_13 ) ; builder . METHOD_7 ( ) . METHOD_8 ( STRING_12 ) . METHOD_9 ( io . IDENT_1 . connect . jdbc . util . IDENT_8 . METHOD_10 ( ) ) . of ( IDENT_9 ) ; builder . append ( STRING_14 ) ; } builder . append ( STRING_14 ) ; return builder . toString ( ) ; }
org . junit . Assert . assertEquals ( expected , sql ) 