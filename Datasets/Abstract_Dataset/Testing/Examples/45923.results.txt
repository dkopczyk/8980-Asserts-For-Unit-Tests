METHOD_0 ( ) { final java . lang . Object result = IDENT_0 . METHOD_1 ( INT_0 , STRING_0 ) ; final java . lang . String IDENT_1 = new java . text . METHOD_2 ( STRING_0 ) . format ( new java . util . Date ( INT_0 ) ) ; "<AssertPlaceHolder>" ; } format ( org . apache . kafka . IDENT_2 . consumer . IDENT_3 ) { return java . util . stream . IDENT_4 . stream ( records . records ( IDENT_5 ) . METHOD_3 ( ) , false ) . filter ( IDENT_6 :: IDENT_7 ) . filter ( ( r ) -> ( r . value ( ) ) != null ) . map ( ( record ) -> { if ( ( IDENT_8 ) == null ) { IDENT_8 = METHOD_4 ( record ) ; } try { return IDENT_8 . METHOD_5 ( record ) ; } catch ( e ) { IDENT_9 . log . warn ( STRING_1 , io . IDENT_10 . IDENT_11 . rest . server . resources . streaming . e ) ; return null ; } } ) . filter ( IDENT_6 :: IDENT_7 ) . collect ( java . util . stream . IDENT_12 . toList ( ) ) ; }
org . junit . Assert . assertThat ( result , org . hamcrest . CoreMatchers . is ( IDENT_1 ) ) 