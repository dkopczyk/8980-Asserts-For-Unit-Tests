METHOD_0 ( ) { final io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = METHOD_1 ( STRING_0 ) ; final io . IDENT_0 . IDENT_1 . IDENT_5 IDENT_6 = IDENT_4 . apply ( io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . METHOD_2 ( INT_0 , STRING_1 , 1L , STRING_2 , STRING_3 , FLOAT_0 , STRING_4 ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { final io . IDENT_0 . IDENT_1 . IDENT_8 . plan . IDENT_9 IDENT_10 = io . IDENT_0 . IDENT_1 . IDENT_11 . IDENT_12 . METHOD_3 ( query , IDENT_13 ) ; final io . IDENT_0 . IDENT_1 . IDENT_8 . plan . IDENT_14 IDENT_15 = ( ( io . IDENT_0 . IDENT_1 . IDENT_8 . plan . IDENT_14 ) ( IDENT_10 . METHOD_4 ( ) . get ( 0 ) ) ) ; final org . apache . kafka . connect . data . Schema schema = IDENT_10 . METHOD_5 ( ) . METHOD_6 ( ) ; final java . util . List < io . IDENT_0 . IDENT_1 . util . IDENT_16 > IDENT_17 = IDENT_15 . METHOD_7 ( ) ; final java . util . List < io . IDENT_0 . IDENT_1 . util . IDENT_18 > metadata = METHOD_8 ( IDENT_17 , schema ) ; final java . util . List < java . lang . String > IDENT_19 = IDENT_17 . stream ( ) . map ( IDENT_16 :: getName ) . collect ( java . util . stream . IDENT_20 . toList ( ) ) ; return new io . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_9 ( IDENT_19 , metadata , IDENT_21 ) ; }
org . junit . Assert . assertThat ( IDENT_6 , org . hamcrest . Matchers . is ( io . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . METHOD_2 ( 1L , STRING_3 , FLOAT_0 ) ) ) 