METHOD_0 ( ) { final java . util . Map < java . lang . String , java . lang . Object > row = new java . util . HashMap ( ) ; row . put ( STRING_0 , null ) ; row . put ( STRING_1 , null ) ; row . put ( STRING_2 , null ) ; row . put ( STRING_3 , null ) ; row . put ( STRING_4 , new java . lang . Double [ ] { 0.0 , null } ) ; row . put ( STRING_5 , null ) ; final byte [ ] bytes = IDENT_0 . METHOD_1 ( row ) ; final io . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = IDENT_5 . METHOD_2 ( "" , bytes ) ; final io . IDENT_1 . IDENT_2 . IDENT_3 expected = new io . IDENT_1 . IDENT_2 . METHOD_3 ( java . util . Arrays . asList ( null , null , null , null , new java . lang . Double [ ] { 0.0 , null } , null ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String , java . lang . Class ) { return io . IDENT_1 . IDENT_2 . rest . entity . IDENT_6 . IDENT_7 . METHOD_4 ( json , type ) ; }
org . junit . Assert . assertThat ( IDENT_4 , org . hamcrest . CoreMatchers . is ( expected ) ) 