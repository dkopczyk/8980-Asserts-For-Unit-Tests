METHOD_0 ( ) { final java . lang . Long l = io . IDENT_0 . IDENT_1 . IDENT_2 . util . IDENT_3 . METHOD_1 ( "1" ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . Object ) { java . util . IDENT_4 . METHOD_2 ( object , STRING_0 ) ; if ( object instanceof java . lang . Long ) { return ( ( java . lang . Long ) ( object ) ) ; } if ( object instanceof java . lang . IDENT_5 ) { return ( ( java . lang . IDENT_5 ) ( object ) ) . METHOD_3 ( ) ; } if ( object instanceof java . lang . String ) { try { return java . lang . Long . METHOD_4 ( ( ( java . lang . String ) ( object ) ) ) ; } catch ( final java . lang . IDENT_6 e ) { throw new io . IDENT_0 . IDENT_1 . util . METHOD_5 ( ( ( STRING_1 + object ) + STRING_2 ) , e ) ; } } throw new java . lang . IllegalArgumentException ( STRING_3 ) ; }
org . junit . Assert . assertThat ( l , org . hamcrest . CoreMatchers . equalTo ( 1L ) ) 