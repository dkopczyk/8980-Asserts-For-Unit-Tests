METHOD_0 ( ) { org . apache . avro . Schema IDENT_0 = org . apache . kafka . connect . data . org . apache . avro . IDENT_1 . METHOD_1 ( ) . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , byte [ ] ) { try { io . IDENT_2 . kafka . IDENT_3 . IDENT_4 IDENT_5 = IDENT_6 . METHOD_4 ( IDENT_7 , IDENT_8 , value ) ; if ( IDENT_5 == null ) { return org . apache . kafka . connect . data . IDENT_9 . IDENT_10 ; } org . apache . avro . IDENT_11 . IDENT_12 IDENT_13 = IDENT_5 . container ( ) ; java . lang . Integer version = IDENT_5 . version ( ) ; if ( IDENT_13 instanceof org . apache . avro . IDENT_11 . IDENT_14 ) { return IDENT_15 . METHOD_3 ( IDENT_13 . METHOD_5 ( ) , IDENT_13 , version ) ; } else if ( IDENT_13 instanceof io . IDENT_2 . kafka . IDENT_3 . IDENT_16 ) { return IDENT_15 . METHOD_3 ( IDENT_13 . METHOD_5 ( ) , ( ( io . IDENT_2 . kafka . IDENT_3 . IDENT_16 ) ( IDENT_13 ) ) . getValue ( ) , version ) ; } throw new org . apache . kafka . connect . errors . METHOD_6 ( java . lang . String . format ( STRING_0 , IDENT_7 ) ) ; } catch ( org . apache . kafka . common . errors . IDENT_17 e ) { throw new org . apache . kafka . connect . errors . METHOD_6 ( java . lang . String . format ( STRING_1 , IDENT_7 ) , e ) ; } }
org . junit . Assert . assertEquals ( null , IDENT_15 . METHOD_3 ( IDENT_0 , null ) ) 