METHOD_0 ( ) { org . apache . avro . Schema IDENT_0 = METHOD_1 ( ) ; org . apache . kafka . connect . data . Schema schema = METHOD_2 ( ) ; org . apache . avro . IDENT_1 . IDENT_2 IDENT_3 = new org . apache . avro . IDENT_1 . METHOD_3 ( IDENT_0 ) . set ( STRING_0 , new org . apache . avro . IDENT_1 . METHOD_3 ( METHOD_4 ( ) ) . set ( STRING_1 , STRING_2 ) . build ( ) ) . build ( ) ; org . apache . kafka . connect . data . IDENT_4 IDENT_5 = new org . apache . kafka . connect . data . METHOD_5 ( schema ) . put ( STRING_0 , new org . apache . kafka . connect . data . METHOD_5 ( METHOD_6 ( ) ) . put ( STRING_1 , STRING_2 ) ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( java . lang . String , byte [ ] ) { try { io . IDENT_6 . kafka . IDENT_7 . IDENT_8 IDENT_9 = IDENT_10 . METHOD_8 ( IDENT_11 , IDENT_12 , value ) ; if ( IDENT_9 == null ) { return org . apache . kafka . connect . data . IDENT_13 . IDENT_14 ; } org . apache . avro . IDENT_1 . IDENT_15 IDENT_16 = IDENT_9 . container ( ) ; java . lang . Integer version = IDENT_9 . version ( ) ; if ( IDENT_16 instanceof org . apache . avro . IDENT_1 . IDENT_17 ) { return IDENT_18 . METHOD_7 ( IDENT_16 . METHOD_9 ( ) , IDENT_16 , version ) ; } else if ( IDENT_16 instanceof io . IDENT_6 . kafka . IDENT_7 . IDENT_19 ) { return IDENT_18 . METHOD_7 ( IDENT_16 . METHOD_9 ( ) , ( ( io . IDENT_6 . kafka . IDENT_7 . IDENT_19 ) ( IDENT_16 ) ) . getValue ( ) , version ) ; } throw new org . apache . kafka . connect . errors . METHOD_10 ( java . lang . String . format ( STRING_3 , IDENT_11 ) ) ; } catch ( org . apache . kafka . common . errors . IDENT_20 e ) { throw new org . apache . kafka . connect . errors . METHOD_10 ( java . lang . String . format ( STRING_4 , IDENT_11 ) , e ) ; } }
org . junit . Assert . assertEquals ( new org . apache . kafka . connect . data . METHOD_11 ( schema , IDENT_5 ) , IDENT_18 . METHOD_7 ( IDENT_0 , IDENT_3 ) ) 