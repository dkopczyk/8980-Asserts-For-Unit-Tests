METHOD_0 ( ) { try { final int IDENT_0 = 7 ; gov . hhs . fha . nhinc . IDENT_1 . IDENT_2 . IDENT_3 request = new gov . hhs . fha . nhinc . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; request . METHOD_2 ( "" ) ; gov . hhs . fha . nhinc . IDENT_4 . adapter . IDENT_5 . request . queue . IDENT_6 IDENT_7 = new gov . hhs . fha . nhinc . IDENT_4 . adapter . IDENT_5 . request . queue . METHOD_3 ( ) { @ gov . hhs . fha . nhinc . IDENT_4 . adapter . IDENT_5 . request . queue . Override MOD_0 gov . hhs . fha . nhinc . IDENT_4 . adapter . IDENT_5 . request . queue . IDENT_8 METHOD_4 ( ) { return IDENT_9 ; } } ; context . METHOD_5 ( new org . IDENT_10 . METHOD_6 ( ) { { METHOD_7 ( IDENT_0 ) . of ( IDENT_9 ) . METHOD_8 ( with ( any ( java . lang . String . class ) ) ) ; METHOD_9 ( METHOD_10 ( METHOD_11 ( METHOD_12 ( ) ) , METHOD_11 ( METHOD_13 ( ) ) , METHOD_11 ( METHOD_14 ( ) ) , METHOD_11 ( METHOD_15 ( ) ) , METHOD_11 ( METHOD_16 ( ) ) , METHOD_11 ( new org . IDENT_11 . IDENT_12 . METHOD_17 ( ) ) , METHOD_11 ( null ) ) ) ; } } ) ; gov . hhs . fha . nhinc . IDENT_1 . IDENT_2 . IDENT_13 response ; for ( int i = 0 ; i < IDENT_0 ; i ++ ) { response = IDENT_7 . METHOD_8 ( request , null ) ; "<AssertPlaceHolder>" ; } } catch ( java . lang . Throwable t ) { System . out . println ( ( STRING_0 + ( t . getMessage ( ) ) ) ) ; t . printStackTrace ( ) ; org . junit . Assert . fail ( ( STRING_0 + ( t . getMessage ( ) ) ) ) ; } } METHOD_8 ( gov . hhs . fha . nhinc . IDENT_1 . IDENT_2 . METHOD_1 , javax . xml . ws . IDENT_14 ) { gov . hhs . fha . nhinc . IDENT_1 . IDENT_2 . IDENT_13 response = new gov . hhs . fha . nhinc . IDENT_1 . IDENT_2 . METHOD_18 ( ) ; gov . hhs . fha . nhinc . IDENT_1 . IDENT_2 . IDENT_15 IDENT_16 = new gov . hhs . fha . nhinc . IDENT_1 . IDENT_2 . METHOD_19 ( ) ; IDENT_16 . METHOD_20 ( Boolean . IDENT_17 ) ; response . METHOD_21 ( IDENT_16 ) ; gov . hhs . fha . nhinc . IDENT_4 . adapter . IDENT_5 . request . queue . IDENT_8 IDENT_18 = METHOD_4 ( ) ; org . IDENT_11 . IDENT_12 . METHOD_17 IDENT_19 = IDENT_18 . METHOD_8 ( request . METHOD_22 ( ) ) ; if ( ( ( ( ( ( IDENT_19 != null ) && ( org . apache . commons . collections . IDENT_20 . METHOD_23 ( IDENT_19 . METHOD_24 ( ) ) ) ) && ( ( IDENT_19 . METHOD_24 ( ) . get ( 0 ) ) != null ) ) && ( ( IDENT_19 . METHOD_24 ( ) . get ( 0 ) . METHOD_25 ( ) ) != null ) ) && ( ( IDENT_19 . METHOD_24 ( ) . get ( 0 ) . METHOD_25 ( ) . getCode ( ) ) != null ) ) && ( IDENT_19 . METHOD_24 ( ) . get ( 0 ) . METHOD_25 ( ) . getCode ( ) . equals ( IDENT_21 . IDENT_22 ) ) ) { IDENT_16 . METHOD_20 ( Boolean . IDENT_23 ) ; } return response ; }
org . junit . Assert . assertNotNull ( response ) 