METHOD_0 ( ) { org . antlr . IDENT_0 . IDENT_1 g = new org . antlr . IDENT_0 . METHOD_1 ( ( STRING_0 + STRING_1 ) ) ; java . lang . String IDENT_2 = STRING_2 ; org . antlr . IDENT_3 antlr = METHOD_2 ( ) ; antlr . METHOD_3 ( null ) ; org . antlr . IDENT_4 . IDENT_5 generator = new org . antlr . IDENT_4 . METHOD_4 ( antlr , g , STRING_3 ) ; g . METHOD_5 ( generator ) ; generator . METHOD_6 ( ) ; org . IDENT_6 . v4 . IDENT_7 IDENT_8 = generator . METHOD_7 ( ) ; java . lang . String code = IDENT_8 . render ( ) ; int m = code . indexOf ( STRING_4 ) ; java . lang . String found = code . substring ( m , ( m + ( IDENT_2 . length ( ) ) ) ) ; "<AssertPlaceHolder>" ; } substring ( int , int ) { return new java . lang . String ( data , start , ( ( IDENT_9 - start ) + 1 ) ) ; }
org . junit . Assert . assertEquals ( IDENT_2 , found ) 