METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( STRING_0 , IDENT_1 , IDENT_2 ) ) . thenReturn ( com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_2 ( STRING_1 , IDENT_1 , IDENT_2 , null ) ) ; "<AssertPlaceHolder>" ; verify ( IDENT_0 ) . METHOD_1 ( STRING_0 , IDENT_1 , IDENT_2 ) ; } evaluate ( java . lang . String , org . apache . IDENT_4 . IDENT_8 ) { java . util . List < com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 > IDENT_9 = IDENT_10 . entrySet ( ) . stream ( ) . map ( ( IDENT_11 ) -> IDENT_11 . getValue ( ) . METHOD_1 ( IDENT_11 . getKey ( ) , IDENT_1 , IDENT_2 ) ) . METHOD_3 ( ( IDENT_12 ) -> logger . debug ( ( ( ( ( ( ( IDENT_12 . isValid ( ) ? STRING_2 : STRING_3 ) + STRING_4 ) + ( IDENT_2 . getId ( ) . getValue ( ) ) ) + STRING_5 ) + ( IDENT_12 . METHOD_4 ( ) ) ) + ( IDENT_12 . METHOD_5 ( ) . map ( ( IDENT_13 ) -> STRING_6 + IDENT_13 ) . METHOD_6 ( "" ) ) ) ) ) . collect ( java . util . stream . IDENT_14 . toList ( ) ) ; if ( IDENT_9 . stream ( ) . METHOD_7 ( IDENT_7 :: isValid ) ) { return com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . accept ( STRING_7 , IDENT_1 , IDENT_2 , IDENT_9 . stream ( ) . METHOD_8 ( ( IDENT_12 ) -> IDENT_12 . METHOD_9 ( ) . entrySet ( ) . stream ( ) ) . collect ( java . util . stream . IDENT_14 . METHOD_10 ( java . util . Map . Entry :: getKey , java . util . Map . Entry :: getValue ) ) , IDENT_9 . stream ( ) . METHOD_8 ( ( IDENT_12 ) -> IDENT_12 . METHOD_11 ( ) . stream ( ) ) . collect ( java . util . stream . IDENT_14 . toList ( ) ) , IDENT_9 . stream ( ) . METHOD_8 ( ( IDENT_12 ) -> IDENT_12 . METHOD_12 ( ) . stream ( ) ) . collect ( java . util . stream . IDENT_14 . toList ( ) ) , IDENT_9 . stream ( ) . METHOD_8 ( ( IDENT_12 ) -> IDENT_12 . METHOD_13 ( ) . stream ( ) ) . collect ( java . util . stream . IDENT_14 . toList ( ) ) ) ; } return com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_2 ( STRING_7 , IDENT_1 , IDENT_2 , null ) ; }
org . junit . Assert . assertFalse ( filter . evaluate ( IDENT_1 , IDENT_2 ) . isValid ( ) ) 