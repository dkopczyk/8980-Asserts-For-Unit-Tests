METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; IDENT_4 . IDENT_5 = true ; IDENT_4 . IDENT_6 = false ; for ( int i = 0 ; i < 9 ; i ++ ) { IDENT_4 . IDENT_7 . add ( java . lang . String . format ( STRING_0 , i ) ) ; } com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_8 IDENT_9 = new com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 ( new IDENT_10 . IDENT_11 . list . array . METHOD_3 ( new int [ ] { 1 , 2 , 3 , 4 } ) ) ; com . IDENT_0 . IDENT_12 . model . IDENT_13 IDENT_14 = new com . IDENT_0 . IDENT_12 . model . METHOD_4 ( ) ; IDENT_14 . IDENT_15 = STRING_1 ; IDENT_14 . IDENT_16 = STRING_2 ; com . IDENT_0 . IDENT_12 . model . IDENT_17 IDENT_18 = new com . IDENT_0 . IDENT_12 . model . METHOD_5 ( ) ; IDENT_18 . IDENT_19 = ( 5 * INT_0 ) * INT_0 ; IDENT_18 . IDENT_20 = ( INT_1 * INT_0 ) * INT_0 ; IDENT_18 . IDENT_21 = INT_2 * INT_0 ; IDENT_18 . IDENT_22 = 0 ; IDENT_18 . IDENT_16 = STRING_2 ; java . util . List < com . IDENT_0 . IDENT_12 . model . METHOD_5 > IDENT_23 = java . util . Arrays . asList ( IDENT_18 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_24 IDENT_25 = com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_24 . create ( IDENT_14 , new int [ ] { 0 , INT_0 , INT_3 , INT_4 } , new int [ ] { 0 , INT_0 , INT_3 , INT_5 } , IDENT_23 , new int [ ] { 1 , 2 , 3 , 4 } , 0 ) ; IDENT_9 . METHOD_6 ( IDENT_25 ) ; IDENT_4 . IDENT_26 . add ( IDENT_9 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 IDENT_27 = new com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 ( new IDENT_10 . IDENT_11 . list . array . METHOD_3 ( new int [ ] { 5 , 6 , 7 , 8 } ) ) ; com . IDENT_0 . IDENT_12 . model . METHOD_4 IDENT_28 = new com . IDENT_0 . IDENT_12 . model . METHOD_4 ( ) ; IDENT_28 . IDENT_15 = STRING_1 ; IDENT_28 . IDENT_16 = STRING_3 ; com . IDENT_0 . IDENT_12 . model . METHOD_5 IDENT_29 = new com . IDENT_0 . IDENT_12 . model . METHOD_5 ( ) ; IDENT_29 . IDENT_19 = ( ( 5 * INT_0 ) * INT_0 ) + ( 8 * INT_0 ) ; IDENT_29 . IDENT_20 = ( INT_1 * INT_0 ) * INT_0 ; IDENT_29 . IDENT_21 = INT_2 * INT_0 ; IDENT_29 . IDENT_22 = 0 ; IDENT_29 . IDENT_16 = STRING_3 ; IDENT_23 = java . util . Arrays . asList ( IDENT_29 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_24 IDENT_30 = com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_24 . create ( IDENT_28 , new int [ ] { 0 , INT_0 , INT_3 , INT_4 } , new int [ ] { 0 , INT_0 , INT_3 , INT_6 } , IDENT_23 , new int [ ] { 5 , 6 , 7 , 8 } , 0 ) ; IDENT_30 . IDENT_31 = new java . lang . String [ ] { STRING_4 } ; IDENT_30 . IDENT_32 = new java . lang . String [ ] { STRING_5 } ; IDENT_30 . IDENT_33 = new java . lang . String [ ] { STRING_6 } ; IDENT_30 . IDENT_34 = new int [ ] { INT_7 } ; IDENT_27 . METHOD_6 ( IDENT_30 ) ; IDENT_4 . IDENT_26 . add ( IDENT_27 ) ; IDENT_4 . METHOD_7 ( ) ; com . IDENT_0 . IDENT_1 . IDENT_35 . IDENT_36 IDENT_37 = new com . IDENT_0 . IDENT_1 . IDENT_35 . METHOD_8 ( IDENT_4 ) ; IDENT_37 . METHOD_9 ( ) ; int IDENT_38 = ( ( IDENT_30 . IDENT_39 [ 0 ] ) + ( IDENT_30 . IDENT_40 [ 3 ] ) ) + ( IDENT_37 . IDENT_41 . get ( 1 ) [ 0 ] [ 0 ] ) ; int IDENT_42 = ( ( IDENT_25 . IDENT_39 [ 0 ] ) + ( IDENT_25 . IDENT_40 [ 3 ] ) ) + ( IDENT_37 . IDENT_41 . get ( 0 ) [ 0 ] [ 0 ] ) ; int IDENT_43 = IDENT_38 - IDENT_42 ; "<AssertPlaceHolder>" ; } get ( java . lang . String ) { try { return IDENT_44 . get ( id , ( ) -> { java . lang . String IDENT_45 = METHOD_10 ( id ) ; java . io . File IDENT_46 = new java . io . File ( IDENT_47 , ( METHOD_10 + STRING_7 ) ) ; if ( ! ( IDENT_46 . exists ( ) ) ) { IDENT_48 . METHOD_11 ( new com . amazonaws . services . IDENT_48 . model . METHOD_12 ( IDENT_49 , ( METHOD_10 + STRING_7 ) ) , IDENT_46 ) ; } com . IDENT_0 . IDENT_50 . IDENT_51 ret = new com . IDENT_0 . IDENT_50 . METHOD_13 ( null ) ; ret . IDENT_52 = true ; ret . METHOD_14 ( IDENT_46 . getAbsolutePath ( ) ) ; return ret ; } ) ; } catch ( java . util . concurrent . IDENT_53 e ) { throw new java . lang . RuntimeException ( e ) ; } }
org . junit . Assert . assertTrue ( ( ( ( 10 * INT_0 ) == IDENT_43 ) || ( ( ( ( - 1 ) * ( INT_2 - 10 ) ) * INT_0 ) == IDENT_43 ) ) ) 