METHOD_0 ( ) { java . lang . String [ ] f = new java . lang . String [ 0 ] ; try { net . IDENT_0 . IDENT_1 . IDENT_2 . of ( f ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . IllegalArgumentException e ) { "<AssertPlaceHolder>" ; throw e ; } } of ( java . lang . String [ ] ) { net . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( IDENT_3 , STRING_0 ) ; net . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 ( IDENT_3 , STRING_1 ) ; return net . IDENT_0 . IDENT_1 . IDENT_2 . Builder . METHOD_3 ( java . util . Arrays . asList ( IDENT_3 ) ) ; }
org . junit . Assert . assertEquals ( STRING_1 , e . getMessage ( ) ) 