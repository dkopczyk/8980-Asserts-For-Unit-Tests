METHOD_0 ( ) { java . lang . String name = STRING_0 ; net . IDENT_0 . IDENT_1 . IDENT_2 param = new net . IDENT_0 . IDENT_1 . IDENT_3 . METHOD_1 ( ) . METHOD_2 ( 1.0 ) . build ( ) ; java . lang . String IDENT_4 = IDENT_5 . IDENT_6 . apply ( name , param ) ; "<AssertPlaceHolder>" ; } build ( ) { if ( ! ( java . lang . Double . METHOD_3 ( IDENT_7 ) ) ) { return new net . IDENT_0 . IDENT_1 . METHOD_4 ( IDENT_7 , IDENT_8 , IDENT_9 , IDENT_10 , IDENT_11 , IDENT_12 , IDENT_13 , IDENT_14 , filters , IDENT_15 , IDENT_16 , IDENT_17 ) ; } else if ( ( ( IDENT_18 ) != ( net . IDENT_0 . IDENT_1 . IDENT_3 . METHOD_1 . IDENT_19 ) ) && ( ( IDENT_20 ) != ( net . IDENT_0 . IDENT_1 . IDENT_3 . METHOD_1 . IDENT_19 ) ) ) { return new net . IDENT_0 . IDENT_1 . METHOD_4 ( new java . awt . METHOD_5 ( IDENT_18 , IDENT_20 ) , IDENT_9 , IDENT_10 , IDENT_11 , IDENT_12 , IDENT_13 , IDENT_14 , filters , IDENT_15 , IDENT_16 , IDENT_17 ) ; } else { throw new java . lang . IllegalStateException ( STRING_1 ) ; } }
org . junit . Assert . assertEquals ( STRING_0 , IDENT_4 ) 