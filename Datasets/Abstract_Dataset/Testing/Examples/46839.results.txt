METHOD_0 ( ) { METHOD_1 ( ) ; final org . apache . commons . IDENT_0 . IDENT_1 IDENT_2 = new org . apache . commons . IDENT_0 . METHOD_2 ( STRING_0 , STRING_1 ) ; final org . apache . commons . IDENT_0 . METHOD_2 IDENT_3 = new org . apache . commons . IDENT_0 . METHOD_2 ( STRING_2 , STRING_3 ) ; final org . apache . commons . IDENT_0 . METHOD_2 IDENT_4 = new org . apache . commons . IDENT_0 . METHOD_2 ( STRING_4 , STRING_5 ) ; java . util . concurrent . IDENT_5 < java . lang . Boolean > IDENT_6 = new java . util . concurrent . IDENT_5 < java . lang . Boolean > ( ) { @ com . IDENT_7 . IDENT_8 . auth . impl . Override public com . IDENT_7 . IDENT_8 . auth . impl . Boolean call ( ) throws com . IDENT_7 . IDENT_8 . auth . impl . Exception { METHOD_3 ( true ) ; return true ; } } ; java . util . concurrent . IDENT_5 < java . lang . Boolean > IDENT_9 = new java . util . concurrent . IDENT_5 < java . lang . Boolean > ( ) { @ com . IDENT_7 . IDENT_8 . auth . impl . Override public com . IDENT_7 . IDENT_8 . auth . impl . Boolean call ( ) { IDENT_10 . METHOD_4 ( IDENT_2 ) ; return true ; } } ; java . util . concurrent . IDENT_5 < java . lang . Boolean > IDENT_11 = new java . util . concurrent . IDENT_5 < java . lang . Boolean > ( ) { @ com . IDENT_7 . IDENT_8 . auth . impl . Override public com . IDENT_7 . IDENT_8 . auth . impl . Boolean call ( ) { IDENT_10 . METHOD_4 ( IDENT_3 ) ; return true ; } } ; java . util . concurrent . IDENT_5 < java . lang . Boolean > IDENT_12 = new java . util . concurrent . IDENT_5 < java . lang . Boolean > ( ) { @ com . IDENT_7 . IDENT_8 . auth . impl . Override public com . IDENT_7 . IDENT_8 . auth . impl . Boolean call ( ) { IDENT_10 . METHOD_4 ( IDENT_4 ) ; return true ; } } ; java . util . List < java . util . concurrent . IDENT_5 < java . lang . Boolean > > IDENT_13 = new java . util . ArrayList < java . util . concurrent . IDENT_5 < java . lang . Boolean > > ( ) ; java . util . List < java . util . concurrent . IDENT_5 < java . lang . Boolean > > IDENT_14 = java . util . Collections . METHOD_5 ( 100 , IDENT_6 ) ; IDENT_13 . addAll ( IDENT_14 ) ; java . util . List < java . util . concurrent . IDENT_5 < java . lang . Boolean > > IDENT_15 = java . util . Collections . METHOD_5 ( 100 , IDENT_9 ) ; IDENT_13 . addAll ( IDENT_15 ) ; java . util . List < java . util . concurrent . IDENT_5 < java . lang . Boolean > > IDENT_16 = java . util . Collections . METHOD_5 ( 100 , IDENT_11 ) ; IDENT_13 . addAll ( IDENT_16 ) ; java . util . List < java . util . concurrent . IDENT_5 < java . lang . Boolean > > IDENT_17 = java . util . Collections . METHOD_5 ( 100 , IDENT_12 ) ; IDENT_13 . addAll ( IDENT_17 ) ; java . util . concurrent . IDENT_18 IDENT_19 = java . util . concurrent . IDENT_20 . METHOD_6 ( IDENT_13 . size ( ) ) ; java . util . List < java . util . concurrent . IDENT_21 < java . lang . Boolean > > IDENT_22 = IDENT_19 . METHOD_7 ( IDENT_13 ) ; for ( java . util . concurrent . IDENT_21 < java . lang . Boolean > future : IDENT_22 ) { "<AssertPlaceHolder>" ; } } get ( ) { return METHOD_8 ( com . IDENT_7 . IDENT_8 . IDENT_23 . models . IDENT_24 . class ) ; }
org . junit . Assert . assertTrue ( future . get ( ) ) 