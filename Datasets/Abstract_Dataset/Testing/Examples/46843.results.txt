METHOD_0 ( ) { final java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { STRING_0 , STRING_1 } ; final java . lang . String [ ] IDENT_1 = new java . lang . String [ ] { } ; final java . lang . String [ ] IDENT_2 = new java . lang . String [ ] { } ; final java . lang . String [ ] IDENT_3 = new java . lang . String [ ] { STRING_2 } ; final java . lang . String [ ] IDENT_4 = new java . lang . String [ ] { STRING_0 , STRING_1 } ; final java . lang . String [ ] IDENT_5 = new java . lang . String [ ] { STRING_2 , STRING_3 } ; final java . lang . String [ ] IDENT_6 = new java . lang . String [ ] { STRING_4 , STRING_5 } ; final java . lang . String [ ] IDENT_7 = new java . lang . String [ ] { } ; final java . lang . String IDENT_8 = new java . lang . Object ( ) { } . getClass ( ) . METHOD_1 ( ) . getName ( ) ; com . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 . METHOD_2 ( ( IDENT_8 + STRING_6 ) ) ; IDENT_13 . METHOD_3 ( null ) ; IDENT_13 . METHOD_4 ( true ) ; com . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 . IDENT_14 . METHOD_5 ( ) ; METHOD_6 ( 0 , 3 ) ; java . lang . String IDENT_15 = java . util . UUID . METHOD_7 ( ) . toString ( ) ; com . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_16 IDENT_11 = METHOD_8 ( 0 , 1 , IDENT_15 ) ; com . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_17 state = METHOD_9 ( IDENT_15 ) ; com . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 . METHOD_2 ( ( STRING_7 + state ) ) ; java . util . Map < java . lang . String , com . IDENT_9 . IDENT_10 . db . client . model . IDENT_18 > IDENT_19 = METHOD_10 ( IDENT_15 ) ; "<AssertPlaceHolder>" ; METHOD_11 ( IDENT_19 , IDENT_0 , IDENT_1 , IDENT_2 , IDENT_3 ) ; if ( state == ( IDENT_17 . IDENT_20 ) ) { java . lang . String IDENT_21 = java . util . UUID . METHOD_7 ( ) . toString ( ) ; com . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 . IDENT_22 . remove ( IDENT_15 ) ; IDENT_13 . METHOD_12 ( IDENT_11 . METHOD_13 ( ) , IDENT_21 ) ; state = METHOD_9 ( IDENT_15 ) ; com . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 . METHOD_2 ( ( STRING_8 + state ) ) ; IDENT_19 = METHOD_10 ( IDENT_15 ) ; METHOD_11 ( IDENT_19 , IDENT_4 , IDENT_5 , IDENT_6 , IDENT_7 ) ; } com . IDENT_9 . IDENT_10 . IDENT_11 . IDENT_12 . METHOD_2 ( ( IDENT_8 + STRING_9 ) ) ; } METHOD_10 ( java . lang . String ) { java . util . Map < java . lang . String , com . IDENT_9 . IDENT_10 . db . client . model . IDENT_18 > IDENT_23 = new java . util . HashMap < java . lang . String , com . IDENT_9 . IDENT_10 . db . client . model . IDENT_18 > ( ) ; com . IDENT_9 . IDENT_10 . db . IDENT_24 . IDENT_25 j = new com . IDENT_9 . IDENT_10 . db . IDENT_24 . METHOD_14 ( IDENT_26 ) ; java . util . List < com . IDENT_9 . IDENT_10 . db . client . model . IDENT_18 > IDENT_27 = j . join ( com . IDENT_9 . IDENT_10 . db . client . model . IDENT_16 . class , STRING_10 ) . match ( STRING_11 , IDENT_28 ) . join ( STRING_10 , com . IDENT_9 . IDENT_10 . db . client . model . IDENT_18 . class , STRING_12 , STRING_13 ) . METHOD_15 ( ) . list ( STRING_12 ) ; for ( com . IDENT_9 . IDENT_10 . db . client . model . IDENT_18 IDENT_29 : IDENT_27 ) { IDENT_23 . put ( IDENT_29 . METHOD_16 ( ) , IDENT_29 ) ; System . out . println ( java . lang . String . format ( STRING_14 , IDENT_29 . METHOD_16 ( ) , IDENT_29 . METHOD_17 ( ) , IDENT_29 . getMessage ( ) ) ) ; java . util . Map < java . lang . String , com . IDENT_9 . IDENT_10 . db . client . model . IDENT_18 > IDENT_30 = METHOD_10 ( IDENT_29 . METHOD_18 ( ) ) ; IDENT_23 . METHOD_19 ( IDENT_30 ) ; } return IDENT_23 ; }
org . junit . Assert . assertTrue ( ( state == ( IDENT_17 . IDENT_20 ) ) ) 