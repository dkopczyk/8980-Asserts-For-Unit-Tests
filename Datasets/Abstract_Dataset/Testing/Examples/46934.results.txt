METHOD_0 ( ) { com . IDENT_0 . ext . IDENT_1 . IDENT_2 IDENT_3 = new com . IDENT_0 . ext . IDENT_1 . METHOD_1 ( com . IDENT_0 . ext . IDENT_1 . IDENT_4 . server , com . IDENT_0 . ext . IDENT_1 . IDENT_4 . IDENT_5 ) ; int result = IDENT_3 . METHOD_2 ( false , com . IDENT_0 . ext . IDENT_1 . IDENT_4 . IDENT_6 , com . IDENT_0 . ext . IDENT_1 . IDENT_4 . IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( boolean , java . lang . String , int ) { if ( IDENT_8 == ( - 1 ) ) { log . info ( STRING_0 ) ; } IDENT_1 . IDENT_9 . IDENT_10 IDENT_11 = new IDENT_1 . IDENT_9 . METHOD_3 ( STRING_1 ) ; IDENT_11 . METHOD_4 ( STRING_2 , java . lang . Boolean . toString ( IDENT_12 ) ) ; IDENT_11 . METHOD_4 ( STRING_3 , IDENT_13 ) ; if ( IDENT_8 != ( - 1 ) ) { IDENT_11 . METHOD_4 ( STRING_4 , java . lang . Integer . toString ( IDENT_8 ) ) ; } IDENT_11 . METHOD_4 ( STRING_5 , path ) ; try { IDENT_1 . IDENT_9 . METHOD_3 result = server . METHOD_5 ( IDENT_11 ) ; return result . METHOD_6 ( STRING_6 , ( - 1 ) ) ; } catch ( java . lang . Exception e ) { java . lang . String msg = ( ( STRING_7 + ( path ) ) + STRING_8 ) + IDENT_13 ; log . error ( msg , e ) ; throw new com . IDENT_0 . ext . IDENT_1 . METHOD_7 ( msg , e ) ; } }
org . junit . Assert . assertEquals ( com . IDENT_0 . ext . IDENT_1 . IDENT_4 . IDENT_7 , result ) 