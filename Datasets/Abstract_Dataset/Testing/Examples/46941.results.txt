METHOD_0 ( ) { com . IDENT_0 . ext . IDENT_1 . IDENT_2 IDENT_3 = new com . IDENT_0 . ext . IDENT_1 . METHOD_1 ( com . IDENT_0 . ext . IDENT_1 . IDENT_4 . server , com . IDENT_0 . ext . IDENT_1 . IDENT_4 . IDENT_5 ) ; boolean result = IDENT_3 . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { IDENT_1 . IDENT_6 . IDENT_7 IDENT_8 = new IDENT_1 . IDENT_6 . METHOD_3 ( STRING_0 ) ; IDENT_8 . METHOD_4 ( STRING_1 , path ) ; IDENT_1 . IDENT_6 . METHOD_3 result = null ; try { result = server . METHOD_5 ( IDENT_8 ) . METHOD_6 ( STRING_2 ) ; } catch ( java . lang . Exception e ) { java . lang . String msg = STRING_3 + ( path ) ; log . error ( msg , e ) ; throw new com . IDENT_0 . ext . IDENT_1 . METHOD_7 ( msg , e ) ; } boolean IDENT_9 = true ; for ( IDENT_1 . IDENT_6 . METHOD_3 el : ( ( java . util . List < IDENT_1 . IDENT_6 . METHOD_3 > ) ( result . METHOD_8 ( ) ) ) ) { java . lang . String IDENT_10 = el . METHOD_9 ( STRING_4 ) ; try { METHOD_10 ( IDENT_10 ) ; } catch ( com . IDENT_0 . ext . IDENT_1 . METHOD_7 e ) { IDENT_9 = false ; } } return IDENT_9 ; }
org . junit . Assert . assertTrue ( result ) 