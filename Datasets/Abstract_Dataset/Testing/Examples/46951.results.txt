METHOD_0 ( ) { org . apache . log4j . IDENT_0 . METHOD_1 ( ) . METHOD_2 ( org . apache . log4j . IDENT_1 . IDENT_2 ) ; com . IDENT_3 . IDENT_4 . client . IDENT_5 client = new com . IDENT_3 . IDENT_4 . client . METHOD_3 ( STRING_0 , true ) . METHOD_4 ( STRING_1 , STRING_2 ) ; try { java . util . List < java . net . URI > IDENT_6 = com . IDENT_3 . IDENT_7 . service . IDENT_4 . block . IDENT_8 . METHOD_5 ( client ) ; org . apache . commons . lang3 . time . IDENT_9 IDENT_10 = new org . apache . commons . lang3 . time . METHOD_6 ( ) ; IDENT_10 . start ( ) ; java . util . List < com . IDENT_3 . IDENT_11 . model . block . IDENT_12 > original = com . IDENT_3 . IDENT_7 . service . IDENT_4 . block . IDENT_8 . METHOD_7 ( client , IDENT_6 ) ; IDENT_10 . METHOD_8 ( ) ; float IDENT_13 = IDENT_10 . getTime ( ) ; System . out . println ( java . lang . String . format ( STRING_3 , original . size ( ) , IDENT_13 ) ) ; IDENT_10 . METHOD_9 ( ) ; IDENT_10 . start ( ) ; java . util . List < com . IDENT_3 . IDENT_11 . model . block . IDENT_12 > IDENT_14 = com . IDENT_3 . IDENT_7 . service . IDENT_4 . block . IDENT_8 . METHOD_10 ( client , IDENT_6 ) ; IDENT_10 . METHOD_8 ( ) ; float IDENT_15 = IDENT_10 . getTime ( ) ; System . out . println ( java . lang . String . format ( STRING_4 , IDENT_14 . size ( ) , IDENT_10 . getTime ( ) ) ) ; System . out . println ( java . lang . String . format ( STRING_5 , ( ( IDENT_13 / IDENT_15 ) * FLOAT_0 ) ) ) ; "<AssertPlaceHolder>" ; } finally { client . auth ( ) . METHOD_11 ( ) ; } } format ( java . lang . String , java . lang . Object [ ] ) { if ( ( args != null ) && ( ( args . length ) > 0 ) ) { return java . lang . String . format ( message , args ) ; } else { return message ; } }
org . junit . Assert . assertTrue ( ( IDENT_13 > IDENT_15 ) ) 