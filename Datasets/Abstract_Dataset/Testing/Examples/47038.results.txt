METHOD_0 ( ) { com . couchbase . client . java . query . IDENT_0 . path . IDENT_1 IDENT_2 = new com . couchbase . client . java . query . IDENT_0 . path . METHOD_1 ( null ) . select ( com . couchbase . client . java . query . IDENT_0 . IDENT_3 . x ( STRING_0 ) , com . couchbase . client . java . query . IDENT_0 . IDENT_3 . x ( STRING_1 ) ) . from ( "foo" ) . METHOD_2 ( com . couchbase . client . java . query . IDENT_0 . IDENT_3 . x ( STRING_1 ) . eq ( com . couchbase . client . java . query . IDENT_0 . IDENT_3 . s ( "foo" ) ) ) ; com . couchbase . client . java . query . IDENT_0 . path . IDENT_1 IDENT_4 = new com . couchbase . client . java . query . IDENT_0 . path . METHOD_1 ( null ) . select ( com . couchbase . client . java . query . IDENT_0 . IDENT_3 . x ( STRING_0 ) , com . couchbase . client . java . query . IDENT_0 . IDENT_3 . x ( STRING_1 ) ) . from ( "foo" ) . METHOD_2 ( com . couchbase . client . java . query . IDENT_0 . IDENT_3 . x ( STRING_1 ) . eq ( com . couchbase . client . java . query . IDENT_0 . IDENT_3 . s ( "bar" ) ) ) ; java . lang . String expected = STRING_2 + ( ( ( ( ( STRING_3 + STRING_4 ) + STRING_5 ) + STRING_2 ) + STRING_3 ) + STRING_6 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( com . couchbase . client . java . query . IDENT_0 . path . IDENT_1 ) { element ( new com . couchbase . client . java . query . IDENT_0 . element . METHOD_4 ( true , path ) ) ; return new com . couchbase . client . java . query . IDENT_0 . path . METHOD_5 ( this ) ; }
org . junit . Assert . assertEquals ( expected , IDENT_2 . METHOD_3 ( IDENT_4 ) . toString ( ) ) 