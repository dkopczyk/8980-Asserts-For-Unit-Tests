METHOD_0 ( ) { com . couchbase . client . java . search . IDENT_0 p = new com . couchbase . client . java . search . METHOD_1 ( null , null ) . METHOD_2 ( STRING_0 , com . couchbase . client . java . search . IDENT_1 . IDENT_2 . METHOD_3 ( STRING_1 , 1 ) ) . METHOD_4 ( ) . METHOD_2 ( STRING_2 , com . couchbase . client . java . search . IDENT_1 . IDENT_2 . METHOD_3 ( STRING_3 , 2 ) ) ; com . couchbase . client . java . document . json . IDENT_3 result = com . couchbase . client . java . document . json . IDENT_3 . create ( ) ; p . METHOD_5 ( result ) ; com . couchbase . client . java . document . json . IDENT_3 expected = com . couchbase . client . java . document . json . IDENT_3 . create ( ) . put ( STRING_4 , com . couchbase . client . java . document . json . IDENT_3 . create ( ) . put ( STRING_2 , com . couchbase . client . java . document . json . IDENT_3 . create ( ) . put ( STRING_5 , STRING_3 ) . put ( STRING_6 , 2 ) ) ) ; "<AssertPlaceHolder>" ; } put ( java . lang . String , IDENT_4 ) { if ( key == null ) { throw new java . lang . METHOD_6 ( STRING_7 ) ; } if ( ! ( com . couchbase . client . java . document . json . IDENT_5 . METHOD_7 ( value ) ) ) { throw new java . lang . IllegalArgumentException ( STRING_8 ) ; } for ( int i = 0 ; i < ( com . couchbase . client . java . IDENT_6 . collections . IDENT_7 . IDENT_8 ) ; i ++ ) { try { com . couchbase . client . java . IDENT_9 . IDENT_10 < com . couchbase . client . core . message . IDENT_11 . IDENT_9 . IDENT_12 . IDENT_13 > IDENT_14 = IDENT_15 . METHOD_8 ( id ) . get ( key ) . execute ( ) ; long IDENT_16 = IDENT_14 . METHOD_9 ( ) ; java . lang . Object result = null ; if ( IDENT_14 . exists ( key ) ) { result = IDENT_14 . content ( key ) ; } IDENT_15 . METHOD_10 ( id ) . METHOD_11 ( key , value , false ) . METHOD_12 ( IDENT_16 ) . execute ( ) ; return ( ( IDENT_4 ) ( result ) ) ; } catch ( com . couchbase . client . java . error . IDENT_17 ex ) { } } throw new java . util . METHOD_13 ( ( ( STRING_9 + ( com . couchbase . client . java . IDENT_6 . collections . IDENT_7 . IDENT_8 ) ) + STRING_10 ) ) ; }
org . junit . Assert . assertEquals ( expected , result ) 