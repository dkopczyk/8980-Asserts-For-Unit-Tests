METHOD_0 ( ) { com . couchbase . client . java . search . IDENT_0 . IDENT_1 query = new com . couchbase . client . java . search . IDENT_0 . METHOD_1 ( 1.0 , 2.0 , STRING_0 ) ; com . couchbase . client . java . document . json . IDENT_2 result = com . couchbase . client . java . document . json . IDENT_2 . create ( ) ; query . METHOD_2 ( result ) ; com . couchbase . client . java . document . json . IDENT_2 expected = com . couchbase . client . java . document . json . IDENT_2 . create ( ) . put ( STRING_1 , com . couchbase . client . java . document . json . IDENT_3 . from ( 1.0 , 2.0 ) ) . put ( STRING_2 , STRING_0 ) ; "<AssertPlaceHolder>" ; } put ( java . lang . String , IDENT_4 ) { if ( key == null ) { throw new java . lang . METHOD_3 ( STRING_3 ) ; } if ( ! ( com . couchbase . client . java . document . json . IDENT_5 . METHOD_4 ( value ) ) ) { throw new java . lang . IllegalArgumentException ( STRING_4 ) ; } for ( int i = 0 ; i < ( com . couchbase . client . java . IDENT_6 . collections . IDENT_7 . IDENT_8 ) ; i ++ ) { try { com . couchbase . client . java . IDENT_9 . IDENT_10 < com . couchbase . client . core . message . IDENT_11 . IDENT_9 . IDENT_12 . IDENT_13 > IDENT_14 = IDENT_15 . METHOD_5 ( id ) . get ( key ) . execute ( ) ; long IDENT_16 = IDENT_14 . METHOD_6 ( ) ; java . lang . Object result = null ; if ( IDENT_14 . exists ( key ) ) { result = IDENT_14 . content ( key ) ; } IDENT_15 . METHOD_7 ( id ) . METHOD_8 ( key , value , false ) . METHOD_9 ( IDENT_16 ) . execute ( ) ; return ( ( IDENT_4 ) ( result ) ) ; } catch ( com . couchbase . client . java . error . IDENT_17 ex ) { } } throw new java . util . METHOD_10 ( ( ( STRING_5 + ( com . couchbase . client . java . IDENT_6 . collections . IDENT_7 . IDENT_8 ) ) + STRING_6 ) ) ; }
org . junit . Assert . assertEquals ( expected , result ) 