METHOD_0 ( ) { com . couchbase . client . core . IDENT_0 cluster = mock ( com . couchbase . client . core . IDENT_0 . class ) ; com . couchbase . client . core . config . IDENT_1 . IDENT_2 IDENT_1 = new com . couchbase . client . core . config . IDENT_1 . METHOD_1 ( com . couchbase . client . core . config . IDENT_1 . IDENT_3 . IDENT_4 , cluster ) ; IDENT_1 . METHOD_2 ( STRING_0 , "" ) ; com . couchbase . client . core . config . IDENT_5 provider = mock ( com . couchbase . client . core . config . IDENT_5 . class ) ; IDENT_1 . provider ( provider ) ; com . couchbase . client . core . config . IDENT_6 IDENT_7 = mock ( com . couchbase . client . core . config . IDENT_6 . class ) ; com . couchbase . client . core . config . IDENT_8 IDENT_9 = mock ( com . couchbase . client . core . config . IDENT_8 . class ) ; when ( IDENT_9 . name ( ) ) . thenReturn ( STRING_0 ) ; java . util . List < com . couchbase . client . core . config . IDENT_10 > IDENT_11 = new java . util . ArrayList < com . couchbase . client . core . config . IDENT_10 > ( ) ; java . util . Map < java . lang . String , java . lang . Integer > IDENT_12 = new java . util . HashMap < java . lang . String , java . lang . Integer > ( ) ; IDENT_12 . put ( STRING_1 , INT_0 ) ; IDENT_11 . add ( new com . couchbase . client . core . config . METHOD_3 ( null , STRING_2 , IDENT_12 , null ) ) ; IDENT_11 . add ( new com . couchbase . client . core . config . METHOD_3 ( null , STRING_3 , IDENT_12 , null ) ) ; when ( IDENT_9 . nodes ( ) ) . thenReturn ( IDENT_11 ) ; java . util . Map < java . lang . String , com . couchbase . client . core . config . IDENT_8 > IDENT_13 = new java . util . HashMap < java . lang . String , com . couchbase . client . core . config . IDENT_8 > ( ) ; IDENT_13 . put ( STRING_0 , IDENT_9 ) ; when ( IDENT_7 . METHOD_4 ( ) ) . thenReturn ( METHOD_4 ) ; io . netty . buffer . IDENT_14 content = io . netty . buffer . IDENT_15 . METHOD_5 ( STRING_4 , IDENT_16 . UTF_8 ) ; IDENT_17 . IDENT_18 < com . couchbase . client . core . message . IDENT_19 > IDENT_20 = IDENT_17 . IDENT_18 . METHOD_6 ( ( ( com . couchbase . client . core . message . IDENT_19 ) ( new com . couchbase . client . core . message . IDENT_21 . METHOD_7 ( com . couchbase . client . core . message . IDENT_22 . IDENT_23 , IDENT_24 . IDENT_23 . code ( ) , STRING_0 , content , com . couchbase . client . core . utils . IDENT_25 . create ( STRING_5 ) ) ) ) ) ; IDENT_17 . IDENT_18 < com . couchbase . client . core . message . IDENT_19 > IDENT_26 = IDENT_17 . IDENT_18 . error ( new com . couchbase . client . core . METHOD_8 ( STRING_6 ) ) ; when ( cluster . METHOD_9 ( any ( com . couchbase . client . core . message . IDENT_21 . IDENT_27 . class ) ) ) . thenReturn ( IDENT_26 , IDENT_20 ) ; IDENT_1 . METHOD_10 ( IDENT_7 ) ; java . lang . Thread . sleep ( INT_1 ) ; verify ( provider , times ( 1 ) ) . METHOD_11 ( any ( com . couchbase . client . core . config . IDENT_28 . class ) ) ; "<AssertPlaceHolder>" ; } METHOD_12 ( ) { return content . METHOD_12 ( ) ; }
org . junit . Assert . assertEquals ( 0 , content . METHOD_12 ( ) ) 