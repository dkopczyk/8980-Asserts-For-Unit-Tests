METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; io . netty . buffer . IDENT_1 input = io . netty . buffer . IDENT_2 . METHOD_1 ( IDENT_0 , IDENT_3 . UTF_8 ) ; com . couchbase . client . core . message . IDENT_4 IDENT_5 = com . couchbase . client . core . message . IDENT_4 . convert ( input ) ; "<AssertPlaceHolder>" ; } convert ( io . netty . buffer . IDENT_1 ) { if ( ( input . METHOD_2 ( ) ) <= 0 ) { return null ; } try { byte [ ] IDENT_6 = new byte [ input . METHOD_2 ( ) ] ; input . METHOD_3 ( IDENT_6 ) ; java . util . HashMap < java . lang . String , java . util . HashMap < java . lang . String , java . lang . String > > result = com . couchbase . client . core . utils . IDENT_7 . METHOD_4 ( IDENT_6 , com . couchbase . client . core . message . IDENT_4 . IDENT_8 ) ; java . util . HashMap < java . lang . String , java . lang . String > IDENT_9 = result . get ( STRING_1 ) ; if ( IDENT_9 == null ) { com . couchbase . client . core . message . IDENT_4 . LOGGER . warn ( STRING_2 ) ; return null ; } return new com . couchbase . client . core . message . METHOD_5 ( IDENT_9 . get ( STRING_3 ) , IDENT_9 . get ( STRING_4 ) ) ; } catch ( java . lang . Exception ex ) { com . couchbase . client . core . message . METHOD_5 . LOGGER . warn ( STRING_5 , ex ) ; return null ; } }
org . junit . Assert . assertNull ( IDENT_5 ) 