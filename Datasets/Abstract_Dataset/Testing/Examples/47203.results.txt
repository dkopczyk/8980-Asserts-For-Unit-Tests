METHOD_0 ( ) { com . couchbase . client . core . node . IDENT_0 IDENT_1 = mock ( com . couchbase . client . core . node . IDENT_0 . class ) ; com . couchbase . client . core . service . IDENT_2 IDENT_3 = mock ( com . couchbase . client . core . service . IDENT_2 . class ) ; com . couchbase . client . core . service . IDENT_4 IDENT_5 = mock ( com . couchbase . client . core . service . IDENT_4 . class ) ; when ( IDENT_5 . type ( ) ) . thenReturn ( IDENT_6 . IDENT_7 ) ; when ( IDENT_5 . METHOD_1 ( ) ) . thenReturn ( IDENT_8 . IDENT_9 . METHOD_2 ( IDENT_10 . IDENT_11 ) ) ; when ( IDENT_5 . connect ( ) ) . thenReturn ( IDENT_8 . IDENT_9 . METHOD_2 ( IDENT_10 . IDENT_11 ) ) ; when ( IDENT_3 . create ( METHOD_3 ( java . lang . String . class ) , METHOD_3 ( java . lang . String . class ) , METHOD_3 ( java . lang . String . class ) , METHOD_3 ( java . lang . String . class ) , eq ( 0 ) , eq ( com . couchbase . client . core . node . IDENT_12 . ctx ) , eq ( IDENT_6 . IDENT_7 ) ) ) . thenReturn ( IDENT_5 ) ; com . couchbase . client . core . node . IDENT_13 node = new com . couchbase . client . core . node . METHOD_4 ( com . couchbase . client . core . node . IDENT_12 . host , IDENT_1 , com . couchbase . client . core . node . IDENT_12 . ctx , IDENT_3 ) ; com . couchbase . client . core . service . IDENT_4 IDENT_14 = node . METHOD_5 ( new com . couchbase . client . core . message . internal . METHOD_6 ( com . couchbase . client . core . service . IDENT_6 . IDENT_7 , STRING_0 , null , 0 , com . couchbase . client . core . node . IDENT_12 . host ) ) . METHOD_7 ( ) . METHOD_8 ( ) ; verify ( IDENT_1 ) . METHOD_5 ( eq ( IDENT_5 ) , anyString ( ) ) ; "<AssertPlaceHolder>" ; } type ( ) { return type ; }
org . junit . Assert . assertEquals ( IDENT_6 . IDENT_7 , IDENT_14 . type ( ) ) 