METHOD_0 ( ) { java . lang . String sql = ( STRING_0 + ( IDENT_0 ) ) + STRING_1 ; java . util . List < java . lang . Object > param = new java . util . ArrayList < java . lang . Object > ( ) ; param . add ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . transaction . IDENT_5 ) ; param . add ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . transaction . IDENT_6 ) ; param . add ( IDENT_7 ) ; param . add ( name ) ; param . add ( IDENT_8 ) ; IDENT_9 = IDENT_10 . METHOD_1 ( ) ; IDENT_9 . METHOD_2 ( false ) ; java . lang . String [ ] IDENT_11 = new java . lang . String [ ] { STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 } ; IDENT_12 = METHOD_1 ( ) ; IDENT_12 . METHOD_2 ( false ) ; try { int IDENT_13 = METHOD_3 ( sql , param ) ; int IDENT_14 = METHOD_4 ( sql , param ) ; "<AssertPlaceHolder>" ; sql = ( ( STRING_7 + ( IDENT_0 ) ) + STRING_8 ) + ( IDENT_5 ) ; METHOD_5 ( sql , IDENT_11 , null ) ; IDENT_12 . commit ( ) ; IDENT_9 . commit ( ) ; } catch ( java . lang . Exception ex ) { try { IDENT_12 . METHOD_6 ( ) ; IDENT_9 . METHOD_6 ( ) ; } catch ( java . lang . Exception IDENT_15 ) { } } sql = ( ( STRING_7 + ( IDENT_0 ) ) + STRING_8 ) + ( IDENT_5 ) ; METHOD_5 ( sql , IDENT_11 , null ) ; try { IDENT_9 . commit ( ) ; IDENT_9 . commit ( ) ; IDENT_9 . METHOD_6 ( ) ; IDENT_9 . METHOD_6 ( ) ; } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( e . toString ( ) ) ; } } METHOD_4 ( java . lang . String , java . util . List ) { int rs = 0 ; try { IDENT_16 = IDENT_9 . METHOD_7 ( sql ) ; if ( param == null ) { rs = IDENT_16 . METHOD_8 ( ) ; } else { for ( int i = 0 ; i < ( param . size ( ) ) ; i ++ ) { IDENT_16 . METHOD_9 ( ( i + 1 ) , param . get ( i ) ) ; } rs = IDENT_16 . METHOD_8 ( ) ; } } catch ( java . lang . Exception ex ) { throw new com . IDENT_1 . IDENT_2 . common . exception . METHOD_10 ( ex ) ; } finally { } return rs ; }
org . junit . Assert . assertEquals ( IDENT_13 , IDENT_14 ) 