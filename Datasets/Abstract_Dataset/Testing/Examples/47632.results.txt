METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; com . IDENT_2 . framework . IDENT_3 . IDENT_4 . spi . IDENT_5 IDENT_6 = mock ( com . IDENT_2 . framework . IDENT_3 . IDENT_4 . spi . IDENT_5 . class ) ; when ( IDENT_7 . METHOD_1 ( IDENT_0 , IDENT_1 ) ) . thenReturn ( IDENT_6 ) ; com . IDENT_2 . framework . IDENT_3 . IDENT_4 . spi . IDENT_5 result = com . IDENT_2 . framework . IDENT_3 . IDENT_4 . IDENT_8 . METHOD_1 ( IDENT_0 , IDENT_1 ) ; verify ( IDENT_7 , times ( 1 ) ) . METHOD_1 ( IDENT_0 , IDENT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String ) { try { return com . IDENT_2 . framework . IDENT_3 . IDENT_4 . IDENT_8 . METHOD_2 ( ) . METHOD_1 ( type , name ) ; } catch ( java . lang . Throwable ex ) { com . IDENT_2 . framework . IDENT_3 . IDENT_4 . IDENT_8 . logger . warn ( STRING_2 , type , name , ex ) ; return com . IDENT_2 . framework . IDENT_3 . IDENT_4 . IDENT_8 . IDENT_9 . METHOD_2 ( ) . METHOD_1 ( type , name ) ; } }
org . junit . Assert . assertEquals ( IDENT_6 , result ) 