METHOD_0 ( ) { java . lang . String IDENT_0 = java . lang . Thread . METHOD_1 ( ) . METHOD_2 ( ) [ 1 ] . METHOD_3 ( ) ; java . lang . String IDENT_1 = ( ( STRING_0 + ( IDENT_2 ) ) + STRING_1 ) + IDENT_0 ; java . io . File file = new java . io . File ( IDENT_1 ) ; file . delete ( ) ; java . util . List < com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 > IDENT_8 = new java . util . ArrayList ( ) ; for ( int i = 0 ; i < 10 ; i ++ ) { com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 server = new com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . Builder ( ) . METHOD_4 ( ( STRING_2 + i ) ) . METHOD_5 ( ( ( i OP_0 2 ) == 0 ) ) . build ( ) ; IDENT_8 . add ( server ) ; } com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_9 IDENT_10 = com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_9 . METHOD_6 ( ) . METHOD_7 ( STRING_3 ) . METHOD_8 ( IDENT_8 ) . build ( ) ; java . util . List < com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_11 > expected = com . google . common . collect . Lists . newArrayList ( com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_11 . METHOD_6 ( ) . METHOD_9 ( IDENT_0 ) . METHOD_10 ( com . google . common . collect . Lists . newArrayList ( IDENT_10 ) ) . build ( ) ) ; com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_12 factory = com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_12 . METHOD_11 ( IDENT_2 , com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . TestUtils . METHOD_12 ( ) ) ; com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_13 . IDENT_14 IDENT_15 = com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_13 . IDENT_14 . METHOD_13 ( IDENT_0 , IDENT_8 ) ; com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_16 config = new com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_16 . Builder ( ) . METHOD_14 ( IDENT_15 ) . build ( ) ; final com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_17 IDENT_18 = factory . METHOD_15 ( IDENT_0 , config ) ; com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_19 . IDENT_20 IDENT_21 = ( ( com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_19 . IDENT_20 ) ( IDENT_18 ) ) ; com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_13 . manager . IDENT_22 manager = IDENT_21 . METHOD_16 ( ) . METHOD_17 ( ) ; manager . METHOD_18 ( expected ) ; java . util . List < com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_11 > actual = manager . METHOD_19 ( ) ; file . delete ( ) ; "<AssertPlaceHolder>" ; } METHOD_19 ( ) { java . lang . String IDENT_23 ; java . lang . String IDENT_1 = null ; try { IDENT_23 = METHOD_20 ( ) ; IDENT_1 = METHOD_21 ( IDENT_23 ) ; if ( com . IDENT_3 . IDENT_4 . IDENT_5 . common . value . IDENT_24 . METHOD_22 ( IDENT_1 ) ) { com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . util . IDENT_25 . info ( com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_13 . manager . IDENT_26 . IDENT_27 , STRING_4 , IDENT_28 . METHOD_23 ( ) ) ; return new java . util . ArrayList ( ) ; } java . io . File IDENT_29 = new java . io . File ( IDENT_1 ) ; if ( ! ( IDENT_29 . exists ( ) ) ) { com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . util . IDENT_25 . info ( com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_13 . manager . IDENT_26 . IDENT_27 , ( ( STRING_5 + IDENT_1 ) + STRING_6 ) , IDENT_28 . METHOD_23 ( ) ) ; return new java . util . ArrayList ( ) ; } IDENT_1 = IDENT_29 . getAbsolutePath ( ) ; java . util . List < com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_11 > IDENT_30 = IDENT_31 . METHOD_24 ( IDENT_29 , IDENT_32 ) ; IDENT_30 = METHOD_25 ( IDENT_30 , com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_13 . manager . IDENT_26 . IDENT_27 , IDENT_28 . METHOD_23 ( ) ) ; com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_13 . manager . IDENT_33 event = new com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_13 . manager . METHOD_26 ( IDENT_30 ) ; METHOD_27 ( event ) ; return event . METHOD_28 ( ) ; } catch ( java . lang . Throwable t ) { java . lang . String message = java . lang . String . format ( STRING_7 , IDENT_1 ) ; com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . util . IDENT_25 . info ( com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_13 . manager . IDENT_26 . IDENT_27 , message , t , IDENT_28 . METHOD_23 ( ) ) ; return new java . util . ArrayList ( ) ; } }
org . junit . Assert . assertEquals ( expected , actual ) 