METHOD_0 ( ) { java . lang . String address = null ; java . lang . Integer id = 1 ; com . IDENT_0 . platform . dal . dao . IDENT_1 . IDENT_2 < java . util . List < com . IDENT_0 . platform . dal . dao . IDENT_3 . IDENT_4 . IDENT_5 > > query = new com . IDENT_0 . platform . dal . dao . IDENT_1 . METHOD_1 ( ) ; query . METHOD_2 ( ) . from ( com . IDENT_0 . platform . dal . dao . IDENT_3 . IDENT_4 . IDENT_6 ) . METHOD_3 ( METHOD_4 ( STRING_0 ) . when ( ( address != null ) ) , com . IDENT_0 . platform . dal . dao . IDENT_3 . IDENT_7 , equal ( STRING_1 ) . when ( ( id != null ) ) ) ; query . METHOD_5 ( com . IDENT_0 . platform . dal . dao . IDENT_3 . IDENT_4 . IDENT_5 . class ) ; com . IDENT_0 . platform . dal . dao . IDENT_3 . IDENT_8 dao = new com . IDENT_0 . platform . dal . dao . IDENT_3 . METHOD_6 ( IDENT_9 ) ; com . IDENT_0 . platform . dal . dao . IDENT_3 . IDENT_10 parameters = new com . IDENT_0 . platform . dal . dao . IDENT_3 . METHOD_7 ( ) ; parameters . set ( 1 , 1 ) ; java . util . List < com . IDENT_0 . platform . dal . dao . IDENT_3 . IDENT_4 . IDENT_5 > l = dao . query ( query , parameters , new com . IDENT_0 . platform . dal . dao . IDENT_3 . METHOD_8 ( ) . METHOD_9 ( ) ) ; "<AssertPlaceHolder>" ; } size ( ) { return parameters . size ( ) ; }
org . junit . Assert . assertTrue ( ( ( l . size ( ) ) > 0 ) ) 