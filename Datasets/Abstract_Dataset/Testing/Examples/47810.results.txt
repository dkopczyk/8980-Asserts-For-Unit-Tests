METHOD_0 ( ) { int IDENT_0 = ( IDENT_1 ) * 10 ; com . IDENT_2 . IDENT_3 . command . IDENT_4 command = new com . IDENT_2 . IDENT_3 . command . METHOD_1 ( new java . lang . Exception ( STRING_0 ) ) ; com . IDENT_2 . IDENT_3 . command . IDENT_5 < java . lang . String > IDENT_6 = ( ( com . IDENT_2 . IDENT_3 . command . IDENT_5 < java . lang . String > ) ( com . IDENT_2 . IDENT_3 . command . IDENT_5 . METHOD_2 ( IDENT_0 , new com . IDENT_2 . IDENT_3 . IDENT_7 . METHOD_3 ( IDENT_1 ) , command , IDENT_8 ) ) ) ; long IDENT_9 = java . lang . System . currentTimeMillis ( ) ; try { IDENT_6 . execute ( ) . get ( ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . IDENT_10 | java . util . concurrent . IDENT_11 e ) { } long IDENT_12 = java . lang . System . currentTimeMillis ( ) ; "<AssertPlaceHolder>" ; } get ( ) { return IDENT_13 ; }
org . junit . Assert . assertTrue ( ( ( IDENT_12 - IDENT_9 ) >= IDENT_0 ) ) 