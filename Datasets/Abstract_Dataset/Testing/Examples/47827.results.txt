METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . tuple . IDENT_2 < java . lang . Boolean , com . IDENT_0 . IDENT_1 . codec . Person > IDENT_3 = new com . IDENT_0 . IDENT_1 . tuple . METHOD_1 ( true , new com . IDENT_0 . IDENT_1 . codec . Person ( Person . IDENT_4 . IDENT_5 , 100 ) ) ; java . lang . String encode = IDENT_6 . INSTANCE . encode ( IDENT_3 ) ; logger . info ( STRING_0 , encode ) ; com . IDENT_0 . IDENT_1 . tuple . METHOD_1 < java . lang . Boolean , com . IDENT_0 . IDENT_1 . codec . Person > decode = IDENT_6 . INSTANCE . decode ( encode , new com . IDENT_0 . IDENT_1 . api . codec . IDENT_7 < com . IDENT_0 . IDENT_1 . tuple . METHOD_1 < java . lang . Boolean , com . IDENT_0 . IDENT_1 . codec . Person > > ( ) { } ) ; "<AssertPlaceHolder>" ; } decode ( io . netty . channel . IDENT_8 , io . netty . buffer . IDENT_9 , java . util . List ) { try { while ( in . METHOD_2 ( ) ) { switch ( IDENT_10 ) { case IDENT_11 : if ( ! ( METHOD_3 ( in ) ) ) { return ; } METHOD_4 ( in ) ; METHOD_5 ( in ) ; break ; case IDENT_12 : if ( ( in . METHOD_6 ( ) ) < ( IDENT_13 ) ) { return ; } io . netty . buffer . IDENT_9 IDENT_14 = null ; try { switch ( IDENT_15 ) { case IDENT_16 : IDENT_14 = in . METHOD_7 ( in . METHOD_8 ( ) , IDENT_17 ) ; break ; case IDENT_18 : IDENT_14 = ctx . METHOD_9 ( ) . buffer ( IDENT_17 , IDENT_17 ) ; com . github . IDENT_19 . IDENT_20 . IDENT_21 . METHOD_10 ( IDENT_14 . METHOD_11 ( IDENT_14 . METHOD_12 ( ) , IDENT_17 ) , METHOD_13 ( in ) ) ; IDENT_14 . METHOD_12 ( ( ( IDENT_14 . METHOD_12 ( ) ) + ( IDENT_17 ) ) ) ; break ; default : throw new io . netty . handler . codec . IDENT_22 . METHOD_14 ( java . lang . String . format ( STRING_1 , IDENT_15 , com . IDENT_0 . IDENT_1 . redis . proxy . handler . IDENT_16 , com . IDENT_0 . IDENT_1 . redis . proxy . handler . IDENT_18 ) ) ; } in . METHOD_15 ( IDENT_13 ) ; METHOD_16 ( IDENT_14 ) ; if ( IDENT_23 ) { METHOD_17 ( IDENT_14 , IDENT_24 ) ; } out . add ( IDENT_14 ) ; IDENT_14 = null ; IDENT_10 = com . IDENT_0 . IDENT_1 . redis . proxy . handler . IDENT_25 . IDENT_26 . IDENT_11 ; } catch ( java . lang . Exception e ) { throw new io . netty . handler . codec . IDENT_22 . METHOD_14 ( e ) ; } finally { if ( IDENT_14 != null ) { IDENT_14 . METHOD_18 ( ) ; } } break ; case IDENT_27 : case IDENT_28 : in . METHOD_15 ( in . METHOD_6 ( ) ) ; break ; default : throw new java . lang . IllegalStateException ( ) ; } } } catch ( java . lang . Exception e ) { IDENT_10 = com . IDENT_0 . IDENT_1 . redis . proxy . handler . IDENT_25 . IDENT_26 . IDENT_28 ; throw e ; } }
org . junit . Assert . assertEquals ( IDENT_3 , decode ) 