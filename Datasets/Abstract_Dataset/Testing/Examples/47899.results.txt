METHOD_0 ( ) { java . util . List < com . IDENT_0 . IDENT_1 . redis . IDENT_2 . model . IDENT_3 > IDENT_4 = METHOD_1 ( 10 ) ; java . util . List < com . IDENT_0 . IDENT_1 . redis . IDENT_2 . model . IDENT_3 > IDENT_5 = METHOD_1 ( INT_0 ) ; java . util . List < com . IDENT_0 . IDENT_1 . redis . IDENT_2 . model . IDENT_3 > result = IDENT_6 . METHOD_2 ( IDENT_4 , IDENT_5 ) ; result . METHOD_3 ( ( org ) -> com . IDENT_0 . IDENT_1 . redis . IDENT_2 . service . impl . logger . info ( STRING_0 , org . METHOD_4 ( ) ) ) ; "<AssertPlaceHolder>" ; } size ( ) { try { return METHOD_5 ( ) . size ( ) ; } catch ( java . io . IDENT_7 e ) { throw new com . IDENT_0 . IDENT_1 . exception . METHOD_6 ( java . lang . String . format ( STRING_1 , file ) , e ) ; } catch ( java . io . IOException e ) { logger . warn ( ( STRING_2 + ( file ) ) , e ) ; } if ( ! ( file . exists ( ) ) ) { throw new com . IDENT_0 . IDENT_1 . exception . METHOD_6 ( java . lang . String . format ( STRING_1 , file ) ) ; } return file . length ( ) ; }
org . junit . Assert . assertEquals ( 0 , result . size ( ) ) 