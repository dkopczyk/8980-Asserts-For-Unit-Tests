METHOD_0 ( ) { java . lang . Exception IDENT_0 = new java . lang . Exception ( STRING_0 ) ; when ( IDENT_1 . add ( any ( com . IDENT_2 . IDENT_3 . redis . IDENT_4 . IDENT_5 . class ) ) ) . METHOD_1 ( IDENT_0 ) ; java . lang . Exception IDENT_6 = null ; try { IDENT_7 . add ( IDENT_8 ) ; } catch ( com . IDENT_2 . IDENT_3 . redis . IDENT_4 . exception . IDENT_9 ex ) { IDENT_6 = ( ( java . lang . Exception ) ( ex . METHOD_2 ( ) ) ) ; } "<AssertPlaceHolder>" ; } add ( com . IDENT_2 . IDENT_3 . redis . core . entity . IDENT_10 ) { com . IDENT_2 . IDENT_3 . redis . core . entity . IDENT_11 IDENT_12 = IDENT_13 . METHOD_3 ( ) ; METHOD_4 ( IDENT_12 , IDENT_13 ) ; java . lang . String IDENT_14 = METHOD_5 ( IDENT_13 ) ; if ( ! ( IDENT_15 . containsKey ( IDENT_14 ) ) ) { MOD_0 ( this ) { if ( ! ( IDENT_15 . containsKey ( IDENT_14 ) ) ) { if ( IDENT_16 . contains ( IDENT_12 . METHOD_6 ( ) ) ) { throw new com . IDENT_2 . IDENT_3 . redis . IDENT_4 . exception . METHOD_7 ( new com . IDENT_2 . IDENT_3 . exception . METHOD_8 ( com . IDENT_2 . IDENT_3 . redis . core . IDENT_4 . container . IDENT_17 . IDENT_18 , java . lang . String . format ( STRING_1 , IDENT_13 . METHOD_9 ( ) , IDENT_13 . METHOD_10 ( ) , IDENT_12 . METHOD_6 ( ) ) ) , null ) ; } try { com . IDENT_2 . IDENT_3 . redis . IDENT_4 . IDENT_5 IDENT_19 = METHOD_11 ( IDENT_13 , IDENT_12 ) ; METHOD_12 ( IDENT_14 , IDENT_19 ) ; return IDENT_19 ; } catch ( java . lang . Throwable ex ) { throw new com . IDENT_2 . IDENT_3 . redis . IDENT_4 . exception . METHOD_7 ( new com . IDENT_2 . IDENT_3 . exception . METHOD_8 ( com . IDENT_2 . IDENT_3 . redis . core . IDENT_4 . container . IDENT_17 . IDENT_20 , java . lang . String . format ( STRING_2 , IDENT_13 . METHOD_9 ( ) , IDENT_13 . METHOD_10 ( ) ) ) , ex ) ; } } } } throw new com . IDENT_2 . IDENT_3 . redis . IDENT_4 . exception . METHOD_7 ( new com . IDENT_2 . IDENT_3 . exception . METHOD_8 ( com . IDENT_2 . IDENT_3 . redis . core . IDENT_4 . container . IDENT_17 . IDENT_18 , java . lang . String . format ( STRING_3 , IDENT_13 . METHOD_9 ( ) , IDENT_13 . METHOD_10 ( ) ) ) , null ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_6 ) 