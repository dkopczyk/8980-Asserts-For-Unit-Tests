METHOD_0 ( ) { java . lang . Object result = mock ( java . lang . Object . class ) ; java . lang . String filter = STRING_0 ; org . osgi . framework . IDENT_0 [ ] IDENT_1 = new org . osgi . framework . IDENT_0 [ ] { mock ( org . osgi . framework . IDENT_0 . class ) , mock ( org . osgi . framework . IDENT_0 . class ) } ; when ( IDENT_2 . METHOD_1 ( java . lang . Object . class . getName ( ) , filter ) ) . thenReturn ( IDENT_1 ) ; when ( IDENT_2 . METHOD_2 ( IDENT_1 [ 0 ] ) ) . thenReturn ( result ) ; java . util . List < org . osgi . framework . IDENT_0 < ? > > list = new java . util . ArrayList < org . osgi . framework . IDENT_0 < ? > > ( ) ; java . lang . Object IDENT_3 = org . IDENT_4 . service . util . internal . utils . IDENT_5 . METHOD_2 ( IDENT_2 , java . lang . Object . class , filter , list ) ; "<AssertPlaceHolder>" ; } equals ( java . lang . Object ) { if ( ! ( other instanceof org . IDENT_4 . util . IDENT_6 . IDENT_7 ) ) return false ; final org . IDENT_4 . util . IDENT_6 . IDENT_7 IDENT_8 = ( ( org . IDENT_4 . util . IDENT_6 . IDENT_7 ) ( other ) ) ; if ( ! ( IDENT_8 . description . equals ( description ) ) ) return false ; if ( ( IDENT_8 . IDENT_9 . length ) != ( IDENT_9 . length ) ) return false ; java . util . Arrays . METHOD_3 ( IDENT_8 . IDENT_9 ) ; java . util . Arrays . METHOD_3 ( IDENT_9 ) ; for ( int i = 0 ; i < ( IDENT_9 . length ) ; ++ i ) { if ( ! ( IDENT_9 [ i ] . equals ( IDENT_8 . IDENT_9 [ i ] ) ) ) return false ; } return true ; }
org . junit . Assert . assertTrue ( list . get ( 0 ) . equals ( IDENT_1 [ 0 ] ) ) 