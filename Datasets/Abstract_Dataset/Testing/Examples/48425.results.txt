METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( ) ) . thenReturn ( new java . awt . METHOD_2 ( 10 , 20 ) ) ; table . METHOD_3 ( "test" ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . awt . event . IDENT_1 ) { java . lang . String IDENT_2 = null ; org . IDENT_3 . util . IDENT_4 . METHOD_2 p = event . METHOD_1 ( ) ; int IDENT_5 = METHOD_5 ( p ) ; int IDENT_6 = METHOD_6 ( p ) ; if ( ( IDENT_5 != ( - 1 ) ) && ( IDENT_6 != ( - 1 ) ) ) { javax . IDENT_4 . table . IDENT_7 renderer = METHOD_7 ( IDENT_6 , IDENT_5 ) ; org . IDENT_3 . util . IDENT_4 . IDENT_8 component = METHOD_8 ( renderer , IDENT_6 , IDENT_5 ) ; if ( component instanceof org . IDENT_3 . util . IDENT_4 . IDENT_9 ) { org . IDENT_3 . util . IDENT_4 . IDENT_10 IDENT_11 = METHOD_9 ( IDENT_6 , IDENT_5 , false ) ; p . METHOD_10 ( ( - ( IDENT_11 . x ) ) , 0 ) ; java . awt . event . IDENT_1 IDENT_12 = new java . awt . event . METHOD_11 ( component , event . METHOD_12 ( ) , event . METHOD_13 ( ) , event . METHOD_14 ( ) , p . x , p . y , event . METHOD_15 ( ) , event . METHOD_16 ( ) ) ; IDENT_2 = ( ( org . IDENT_3 . util . IDENT_4 . IDENT_9 ) ( component ) ) . METHOD_4 ( IDENT_12 ) ; } } if ( IDENT_2 == null ) IDENT_2 = METHOD_4 ( ) ; return IDENT_2 ; }
org . junit . Assert . assertEquals ( "test" , table . METHOD_4 ( IDENT_0 ) ) 