METHOD_0 ( ) { java . util . List < com . amazonaws . services . IDENT_0 . model . IDENT_1 > IDENT_2 = fr . IDENT_3 . IDENT_4 . tests . IDENT_5 . METHOD_1 ( fr . IDENT_3 . IDENT_4 . tests . IDENT_6 . IDENT_7 , STRING_0 ) ; java . util . Set < java . lang . String > IDENT_8 = IDENT_2 . stream ( ) . map ( IDENT_1 :: getKey ) . collect ( METHOD_2 ( ) ) ; java . util . Set < java . lang . String > IDENT_9 = fr . IDENT_3 . IDENT_4 . tests . IDENT_6 . IDENT_10 . METHOD_3 ( ) . stream ( ) . filter ( ( o ) -> o . startsWith ( STRING_0 ) ) . collect ( METHOD_2 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String ) { java . lang . String IDENT_11 = fr . IDENT_3 . IDENT_4 . utils . IDENT_5 . METHOD_4 ( IDENT_12 ) ; java . lang . String IDENT_13 = fr . IDENT_3 . IDENT_4 . utils . IDENT_5 . METHOD_5 ( IDENT_12 ) ; com . amazonaws . services . IDENT_0 . IDENT_14 IDENT_15 = fr . IDENT_3 . IDENT_4 . utils . IDENT_16 . METHOD_6 ( ) ; fr . IDENT_3 . IDENT_4 . utils . IDENT_17 req = new fr . IDENT_3 . IDENT_4 . utils . METHOD_7 ( ) . METHOD_8 ( IDENT_11 ) . METHOD_9 ( ( ! ( IDENT_13 . equals ( "" ) ) ? ( IDENT_13 + "/" ) + IDENT_18 : IDENT_18 ) ) ; fr . IDENT_3 . IDENT_4 . utils . IDENT_19 IDENT_20 = IDENT_15 . METHOD_10 ( req ) ; java . util . List < fr . IDENT_3 . IDENT_4 . utils . IDENT_1 > IDENT_21 = IDENT_20 . METHOD_11 ( ) ; while ( IDENT_20 . METHOD_12 ( ) ) { IDENT_20 = IDENT_15 . METHOD_13 ( IDENT_20 ) ; IDENT_21 . addAll ( IDENT_20 . METHOD_11 ( ) ) ; } return IDENT_21 . stream ( ) . filter ( ( obj ) -> ( ! ( obj . getKey ( ) . equals ( "" ) ) ) && ( ! ( obj . getKey ( ) . METHOD_14 ( "/" ) ) ) ) . collect ( toList ( ) ) ; }
org . junit . Assert . assertEquals ( IDENT_8 , IDENT_9 ) 