METHOD_0 ( ) { org . jfree . data . time . IDENT_0 t = new org . jfree . data . time . METHOD_1 ( ) ; org . jfree . data . time . IDENT_1 IDENT_2 = new org . jfree . data . time . METHOD_2 ( STRING_0 ) ; IDENT_2 . add ( t , FLOAT_0 ) ; t = t . next ( ) ; IDENT_2 . add ( t , FLOAT_1 ) ; org . jfree . data . time . IDENT_3 dataset = new org . jfree . data . time . METHOD_3 ( ) ; dataset . METHOD_4 ( IDENT_2 ) ; org . jfree . chart . IDENT_4 IDENT_5 = org . jfree . chart . IDENT_6 . METHOD_5 ( STRING_1 , STRING_2 , STRING_3 , dataset ) ; org . jfree . chart . IDENT_4 IDENT_7 = ( ( org . jfree . chart . IDENT_4 ) ( org . jfree . chart . IDENT_8 . METHOD_6 ( IDENT_5 ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( java . lang . Object ) { java . lang . Object result = null ; java . io . ByteArrayOutputStream buffer = new java . io . ByteArrayOutputStream ( ) ; java . io . IDENT_9 out ; try { out = new java . io . METHOD_7 ( buffer ) ; out . METHOD_8 ( original ) ; out . close ( ) ; java . io . IDENT_10 in = new java . io . METHOD_9 ( new java . io . ByteArrayInputStream ( buffer . toByteArray ( ) ) ) ; result = in . METHOD_10 ( ) ; in . close ( ) ; } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( e ) ; } catch ( java . lang . IDENT_11 e ) { throw new java . lang . RuntimeException ( e ) ; } return result ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_7 ) 