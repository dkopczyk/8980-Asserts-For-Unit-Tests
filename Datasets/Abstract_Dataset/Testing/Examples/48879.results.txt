METHOD_0 ( ) { org . jfree . data . IDENT_0 . IDENT_1 dataset = new org . jfree . data . IDENT_0 . METHOD_1 ( ) ; org . jfree . chart . IDENT_2 chart = org . jfree . chart . IDENT_3 . METHOD_2 ( STRING_0 , STRING_1 , STRING_2 , dataset ) ; org . jfree . chart . IDENT_2 IDENT_4 = ( ( org . jfree . chart . IDENT_2 ) ( org . jfree . chart . IDENT_5 . METHOD_3 ( chart ) ) ) ; "<AssertPlaceHolder>" ; try { IDENT_4 . METHOD_4 ( INT_0 , 200 ) ; } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( STRING_3 ) ; } } METHOD_3 ( java . lang . Object ) { java . lang . Object result = null ; java . io . ByteArrayOutputStream buffer = new java . io . ByteArrayOutputStream ( ) ; java . io . IDENT_6 out ; try { out = new java . io . METHOD_5 ( buffer ) ; out . METHOD_6 ( original ) ; out . close ( ) ; java . io . IDENT_7 in = new java . io . METHOD_7 ( new java . io . ByteArrayInputStream ( buffer . toByteArray ( ) ) ) ; result = in . METHOD_8 ( ) ; in . close ( ) ; } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( e ) ; } catch ( java . lang . IDENT_8 e ) { throw new java . lang . RuntimeException ( e ) ; } return result ; }
org . junit . Assert . assertEquals ( chart , IDENT_4 ) 