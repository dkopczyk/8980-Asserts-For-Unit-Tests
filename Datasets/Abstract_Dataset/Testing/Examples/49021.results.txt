METHOD_0 ( ) { org . jfree . data . IDENT_0 . IDENT_1 dataset = METHOD_1 ( ) ; java . lang . IDENT_2 IDENT_3 = org . jfree . data . IDENT_4 . IDENT_5 . METHOD_2 ( dataset ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . jfree . data . IDENT_0 . IDENT_1 ) { org . jfree . chart . util . IDENT_6 . METHOD_3 ( dataset , STRING_0 ) ; java . lang . IDENT_2 result ; if ( dataset instanceof org . jfree . data . IDENT_7 ) { org . jfree . data . IDENT_7 info = ( ( org . jfree . data . IDENT_7 ) ( dataset ) ) ; return new java . lang . Double ( info . METHOD_4 ( true ) ) ; } else { double IDENT_3 = Double . IDENT_8 ; int IDENT_9 = dataset . METHOD_5 ( ) ; for ( int IDENT_10 = 0 ; IDENT_10 < IDENT_9 ; IDENT_10 ++ ) { int IDENT_11 = dataset . METHOD_6 ( IDENT_10 ) ; for ( int item = 0 ; item < IDENT_11 ; item ++ ) { double value ; if ( dataset instanceof org . jfree . data . IDENT_0 . IDENT_12 ) { org . jfree . data . IDENT_0 . IDENT_12 IDENT_13 = ( ( org . jfree . data . IDENT_0 . IDENT_12 ) ( dataset ) ) ; value = IDENT_13 . METHOD_7 ( IDENT_10 , item ) ; } else { value = dataset . METHOD_8 ( IDENT_10 , item ) ; } if ( ! ( java . lang . Double . METHOD_9 ( value ) ) ) { IDENT_3 = java . lang . Math . min ( IDENT_3 , value ) ; } } } if ( IDENT_3 == ( Double . IDENT_8 ) ) { result = null ; } else { result = new java . lang . Double ( IDENT_3 ) ; } } return result ; }
org . junit . Assert . assertEquals ( new java . lang . Double ( 1.0 ) , IDENT_3 ) 