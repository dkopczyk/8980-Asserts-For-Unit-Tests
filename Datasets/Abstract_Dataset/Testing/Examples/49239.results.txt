METHOD_0 ( ) { java . util . Collection < java . lang . String > expressions = java . util . Arrays . asList ( STRING_0 , STRING_1 , STRING_2 , "" , STRING_3 , STRING_4 ) ; for ( java . lang . String expression : expressions ) { boolean IDENT_0 = false ; try { org . IDENT_1 . IDENT_2 . core . util . IDENT_3 . IDENT_4 . parse ( expression ) ; } catch ( org . IDENT_1 . IDENT_2 . core . util . IDENT_3 . exceptions . IDENT_5 e ) { IDENT_0 = true ; } finally { "<AssertPlaceHolder>" ; } } } parse ( java . lang . String ) { org . IDENT_1 . IDENT_2 . core . IDENT_3 . IDENT_6 IDENT_7 = new org . IDENT_1 . IDENT_2 . core . IDENT_3 . METHOD_1 ( new org . IDENT_1 . IDENT_2 . core . util . IDENT_3 . METHOD_2 ( IDENT_8 ) ) ; IDENT_7 . METHOD_3 ( ) ; IDENT_7 . METHOD_4 ( new org . IDENT_1 . IDENT_2 . core . util . IDENT_3 . METHOD_5 ( ) { @ org . IDENT_1 . IDENT_2 . core . util . IDENT_3 . Override public void METHOD_6 ( org . IDENT_1 . IDENT_2 . core . util . IDENT_3 . IDENT_9 < ? , ? > IDENT_10 , java . lang . Object IDENT_11 , int line , int IDENT_12 , java . lang . String msg , org . IDENT_1 . IDENT_2 . core . util . IDENT_3 . IDENT_13 e ) { throw new org . IDENT_1 . IDENT_2 . core . util . IDENT_3 . exceptions . METHOD_7 ( STRING_5 , e ) ; } } ) ; org . IDENT_1 . IDENT_2 . core . IDENT_3 . IDENT_14 parser = new org . IDENT_1 . IDENT_2 . core . IDENT_3 . METHOD_8 ( new org . IDENT_1 . IDENT_2 . core . util . IDENT_3 . METHOD_9 ( IDENT_7 ) ) ; parser . METHOD_3 ( ) ; parser . METHOD_4 ( new org . IDENT_1 . IDENT_2 . core . util . IDENT_3 . METHOD_5 ( ) { @ org . IDENT_1 . IDENT_2 . core . util . IDENT_3 . Override public void METHOD_6 ( org . IDENT_1 . IDENT_2 . core . util . IDENT_3 . IDENT_9 < ? , ? > IDENT_10 , java . lang . Object o , int i , int IDENT_15 , java . lang . String s , org . IDENT_1 . IDENT_2 . core . util . IDENT_3 . IDENT_13 e ) { throw new org . IDENT_1 . IDENT_2 . core . util . IDENT_3 . exceptions . METHOD_7 ( STRING_5 , e ) ; } } ) ; org . IDENT_1 . IDENT_2 . core . IDENT_3 . METHOD_8 . IDENT_16 IDENT_17 = parser . expression ( ) ; return new org . IDENT_1 . IDENT_2 . core . util . IDENT_3 . METHOD_10 ( ) . METHOD_11 ( IDENT_17 ) ; }
org . junit . Assert . assertTrue ( IDENT_0 ) 