METHOD_0 ( ) { java . util . stream . IDENT_0 < java . lang . Integer > IDENT_1 = java . util . stream . IDENT_0 . of ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ) ; org . IDENT_2 . IDENT_3 . java . IDENT_4 . IDENT_5 < java . lang . Integer > IDENT_6 = new org . IDENT_2 . IDENT_3 . java . IDENT_4 . METHOD_1 ( ( IDENT_7 ) -> 15 , org . IDENT_2 . IDENT_3 . core . types . IDENT_8 . METHOD_2 ( org . IDENT_2 . IDENT_3 . java . IDENT_4 . Integer . class ) , ( IDENT_9 ) -> INT_0 ) ; IDENT_6 . METHOD_3 ( 10 ) ; org . IDENT_2 . IDENT_3 . java . IDENT_10 . IDENT_11 [ ] IDENT_12 = new org . IDENT_2 . IDENT_3 . java . IDENT_10 . IDENT_11 [ ] { METHOD_4 ( IDENT_1 ) } ; org . IDENT_2 . IDENT_3 . java . IDENT_10 . IDENT_11 [ ] IDENT_13 = new org . IDENT_2 . IDENT_3 . java . IDENT_10 . IDENT_11 [ ] { METHOD_4 ( ) } ; evaluate ( IDENT_6 , IDENT_12 , IDENT_13 ) ; final java . util . List < java . lang . Integer > result = IDENT_13 [ 0 ] . < java . lang . Integer > METHOD_5 ( ) . collect ( java . util . stream . IDENT_14 . toList ( ) ) ; "<AssertPlaceHolder>" ; } size ( ) { return this . IDENT_15 . size ( ) ; }
org . junit . Assert . assertEquals ( 10 , result . size ( ) ) 