METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . spark . IDENT_2 . IDENT_3 . IDENT_4 input = this . METHOD_1 ( java . util . Arrays . asList ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ) ) ; org . IDENT_0 . IDENT_1 . java . IDENT_2 . IDENT_5 . IDENT_4 output = this . METHOD_2 ( ) ; int IDENT_6 = 3 ; org . IDENT_0 . IDENT_1 . spark . IDENT_7 . IDENT_8 < java . lang . Integer > IDENT_9 = new org . IDENT_0 . IDENT_1 . spark . IDENT_7 . METHOD_3 ( ( IDENT_10 ) -> IDENT_6 , org . IDENT_0 . IDENT_1 . core . types . IDENT_11 . METHOD_4 ( org . IDENT_0 . IDENT_1 . spark . IDENT_7 . Integer . class ) , ( IDENT_10 ) -> INT_0 ) ; IDENT_9 . METHOD_5 ( 10 ) ; final org . IDENT_0 . IDENT_1 . core . platform . IDENT_12 [ ] IDENT_13 = new org . IDENT_0 . IDENT_1 . core . platform . IDENT_12 [ ] { input } ; final org . IDENT_0 . IDENT_1 . core . platform . IDENT_12 [ ] IDENT_14 = new org . IDENT_0 . IDENT_1 . core . platform . IDENT_12 [ ] { output } ; this . evaluate ( IDENT_9 , IDENT_13 , IDENT_14 ) ; final java . util . List < java . lang . Integer > result = org . IDENT_0 . IDENT_1 . core . util . IDENT_15 . asList ( output . METHOD_6 ( ) ) ; System . out . println ( result ) ; "<AssertPlaceHolder>" ; } size ( ) { return this . IDENT_16 . size ( ) ; }
org . junit . Assert . assertEquals ( IDENT_6 , result . size ( ) ) 