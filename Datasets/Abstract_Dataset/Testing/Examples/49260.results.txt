METHOD_0 ( ) { final org . IDENT_0 . IDENT_1 . tests . Set < java . lang . Integer > IDENT_2 = new org . IDENT_0 . IDENT_1 . tests . HashSet ( ) ; org . IDENT_0 . IDENT_1 . core . plan . IDENT_3 . IDENT_4 IDENT_5 = org . IDENT_0 . IDENT_1 . tests . IDENT_6 . METHOD_1 ( 3 , IDENT_2 , 0 , 1 , 2 ) ; IDENT_5 . METHOD_2 ( STRING_0 ) . METHOD_3 ( org . IDENT_0 . IDENT_1 . spark . IDENT_7 . platform ( ) ) ; IDENT_5 . METHOD_2 ( STRING_1 ) . METHOD_3 ( org . IDENT_0 . IDENT_1 . spark . IDENT_7 . platform ( ) ) ; IDENT_5 . METHOD_2 ( STRING_2 ) . METHOD_3 ( org . IDENT_0 . IDENT_1 . java . IDENT_8 . platform ( ) ) ; IDENT_5 . METHOD_2 ( STRING_3 ) . METHOD_3 ( org . IDENT_0 . IDENT_1 . java . IDENT_8 . platform ( ) ) ; IDENT_5 . METHOD_2 ( STRING_4 ) . METHOD_3 ( org . IDENT_0 . IDENT_1 . java . IDENT_8 . platform ( ) ) ; IDENT_5 . METHOD_2 ( STRING_5 ) . METHOD_3 ( org . IDENT_0 . IDENT_1 . spark . IDENT_7 . platform ( ) ) ; org . IDENT_0 . IDENT_1 . core . api . IDENT_9 IDENT_10 = new org . IDENT_0 . IDENT_1 . core . api . METHOD_4 ( configuration ) . with ( org . IDENT_0 . IDENT_1 . java . IDENT_8 . METHOD_5 ( ) ) . with ( org . IDENT_0 . IDENT_1 . spark . IDENT_7 . METHOD_5 ( ) ) ; IDENT_10 . execute ( IDENT_5 ) ; final org . IDENT_0 . IDENT_1 . tests . HashSet < java . lang . Integer > expected = new org . IDENT_0 . IDENT_1 . tests . HashSet ( org . IDENT_0 . IDENT_1 . core . util . IDENT_11 . asList ( org . IDENT_0 . IDENT_1 . core . util . IDENT_11 . range ( 0 , INT_0 ) ) ) ; "<AssertPlaceHolder>" ; } range ( int , int ) { assert from <= to ; int [ ] result = new int [ to - from ] ; for ( int i = from ; i < to ; i ++ ) { result [ ( i - from ) ] = i ; } return result ; }
org . junit . Assert . assertEquals ( expected , IDENT_2 ) 