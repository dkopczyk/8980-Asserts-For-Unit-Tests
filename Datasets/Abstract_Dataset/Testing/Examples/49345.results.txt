METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . listener . IDENT_2 < java . lang . String > listener = new org . IDENT_0 . IDENT_1 . listener . IDENT_2 < java . lang . String > ( ) ; try { listener . METHOD_1 ( STRING_0 , "test" ) ; } catch ( java . lang . Exception e ) { "<AssertPlaceHolder>" ; } listener . METHOD_2 ( new org . IDENT_0 . IDENT_1 . consumer . IDENT_3 < java . lang . String > ( ) ) ; listener . METHOD_1 ( STRING_0 , "test" ) ; } METHOD_1 ( IDENT_4 , IDENT_5 ) { if ( ( IDENT_6 ) == null ) throw new org . IDENT_0 . IDENT_7 . exception . METHOD_3 ( STRING_1 ) ; if ( ( IDENT_8 ) == null ) throw new org . IDENT_0 . IDENT_7 . exception . METHOD_3 ( STRING_2 ) ; if ( val == null ) throw new org . IDENT_0 . IDENT_7 . exception . METHOD_3 ( STRING_3 ) ; java . lang . String IDENT_9 = org . IDENT_0 . IDENT_7 . util . IDENT_10 . METHOD_4 ( val , ( ( STRING_4 + ( IDENT_8 . substring ( 0 , 1 ) . METHOD_5 ( ) ) ) + ( IDENT_8 . substring ( 1 ) ) ) ) ; if ( IDENT_9 == null ) throw new org . IDENT_0 . IDENT_7 . exception . METHOD_3 ( STRING_5 ) ; @ org . IDENT_0 . kafka . listener . METHOD_6 ( STRING_6 ) org . IDENT_0 . kafka . consumer . IDENT_11 < IDENT_4 , IDENT_5 > consumer = ( ( org . IDENT_0 . kafka . consumer . IDENT_11 < IDENT_4 , IDENT_5 > ) ( IDENT_6 . METHOD_7 ( IDENT_9 ) ) ) ; if ( consumer == null ) throw new org . IDENT_0 . IDENT_7 . exception . METHOD_3 ( STRING_7 ) ; consumer . METHOD_8 ( key , val ) ; }
org . junit . Assert . assertNotNull ( e ) 