test ( ) { org . IDENT_0 . kafka . pool . IDENT_1 < byte [ ] , byte [ ] > IDENT_2 = new org . IDENT_0 . kafka . pool . IDENT_1 < byte [ ] , byte [ ] > ( ) ; IDENT_2 . METHOD_0 ( kafka . utils . TestUtils . METHOD_1 ( ( STRING_0 + ( port ) ) ) ) ; IDENT_2 . init ( ) ; java . util . Properties properties = kafka . utils . TestUtils . METHOD_1 ( ( STRING_0 + ( port ) ) ) ; org . IDENT_0 . kafka . core . IDENT_3 < byte [ ] , byte [ ] > IDENT_4 = new org . IDENT_0 . kafka . core . IDENT_3 < byte [ ] , byte [ ] > ( properties ) ; "<AssertPlaceHolder>" ; IDENT_4 . METHOD_2 ( IDENT_4 . METHOD_3 ( ) ) ; IDENT_4 . METHOD_4 ( IDENT_5 , "test" . getBytes ( ) ) ; IDENT_4 . METHOD_5 ( IDENT_5 , STRING_1 . getBytes ( ) , "value" . getBytes ( ) ) ; IDENT_4 . METHOD_6 ( ) ; IDENT_2 . METHOD_7 ( ) ; IDENT_6 . logger . info ( "test" ) ; } METHOD_3 ( ) { return IDENT_7 ; }
org . junit . Assert . assertNotNull ( IDENT_4 . METHOD_3 ( ) ) 