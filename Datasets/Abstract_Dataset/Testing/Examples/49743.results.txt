METHOD_0 ( ) { logger . info ( STRING_0 ) ; com . IDENT_0 . framework . common . IDENT_1 . IDENT_2 IDENT_3 = METHOD_1 ( ) ; IDENT_3 . add ( FLOAT_0 ) ; IDENT_3 . add ( FLOAT_0 ) ; com . IDENT_0 . framework . common . IDENT_1 . IDENT_2 expResult = new com . IDENT_0 . framework . common . IDENT_1 . METHOD_2 ( new java . util . ArrayList ( ) ) ; expResult . add ( FLOAT_0 ) ; com . IDENT_0 . framework . common . IDENT_1 . METHOD_2 result = com . IDENT_0 . framework . core . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_3 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( com . IDENT_0 . framework . core . IDENT_4 . IDENT_5 . METHOD_2 ) { com . IDENT_0 . framework . core . IDENT_4 . IDENT_5 . IDENT_7 IDENT_8 = com . IDENT_0 . framework . core . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_4 ( IDENT_3 ) ; int IDENT_9 = 0 ; com . IDENT_0 . framework . core . IDENT_4 . IDENT_5 . IDENT_10 IDENT_11 = new com . IDENT_0 . framework . core . IDENT_4 . IDENT_5 . METHOD_5 ( ) ; for ( Map . Entry < java . lang . Object , java . lang . Object > entry : METHOD_4 . entrySet ( ) ) { java . lang . Object key = entry . getKey ( ) ; int count = ( ( java . lang . IDENT_12 ) ( entry . getValue ( ) ) ) . METHOD_6 ( ) ; if ( IDENT_9 == count ) { IDENT_11 . add ( key ) ; } else if ( IDENT_9 < count ) { IDENT_9 = count ; IDENT_11 . METHOD_7 ( ) ; IDENT_11 . add ( key ) ; } } return IDENT_11 . METHOD_8 ( ) ; }
org . junit . Assert . assertEquals ( expResult , result ) 