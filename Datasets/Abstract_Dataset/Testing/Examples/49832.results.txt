METHOD_0 ( ) { long [ ] a = new long [ ] { 1 , 1 } ; long [ ] b = new long [ ] { 3 , 2 } ; java . util . List < org . davidmoten . IDENT_0 . IDENT_1 > x = org . davidmoten . IDENT_0 . IDENT_2 . split ( a , b , 1 ) ; System . out . println ( x ) ; "<AssertPlaceHolder>" ; } split ( long [ ] , long [ ] , int ) { int IDENT_3 = a . length ; java . util . List < org . davidmoten . IDENT_0 . IDENT_1 > IDENT_4 = com . github . davidmoten . IDENT_5 . Lists . newArrayList ( ) ; IDENT_4 . add ( new org . davidmoten . IDENT_0 . METHOD_1 ( a , b ) ) ; for ( int IDENT_6 = 1 ; IDENT_6 <= IDENT_7 ; IDENT_6 ++ ) { for ( int i = 0 ; i < IDENT_3 ; i ++ ) { java . util . List < org . davidmoten . IDENT_0 . METHOD_1 > IDENT_8 = com . github . davidmoten . IDENT_5 . Lists . newArrayList ( ) ; for ( org . davidmoten . IDENT_0 . METHOD_1 IDENT_9 : IDENT_4 ) { long IDENT_10 = java . lang . Math . min ( IDENT_9 . a [ i ] , IDENT_9 . b [ i ] ) ; long IDENT_11 = java . lang . Math . max ( IDENT_9 . a [ i ] , IDENT_9 . b [ i ] ) ; long IDENT_12 = ( org . davidmoten . IDENT_0 . IDENT_13 . METHOD_2 ( ( IDENT_10 + 1 ) , ( IDENT_11 + 1 ) ) ) - 1 ; if ( ( IDENT_10 > IDENT_12 ) || ( IDENT_11 < IDENT_12 ) ) { throw new java . lang . RuntimeException ( STRING_0 ) ; } { long [ ] IDENT_14 = org . davidmoten . IDENT_0 . IDENT_2 . METHOD_3 ( IDENT_9 . a ) ; long [ ] IDENT_15 = org . davidmoten . IDENT_0 . IDENT_2 . METHOD_3 ( IDENT_9 . b ) ; IDENT_14 [ i ] = IDENT_10 ; IDENT_15 [ i ] = IDENT_12 ; long [ ] IDENT_16 = org . davidmoten . IDENT_0 . IDENT_2 . METHOD_3 ( IDENT_9 . a ) ; long [ ] IDENT_17 = org . davidmoten . IDENT_0 . IDENT_2 . METHOD_3 ( IDENT_9 . b ) ; IDENT_16 [ i ] = java . lang . Math . min ( ( IDENT_12 + 1 ) , IDENT_11 ) ; IDENT_17 [ i ] = IDENT_11 ; IDENT_8 . add ( new org . davidmoten . IDENT_0 . METHOD_1 ( IDENT_14 , IDENT_15 ) ) ; IDENT_8 . add ( new org . davidmoten . IDENT_0 . METHOD_1 ( IDENT_16 , IDENT_17 ) ) ; } } IDENT_4 = IDENT_8 ; } } return IDENT_4 ; }
org . junit . Assert . assertEquals ( com . github . davidmoten . IDENT_5 . Lists . newArrayList ( org . davidmoten . IDENT_0 . METHOD_1 . a ( 1 , 1 ) . b ( 1 , 1 ) , org . davidmoten . IDENT_0 . METHOD_1 . a ( 1 , 2 ) . b ( 1 , 2 ) , org . davidmoten . IDENT_0 . METHOD_1 . a ( 2 , 1 ) . b ( 3 , 1 ) , org . davidmoten . IDENT_0 . METHOD_1 . a ( 2 , 2 ) . b ( 3 , 2 ) ) , x ) 