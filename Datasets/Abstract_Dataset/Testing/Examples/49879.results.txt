METHOD_0 ( ) { java . util . List < com . github . davidmoten . IDENT_0 . Entry < java . lang . Object , com . github . davidmoten . IDENT_0 . geometry . IDENT_1 > > IDENT_2 = com . github . davidmoten . IDENT_0 . IDENT_3 . METHOD_1 ( ) ; int IDENT_4 = 8 ; com . github . davidmoten . IDENT_0 . IDENT_5 < java . lang . Object , com . github . davidmoten . IDENT_0 . geometry . IDENT_1 > tree = com . github . davidmoten . IDENT_0 . IDENT_5 . METHOD_2 ( METHOD_2 ) . < java . lang . Object , com . github . davidmoten . IDENT_0 . geometry . IDENT_1 > create ( ) . add ( IDENT_2 ) ; java . io . File file = new java . io . File ( STRING_0 ) ; file . delete ( ) ; com . IDENT_6 . IDENT_7 . IDENT_8 IDENT_7 = new com . IDENT_6 . IDENT_7 . METHOD_3 ( ) ; com . IDENT_6 . IDENT_7 . io . IDENT_9 output = new com . IDENT_6 . IDENT_7 . io . METHOD_4 ( new java . io . METHOD_5 ( file ) ) ; IDENT_7 . METHOD_6 ( output , tree ) ; output . close ( ) ; com . IDENT_6 . IDENT_7 . io . IDENT_10 input = new com . IDENT_6 . IDENT_7 . io . METHOD_7 ( new java . io . METHOD_8 ( file ) ) ; IDENT_7 . METHOD_9 ( new org . IDENT_11 . strategy . METHOD_10 ( ) ) ; @ com . github . davidmoten . IDENT_0 . METHOD_11 ( STRING_1 ) com . github . davidmoten . IDENT_0 . IDENT_5 < java . lang . Object , com . github . davidmoten . IDENT_0 . geometry . IDENT_1 > IDENT_12 = IDENT_7 . METHOD_12 ( input , com . github . davidmoten . IDENT_0 . IDENT_5 . class ) ; "<AssertPlaceHolder>" ; } add ( com . github . davidmoten . IDENT_0 . Entry ) { @ com . github . davidmoten . IDENT_0 . METHOD_11 ( STRING_1 ) final java . util . List < com . github . davidmoten . IDENT_0 . Entry < T , IDENT_13 > > IDENT_14 = com . github . davidmoten . IDENT_0 . IDENT_15 . add ( IDENT_2 , ( ( com . github . davidmoten . IDENT_0 . Entry < T , IDENT_13 > ) ( entry ) ) ) ; if ( ( IDENT_14 . size ( ) ) <= ( context . METHOD_2 ( ) ) ) return java . util . Collections . singletonList ( ( ( com . github . davidmoten . IDENT_0 . Node < T , IDENT_13 > ) ( new com . github . davidmoten . IDENT_0 . IDENT_16 < T , IDENT_13 > ( IDENT_14 , context ) ) ) ) ; else { com . github . davidmoten . IDENT_0 . geometry . IDENT_17 < com . github . davidmoten . IDENT_0 . Entry < T , IDENT_13 > > IDENT_18 = context . METHOD_13 ( ) . split ( IDENT_14 , context . METHOD_14 ( ) ) ; return METHOD_15 ( IDENT_18 ) ; } }
org . junit . Assert . assertNotNull ( IDENT_12 ) 