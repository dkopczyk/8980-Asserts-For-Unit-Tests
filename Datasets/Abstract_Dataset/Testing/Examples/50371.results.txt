METHOD_0 ( ) { java . nio . file . Path root = java . nio . file . IDENT_0 . get ( io . IDENT_1 . vertx . maven . IDENT_2 . IDENT_3 . IDENT_4 ) ; java . nio . file . Path IDENT_5 = root . resolve ( io . IDENT_1 . vertx . maven . IDENT_2 . IDENT_3 . IDENT_6 ) ; final java . nio . file . Path IDENT_7 = root . resolve ( io . IDENT_1 . vertx . maven . IDENT_2 . IDENT_3 . IDENT_8 ) ; io . IDENT_1 . vertx . IDENT_9 IDENT_10 = new io . IDENT_1 . vertx . METHOD_1 ( ) . METHOD_2 ( true ) . METHOD_3 ( io . IDENT_1 . vertx . maven . IDENT_2 . IDENT_3 . IDENT_11 ) . METHOD_4 ( true ) . METHOD_5 ( singletonList ( IDENT_5 . toString ( ) ) ) . METHOD_6 ( asList ( new io . IDENT_1 . vertx . IDENT_2 . METHOD_7 ( ) . METHOD_8 ( io . IDENT_1 . vertx . maven . IDENT_2 . IDENT_3 . IDENT_12 ) . METHOD_9 ( io . IDENT_1 . vertx . maven . IDENT_2 . IDENT_13 ) , new io . IDENT_1 . vertx . IDENT_2 . METHOD_7 ( ) . METHOD_8 ( io . IDENT_1 . vertx . maven . IDENT_2 . IDENT_3 . IDENT_14 ) . METHOD_9 ( io . IDENT_1 . vertx . maven . IDENT_2 . IDENT_15 ) , new io . IDENT_1 . vertx . IDENT_2 . METHOD_7 ( ) . METHOD_8 ( io . IDENT_1 . vertx . maven . IDENT_2 . IDENT_3 . IDENT_16 ) . METHOD_9 ( io . IDENT_1 . vertx . maven . IDENT_2 . IDENT_17 ) ) ) ; io . IDENT_1 . vertx . maven . IDENT_2 . IDENT_18 IDENT_19 = new io . IDENT_1 . vertx . maven . IDENT_2 . METHOD_10 ( IDENT_10 , IDENT_7 . METHOD_11 ( ) ) ; final java . util . List < java . nio . file . Path > IDENT_2 = IDENT_19 . METHOD_12 ( ) ; "<AssertPlaceHolder>" ; } METHOD_12 ( ) { return IDENT_20 . METHOD_13 ( ( ) -> METHOD_14 ( METHOD_15 ( ) , METHOD_16 ( ) ) . collect ( java . util . stream . IDENT_21 . toList ( ) ) ) ; }
org . junit . Assert . assertTrue ( IDENT_2 . contains ( IDENT_5 . resolve ( io . IDENT_1 . vertx . maven . IDENT_2 . IDENT_3 . IDENT_11 ) ) ) 