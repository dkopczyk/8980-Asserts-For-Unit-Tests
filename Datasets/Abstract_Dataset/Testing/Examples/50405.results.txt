METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . ext . IDENT_2 . model . IDENT_3 IDENT_4 = METHOD_1 ( STRING_0 1 , STRING_1 , ( - 1 ) ) ; org . IDENT_0 . IDENT_1 . ext . IDENT_2 . model . IDENT_3 IDENT_5 = METHOD_1 ( STRING_2 , STRING_3 , ( - 1 ) ) ; java . util . List < org . IDENT_0 . IDENT_1 . ext . IDENT_2 . model . IDENT_3 > IDENT_6 = java . util . Arrays . asList ( IDENT_4 , IDENT_5 ) ; org . IDENT_0 . IDENT_1 . ext . IDENT_2 . model . IDENT_7 table = new org . IDENT_0 . IDENT_1 . ext . IDENT_2 . model . METHOD_2 ( IDENT_8 ) ; table . setName ( STRING_4 ) ; table . METHOD_3 ( IDENT_9 ) ; table . METHOD_4 ( false ) ; METHOD_5 ( IDENT_6 , table ) ; java . lang . String IDENT_10 = STRING_5 + ( ( ( ( STRING_6 + STRING_0 0 ) + STRING_7 ) + STRING_8 ) + STRING_9 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( org . IDENT_0 . IDENT_1 . model . runtime . IDENT_11 ) { java . lang . StringBuilder IDENT_12 = new java . lang . StringBuilder ( ) ; IDENT_12 . append ( STRING_10 1 ) . append ( ( this . METHOD_7 ( ) ? STRING_11 : "" ) ) . append ( STRING_12 ) . append ( ( METHOD_8 ( ) ? STRING_13 6 : "" ) ) . append ( ( this . METHOD_9 ( ) ? STRING_14 : "" ) ) . append ( STRING_15 ) . append ( METHOD_10 ( ) ) . append ( this . getName ( ) ) . append ( STRING_10 0 ) ; java . util . List < org . IDENT_0 . IDENT_1 . ext . IDENT_13 . model . IDENT_3 > IDENT_6 = METHOD_11 ( monitor ) ; if ( ( IDENT_6 . size ( ) ) == 0 ) { IDENT_12 . append ( STRING_10 2 ) ; } else if ( ( IDENT_6 . size ( ) ) == 1 ) { org . IDENT_0 . IDENT_1 . ext . IDENT_13 . model . IDENT_3 column = IDENT_6 . get ( 0 ) ; IDENT_12 . append ( ( ( ( ( STRING_16 + ( column . getName ( ) ) ) + STRING_13 0 ) + ( column . METHOD_12 ( ) ) ) + STRING_10 2 ) ) ; } else { IDENT_12 . append ( IDENT_6 . stream ( ) . map ( ( field ) -> ( ( STRING_16 + ( field . getName ( ) ) ) + STRING_13 0 ) + ( field . METHOD_12 ( ) ) ) . collect ( java . util . stream . IDENT_14 . METHOD_13 ( STRING_13 4 ) ) ) ; IDENT_12 . append ( STRING_10 2 ) ; } if ( org . IDENT_0 . utils . IDENT_15 . METHOD_14 ( this . METHOD_15 ( ) ) ) { IDENT_12 . append ( STRING_13 7 ) ; IDENT_12 . append ( this . IDENT_16 . stream ( ) . map ( ( location ) -> ( STRING_13 2 + location ) + STRING_13 1 ) . collect ( java . util . stream . IDENT_14 . METHOD_13 ( STRING_13 4 ) ) ) ; IDENT_12 . append ( ( ( STRING_13 5 + ( METHOD_16 ( ) ) ) + STRING_13 9 ) ) ; } else if ( METHOD_17 ( ) ) { IDENT_12 . append ( ( ( ( ( STRING_13 8 + ( this . METHOD_18 ( ) ) ) + STRING_17 ) + ( METHOD_16 ( ) ) ) + STRING_13 9 ) ) ; } IDENT_12 . append ( STRING_13 3 ) . append ( this . METHOD_19 ( ) ) . append ( STRING_13 1 ) ; if ( ( this . METHOD_20 ( ) ) != null ) { IDENT_12 . append ( METHOD_21 ( this . IDENT_17 , this . METHOD_20 ( ) ) ) ; } if ( ( ( this . METHOD_22 ( ) ) != null ) && ( ( this . METHOD_22 ( ) . length ( ) ) > 0 ) ) { IDENT_12 . append ( ( ( STRING_18 + ( this . METHOD_22 ( ) ) ) + STRING_13 1 ) ) ; } if ( this . METHOD_23 ( ) ) { IDENT_12 . append ( STRING_10 ) ; } if ( ( ( this . METHOD_24 ( ) ) > 0 ) && ( ( this . METHOD_25 ( ) ) != null ) ) { IDENT_12 . append ( ( this . METHOD_23 ( ) ? STRING_13 0 : STRING_13 9 ) ) . append ( STRING_13 ) . append ( this . METHOD_24 ( ) ) . append ( STRING_13 0 ) . append ( this . METHOD_25 ( ) . getValue ( ) ) ; } return IDENT_12 . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_10 , table . METHOD_6 ( monitor ) ) 