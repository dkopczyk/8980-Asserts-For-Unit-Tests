METHOD_0 ( ) { int IDENT_0 = org . dcache . IDENT_1 . parser . IDENT_2 . METHOD_1 ( org . dcache . IDENT_1 . parser . IDENT_3 ) ; org . dcache . IDENT_1 . IDENT_4 IDENT_5 = new org . dcache . IDENT_1 . METHOD_2 ( IDENT_6 , org . dcache . IDENT_1 . parser . IDENT_7 . getValue ( ) , IDENT_0 , org . dcache . IDENT_1 . IDENT_8 . IDENT_9 . IDENT_10 , INT_0 ) ; org . dcache . IDENT_1 . METHOD_2 IDENT_11 = METHOD_3 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String ) { com . google . common . base . IDENT_12 IDENT_13 = com . google . common . base . IDENT_12 . METHOD_4 ( STRING_1 ) ; java . util . List < java . lang . String > IDENT_14 = IDENT_13 . METHOD_5 ( s ) ; METHOD_6 ( ( ( IDENT_14 . size ( ) ) == 4 ) , ( ( STRING_2 + s ) + STRING_3 ) ) ; METHOD_6 ( ( ( IDENT_14 . get ( 0 ) . length ( ) ) == 1 ) , ( ( STRING_4 + ( IDENT_14 . get ( 0 ) . length ( ) ) ) + STRING_3 ) ) ; org . dcache . IDENT_1 . IDENT_8 . IDENT_15 type = org . dcache . IDENT_1 . IDENT_8 . IDENT_15 . METHOD_7 ( IDENT_14 . get ( 0 ) . charAt ( 0 ) ) ; int IDENT_16 = 0 ; int IDENT_17 = 0 ; org . dcache . IDENT_1 . IDENT_8 . IDENT_9 IDENT_18 ; int id = - 1 ; java . lang . String IDENT_19 ; for ( char c : IDENT_14 . get ( 1 ) . METHOD_8 ( ) ) { IDENT_16 OP_0 org . dcache . IDENT_1 . IDENT_8 . IDENT_20 . METHOD_7 ( c ) . getValue ( ) ; } IDENT_19 = IDENT_14 . get ( 2 ) ; if ( ( IDENT_19 . charAt ( ( ( IDENT_19 . length ( ) ) - 1 ) ) ) == STRING_5 ) { IDENT_18 = org . dcache . IDENT_1 . IDENT_8 . IDENT_9 . METHOD_7 ( IDENT_19 ) ; } else { IDENT_18 = ( ( IDENT_16 & ( IDENT_20 . IDENT_7 . getValue ( ) ) ) == 0 ) ? org . dcache . IDENT_1 . IDENT_8 . IDENT_9 . IDENT_21 : org . dcache . IDENT_1 . IDENT_8 . IDENT_9 . IDENT_10 ; id = java . lang . Integer . METHOD_9 ( IDENT_19 ) ; } for ( char c : IDENT_14 . get ( 3 ) . METHOD_8 ( ) ) { IDENT_17 OP_0 org . dcache . IDENT_1 . IDENT_8 . IDENT_22 . METHOD_7 ( c ) . getValue ( ) ; } return new org . dcache . IDENT_1 . METHOD_2 ( type , IDENT_16 , IDENT_17 , IDENT_18 , id ) ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_11 ) 