METHOD_0 ( ) { org . dcache . util . IDENT_0 IDENT_1 = org . dcache . util . IDENT_0 . METHOD_1 ( STRING_0 ) ; org . dcache . util . IDENT_0 IDENT_2 = org . dcache . util . IDENT_0 . METHOD_1 ( STRING_1 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { METHOD_2 ( IDENT_3 , STRING_2 ) ; int IDENT_4 = IDENT_3 . indexOf ( org . dcache . util . IDENT_0 . IDENT_5 ) ; if ( IDENT_4 < 1 ) { throw new java . lang . IllegalArgumentException ( ( STRING_3 + IDENT_3 ) ) ; } java . lang . String type = IDENT_3 . substring ( 0 , IDENT_4 ) ; java . lang . String IDENT_6 = IDENT_3 . substring ( ( IDENT_4 + 1 ) ) ; return new org . dcache . util . METHOD_3 ( org . dcache . util . IDENT_7 . METHOD_4 ( type ) , IDENT_6 ) ; }
org . junit . Assert . assertThat ( IDENT_1 , org . hamcrest . Matchers . equalTo ( IDENT_2 ) ) 