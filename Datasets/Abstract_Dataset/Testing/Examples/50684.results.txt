METHOD_0 ( ) { "<AssertPlaceHolder>" ; } of ( double , double [ ] ) { double IDENT_0 = java . util . stream . IDENT_1 . of ( IDENT_2 ) . filter ( ( l ) -> l > 0.0 ) . min ( ) . METHOD_1 ( Double . IDENT_3 ) ; return java . lang . Double . METHOD_2 ( IDENT_0 ) ? new org . dcache . pool . IDENT_4 . METHOD_3 ( ( IDENT_0 + error ) ) : org . dcache . pool . IDENT_4 . IDENT_5 . METHOD_4 ( ) ; }
org . junit . Assert . assertThat ( org . dcache . pool . IDENT_4 . METHOD_3 . of ( 0 , 1 ) . and ( org . dcache . pool . IDENT_4 . METHOD_3 . of ( 0 , 1 ) ) . and ( org . dcache . pool . IDENT_4 . METHOD_3 . of ( 0 , 1 ) ) , org . hamcrest . CoreMatchers . is ( org . dcache . pool . IDENT_4 . METHOD_3 . of ( 0 , 1 ) . and ( org . dcache . pool . IDENT_4 . METHOD_3 . of ( 0 , 1 ) . and ( org . dcache . pool . IDENT_4 . METHOD_3 . of ( 0 , 1 ) ) ) ) ) 