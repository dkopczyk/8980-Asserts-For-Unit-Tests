METHOD_0 ( ) { javax . security . auth . IDENT_0 subject = new javax . security . auth . METHOD_1 ( false , java . util . Collections . < java . security . IDENT_1 > METHOD_2 ( ) , java . util . Collections . METHOD_2 ( ) , java . util . Collections . METHOD_2 ( ) ) ; org . dcache . IDENT_2 . IDENT_3 instance = new org . dcache . IDENT_2 . METHOD_3 ( org . dcache . IDENT_2 . IDENT_4 . METHOD_4 ( org . dcache . IDENT_2 . IDENT_4 . IDENT_5 ) , org . dcache . IDENT_2 . IDENT_4 . IDENT_6 ) ; org . dcache . IDENT_2 . IDENT_7 result = instance . METHOD_5 ( subject ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( javax . security . auth . METHOD_1 ) { org . dcache . IDENT_2 . monitor . IDENT_8 record = new org . dcache . IDENT_2 . monitor . METHOD_6 ( ) ; org . dcache . IDENT_2 . monitor . IDENT_9 IDENT_10 = org . dcache . IDENT_2 . monitor . IDENT_11 . of ( record , org . dcache . IDENT_2 . METHOD_3 . IDENT_12 ) ; try { org . dcache . IDENT_2 . IDENT_7 IDENT_13 = METHOD_5 ( subject , IDENT_10 ) ; IDENT_14 . remove ( subject ) ; return IDENT_13 ; } catch ( org . dcache . IDENT_2 . IDENT_15 e ) { if ( ! ( IDENT_14 . METHOD_7 ( subject ) ) ) { IDENT_14 . add ( subject ) ; org . dcache . IDENT_2 . monitor . IDENT_16 result = record . METHOD_8 ( ) ; if ( result . METHOD_9 ( ) ) { org . dcache . IDENT_2 . monitor . IDENT_17 IDENT_18 = new org . dcache . IDENT_2 . monitor . METHOD_10 ( result ) ; org . dcache . IDENT_2 . METHOD_3 . LOGGER . warn ( ( STRING_0 + STRING_1 ) , IDENT_18 . METHOD_11 ( ) ) ; } else { org . dcache . IDENT_2 . METHOD_3 . LOGGER . warn ( STRING_2 , e . getMessage ( ) ) ; } } throw e ; } }
org . junit . Assert . assertNotNull ( result ) 