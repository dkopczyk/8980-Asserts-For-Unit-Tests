METHOD_0 ( ) { java . lang . String IDENT_0 = org . IDENT_1 . module . IDENT_2 . web . ws . IDENT_3 . METHOD_1 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( org . IDENT_1 . module . IDENT_2 . web . ws . IDENT_5 ) { java . lang . String uri = request . METHOD_2 ( ) ; if ( ( uri . startsWith ( ( ( request . METHOD_3 ( ) ) + STRING_0 ) ) ) || ( uri . startsWith ( STRING_0 ) ) ) return "" ; java . lang . String IDENT_6 = uri ; java . lang . String IDENT_7 = request . METHOD_3 ( ) ; if ( uri . startsWith ( IDENT_7 ) ) { int IDENT_8 = IDENT_7 . length ( ) ; IDENT_6 = uri . substring ( IDENT_8 , uri . indexOf ( STRING_0 ) ) ; } try { IDENT_6 = java . net . IDENT_9 . decode ( IDENT_6 , STRING_1 ) ; if ( IDENT_6 . contains ( "/" ) ) { int IDENT_10 = IDENT_6 . METHOD_4 ( "/" ) ; if ( ( IDENT_6 . length ( ) ) > ( IDENT_10 + 1 ) ) { IDENT_6 = IDENT_6 . substring ( ( IDENT_10 + 1 ) ) ; } } } catch ( java . io . IDENT_11 e ) { } return IDENT_6 ; }
org . junit . Assert . assertFalse ( IDENT_0 . startsWith ( "/" ) ) 