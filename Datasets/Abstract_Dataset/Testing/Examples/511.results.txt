METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . ast . IDENT_2 m = METHOD_1 ( parse ( ( STRING_0 + STRING_0 ) , METHOD_2 ( ) ) ) ; org . IDENT_0 . IDENT_1 . ast . IDENT_3 module = m . METHOD_3 ( STRING_1 ) ; int IDENT_4 = 0 ; for ( org . IDENT_0 . IDENT_1 . ast . IDENT_5 IDENT_6 : module . METHOD_4 ( ) ) { if ( IDENT_6 instanceof org . IDENT_0 . IDENT_1 . ast . IDENT_7 ) { org . IDENT_0 . IDENT_1 . ast . IDENT_7 IDENT_8 = ( ( org . IDENT_0 . IDENT_1 . ast . IDENT_7 ) ( IDENT_6 ) ) ; if ( IDENT_8 . getName ( ) . startsWith ( STRING_2 ) ) { ++ IDENT_4 ; } } } "<AssertPlaceHolder>" ; } getName ( ) { int IDENT_9 = ( this . METHOD_5 ( ) . METHOD_6 ( STRING_3 ) ) + 1 ; return METHOD_5 ( ) . substring ( IDENT_9 ) ; }
org . junit . Assert . assertEquals ( 2 , IDENT_4 ) 