METHOD_0 ( ) { final int IDENT_0 = 4 ; final java . util . List < org . IDENT_1 . api . IDENT_2 . IDENT_3 > IDENT_4 = java . util . Arrays . asList ( ( ( org . IDENT_1 . api . IDENT_2 . IDENT_3 ) ( new org . IDENT_1 . api . IDENT_2 . METHOD_1 ( ( IDENT_0 - 1 ) ) ) ) , ( ( org . IDENT_1 . api . IDENT_2 . IDENT_3 ) ( new org . IDENT_1 . api . IDENT_2 . METHOD_2 ( STRING_0 ) ) ) , ( ( org . IDENT_1 . api . IDENT_2 . IDENT_3 ) ( new org . IDENT_1 . api . IDENT_2 . METHOD_2 ( STRING_1 ) ) ) , ( ( org . IDENT_1 . api . IDENT_2 . IDENT_3 ) ( new org . IDENT_1 . api . IDENT_2 . METHOD_2 ( STRING_2 ) ) ) ) ; java . lang . String header = STRING_3 ; java . util . List < java . lang . String > IDENT_5 = new java . util . ArrayList ( ) ; for ( int i = 0 ; i < IDENT_0 ; i ++ ) IDENT_5 . add ( ( ( java . lang . Integer . toString ( i ) ) + header ) ) ; java . io . File IDENT_6 = java . io . File . METHOD_3 ( STRING_4 , STRING_5 ) ; org . apache . commons . io . IDENT_7 . METHOD_4 ( IDENT_6 , IDENT_5 ) ; org . IDENT_1 . api . records . reader . impl . IDENT_8 . IDENT_9 IDENT_10 = new org . IDENT_1 . api . records . reader . impl . IDENT_8 . METHOD_5 ( IDENT_0 , STRING_6 ) ; IDENT_10 . METHOD_6 ( new org . IDENT_1 . api . split . METHOD_7 ( IDENT_6 ) ) ; IDENT_10 . METHOD_8 ( ) ; "<AssertPlaceHolder>" ; IDENT_10 . next ( ) ; } hasNext ( ) { return ( index ) < ( size ) ; }
org . junit . Assert . assertTrue ( ( ! ( IDENT_10 . hasNext ( ) ) ) ) 