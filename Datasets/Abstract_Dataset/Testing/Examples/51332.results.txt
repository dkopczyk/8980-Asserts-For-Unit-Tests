METHOD_0 ( ) { for ( int IDENT_0 = 0 ; IDENT_0 < 3 ; IDENT_0 ++ ) { log . info ( STRING_0 , IDENT_0 ) ; org . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new org . IDENT_1 . IDENT_2 . IDENT_3 . Builder ( ) . METHOD_1 ( IDENT_5 . IDENT_6 ) . METHOD_2 ( new org . IDENT_1 . IDENT_2 . conf . METHOD_2 . METHOD_3 ( new org . IDENT_1 . IDENT_2 . IDENT_7 . parameter . IDENT_8 . METHOD_4 ( FLOAT_0 , FLOAT_1 ) ) ) . METHOD_5 ( new org . IDENT_1 . IDENT_2 . IDENT_7 . parameter . IDENT_8 . METHOD_4 ( FLOAT_0 , FLOAT_2 ) ) . METHOD_6 ( STRING_1 ) . METHOD_7 ( STRING_2 , new org . IDENT_1 . IDENT_2 . IDENT_9 . IDENT_10 . Builder ( ) . METHOD_8 ( INT_0 ) . METHOD_9 ( new org . IDENT_1 . IDENT_2 . IDENT_7 . parameter . IDENT_11 . METHOD_10 ( 10 , 20 ) ) . METHOD_11 ( new org . IDENT_1 . IDENT_2 . IDENT_7 . parameter . IDENT_12 . METHOD_12 ( org . nd4j . linalg . IDENT_13 . IDENT_14 . IDENT_15 , org . nd4j . linalg . IDENT_13 . IDENT_14 . IDENT_16 ) ) . build ( ) , STRING_1 ) . METHOD_7 ( "1" , new org . IDENT_1 . IDENT_2 . IDENT_9 . IDENT_17 . Builder ( ) . METHOD_9 ( 10 ) . METHOD_11 ( IDENT_14 . IDENT_18 ) . METHOD_13 ( IDENT_19 . IDENT_20 . IDENT_21 ) . build ( ) , STRING_2 ) . METHOD_14 ( "1" ) . METHOD_15 ( org . IDENT_1 . IDENT_22 . conf . IDENT_23 . IDENT_24 . METHOD_16 ( INT_0 ) ) . METHOD_17 ( 3 ) . build ( ) ; org . IDENT_1 . IDENT_2 . IDENT_7 . api . data . IDENT_25 IDENT_26 = null ; java . lang . Class < ? extends org . IDENT_1 . IDENT_2 . IDENT_7 . api . data . IDENT_27 > IDENT_28 = null ; java . util . Properties IDENT_29 = null ; org . IDENT_1 . IDENT_2 . IDENT_7 . api . IDENT_30 IDENT_31 ; if ( IDENT_0 == 0 ) { IDENT_28 = IDENT_32 . IDENT_33 . class ; IDENT_29 = new java . util . Properties ( ) ; IDENT_29 . setProperty ( STRING_3 , STRING_4 ) ; IDENT_31 = new org . IDENT_1 . IDENT_2 . IDENT_7 . generator . METHOD_18 ( IDENT_4 ) ; } else if ( IDENT_0 == 1 ) { IDENT_26 = new org . IDENT_1 . IDENT_2 . IDENT_34 . IDENT_32 . METHOD_19 ( ) ; IDENT_31 = new org . IDENT_1 . IDENT_2 . IDENT_7 . generator . METHOD_18 ( IDENT_4 ) ; } else { java . util . Map < java . lang . String , java . lang . Object > commands = new java . util . HashMap ( ) ; commands . put ( IDENT_35 . IDENT_36 , org . IDENT_1 . IDENT_2 . util . IDENT_37 . class . METHOD_20 ( ) ) ; IDENT_31 = new org . IDENT_1 . IDENT_2 . IDENT_7 . generator . METHOD_18 ( IDENT_4 , commands ) ; IDENT_26 = new org . IDENT_1 . IDENT_2 . IDENT_7 . api . data . METHOD_21 ( ) ; } java . io . File f = IDENT_38 . METHOD_22 ( ) ; java . io . File IDENT_39 = new java . io . File ( f , STRING_5 ) ; org . IDENT_1 . IDENT_2 . IDENT_7 . config . IDENT_40 configuration = new org . IDENT_1 . IDENT_2 . IDENT_7 . config . IDENT_40 . Builder ( ) . METHOD_23 ( METHOD_23 ) . METHOD_24 ( IDENT_26 ) . METHOD_25 ( IDENT_28 , IDENT_29 ) . METHOD_26 ( new org . IDENT_1 . IDENT_2 . IDENT_41 . IDENT_42 . METHOD_27 ( IDENT_39 ) ) . METHOD_28 ( new org . IDENT_1 . IDENT_2 . IDENT_43 . impl . METHOD_29 ( ) ) . METHOD_30 ( new org . IDENT_1 . IDENT_2 . IDENT_7 . api . IDENT_44 . METHOD_31 ( 2 , java . util . concurrent . TimeUnit . IDENT_45 ) , new org . IDENT_1 . IDENT_2 . IDENT_7 . api . IDENT_44 . METHOD_32 ( 5 ) ) . build ( ) ; org . IDENT_1 . IDENT_2 . IDENT_7 . runner . IDENT_46 runner = new org . IDENT_1 . IDENT_2 . IDENT_7 . runner . METHOD_33 ( configuration , new org . IDENT_1 . IDENT_2 . task . METHOD_34 ( new org . IDENT_1 . IDENT_2 . IDENT_47 . IDENT_48 . METHOD_35 ( ) ) ) ; runner . execute ( ) ; java . util . List < org . IDENT_1 . IDENT_2 . IDENT_7 . api . IDENT_49 . IDENT_50 > results = runner . METHOD_36 ( ) ; "<AssertPlaceHolder>" ; System . out . println ( ( ( STRING_6 + ( results . size ( ) ) ) + STRING_7 ) ) ; } } size ( ) { return IDENT_51 . size ( ) ; }
org . junit . Assert . assertEquals ( 5 , results . size ( ) ) 