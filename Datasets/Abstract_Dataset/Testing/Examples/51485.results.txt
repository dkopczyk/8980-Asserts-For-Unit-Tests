METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . graph . IDENT_2 conf = new org . IDENT_0 . IDENT_1 . graph . IDENT_3 . Builder ( ) . METHOD_1 ( ) . METHOD_2 ( STRING_0 ) . METHOD_3 ( STRING_1 , new org . IDENT_0 . IDENT_1 . graph . IDENT_4 . Builder ( ) . METHOD_4 ( 2 , 2 ) . METHOD_5 ( 2 , 2 ) . build ( ) , STRING_0 ) . METHOD_3 ( "1" , new org . IDENT_0 . IDENT_1 . graph . IDENT_5 . Builder ( ) . METHOD_6 ( IDENT_6 . IDENT_7 ) . METHOD_7 ( IDENT_8 . IDENT_9 . IDENT_10 ) . build ( ) , STRING_1 ) . METHOD_8 ( "1" ) . METHOD_9 ( org . IDENT_0 . IDENT_1 . conf . IDENT_11 . IDENT_12 . METHOD_10 ( INT_0 , INT_0 , 1 ) ) . build ( ) ; org . IDENT_0 . IDENT_1 . graph . IDENT_13 net = new org . IDENT_0 . IDENT_1 . graph . METHOD_11 ( conf ) ; net . init ( ) ; org . nd4j . linalg . dataset . IDENT_14 IDENT_15 = new org . IDENT_0 . IDENT_16 . iterator . impl . METHOD_12 ( 16 , true , INT_1 ) . next ( ) ; org . nd4j . linalg . api . ndarray . INDArray out = net . METHOD_13 ( IDENT_15 . METHOD_14 ( ) ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_17 = org . nd4j . linalg . factory . Nd4j . create ( out . METHOD_15 ( ) ) ; IDENT_15 . METHOD_16 ( IDENT_17 ) ; net . METHOD_17 ( IDENT_15 ) ; org . IDENT_0 . IDENT_1 . graph . METHOD_11 IDENT_18 = org . IDENT_0 . TestUtils . METHOD_18 ( net ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_19 = IDENT_18 . METHOD_13 ( IDENT_15 . METHOD_14 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_14 ( ) { return IDENT_20 ; }
org . junit . Assert . assertEquals ( out , IDENT_19 ) 