METHOD_0 ( ) { org . nd4j . linalg . dataset . IDENT_0 IDENT_1 = new org . IDENT_2 . IDENT_3 . iterator . impl . METHOD_1 ( INT_0 , INT_0 ) . next ( ) ; org . nd4j . linalg . dataset . api . iterator . IDENT_4 IDENT_5 = new org . IDENT_2 . IDENT_3 . iterator . impl . METHOD_1 ( 5 , INT_0 ) ; org . IDENT_2 . IDENT_6 . graph . IDENT_7 conf = new org . IDENT_2 . IDENT_6 . graph . IDENT_8 . Builder ( ) . METHOD_2 ( INT_1 ) . METHOD_3 ( ) . METHOD_4 ( STRING_0 ) . METHOD_5 ( STRING_1 , new org . IDENT_2 . IDENT_6 . graph . IDENT_9 . Builder ( ) . METHOD_6 ( 4 ) . METHOD_7 ( 3 ) . METHOD_8 ( IDENT_10 . IDENT_11 ) . build ( ) , STRING_0 ) . METHOD_9 ( STRING_1 ) . build ( ) ; org . IDENT_2 . IDENT_6 . graph . IDENT_12 IDENT_13 = new org . IDENT_2 . IDENT_6 . graph . METHOD_10 ( conf ) ; IDENT_13 . init ( ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_14 = IDENT_13 . METHOD_11 ( IDENT_1 . METHOD_12 ( ) ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_15 = IDENT_13 . METHOD_11 ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_11 ( org . nd4j . linalg . dataset . api . iterator . IDENT_16 ) { org . nd4j . base . IDENT_17 . METHOD_13 ( ( ( IDENT_18 ) == 1 ) , ( STRING_2 + STRING_3 ) , IDENT_18 ) ; return output ( iterator ) [ 0 ] ; }
org . junit . Assert . assertEquals ( IDENT_14 , IDENT_15 ) 