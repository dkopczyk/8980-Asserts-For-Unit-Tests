METHOD_0 ( ) { org . nd4j . linalg . factory . Nd4j . METHOD_1 ( ) . METHOD_2 ( INT_0 ) ; org . IDENT_0 . IDENT_1 . conf . IDENT_2 conf = new org . IDENT_0 . IDENT_1 . conf . IDENT_3 . Builder ( ) . METHOD_3 ( IDENT_4 . IDENT_5 ) . METHOD_4 ( IDENT_6 . IDENT_7 ) . METHOD_5 ( INT_0 ) . list ( ) . METHOD_6 ( 0 , new org . IDENT_0 . IDENT_1 . conf . IDENT_8 . IDENT_9 . Builder ( ) . METHOD_7 ( 3 ) . METHOD_8 ( 3 ) . METHOD_9 ( FLOAT_0 ) . METHOD_10 ( FLOAT_1 ) . METHOD_11 ( false ) . build ( ) ) . METHOD_6 ( 1 , new org . IDENT_0 . IDENT_1 . IDENT_8 . IDENT_10 . IDENT_11 . Builder ( IDENT_12 . IDENT_13 . IDENT_14 ) . METHOD_12 ( IDENT_15 . IDENT_16 ) . METHOD_13 ( IDENT_17 . IDENT_18 ) . METHOD_8 ( 10 ) . build ( ) ) . METHOD_14 ( org . IDENT_0 . IDENT_1 . conf . IDENT_19 . IDENT_20 . METHOD_15 ( 5 , 5 , 3 ) ) . build ( ) ; org . IDENT_0 . IDENT_1 . IDENT_21 . IDENT_22 net = new org . IDENT_0 . IDENT_1 . IDENT_21 . METHOD_16 ( conf ) ; net . init ( ) ; org . nd4j . linalg . factory . Nd4j . METHOD_1 ( ) . METHOD_2 ( INT_0 ) ; org . IDENT_0 . IDENT_1 . conf . IDENT_2 IDENT_23 = new org . IDENT_0 . IDENT_1 . conf . IDENT_3 . Builder ( ) . METHOD_3 ( IDENT_4 . IDENT_5 ) . METHOD_4 ( IDENT_6 . IDENT_7 ) . METHOD_5 ( INT_0 ) . list ( ) . METHOD_6 ( 0 , new org . IDENT_0 . IDENT_1 . conf . IDENT_8 . IDENT_9 . Builder ( ) . METHOD_7 ( 3 ) . METHOD_8 ( 3 ) . METHOD_9 ( FLOAT_0 ) . METHOD_10 ( FLOAT_1 ) . METHOD_11 ( true ) . build ( ) ) . METHOD_6 ( 1 , new org . IDENT_0 . IDENT_1 . IDENT_8 . IDENT_10 . IDENT_11 . Builder ( IDENT_12 . IDENT_13 . IDENT_14 ) . METHOD_12 ( IDENT_15 . IDENT_16 ) . METHOD_13 ( IDENT_17 . IDENT_18 ) . METHOD_8 ( 10 ) . build ( ) ) . METHOD_14 ( org . IDENT_0 . IDENT_1 . conf . IDENT_19 . IDENT_20 . METHOD_15 ( 5 , 5 , 3 ) ) . build ( ) ; org . IDENT_0 . IDENT_1 . IDENT_21 . METHOD_16 IDENT_24 = new org . IDENT_0 . IDENT_1 . IDENT_21 . METHOD_16 ( IDENT_23 ) ; IDENT_24 . init ( ) ; int IDENT_25 = INT_1 ; for ( int i = 0 ; i < 10 ; i ++ ) { org . nd4j . linalg . dataset . IDENT_26 IDENT_27 = new org . nd4j . linalg . dataset . METHOD_17 ( org . nd4j . linalg . factory . Nd4j . METHOD_18 ( new int [ ] { IDENT_25 , 3 , 5 , 5 } ) , org . nd4j . linalg . factory . Nd4j . METHOD_18 ( IDENT_25 , 10 ) ) ; net . METHOD_19 ( IDENT_27 ) ; IDENT_24 . METHOD_19 ( IDENT_27 ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_28 = net . METHOD_20 ( ( STRING_0 + ( org . IDENT_0 . IDENT_1 . params . IDENT_29 . IDENT_30 ) ) ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_31 = IDENT_24 . METHOD_20 ( ( STRING_0 + ( org . IDENT_0 . IDENT_1 . params . IDENT_29 . IDENT_32 ) ) ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_33 = org . nd4j . linalg . factory . Nd4j . METHOD_21 ( IDENT_31 . METHOD_22 ( ) , FLOAT_2 ) ; org . nd4j . linalg . IDENT_34 . IDENT_35 . IDENT_36 . METHOD_23 ( IDENT_33 , IDENT_31 , false ) ; IDENT_33 . METHOD_24 ( IDENT_33 ) ; "<AssertPlaceHolder>" ; } } METHOD_24 ( org . nd4j . IDENT_37 . IDENT_38 . IDENT_39 ) { return METHOD_24 ( IDENT_40 . METHOD_25 ( IDENT_41 . IDENT_42 , 0 ) , IDENT_43 ) ; }
org . junit . Assert . assertEquals ( IDENT_28 , IDENT_33 ) 