METHOD_0 ( ) { for ( boolean IDENT_0 : new boolean [ ] { false , true } ) { org . nd4j . linalg . api . ndarray . INDArray IDENT_1 = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 1 , 12 , 12 ) . METHOD_2 ( 3 , 4 ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_2 ; if ( IDENT_0 ) { IDENT_2 = org . nd4j . linalg . factory . Nd4j . METHOD_3 ( new long [ ] { 1 , 1 } , FLOAT_0 ) ; } else { IDENT_2 = org . nd4j . linalg . factory . Nd4j . METHOD_4 ( FLOAT_0 ) ; } org . nd4j . linalg . api . ndarray . INDArray IDENT_3 = org . nd4j . linalg . factory . Nd4j . METHOD_3 ( IDENT_1 . METHOD_5 ( ) , FLOAT_0 ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_4 = org . nd4j . linalg . factory . Nd4j . METHOD_6 ( 3 , 4 ) ; java . lang . String err = org . nd4j . IDENT_5 . validation . IDENT_6 . validate ( new org . nd4j . IDENT_5 . validation . METHOD_7 ( new org . nd4j . IDENT_5 . IDENT_7 . METHOD_8 ( IDENT_1 , IDENT_2 , IDENT_4 , IDENT_0 ) ) . METHOD_9 ( 0 , IDENT_3 ) ) ; "<AssertPlaceHolder>" ; } } METHOD_9 ( int , org . nd4j . linalg . api . ndarray . INDArray ) { IDENT_8 . put ( IDENT_9 , new org . nd4j . IDENT_5 . validation . IDENT_10 . METHOD_10 ( expected ) ) ; IDENT_11 . put ( IDENT_9 , expected . METHOD_11 ( ) ) ; return this ; }
org . junit . Assert . assertNull ( err ) 