METHOD_0 ( ) { final org . nd4j . linalg . api . ndarray . INDArray random = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( new int [ ] { 10 , 4 } ) ; final int [ ] IDENT_0 = new int [ ] { 1 } ; final org . nd4j . linalg . api . ndarray . INDArray IDENT_1 = random . METHOD_2 ( IDENT_0 ) ; final org . nd4j . linalg . api . ndarray . INDArray IDENT_2 = random . METHOD_3 ( false , IDENT_0 ) ; final org . nd4j . linalg . api . ndarray . INDArray res = random . METHOD_4 ( IDENT_1 ) . METHOD_5 ( METHOD_3 ) ; final org . nd4j . linalg . api . ndarray . INDArray IDENT_3 = res . METHOD_6 ( ) ; org . nd4j . IDENT_4 . IDENT_5 . IDENT_6 IDENT_7 = org . nd4j . IDENT_4 . IDENT_5 . IDENT_6 . create ( ) ; org . nd4j . IDENT_4 . IDENT_5 . IDENT_8 IDENT_9 = IDENT_7 . METHOD_7 ( "a" , random ) ; org . nd4j . IDENT_4 . IDENT_5 . IDENT_8 t = IDENT_7 . math . METHOD_8 ( IDENT_9 , IDENT_0 ) ; t . METHOD_6 ( STRING_0 ) ; java . lang . String err = org . nd4j . IDENT_4 . validation . IDENT_10 . validate ( new org . nd4j . IDENT_4 . validation . METHOD_9 ( IDENT_7 ) . METHOD_10 ( STRING_0 , IDENT_3 ) . METHOD_11 ( true ) ) ; "<AssertPlaceHolder>" ; } METHOD_11 ( boolean ) { this . METHOD_12 ( IDENT_11 ) ; return this ; }
org . junit . Assert . assertNull ( err , err ) 