METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray base = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { FLOAT_0 , FLOAT_1 } ) ; base . METHOD_1 ( FLOAT_2 ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_0 = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { FLOAT_3 , FLOAT_4 } ) ; "<AssertPlaceHolder>" ; } create ( int [ ] , float [ ] [ ] ) { int IDENT_1 = IDENT_2 . length ; org . nd4j . linalg . factory . INDArray ret = org . nd4j . linalg . factory . Nd4j . create ( org . nd4j . linalg . util . IDENT_3 . METHOD_2 ( new int [ ] { IDENT_1 } , IDENT_4 ) ) ; for ( int i = 0 ; i < ( ret . METHOD_3 ( ) ) ; i ++ ) ret . METHOD_4 ( i , org . nd4j . linalg . factory . Nd4j . create ( IDENT_2 [ i ] ) . METHOD_5 ( org . nd4j . linalg . util . IDENT_3 . METHOD_6 ( IDENT_4 ) ) ) ; return ret ; }
org . junit . Assert . assertEquals ( IDENT_0 , base ) 