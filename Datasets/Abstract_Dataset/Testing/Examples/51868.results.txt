METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray row = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] [ ] { new double [ ] { 1 , 2 } , new double [ ] { 3 , 4 } } ) ; org . nd4j . linalg . ByteArrayOutputStream IDENT_0 = new org . nd4j . linalg . ByteArrayOutputStream ( ) ; org . nd4j . linalg . factory . Nd4j . write ( row , new org . nd4j . linalg . METHOD_1 ( IDENT_0 ) ) ; org . nd4j . linalg . ByteArrayInputStream IDENT_1 = new org . nd4j . linalg . ByteArrayInputStream ( IDENT_0 . toByteArray ( ) ) ; org . nd4j . linalg . api . ndarray . INDArray ret = org . nd4j . linalg . factory . Nd4j . read ( IDENT_1 ) ; "<AssertPlaceHolder>" ; } read ( org . nd4j . linalg . factory . InputStream ) { return org . nd4j . linalg . factory . Nd4j . read ( new org . nd4j . linalg . factory . METHOD_2 ( reader ) ) ; }
org . junit . Assert . assertEquals ( row , ret ) 