METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray n = org . nd4j . linalg . factory . Nd4j . create ( new float [ ] { 1 , 2 , 3 , 4 } ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_0 = org . nd4j . linalg . factory . Nd4j . create ( new float [ ] { FLOAT_0 , FLOAT_1 , FLOAT_2 , FLOAT_3 } ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_1 = org . nd4j . linalg . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( n , false ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( org . nd4j . linalg . api . ndarray . INDArray , boolean ) { return org . nd4j . linalg . IDENT_2 . IDENT_3 . IDENT_4 . exec ( ( IDENT_5 ? new org . nd4j . linalg . IDENT_2 . IDENT_3 . METHOD_2 ( IDENT_6 , IDENT_6 . METHOD_3 ( ) ) : new org . nd4j . linalg . IDENT_2 . IDENT_3 . METHOD_2 ( IDENT_6 ) ) ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , METHOD_1 ) 