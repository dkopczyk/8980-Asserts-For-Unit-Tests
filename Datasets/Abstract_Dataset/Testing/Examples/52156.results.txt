METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray data = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 1 , INT_0 , INT_0 , IDENT_0 . IDENT_1 ) . METHOD_2 ( 2 , 3 , 5 ) ; System . out . println ( data ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_2 = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] [ ] { new double [ ] { 1.0 , 1.0 , 1.0 , 1.0 , 1.0 } , new double [ ] { 1.0 , 1.0 , 1.0 , 0.0 , 0.0 } } ) ; org . nd4j . linalg . factory . Nd4j . METHOD_3 ( ) . exec ( new org . nd4j . linalg . api . IDENT_3 . impl . IDENT_4 . METHOD_4 ( data , IDENT_2 , data , 0 , 2 ) ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_5 = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { 1.0 , 2.0 , FLOAT_0 , FLOAT_1 , FLOAT_2 , FLOAT_3 , FLOAT_4 , FLOAT_5 , FLOAT_6 , FLOAT_7 , FLOAT_8 , FLOAT_9 , FLOAT_10 , FLOAT_11 , FLOAT_12 , FLOAT_13 , FLOAT_14 , FLOAT_15 , 0.0 , 0.0 , FLOAT_16 , FLOAT_17 , FLOAT_18 , 0.0 , 0.0 , FLOAT_19 , FLOAT_20 , FLOAT_21 , 0.0 , 0.0 } ) . METHOD_2 ( 2 , 3 , 5 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( char , boolean , long [ ] ) { return null ; }
org . junit . Assert . assertEquals ( IDENT_5 , data ) 