METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray log = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 1 , 6 , 6 , IDENT_0 . IDENT_1 ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_2 = org . nd4j . linalg . IDENT_3 . IDENT_4 . IDENT_5 . log ( log ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_6 = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { 0.0 , FLOAT_0 , FLOAT_1 , FLOAT_2 , FLOAT_3 , FLOAT_4 } ) ; "<AssertPlaceHolder>" ; } create ( org . nd4j . linalg . api . buffer . IDENT_7 , long [ ] , long [ ] , long , long , char ) { org . nd4j . linalg . factory . Nd4j . METHOD_2 ( IDENT_8 ) ; org . nd4j . linalg . factory . INDArray ret = org . nd4j . linalg . factory . Nd4j . INSTANCE . create ( data , IDENT_8 , IDENT_9 , offset , IDENT_10 , IDENT_11 ) ; org . nd4j . linalg . factory . Nd4j . METHOD_3 ( ret ) ; return ret ; }
org . junit . Assert . assertEquals ( IDENT_6 , IDENT_2 ) 