METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray IDENT_0 = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 1 , INT_0 , INT_0 , IDENT_1 . IDENT_2 ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_3 = IDENT_0 . METHOD_2 ( ) . METHOD_3 ( 3 , 6 ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_4 = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { 6 , 12 , INT_0 } ) . METHOD_3 ( 3 , 1 ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_5 = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { - FLOAT_0 , - FLOAT_1 , - FLOAT_2 , - 2.0 , - 1.0 , 0.0 , - FLOAT_0 , - FLOAT_1 , - FLOAT_2 , - 2.0 , - 1.0 , 0.0 , - FLOAT_0 , - FLOAT_1 , - FLOAT_2 , - 2.0 , - 1.0 , 0.0 } , new int [ ] { 3 , 6 } ) ; org . nd4j . linalg . api . ndarray . INDArray test = IDENT_3 . METHOD_4 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . nd4j . linalg . api . ndarray . INDArray ) { METHOD_5 ( STRING_0 , false ) ; return METHOD_2 ( ) . METHOD_6 ( IDENT_6 ) ; }
org . junit . Assert . assertEquals ( IDENT_5 , test ) 