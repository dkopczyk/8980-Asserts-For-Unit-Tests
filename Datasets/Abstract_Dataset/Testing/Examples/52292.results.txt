METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray IDENT_0 = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 1 , INT_0 , INT_1 ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_1 = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 1 , INT_0 , INT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( long , long , long ) { if ( ( IDENT_2 == IDENT_3 ) && ( IDENT_4 == 1 ) ) { return org . nd4j . linalg . factory . Nd4j . METHOD_2 ( IDENT_2 ) ; } double IDENT_5 = ( ( double ) ( IDENT_4 ) ) / ( ( ( double ) ( IDENT_3 - IDENT_2 ) ) + 1 ) ; if ( ( IDENT_5 OP_0 1 ) <= ( org . nd4j . linalg . factory . Nd4j . IDENT_6 ) ) { return org . nd4j . linalg . factory . Nd4j . INSTANCE . METHOD_1 ( ( ( int ) ( IDENT_2 ) ) , ( ( int ) ( IDENT_3 ) ) , ( ( int ) ( IDENT_4 ) ) ) ; } else { return org . nd4j . linalg . factory . Nd4j . METHOD_1 ( ( ( double ) ( IDENT_2 ) ) , ( ( double ) ( IDENT_3 ) ) , ( ( int ) ( IDENT_4 ) ) ) ; } }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_1 ) 