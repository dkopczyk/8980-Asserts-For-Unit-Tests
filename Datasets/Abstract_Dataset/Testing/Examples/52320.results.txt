METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray write = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 1 , 4 , 4 ) ; org . nd4j . linalg . IDENT_0 . buffer . ByteArrayOutputStream IDENT_1 = new org . nd4j . linalg . IDENT_0 . buffer . ByteArrayOutputStream ( ) ; org . nd4j . linalg . IDENT_0 . buffer . IDENT_2 IDENT_3 = new org . nd4j . linalg . IDENT_0 . buffer . METHOD_2 ( IDENT_1 ) ; org . nd4j . linalg . factory . Nd4j . write ( write , IDENT_3 ) ; org . nd4j . linalg . IDENT_0 . buffer . ByteArrayInputStream IDENT_4 = new org . nd4j . linalg . IDENT_0 . buffer . ByteArrayInputStream ( IDENT_1 . toByteArray ( ) ) ; org . nd4j . linalg . IDENT_0 . buffer . IDENT_5 IDENT_6 = new org . nd4j . linalg . IDENT_0 . buffer . METHOD_3 ( IDENT_4 ) ; org . nd4j . linalg . api . ndarray . INDArray read = org . nd4j . linalg . factory . Nd4j . read ( IDENT_6 ) ; "<AssertPlaceHolder>" ; } read ( org . nd4j . linalg . factory . InputStream ) { return org . nd4j . linalg . factory . Nd4j . read ( new org . nd4j . linalg . factory . METHOD_3 ( reader ) ) ; }
org . junit . Assert . assertEquals ( write , read ) 