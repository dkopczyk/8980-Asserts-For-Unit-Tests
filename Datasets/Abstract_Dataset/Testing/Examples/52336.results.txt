METHOD_0 ( ) { org . nd4j . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = org . nd4j . IDENT_0 . IDENT_1 . IDENT_2 . create ( ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_4 = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 4 ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_5 = METHOD_1 . add ( METHOD_1 ) ; org . nd4j . IDENT_0 . IDENT_1 . IDENT_6 IDENT_7 = IDENT_3 . METHOD_2 ( STRING_0 , METHOD_1 ) ; org . nd4j . IDENT_0 . IDENT_1 . IDENT_6 IDENT_8 = IDENT_7 . add ( STRING_1 , IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { org . nd4j . IDENT_0 . IDENT_1 . IDENT_2 exec = IDENT_3 . METHOD_4 ( ) ; exec . METHOD_5 ( STRING_2 , new org . nd4j . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_6 ( ) { @ org . nd4j . IDENT_0 . IDENT_1 . Override public org . nd4j . IDENT_0 . IDENT_1 . IDENT_6 [ ] METHOD_7 ( org . nd4j . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 , java . util . Map < java . lang . String , org . nd4j . linalg . api . ndarray . INDArray > IDENT_9 , org . nd4j . IDENT_0 . IDENT_1 . IDENT_6 [ ] IDENT_10 ) { return new org . nd4j . IDENT_0 . IDENT_1 . IDENT_6 [ ] { org . nd4j . IDENT_0 . IDENT_1 . IDENT_6 . this } ; } } ) ; org . nd4j . IDENT_0 . IDENT_1 . IDENT_6 output = exec . METHOD_8 ( STRING_2 , exec ) ; return output . METHOD_9 ( ) . METHOD_10 ( ) ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_8 . METHOD_3 ( ) ) 