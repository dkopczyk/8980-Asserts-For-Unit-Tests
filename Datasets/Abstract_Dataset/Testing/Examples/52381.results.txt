METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray IDENT_0 = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 1 , 4 , 4 ) . METHOD_2 ( 2 , 2 ) ; org . nd4j . linalg . api . ndarray . INDArray expected = org . nd4j . linalg . factory . Nd4j . METHOD_3 ( IDENT_0 ) . METHOD_4 ( IDENT_0 ) ; org . nd4j . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = org . nd4j . IDENT_1 . IDENT_2 . IDENT_3 . create ( ) ; org . nd4j . IDENT_1 . IDENT_2 . IDENT_5 in = IDENT_4 . METHOD_5 ( STRING_0 , IDENT_0 ) ; org . nd4j . IDENT_1 . IDENT_2 . IDENT_5 IDENT_6 = IDENT_4 . METHOD_6 ( in ) ; org . nd4j . linalg . api . ndarray . INDArray res = METHOD_6 . METHOD_7 ( ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( ) { org . nd4j . IDENT_1 . IDENT_2 . IDENT_3 exec = IDENT_7 . METHOD_8 ( ) ; exec . METHOD_9 ( STRING_1 , new org . nd4j . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_10 ( ) { @ org . nd4j . IDENT_1 . IDENT_2 . Override public org . nd4j . IDENT_1 . IDENT_2 . IDENT_5 [ ] METHOD_11 ( org . nd4j . IDENT_1 . IDENT_2 . IDENT_3 IDENT_7 , java . util . Map < java . lang . String , org . nd4j . linalg . api . ndarray . INDArray > IDENT_8 , org . nd4j . IDENT_1 . IDENT_2 . IDENT_5 [ ] IDENT_9 ) { return new org . nd4j . IDENT_1 . IDENT_2 . IDENT_5 [ ] { org . nd4j . IDENT_1 . IDENT_2 . IDENT_5 . this } ; } } ) ; org . nd4j . IDENT_1 . IDENT_2 . IDENT_5 output = exec . METHOD_12 ( STRING_1 , exec ) ; return output . METHOD_13 ( ) . METHOD_14 ( ) ; }
org . junit . Assert . assertEquals ( expected , res ) 