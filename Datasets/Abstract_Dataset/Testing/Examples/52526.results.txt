METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray in = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 1 , 3 , 20 ) ; org . nd4j . linalg . api . ndarray . INDArray out = org . nd4j . linalg . factory . Nd4j . METHOD_2 ( ) . METHOD_3 ( new org . nd4j . linalg . METHOD_4 ( in . METHOD_5 ( ) ) ) ; org . nd4j . linalg . api . ndarray . INDArray exp = org . nd4j . linalg . factory . Nd4j . create ( in . METHOD_6 ( ) ) ; for ( int i = 0 ; i < ( in . length ( ) ) ; i ++ ) { double x = in . METHOD_7 ( i ) ; double y = java . lang . Math . log ( ( x + ( ( java . lang . Math . METHOD_8 ( ( x - 1 ) ) ) * ( java . lang . Math . METHOD_8 ( ( x + 1 ) ) ) ) ) ) ; exp . METHOD_9 ( i , y ) ; } "<AssertPlaceHolder>" ; } METHOD_9 ( long [ ] , int ) { return METHOD_9 ( IDENT_0 , ( ( double ) ( value ) ) ) ; }
org . junit . Assert . assertEquals ( exp , out ) 