METHOD_0 ( ) { IDENT_0 . val IDENT_1 = org . nd4j . linalg . factory . Nd4j . create ( 10 , 10 ) ; IDENT_1 . METHOD_1 ( FLOAT_0 ) ; IDENT_0 . val exp = org . nd4j . linalg . factory . Nd4j . create ( 10 , 10 ) . METHOD_1 ( FLOAT_0 ) ; org . nd4j . linalg . api . IDENT_2 . IDENT_3 op = org . nd4j . linalg . api . IDENT_2 . IDENT_4 . builder ( STRING_0 ) . METHOD_2 ( IDENT_1 ) . METHOD_3 ( IDENT_1 ) . build ( ) ; org . nd4j . linalg . factory . Nd4j . METHOD_4 ( ) . exec ( op ) ; "<AssertPlaceHolder>" ; } exec ( org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_7 ) { METHOD_5 ( op ) ; if ( op instanceof org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_8 ) { org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_8 s = ( ( org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_8 ) ( op ) ) ; exec ( s ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_9 ) { op . exec ( ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_10 ) { org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_10 t = ( ( org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_10 ) ( op ) ) ; exec ( t ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_11 ) { org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_11 ac = ( ( org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_11 ) ( op ) ) ; exec ( ac ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_12 ) { org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_12 IDENT_13 = ( ( org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_12 ) ( op ) ) ; exec ( IDENT_13 ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_14 ) { org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_14 IDENT_15 = ( ( org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_14 ) ( op ) ) ; exec ( IDENT_15 , IDENT_15 . METHOD_6 ( ) ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_16 ) { org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_16 IDENT_17 = ( ( org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_16 ) ( op ) ) ; exec ( IDENT_17 ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_18 ) { org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_18 IDENT_19 = ( ( org . nd4j . linalg . IDENT_5 . IDENT_6 . IDENT_2 . IDENT_18 ) ( op ) ) ; exec ( IDENT_19 , org . nd4j . linalg . factory . Nd4j . METHOD_7 ( ) ) ; } return op ; }
org . junit . Assert . assertEquals ( exp , IDENT_1 ) 