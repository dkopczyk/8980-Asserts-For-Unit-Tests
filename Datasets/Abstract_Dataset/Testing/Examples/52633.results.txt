METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray ret = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( new int [ ] { 4 , 2 } , ( - FLOAT_0 ) , FLOAT_0 , org . nd4j . linalg . factory . Nd4j . METHOD_2 ( ) . METHOD_3 ( INT_0 ) ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_0 = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( new int [ ] { 4 , 2 } , ( - FLOAT_0 ) , FLOAT_0 , org . nd4j . linalg . factory . Nd4j . METHOD_2 ( ) . METHOD_3 ( INT_0 ) ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( long ) { try { org . nd4j . linalg . api . IDENT_1 . IDENT_2 t = ( ( org . nd4j . linalg . api . IDENT_1 . IDENT_2 ) ( IDENT_3 . newInstance ( ) ) ) ; if ( ( t . METHOD_4 ( ) ) != null ) { } t . METHOD_5 ( IDENT_4 ) ; return t ; } catch ( java . lang . Exception e ) { throw new java . lang . RuntimeException ( e ) ; } }
org . junit . Assert . assertEquals ( ret , IDENT_0 ) 