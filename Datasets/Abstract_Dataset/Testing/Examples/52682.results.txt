METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray IDENT_0 = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { 1.0 , 2.0 , FLOAT_0 } ) ; org . nd4j . linalg . IDENT_1 . IDENT_2 [ ] IDENT_3 = new org . nd4j . linalg . IDENT_1 . IDENT_2 [ ] { new org . nd4j . linalg . IDENT_1 . METHOD_1 ( ) , new org . nd4j . linalg . IDENT_1 . METHOD_1 ( IDENT_0 ) , new org . nd4j . linalg . IDENT_1 . METHOD_2 ( ) , new org . nd4j . linalg . IDENT_1 . METHOD_3 ( ) , new org . nd4j . linalg . IDENT_1 . METHOD_4 ( ) , new org . nd4j . linalg . IDENT_1 . METHOD_5 ( ) , new org . nd4j . linalg . IDENT_1 . METHOD_5 ( IDENT_0 ) , new org . nd4j . linalg . IDENT_1 . METHOD_6 ( ) , new org . nd4j . linalg . IDENT_1 . METHOD_6 ( IDENT_0 ) , new org . nd4j . linalg . IDENT_1 . METHOD_7 ( ) , new org . nd4j . linalg . IDENT_1 . METHOD_7 ( IDENT_0 ) , new org . nd4j . linalg . IDENT_1 . METHOD_8 ( ) , new org . nd4j . linalg . IDENT_1 . METHOD_8 ( IDENT_0 ) , new org . nd4j . linalg . IDENT_1 . METHOD_9 ( ) , new org . nd4j . linalg . IDENT_1 . METHOD_9 ( IDENT_0 ) , new org . nd4j . linalg . IDENT_1 . METHOD_10 ( ) , new org . nd4j . linalg . IDENT_1 . METHOD_10 ( IDENT_0 ) , new org . nd4j . linalg . IDENT_1 . METHOD_11 ( ) , new org . nd4j . linalg . IDENT_1 . METHOD_11 ( IDENT_0 ) , new org . nd4j . linalg . IDENT_1 . METHOD_12 ( ) , new org . nd4j . linalg . IDENT_1 . METHOD_12 ( IDENT_0 ) , new org . nd4j . linalg . IDENT_1 . METHOD_13 ( ) , new org . nd4j . linalg . IDENT_1 . METHOD_14 ( ) , new org . nd4j . linalg . IDENT_1 . METHOD_15 ( ) } ; org . nd4j . IDENT_4 . jackson . databind . IDENT_5 mapper = new org . nd4j . IDENT_4 . jackson . databind . METHOD_16 ( ) ; mapper . METHOD_17 ( IDENT_6 . IDENT_7 , false ) ; mapper . METHOD_17 ( IDENT_8 . IDENT_9 , false ) ; mapper . METHOD_17 ( IDENT_10 . IDENT_11 , true ) ; mapper . METHOD_18 ( IDENT_8 . IDENT_12 ) ; for ( org . nd4j . linalg . IDENT_1 . IDENT_2 IDENT_13 : IDENT_3 ) { java . lang . String IDENT_14 = mapper . METHOD_19 ( IDENT_13 ) ; org . nd4j . linalg . IDENT_1 . IDENT_2 IDENT_15 = mapper . METHOD_20 ( IDENT_14 , org . nd4j . linalg . IDENT_1 . IDENT_2 . class ) ; "<AssertPlaceHolder>" ; } } create ( float [ ] , int [ ] , long ) { IDENT_16 = org . nd4j . linalg . factory . Nd4j . METHOD_21 ( IDENT_16 ) ; if ( ( IDENT_16 . length ) == 1 ) { if ( ( IDENT_16 [ 0 ] ) == ( data . length ) ) { IDENT_16 = new int [ ] { 1 , data . length } ; } else throw new org . nd4j . linalg . exception . METHOD_22 ( ( ( ( STRING_0 + ( org . nd4j . linalg . factory . Arrays . toString ( IDENT_16 ) ) ) + STRING_1 ) + ( data . length ) ) ) ; } org . nd4j . linalg . factory . Nd4j . METHOD_23 ( data . length , IDENT_16 ) ; org . nd4j . linalg . factory . INDArray ret = org . nd4j . linalg . factory . Nd4j . INSTANCE . create ( data , IDENT_16 , offset , org . nd4j . linalg . factory . Nd4j . order ( ) ) ; org . nd4j . linalg . factory . Nd4j . METHOD_24 ( ret ) ; return ret ; }
org . junit . Assert . assertEquals ( IDENT_13 , IDENT_15 ) 