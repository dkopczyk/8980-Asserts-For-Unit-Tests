METHOD_0 ( ) { org . nd4j . linalg . api . ndarray . INDArray IDENT_0 = org . nd4j . linalg . factory . Nd4j . METHOD_1 ( 1 , INT_0 , INT_0 ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_1 = IDENT_0 . METHOD_2 ( ) . METHOD_3 ( STRING_0 , 3 , 6 ) ; org . nd4j . linalg . factory . Nd4j . METHOD_4 ( ) . exec ( new org . nd4j . linalg . IDENT_2 . METHOD_5 ( IDENT_1 ) ) ; org . nd4j . linalg . api . ndarray . INDArray IDENT_3 = org . nd4j . linalg . factory . Nd4j . create ( new double [ ] { FLOAT_0 , FLOAT_0 , FLOAT_0 , FLOAT_1 , FLOAT_1 , FLOAT_1 , FLOAT_2 , FLOAT_2 , FLOAT_2 , FLOAT_3 , FLOAT_3 , FLOAT_3 , FLOAT_4 , FLOAT_4 , FLOAT_4 , FLOAT_5 , FLOAT_5 , FLOAT_5 } , new int [ ] { 3 , 6 } , STRING_0 ) ; "<AssertPlaceHolder>" ; } exec ( org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_6 ) { METHOD_6 ( op ) ; if ( op instanceof org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_7 ) { org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_7 s = ( ( org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_7 ) ( op ) ) ; exec ( s ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_8 ) { op . exec ( ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_9 ) { org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_9 t = ( ( org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_9 ) ( op ) ) ; exec ( t ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_10 ) { org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_10 ac = ( ( org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_10 ) ( op ) ) ; exec ( ac ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_11 ) { org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_11 IDENT_12 = ( ( org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_11 ) ( op ) ) ; exec ( IDENT_12 ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_13 ) { org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_13 IDENT_14 = ( ( org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_13 ) ( op ) ) ; exec ( IDENT_14 , IDENT_14 . METHOD_7 ( ) ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_15 ) { org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_15 IDENT_16 = ( ( org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_15 ) ( op ) ) ; exec ( IDENT_16 ) ; } else if ( op instanceof org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_17 ) { org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_17 IDENT_18 = ( ( org . nd4j . linalg . IDENT_4 . IDENT_5 . IDENT_2 . IDENT_17 ) ( op ) ) ; exec ( IDENT_18 , org . nd4j . linalg . factory . Nd4j . METHOD_8 ( ) ) ; } return op ; }
org . junit . Assert . assertEquals ( IDENT_3 , IDENT_1 ) 