METHOD_0 ( ) { org . apache . jackrabbit . core . data . IDENT_0 IDENT_1 = new org . apache . jackrabbit . core . data . METHOD_1 ( STRING_0 ) ; org . apache . jackrabbit . core . data . METHOD_1 IDENT_2 = new org . apache . jackrabbit . core . data . METHOD_1 ( STRING_1 ) ; org . apache . jackrabbit . core . data . METHOD_1 IDENT_3 = new org . apache . jackrabbit . core . data . METHOD_1 ( STRING_2 ) ; java . util . List < org . apache . jackrabbit . core . data . METHOD_1 > IDENT_4 = com . google . common . collect . ImmutableList . of ( IDENT_1 , IDENT_2 , IDENT_3 ) ; org . apache . jackrabbit . core . data . IDENT_5 IDENT_6 = mock ( org . apache . jackrabbit . core . data . IDENT_5 . class ) ; when ( IDENT_6 . METHOD_2 ( ) ) . thenReturn ( IDENT_4 . iterator ( ) ) ; when ( IDENT_6 . METHOD_3 ( new org . apache . jackrabbit . core . data . METHOD_1 ( STRING_0 ) ) ) . thenReturn ( new org . apache . jackrabbit . oak . plugins . IDENT_7 . datastore . IDENT_8 . METHOD_4 ( IDENT_1 ) ) ; when ( IDENT_6 . METHOD_3 ( new org . apache . jackrabbit . core . data . METHOD_1 ( STRING_1 ) ) ) . thenReturn ( new org . apache . jackrabbit . oak . plugins . IDENT_7 . datastore . IDENT_8 . METHOD_4 ( IDENT_2 ) ) ; when ( IDENT_6 . METHOD_3 ( new org . apache . jackrabbit . core . data . METHOD_1 ( STRING_2 ) ) ) . thenReturn ( new org . apache . jackrabbit . oak . plugins . IDENT_7 . datastore . IDENT_8 . METHOD_4 ( IDENT_3 ) ) ; org . apache . jackrabbit . oak . plugins . IDENT_7 . datastore . IDENT_9 IDENT_10 = new org . apache . jackrabbit . oak . plugins . IDENT_7 . datastore . METHOD_5 ( IDENT_6 ) ; java . util . Iterator < java . lang . String > IDENT_11 = IDENT_10 . METHOD_6 ( INT_0 ) ; java . util . Set < java . lang . String > expected = com . google . common . collect . IDENT_12 . METHOD_7 ( STRING_0 , STRING_1 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( long ) { final java . sql . IDENT_13 conn = IDENT_14 . METHOD_8 ( ) ; java . sql . IDENT_15 IDENT_16 = null ; if ( IDENT_17 > 0 ) { IDENT_16 = conn . METHOD_9 ( STRING_3 ) ; IDENT_16 . METHOD_10 ( 1 , IDENT_17 ) ; } else { IDENT_16 = conn . METHOD_9 ( STRING_4 ) ; } final java . sql . ResultSet rs = IDENT_16 . METHOD_11 ( ) ; return new com . google . common . collect . IDENT_18 < java . lang . String > ( ) { @ org . apache . jackrabbit . oak . plugins . IDENT_7 . db . Override MOD_0 java . lang . String METHOD_12 ( ) { try { if ( rs . next ( ) ) { return rs . getString ( 1 ) ; } conn . close ( ) ; } catch ( java . sql . IDENT_19 e ) { try { if ( ( conn != null ) && ( ! ( conn . METHOD_13 ( ) ) ) ) { conn . close ( ) ; } } catch ( java . lang . Exception IDENT_20 ) { } throw new java . lang . RuntimeException ( e ) ; } return METHOD_14 ( ) ; } } ; }
org . junit . Assert . assertEquals ( expected , com . google . common . collect . IDENT_12 . METHOD_7 ( IDENT_11 ) ) 