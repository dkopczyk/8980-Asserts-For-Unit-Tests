METHOD_0 ( ) { org . apache . jackrabbit . oak . api . IDENT_0 IDENT_1 = org . apache . jackrabbit . oak . plugins . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_0 , STRING_1 , IDENT_4 . IDENT_5 ) ; javax . jcr . IDENT_6 IDENT_7 = org . apache . jackrabbit . oak . plugins . value . IDENT_8 . METHOD_2 ( IDENT_1 , IDENT_9 ) ; org . apache . jackrabbit . oak . api . IDENT_0 IDENT_10 = org . apache . jackrabbit . oak . plugins . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_0 , IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , javax . jcr . IDENT_6 ) { int type = value . getType ( ) ; switch ( type ) { case javax . jcr . IDENT_4 . IDENT_11 : return org . apache . jackrabbit . oak . plugins . IDENT_2 . IDENT_12 . METHOD_3 ( name , org . apache . jackrabbit . oak . plugins . IDENT_2 . IDENT_3 . getString ( value , type ) ) ; case javax . jcr . IDENT_4 . IDENT_13 : return org . apache . jackrabbit . oak . plugins . IDENT_2 . IDENT_14 . METHOD_4 ( name , value ) ; case javax . jcr . IDENT_4 . IDENT_15 : return org . apache . jackrabbit . oak . plugins . IDENT_2 . IDENT_16 . METHOD_5 ( name , value . METHOD_6 ( ) ) ; case javax . jcr . IDENT_4 . IDENT_17 : return org . apache . jackrabbit . oak . plugins . IDENT_2 . IDENT_18 . METHOD_7 ( name , value . METHOD_8 ( ) ) ; case javax . jcr . IDENT_4 . IDENT_19 : return org . apache . jackrabbit . oak . plugins . IDENT_2 . IDENT_20 . METHOD_9 ( name , value . METHOD_10 ( ) ) ; case javax . jcr . IDENT_4 . IDENT_21 : return org . apache . jackrabbit . oak . plugins . IDENT_2 . IDENT_22 . METHOD_11 ( name , value . METHOD_12 ( ) ) ; default : return new org . apache . jackrabbit . oak . plugins . IDENT_2 . METHOD_13 ( name , org . apache . jackrabbit . oak . plugins . IDENT_2 . IDENT_3 . getString ( value , type ) , org . apache . jackrabbit . oak . api . Type . METHOD_14 ( type , false ) ) ; } }
org . junit . Assert . assertEquals ( IDENT_1 , IDENT_10 ) 