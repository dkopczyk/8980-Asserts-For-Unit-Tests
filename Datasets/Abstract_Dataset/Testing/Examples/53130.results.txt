METHOD_0 ( ) { com . IDENT_0 . model . IDENT_1 command = new com . IDENT_0 . model . METHOD_1 ( ) ; command . METHOD_2 ( STRING_0 ) ; command . METHOD_3 ( new com . IDENT_0 . model . METHOD_4 ( STRING_1 ) ) ; command . METHOD_5 ( com . IDENT_0 . UUID . METHOD_6 ( ) . toString ( ) ) ; com . IDENT_0 . IDENT_2 IDENT_3 = new com . IDENT_0 . METHOD_7 ( command ) ; com . IDENT_0 . IDENT_4 . api . IDENT_5 request = com . IDENT_0 . IDENT_4 . api . IDENT_5 . METHOD_8 ( ) . METHOD_9 ( IDENT_3 . METHOD_10 ( ) . METHOD_11 ( ) ) . METHOD_12 ( IDENT_3 ) . build ( ) ; java . util . concurrent . IDENT_6 < com . IDENT_0 . IDENT_4 . api . Response > future = new java . util . concurrent . METHOD_13 ( ) ; client . call ( request , future :: IDENT_7 ) ; com . IDENT_0 . IDENT_4 . api . Response response = future . get ( 10 , TimeUnit . IDENT_8 ) ; "<AssertPlaceHolder>" ; } call ( com . IDENT_0 . IDENT_4 . api . IDENT_5 , java . util . function . IDENT_9 ) { IDENT_10 . METHOD_14 ( request . METHOD_15 ( ) , IDENT_11 ) ; com . IDENT_0 . IDENT_4 . kafka . client . IDENT_12 . logger . debug ( STRING_2 , request . METHOD_16 ( ) , request . METHOD_15 ( ) ) ; METHOD_17 ( request ) ; }
org . junit . Assert . assertNotNull ( response ) 