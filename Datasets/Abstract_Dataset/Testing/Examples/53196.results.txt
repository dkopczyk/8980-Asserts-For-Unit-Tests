test ( ) { java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 > list = IDENT_4 . METHOD_0 ( ) ; IDENT_4 . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 > list = new java . util . ArrayList ( ) ; org . IDENT_0 . IDENT_1 . common . IDENT_5 < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 > generator = org . IDENT_0 . IDENT_1 . common . IDENT_5 . newInstance ( METHOD_3 ( ) ) ; while ( generator . hasNext ( ) ) { java . util . List < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 > IDENT_7 = generator . METHOD_4 ( ) ; java . util . Set < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 > IDENT_8 = new java . util . HashSet ( IDENT_7 ) ; for ( org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_9 : IDENT_10 ) { java . util . Set < org . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 > IDENT_11 = new java . util . HashSet ( IDENT_9 . METHOD_5 ( ) ) ; if ( IDENT_8 . equals ( IDENT_11 ) ) { list . add ( IDENT_9 ) ; continue ; } } } return list ; }
org . junit . Assert . assertEquals ( list , IDENT_4 . METHOD_2 ( ) ) 