METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( any ( org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . class ) ) ) . thenReturn ( java . util . Optional . of ( IDENT_5 ) ) ; java . lang . String IDENT_6 = STRING_0 ; java . lang . String result = IDENT_7 . METHOD_2 ( IDENT_8 , IDENT_6 , IDENT_9 , IDENT_10 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_11 , java . lang . String , org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_12 , org . IDENT_1 . IDENT_2 . IDENT_13 . IDENT_14 ) { org . springframework . util . Assert . METHOD_3 ( IDENT_15 , STRING_1 ) ; org . springframework . util . Assert . METHOD_3 ( value , STRING_2 ) ; org . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 params = new org . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_4 ( ) ; params . METHOD_5 ( new org . IDENT_1 . IDENT_2 . common . METHOD_6 ( IDENT_15 , org . IDENT_1 . IDENT_2 . common . IDENT_16 . IDENT_17 , value , IDENT_15 . METHOD_7 ( ) , IDENT_15 . METHOD_8 ( ) , IDENT_15 . METHOD_9 ( ) ) ) ; if ( IDENT_15 . METHOD_10 ( ) ) { org . springframework . util . Assert . METHOD_3 ( IDENT_18 , STRING_3 ) ; params . METHOD_11 ( IDENT_18 ) ; } java . util . Optional < java . lang . String > IDENT_19 = IDENT_0 . METHOD_1 ( params ) ; if ( ( IDENT_19 . METHOD_12 ( ) ) && ( ( IDENT_20 == null ) || ( ! ( IDENT_19 . get ( ) . equals ( IDENT_20 . METHOD_13 ( ) ) ) ) ) ) { return ( ( STRING_4 + value ) + STRING_5 ) + ( IDENT_15 . METHOD_13 ( ) ) ; } return null ; }
org . junit . Assert . assertNotNull ( result ) 