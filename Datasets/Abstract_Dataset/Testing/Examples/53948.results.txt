METHOD_0 ( ) { network . METHOD_1 ( IDENT_0 ) ; com . IDENT_1 . IDENT_2 . api . IDENT_3 found = network . METHOD_2 ( com . IDENT_1 . IDENT_2 . api . IDENT_4 . IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( com . IDENT_1 . IDENT_2 . api . models . IDENT_6 ) { if ( ( IDENT_7 . METHOD_3 ( ) ) == ( com . IDENT_1 . IDENT_2 . api . models . IDENT_8 . IDENT_9 ) ) throw new com . IDENT_1 . IDENT_2 . api . exceptions . METHOD_4 ( STRING_0 ) ; if ( ( IDENT_7 . METHOD_3 ( ) ) == ( com . IDENT_1 . IDENT_2 . api . models . IDENT_8 . IDENT_10 ) ) throw new com . IDENT_1 . IDENT_2 . api . exceptions . METHOD_4 ( STRING_1 ) ; if ( address == null ) throw new java . lang . METHOD_5 ( STRING_2 ) ; if ( address . equals ( IDENT_6 . IDENT_11 ) ) throw new java . lang . IllegalArgumentException ( STRING_3 ) ; logger . debug ( STRING_4 , IDENT_7 . toString ( ) , address ) ; com . IDENT_1 . IDENT_2 . api . IDENT_3 IDENT_12 = null ; java . util . Collection < com . IDENT_1 . IDENT_2 . api . IDENT_3 > IDENT_13 = IDENT_14 . values ( ) ; for ( com . IDENT_1 . IDENT_2 . api . IDENT_3 d : IDENT_13 ) { com . IDENT_1 . IDENT_2 . api . models . IDENT_6 a = METHOD_6 ( d ) ; if ( ( a != null ) && ( a . equals ( address ) ) ) { IDENT_12 = d ; break ; } } if ( IDENT_12 == null ) IDENT_12 = IDENT_15 . get ( address ) ; return IDENT_12 ; }
org . junit . Assert . assertNull ( found ) 