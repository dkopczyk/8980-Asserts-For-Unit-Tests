METHOD_0 ( ) { network . METHOD_1 ( IDENT_0 ) ; java . util . List < com . IDENT_1 . IDENT_2 . api . IDENT_3 > IDENT_4 = network . METHOD_2 ( com . IDENT_1 . IDENT_2 . api . IDENT_5 . IDENT_6 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String ) { if ( id == null ) throw new java . lang . METHOD_3 ( STRING_0 ) ; if ( ( id . length ( ) ) == 0 ) throw new java . lang . IllegalArgumentException ( STRING_1 ) ; java . util . List < com . IDENT_1 . IDENT_2 . api . IDENT_3 > IDENT_7 = new java . util . ArrayList < com . IDENT_1 . IDENT_2 . api . IDENT_3 > ( ) ; for ( com . IDENT_1 . IDENT_2 . api . IDENT_3 remote : IDENT_8 . values ( ) ) { if ( id . equals ( remote . METHOD_4 ( ) ) ) IDENT_7 . add ( remote ) ; } for ( com . IDENT_1 . IDENT_2 . api . IDENT_3 remote : IDENT_9 . values ( ) ) { if ( id . equals ( remote . METHOD_4 ( ) ) ) IDENT_7 . add ( remote ) ; } return IDENT_7 ; }
org . junit . Assert . assertEquals ( IDENT_4 . size ( ) , 0 ) 