METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . api . models . IDENT_2 address = new com . IDENT_0 . IDENT_1 . api . models . METHOD_1 ( STRING_0 ) ; com . IDENT_0 . IDENT_1 . api . IDENT_3 found = network . METHOD_2 ( address ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( com . IDENT_0 . IDENT_1 . api . models . IDENT_4 ) { if ( ( IDENT_5 . METHOD_3 ( ) ) == ( com . IDENT_0 . IDENT_1 . api . models . IDENT_6 . IDENT_7 ) ) throw new com . IDENT_0 . IDENT_1 . api . exceptions . METHOD_4 ( STRING_1 ) ; if ( ( IDENT_5 . METHOD_3 ( ) ) == ( com . IDENT_0 . IDENT_1 . api . models . IDENT_6 . IDENT_8 ) ) throw new com . IDENT_0 . IDENT_1 . api . exceptions . METHOD_4 ( STRING_2 ) ; if ( address == null ) throw new java . lang . METHOD_5 ( STRING_3 ) ; if ( address . equals ( IDENT_4 . IDENT_9 ) ) throw new java . lang . IllegalArgumentException ( STRING_4 ) ; logger . debug ( STRING_5 , IDENT_5 . toString ( ) , address ) ; com . IDENT_0 . IDENT_1 . api . IDENT_3 IDENT_10 = null ; java . util . Collection < com . IDENT_0 . IDENT_1 . api . IDENT_3 > IDENT_11 = IDENT_12 . values ( ) ; for ( com . IDENT_0 . IDENT_1 . api . IDENT_3 d : IDENT_11 ) { com . IDENT_0 . IDENT_1 . api . models . IDENT_4 a = METHOD_6 ( d ) ; if ( ( a != null ) && ( a . equals ( address ) ) ) { IDENT_10 = d ; break ; } } if ( IDENT_10 == null ) IDENT_10 = IDENT_13 . get ( address ) ; return IDENT_10 ; }
org . junit . Assert . assertNull ( found ) 