METHOD_0 ( ) { org . IDENT_0 . util . array . IDENT_1 values = new org . IDENT_0 . util . array . METHOD_1 ( ( - FLOAT_0 ) , FLOAT_1 , FLOAT_2 , FLOAT_3 , ( - FLOAT_4 ) , FLOAT_5 , ( - FLOAT_6 ) , FLOAT_7 , FLOAT_8 , ( - FLOAT_9 ) ) ; org . IDENT_0 . util . array . IDENT_2 IDENT_3 = org . IDENT_0 . util . array . IDENT_4 . IDENT_4 . METHOD_2 ( values ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . IDENT_0 . util . array . IDENT_5 ) { org . IDENT_0 . util . array . IDENT_2 view = new org . IDENT_0 . util . array . METHOD_3 ( values ) ; if ( ( values . size ( ) ) <= 1 ) { return view ; } double value = values . METHOD_4 ( 0 ) ; for ( int i = 1 ; i < ( values . size ( ) ) ; i ++ ) { double IDENT_6 = values . METHOD_4 ( i ) ; if ( value > IDENT_6 ) { org . IDENT_0 . util . array . METHOD_3 . METHOD_5 ( view ) ; return view ; } value = IDENT_6 ; } return view ; }
org . junit . Assert . assertThat ( METHOD_2 , equalTo ( ( ( org . IDENT_0 . util . array . IDENT_5 ) ( new org . IDENT_0 . util . array . METHOD_1 ( ( - FLOAT_0 ) , ( - FLOAT_4 ) , ( - FLOAT_6 ) , ( - FLOAT_9 ) , FLOAT_8 , FLOAT_3 , FLOAT_1 , FLOAT_2 , FLOAT_5 , FLOAT_7 ) ) ) ) ) 