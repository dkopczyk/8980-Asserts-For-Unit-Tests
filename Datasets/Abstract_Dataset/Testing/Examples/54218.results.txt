METHOD_0 ( ) { org . IDENT_0 . util . array . IDENT_1 values = new org . IDENT_0 . util . array . METHOD_1 ( 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 3 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( org . IDENT_0 . util . array . IDENT_1 , double ) { if ( value <= ( values . METHOD_3 ( 0 ) ) ) { return 0 ; } if ( value >= ( values . METHOD_3 ( ( ( values . size ( ) ) - 1 ) ) ) ) { return ( values . size ( ) ) - 1 ; } int index = org . IDENT_0 . util . array . IDENT_2 . METHOD_4 ( 0 , ( ( values . size ( ) ) - 1 ) , values , value ) ; while ( ( index != 0 ) && ( value == ( values . METHOD_3 ( ( index - 1 ) ) ) ) ) { index OP_0 ; } return index ; }
org . junit . Assert . assertThat ( org . IDENT_0 . util . array . IDENT_2 . IDENT_2 . METHOD_2 ( values , 2 ) , equalTo ( 1 ) ) 