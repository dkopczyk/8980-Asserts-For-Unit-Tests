METHOD_0 ( ) { org . IDENT_0 . util . IDENT_1 . IDENT_2 IDENT_3 = org . IDENT_0 . util . IDENT_1 . IDENT_4 . IDENT_4 . range ( 0.0 , FLOAT_0 ) ; org . IDENT_0 . util . IDENT_1 . IDENT_2 IDENT_5 = org . IDENT_0 . util . IDENT_1 . IDENT_4 . IDENT_4 . range ( ( - 1.0 ) , FLOAT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( org . IDENT_0 . util . IDENT_1 . IDENT_2 , org . IDENT_0 . util . IDENT_1 . IDENT_2 ) { double IDENT_6 = java . lang . Math . max ( range . METHOD_2 ( ) , IDENT_7 . METHOD_2 ( ) ) ; double IDENT_8 = java . lang . Math . min ( range . METHOD_3 ( ) , IDENT_7 . METHOD_3 ( ) ) ; double IDENT_9 = IDENT_8 - IDENT_6 ; double IDENT_10 = ( range . METHOD_3 ( ) ) - ( range . METHOD_2 ( ) ) ; double IDENT_11 = java . lang . Math . max ( 0.0 , ( IDENT_9 / IDENT_10 ) ) ; return IDENT_11 ; }
org . junit . Assert . assertThat ( org . IDENT_0 . util . IDENT_1 . IDENT_4 . IDENT_4 . METHOD_1 ( IDENT_3 , IDENT_5 ) , equalTo ( 1.0 ) ) 