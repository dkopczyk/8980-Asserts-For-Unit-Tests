METHOD_0 ( ) { org . easymock . EasyMock . replay ( IDENT_0 ) ; org . easymock . EasyMock . expect ( IDENT_1 . METHOD_1 ( ) ) . andReturn ( STRING_0 ) ; org . easymock . EasyMock . replay ( IDENT_1 ) ; org . easymock . EasyMock . expect ( IDENT_2 . METHOD_2 ( IDENT_1 ) ) . andReturn ( IDENT_0 ) ; org . easymock . EasyMock . replay ( IDENT_2 ) ; org . apache . IDENT_3 . protocol . server . IDENT_4 response = processor . METHOD_3 ( IDENT_1 , IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( org . apache . IDENT_3 . protocol . server . IDENT_5 , org . apache . IDENT_3 . protocol . server . IDENT_6 ) { java . lang . String method = context . METHOD_1 ( ) ; if ( method . equalsIgnoreCase ( STRING_1 ) ) { return adapter . METHOD_4 ( context ) ; } else if ( method . equalsIgnoreCase ( STRING_2 ) ) { return adapter . METHOD_5 ( context ) ; } else if ( method . equalsIgnoreCase ( STRING_0 ) ) { return adapter . METHOD_2 ( context ) ; } else if ( method . equalsIgnoreCase ( STRING_3 ) ) { return adapter . METHOD_6 ( context ) ; } else if ( method . equalsIgnoreCase ( STRING_4 ) ) { return adapter . METHOD_7 ( context ) ; } else if ( method . equalsIgnoreCase ( STRING_5 ) ) { return adapter . METHOD_8 ( context ) ; } else { return null ; } }
org . junit . Assert . assertNotNull ( response ) 