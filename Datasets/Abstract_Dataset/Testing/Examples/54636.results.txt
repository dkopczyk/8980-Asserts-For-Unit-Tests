METHOD_0 ( ) { final java . util . List < java . util . Locale > IDENT_0 = IDENT_1 . METHOD_1 ( Locale . IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . util . Locale ) { if ( Locale . IDENT_3 . equals ( from ) ) { return java . util . Collections . singletonList ( Locale . IDENT_3 ) ; } final java . util . Locale IDENT_4 = METHOD_2 ( from ) ; final java . util . List < java . util . Locale > IDENT_0 = new java . util . ArrayList < java . util . Locale > ( 3 ) ; IDENT_0 . add ( IDENT_4 ) ; if ( ( ! ( "" . equals ( IDENT_4 . METHOD_3 ( ) ) ) ) && ( ! ( Locale . IDENT_3 . METHOD_4 ( ) . equals ( IDENT_4 . METHOD_4 ( ) ) ) ) ) { IDENT_0 . add ( new java . util . Locale ( IDENT_4 . METHOD_4 ( ) ) ) ; } IDENT_0 . add ( Locale . IDENT_3 ) ; return IDENT_0 ; }
org . junit . Assert . assertThat ( IDENT_0 , contains ( Locale . IDENT_2 , Locale . IDENT_3 ) ) 