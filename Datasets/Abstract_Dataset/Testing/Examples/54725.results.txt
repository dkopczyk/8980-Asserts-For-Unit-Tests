METHOD_0 ( ) { org . apache . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = METHOD_1 ( de . IDENT_4 . IDENT_5 . IDENT_6 . core . IDENT_7 . IDENT_8 . class , IDENT_8 . IDENT_9 , de . IDENT_4 . IDENT_5 . IDENT_6 . core . IDENT_7 . IDENT_10 . IDENT_11 ) ; java . lang . String content = STRING_0 ; org . apache . IDENT_0 . IDENT_12 . IDENT_13 IDENT_14 = IDENT_3 . METHOD_2 ( ) ; IDENT_14 . METHOD_3 ( content ) ; new de . IDENT_4 . IDENT_5 . IDENT_6 . core . api . IDENT_15 . type . METHOD_4 ( IDENT_14 , 0 , 16 ) . METHOD_5 ( ) ; IDENT_3 . process ( IDENT_14 ) ; java . util . List < java . lang . String > ref = asList ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 ) ; java . util . List < java . lang . String > tokens = METHOD_6 ( select ( IDENT_14 , de . IDENT_4 . IDENT_5 . IDENT_6 . core . api . IDENT_15 . type . METHOD_4 . class ) ) ; System . out . println ( tokens ) ; "<AssertPlaceHolder>" ; } select ( org . apache . IDENT_0 . IDENT_14 . IDENT_16 , java . lang . String ) { java . lang . String [ ] IDENT_17 = IDENT_18 . split ( "/" , 2 ) ; java . lang . String IDENT_19 = IDENT_17 [ 0 ] ; org . apache . IDENT_0 . IDENT_14 . Type t = IDENT_20 . METHOD_7 ( ) . getType ( IDENT_19 ) ; if ( t == null ) { throw new java . lang . IllegalStateException ( ( ( STRING_7 + IDENT_19 ) + STRING_8 ) ) ; } java . lang . String path = ( ( IDENT_17 . length ) > 1 ) ? IDENT_17 [ 1 ] : "" ; return de . IDENT_4 . IDENT_5 . IDENT_6 . core . api . IDENT_21 . IDENT_22 . METHOD_8 ( de . IDENT_4 . IDENT_5 . IDENT_6 . core . api . IDENT_21 . IDENT_22 . IDENT_23 . create ( IDENT_20 , t , path ) ) ; }
org . junit . Assert . assertEquals ( ref , tokens ) 