METHOD_0 ( ) { final com . github . IDENT_0 . netty . handler . IDENT_1 . IDENT_2 IDENT_3 = new com . github . IDENT_0 . netty . handler . IDENT_1 . METHOD_1 ( ) ; final io . netty . buffer . IDENT_4 buffer = METHOD_2 ( ) ; final java . util . concurrent . IDENT_5 IDENT_6 = new java . util . concurrent . METHOD_3 ( 1 ) ; java . util . concurrent . IDENT_7 executor = java . util . concurrent . IDENT_8 . METHOD_4 ( ) ; java . util . concurrent . IDENT_9 < ? > IDENT_10 = executor . METHOD_5 ( new java . lang . METHOD_6 ( ) { @ com . github . IDENT_0 . netty . handler . Override public void run ( ) { try { IDENT_3 . write ( buffer ) ; IDENT_6 . METHOD_7 ( ) ; IDENT_3 . write ( buffer ) ; } catch ( java . lang . IDENT_11 e ) { e . printStackTrace ( ) ; } } } ) ; IDENT_6 . METHOD_8 ( ) ; "<AssertPlaceHolder>" ; java . lang . Thread . sleep ( INT_0 ) ; IDENT_3 . close ( ) ; METHOD_5 . get ( ) ; } METHOD_9 ( ) { return delegate . METHOD_9 ( ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_3 . METHOD_9 ( ) ) > 0 ) ) 