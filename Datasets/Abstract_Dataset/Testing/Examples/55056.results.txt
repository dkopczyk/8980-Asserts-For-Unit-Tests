METHOD_0 ( ) { com . github . IDENT_0 . core . events . IDENT_1 IDENT_2 = mock ( com . github . IDENT_0 . core . events . IDENT_3 . class ) ; when ( IDENT_2 . getType ( ) ) . thenReturn ( IDENT_4 . IDENT_5 ) ; com . github . IDENT_0 . core . events . IDENT_6 manager = new com . github . IDENT_0 . core . events . METHOD_1 ( new java . util . ArrayList ( 0 ) ) ; manager . METHOD_2 ( IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( com . github . IDENT_0 . core . events . IDENT_1 ) { if ( ( IDENT_7 ) != null ) { for ( com . github . IDENT_0 . core . events . IDENT_8 listener : IDENT_7 ) { switch ( event . getType ( ) ) { case IDENT_5 : listener . METHOD_3 ( event ) ; break ; case IDENT_9 : listener . METHOD_4 ( event ) ; break ; case IDENT_10 : listener . METHOD_5 ( event ) ; break ; case IDENT_11 : listener . METHOD_6 ( event ) ; break ; default : throw new com . github . IDENT_0 . core . METHOD_7 ( ( STRING_0 + ( event . getType ( ) ) ) ) ; } } } }
org . junit . Assert . assertTrue ( true ) 