METHOD_0 ( ) { org . IDENT_0 . monitor . service . IDENT_1 request = METHOD_1 ( ) ; request . METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( true , org . IDENT_0 . net . IDENT_2 . METHOD_5 ( true , false ) . METHOD_6 ( ) ) ) ; java . util . Collection < org . IDENT_0 . monitor . service . IDENT_3 > IDENT_4 = IDENT_5 . METHOD_7 ( request ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( org . IDENT_0 . monitor . service . IDENT_1 ) { org . IDENT_0 . IDENT_6 . IDENT_7 IDENT_8 = request . METHOD_2 ( ) ; org . IDENT_0 . IDENT_9 . IDENT_10 IDENT_9 = IDENT_8 . METHOD_8 ( ) ; org . IDENT_0 . monitor . service . IDENT_3 [ ] IDENT_11 = IDENT_9 . METHOD_9 ( ) . METHOD_10 ( ) ; org . IDENT_0 . monitor . service . List < org . IDENT_0 . monitor . service . IDENT_3 > IDENT_12 = new org . IDENT_0 . monitor . service . ArrayList < org . IDENT_0 . monitor . service . IDENT_3 > ( ) ; for ( org . IDENT_0 . IDENT_13 . IDENT_14 . IDENT_15 IDENT_16 : IDENT_17 ) { if ( IDENT_16 . METHOD_11 ( IDENT_18 ) ) { if ( IDENT_18 . METHOD_12 ( ) ) { continue ; } IDENT_19 = true ; break ; } } if ( ! IDENT_19 ) { IDENT_12 . add ( IDENT_18 ) ; } } return IDENT_12 ; }
org . junit . Assert . assertTrue ( ( ( IDENT_4 . size ( ) ) == 1 ) ) 