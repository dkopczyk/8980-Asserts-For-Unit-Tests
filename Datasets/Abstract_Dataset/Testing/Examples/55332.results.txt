METHOD_0 ( ) { final java . io . File IDENT_0 = IDENT_1 . METHOD_1 ( STRING_0 ) ; final int IDENT_2 = INT_0 ; java . io . IDENT_3 IDENT_4 = new java . io . METHOD_2 ( new java . io . METHOD_3 ( new java . io . File ( IDENT_0 , STRING_1 ) ) ) ; java . lang . String format = STRING_2 ; for ( int i = 0 ; i <= IDENT_2 ; i += 2 ) { IDENT_4 . write ( java . lang . String . format ( format , i ) . getBytes ( ) ) ; } IDENT_4 . close ( ) ; IDENT_4 = new java . io . METHOD_2 ( new java . io . METHOD_3 ( new java . io . File ( IDENT_0 , STRING_3 ) ) ) ; format = STRING_4 ; for ( int i = 1 ; i <= IDENT_2 ; i += 2 ) { IDENT_4 . write ( java . lang . String . format ( format , ( ( float ) ( i ) ) ) . getBytes ( ) ) ; } IDENT_4 . close ( ) ; java . lang . String query = java . lang . String . format ( STRING_5 , IDENT_0 . METHOD_4 ( ) . toString ( ) ) ; try { METHOD_5 ( query , IDENT_2 ) ; } catch ( java . lang . Exception e ) { com . IDENT_5 . test . IDENT_6 m = new com . IDENT_5 . test . METHOD_6 ( IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 , STRING_6 ) ; @ com . IDENT_5 . exec . IDENT_11 . impl . IDENT_12 . METHOD_7 ( STRING_7 ) final com . IDENT_5 . common . exceptions . IDENT_13 IDENT_14 = com . IDENT_5 . common . exceptions . IDENT_13 . METHOD_8 ( e ) . build ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( query , IDENT_2 ) ; } matches ( org . apache . calcite . plan . IDENT_15 ) { com . IDENT_5 . exec . IDENT_16 . IDENT_11 . IDENT_17 IDENT_18 = com . IDENT_5 . exec . IDENT_16 . IDENT_11 . IDENT_19 . METHOD_9 ( call . METHOD_10 ( ) ) ; return IDENT_18 . METHOD_11 ( ) ; }
org . junit . Assert . assertTrue ( m . matches ( IDENT_14 ) ) 