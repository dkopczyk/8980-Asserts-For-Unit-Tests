METHOD_0 ( ) { java . nio . file . Path root = java . nio . file . IDENT_0 . get ( METHOD_1 ( ) , STRING_0 8 , STRING_0 4 ) ; java . nio . file . IDENT_1 . METHOD_2 ( root ) ; java . nio . file . IDENT_1 . write ( root . resolve ( STRING_0 3 ) , STRING_0 FLOAT_0 getBytes ( ) , IDENT_2 . IDENT_3 ) ; METHOD_3 ( ) . METHOD_4 ( STRING_1 ) . METHOD_5 ( ) . METHOD_6 ( STRING_0 , STRING_2 3 ) . METHOD_7 ( true , STRING_0 9 ) . build ( ) . run ( ) ; METHOD_3 ( ) . METHOD_4 ( STRING_0 2 ) . METHOD_5 ( ) . METHOD_6 ( STRING_0 1 ) . METHOD_7 ( 1L ) . build ( ) . run ( ) ; java . lang . Thread . sleep ( INT_0 ) ; java . nio . file . IDENT_1 . write ( root . resolve ( STRING_0 6 ) , STRING_0 FLOAT_0 getBytes ( ) , IDENT_2 . IDENT_3 ) ; METHOD_3 ( ) . METHOD_4 ( STRING_0 2 ) . METHOD_5 ( ) . METHOD_6 ( STRING_0 1 ) . METHOD_7 ( 1L ) . build ( ) . run ( ) ; METHOD_3 ( ) . METHOD_4 ( STRING_1 ) . METHOD_5 ( ) . METHOD_6 ( STRING_0 , STRING_2 3 ) . METHOD_7 ( true , STRING_0 9 ) . build ( ) . run ( ) ; METHOD_3 ( ) . METHOD_4 ( STRING_0 2 ) . METHOD_5 ( ) . METHOD_6 ( STRING_0 1 ) . METHOD_7 ( INT_1 ) . build ( ) . run ( ) ; METHOD_3 ( ) . METHOD_4 ( STRING_1 ) . METHOD_5 ( ) . METHOD_6 ( STRING_0 , STRING_2 3 ) . METHOD_7 ( true , STRING_0 0 ) . build ( ) . run ( ) ; try { METHOD_3 ( ) . METHOD_4 ( STRING_3 ) . METHOD_5 ( ) . METHOD_6 ( STRING_0 , STRING_2 3 ) . METHOD_7 ( true , STRING_0 0 ) . build ( ) . run ( ) ; org . junit . Assert . fail ( STRING_4 ) ; } catch ( com . IDENT_4 . exec . IDENT_5 . IDENT_6 e ) { "<AssertPlaceHolder>" ; } METHOD_3 ( ) . METHOD_4 ( STRING_5 ) . METHOD_5 ( ) . METHOD_6 ( STRING_0 , STRING_2 3 ) . METHOD_7 ( true , STRING_0 0 ) . build ( ) . run ( ) ; METHOD_3 ( ) . METHOD_4 ( STRING_6 ) . METHOD_5 ( ) . METHOD_6 ( STRING_0 , STRING_2 3 ) . METHOD_7 ( true , STRING_2 ) . build ( ) . run ( ) ; METHOD_3 ( ) . METHOD_4 ( STRING_7 ) . METHOD_5 ( ) . METHOD_6 ( STRING_0 , STRING_2 3 ) . METHOD_7 ( true , STRING_2 ) . build ( ) . run ( ) ; METHOD_3 ( ) . METHOD_4 ( STRING_2 0 ) . METHOD_5 ( ) . METHOD_6 ( STRING_0 , STRING_2 3 ) . METHOD_7 ( true , STRING_0 0 ) . build ( ) . run ( ) ; METHOD_3 ( ) . METHOD_4 ( STRING_2 1 ) . METHOD_5 ( ) . METHOD_6 ( STRING_0 , STRING_2 3 ) . METHOD_7 ( true , STRING_0 0 ) . build ( ) . run ( ) ; METHOD_3 ( ) . METHOD_4 ( STRING_2 2 ) . METHOD_5 ( ) . METHOD_6 ( STRING_0 , STRING_2 3 ) . METHOD_7 ( true , STRING_0 0 ) . build ( ) . run ( ) ; java . nio . file . IDENT_1 . delete ( root . resolve ( STRING_0 3 ) ) ; java . nio . file . IDENT_1 . delete ( root . resolve ( STRING_0 6 ) ) ; java . nio . file . IDENT_1 . delete ( root ) ; METHOD_3 ( ) . METHOD_4 ( STRING_2 0 ) . METHOD_5 ( ) . METHOD_6 ( STRING_0 , STRING_2 3 ) . METHOD_7 ( true , STRING_0 0 ) . build ( ) . run ( ) ; METHOD_3 ( ) . METHOD_4 ( STRING_2 1 ) . METHOD_5 ( ) . METHOD_6 ( STRING_0 , STRING_2 3 ) . METHOD_7 ( true , STRING_8 ) . build ( ) . run ( ) ; } getMessage ( ) { return java . lang . String . format ( STRING_9 , super . getMessage ( ) ) ; }
org . junit . Assert . assertTrue ( e . getMessage ( ) . contains ( STRING_0 5 ) ) 