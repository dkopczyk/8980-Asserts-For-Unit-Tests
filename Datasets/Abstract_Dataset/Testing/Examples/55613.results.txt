METHOD_0 ( ) { nl . IDENT_0 . IDENT_1 . hibernate . IDENT_2 . model . Person person = new nl . IDENT_0 . IDENT_1 . hibernate . IDENT_2 . model . Person ( ) ; person . setId ( 1L ) ; nl . IDENT_0 . IDENT_1 . hibernate . IDENT_2 . IDENT_3 < nl . IDENT_0 . IDENT_1 . hibernate . IDENT_2 . model . Person > model = new nl . IDENT_0 . IDENT_1 . hibernate . IDENT_2 . METHOD_1 ( person ) ; model . METHOD_2 ( ) ; model = serialize ( model ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { if ( ( ( object ) == null ) && ( ( IDENT_4 ) != null ) ) { java . util . List < nl . IDENT_0 . IDENT_1 . hibernate . IDENT_2 . properties . IDENT_5 > IDENT_6 = new java . util . ArrayList ( IDENT_7 ) ; for ( nl . IDENT_0 . IDENT_1 . hibernate . IDENT_2 . properties . IDENT_5 IDENT_8 : IDENT_6 ) { nl . IDENT_0 . IDENT_1 . hibernate . IDENT_2 . helper . IDENT_9 . setValue ( IDENT_8 . METHOD_4 ( ) , IDENT_8 . getProperty ( ) , new nl . IDENT_0 . IDENT_1 . hibernate . IDENT_2 . helper . METHOD_5 ( IDENT_8 ) . METHOD_6 ( ) ) ; } IDENT_7 . METHOD_7 ( ) ; object = IDENT_4 ; IDENT_4 = null ; } return object ; }
org . junit . Assert . assertEquals ( person , model . METHOD_3 ( ) ) 