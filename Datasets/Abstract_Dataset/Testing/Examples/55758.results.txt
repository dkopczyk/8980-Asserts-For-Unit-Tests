METHOD_0 ( ) { int index = 0 ; for ( org . IDENT_0 . IDENT_1 . entities . IDENT_2 v : IDENT_3 . METHOD_1 ( org . IDENT_0 . IDENT_1 . entities . IDENT_4 . class ) ) { "<AssertPlaceHolder>" ; org . IDENT_0 . IDENT_1 . entities . IDENT_5 IDENT_6 = IDENT_3 . METHOD_2 ( ) ; METHOD_3 ( IDENT_3 , v , IDENT_6 , IDENT_3 . METHOD_4 ( ) . get ( 0 ) , ( ( org . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_9 ) ( IDENT_10 . METHOD_5 ( index , 2 ) ) ) ) ; METHOD_3 ( IDENT_3 , v , IDENT_6 , IDENT_3 . METHOD_4 ( ) . get ( 1 ) , ( ( org . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_9 ) ( IDENT_10 . METHOD_5 ( index , 3 ) ) ) ) ; METHOD_3 ( IDENT_3 , v , IDENT_6 , null , ( ( org . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 . IDENT_9 ) ( IDENT_10 . METHOD_5 ( index , 4 ) ) ) ) ; ++ index ; } } getName ( ) { java . lang . String name = "" ; for ( org . IDENT_0 . IDENT_1 . entities . IDENT_11 IDENT_12 : METHOD_6 ( ) . METHOD_7 ( ) ) { name += ( ( IDENT_12 . METHOD_8 ( ) ) == null ? STRING_0 : IDENT_12 . METHOD_8 ( ) ) + STRING_1 ; } return ( name . length ( ) ) > 0 ? name . substring ( 0 , ( ( name . length ( ) ) - 3 ) ) : "" ; }
org . junit . Assert . assertEquals ( v . getName ( ) , IDENT_10 . METHOD_5 ( index , 0 ) ) 