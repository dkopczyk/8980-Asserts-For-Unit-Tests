METHOD_0 ( ) { final java . util . List < org . apache . druid . collections . IDENT_0 < java . lang . Integer > > IDENT_1 = pool . METHOD_1 ( 10 , INT_0 ) ; final org . apache . druid . collections . IDENT_0 < java . lang . Integer > IDENT_2 = pool . METHOD_2 ( 100 ) ; "<AssertPlaceHolder>" ; IDENT_1 . METHOD_3 ( IDENT_0 :: close ) ; } METHOD_2 ( IDENT_3 ) { if ( IDENT_4 . get ( ) ) { org . apache . druid . java . util . http . client . pool . IDENT_5 . log . error ( org . apache . druid . java . util . common . StringUtils . format ( STRING_0 , key ) ) ; return null ; } final org . apache . druid . java . util . http . client . pool . IDENT_5 . IDENT_6 < IDENT_3 , IDENT_7 > IDENT_2 ; try { IDENT_2 = pool . get ( key ) ; } catch ( java . util . concurrent . IDENT_8 e ) { throw new java . lang . RuntimeException ( e ) ; } final IDENT_7 value = IDENT_2 . get ( ) ; return new org . apache . druid . java . util . http . client . pool . IDENT_9 < IDENT_7 > ( ) { MOD_0 final java . util . concurrent . atomic . IDENT_10 IDENT_11 = new java . util . concurrent . atomic . METHOD_4 ( false ) ; @ org . apache . druid . java . util . http . client . pool . Override public IDENT_7 get ( ) { com . google . common . base . IDENT_12 . METHOD_5 ( ( ! ( IDENT_11 . get ( ) ) ) , STRING_1 , key ) ; return value ; } @ org . apache . druid . java . util . http . client . pool . Override public void METHOD_6 ( ) { if ( IDENT_11 . METHOD_7 ( true ) ) { org . apache . druid . java . util . http . client . pool . IDENT_5 . log . warn ( org . apache . druid . java . util . common . StringUtils . format ( STRING_2 , key ) ) ; } else { IDENT_2 . METHOD_8 ( value ) ; } } @ org . apache . druid . java . util . http . client . pool . Override MOD_1 void METHOD_9 ( ) throws org . apache . druid . java . util . http . client . pool . Throwable { if ( ! ( IDENT_11 . get ( ) ) ) { org . apache . druid . java . util . http . client . pool . IDENT_5 . log . warn ( org . apache . druid . java . util . common . StringUtils . format ( STRING_3 , value , key ) ) ; METHOD_6 ( ) ; } super . METHOD_9 ( ) ; } } ; }
org . junit . Assert . assertNull ( IDENT_2 ) 