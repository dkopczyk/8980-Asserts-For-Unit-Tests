METHOD_0 ( ) { org . apache . hadoop . io . IDENT_0 row = new org . apache . hadoop . io . METHOD_1 ( "a" ) ; org . apache . hadoop . io . METHOD_1 IDENT_1 = new org . apache . hadoop . io . METHOD_1 ( "b" ) ; org . apache . hadoop . io . METHOD_1 IDENT_2 = new org . apache . hadoop . io . METHOD_1 ( STRING_0 ) ; org . apache . hadoop . io . METHOD_1 IDENT_3 = new org . apache . hadoop . io . METHOD_1 ( ) ; java . util . IDENT_4 < org . apache . accumulo . core . data . IDENT_5 , org . apache . accumulo . core . data . IDENT_6 > IDENT_7 = new java . util . METHOD_2 ( ) ; IDENT_7 . put ( new org . apache . accumulo . core . data . METHOD_3 ( row , IDENT_1 , IDENT_2 , IDENT_3 , Long . MAX_VALUE ) , new org . apache . accumulo . core . data . METHOD_4 ( STRING_1 . getBytes ( ) ) ) ; IDENT_7 . put ( new org . apache . accumulo . core . data . METHOD_3 ( row , IDENT_1 , IDENT_2 , IDENT_3 , ( ( Long . MAX_VALUE ) - 1 ) ) , new org . apache . accumulo . core . data . METHOD_4 ( STRING_2 . getBytes ( ) ) ) ; org . apache . accumulo . core . IDENT_8 . user . IDENT_9 it = new org . apache . accumulo . core . IDENT_8 . user . METHOD_5 ( ) ; org . apache . accumulo . core . client . IDENT_10 is = new org . apache . accumulo . core . client . METHOD_6 ( 1 , org . apache . accumulo . core . IDENT_8 . user . METHOD_5 . class ) ; org . apache . accumulo . core . IDENT_8 . user . METHOD_5 . METHOD_7 ( is , 1 ) ; it . init ( new org . apache . accumulo . core . IDENT_8 . METHOD_8 ( IDENT_7 ) , is . METHOD_9 ( ) , null ) ; org . apache . accumulo . core . data . METHOD_3 IDENT_11 = new org . apache . accumulo . core . data . METHOD_3 ( row , IDENT_1 , IDENT_2 , IDENT_3 , Long . MAX_VALUE ) ; org . apache . accumulo . core . data . IDENT_12 IDENT_13 = new org . apache . accumulo . core . data . METHOD_10 ( IDENT_11 , false , IDENT_11 . METHOD_11 ( IDENT_14 . IDENT_15 ) , true ) ; it . METHOD_12 ( IDENT_13 , org . apache . accumulo . core . IDENT_8 . user . IDENT_16 . IDENT_17 , false ) ; "<AssertPlaceHolder>" ; } METHOD_13 ( ) { return ( ! ( ( IDENT_18 . METHOD_14 ( ) ) && ( IDENT_18 . get ( ) . METHOD_15 ( ) ) ) ) && ( super . METHOD_13 ( ) ) ; }
org . junit . Assert . assertFalse ( it . METHOD_13 ( ) ) 