METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final java . lang . String IDENT_1 = ( ( ( org . apache . druid . storage . azure . IDENT_2 . IDENT_3 ) + "/" ) + ( org . apache . druid . storage . azure . IDENT_2 . IDENT_4 ) ) + STRING_1 ; expect ( IDENT_5 . METHOD_1 ( org . apache . druid . storage . azure . IDENT_2 . container , IDENT_1 ) ) . andReturn ( true ) ; expect ( IDENT_5 . METHOD_2 ( org . apache . druid . storage . azure . IDENT_2 . container , IDENT_1 ) ) . andReturn ( ( ( long ) ( IDENT_0 . length ( ) ) ) ) ; expect ( IDENT_5 . METHOD_3 ( org . apache . druid . storage . azure . IDENT_2 . container , IDENT_1 ) ) . andReturn ( new java . io . ByteArrayInputStream ( IDENT_0 . getBytes ( IDENT_6 . UTF_8 ) ) ) ; METHOD_4 ( ) ; final com . google . common . base . Optional < com . google . common . io . IDENT_7 > IDENT_8 = IDENT_9 . METHOD_5 ( org . apache . druid . storage . azure . IDENT_2 . IDENT_4 , 0 ) ; final java . io . StringWriter writer = new java . io . StringWriter ( ) ; org . apache . commons . io . IDENT_10 . METHOD_6 ( IDENT_8 . get ( ) . METHOD_7 ( ) , writer , STRING_2 ) ; "<AssertPlaceHolder>" ; METHOD_8 ( ) ; } toString ( ) { return ( ( ( ( ( ( ( ( ( STRING_3 + STRING_4 ) + ( query ) ) + STRING_5 ) + STRING_6 ) + ( IDENT_11 ) ) + STRING_7 ) + ( header ) ) + STRING_8 ) + ( context ) ) + STRING_9 ; }
org . junit . Assert . assertEquals ( writer . toString ( ) , IDENT_0 ) 