METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final java . lang . String IDENT_1 = ( ( org . apache . druid . storage . google . IDENT_2 . IDENT_3 ) + "/" ) + ( org . apache . druid . storage . google . IDENT_2 . IDENT_4 ) ; expect ( storage . exists ( org . apache . druid . storage . google . IDENT_2 . IDENT_5 , IDENT_1 ) ) . andReturn ( true ) ; expect ( storage . size ( org . apache . druid . storage . google . IDENT_2 . IDENT_5 , IDENT_1 ) ) . andReturn ( ( ( long ) ( IDENT_0 . length ( ) ) ) ) ; expect ( storage . get ( org . apache . druid . storage . google . IDENT_2 . IDENT_5 , IDENT_1 ) ) . andReturn ( new java . io . ByteArrayInputStream ( org . apache . druid . java . util . common . StringUtils . METHOD_1 ( IDENT_0 ) ) ) ; METHOD_2 ( ) ; final com . google . common . base . Optional < com . google . common . io . IDENT_6 > IDENT_7 = IDENT_8 . METHOD_3 ( org . apache . druid . storage . google . IDENT_2 . IDENT_4 , ( - 3 ) ) ; final java . io . StringWriter writer = new java . io . StringWriter ( ) ; org . apache . commons . io . IDENT_9 . METHOD_4 ( IDENT_7 . get ( ) . METHOD_5 ( ) , writer , STRING_1 ) ; "<AssertPlaceHolder>" ; METHOD_6 ( ) ; } toString ( ) { return ( ( ( ( ( ( ( ( ( STRING_2 + STRING_3 ) + ( query ) ) + STRING_4 ) + STRING_5 ) + ( IDENT_10 ) ) + STRING_6 ) + ( header ) ) + STRING_7 ) + ( context ) ) + STRING_8 ; }
org . junit . Assert . assertEquals ( writer . toString ( ) , IDENT_0 . substring ( ( ( IDENT_0 . length ( ) ) - 3 ) ) ) 