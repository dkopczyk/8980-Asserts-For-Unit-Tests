METHOD_0 ( ) { org . apache . druid . IDENT_0 . IDENT_1 IDENT_2 = METHOD_1 ( ) ; com . fasterxml . jackson . databind . IDENT_3 mapper = new org . apache . druid . jackson . METHOD_2 ( ) ; org . apache . druid . IDENT_0 . path . IDENT_4 IDENT_5 = new org . apache . druid . IDENT_0 . path . METHOD_3 ( mapper , null , IDENT_6 , null , false ) ; org . apache . hadoop . conf . Configuration config = new org . apache . hadoop . conf . Configuration ( ) ; org . apache . hadoop . mapreduce . IDENT_7 job = org . easymock . EasyMock . METHOD_4 ( org . apache . hadoop . mapreduce . IDENT_7 . class ) ; org . easymock . EasyMock . expect ( job . METHOD_5 ( ) ) . andReturn ( config ) . METHOD_6 ( ) ; org . easymock . EasyMock . replay ( job ) ; try { IDENT_5 . METHOD_7 ( IDENT_2 , job ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( org . apache . druid . java . util . common . IDENT_8 ex ) { } IDENT_5 = new org . apache . druid . IDENT_0 . path . METHOD_3 ( mapper , null , IDENT_6 . METHOD_8 ( true ) , null , false ) ; IDENT_5 . METHOD_7 ( IDENT_2 , job ) ; "<AssertPlaceHolder>" ; } METHOD_9 ( org . apache . hadoop . conf . Configuration ) { final java . lang . String IDENT_9 = conf . get ( org . apache . druid . IDENT_0 . hadoop . IDENT_10 . IDENT_11 ) ; if ( IDENT_9 == null ) { return java . util . Collections . emptyList ( ) ; } return IDENT_1 . IDENT_12 . METHOD_10 ( IDENT_9 , new com . fasterxml . jackson . core . type . IDENT_13 < java . util . List < java . lang . String > > ( ) { } ) ; }
org . junit . Assert . assertEquals ( java . util . Collections . emptyList ( ) , org . apache . druid . IDENT_0 . hadoop . IDENT_10 . METHOD_9 ( config ) ) 