METHOD_0 ( ) { com . google . common . collect . ImmutableMap < java . lang . String , org . apache . druid . indexing . IDENT_0 . IDENT_1 > IDENT_2 = com . google . common . collect . ImmutableMap . of ( STRING_0 , METHOD_1 ( 1 , true , true ) , STRING_1 , METHOD_1 ( 1 , true , true ) ) ; org . apache . druid . indexing . IDENT_0 . IDENT_1 IDENT_3 = IDENT_4 . METHOD_2 ( new org . apache . druid . indexing . IDENT_0 . METHOD_3 ( new org . joda . time . METHOD_4 ( STRING_2 ) ) , IDENT_2 , METHOD_5 ( STRING_3 ) ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . String ) { org . apache . druid . indexing . common . task . IDENT_5 mock = org . easymock . EasyMock . METHOD_6 ( org . apache . druid . indexing . common . task . IDENT_5 . class ) ; org . easymock . EasyMock . expect ( mock . getType ( ) ) . andReturn ( type ) . METHOD_7 ( ) ; org . easymock . EasyMock . replay ( mock ) ; return mock ; }
org . junit . Assert . assertNull ( IDENT_3 ) 