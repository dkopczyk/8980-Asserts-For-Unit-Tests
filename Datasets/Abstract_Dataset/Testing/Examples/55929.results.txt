METHOD_0 ( ) { org . apache . druid . collections . IDENT_0 . IDENT_1 IDENT_2 = new org . apache . druid . collections . IDENT_0 . METHOD_1 ( org . apache . druid . collections . IDENT_3 . METHOD_2 ( org . apache . druid . collections . IDENT_3 . METHOD_3 ( ) ) ) ; java . util . Set < java . lang . Integer > IDENT_4 = com . google . common . collect . IDENT_5 . METHOD_4 ( 6 , 9 ) ; org . apache . druid . collections . IDENT_0 . METHOD_1 IDENT_6 = new org . apache . druid . collections . IDENT_0 . METHOD_1 ( org . apache . druid . collections . IDENT_3 . METHOD_2 ( IDENT_4 ) ) ; java . util . Set < java . lang . Integer > IDENT_7 = com . google . common . collect . IDENT_5 . METHOD_5 ( IDENT_4 , org . apache . druid . collections . IDENT_3 . METHOD_3 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( java . util . Set , org . apache . druid . collections . IDENT_0 . IDENT_8 ) { java . util . Set < java . lang . Integer > IDENT_9 = new java . util . HashSet ( ) ; for ( java . lang . Integer i : new org . apache . druid . collections . IDENT_3 . METHOD_7 ( IDENT_10 . iterator ( ) ) ) { IDENT_9 . add ( i ) ; } return com . google . common . collect . IDENT_5 . METHOD_8 ( IDENT_11 , IDENT_9 ) . isEmpty ( ) ; }
org . junit . Assert . assertTrue ( org . apache . druid . collections . IDENT_3 . METHOD_6 ( METHOD_5 , ( ( org . apache . druid . collections . IDENT_0 . METHOD_1 ) ( IDENT_2 . METHOD_5 ( IDENT_6 ) ) ) ) ) 