METHOD_0 ( ) { org . apache . druid . query . filter . IDENT_0 IDENT_1 = new org . apache . druid . query . filter . METHOD_1 ( "foo" , STRING_0 , org . apache . druid . IDENT_2 . filter . IDENT_3 . IDENT_4 ) . METHOD_2 ( ) ; org . apache . druid . collections . IDENT_5 . IDENT_6 IDENT_7 = IDENT_1 . METHOD_3 ( IDENT_8 ) ; "<AssertPlaceHolder>" ; } size ( ) { if ( ( size ) < 0 ) { size = 0 ; for ( int i = 0 ; i <= ( IDENT_9 ) ; i ++ ) { int IDENT_10 = IDENT_11 [ i ] ; if ( org . apache . druid . IDENT_12 . IDENT_13 . IDENT_14 . METHOD_4 ( IDENT_10 ) ) { size += org . apache . druid . IDENT_12 . IDENT_13 . IDENT_14 . METHOD_5 ( IDENT_10 ) ; } else { if ( org . apache . druid . IDENT_12 . IDENT_13 . IDENT_14 . METHOD_6 ( IDENT_10 ) ) { if ( ! ( org . apache . druid . IDENT_12 . IDENT_13 . IDENT_14 . METHOD_7 ( IDENT_10 ) ) ) { ( size ) ++ ; } } else { size += org . apache . druid . IDENT_12 . IDENT_13 . IDENT_14 . METHOD_8 ( ( ( org . apache . druid . IDENT_12 . IDENT_13 . IDENT_14 . METHOD_9 ( IDENT_10 ) ) + 1 ) ) ; if ( ! ( org . apache . druid . IDENT_12 . IDENT_13 . IDENT_14 . METHOD_7 ( IDENT_10 ) ) ) { ( size ) OP_0 ; } } } } } return size ; }
org . junit . Assert . assertEquals ( 1 , IDENT_7 . size ( ) ) 