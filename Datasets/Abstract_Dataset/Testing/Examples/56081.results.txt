METHOD_0 ( ) { final com . fasterxml . jackson . databind . IDENT_0 IDENT_1 = org . apache . druid . IDENT_2 . IDENT_3 . METHOD_1 ( ) ; final org . apache . druid . query . IDENT_4 . IDENT_5 query = org . apache . druid . query . IDENT_6 . METHOD_2 ( ) . METHOD_3 ( "foo" ) . METHOD_4 ( STRING_0 2 ) . METHOD_5 ( IDENT_7 . IDENT_8 ) . context ( com . google . common . collect . ImmutableMap . of ( STRING_1 , STRING_2 ) ) . build ( ) ; final org . apache . druid . server . IDENT_9 . IDENT_10 IDENT_11 = org . easymock . EasyMock . METHOD_6 ( org . apache . druid . server . IDENT_9 . IDENT_10 . class ) ; org . easymock . EasyMock . expect ( IDENT_11 . METHOD_7 ( query ) ) . andReturn ( new org . apache . druid . server . IDENT_12 . METHOD_8 ( STRING_0 3 , STRING_0 1 , INT_0 ) ) . METHOD_9 ( ) ; org . easymock . EasyMock . replay ( IDENT_11 ) ; final javax . servlet . http . IDENT_13 IDENT_14 = org . easymock . EasyMock . METHOD_6 ( javax . servlet . http . IDENT_13 . class ) ; final java . io . ByteArrayInputStream IDENT_15 = new java . io . ByteArrayInputStream ( IDENT_1 . METHOD_10 ( query ) ) ; final javax . servlet . IDENT_16 IDENT_17 = new javax . servlet . METHOD_11 ( ) { MOD_0 boolean IDENT_18 ; @ org . apache . druid . server . Override public boolean METHOD_12 ( ) { return IDENT_18 ; } @ org . apache . druid . server . Override public boolean METHOD_13 ( ) { return true ; } @ org . apache . druid . server . Override public void METHOD_14 ( final javax . servlet . IDENT_19 IDENT_20 ) { } @ org . apache . druid . server . Override public int read ( ) { final int b = IDENT_15 . read ( ) ; if ( b < 0 ) { IDENT_18 = true ; } return b ; } } ; org . easymock . EasyMock . expect ( IDENT_14 . METHOD_15 ( ) ) . andReturn ( STRING_3 ) . times ( 2 ) ; IDENT_14 . METHOD_16 ( STRING_4 , IDENT_1 ) ; org . easymock . EasyMock . METHOD_17 ( ) ; org . easymock . EasyMock . expect ( IDENT_14 . METHOD_18 ( ) ) . andReturn ( STRING_5 ) ; org . easymock . EasyMock . expect ( IDENT_14 . METHOD_19 ( ) ) . andReturn ( STRING_6 ) ; org . easymock . EasyMock . expect ( IDENT_14 . METHOD_20 ( ) ) . andReturn ( IDENT_17 ) ; IDENT_14 . METHOD_16 ( STRING_0 , query ) ; IDENT_14 . METHOD_16 ( STRING_0 0 , STRING_7 ) ; IDENT_14 . METHOD_16 ( STRING_8 , STRING_0 3 ) ; org . easymock . EasyMock . METHOD_17 ( ) ; org . easymock . EasyMock . replay ( IDENT_14 ) ; final java . util . concurrent . atomic . IDENT_21 IDENT_22 = new java . util . concurrent . atomic . METHOD_21 ( ) ; final org . apache . druid . server . IDENT_23 servlet = new org . apache . druid . server . METHOD_22 ( new org . apache . druid . query . METHOD_23 ( com . google . common . collect . ImmutableMap . of ( ) ) , IDENT_1 , org . apache . druid . IDENT_2 . IDENT_3 . METHOD_24 ( ) , IDENT_11 , null , null , new org . apache . druid . server . metrics . METHOD_25 ( ) , new org . apache . druid . server . log . METHOD_26 ( ) , new org . apache . druid . query . METHOD_27 ( IDENT_1 ) , new org . apache . druid . server . security . METHOD_28 ( com . google . common . collect . ImmutableMap . of ( ) ) ) { @ org . apache . druid . server . Override MOD_1 void METHOD_29 ( final javax . servlet . http . IDENT_13 request , final javax . servlet . http . IDENT_24 response ) { IDENT_22 . METHOD_30 ( ) ; } } ; servlet . service ( IDENT_14 , null ) ; org . easymock . EasyMock . verify ( IDENT_11 , IDENT_14 ) ; "<AssertPlaceHolder>" ; } get ( ) { if ( root . METHOD_31 ( ) ) { return IDENT_25 . METHOD_32 ( ) ; } else { return org . apache . druid . java . util . common . IDENT_26 . IDENT_27 . map ( IDENT_25 . METHOD_32 ( ) , new com . google . common . base . IDENT_28 < java . lang . Object [ ] , java . lang . Object [ ] > ( ) { @ org . apache . druid . sql . calcite . IDENT_29 . Override public java . lang . Object [ ] apply ( final java . lang . Object [ ] input ) { final java . lang . Object [ ] IDENT_30 = new java . lang . Object [ root . fields . size ( ) ] ; for ( int i = 0 ; i < ( root . fields . size ( ) ) ; i ++ ) { IDENT_30 [ i ] = input [ root . fields . get ( i ) . getKey ( ) ] ; } return IDENT_30 ; } } ) ; } }
org . junit . Assert . assertEquals ( 1 , IDENT_22 . get ( ) ) 