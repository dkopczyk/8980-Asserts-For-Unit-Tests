METHOD_0 ( ) { org . apache . druid . IDENT_0 . IDENT_1 entry = new org . apache . druid . IDENT_0 . METHOD_1 ( STRING_0 , STRING_1 , new org . apache . druid . IDENT_0 . METHOD_2 ( STRING_2 , STRING_3 , STRING_4 ) , STRING_5 , org . apache . druid . java . util . common . IDENT_2 . of ( STRING_6 ) ) ; com . fasterxml . jackson . databind . IDENT_3 mapper = new org . apache . druid . jackson . METHOD_3 ( ) ; org . apache . druid . IDENT_0 . METHOD_1 IDENT_4 = mapper . METHOD_4 ( mapper . METHOD_5 ( entry ) , org . apache . druid . IDENT_0 . METHOD_1 . class ) ; "<AssertPlaceHolder>" ; } of ( java . lang . String ) { try { return new org . joda . time . METHOD_6 ( IDENT_5 , org . joda . time . IDENT_6 . IDENT_7 . METHOD_7 ( ) ) ; } catch ( java . lang . IllegalArgumentException ex ) { try { return new org . joda . time . METHOD_6 ( java . lang . Long . valueOf ( IDENT_5 ) , org . joda . time . IDENT_6 . IDENT_7 . METHOD_7 ( ) ) ; } catch ( java . lang . IllegalArgumentException IDENT_8 ) { throw ex ; } } }
org . junit . Assert . assertEquals ( entry , IDENT_4 ) 