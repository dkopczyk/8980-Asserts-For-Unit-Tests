METHOD_0 ( ) { java . lang . String text = STRING_0 ; IDENT_0 . METHOD_1 ( text ) ; uk . gov . IDENT_1 . IDENT_2 . types . IDENT_3 . IDENT_4 IDENT_5 = new uk . gov . IDENT_1 . IDENT_2 . types . IDENT_3 . METHOD_2 ( IDENT_0 ) ; IDENT_5 . METHOD_3 ( ) ; uk . gov . IDENT_1 . IDENT_2 . types . common . Person p = new uk . gov . IDENT_1 . IDENT_2 . types . common . Person ( IDENT_0 ) ; p . METHOD_4 ( 0 ) ; p . METHOD_5 ( 4 ) ; p . METHOD_6 ( IDENT_5 ) ; p . setValue ( STRING_1 ) ; p . METHOD_3 ( ) ; uk . gov . IDENT_1 . IDENT_2 . types . common . Person IDENT_6 = new uk . gov . IDENT_1 . IDENT_2 . types . common . Person ( IDENT_0 ) ; IDENT_6 . METHOD_4 ( INT_0 ) ; IDENT_6 . METHOD_5 ( 16 ) ; IDENT_6 . METHOD_6 ( IDENT_5 ) ; IDENT_6 . setValue ( STRING_2 ) ; IDENT_6 . METHOD_3 ( ) ; uk . gov . IDENT_1 . IDENT_2 . types . IDENT_3 . IDENT_7 l = new uk . gov . IDENT_1 . IDENT_2 . types . IDENT_3 . METHOD_7 ( IDENT_0 ) ; l . METHOD_4 ( text . indexOf ( STRING_3 ) ) ; l . METHOD_5 ( ( ( l . METHOD_8 ( ) ) + ( STRING_3 . length ( ) ) ) ) ; l . setValue ( STRING_3 ) ; l . METHOD_3 ( ) ; METHOD_9 ( ) ; java . util . List < uk . gov . IDENT_1 . IDENT_2 . types . IDENT_3 . Entity > list = new java . util . ArrayList ( org . apache . IDENT_8 . IDENT_9 . util . IDENT_10 . select ( IDENT_0 , uk . gov . IDENT_1 . IDENT_2 . types . IDENT_3 . Entity . class ) ) ; "<AssertPlaceHolder>" ; } size ( ) { return ( ( int ) ( METHOD_10 ( ) . count ( ) ) ) ; }
org . junit . Assert . assertEquals ( 3 , list . size ( ) ) 