METHOD_0 ( ) { METHOD_1 ( ) ; final java . lang . String IDENT_0 = METHOD_2 ( false , false ) ; final java . lang . String IDENT_1 = METHOD_3 ( IDENT_0 ) ; final char [ ] IDENT_2 = METHOD_4 ( ) ; final com . IDENT_3 . IDENT_4 . IDENT_5 IDENT_6 = METHOD_5 ( IDENT_2 ) ; final java . lang . String IDENT_7 = METHOD_6 ( ) ; final java . util . Set < com . IDENT_3 . IDENT_4 . IDENT_8 > IDENT_9 = IDENT_10 . METHOD_7 ( IDENT_6 , IDENT_0 , IDENT_7 ) ; "<AssertPlaceHolder>" ; IDENT_10 . METHOD_8 ( IDENT_6 , com . IDENT_3 . IDENT_4 . IDENT_11 . newInstance ( IDENT_2 ) ) ; if ( IDENT_10 . METHOD_9 ( IDENT_6 , IDENT_0 , IDENT_7 , com . IDENT_3 . IDENT_4 . IDENT_12 . getInstance ( com . IDENT_3 . IDENT_4 . IDENT_13 . getInstance ( IDENT_1 ) ) ) ) { org . junit . Assert . fail ( STRING_0 ) ; } if ( IDENT_10 . METHOD_9 ( IDENT_6 , IDENT_0 , IDENT_7 , METHOD_10 ( com . IDENT_3 . IDENT_4 . IDENT_12 . getInstance ( com . IDENT_3 . IDENT_4 . IDENT_13 . getInstance ( IDENT_1 ) ) ) ) ) { org . junit . Assert . fail ( STRING_0 ) ; } } METHOD_7 ( com . IDENT_3 . IDENT_4 . IDENT_5 , java . lang . String , java . lang . String ) { com . IDENT_3 . IDENT_4 . sql . internal . IDENT_14 . IDENT_15 connection = null ; METHOD_11 ( ) ; METHOD_12 ( IDENT_6 ) ; METHOD_13 ( IDENT_0 ) ; METHOD_14 ( IDENT_7 ) ; try { connection = METHOD_15 ( ) ; IDENT_6 = METHOD_16 ( connection , IDENT_6 ) ; METHOD_17 ( connection , IDENT_6 ) ; IDENT_0 = IDENT_0 . trim ( ) ; IDENT_7 = IDENT_7 . trim ( ) ; return METHOD_18 ( connection , IDENT_6 , IDENT_0 , IDENT_7 ) ; } finally { METHOD_19 ( connection ) ; } }
org . junit . Assert . assertThat ( IDENT_9 . isEmpty ( ) , org . hamcrest . CoreMatchers . is ( true ) ) 