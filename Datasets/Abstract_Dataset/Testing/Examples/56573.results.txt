METHOD_0 ( ) { com . sun . IDENT_0 . test . app . util . IDENT_1 . IDENT_2 . METHOD_1 ( new com . sun . IDENT_0 . test . app . util . IDENT_1 . METHOD_2 ( new com . sun . IDENT_0 . test . util . METHOD_3 ( ) { public void run ( ) { try { set . addAll ( null ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . lang . IDENT_3 e ) { } set . add ( 1 ) ; set . add ( 2 ) ; set . add ( 3 ) ; java . util . Set < java . lang . Object > other = new java . util . HashSet < java . lang . Object > ( ) ; other . add ( null ) ; other . add ( 3 ) ; other . add ( 4 ) ; other . add ( 5 ) ; set . addAll ( other ) ; "<AssertPlaceHolder>" ; set . contains ( 4 ) ; set . contains ( 5 ) ; } } ) , com . sun . IDENT_0 . test . app . util . IDENT_1 . IDENT_4 ) ; } size ( ) { int size = 0 ; com . sun . IDENT_0 . app . util . IDENT_5 . Element < IDENT_6 > n = METHOD_4 ( ) ; while ( n != null ) { size ++ ; n = n . next ( ) ; } return size ; }
org . junit . Assert . assertEquals ( 6 , set . size ( ) ) 