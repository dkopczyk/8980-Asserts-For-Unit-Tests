METHOD_0 ( ) { com . sun . IDENT_0 . impl . service . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = new com . sun . IDENT_0 . impl . service . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( new com . sun . IDENT_0 . test . impl . service . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_2 ( com . sun . IDENT_0 . test . impl . service . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_2 . IDENT_7 ) , IDENT_8 , com . sun . IDENT_0 . test . impl . service . IDENT_1 . IDENT_2 . IDENT_6 . METHOD_2 . IDENT_7 , props ) ; IDENT_5 . METHOD_3 ( 1 ) ; int count = 0 ; while ( ( server . METHOD_4 ( ) ) < 1 ) { java . lang . Thread . sleep ( 5 ) ; if ( ( ++ count ) > ( com . sun . IDENT_0 . test . impl . service . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_9 ) ) { org . junit . Assert . fail ( STRING_0 ) ; } } IDENT_5 . METHOD_5 ( 1 ) ; IDENT_5 . METHOD_5 ( 1 ) ; count = 0 ; while ( ( server . METHOD_6 ( ) ) < 1 ) { java . lang . Thread . sleep ( 5 ) ; if ( ( ++ count ) > ( com . sun . IDENT_0 . test . impl . service . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_9 ) ) { org . junit . Assert . fail ( STRING_0 ) ; } } java . lang . Thread . sleep ( 50 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( int ) { com . sun . IDENT_0 . impl . service . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 . IDENT_10 IDENT_11 = new com . sun . IDENT_0 . impl . service . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 . METHOD_7 ( IDENT_12 ) ; java . lang . String name = STRING_1 + IDENT_12 ; new java . lang . Thread ( IDENT_11 , name ) . start ( ) ; }
org . junit . Assert . assertEquals ( 1 , server . METHOD_6 ( ) ) 