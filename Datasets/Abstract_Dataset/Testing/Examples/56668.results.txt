METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; try { final com . sun . IDENT_1 . test . util . IDENT_2 server = new com . sun . IDENT_1 . test . util . METHOD_1 ( IDENT_0 , null , METHOD_2 ( IDENT_0 ) ) ; final com . sun . IDENT_1 . test . util . METHOD_1 node = new com . sun . IDENT_1 . test . util . METHOD_1 ( server , null , null ) ; System . err . println ( ( STRING_1 + ( server . METHOD_3 ( ) ) ) ) ; System . err . println ( ( STRING_2 + ( node . METHOD_3 ( ) ) ) ) ; server . METHOD_4 ( ) . METHOD_5 ( node . METHOD_3 ( ) , com . sun . IDENT_1 . service . IDENT_3 . class . getName ( ) ) ; com . sun . IDENT_1 . kernel . IDENT_4 IDENT_5 = server . METHOD_6 ( ) . METHOD_7 ( com . sun . IDENT_1 . kernel . IDENT_4 . class ) ; com . sun . IDENT_1 . auth . IDENT_6 IDENT_7 = server . METHOD_8 ( ) . METHOD_9 ( ) ; IDENT_5 . METHOD_10 ( new com . sun . IDENT_1 . test . util . METHOD_11 ( ) { public void run ( ) throws com . sun . IDENT_1 . test . impl . service . IDENT_8 . Exception { "<AssertPlaceHolder>" ; } } , IDENT_7 ) ; try { IDENT_5 = node . METHOD_6 ( ) . METHOD_7 ( com . sun . IDENT_1 . kernel . IDENT_4 . class ) ; IDENT_7 = node . METHOD_8 ( ) . METHOD_9 ( ) ; IDENT_5 . METHOD_10 ( new com . sun . IDENT_1 . test . util . METHOD_11 ( ) { public void run ( ) throws com . sun . IDENT_1 . test . impl . service . IDENT_8 . Exception { if ( node . METHOD_4 ( ) . METHOD_12 ( ) ) { org . junit . Assert . fail ( ( STRING_3 + STRING_4 ) ) ; } } } , IDENT_7 ) ; } catch ( java . lang . IllegalStateException IDENT_9 ) { } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( STRING_5 ) ; } } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( STRING_6 ) ; } } METHOD_4 ( ) { return IDENT_10 . METHOD_13 ( com . sun . IDENT_1 . service . IDENT_3 . class ) ; }
org . junit . Assert . assertTrue ( server . METHOD_4 ( ) . METHOD_12 ( ) ) 