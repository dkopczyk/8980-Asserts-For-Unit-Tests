METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . core . model . Entity entity = new IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . core . model . Entity ( ) ; org . easymock . EasyMock . expect ( IDENT_4 . METHOD_1 ( ) ) . andReturn ( "1" ) ; IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . core . model . Entity IDENT_5 = new IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . core . model . Entity ( ) ; IDENT_5 . setId ( "1" ) ; org . easymock . EasyMock . expect ( dao . save ( entity ) ) . andReturn ( IDENT_5 ) . METHOD_2 ( ) ; org . easymock . EasyMock . replay ( IDENT_4 , dao ) ; "<AssertPlaceHolder>" ; org . easymock . EasyMock . verify ( IDENT_4 , dao ) ; } save ( IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_7 . business . vo . IDENT_8 ) { java . util . List < ? extends IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_7 . business . vo . IDENT_8 > IDENT_9 = METHOD_3 ( IDENT_10 . METHOD_4 ( ) , IDENT_10 . METHOD_5 ( ) ) ; if ( org . apache . commons . collections . IDENT_11 . isEmpty ( IDENT_9 ) ) { IDENT_10 . METHOD_6 ( true ) ; } return super . save ( IDENT_10 ) ; }
org . junit . Assert . assertEquals ( IDENT_5 , manager . save ( entity ) ) 