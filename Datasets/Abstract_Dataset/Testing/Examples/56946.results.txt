METHOD_0 ( ) { java . io . File IDENT_0 = METHOD_1 ( STRING_0 5 ) ; IDENT_1 = new java . lang . String [ ] { STRING_0 2 , STRING_0 8 , STRING_1 , STRING_2 , STRING_3 , IDENT_0 . getAbsolutePath ( ) , STRING_0 9 , ( IDENT_2 . getAbsolutePath ( ) ) + STRING_4 , STRING_5 , IDENT_2 . getAbsolutePath ( ) , STRING_0 4 , STRING_1 1 , STRING_0 3 , STRING_0 0 , STRING_0 7 , IDENT_2 . getAbsolutePath ( ) , STRING_6 , IDENT_3 . getAbsolutePath ( ) , STRING_0 1 , STRING_7 , STRING_8 , STRING_1 0 } ; METHOD_2 ( ) ; METHOD_3 ( IDENT_1 , IDENT_3 ) ; IDENT_4 = ( IDENT_2 . getAbsolutePath ( ) ) + STRING_9 ; IDENT_5 = new java . io . File ( IDENT_4 ) ; "<AssertPlaceHolder>" ; try { IDENT_6 = getClass ( IDENT_3 , STRING_0 6 ) ; IDENT_6 . METHOD_4 ( STRING_0 ) ; } catch ( java . net . IDENT_7 e ) { } catch ( java . lang . IDENT_8 e ) { } catch ( java . lang . IDENT_9 e ) { } } exists ( ) { return IDENT_10 . exists ( ) ; }
org . junit . Assert . assertTrue ( IDENT_5 . exists ( ) ) 