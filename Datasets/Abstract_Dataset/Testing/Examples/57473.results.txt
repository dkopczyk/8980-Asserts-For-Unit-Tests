test ( ) { if ( ( io . IDENT_0 . IDENT_1 . find ( org . tests . model . IDENT_2 . IDENT_3 . class ) . METHOD_0 ( ) ) > 0 ) { return ; } org . tests . model . IDENT_2 . IDENT_3 root = new org . tests . model . IDENT_2 . METHOD_1 ( STRING_0 , null ) ; org . tests . model . IDENT_2 . METHOD_1 IDENT_4 = new org . tests . model . IDENT_2 . METHOD_1 ( STRING_1 , root ) ; org . tests . model . IDENT_2 . METHOD_1 IDENT_5 = new org . tests . model . IDENT_2 . METHOD_1 ( STRING_2 , IDENT_4 ) ; org . tests . model . IDENT_2 . METHOD_1 IDENT_6 = new org . tests . model . IDENT_2 . METHOD_1 ( STRING_3 , IDENT_5 ) ; org . tests . model . IDENT_2 . METHOD_1 IDENT_7 = new org . tests . model . IDENT_2 . METHOD_1 ( STRING_4 , IDENT_4 ) ; org . tests . model . IDENT_2 . METHOD_1 IDENT_8 = new org . tests . model . IDENT_2 . METHOD_1 ( STRING_5 , root ) ; org . tests . model . IDENT_2 . METHOD_1 IDENT_9 = new org . tests . model . IDENT_2 . METHOD_1 ( STRING_6 , IDENT_8 ) ; org . tests . model . IDENT_2 . METHOD_1 IDENT_10 = new org . tests . model . IDENT_2 . METHOD_1 ( STRING_7 , IDENT_8 ) ; io . IDENT_0 . IDENT_1 . save ( root ) ; io . IDENT_0 . IDENT_1 . save ( IDENT_4 ) ; io . IDENT_0 . IDENT_1 . save ( IDENT_5 ) ; io . IDENT_0 . IDENT_1 . save ( IDENT_6 ) ; io . IDENT_0 . IDENT_1 . save ( IDENT_7 ) ; io . IDENT_0 . IDENT_1 . save ( IDENT_8 ) ; io . IDENT_0 . IDENT_1 . save ( IDENT_9 ) ; io . IDENT_0 . IDENT_1 . save ( IDENT_10 ) ; java . util . List < org . tests . model . IDENT_2 . METHOD_1 > IDENT_11 = io . IDENT_0 . IDENT_1 . find ( org . tests . model . IDENT_2 . METHOD_1 . class ) . METHOD_2 ( ) . eq ( STRING_8 , null ) . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; org . tests . query . other . IDENT_12 . METHOD_4 ( IDENT_11 . get ( 0 ) ) ; } size ( ) { return IDENT_13 . size ( ) ; }
org . junit . Assert . assertEquals ( 1 , IDENT_11 . size ( ) ) 