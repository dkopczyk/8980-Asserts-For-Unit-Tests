METHOD_0 ( ) { java . io . IDENT_0 IDENT_1 = null ; try { if ( IDENT_2 . METHOD_1 ( ) . METHOD_2 ( STRING_0 ) ) { IDENT_1 = new java . io . METHOD_3 ( new java . util . IDENT_3 . METHOD_4 ( IDENT_2 . METHOD_5 ( ) ) ) ; } else if ( IDENT_2 . METHOD_1 ( ) . METHOD_2 ( STRING_1 ) ) { IDENT_1 = new java . io . METHOD_3 ( new java . util . IDENT_3 . METHOD_6 ( IDENT_2 . METHOD_5 ( ) ) ) ; } else { IDENT_1 = new java . io . METHOD_3 ( IDENT_2 . METHOD_5 ( ) ) ; } java . util . Map < uk . ac . IDENT_4 . IDENT_5 . IDENT_6 . model . IDENT_7 , uk . ac . IDENT_4 . IDENT_5 . IDENT_6 . io . IDENT_8 . xml . IDENT_5 . IDENT_9 > IDENT_10 = IDENT_11 . METHOD_7 ( IDENT_1 ) ; IDENT_12 . serialize ( IDENT_10 ) ; java . util . Map < uk . ac . IDENT_4 . IDENT_5 . IDENT_6 . model . IDENT_7 , uk . ac . IDENT_4 . IDENT_5 . IDENT_6 . io . METHOD_7 . xml . IDENT_5 . IDENT_9 > IDENT_13 = IDENT_12 . METHOD_8 ( ) ; "<AssertPlaceHolder>" ; } finally { if ( IDENT_1 != null ) IDENT_1 . close ( ) ; } } equals ( java . lang . Object ) { if ( null == o ) return true ; if ( ! ( o instanceof uk . ac . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_14 . IDENT_15 ) ) return false ; uk . ac . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_14 . IDENT_15 that = ( ( uk . ac . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_14 . IDENT_15 ) ( o ) ) ; if ( ( IDENT_16 ) != null ? ! ( IDENT_16 . equals ( that . IDENT_16 ) ) : ( that . IDENT_16 ) != null ) return false ; return true ; }
org . junit . Assert . assertTrue ( IDENT_10 . equals ( IDENT_13 ) ) 