METHOD_0 ( ) { final int start = 4 ; final int end = INT_0 ; final java . lang . String IDENT_0 = STRING_0 ; final java . lang . String IDENT_1 = STRING_1 ; OP_0 INT_0 final java . lang . String IDENT_2 = STRING_2 ; uk . ac . IDENT_3 . IDENT_4 . IDENT_5 . model . IDENT_6 . IDENT_1 . IDENT_7 IDENT_8 = new uk . ac . IDENT_3 . IDENT_4 . IDENT_5 . model . IDENT_6 . IDENT_1 . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; } decode ( java . lang . String , java . lang . String , int , int ) { if ( IDENT_0 == null ) { throw new java . lang . METHOD_2 ( STRING_3 ) ; } if ( IDENT_9 == null ) { throw new java . lang . METHOD_2 ( STRING_4 ) ; } if ( start < 1 ) { throw new java . lang . IllegalArgumentException ( STRING_5 ) ; } if ( end < 1 ) { throw new java . lang . IllegalArgumentException ( STRING_6 ) ; } if ( start > end ) { throw new java . lang . IllegalArgumentException ( STRING_7 ) ; } java . lang . String IDENT_10 = IDENT_0 . substring ( ( start - 1 ) , end ) ; return decode ( IDENT_10 , IDENT_9 ) ; }
org . junit . Assert . assertEquals ( IDENT_1 , IDENT_8 . decode ( IDENT_0 , IDENT_2 , start , end ) ) 