METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . transport . IDENT_2 connect = org . apache . activemq . IDENT_3 . IDENT_4 . transport . IDENT_5 . connect ( STRING_0 ) ; connect . METHOD_1 ( org . IDENT_0 . IDENT_1 . IDENT_6 . METHOD_2 ( ) ) ; org . IDENT_0 . IDENT_1 . internal . util . IDENT_7 IDENT_8 = new org . IDENT_0 . IDENT_1 . internal . util . METHOD_3 ( 1 ) ; connect . start ( IDENT_8 ) ; IDENT_8 . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; IDENT_8 = new org . IDENT_0 . IDENT_1 . internal . util . METHOD_3 ( 1 ) ; connect . METHOD_5 ( IDENT_8 ) ; IDENT_8 . METHOD_4 ( ) ; } start ( org . IDENT_0 . IDENT_1 . IDENT_9 ) { METHOD_6 ( ) . execute ( new org . IDENT_0 . IDENT_1 . METHOD_7 ( ) { public void run ( ) { if ( ( ( IDENT_10 ) == ( org . apache . activemq . IDENT_3 . util . IDENT_11 . IDENT_12 ) ) || ( ( IDENT_10 ) == ( org . apache . activemq . IDENT_3 . util . IDENT_11 . IDENT_13 ) ) ) { final org . apache . activemq . IDENT_3 . util . IDENT_11 . IDENT_14 state = new org . apache . activemq . IDENT_3 . util . IDENT_11 . METHOD_8 ( ) ; state . add ( IDENT_15 ) ; IDENT_10 = state ; METHOD_9 ( new org . IDENT_0 . IDENT_1 . METHOD_7 ( ) { public void run ( ) { IDENT_10 = org . apache . activemq . IDENT_3 . util . IDENT_11 . IDENT_16 ; state . METHOD_10 ( ) ; } } ) ; } else if ( ( IDENT_10 ) instanceof org . apache . activemq . IDENT_3 . util . IDENT_11 . METHOD_8 ) { ( ( org . apache . activemq . IDENT_3 . util . IDENT_11 . METHOD_8 ) ( IDENT_10 ) ) . add ( IDENT_15 ) ; } else if ( ( IDENT_10 ) == ( org . apache . activemq . IDENT_3 . util . IDENT_11 . IDENT_16 ) ) { if ( IDENT_15 != null ) { IDENT_15 . run ( ) ; } } else { if ( IDENT_15 != null ) { IDENT_15 . run ( ) ; } error ( ( STRING_1 + ( IDENT_10 ) ) ) ; } } } ) ; }
org . junit . Assert . assertNotNull ( connect ) 