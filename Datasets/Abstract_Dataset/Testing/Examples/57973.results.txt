METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . Object > expected = new java . util . HashMap ( ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_0 = new java . util . HashMap ( ) ; IDENT_0 . put ( STRING_0 , new java . util . HashMap ( ) ) ; expected . put ( "/" , IDENT_0 ) ; java . util . Map < ? , ? > actual = IDENT_1 . METHOD_1 ( org . eclipse . IDENT_2 . json . test . IDENT_3 . IDENT_4 , java . util . Map . class ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . Class ) { try { if ( ( IDENT_5 ) == null ) IDENT_5 = METHOD_2 ( ) ; if ( IDENT_6 != null ) { return IDENT_5 . METHOD_3 ( string , IDENT_6 ) ; } @ org . eclipse . IDENT_2 . json . METHOD_4 ( STRING_1 ) IDENT_7 result = ( ( IDENT_7 ) ( IDENT_5 . METHOD_3 ( string , java . lang . Object . class ) ) ) ; return result ; } catch ( com . fasterxml . jackson . databind . IDENT_8 | java . lang . IllegalArgumentException ex ) { if ( ( ( ex instanceof com . fasterxml . jackson . databind . IDENT_8 ) && ( ex . getMessage ( ) . contains ( org . eclipse . IDENT_2 . json . IDENT_9 . IDENT_10 ) ) ) || ( ( ex instanceof java . lang . IllegalArgumentException ) && ( ( ex . METHOD_5 ( ) ) instanceof java . lang . IDENT_11 ) ) ) { try { if ( ( IDENT_12 ) == null ) IDENT_12 = METHOD_6 ( ) ; return IDENT_12 . METHOD_3 ( string , IDENT_6 ) ; } catch ( java . lang . Exception IDENT_13 ) { throw ex ; } } throw ex ; } }
org . junit . Assert . assertEquals ( expected , actual ) 