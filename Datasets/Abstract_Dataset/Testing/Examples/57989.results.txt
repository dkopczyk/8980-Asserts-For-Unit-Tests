METHOD_0 ( ) { IDENT_0 . METHOD_1 ( STRING_0 , true ) ; IDENT_0 . close ( ) ; IDENT_0 . METHOD_2 ( false ) ; "<AssertPlaceHolder>" ; IDENT_0 . METHOD_1 ( STRING_1 , true ) ; } METHOD_1 ( java . lang . String , boolean ) { METHOD_3 ( ) ; java . lang . String IDENT_1 = org . eclipse . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_4 ( IDENT_5 ) ; org . eclipse . IDENT_2 . analysis . api . tree . IDENT_6 IDENT_7 = tree . METHOD_5 ( IDENT_1 ) ; if ( IDENT_7 != null ) { if ( IDENT_7 . METHOD_6 ( ) ) { org . eclipse . IDENT_2 . analysis . api . tree . IDENT_8 g = ( ( org . eclipse . IDENT_2 . analysis . api . tree . IDENT_8 ) ( IDENT_7 . METHOD_7 ( ) ) ) ; if ( ( ! ( g . METHOD_8 ( ) ) ) && ( ( METHOD_9 ( IDENT_1 ) ) != ( org . eclipse . IDENT_2 . IDENT_9 . IDENT_3 . IDENT_10 . IDENT_11 ) ) ) { if ( ! ( IDENT_1 . METHOD_10 ( Node . IDENT_12 ) ) ) { IDENT_1 += org . eclipse . IDENT_2 . analysis . api . tree . Node . IDENT_12 ; } METHOD_11 ( IDENT_1 , g ) ; } return g ; } throw new org . eclipse . IDENT_2 . IDENT_3 . METHOD_12 ( ( ( STRING_2 + IDENT_1 ) + STRING_3 ) ) ; } org . eclipse . IDENT_2 . IDENT_9 . IDENT_3 . IDENT_10 . IDENT_13 node = METHOD_13 ( IDENT_5 , IDENT_14 ) ; return ( ( org . eclipse . IDENT_2 . analysis . api . tree . IDENT_8 ) ( ( node . name ) == null ? null : node . node ) ) ; }
org . junit . Assert . assertNotNull ( IDENT_0 . METHOD_1 ( STRING_0 , false ) ) 