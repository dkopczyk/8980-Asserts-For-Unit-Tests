METHOD_0 ( ) { org . eclipse . collections . api . map . IDENT_0 < java . lang . Integer , java . lang . Integer > IDENT_1 = org . eclipse . collections . impl . IDENT_2 . IDENT_3 . IDENT_4 . toList ( ) . METHOD_0 ( ( IDENT_5 ) -> IDENT_5 OP_0 2 , ( ) -> 0 , Integer :: IDENT_6 ) ; org . eclipse . collections . api . map . IDENT_0 < java . lang . Integer , java . lang . Integer > IDENT_7 = org . eclipse . collections . impl . IDENT_2 . IDENT_3 . IDENT_4 . stream ( ) . collect ( org . eclipse . collections . impl . IDENT_2 . IDENT_8 . METHOD_0 ( ( IDENT_5 ) -> IDENT_5 OP_0 2 , ( ) -> 0 , Integer :: IDENT_6 , org . eclipse . collections . impl . factory . IDENT_9 . mutable :: empty ) ) ; "<AssertPlaceHolder>" ; } METHOD_0 ( org . eclipse . collections . api . block . function . IDENT_10 , org . eclipse . collections . api . block . function . IDENT_11 , org . eclipse . collections . api . block . function . IDENT_12 , java . util . function . IDENT_13 ) { return java . util . stream . IDENT_14 . of ( IDENT_15 , ( map , IDENT_5 ) -> { map . METHOD_1 ( IDENT_16 . valueOf ( IDENT_5 ) , IDENT_17 , IDENT_18 , IDENT_5 ) ; } , ( IDENT_19 , IDENT_20 ) -> { IDENT_20 . METHOD_2 ( ( key , value ) -> IDENT_19 . METHOD_1 ( key , IDENT_17 , IDENT_18 , value ) ) ; return IDENT_19 ; } , org . eclipse . collections . impl . IDENT_2 . IDENT_8 . IDENT_21 ) ; }
org . junit . Assert . assertEquals ( IDENT_1 , IDENT_7 ) 