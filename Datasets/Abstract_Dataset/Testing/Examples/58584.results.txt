METHOD_0 ( ) { org . eclipse . collections . impl . math . IDENT_0 result = new org . eclipse . collections . impl . math . METHOD_1 ( 0 ) ; java . lang . Integer parameter = 2 ; java . util . List < java . lang . Integer > IDENT_1 = org . eclipse . collections . impl . list . IDENT_2 . METHOD_2 ( INT_0 ) ; org . eclipse . collections . api . block . function . IDENT_3 < org . eclipse . collections . impl . math . IDENT_0 , java . lang . Integer , java . lang . Integer , org . eclipse . collections . impl . math . IDENT_0 > function = ( IDENT_4 , element , IDENT_5 ) -> IDENT_4 . add ( ( ( ( element . METHOD_3 ( ) ) - ( element . METHOD_3 ( ) ) ) * ( IDENT_5 . METHOD_3 ( ) ) ) ) ; org . eclipse . collections . impl . math . IDENT_0 IDENT_6 = org . eclipse . collections . impl . IDENT_7 . IDENT_8 . METHOD_4 ( result , IDENT_1 , function , parameter ) ; "<AssertPlaceHolder>" ; } getValue ( ) { return this . value ; }
org . junit . Assert . assertEquals ( 0 , IDENT_6 . getValue ( ) . METHOD_3 ( ) ) 