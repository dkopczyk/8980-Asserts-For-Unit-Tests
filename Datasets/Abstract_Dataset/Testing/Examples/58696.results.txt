METHOD_0 ( ) { org . eclipse . swt . IDENT_0 . IDENT_1 IDENT_2 = new org . eclipse . swt . IDENT_0 . METHOD_1 ( IDENT_3 . IDENT_4 , 10 , org . eclipse . swt . IDENT_5 . IDENT_6 ) ; org . eclipse . swt . IDENT_0 . METHOD_1 IDENT_7 = new org . eclipse . swt . IDENT_0 . METHOD_1 ( IDENT_2 . toString ( ) ) ; "<AssertPlaceHolder>" ; } toString ( ) { switch ( type ) { case IDENT_8 . IDENT_9 : return ( STRING_0 + ( IDENT_10 ) ) + STRING_1 ; case IDENT_8 . IDENT_11 : return ( STRING_2 0 + ( IDENT_12 ) ) + STRING_1 ; case IDENT_8 . IDENT_13 : return ( STRING_2 5 + ( IDENT_14 ) ) + STRING_1 ; case IDENT_8 . IDENT_15 : return ( STRING_3 + ( IDENT_16 ) ) + STRING_1 ; case IDENT_8 . IDENT_17 : return ( STRING_4 + ( IDENT_18 ) ) + STRING_1 ; case IDENT_8 . IDENT_19 : return ( STRING_2 2 + ( IDENT_20 ) ) + STRING_1 ; case IDENT_8 . IDENT_21 : return ( STRING_2 3 + ( IDENT_22 ) ) + STRING_1 ; case IDENT_8 . IDENT_23 : return ( STRING_2 + ( IDENT_24 ) ) + STRING_1 ; case IDENT_8 . IDENT_25 : return ( STRING_5 + ( IDENT_26 ) ) + STRING_1 ; case IDENT_8 . IDENT_27 : return ( STRING_2 4 + ( ( IDENT_28 ) == null ? 0 : IDENT_28 . METHOD_2 ( ) ) ) + STRING_1 ; case IDENT_8 . IDENT_29 : return ( STRING_2 6 + ( ( IDENT_30 ) == null ? 0 : IDENT_30 . METHOD_2 ( ) ) ) + STRING_1 ; case IDENT_8 . IDENT_31 : return STRING_6 ; case IDENT_8 . IDENT_32 : return STRING_7 ; } if ( ( ( type ) & ( IDENT_8 . IDENT_33 ) ) != 0 ) { return ( ( ( STRING_2 1 + ( ( type ) & ( OP_0 ( IDENT_8 . IDENT_33 ) ) ) ) + STRING_8 ) + ( IDENT_34 ) ) + STRING_1 ; } return STRING_9 + ( type ) ; }
org . junit . Assert . assertEquals ( IDENT_2 , IDENT_7 ) 