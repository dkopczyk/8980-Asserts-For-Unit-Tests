METHOD_0 ( ) { java . lang . String [ ] IDENT_0 = new java . lang . String [ ] { "" , STRING_0 , STRING_1 } ; for ( int i = 0 ; i < ( IDENT_0 . length ) ; i ++ ) { IDENT_1 . METHOD_1 ( IDENT_0 [ i ] ) ; "<AssertPlaceHolder>" ; } } getText ( ) { java . util . List < org . eclipse . swt . IDENT_2 . IDENT_3 > IDENT_4 = IDENT_5 . IDENT_6 ; int length = org . eclipse . swt . IDENT_2 . IDENT_7 . size ( IDENT_4 ) ; if ( length > 0 ) { java . lang . String IDENT_8 = "" ; org . eclipse . swt . IDENT_2 . IDENT_9 IDENT_10 = org . eclipse . swt . IDENT_2 . IDENT_7 . METHOD_2 ( IDENT_11 ) ; if ( ( IDENT_10 != null ) && ( ( IDENT_10 . IDENT_12 ) != 0 ) ) { long IDENT_13 = org . eclipse . swt . IDENT_2 . IDENT_14 . call ( IDENT_10 . IDENT_12 , IDENT_11 ) ; if ( ( IDENT_13 > 0 ) && ( ( IDENT_10 . IDENT_15 ) != 0 ) ) { long IDENT_16 = org . eclipse . swt . IDENT_2 . IDENT_14 . call ( IDENT_10 . IDENT_15 , IDENT_11 , 0 , IDENT_13 ) ; if ( IDENT_16 != 0 ) { IDENT_8 = org . eclipse . swt . IDENT_2 . IDENT_7 . getString ( IDENT_16 ) ; org . eclipse . swt . IDENT_2 . IDENT_17 . METHOD_3 ( IDENT_16 ) ; } } } org . eclipse . swt . IDENT_2 . IDENT_18 event = new org . eclipse . swt . IDENT_2 . METHOD_4 ( IDENT_5 ) ; event . IDENT_19 = id ; event . result = IDENT_8 ; for ( int i = 0 ; i < length ; i ++ ) { org . eclipse . swt . IDENT_2 . IDENT_3 listener = IDENT_4 . get ( i ) ; listener . getValue ( event ) ; } return event . result ; } return null ; }
org . junit . Assert . assertEquals ( IDENT_1 . getText ( ) , IDENT_0 [ i ] ) 