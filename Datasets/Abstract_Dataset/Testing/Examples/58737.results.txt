METHOD_0 ( ) { final java . lang . String IDENT_0 = "test" ; final java . lang . String [ ] IDENT_1 = new java . lang . String [ ] { IDENT_0 , IDENT_0 + "1" , IDENT_0 + "2" } ; try { IDENT_2 . METHOD_1 ( ( ( java . lang . String [ ] ) ( null ) ) ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . lang . IllegalArgumentException e ) { } int IDENT_3 = table . METHOD_2 ( ) ; if ( IDENT_3 < ( IDENT_4 . length ) ) { for ( int i = IDENT_3 ; i < ( IDENT_4 . length ) ; i ++ ) { new org . eclipse . swt . widgets . METHOD_3 ( table , org . eclipse . swt . IDENT_5 . IDENT_6 ) ; } } org . eclipse . swt . widgets . METHOD_3 [ ] IDENT_7 = table . METHOD_4 ( ) ; for ( int i = 0 ; i < ( IDENT_1 . length ) ; i ++ ) { IDENT_7 [ i ] . METHOD_1 ( IDENT_1 [ i ] ) ; } "<AssertPlaceHolder>" ; } getText ( org . eclipse . swt . IDENT_8 . IDENT_9 ) { }
org . junit . Assert . assertEquals ( 0 , IDENT_2 . getText ( 1 ) . length ( ) ) 