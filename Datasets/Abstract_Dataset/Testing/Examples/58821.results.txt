METHOD_0 ( ) { org . eclipse . IDENT_0 . core . IDENT_1 . IDENT_2 IDENT_3 = new org . eclipse . IDENT_0 . core . IDENT_1 . METHOD_1 ( null ) ; java . io . File IDENT_4 = IDENT_5 . METHOD_2 ( IDENT_6 , ( ( STRING_0 + ( java . io . File . IDENT_7 ) ) + STRING_1 ) ) ; java . io . File IDENT_8 = IDENT_5 . METHOD_2 ( IDENT_6 , ( ( STRING_2 + ( java . io . File . IDENT_7 ) ) + STRING_3 ) ) ; IDENT_5 . METHOD_3 ( IDENT_4 ) ; IDENT_5 . METHOD_3 ( IDENT_8 ) ; IDENT_5 . METHOD_4 ( IDENT_5 . METHOD_5 ( IDENT_6 , IDENT_4 ) ) ; IDENT_5 . METHOD_4 ( IDENT_5 . METHOD_5 ( IDENT_6 , IDENT_8 ) ) ; org . eclipse . jgit . IDENT_9 . IDENT_10 commit = IDENT_5 . commit ( STRING_4 ) ; try ( org . eclipse . jgit . IDENT_11 . IDENT_12 IDENT_13 = new org . eclipse . jgit . IDENT_11 . METHOD_6 ( repo ) ) { int IDENT_14 = IDENT_13 . METHOD_7 ( commit . METHOD_8 ( ) ) ; IDENT_13 . next ( ) ; IDENT_13 . METHOD_9 ( ) ; IDENT_13 . next ( ) ; org . eclipse . IDENT_0 . core . IDENT_1 . IDENT_15 base = new org . eclipse . IDENT_0 . core . IDENT_1 . METHOD_10 ( repo , null , commit , IDENT_13 . METHOD_11 ( IDENT_14 ) , IDENT_13 . METHOD_12 ( ) ) ; IDENT_13 . next ( ) ; org . eclipse . IDENT_0 . core . IDENT_1 . METHOD_10 remote = new org . eclipse . IDENT_0 . core . IDENT_1 . METHOD_10 ( repo , null , commit , IDENT_13 . METHOD_11 ( IDENT_14 ) , IDENT_13 . METHOD_12 ( ) ) ; "<AssertPlaceHolder>" ; } } compare ( org . eclipse . jgit . lib . IDENT_16 , org . eclipse . jgit . lib . IDENT_16 ) { java . lang . String IDENT_17 = IDENT_18 . METHOD_13 ( ) . getName ( ) ; java . lang . String IDENT_19 = IDENT_20 . METHOD_13 ( ) . getName ( ) ; return IDENT_17 . METHOD_14 ( IDENT_19 ) ; }
org . junit . Assert . assertFalse ( IDENT_3 . compare ( base , remote ) ) 