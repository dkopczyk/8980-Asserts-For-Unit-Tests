METHOD_0 ( ) { IDENT_0 . METHOD_1 ( STRING_0 , new java . util . HashSet < org . apache . activemq . artemis . core . security . IDENT_1 > ( ) ) ; java . util . HashSet < org . apache . activemq . artemis . core . security . IDENT_1 > IDENT_2 = new java . util . HashSet ( 2 ) ; IDENT_2 . add ( new org . apache . activemq . artemis . core . security . METHOD_2 ( STRING_1 , true , true , true , true , true , true , true , true , true , true ) ) ; IDENT_2 . add ( new org . apache . activemq . artemis . core . security . METHOD_2 ( STRING_2 , true , true , true , true , true , true , true , true , true , true ) ) ; IDENT_0 . METHOD_1 ( STRING_3 , IDENT_2 ) ; java . util . HashSet < org . apache . activemq . artemis . core . security . METHOD_2 > IDENT_3 = new java . util . HashSet ( 2 ) ; IDENT_3 . add ( new org . apache . activemq . artemis . core . security . METHOD_2 ( STRING_1 , true , true , true , true , true , true , true , true , true , true ) ) ; IDENT_3 . add ( new org . apache . activemq . artemis . core . security . METHOD_2 ( STRING_2 , true , true , true , true , true , true , true , true , true , true ) ) ; IDENT_3 . add ( new org . apache . activemq . artemis . core . security . METHOD_2 ( STRING_4 , true , true , true , true , true , true , true , true , true , true ) ) ; IDENT_0 . METHOD_1 ( STRING_5 , IDENT_3 ) ; java . util . HashSet < org . apache . activemq . artemis . core . security . METHOD_2 > IDENT_4 = IDENT_0 . METHOD_3 ( STRING_5 ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_5 . size ( ) ; }
org . junit . Assert . assertEquals ( IDENT_4 . size ( ) , 3 ) 