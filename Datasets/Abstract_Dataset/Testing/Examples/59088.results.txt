METHOD_0 ( ) { org . eclipse . IDENT_0 . geometry . IDENT_1 . IDENT_2 [ ] IDENT_3 = new org . eclipse . IDENT_0 . geometry . IDENT_1 . IDENT_2 [ 10 ] ; for ( int i = 0 ; i < 10 ; i ++ ) { IDENT_3 [ i ] = new org . eclipse . IDENT_0 . geometry . IDENT_1 . METHOD_1 ( ( i * i ) , ( i + i ) ) ; } org . eclipse . IDENT_0 . geometry . IDENT_1 . METHOD_1 [ ] IDENT_4 = org . eclipse . IDENT_0 . geometry . IDENT_1 . METHOD_1 . METHOD_2 ( IDENT_3 ) ; for ( int i = 0 ; i < 10 ; i ++ ) { "<AssertPlaceHolder>" ; } } METHOD_2 ( org . eclipse . IDENT_0 . geometry . IDENT_1 . METHOD_1 [ ] ) { if ( IDENT_3 == null ) { throw new java . lang . IllegalArgumentException ( STRING_0 ) ; } org . eclipse . IDENT_0 . geometry . IDENT_1 . METHOD_1 [ ] IDENT_4 = new org . eclipse . IDENT_0 . geometry . IDENT_1 . METHOD_1 [ IDENT_3 . length ] ; for ( int i = 0 ; i < ( IDENT_3 . length ) ; i ++ ) { IDENT_4 [ i ] = IDENT_3 [ i ] . METHOD_2 ( ) ; } return IDENT_4 ; }
org . junit . Assert . assertTrue ( IDENT_3 [ i ] . equals ( IDENT_4 [ i ] ) ) 