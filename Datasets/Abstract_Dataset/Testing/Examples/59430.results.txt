METHOD_0 ( ) { final org . eclipse . jgit . IDENT_0 . IDENT_1 IDENT_2 = db . METHOD_1 ( ) ; final org . eclipse . jgit . IDENT_0 . IDENT_1 IDENT_3 = db . METHOD_1 ( ) ; final org . eclipse . jgit . IDENT_0 . IDENT_1 IDENT_4 = db . METHOD_1 ( ) ; { final org . eclipse . jgit . IDENT_0 . IDENT_5 b = IDENT_2 . builder ( ) ; final org . eclipse . jgit . IDENT_0 . IDENT_5 o = IDENT_3 . builder ( ) ; final org . eclipse . jgit . IDENT_0 . IDENT_5 t = IDENT_4 . builder ( ) ; b . add ( METHOD_2 ( STRING_0 , IDENT_6 . IDENT_7 ) ) ; o . add ( METHOD_2 ( STRING_0 , IDENT_6 . IDENT_7 , STRING_1 ) ) ; t . add ( METHOD_2 ( STRING_2 , IDENT_6 . IDENT_7 ) ) ; b . METHOD_3 ( ) ; o . METHOD_3 ( ) ; t . METHOD_3 ( ) ; } final org . eclipse . jgit . lib . IDENT_8 IDENT_9 = db . METHOD_4 ( ) ; final org . eclipse . jgit . lib . IDENT_10 b = org . eclipse . jgit . IDENT_11 . IDENT_12 . commit ( IDENT_9 , IDENT_2 , new org . eclipse . jgit . lib . IDENT_10 [ ] { } ) ; final org . eclipse . jgit . lib . IDENT_10 o = org . eclipse . jgit . IDENT_11 . IDENT_12 . commit ( IDENT_9 , IDENT_3 , new org . eclipse . jgit . lib . IDENT_10 [ ] { b } ) ; final org . eclipse . jgit . lib . IDENT_10 t = org . eclipse . jgit . IDENT_11 . IDENT_12 . commit ( IDENT_9 , IDENT_4 , new org . eclipse . jgit . lib . IDENT_10 [ ] { b } ) ; org . eclipse . jgit . IDENT_11 . IDENT_13 IDENT_14 = IDENT_15 . IDENT_16 . METHOD_5 ( db ) ; boolean IDENT_11 = IDENT_14 . METHOD_6 ( new org . eclipse . jgit . lib . IDENT_10 [ ] { o , t } ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( boolean , org . eclipse . jgit . lib . IDENT_17 [ ] ) { IDENT_18 = new org . eclipse . jgit . IDENT_19 . IDENT_20 [ IDENT_21 . length ] ; for ( int i = 0 ; i < ( IDENT_21 . length ) ; i ++ ) IDENT_18 [ i ] = IDENT_22 . METHOD_7 ( IDENT_21 [ i ] ) ; IDENT_23 = new org . eclipse . jgit . IDENT_19 . IDENT_24 [ IDENT_18 . length ] ; for ( int i = 0 ; i < ( IDENT_18 . length ) ; i ++ ) { try { IDENT_23 [ i ] = IDENT_22 . METHOD_8 ( IDENT_18 [ i ] ) ; } catch ( org . eclipse . jgit . errors . IDENT_25 err ) { IDENT_23 [ i ] = null ; } } IDENT_26 = new org . eclipse . jgit . IDENT_19 . IDENT_27 [ IDENT_18 . length ] ; for ( int i = 0 ; i < ( IDENT_18 . length ) ; i ++ ) IDENT_26 [ i ] = IDENT_22 . METHOD_9 ( IDENT_18 [ i ] ) ; try { boolean IDENT_28 = METHOD_10 ( ) ; if ( IDENT_28 && IDENT_29 ) IDENT_30 . METHOD_11 ( ) ; return IDENT_28 ; } finally { if ( METHOD_11 ) IDENT_30 . close ( ) ; reader . close ( ) ; } }
org . junit . Assert . assertFalse ( METHOD_6 ) 