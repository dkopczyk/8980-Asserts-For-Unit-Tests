METHOD_0 ( ) { final java . util . ArrayList < org . eclipse . jgit . IDENT_0 . IDENT_1 > IDENT_2 = new java . util . ArrayList ( ) ; for ( int i = 0 ; i < ( 3 * ( IDENT_3 . IDENT_4 . IDENT_5 ) ) ; i ++ ) { final org . eclipse . jgit . IDENT_0 . IDENT_1 c = commit ( ) ; IDENT_2 . add ( c ) ; q . add ( c ) ; } java . util . Collections . METHOD_1 ( IDENT_2 ) ; for ( int i = 0 ; i < ( IDENT_2 . size ( ) ) ; i ++ ) "<AssertPlaceHolder>" ; } get ( org . eclipse . jgit . lib . IDENT_6 ) { final int IDENT_7 = IDENT_8 ; int i = ( IDENT_9 . IDENT_10 ) & IDENT_7 ; final IDENT_11 [ ] IDENT_12 = table ; IDENT_11 obj ; while ( ( obj = IDENT_12 [ i ] ) != null ) { if ( org . eclipse . jgit . lib . IDENT_6 . equals ( obj , IDENT_9 ) ) return obj ; i = ( i + 1 ) & IDENT_7 ; } return null ; }
org . junit . Assert . assertSame ( IDENT_2 . get ( i ) , q . next ( ) ) 