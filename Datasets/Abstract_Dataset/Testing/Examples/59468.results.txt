METHOD_0 ( ) { java . lang . String IDENT_0 = gen . METHOD_1 ( db , org . eclipse . jgit . transport . IDENT_1 . IDENT_2 ) ; "<AssertPlaceHolder>" ; } verify ( java . lang . String , java . lang . String , org . eclipse . jgit . lib . IDENT_3 , boolean , int ) { if ( IDENT_4 . isEmpty ( ) ) { return org . eclipse . jgit . transport . IDENT_5 . IDENT_6 . IDENT_7 ; } else if ( IDENT_0 . isEmpty ( ) ) { return org . eclipse . jgit . transport . IDENT_5 . IDENT_6 . IDENT_8 ; } else if ( IDENT_4 . equals ( IDENT_0 ) ) { return org . eclipse . jgit . transport . IDENT_5 . IDENT_6 . IDENT_9 ; } if ( ! IDENT_10 ) { return org . eclipse . jgit . transport . IDENT_5 . IDENT_6 . IDENT_11 ; } int IDENT_12 = IDENT_0 . indexOf ( STRING_0 ) ; int IDENT_13 = IDENT_4 . indexOf ( STRING_0 ) ; if ( ( IDENT_12 == ( - 1 ) ) || ( IDENT_13 == ( - 1 ) ) ) { return org . eclipse . jgit . transport . IDENT_5 . IDENT_6 . IDENT_11 ; } java . lang . String IDENT_14 = IDENT_4 . substring ( 0 , IDENT_13 ) ; java . lang . String IDENT_15 = IDENT_0 . substring ( 0 , IDENT_12 ) ; long IDENT_16 ; long IDENT_17 ; try { IDENT_16 = java . lang . Long . METHOD_2 ( IDENT_14 ) ; IDENT_17 = java . lang . Long . METHOD_2 ( IDENT_15 ) ; } catch ( java . lang . IllegalArgumentException e ) { return org . eclipse . jgit . transport . IDENT_5 . IDENT_6 . IDENT_11 ; } java . lang . String expect = METHOD_1 ( db , IDENT_16 ) ; if ( ! ( expect . equals ( IDENT_4 ) ) ) { return org . eclipse . jgit . transport . IDENT_5 . IDENT_6 . IDENT_11 ; } long IDENT_18 = java . lang . Math . METHOD_3 ( ( IDENT_17 - IDENT_16 ) ) ; if ( IDENT_18 <= IDENT_19 ) { return org . eclipse . jgit . transport . IDENT_5 . IDENT_6 . IDENT_9 ; } else { return org . eclipse . jgit . transport . IDENT_5 . IDENT_6 . IDENT_20 ; } }
org . junit . Assert . assertEquals ( IDENT_6 . IDENT_9 , gen . verify ( IDENT_0 , IDENT_0 , db , false , 0 ) ) 