METHOD_0 ( ) { METHOD_1 ( STRING_0 , STRING_1 ) ; try ( org . eclipse . jgit . api . IDENT_0 IDENT_1 = new org . eclipse . jgit . api . METHOD_2 ( db ) ) { db . METHOD_3 ( ) . METHOD_4 ( IDENT_2 . IDENT_3 , null , IDENT_2 . IDENT_4 , STRING_2 ) ; IDENT_1 . add ( ) . METHOD_5 ( STRING_0 ) . call ( ) ; IDENT_1 . commit ( ) . METHOD_6 ( STRING_3 ) . call ( ) ; } org . eclipse . jgit . IDENT_5 . IDENT_6 IDENT_7 = db . METHOD_7 ( ) . METHOD_8 ( STRING_0 ) ; IDENT_7 . METHOD_9 ( IDENT_8 . IDENT_9 ) ; try ( org . eclipse . jgit . lib . IDENT_10 IDENT_11 = db . METHOD_10 ( ) ) { org . eclipse . jgit . IDENT_5 . IDENT_12 . METHOD_11 ( db , IDENT_7 , IDENT_11 , false , null ) ; org . eclipse . jgit . IDENT_13 . IDENT_14 IDENT_15 = new org . eclipse . jgit . IDENT_13 . METHOD_12 ( IDENT_16 , db . METHOD_13 ( ) , db . METHOD_3 ( ) . get ( IDENT_17 . IDENT_18 ) ) ; while ( ! ( IDENT_15 . METHOD_14 ( ) . equals ( STRING_0 ) ) ) IDENT_15 . next ( 1 ) ; "<AssertPlaceHolder>" ; } } METHOD_15 ( org . eclipse . jgit . IDENT_5 . IDENT_6 , boolean , org . eclipse . jgit . lib . IDENT_10 ) { if ( entry == null ) return ! ( IDENT_8 . IDENT_19 . equals ( METHOD_16 ( ) ) ) ; org . eclipse . jgit . IDENT_13 . IDENT_20 . IDENT_21 IDENT_22 = METHOD_17 ( entry ) ; switch ( IDENT_22 ) { case IDENT_23 : if ( IDENT_24 ) return METHOD_18 ( entry , reader ) ; else return true ; case IDENT_25 : return METHOD_18 ( entry , reader ) ; case IDENT_26 : if ( ( IDENT_27 ) == ( IDENT_8 . IDENT_9 . METHOD_19 ( ) ) ) { return METHOD_18 ( entry , reader ) ; } return false ; case IDENT_28 : if ( ( ( IDENT_27 ) == ( IDENT_8 . IDENT_29 . METHOD_19 ( ) ) ) && ( entry . METHOD_20 ( ) . equals ( IDENT_8 . IDENT_30 ) ) ) { byte [ ] IDENT_31 = METHOD_21 ( ) ; int IDENT_32 = METHOD_22 ( ) ; if ( ( entry . METHOD_23 ( ) . compareTo ( METHOD_21 , METHOD_22 ) ) == 0 ) { return true ; } else if ( ( org . eclipse . jgit . lib . IDENT_33 . METHOD_24 ( ) . compareTo ( METHOD_21 , METHOD_22 ) ) == 0 ) { return ( new java . io . File ( repository . METHOD_25 ( ) , entry . METHOD_26 ( ) ) . list ( ) . length ) > 0 ; } return false ; } else if ( ( IDENT_27 ) == ( IDENT_8 . IDENT_9 . METHOD_19 ( ) ) ) return METHOD_18 ( entry , reader ) ; return true ; default : throw new java . lang . IllegalStateException ( java . text . IDENT_34 . format ( org . eclipse . jgit . internal . IDENT_35 . get ( ) . IDENT_36 , IDENT_22 . name ( ) ) ) ; } }
org . junit . Assert . assertFalse ( IDENT_15 . METHOD_15 ( IDENT_7 , false , IDENT_11 ) ) 