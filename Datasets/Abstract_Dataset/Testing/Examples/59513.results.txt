METHOD_0 ( ) { java . util . List < java . lang . String > expected = java . util . Arrays . asList ( STRING_0 , STRING_1 , STRING_2 , STRING_3 ) ; org . eclipse . jgit . IDENT_0 . filter . IDENT_1 [ ] IDENT_2 = new org . eclipse . jgit . IDENT_0 . filter . IDENT_1 [ ] { org . eclipse . jgit . IDENT_0 . filter . IDENT_3 . create ( STRING_4 ) . METHOD_1 ( ) , org . eclipse . jgit . IDENT_0 . filter . IDENT_3 . create ( STRING_5 ) , org . eclipse . jgit . IDENT_0 . filter . IDENT_3 . create ( STRING_6 ) } ; java . util . List < java . lang . String > IDENT_4 = METHOD_2 ( IDENT_5 , org . eclipse . jgit . IDENT_0 . filter . IDENT_6 . create ( IDENT_2 ) ) ; "<AssertPlaceHolder>" ; } create ( org . eclipse . jgit . IDENT_0 . filter . IDENT_1 [ ] ) { if ( ( list . length ) == 2 ) return org . eclipse . jgit . IDENT_0 . filter . IDENT_6 . create ( list [ 0 ] , list [ 1 ] ) ; if ( ( list . length ) < 2 ) throw new java . lang . IllegalArgumentException ( org . eclipse . jgit . internal . IDENT_7 . get ( ) . IDENT_8 ) ; final org . eclipse . jgit . IDENT_0 . filter . IDENT_1 [ ] IDENT_9 = new org . eclipse . jgit . IDENT_0 . filter . IDENT_1 [ list . length ] ; java . lang . System . METHOD_3 ( list , 0 , IDENT_9 , 0 , list . length ) ; return new org . eclipse . jgit . IDENT_0 . filter . IDENT_6 . List ( IDENT_9 ) ; }
org . junit . Assert . assertEquals ( expected , IDENT_4 ) 