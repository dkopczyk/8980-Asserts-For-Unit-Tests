METHOD_0 ( ) { byte [ ] val = new byte [ ] { INT_0 } ; org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = mock ( org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . class ) ; when ( IDENT_4 . METHOD_1 ( ) ) . thenReturn ( val ) ; org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_5 = mock ( org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . class ) ; org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 IDENT_7 = mock ( org . eclipse . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_6 . class ) ; when ( IDENT_7 . METHOD_2 ( IDENT_8 . IDENT_9 ) ) . thenReturn ( IDENT_4 ) ; when ( IDENT_7 . METHOD_2 ( IDENT_8 . IDENT_10 ) ) . thenReturn ( IDENT_5 ) ; org . eclipse . IDENT_0 . example . IDENT_11 . IDENT_12 . IDENT_13 . IDENT_14 IDENT_15 = new org . eclipse . IDENT_0 . example . IDENT_11 . IDENT_12 . IDENT_13 . METHOD_3 ( false , true ) . METHOD_4 ( IDENT_8 . IDENT_16 , IDENT_7 ) . build ( true ) ; IDENT_15 . METHOD_5 ( ) ; verify ( IDENT_5 , times ( 1 ) ) . METHOD_6 ( new byte [ ] { 2 } ) ; verify ( IDENT_4 , times ( 1 ) ) . METHOD_1 ( ) ; byte [ ] IDENT_17 = ( ( byte [ ] ) ( org . eclipse . IDENT_0 . example . IDENT_18 . IDENT_19 . METHOD_7 ( IDENT_15 , STRING_0 ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( java . lang . Object , java . lang . String ) { java . lang . Object result = null ; java . lang . reflect . Field field = org . eclipse . IDENT_0 . example . IDENT_18 . IDENT_19 . METHOD_8 ( IDENT_20 , IDENT_21 ) ; try { field . METHOD_9 ( true ) ; result = field . get ( IDENT_20 ) ; } catch ( java . lang . IllegalArgumentException e ) { org . eclipse . IDENT_0 . example . IDENT_18 . IDENT_19 . logger . warn ( e . getMessage ( ) , e ) ; } catch ( java . lang . IDENT_22 e ) { org . eclipse . IDENT_0 . example . IDENT_18 . IDENT_19 . logger . warn ( e . getMessage ( ) , e ) ; } return result ; }
org . junit . Assert . assertArrayEquals ( val , IDENT_17 ) 