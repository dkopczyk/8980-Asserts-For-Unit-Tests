METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . Object > properties = new java . util . HashMap ( ) ; properties . put ( org . eclipse . IDENT_0 . internal . driver . IDENT_1 . IDENT_2 . IDENT_3 , "" ) ; try { org . eclipse . IDENT_0 . internal . driver . IDENT_1 . IDENT_4 . METHOD_1 ( properties ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . lang . IllegalArgumentException e ) { } for ( org . eclipse . IDENT_0 . internal . driver . IDENT_1 . IDENT_5 type : org . eclipse . IDENT_0 . internal . driver . IDENT_1 . IDENT_5 . values ( ) ) { properties . put ( org . eclipse . IDENT_0 . internal . driver . IDENT_1 . IDENT_2 . IDENT_3 , type . name ( ) ) ; org . eclipse . IDENT_0 . internal . driver . IDENT_1 . IDENT_5 result = org . eclipse . IDENT_0 . internal . driver . IDENT_1 . IDENT_4 . METHOD_1 ( properties ) ; "<AssertPlaceHolder>" ; } } METHOD_1 ( java . util . Map ) { java . lang . Object IDENT_6 = properties . get ( org . eclipse . IDENT_0 . internal . driver . IDENT_1 . IDENT_4 . IDENT_7 ) . toString ( ) ; if ( IDENT_6 == null ) { return IDENT_5 . IDENT_8 ; } return org . eclipse . IDENT_0 . internal . driver . IDENT_1 . IDENT_5 . valueOf ( ( ( java . lang . String ) ( IDENT_6 ) ) ) ; }
org . junit . Assert . assertEquals ( type , result ) 