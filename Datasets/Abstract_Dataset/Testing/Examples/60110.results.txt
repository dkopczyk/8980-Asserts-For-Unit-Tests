METHOD_0 ( ) { "<AssertPlaceHolder>" ; } decode ( java . lang . String ) { if ( ( tokens == null ) || ( ( tokens . length ( ) ) == 0 ) ) { return emptyList ( ) ; } java . nio . ByteBuffer buffer = java . nio . ByteBuffer . METHOD_1 ( java . util . IDENT_0 . METHOD_2 ( ) . decode ( tokens ) ) ; com . google . common . collect . ImmutableList . Builder < org . eclipse . IDENT_1 . util . IDENT_2 . IDENT_3 > builder = com . google . common . collect . ImmutableList . builder ( ) ; while ( buffer . METHOD_3 ( ) ) { int IDENT_4 = buffer . METHOD_4 ( ) ; int IDENT_5 = buffer . METHOD_4 ( ) ; int length = IDENT_5 > > > ( org . eclipse . IDENT_1 . util . IDENT_2 . IDENT_6 ) ; int IDENT_7 = IDENT_5 & ( org . eclipse . IDENT_1 . util . IDENT_2 . IDENT_8 ) ; builder . add ( new org . eclipse . IDENT_1 . util . IDENT_2 . METHOD_5 ( IDENT_4 , length , IDENT_7 ) ) ; } return builder . build ( ) ; }
org . junit . Assert . assertEquals ( java . util . Collections . emptyList ( ) , decode ( null ) ) 