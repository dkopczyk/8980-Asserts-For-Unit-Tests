METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = org . eclipse . IDENT_2 . internal . server . core . IDENT_3 . IDENT_4 . METHOD_1 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String , java . lang . String ) { try { int IDENT_5 = IDENT_6 . indexOf ( org . eclipse . IDENT_2 . internal . server . core . IDENT_3 . IDENT_4 . IDENT_7 ) ; if ( IDENT_5 == ( - 1 ) ) { throw new java . lang . RuntimeException ( STRING_1 ) ; } byte [ ] IDENT_8 = IDENT_6 . substring ( 0 , IDENT_5 ) . getBytes ( org . eclipse . IDENT_2 . internal . server . core . IDENT_3 . IDENT_4 . IDENT_9 ) ; byte [ ] IDENT_10 = IDENT_6 . substring ( ( IDENT_5 + 1 ) ) . getBytes ( org . eclipse . IDENT_2 . internal . server . core . IDENT_3 . IDENT_4 . IDENT_9 ) ; byte [ ] IDENT_11 = org . eclipse . IDENT_2 . server . core . resources . IDENT_12 . decode ( IDENT_8 ) ; byte [ ] IDENT_1 = org . eclipse . IDENT_2 . server . core . resources . IDENT_12 . decode ( IDENT_10 ) ; return org . eclipse . IDENT_2 . internal . server . core . IDENT_3 . IDENT_4 . METHOD_2 ( IDENT_0 , IDENT_1 , IDENT_11 ) ; } catch ( java . security . IDENT_13 e ) { org . eclipse . IDENT_2 . server . core . IDENT_14 . log ( e ) ; } catch ( java . security . spec . IDENT_15 e ) { org . eclipse . IDENT_2 . server . core . IDENT_14 . log ( e ) ; } catch ( java . io . IDENT_16 e ) { org . eclipse . IDENT_2 . server . core . IDENT_14 . log ( e ) ; } return false ; }
org . junit . Assert . assertTrue ( org . eclipse . IDENT_2 . internal . server . core . IDENT_3 . IDENT_4 . METHOD_2 ( IDENT_0 , IDENT_1 ) ) 