METHOD_0 ( ) { final org . eclipse . IDENT_0 . client . IDENT_1 . IDENT_2 IDENT_3 = new org . eclipse . IDENT_0 . client . IDENT_1 . METHOD_1 ( ) ; IDENT_3 . METHOD_2 ( STRING_0 . getBytes ( ) ) ; final IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 connection = context . mock ( IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . class ) ; final IDENT_4 . IDENT_5 . IDENT_6 . messages . IDENT_9 message = new IDENT_4 . IDENT_5 . IDENT_6 . messages . METHOD_3 ( 1 , STRING_1 , IDENT_3 , connection ) ; final IDENT_4 . IDENT_5 . IDENT_6 . common . IDENT_10 . IDENT_11 IDENT_12 = new IDENT_4 . IDENT_5 . IDENT_6 . common . IDENT_10 . METHOD_4 ( IDENT_4 . IDENT_5 . IDENT_6 . common . IDENT_10 . IDENT_13 . IDENT_14 , null , false , false , false , false , false ) ; final long IDENT_15 = message . METHOD_5 ( ) . getTime ( ) ; final java . lang . String IDENT_16 = ( ( ( STRING_2 + IDENT_15 ) + STRING_3 ) + ( org . apache . commons . codec . IDENT_17 . IDENT_18 . METHOD_6 ( IDENT_4 . IDENT_5 . IDENT_6 . logger . IDENT_19 . IDENT_20 . getBytes ( ) ) ) ) + STRING_4 ; "<AssertPlaceHolder>" ; } METHOD_7 ( IDENT_4 . IDENT_5 . IDENT_6 . messages . METHOD_3 , IDENT_4 . IDENT_5 . IDENT_6 . common . IDENT_10 . METHOD_4 ) { final java . lang . StringBuffer IDENT_21 = new java . lang . StringBuffer ( ) ; IDENT_21 . append ( STRING_5 ) ; IDENT_4 . IDENT_5 . IDENT_6 . logger . IDENT_22 . METHOD_8 ( IDENT_21 , STRING_6 , java . lang . String . valueOf ( message . getId ( ) ) ) ; IDENT_4 . IDENT_5 . IDENT_6 . logger . IDENT_22 . METHOD_8 ( IDENT_21 , STRING_7 , java . lang . String . valueOf ( message . METHOD_5 ( ) . getTime ( ) ) ) ; IDENT_4 . IDENT_5 . IDENT_6 . logger . IDENT_22 . METHOD_8 ( IDENT_21 , STRING_1 , message . METHOD_9 ( ) ) ; if ( IDENT_23 . METHOD_10 ( ) ) { IDENT_4 . IDENT_5 . IDENT_6 . logger . IDENT_22 . METHOD_8 ( IDENT_21 , STRING_8 , java . lang . String . valueOf ( message . METHOD_11 ( ) ) ) ; } if ( IDENT_23 . METHOD_12 ( ) ) { IDENT_4 . IDENT_5 . IDENT_6 . logger . IDENT_22 . METHOD_8 ( IDENT_21 , STRING_9 , java . lang . String . valueOf ( message . METHOD_13 ( ) ) ) ; } if ( IDENT_23 . METHOD_14 ( ) ) { IDENT_4 . IDENT_5 . IDENT_6 . logger . IDENT_22 . METHOD_8 ( IDENT_21 , STRING_10 , message . METHOD_15 ( ) . METHOD_16 ( ) . getName ( ) ) ; } if ( ( ( IDENT_23 . METHOD_17 ( ) ) && ( ( message . METHOD_18 ( ) ) != null ) ) && ( ( message . METHOD_18 ( ) . size ( ) ) > 0 ) ) { IDENT_4 . IDENT_5 . IDENT_6 . logger . IDENT_22 . METHOD_8 ( IDENT_21 , STRING_11 , message . METHOD_18 ( ) . get ( 0 ) ) ; } IDENT_4 . IDENT_5 . IDENT_6 . logger . IDENT_22 . METHOD_19 ( IDENT_21 , message , IDENT_23 ) ; IDENT_21 . append ( STRING_4 ) ; return IDENT_21 . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_16 , IDENT_4 . IDENT_5 . IDENT_6 . logger . IDENT_22 . METHOD_7 ( message , IDENT_12 ) ) 