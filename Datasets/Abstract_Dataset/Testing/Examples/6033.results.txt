METHOD_0 ( ) { org . apache . activemq . artemis . tests . integration . IDENT_0 . util . IDENT_1 IDENT_2 = null ; try { org . apache . activemq . artemis . tests . integration . IDENT_0 . util . IDENT_3 IDENT_4 = conn . METHOD_1 ( IDENT_5 . IDENT_6 . IDENT_7 ) ; IDENT_4 . METHOD_2 ( IDENT_5 . IDENT_8 . IDENT_9 . IDENT_10 , STRING_0 ) . METHOD_2 ( IDENT_5 . IDENT_8 . IDENT_9 . IDENT_11 , this . IDENT_12 ) . METHOD_2 ( IDENT_5 . IDENT_8 . IDENT_9 . IDENT_13 , this . IDENT_14 ) . METHOD_2 ( IDENT_5 . IDENT_8 . IDENT_9 . IDENT_15 , STRING_1 ) . METHOD_2 ( IDENT_5 . IDENT_8 . IDENT_16 , STRING_2 ) ; conn . METHOD_3 ( IDENT_4 ) ; conn . METHOD_4 ( INT_0 ) ; for ( int i = 0 ; i < 10 ; i ++ ) { METHOD_5 ( conn , ( ( METHOD_6 ( ) ) + ( METHOD_7 ( ) ) ) , STRING_3 , ( ( STRING_4 + i ) + STRING_5 ) ) ; java . lang . Thread . sleep ( INT_0 ) ; } IDENT_2 = org . apache . activemq . artemis . tests . integration . IDENT_0 . util . IDENT_17 . METHOD_8 ( uri ) ; IDENT_2 . connect ( IDENT_12 , IDENT_14 ) ; METHOD_9 ( IDENT_2 , STRING_6 ) ; int IDENT_18 = 0 ; IDENT_4 = IDENT_2 . METHOD_10 ( ) ; while ( IDENT_4 != null ) { IDENT_18 ++ ; java . lang . Thread . sleep ( INT_0 ) ; IDENT_4 = IDENT_2 . METHOD_10 ( INT_1 ) ; } "<AssertPlaceHolder>" ; METHOD_11 ( IDENT_2 , STRING_6 ) ; } finally { if ( IDENT_2 != null ) IDENT_2 . METHOD_12 ( ) ; conn . METHOD_12 ( ) ; } } METHOD_10 ( long ) { return IDENT_19 . METHOD_13 ( IDENT_20 , TimeUnit . IDENT_21 ) ; }
org . junit . Assert . assertEquals ( 10 , IDENT_18 ) 