METHOD_0 ( ) { conn . connect ( IDENT_0 , IDENT_1 ) ; for ( int i = 0 ; i < 10 ; i ++ ) { METHOD_1 ( conn , ( ( METHOD_2 ( ) ) + ( METHOD_3 ( ) ) ) , STRING_0 , ( ( STRING_1 + i ) + STRING_2 ) ) ; java . lang . Thread . sleep ( INT_0 ) ; } org . apache . activemq . artemis . tests . integration . IDENT_2 . util . IDENT_3 IDENT_4 = org . apache . activemq . artemis . tests . integration . IDENT_2 . util . IDENT_5 . METHOD_4 ( IDENT_6 ) ; try { org . apache . activemq . artemis . tests . integration . IDENT_2 . util . IDENT_7 IDENT_8 = IDENT_4 . METHOD_5 ( IDENT_9 . IDENT_10 . IDENT_11 ) . METHOD_6 ( IDENT_9 . IDENT_12 . IDENT_13 . IDENT_14 , STRING_3 ) . METHOD_6 ( IDENT_9 . IDENT_12 . IDENT_13 . IDENT_15 , this . IDENT_0 ) . METHOD_6 ( IDENT_9 . IDENT_12 . IDENT_13 . IDENT_16 , this . IDENT_1 ) . METHOD_6 ( IDENT_9 . IDENT_12 . IDENT_13 . IDENT_17 , STRING_4 ) . METHOD_6 ( IDENT_9 . IDENT_12 . IDENT_18 , STRING_5 ) ; IDENT_4 . METHOD_7 ( IDENT_8 ) ; IDENT_4 . METHOD_8 ( INT_0 ) ; java . lang . Thread . sleep ( INT_0 ) ; METHOD_9 ( IDENT_4 , STRING_6 ) ; int IDENT_19 = 0 ; IDENT_8 = IDENT_4 . METHOD_10 ( ) ; while ( IDENT_8 != null ) { IDENT_19 ++ ; java . lang . Thread . sleep ( INT_0 ) ; IDENT_8 = IDENT_4 . METHOD_10 ( INT_1 ) ; } "<AssertPlaceHolder>" ; METHOD_11 ( IDENT_4 , STRING_6 ) ; } finally { IDENT_4 . METHOD_12 ( ) ; } } METHOD_10 ( long ) { return IDENT_20 . METHOD_13 ( IDENT_21 , TimeUnit . IDENT_22 ) ; }
org . junit . Assert . assertEquals ( 10 , IDENT_19 ) 