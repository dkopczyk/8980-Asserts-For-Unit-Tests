METHOD_0 ( ) { final org . apache . accumulo . core . client . IDENT_0 conn = IDENT_1 . METHOD_1 ( ) ; final java . lang . String IDENT_2 = METHOD_2 ( 1 ) [ 0 ] ; { final java . util . Map < org . apache . accumulo . core . data . IDENT_3 , org . apache . accumulo . core . data . IDENT_4 > input = new java . util . HashMap ( ) ; input . put ( new org . apache . accumulo . core . data . METHOD_3 ( METHOD_4 ( 1 ) , IDENT_5 , METHOD_5 ( 2 ) ) , edu . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 ) ; input . put ( new org . apache . accumulo . core . data . METHOD_3 ( METHOD_4 ( 1 ) , IDENT_5 , METHOD_5 ( 3 ) ) , edu . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 ) ; input . put ( new org . apache . accumulo . core . data . METHOD_3 ( METHOD_4 ( 1 ) , IDENT_5 , METHOD_5 ( 4 ) ) , edu . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 ) ; input . put ( new org . apache . accumulo . core . data . METHOD_3 ( METHOD_4 ( 2 ) , IDENT_5 , METHOD_5 ( 3 ) ) , edu . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 ) ; input . put ( new org . apache . accumulo . core . data . METHOD_3 ( METHOD_4 ( 3 ) , IDENT_5 , METHOD_5 ( 4 ) ) , edu . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 ) ; input . put ( new org . apache . accumulo . core . data . METHOD_3 ( METHOD_4 ( 2 ) , IDENT_5 , METHOD_5 ( 1 ) ) , edu . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 ) ; input . put ( new org . apache . accumulo . core . data . METHOD_3 ( METHOD_4 ( 3 ) , IDENT_5 , METHOD_5 ( 1 ) ) , edu . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 ) ; input . put ( new org . apache . accumulo . core . data . METHOD_3 ( METHOD_4 ( 4 ) , IDENT_5 , METHOD_5 ( 1 ) ) , edu . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 ) ; input . put ( new org . apache . accumulo . core . data . METHOD_3 ( METHOD_4 ( 3 ) , IDENT_5 , METHOD_5 ( 2 ) ) , edu . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 ) ; input . put ( new org . apache . accumulo . core . data . METHOD_3 ( METHOD_4 ( 4 ) , IDENT_5 , METHOD_5 ( 3 ) ) , edu . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 ) ; input . put ( new org . apache . accumulo . core . data . METHOD_3 ( METHOD_4 ( 2 ) , IDENT_5 , METHOD_5 ( 5 ) ) , edu . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 ) ; input . put ( new org . apache . accumulo . core . data . METHOD_3 ( METHOD_4 ( 5 ) , IDENT_5 , METHOD_5 ( 2 ) ) , edu . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . IDENT_10 ) ; java . util . IDENT_11 < org . apache . hadoop . io . IDENT_12 > IDENT_13 = new java . util . METHOD_6 ( ) ; IDENT_13 . add ( new org . apache . hadoop . io . METHOD_7 ( new byte [ ] { 3 } ) ) ; IDENT_13 . add ( new org . apache . hadoop . io . METHOD_7 ( new byte [ ] { 7 } ) ) ; IDENT_13 . add ( new org . apache . hadoop . io . METHOD_7 ( new byte [ ] { INT_0 } ) ) ; edu . IDENT_6 . IDENT_7 . IDENT_8 . util . IDENT_14 . METHOD_8 ( conn , IDENT_2 , IDENT_13 , input ) ; } { final edu . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_15 IDENT_8 = new edu . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_9 ( conn , IDENT_1 . METHOD_10 ( ) ) ; final int IDENT_16 = IDENT_8 . METHOD_11 ( IDENT_2 , null , IDENT_17 . IDENT_18 , null ) ; edu . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . log . info ( ( ( STRING_0 + IDENT_16 ) + STRING_1 ) ) ; "<AssertPlaceHolder>" ; } edu . IDENT_6 . IDENT_7 . IDENT_8 . util . IDENT_19 . METHOD_12 ( conn , IDENT_2 , ( IDENT_2 + ( edu . IDENT_6 . IDENT_7 . IDENT_8 . METHOD_9 . IDENT_20 ) ) ) ; } METHOD_11 ( java . lang . String , java . lang . String , org . apache . accumulo . core . security . IDENT_17 , java . lang . String ) { return METHOD_11 ( IDENT_21 , IDENT_22 , IDENT_23 , IDENT_24 , null ) ; }
org . junit . Assert . assertEquals ( 2 , IDENT_16 ) 