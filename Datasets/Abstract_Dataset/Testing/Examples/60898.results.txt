METHOD_0 ( ) { org . eclipse . rap . rwt . testfixture . internal . IDENT_0 . METHOD_1 ( IDENT_1 . IDENT_2 ) ; final org . eclipse . rap . rwt . internal . service . IDENT_3 context = org . eclipse . rap . rwt . internal . service . IDENT_4 . METHOD_2 ( ) ; java . lang . IDENT_5 IDENT_6 = new java . lang . METHOD_3 ( ) { @ org . eclipse . rap . rwt . internal . IDENT_7 . Override public void run ( ) { org . eclipse . rap . rwt . internal . service . IDENT_4 . METHOD_4 ( context ) ; org . eclipse . rap . rwt . testfixture . internal . IDENT_0 . METHOD_5 ( ) ; IDENT_8 . METHOD_6 ( org . eclipse . rap . rwt . internal . IDENT_7 . IDENT_9 . IDENT_10 ) ; } } ; java . util . List < java . lang . Thread > IDENT_11 = new java . util . ArrayList < java . lang . Thread > ( ) ; for ( int i = 0 ; i < 200 ; i ++ ) { java . lang . Thread IDENT_12 = new java . lang . Thread ( IDENT_6 , ( STRING_0 + i ) ) ; IDENT_12 . METHOD_7 ( true ) ; IDENT_12 . start ( ) ; IDENT_8 . METHOD_8 ( ) ; IDENT_11 . add ( IDENT_12 ) ; } java . lang . Thread . sleep ( org . eclipse . rap . rwt . internal . IDENT_7 . IDENT_9 . IDENT_13 ) ; while ( IDENT_8 . METHOD_8 ( ) ) { java . lang . Thread . sleep ( org . eclipse . rap . rwt . internal . IDENT_7 . IDENT_9 . IDENT_13 ) ; } for ( int i = 0 ; i < ( IDENT_11 . size ( ) ) ; i ++ ) { java . lang . Thread IDENT_12 = IDENT_11 . get ( i ) ; IDENT_12 . join ( ) ; IDENT_8 . METHOD_8 ( ) ; } "<AssertPlaceHolder>" ; } METHOD_9 ( ) { MOD_0 ( IDENT_14 ) { return METHOD_9 ; } }
org . junit . Assert . assertFalse ( manager . METHOD_9 ( ) ) 