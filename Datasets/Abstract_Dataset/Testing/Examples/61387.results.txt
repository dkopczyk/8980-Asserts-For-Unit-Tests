METHOD_0 ( ) { org . eclipse . swt . widgets . IDENT_0 control = new org . eclipse . swt . widgets . METHOD_1 ( shell , org . eclipse . swt . IDENT_1 . IDENT_2 ) ; control . METHOD_2 ( false ) ; org . eclipse . swt . widgets . IDENT_3 event = org . eclipse . swt . internal . events . IDENT_4 . METHOD_3 ( control , IDENT_1 . IDENT_5 ) ; boolean IDENT_6 = org . eclipse . swt . internal . events . IDENT_7 . METHOD_4 ( event ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . eclipse . swt . widgets . IDENT_3 ) { boolean result ; if ( event . IDENT_8 . METHOD_5 ( ) ) { result = false ; } else { switch ( event . type ) { case org . eclipse . swt . IDENT_1 . IDENT_5 : case org . eclipse . swt . IDENT_1 . IDENT_9 : case org . eclipse . swt . IDENT_1 . IDENT_10 : case org . eclipse . swt . IDENT_1 . IDENT_11 : case org . eclipse . swt . IDENT_1 . IDENT_12 : case org . eclipse . swt . IDENT_1 . IDENT_13 : case org . eclipse . swt . IDENT_1 . IDENT_14 : case org . eclipse . swt . IDENT_1 . IDENT_15 : case IDENT_16 . IDENT_17 : case IDENT_16 . IDENT_18 : result = true ; break ; default : result = org . eclipse . swt . internal . events . IDENT_7 . METHOD_6 ( event . IDENT_8 ) ; break ; } } return result ; }
org . junit . Assert . assertTrue ( IDENT_6 ) 