METHOD_0 ( ) { final int IDENT_0 = ( org . apache . activemq . jms . pool . IDENT_1 . IDENT_2 ) * 2 ; final java . util . concurrent . IDENT_3 IDENT_4 = new java . util . concurrent . METHOD_1 ( 2 ) ; java . lang . Thread IDENT_5 = new java . lang . Thread ( new java . lang . METHOD_2 ( ) { @ org . apache . activemq . jms . pool . Override public void run ( ) { try { javax . jms . IDENT_6 IDENT_7 = new org . apache . activemq . METHOD_3 ( IDENT_8 ) ; javax . jms . IDENT_9 connection = IDENT_7 . METHOD_4 ( ) ; connection . start ( ) ; javax . jms . IDENT_10 session = connection . METHOD_5 ( false , IDENT_10 . IDENT_11 ) ; javax . jms . IDENT_12 IDENT_13 = session . METHOD_6 ( org . apache . activemq . jms . pool . IDENT_1 . IDENT_14 ) ; javax . jms . IDENT_15 consumer = session . METHOD_7 ( IDENT_13 ) ; for ( int i = 0 ; i < IDENT_0 ; ++ i ) { javax . jms . Message msg = consumer . METHOD_8 ( INT_0 ) ; if ( msg == null ) { return ; } ( IDENT_16 ) ++ ; if ( ( ( IDENT_16 ) OP_0 20 ) == 0 ) { LOG . debug ( ( ( STRING_0 + ( IDENT_16 ) ) + STRING_1 ) ) ; java . lang . System . METHOD_9 ( ) ; } } } catch ( java . lang . Exception e ) { throw new java . lang . RuntimeException ( e ) ; } } } ) ; IDENT_5 . start ( ) ; java . util . concurrent . IDENT_17 IDENT_18 = java . util . concurrent . IDENT_19 . METHOD_10 ( 2 ) ; final java . util . concurrent . IDENT_20 IDENT_21 = new java . util . concurrent . METHOD_11 ( 2 , new java . lang . METHOD_2 ( ) { @ org . apache . activemq . jms . pool . Override public void run ( ) { LOG . trace ( STRING_2 ) ; } } ) ; IDENT_18 . execute ( new org . apache . activemq . jms . pool . IDENT_1 . METHOD_12 ( IDENT_21 , IDENT_4 ) ) ; IDENT_18 . execute ( new org . apache . activemq . jms . pool . IDENT_1 . METHOD_12 ( IDENT_21 , IDENT_4 ) ) ; IDENT_4 . METHOD_13 ( 2 , TimeUnit . IDENT_22 ) ; IDENT_5 . join ( ) ; "<AssertPlaceHolder>" ; } execute ( java . lang . String , java . lang . String [ ] ) { return delegate . execute ( sql , IDENT_23 ) ; }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_16 ) 