METHOD_0 ( ) { java . lang . String expected = "a" ; final java . lang . String IDENT_0 = STRING_0 ; javax . servlet . IDENT_1 IDENT_2 = new org . eclipse . IDENT_3 . http . servlet . tests . util . METHOD_1 ( expected ) ; javax . servlet . IDENT_1 IDENT_4 = new javax . servlet . http . METHOD_2 ( ) { MOD_0 MOD_1 final long IDENT_5 = 1L ; @ org . eclipse . IDENT_3 . http . servlet . tests . Override MOD_2 void service ( javax . servlet . http . IDENT_6 request , javax . servlet . http . IDENT_7 response ) throws java . io . IOException , javax . servlet . IDENT_8 { request . METHOD_3 ( ) . METHOD_4 ( IDENT_0 ) . METHOD_5 ( request , response ) ; } } ; java . util . IDENT_9 < java . lang . String , java . lang . String > props = new java . util . IDENT_9 < java . lang . String , java . lang . String > ( ) ; props . put ( IDENT_10 . IDENT_11 , IDENT_0 ) ; IDENT_12 . add ( METHOD_6 ( ) . METHOD_7 ( javax . servlet . IDENT_1 . class , IDENT_2 , props ) ) ; props = new java . util . IDENT_9 < java . lang . String , java . lang . String > ( ) ; props . put ( IDENT_10 . IDENT_13 , STRING_1 ) ; IDENT_12 . add ( METHOD_6 ( ) . METHOD_7 ( javax . servlet . IDENT_1 . class , IDENT_4 , props ) ) ; java . lang . String actual = IDENT_14 . request ( STRING_2 ) ; "<AssertPlaceHolder>" ; } request ( java . lang . String ) { java . lang . String spec = METHOD_8 ( value ) ; log ( ( STRING_3 + spec ) ) ; java . net . URL url = new java . net . URL ( spec ) ; java . net . IDENT_15 connection = ( ( java . net . IDENT_15 ) ( url . METHOD_9 ( ) ) ) ; connection . METHOD_10 ( false ) ; connection . METHOD_11 ( ( INT_0 * INT_1 ) ) ; connection . METHOD_12 ( ( INT_0 * INT_1 ) ) ; connection . connect ( ) ; java . io . InputStream stream = connection . METHOD_13 ( ) ; try { return METHOD_14 ( stream ) ; } finally { stream . close ( ) ; } }
org . junit . Assert . assertEquals ( expected , actual ) 