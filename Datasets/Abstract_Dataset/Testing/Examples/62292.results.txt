METHOD_0 ( ) { final long IDENT_0 = 10 ; final int IDENT_1 = org . eclipse . IDENT_2 . core . IDENT_3 . internal . IDENT_4 . IDENT_5 . IDENT_6 . length ; final java . util . concurrent . atomic . IDENT_7 IDENT_8 = new java . util . concurrent . atomic . METHOD_1 ( false ) ; METHOD_2 ( ( IDENT_9 ) -> { org . eclipse . IDENT_2 . core . IDENT_3 . binding . IDENT_4 . IDENT_10 IDENT_11 = ( ( org . eclipse . IDENT_2 . core . IDENT_3 . binding . IDENT_4 . IDENT_10 ) ( IDENT_9 . METHOD_3 ( ) [ 1 ] ) ) ; IDENT_11 . METHOD_4 ( org . eclipse . IDENT_2 . core . IDENT_3 . internal . IDENT_4 . IDENT_5 . IDENT_6 ) ; for ( int IDENT_12 = 0 ; IDENT_12 < IDENT_1 ; IDENT_12 ++ ) { IDENT_11 . next ( ) ; java . lang . Thread . sleep ( IDENT_0 ) ; } IDENT_11 . METHOD_5 ( ) ; IDENT_8 . set ( true ) ; return null ; } ) . when ( IDENT_13 ) . METHOD_6 ( org . hamcrest . CoreMatchers . any ( org . eclipse . IDENT_2 . core . IDENT_3 . binding . IDENT_4 . IDENT_14 . class ) , org . hamcrest . CoreMatchers . any ( org . eclipse . IDENT_2 . core . IDENT_3 . binding . IDENT_4 . IDENT_10 . class ) ) ; IDENT_15 . METHOD_6 ( org . eclipse . IDENT_2 . core . IDENT_3 . internal . IDENT_4 . IDENT_16 , org . eclipse . IDENT_2 . core . IDENT_3 . internal . IDENT_4 . IDENT_17 , null ) ; IDENT_15 . METHOD_7 ( org . eclipse . IDENT_2 . core . IDENT_3 . internal . IDENT_4 . IDENT_16 ) ; METHOD_8 ( ( ) -> { verify ( IDENT_13 , times ( 1 ) ) . METHOD_9 ( ) ; } , ( IDENT_0 * IDENT_1 ) , IDENT_0 ) ; "<AssertPlaceHolder>" ; } get ( ) { if ( ( registry ) == null ) { registry = METHOD_10 ( ) ; } return registry ; }
org . junit . Assert . assertThat ( IDENT_8 . get ( ) , org . hamcrest . CoreMatchers . is ( false ) ) 