METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( org . hamcrest . CoreMatchers . any ( org . eclipse . IDENT_1 . core . IDENT_2 . IDENT_3 . class ) , org . hamcrest . CoreMatchers . any ( java . lang . String . class ) ) ) . METHOD_2 ( ( IDENT_4 ) -> { java . lang . String IDENT_5 = ( ( java . lang . String ) ( IDENT_4 . METHOD_3 ( ) [ 1 ] ) ) ; if ( org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_7 . equals ( IDENT_5 ) ) { return org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_8 ; } else if ( org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_9 . equals ( IDENT_5 ) ) { return org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_10 ; } else { return null ; } } ) ; when ( IDENT_0 . METHOD_4 ( org . hamcrest . CoreMatchers . any ( org . eclipse . IDENT_1 . core . IDENT_2 . IDENT_3 . class ) ) ) . METHOD_2 ( ( IDENT_4 ) -> { org . eclipse . IDENT_1 . core . IDENT_2 . IDENT_3 IDENT_2 = ( ( org . eclipse . IDENT_1 . core . IDENT_2 . IDENT_3 ) ( IDENT_4 . METHOD_3 ( ) [ 0 ] ) ) ; if ( ( org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_11 . equals ( IDENT_2 . METHOD_5 ( ) ) ) || ( org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_12 . equals ( IDENT_2 . METHOD_5 ( ) ) ) ) { return java . util . Collections . METHOD_6 ( ) ; } else { IDENT_13 < IDENT_14 < org . eclipse . IDENT_1 . core . IDENT_2 . binding . IDENT_6 . IDENT_15 > > IDENT_16 = ( ) -> new org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_14 < > ( ) ; return java . util . stream . IDENT_17 . of ( org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_8 , org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_10 ) . collect ( java . util . stream . IDENT_18 . METHOD_7 ( IDENT_16 ) ) ; } } ) ; when ( IDENT_0 . METHOD_1 ( org . hamcrest . CoreMatchers . any ( org . eclipse . IDENT_1 . core . IDENT_2 . IDENT_3 . class ) , eq ( org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_9 ) ) ) . thenReturn ( org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_10 ) ; final org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_19 IDENT_20 = METHOD_8 ( IDENT_21 . METHOD_9 ( ) , org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_9 ) ; "<AssertPlaceHolder>" ; IDENT_22 . expect ( org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IllegalArgumentException . class ) ; IDENT_22 . METHOD_10 ( org . hamcrest . CoreMatchers . equalTo ( java . lang . String . format ( STRING_0 , org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_10 , org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_23 ) ) ) ; IDENT_24 . METHOD_11 ( org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_23 , org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_9 , null ) ; } METHOD_12 ( org . eclipse . IDENT_1 . core . IDENT_2 . IDENT_25 ) { org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_26 . METHOD_13 ( IDENT_27 , STRING_1 ) ; org . eclipse . IDENT_1 . core . IDENT_2 . binding . IDENT_6 . IDENT_28 IDENT_29 = METHOD_14 ( IDENT_27 ) ; if ( IDENT_29 == null ) { logger . trace ( STRING_2 , IDENT_27 ) ; return null ; } org . eclipse . IDENT_1 . core . IDENT_2 . binding . IDENT_6 . IDENT_15 IDENT_30 = METHOD_15 ( IDENT_29 . METHOD_16 ( ) ) ; org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_19 IDENT_31 = METHOD_12 ( IDENT_29 , IDENT_30 ) ; METHOD_17 ( IDENT_29 , IDENT_31 , IDENT_30 ) ; return IDENT_31 ; }
org . junit . Assert . assertThat ( IDENT_24 . METHOD_12 ( org . eclipse . IDENT_1 . core . IDENT_2 . internal . IDENT_6 . IDENT_23 ) , org . hamcrest . CoreMatchers . is ( IDENT_20 ) ) 