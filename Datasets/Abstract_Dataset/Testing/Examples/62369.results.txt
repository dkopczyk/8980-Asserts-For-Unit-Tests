METHOD_0 ( ) { org . eclipse . IDENT_0 . model . IDENT_1 . IDENT_2 IDENT_3 = mock ( org . eclipse . IDENT_0 . model . IDENT_1 . IDENT_2 . class ) ; java . lang . String IDENT_4 = org . eclipse . IDENT_0 . ui . internal . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_1 ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( org . eclipse . IDENT_0 . model . IDENT_1 . IDENT_2 ) { java . lang . String IDENT_4 = METHOD_2 ( IDENT_3 ) ; java . lang . String IDENT_8 = IDENT_3 . METHOD_3 ( ) ; if ( org . apache . commons . lang . StringUtils . METHOD_4 ( IDENT_8 ) ) { return transform ( IDENT_4 , null ) ; } java . lang . String IDENT_9 = null ; org . eclipse . IDENT_0 . core . types . IDENT_10 state = null ; org . eclipse . IDENT_0 . core . types . IDENT_11 IDENT_12 = null ; java . lang . String IDENT_13 = METHOD_5 ( IDENT_4 ) ; try { final org . eclipse . IDENT_0 . core . IDENT_5 . IDENT_14 item = METHOD_3 ( IDENT_8 ) ; IDENT_12 = item . METHOD_6 ( ) ; if ( ( ( IDENT_13 == null ) && ( IDENT_12 != null ) ) && ( ( IDENT_12 . METHOD_7 ( ) ) != null ) ) { IDENT_4 = ( ( IDENT_4 + STRING_0 ) + ( IDENT_12 . METHOD_7 ( ) ) ) + "]" ; } java . lang . String IDENT_15 = METHOD_5 ( IDENT_4 ) ; if ( IDENT_15 != null ) { IDENT_13 = IDENT_15 ; state = item . METHOD_8 ( ) ; if ( IDENT_13 . contains ( STRING_1 ) ) { if ( ! ( state instanceof java . lang . IDENT_16 ) ) { state = item . METHOD_9 ( org . eclipse . IDENT_0 . core . library . types . IDENT_17 . class ) ; } IDENT_13 = IDENT_13 . replaceAll ( STRING_2 , STRING_3 ) ; } } } catch ( org . eclipse . IDENT_0 . core . IDENT_5 . IDENT_18 e ) { logger . error ( STRING_4 , IDENT_3 . METHOD_10 ( ) . METHOD_11 ( ) ) ; } if ( IDENT_13 != null ) { if ( IDENT_13 . isEmpty ( ) ) { IDENT_4 = IDENT_4 . substring ( 0 , IDENT_4 . indexOf ( STRING_5 ) ) . trim ( ) ; } else { if ( ( state == null ) || ( state instanceof org . eclipse . IDENT_0 . core . types . IDENT_19 ) ) { IDENT_13 = METHOD_12 ( IDENT_13 ) ; } else if ( state instanceof org . eclipse . IDENT_0 . core . types . Type ) { if ( ( IDENT_12 != null ) && ( ( IDENT_12 . METHOD_13 ( ) ) != null ) ) { for ( org . eclipse . IDENT_0 . core . types . IDENT_20 IDENT_21 : IDENT_12 . METHOD_13 ( ) ) { if ( ( IDENT_21 . getValue ( ) . equals ( state . toString ( ) ) ) && ( ( IDENT_21 . METHOD_1 ( ) ) != null ) ) { org . eclipse . IDENT_0 . core . types . IDENT_10 IDENT_22 = new org . eclipse . IDENT_0 . core . library . types . METHOD_14 ( IDENT_21 . METHOD_1 ( ) ) ; try { java . lang . String IDENT_23 = IDENT_22 . format ( IDENT_13 ) ; IDENT_9 = IDENT_4 . trim ( ) ; IDENT_9 = ( ( IDENT_9 . substring ( 0 , ( ( IDENT_9 . indexOf ( STRING_5 ) ) + 1 ) ) ) + IDENT_23 ) + "]" ; } catch ( java . lang . IllegalArgumentException e ) { logger . debug ( STRING_4 0 , IDENT_22 , IDENT_8 , IDENT_13 , e . getMessage ( ) ) ; IDENT_9 = null ; } break ; } } } if ( state instanceof org . eclipse . IDENT_0 . core . library . types . IDENT_24 ) { org . eclipse . IDENT_0 . core . library . types . IDENT_24 < ? > IDENT_25 = ( ( org . eclipse . IDENT_0 . core . library . types . IDENT_24 < ? > ) ( state ) ) ; javax . IDENT_26 . IDENT_27 < ? > IDENT_28 = org . eclipse . IDENT_0 . core . types . util . IDENT_29 . METHOD_15 ( IDENT_13 ) ; if ( ( IDENT_28 != null ) && ( ! ( IDENT_25 . METHOD_16 ( ) . equals ( IDENT_28 ) ) ) ) { IDENT_25 = IDENT_25 . METHOD_17 ( IDENT_28 ) ; } IDENT_25 = METHOD_18 ( IDENT_25 , IDENT_3 ) ; state = IDENT_25 ; } try { IDENT_13 = METHOD_19 ( IDENT_13 , state ) ; } catch ( java . lang . IllegalArgumentException e ) { logger . warn ( STRING_6 , state , IDENT_8 , IDENT_13 , e . getMessage ( ) ) ; IDENT_13 = new java . lang . String ( STRING_7 ) ; } } IDENT_4 = IDENT_4 . trim ( ) ; IDENT_4 = ( ( IDENT_4 . substring ( 0 , ( ( IDENT_4 . indexOf ( STRING_5 ) ) + 1 ) ) ) + IDENT_13 ) + "]" ; } } return transform ( IDENT_4 , IDENT_9 ) ; }
org . junit . Assert . assertEquals ( "" , IDENT_4 ) 