METHOD_0 ( ) { java . lang . String filter = STRING_0 ; javax . jms . IDENT_0 IDENT_1 = METHOD_1 ( STRING_1 ) ; javax . jms . IDENT_2 session = IDENT_1 . METHOD_2 ( false , IDENT_2 . IDENT_3 ) ; session . METHOD_3 ( IDENT_4 , STRING_2 , STRING_3 , true ) ; session . close ( ) ; IDENT_1 . close ( ) ; IDENT_1 = METHOD_1 ( ) ; session = IDENT_1 . METHOD_2 ( false , IDENT_2 . IDENT_3 ) ; javax . jms . IDENT_5 IDENT_6 = session . METHOD_4 ( null ) ; for ( int i = 0 ; i < 10 ; i ++ ) { javax . jms . Message message = session . METHOD_5 ( ) ; message . METHOD_6 ( STRING_4 , STRING_5 ) ; IDENT_6 . METHOD_7 ( IDENT_4 , message ) ; } java . lang . Thread . sleep ( ( 1 * 1000 ) ) ; javax . jms . IDENT_0 IDENT_7 = METHOD_1 ( STRING_1 ) ; javax . jms . IDENT_2 IDENT_8 = IDENT_7 . METHOD_2 ( false , IDENT_2 . IDENT_3 ) ; IDENT_8 . METHOD_8 ( STRING_2 ) ; IDENT_8 . close ( ) ; IDENT_7 . close ( ) ; IDENT_4 = new org . apache . activemq . command . METHOD_9 ( ( ( IDENT_4 . METHOD_10 ( ) ) + STRING_6 ) ) ; IDENT_1 = METHOD_1 ( STRING_7 ) ; session = IDENT_1 . METHOD_2 ( false , IDENT_2 . IDENT_3 ) ; javax . jms . IDENT_9 consumer = session . METHOD_3 ( IDENT_4 , STRING_2 , filter , true ) ; org . apache . activemq . IDENT_10 . IDENT_11 listener = new org . apache . activemq . IDENT_10 . METHOD_11 ( ) ; consumer . METHOD_12 ( listener ) ; session . close ( ) ; IDENT_1 . close ( ) ; "<AssertPlaceHolder>" ; } close ( ) { if ( debug ) { System . err . println ( STRING_8 ) ; } if ( ( IDENT_12 ) != null ) { METHOD_13 ( ) ; if ( ( ( IDENT_12 ) != ( System . out ) ) && ( ( IDENT_12 ) != ( System . err ) ) ) { IDENT_12 . close ( ) ; IDENT_12 = null ; } } else if ( ( IDENT_13 ) != null ) { if ( ( IDENT_13 ) != ( System . in ) ) { IDENT_13 . close ( ) ; IDENT_13 = null ; } } }
org . junit . Assert . assertEquals ( 0 , listener . count ) 