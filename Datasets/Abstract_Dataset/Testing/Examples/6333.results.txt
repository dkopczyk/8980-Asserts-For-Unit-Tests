METHOD_0 ( ) { org . apache . ambari . server . IDENT_0 . IDENT_1 IDENT_2 = METHOD_1 ( org . apache . ambari . server . IDENT_0 . IDENT_1 . class ) ; org . apache . ambari . server . IDENT_0 . IDENT_1 IDENT_3 = METHOD_1 ( org . apache . ambari . server . IDENT_0 . IDENT_1 . class ) ; org . apache . ambari . server . IDENT_0 . IDENT_4 IDENT_5 = METHOD_1 ( org . apache . ambari . server . IDENT_0 . IDENT_4 . class ) ; expect ( IDENT_2 . METHOD_2 ( ) ) . andReturn ( false ) ; expect ( IDENT_3 . METHOD_3 ( ) ) . andReturn ( INT_0 ) ; expect ( IDENT_3 . METHOD_4 ( ) ) . andReturn ( 1L ) ; expect ( IDENT_5 . METHOD_5 ( STRING_0 ) ) . andReturn ( IDENT_2 ) ; java . util . Map < java . lang . String , org . apache . ambari . server . IDENT_0 . IDENT_6 > IDENT_7 = new java . util . HashMap ( ) ; org . apache . ambari . server . IDENT_0 . IDENT_6 IDENT_8 = METHOD_1 ( org . apache . ambari . server . IDENT_0 . IDENT_6 . class ) ; expect ( IDENT_8 . METHOD_6 ( ) ) . andReturn ( IDENT_9 . IDENT_10 ) . METHOD_7 ( ) ; expect ( IDENT_8 . getStatus ( ) ) . andReturn ( IDENT_11 . IDENT_12 ) ; IDENT_7 . put ( IDENT_9 . IDENT_10 . toString ( ) , IDENT_8 ) ; java . util . Map < java . lang . String , java . util . Map < java . lang . String , org . apache . ambari . server . IDENT_0 . IDENT_6 > > IDENT_13 = new java . util . HashMap ( ) ; IDENT_13 . put ( STRING_1 , IDENT_7 ) ; expect ( IDENT_2 . METHOD_8 ( ) ) . andReturn ( IDENT_13 ) . METHOD_7 ( ) ; expect ( IDENT_2 . METHOD_9 ( IDENT_9 . IDENT_10 ) ) . andReturn ( FLOAT_0 ) ; org . apache . ambari . server . IDENT_0 . IDENT_14 IDENT_15 = new org . apache . ambari . server . IDENT_0 . METHOD_10 ( 100 , 50 , IDENT_5 , null , 3 , new org . apache . ambari . server . controller . METHOD_11 ( ( ( java . lang . String ) ( null ) ) ) , null , null , null , IDENT_16 , ( ( org . apache . ambari . server . IDENT_17 . dao . IDENT_18 ) ( null ) ) , ( ( org . apache . ambari . server . IDENT_0 . IDENT_19 ) ( null ) ) , null , null ) ; replay ( IDENT_2 , IDENT_3 , IDENT_5 , IDENT_8 ) ; java . lang . reflect . Method method = IDENT_15 . getClass ( ) . METHOD_12 ( STRING_2 , org . apache . ambari . server . IDENT_0 . IDENT_1 . class ) ; method . METHOD_13 ( true ) ; java . lang . Object result = method . invoke ( IDENT_15 , IDENT_3 ) ; "<AssertPlaceHolder>" ; org . easymock . EasyMock . verify ( IDENT_2 , IDENT_3 , IDENT_5 , IDENT_8 ) ; } METHOD_9 ( org . apache . ambari . server . IDENT_9 ) { java . lang . IDENT_20 f = IDENT_21 . get ( r ) ; if ( f == null ) { if ( ( ( ( r . equals ( IDENT_9 . IDENT_10 ) ) || ( r . equals ( IDENT_9 . IDENT_22 ) ) ) || ( r . equals ( IDENT_9 . IDENT_23 ) ) ) || ( r . equals ( IDENT_9 . IDENT_24 ) ) ) { return ( ( float ) ( FLOAT_1 ) ) ; } else { return 1 ; } } else { return f ; } }
org . junit . Assert . assertFalse ( ( ( java . lang . Boolean ) ( result ) ) ) 