METHOD_0 ( ) { org . eclipse . IDENT_0 . repository . core . impl . IDENT_1 . IDENT_2 IDENT_3 = new org . eclipse . IDENT_0 . repository . core . impl . IDENT_1 . METHOD_1 ( ) ; IDENT_3 . METHOD_2 ( IDENT_4 ) ; org . eclipse . IDENT_0 . repository . core . impl . IDENT_5 IDENT_6 = new org . eclipse . IDENT_0 . repository . core . impl . METHOD_3 ( ) ; IDENT_6 . METHOD_4 ( java . util . Arrays . asList ( IDENT_3 ) ) ; IDENT_7 . METHOD_5 ( IDENT_6 ) ; try { IDENT_8 . METHOD_6 ( org . apache . commons . io . IDENT_9 . toByteArray ( new org . springframework . core . io . METHOD_7 ( STRING_0 ) . METHOD_8 ( ) ) ) ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( STRING_1 ) ; } java . util . Collection < org . eclipse . IDENT_0 . repository . core . IDENT_10 > IDENT_1 = IDENT_7 . METHOD_9 ( ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( byte [ ] ) { byte [ ] IDENT_11 = METHOD_10 ( ) ; org . IDENT_12 . jcr . api . IDENT_13 session = ( ( org . IDENT_12 . jcr . api . IDENT_13 ) ( METHOD_11 ( ) ) ) ; try { try { LOGGER . info ( STRING_2 ) ; METHOD_12 ( IDENT_14 , session ) ; } catch ( java . lang . Exception IDENT_15 ) { METHOD_12 ( IDENT_11 , session ) ; throw new java . lang . Exception ( this . IDENT_16 , IDENT_15 ) ; } } finally { session . METHOD_13 ( ) ; } }
org . junit . Assert . assertEquals ( 0 , IDENT_1 . size ( ) ) 