METHOD_0 ( ) { org . eclipse . xtext . util . IDENT_0 < java . lang . Boolean > IDENT_1 = org . eclipse . xtext . util . IDENT_0 . < java . lang . Boolean > METHOD_1 ( STRING_0 , this ) ; "<AssertPlaceHolder>" ; } invoke ( org . eclipse . xtext . validation . IDENT_2 ) { org . eclipse . xtext . validation . IDENT_3 . IDENT_4 IDENT_5 = instance . state . get ( ) ; if ( ( IDENT_5 != null ) && ( IDENT_5 != state ) ) throw new java . lang . IllegalStateException ( STRING_1 ) ; boolean IDENT_6 = IDENT_5 == null ; if ( IDENT_6 ) instance . state . set ( state ) ; try { if ( ! ( state . IDENT_7 . METHOD_2 ( IDENT_8 ) ) ) return ; try { state . IDENT_9 = method ; state . IDENT_10 = IDENT_8 ; method . METHOD_3 ( true ) ; method . invoke ( instance , state . IDENT_11 ) ; } catch ( java . lang . IllegalArgumentException e ) { org . eclipse . xtext . validation . IDENT_3 . log . error ( e . getMessage ( ) , e ) ; } catch ( java . lang . IDENT_12 e ) { org . eclipse . xtext . validation . IDENT_3 . log . error ( e . getMessage ( ) , e ) ; } catch ( java . lang . reflect . IDENT_13 e ) { java . lang . Throwable IDENT_14 = e . METHOD_4 ( ) ; METHOD_5 ( IDENT_14 , state ) ; } } finally { if ( IDENT_6 ) instance . state . remove ( ) ; } }
org . junit . Assert . assertTrue ( IDENT_1 . invoke ( true ) ) 