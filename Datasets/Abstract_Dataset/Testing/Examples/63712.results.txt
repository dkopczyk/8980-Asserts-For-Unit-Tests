METHOD_0 ( ) { java . lang . String IDENT_0 = IDENT_1 . METHOD_1 ( STRING_0 , "" , ws ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String , java . util . regex . IDENT_2 ) { if ( ( org . eclipse . xtext . util . IDENT_3 . isEmpty ( IDENT_4 ) ) || ( org . eclipse . xtext . util . IDENT_3 . isEmpty ( IDENT_5 ) ) ) return IDENT_4 ; org . eclipse . xtext . util . internal . IDENT_6 . IDENT_7 IDENT_8 = METHOD_2 ( IDENT_5 , format ) ; org . eclipse . xtext . util . internal . IDENT_6 . IDENT_7 IDENT_9 = METHOD_2 ( IDENT_4 , format ) ; if ( IDENT_8 . IDENT_10 . equals ( IDENT_9 . IDENT_10 ) ) return IDENT_5 ; java . util . List < org . eclipse . xtext . util . internal . IDENT_6 . IDENT_11 > IDENT_12 = com . google . common . collect . Lists . newArrayList ( ) ; java . util . List < org . eclipse . xtext . util . internal . IDENT_6 . IDENT_13 > IDENT_14 = com . google . common . collect . Lists . newArrayList ( ) ; METHOD_3 ( IDENT_8 , IDENT_9 , IDENT_12 , IDENT_14 ) ; for ( org . eclipse . xtext . util . internal . IDENT_6 . IDENT_11 m : IDENT_12 ) IDENT_9 . METHOD_4 ( IDENT_8 , m ) ; return IDENT_9 . toString ( ) ; }
org . junit . Assert . assertEquals ( "" , IDENT_0 ) 