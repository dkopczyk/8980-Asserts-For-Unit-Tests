METHOD_0 ( ) { try { org . eclipse . IDENT_0 . lib . IDENT_1 _builder = new org . eclipse . IDENT_0 . lib . METHOD_1 ( ) ; _builder . append ( STRING_0 ) ; _builder . METHOD_2 ( ) ; _builder . METHOD_2 ( ) ; _builder . append ( STRING_1 0 ) ; _builder . METHOD_2 ( ) ; _builder . append ( STRING_2 ) ; _builder . METHOD_2 ( ) ; _builder . append ( STRING_2 ) ; _builder . append ( STRING_3 ) ; _builder . METHOD_2 ( ) ; _builder . append ( STRING_2 ) ; _builder . append ( STRING_4 ) ; _builder . METHOD_2 ( ) ; _builder . append ( STRING_2 ) ; _builder . append ( STRING_5 ) ; _builder . METHOD_2 ( ) ; _builder . append ( STRING_2 ) ; _builder . append ( STRING_6 ) ; _builder . METHOD_2 ( ) ; _builder . append ( STRING_2 ) ; _builder . append ( STRING_7 ) ; _builder . METHOD_2 ( ) ; _builder . append ( STRING_2 ) ; _builder . append ( STRING_8 ) ; _builder . METHOD_2 ( ) ; _builder . append ( STRING_8 ) ; _builder . METHOD_2 ( ) ; final org . eclipse . IDENT_2 . core . IDENT_2 . IDENT_3 IDENT_4 = this . IDENT_5 . parse ( _builder , this . METHOD_3 ( ) ) ; final org . eclipse . IDENT_2 . core . IDENT_2 . IDENT_6 IDENT_7 = this . METHOD_4 ( IDENT_4 ) ; final java . lang . String IDENT_8 = this . IDENT_9 . METHOD_5 ( IDENT_7 ) ; org . eclipse . IDENT_0 . lib . METHOD_1 IDENT_10 = new org . eclipse . IDENT_0 . lib . METHOD_1 ( ) ; IDENT_10 . append ( STRING_1 ) ; IDENT_10 . METHOD_2 ( ) ; IDENT_10 . append ( STRING_9 ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Throwable IDENT_11 ) { throw org . eclipse . xtext . IDENT_12 . lib . IDENT_13 . METHOD_6 ( IDENT_11 ) ; } } toString ( ) { org . eclipse . xtext . IDENT_12 . lib . util . IDENT_14 b = new org . eclipse . xtext . IDENT_12 . lib . util . METHOD_7 ( this ) ; b . add ( STRING_10 , this . IDENT_15 ) ; b . add ( STRING_11 , this . IDENT_16 ) ; b . add ( STRING_12 , this . IDENT_17 ) ; b . add ( STRING_13 , this . IDENT_18 ) ; b . add ( STRING_14 , this . IDENT_19 ) ; return b . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_10 . toString ( ) , IDENT_8 ) 