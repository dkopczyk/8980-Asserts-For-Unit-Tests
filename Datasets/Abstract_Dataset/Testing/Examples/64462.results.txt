METHOD_0 ( ) { final java . util . List < com . IDENT_0 . IDENT_1 . html . components . tree . IDENT_2 > IDENT_3 = METHOD_1 ( ) ; final java . util . List < com . IDENT_0 . IDENT_1 . html . components . tree . IDENT_2 > IDENT_4 = IDENT_5 . METHOD_2 ( IDENT_3 , "" , true ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . util . List , java . lang . String [ ] , boolean ) { final java . util . List < com . IDENT_0 . IDENT_1 . html . components . tree . IDENT_2 > IDENT_4 = new java . util . ArrayList ( ) ; for ( final com . IDENT_0 . IDENT_1 . html . components . tree . IDENT_2 IDENT_6 : IDENT_3 ) { final com . IDENT_0 . IDENT_1 . IDENT_3 . dto . IDENT_7 IDENT_8 = ( ( com . IDENT_0 . IDENT_1 . IDENT_3 . dto . IDENT_7 ) ( IDENT_6 . METHOD_3 ( ) ) ) ; final java . lang . String IDENT_9 = ( ( IDENT_8 . METHOD_4 ( ) ) != null ) ? ( ( IDENT_8 . METHOD_4 ( ) ) + " " ) + ( IDENT_6 . METHOD_5 ( ) ) : IDENT_6 . METHOD_5 ( ) ; IDENT_6 . METHOD_6 ( false ) ; boolean match = true ; if ( IDENT_10 && ( ( IDENT_11 . length ) > 0 ) ) { final java . lang . String IDENT_12 = IDENT_11 [ 0 ] ; final boolean IDENT_13 = ( ( IDENT_8 . METHOD_4 ( ) ) != null ) && ( org . apache . commons . lang3 . StringUtils . METHOD_7 ( IDENT_8 . METHOD_4 ( ) , IDENT_12 ) ) ; final boolean IDENT_14 = org . apache . commons . lang3 . StringUtils . METHOD_7 ( IDENT_6 . METHOD_5 ( ) , IDENT_12 ) ; if ( ( ! IDENT_13 ) && ( ! IDENT_14 ) ) { match = false ; } } if ( match ) { for ( int i = ( IDENT_10 ) ? 1 : 0 ; i < ( IDENT_11 . length ) ; i ++ ) { if ( ! ( org . apache . commons . lang3 . StringUtils . METHOD_8 ( IDENT_9 , IDENT_11 [ i ] ) ) ) { match = false ; break ; } } } if ( match ) { IDENT_4 . add ( IDENT_6 ) ; } else { if ( ! ( IDENT_6 . METHOD_9 ( ) . isEmpty ( ) ) ) { final java . util . List < com . IDENT_0 . IDENT_1 . html . components . tree . IDENT_2 > IDENT_15 = METHOD_2 ( IDENT_6 . METHOD_9 ( ) , IDENT_11 , IDENT_10 ) ; if ( ! ( IDENT_15 . isEmpty ( ) ) ) { IDENT_6 . METHOD_10 ( IDENT_15 ) ; IDENT_4 . add ( IDENT_6 ) ; IDENT_6 . METHOD_6 ( true ) ; } } } } return IDENT_4 ; }
org . junit . Assert . assertEquals ( 1 , IDENT_4 . size ( ) ) 