METHOD_0 ( ) { new java . io . File ( IDENT_0 . parameter . IDENT_1 . IDENT_2 ) . delete ( ) ; IDENT_0 . util . IDENT_3 . create ( ) . METHOD_1 ( STRING_0 ) . METHOD_2 ( IDENT_0 . parameter . IDENT_1 . IDENT_2 ) . METHOD_3 ( STRING_1 , IDENT_0 . exception . IDENT_4 . class , STRING_2 , true ) ; java . io . File file = new java . io . File ( IDENT_0 . parameter . IDENT_1 . IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String , java . lang . Class , java . lang . String , boolean ) { METHOD_4 ( ) ; IDENT_5 = new IDENT_0 . util . METHOD_5 ( IDENT_6 , METHOD_6 ( ) ) ; try { IDENT_5 . METHOD_7 ( ) ; org . junit . Assert . fail ( ) ; } catch ( java . lang . Exception e ) { org . junit . Assert . assertEquals ( IDENT_7 , e . getClass ( ) ) ; int index = METHOD_8 ( IDENT_8 , IDENT_9 ) ; org . junit . Assert . assertThat ( IDENT_5 . METHOD_9 ( ) . get ( index ) , org . hamcrest . Matchers . startsWith ( STRING_3 ) ) ; org . junit . Assert . assertThat ( IDENT_5 . METHOD_9 ( ) . get ( index ) , org . hamcrest . Matchers . METHOD_10 ( STRING_4 ) ) ; } }
org . junit . Assert . assertThat ( file . exists ( ) , org . hamcrest . Matchers . is ( true ) ) 