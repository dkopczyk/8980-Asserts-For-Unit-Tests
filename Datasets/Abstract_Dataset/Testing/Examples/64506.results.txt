METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . state . IDENT_2 [ ] IDENT_3 = new com . IDENT_0 . IDENT_1 . state . IDENT_2 [ 10 ] ; for ( int i = 0 ; i < ( IDENT_3 . length ) ; i ++ ) { IDENT_3 [ i ] = new com . IDENT_0 . IDENT_1 . state . METHOD_1 ( ) ; } IDENT_3 [ 0 ] . METHOD_2 ( true ) ; IDENT_3 [ 1 ] . METHOD_3 ( INT_0 ) ; IDENT_3 [ 2 ] . METHOD_4 ( INT_1 ) ; IDENT_3 [ 3 ] . METHOD_5 ( INT_2 ) ; IDENT_3 [ 4 ] . METHOD_6 ( new float [ ] { FLOAT_0 , FLOAT_0 } ) ; IDENT_3 [ 5 ] . METHOD_7 ( METHOD_1 . IDENT_4 . IDENT_5 ) ; IDENT_3 [ 6 ] . METHOD_7 ( METHOD_1 . IDENT_4 . IDENT_6 ) ; IDENT_3 [ 7 ] . METHOD_8 ( METHOD_1 . IDENT_7 . IDENT_5 ) ; IDENT_3 [ 8 ] . METHOD_8 ( METHOD_1 . IDENT_7 . IDENT_8 ) ; IDENT_3 [ 8 ] . METHOD_8 ( METHOD_1 . IDENT_7 . IDENT_9 ) ; IDENT_3 [ 9 ] . METHOD_2 ( false ) ; IDENT_3 [ 9 ] . METHOD_3 ( 0 ) ; IDENT_3 [ 9 ] . METHOD_4 ( 0 ) ; IDENT_3 [ 9 ] . METHOD_5 ( INT_3 ) ; IDENT_3 [ 9 ] . METHOD_6 ( new float [ ] { FLOAT_1 , FLOAT_2 } ) ; IDENT_3 [ 9 ] . METHOD_7 ( METHOD_1 . IDENT_4 . IDENT_5 ) ; IDENT_3 [ 9 ] . METHOD_8 ( METHOD_1 . IDENT_7 . IDENT_5 ) ; try { for ( int i = 0 ; i < ( IDENT_3 . length ) ; i ++ ) { com . IDENT_0 . IDENT_1 . state . IDENT_10 m = new com . IDENT_0 . IDENT_1 . state . IDENT_10 . Builder ( IDENT_3 [ i ] ) . build ( ) ; java . lang . String IDENT_11 = com . IDENT_0 . IDENT_1 . persistence . IDENT_12 . encode ( m ) ; com . IDENT_0 . IDENT_1 . state . IDENT_10 IDENT_13 = com . IDENT_0 . IDENT_1 . persistence . IDENT_12 . decode ( IDENT_11 ) . IDENT_14 . first ; "<AssertPlaceHolder>" ; } } catch ( com . IDENT_0 . IDENT_1 . persistence . IDENT_15 e ) { org . junit . Assert . fail ( ) ; } catch ( com . IDENT_0 . IDENT_1 . persistence . IDENT_16 e ) { org . junit . Assert . fail ( ) ; } } decode ( java . lang . String ) { try { com . IDENT_0 . IDENT_1 . state . IDENT_10 . Builder IDENT_17 = new com . IDENT_0 . IDENT_1 . state . IDENT_10 . Builder ( ) ; int IDENT_18 = 0 ; java . util . ArrayList < java . lang . Integer > IDENT_19 = new java . util . ArrayList < java . lang . Integer > ( ) ; java . lang . Integer IDENT_20 = null ; com . IDENT_0 . IDENT_1 . persistence . IDENT_21 IDENT_22 = new com . IDENT_0 . IDENT_1 . persistence . METHOD_9 ( code ) ; int IDENT_23 = IDENT_22 . METHOD_10 ( 3 ) ; boolean IDENT_24 = IDENT_22 . METHOD_11 ( ) ; if ( IDENT_24 ) { for ( int i = 0 ; i < 50 ; i ++ ) { if ( IDENT_22 . METHOD_11 ( ) ) { IDENT_19 . add ( ( i + 1 ) ) ; } } } if ( ( ( ( IDENT_23 == 1 ) || ( IDENT_23 == 2 ) ) || ( IDENT_23 == 3 ) ) || ( IDENT_23 == 4 ) ) { boolean IDENT_25 = false ; if ( IDENT_23 >= 3 ) { IDENT_25 = IDENT_22 . METHOD_11 ( ) ; if ( IDENT_25 ) { IDENT_20 = IDENT_22 . METHOD_10 ( 8 ) ; } } IDENT_18 = IDENT_22 . METHOD_10 ( 6 ) ; IDENT_17 . METHOD_12 ( IDENT_18 ) ; boolean IDENT_26 = IDENT_22 . METHOD_11 ( ) ; int IDENT_27 = IDENT_22 . METHOD_10 ( 7 ) ; boolean IDENT_28 = IDENT_27 == INT_4 ; int IDENT_29 = IDENT_22 . METHOD_10 ( 6 ) ; int [ ] IDENT_30 = new int [ IDENT_29 ] ; for ( int i = 0 ; i < IDENT_29 ; i ++ ) { IDENT_30 [ i ] = IDENT_22 . METHOD_10 ( 20 ) ; } boolean IDENT_31 = ! ( ( ( IDENT_30 . length ) == 0 ) || ( ( ( IDENT_30 . length ) == 1 ) && ( ( IDENT_30 [ 0 ] ) == 0 ) ) ) ; if ( IDENT_31 && IDENT_26 ) { IDENT_17 . METHOD_13 ( IDENT_10 . IDENT_32 . IDENT_33 ) ; } else if ( IDENT_31 && IDENT_28 ) { IDENT_17 . METHOD_13 ( IDENT_10 . IDENT_32 . IDENT_34 ) ; } else { IDENT_17 . METHOD_13 ( IDENT_10 . IDENT_32 . IDENT_35 ) ; } IDENT_17 . METHOD_14 ( IDENT_31 ) ; int IDENT_36 ; if ( IDENT_23 >= 4 ) { IDENT_36 = IDENT_22 . METHOD_10 ( 12 ) ; } else { IDENT_36 = IDENT_22 . METHOD_10 ( 6 ) ; } com . IDENT_0 . IDENT_1 . state . METHOD_1 [ ] IDENT_37 = new com . IDENT_0 . IDENT_1 . state . METHOD_1 [ IDENT_36 ] ; for ( int i = 0 ; i < IDENT_36 ; i ++ ) { IDENT_37 [ i ] = com . IDENT_0 . IDENT_1 . persistence . IDENT_12 . METHOD_15 ( IDENT_22 ) ; if ( IDENT_23 < 3 ) { if ( ( IDENT_37 [ i ] . METHOD_16 ( ) ) != null ) { IDENT_20 = IDENT_37 [ i ] . METHOD_16 ( ) ; IDENT_37 [ i ] . METHOD_3 ( null ) ; } } } int IDENT_38 ; if ( IDENT_23 <= 2 ) { IDENT_38 = IDENT_22 . METHOD_10 ( 8 ) ; } else { IDENT_38 = IDENT_22 . METHOD_10 ( 12 ) ; } com . IDENT_0 . IDENT_1 . state . IDENT_39 [ ] IDENT_40 = new com . IDENT_0 . IDENT_1 . state . IDENT_39 [ IDENT_38 ] ; for ( int i = 0 ; i < IDENT_38 ; i ++ ) { int channel = IDENT_22 . METHOD_10 ( com . IDENT_0 . IDENT_1 . persistence . IDENT_12 . METHOD_17 ( IDENT_18 ) ) ; long IDENT_41 = com . IDENT_0 . IDENT_1 . persistence . Utils . METHOD_18 ( IDENT_30 [ IDENT_22 . METHOD_10 ( com . IDENT_0 . IDENT_1 . persistence . IDENT_12 . METHOD_17 ( IDENT_29 ) ) ] ) ; com . IDENT_0 . IDENT_1 . state . METHOD_1 state = IDENT_37 [ IDENT_22 . METHOD_10 ( com . IDENT_0 . IDENT_1 . persistence . IDENT_12 . METHOD_17 ( IDENT_36 ) ) ] ; IDENT_40 [ i ] = new com . IDENT_0 . IDENT_1 . state . METHOD_19 ( state , channel , IDENT_41 ) ; } IDENT_17 . METHOD_20 ( IDENT_40 ) ; if ( IDENT_23 >= 2 ) { IDENT_17 . METHOD_21 ( com . IDENT_0 . IDENT_1 . persistence . Utils . METHOD_18 ( IDENT_22 . METHOD_10 ( 20 ) ) ) ; } } else if ( IDENT_23 == 0 ) { throw new java . io . METHOD_22 ( ) ; } else { throw new com . IDENT_0 . IDENT_1 . persistence . METHOD_23 ( ) ; } java . lang . Integer [ ] IDENT_42 = null ; if ( IDENT_24 ) { IDENT_42 = new java . lang . Integer [ IDENT_19 . size ( ) ] ; for ( int i = 0 ; i < ( IDENT_19 . size ( ) ) ; i ++ ) { IDENT_42 [ i ] = IDENT_19 . get ( i ) ; } } com . IDENT_0 . IDENT_1 . state . IDENT_10 IDENT_43 = IDENT_17 . build ( ) ; return new android . util . IDENT_44 < java . lang . Integer [ ] , android . util . IDENT_44 < com . IDENT_0 . IDENT_1 . state . IDENT_10 , java . lang . Integer > > ( IDENT_42 , new android . util . IDENT_44 < com . IDENT_0 . IDENT_1 . state . IDENT_10 , java . lang . Integer > ( IDENT_43 , IDENT_20 ) ) ; } catch ( com . IDENT_0 . IDENT_1 . persistence . METHOD_23 e ) { throw new com . IDENT_0 . IDENT_1 . persistence . METHOD_23 ( ) ; } catch ( java . lang . Exception e ) { throw new com . IDENT_0 . IDENT_1 . persistence . METHOD_24 ( ) ; } }
org . junit . Assert . assertEquals ( m , IDENT_13 ) 