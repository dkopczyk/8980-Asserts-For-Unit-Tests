METHOD_0 ( ) { com . github . IDENT_0 . IDENT_1 . common . IDENT_2 . IDENT_3 c = new com . github . IDENT_0 . IDENT_1 . common . IDENT_2 . METHOD_1 ( ) ; java . security . IDENT_4 k = c . METHOD_2 ( INT_0 ) ; java . lang . String IDENT_5 = "" ; System . out . println ( ( " " + IDENT_5 ) ) ; java . lang . String IDENT_6 = c . METHOD_3 ( IDENT_5 , k . METHOD_4 ( ) ) ; System . out . println ( ( " " + IDENT_6 ) ) ; java . lang . String IDENT_7 = c . METHOD_5 ( IDENT_6 , k . METHOD_6 ( ) ) ; System . out . println ( ( " " + IDENT_7 ) ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . String , java . lang . String ) { java . lang . String json = new java . lang . String ( IDENT_8 . decode ( IDENT_9 ) ) ; com . github . IDENT_0 . IDENT_1 . common . IDENT_2 . IDENT_10 . IDENT_11 . IDENT_12 IDENT_13 = gson . METHOD_7 ( json , com . github . IDENT_0 . IDENT_1 . common . IDENT_2 . IDENT_10 . IDENT_11 . IDENT_12 . class ) ; com . github . IDENT_0 . IDENT_1 . common . IDENT_2 . IDENT_10 . IDENT_11 . IDENT_12 IDENT_14 = new com . github . IDENT_0 . IDENT_1 . common . IDENT_2 . IDENT_10 . IDENT_11 . METHOD_8 ( ) ; json = new java . lang . String ( IDENT_8 . decode ( IDENT_15 ) ) ; com . github . IDENT_0 . IDENT_1 . common . IDENT_2 . IDENT_10 . IDENT_16 key = gson . METHOD_7 ( json , com . github . IDENT_0 . IDENT_1 . common . IDENT_2 . IDENT_10 . IDENT_16 . class ) ; java . math . BigInteger IDENT_17 = new java . math . BigInteger ( IDENT_13 . IDENT_17 ) ; java . math . BigInteger IDENT_18 = new java . math . BigInteger ( IDENT_13 . IDENT_18 ) ; java . math . BigInteger k = new java . math . BigInteger ( IDENT_13 . k ) ; java . math . BigInteger d = key . METHOD_9 ( ) ; java . math . BigInteger n = key . METHOD_10 ( ) ; java . math . BigInteger IDENT_19 ; java . math . BigInteger IDENT_20 ; java . math . BigInteger m ; if ( BigInteger . IDENT_21 . equals ( k ) ) IDENT_19 = java . math . BigInteger . IDENT_21 ; else IDENT_19 = IDENT_17 . METHOD_11 ( d , n ) ; IDENT_20 = IDENT_18 . METHOD_11 ( d , n ) ; m = k . METHOD_12 ( IDENT_19 ) . add ( IDENT_20 ) ; IDENT_14 . m = m . toString ( ) ; IDENT_14 . IDENT_22 = IDENT_13 . IDENT_22 ; return decode ( IDENT_14 ) ; }
org . junit . Assert . assertEquals ( IDENT_5 , IDENT_7 ) 