METHOD_0 ( ) { com . github . IDENT_0 . IDENT_1 . common . jpa . IDENT_2 . IDENT_3 IDENT_4 = IDENT_5 . METHOD_1 ( IDENT_6 ) ; com . github . IDENT_0 . IDENT_1 . common . jpa . IDENT_7 . logger . debug ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( IDENT_8 extends java . io . IDENT_9 ) { final java . lang . StringBuilder IDENT_10 = new java . lang . StringBuilder ( ) ; final java . util . List < java . lang . Object > args = new java . util . ArrayList < java . lang . Object > ( ) ; final java . util . Set < java . lang . Object > set = new java . util . HashSet < java . lang . Object > ( ) ; java . lang . String IDENT_11 = METHOD_2 ( entity ) ; java . lang . String IDENT_12 = STRING_0 + ( IDENT_11 . charAt ( 0 ) ) ; IDENT_10 . append ( STRING_1 1 ) . append ( IDENT_12 ) . append ( STRING_1 2 ) . append ( IDENT_11 ) . append ( STRING_1 ) . append ( IDENT_12 ) ; class IDENT_13 { boolean first = true ; int position = 1 ; void METHOD_3 ( java . lang . Object o , java . lang . String IDENT_14 ) { java . lang . Class < ? > IDENT_15 ; if ( IDENT_16 . METHOD_4 ( o . getClass ( ) ) ) { IDENT_15 = IDENT_16 ; } else { IDENT_15 = o . getClass ( ) ; while ( ( IDENT_15 != null ) && ( IDENT_15 != ( java . lang . Object . class ) ) ) { javax . persistence . IDENT_17 IDENT_18 = IDENT_15 . METHOD_5 ( javax . persistence . IDENT_17 . class ) ; javax . persistence . Entity IDENT_19 = IDENT_15 . METHOD_5 ( javax . persistence . Entity . class ) ; if ( ( IDENT_18 != null ) || ( IDENT_19 != null ) ) { break ; } IDENT_15 = IDENT_15 . METHOD_6 ( ) ; } } try { for ( java . beans . IDENT_20 IDENT_21 : java . beans . IDENT_22 . METHOD_7 ( IDENT_15 , java . lang . Object . class ) . METHOD_8 ( ) ) { if ( ( com . github . IDENT_0 . IDENT_1 . common . utils . IDENT_23 . METHOD_5 ( IDENT_21 , javax . persistence . IDENT_24 . class ) ) != null ) { continue ; } java . lang . reflect . Method m = IDENT_21 . METHOD_9 ( ) ; if ( m == null ) { continue ; } java . lang . Object value = m . invoke ( o ) ; if ( value == null ) { continue ; } if ( METHOD_10 ( value ) ) { java . lang . String name = IDENT_21 . getName ( ) ; if ( first ) { IDENT_10 . append ( STRING_2 ) ; first = false ; if ( ( value instanceof java . lang . String ) && ( IDENT_25 ) ) { IDENT_10 . append ( STRING_3 ) . append ( IDENT_14 ) . append ( STRING_4 ) . append ( name ) . append ( STRING_5 ) . append ( STRING_6 ) . append ( position ) ; } else { IDENT_10 . append ( IDENT_14 ) . append ( STRING_4 ) . append ( name ) . append ( STRING_1 0 ) . append ( position ) ; } } else { IDENT_10 . append ( STRING_7 ) ; if ( ( value instanceof java . lang . String ) && ( IDENT_25 ) ) { IDENT_10 . append ( STRING_3 ) . append ( IDENT_14 ) . append ( STRING_4 ) . append ( name ) . append ( STRING_5 ) . append ( STRING_6 ) . append ( position ) ; } else { IDENT_10 . append ( IDENT_14 ) . append ( STRING_4 ) . append ( name ) . append ( STRING_1 0 ) . append ( position ) ; } } if ( ( value instanceof java . lang . String ) && ( IDENT_25 ) ) { args . add ( ( ( java . lang . String ) ( value ) ) . trim ( ) . toLowerCase ( ) ) ; } else { args . add ( value ) ; } ( position ) ++ ; } else { javax . persistence . IDENT_26 IDENT_27 = com . github . IDENT_0 . IDENT_1 . common . utils . IDENT_23 . METHOD_5 ( IDENT_21 , javax . persistence . IDENT_26 . class ) ; javax . persistence . IDENT_28 IDENT_29 = com . github . IDENT_0 . IDENT_1 . common . utils . IDENT_23 . METHOD_5 ( IDENT_21 , javax . persistence . IDENT_28 . class ) ; javax . persistence . IDENT_30 IDENT_31 = com . github . IDENT_0 . IDENT_1 . common . utils . IDENT_23 . METHOD_5 ( IDENT_21 , javax . persistence . IDENT_30 . class ) ; if ( ( ( IDENT_27 != null ) || ( IDENT_29 != null ) ) || ( IDENT_31 != null ) ) { if ( set . contains ( o ) ) { return ; } set . add ( o ) ; java . lang . String name = IDENT_21 . getName ( ) ; METHOD_3 ( value , ( ( IDENT_14 + STRING_8 ) + name ) ) ; } } } } catch ( java . beans . IDENT_32 | java . lang . IDENT_33 | java . lang . IllegalArgumentException | java . lang . reflect . IDENT_34 e ) { com . github . IDENT_0 . IDENT_1 . common . jpa . LOG . METHOD_11 ( e ) ; throw new java . lang . IllegalArgumentException ( e ) ; } } } new METHOD_12 ( ) . METHOD_3 ( entity , IDENT_12 ) ; if ( com . github . IDENT_0 . IDENT_1 . common . jpa . LOG . METHOD_13 ( ) ) com . github . IDENT_0 . IDENT_1 . common . jpa . LOG . debug ( ( ( ( ( STRING_9 + ( IDENT_10 . toString ( ) ) ) + "\n" ) + STRING_10 ) + ( java . util . Arrays . toString ( args . toArray ( ) ) ) ) ) ; return new com . github . IDENT_0 . IDENT_1 . common . jpa . IDENT_2 . METHOD_14 ( IDENT_10 . toString ( ) , args . toArray ( ) ) ; }
org . junit . Assert . assertFalse ( java . util . Arrays . asList ( IDENT_4 . args ) . isEmpty ( ) ) 