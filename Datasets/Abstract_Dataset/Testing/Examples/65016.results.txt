METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; com . IDENT_1 . IDENT_2 . Context context = new com . IDENT_1 . IDENT_2 . Context ( ) ; com . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = com . IDENT_1 . IDENT_2 . IDENT_3 . get ( context , true ) ; java . lang . String [ ] IDENT_5 = new java . lang . String [ ] { STRING_1 } ; java . lang . String IDENT_6 = STRING_2 ; com . IDENT_1 . IDENT_2 . IDENT_7 IDENT_8 = METHOD_1 ( IDENT_0 ) ; com . IDENT_1 . IDENT_2 . List < com . IDENT_1 . IDENT_2 . IDENT_9 > IDENT_10 = com . IDENT_1 . IDENT_2 . IDENT_11 . METHOD_2 ( IDENT_5 , IDENT_8 ) ; com . IDENT_1 . IDENT_2 . StringWriter writer = new com . IDENT_1 . IDENT_2 . StringWriter ( ) ; IDENT_4 . encode ( IDENT_8 , IDENT_10 , writer , true ) ; java . lang . String IDENT_12 = writer . toString ( ) ; com . IDENT_1 . IDENT_2 . IDENT_13 actual = com . IDENT_1 . IDENT_2 . IDENT_11 . METHOD_3 ( IDENT_12 ) . get ( IDENT_14 . IDENT_15 ) . METHOD_4 ( ) ; com . IDENT_1 . IDENT_2 . IDENT_13 expected = com . IDENT_1 . IDENT_2 . IDENT_16 . METHOD_5 ( IDENT_6 ) ; "<AssertPlaceHolder>" ; } get ( com . IDENT_1 . IDENT_2 . IDENT_17 , boolean ) { return com . IDENT_1 . IDENT_2 . IDENT_3 . get ( rules , IDENT_18 , new com . IDENT_1 . IDENT_2 . Context ( ) ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 