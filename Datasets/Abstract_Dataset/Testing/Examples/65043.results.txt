METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . support . IDENT_2 < java . lang . String , java . lang . String > IDENT_3 = com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 . METHOD_1 ( "" ) ; com . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_7 IDENT_6 = com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 . METHOD_2 ( "" ) ; com . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_7 cc = com . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_7 . METHOD_3 ( IDENT_6 , IDENT_3 ) ; com . IDENT_0 . IDENT_1 . core . IDENT_8 IDENT_9 = new com . IDENT_0 . IDENT_1 . tests . METHOD_4 ( ) ; com . IDENT_0 . IDENT_1 . IDENT_10 . IDENT_11 IDENT_12 = new com . IDENT_0 . IDENT_1 . tests . METHOD_5 ( STRING_0 ) ; com . IDENT_0 . IDENT_1 . query . IDENT_13 IDENT_14 = com . IDENT_0 . IDENT_1 . query . tests . IDENT_15 . METHOD_6 ( IDENT_12 ) ; IDENT_14 . METHOD_7 ( STRING_1 ) ; com . IDENT_0 . IDENT_1 . query . IDENT_16 IDENT_17 = new com . IDENT_0 . IDENT_1 . query . METHOD_8 ( com . IDENT_0 . IDENT_1 . query . METHOD_8 . IDENT_18 , cc , IDENT_9 , IDENT_12 , IDENT_14 ) ; IDENT_17 . METHOD_9 ( IDENT_14 . IDENT_19 ) ; java . lang . String q = IDENT_14 . METHOD_10 ( IDENT_20 . IDENT_21 . create ( ) ) ; com . IDENT_0 . IDENT_1 . query . tests . List < java . lang . String > IDENT_22 = new com . IDENT_0 . IDENT_1 . query . tests . ArrayList < java . lang . String > ( ) ; com . IDENT_0 . IDENT_1 . query . tests . List < java . lang . String > IDENT_23 = com . IDENT_0 . IDENT_1 . query . tests . Arrays . asList ( q . split ( "\n" ) ) ; for ( java . lang . String line : IDENT_23 ) if ( line . startsWith ( STRING_2 ) ) IDENT_22 . add ( line ) ; "<AssertPlaceHolder>" ; java . lang . String IDENT_24 = IDENT_22 . get ( 0 ) ; java . lang . String IDENT_25 = IDENT_22 . get ( 1 ) ; java . lang . String IDENT_26 = STRING_3 ; java . lang . String IDENT_27 = STRING_4 ; if ( ( IDENT_24 . equals ( IDENT_26 ) ) && ( IDENT_25 . equals ( IDENT_27 ) ) ) return ; if ( ( IDENT_24 . equals ( IDENT_27 ) ) && ( IDENT_25 . equals ( IDENT_26 ) ) ) return ; org . junit . Assert . fail ( STRING_5 ) ; } size ( ) { return elements . size ( ) ; }
org . junit . Assert . assertEquals ( 2 , IDENT_22 . size ( ) ) 