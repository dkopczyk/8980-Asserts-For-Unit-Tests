METHOD_0 ( ) { java . util . IDENT_0 random = new java . util . METHOD_1 ( ) ; byte [ ] key = new byte [ 16 ] ; random . METHOD_2 ( key ) ; for ( int i = 0 ; i < 1 ; i ++ ) { com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = new com . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_3 ( key ) ; java . lang . String IDENT_6 = STRING_0 ; byte [ ] IDENT_7 = IDENT_5 . METHOD_4 ( IDENT_6 . getBytes ( ) ) ; byte [ ] result = IDENT_5 . METHOD_5 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; System . out . println ( new java . lang . String ( result ) ) ; } } METHOD_5 ( byte [ ] ) { try { return IDENT_8 . METHOD_6 ( IDENT_9 ) ; } catch ( java . lang . Exception e ) { throw new com . IDENT_1 . IDENT_2 . exception . METHOD_7 ( e ) ; } }
org . junit . Assert . assertEquals ( IDENT_6 , new java . lang . String ( result ) ) 