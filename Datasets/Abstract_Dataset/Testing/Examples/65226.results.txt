METHOD_0 ( ) { final java . util . List < java . lang . String > input = com . google . common . collect . Lists . newArrayList ( STRING_0 , STRING_1 , STRING_2 ) ; final java . util . List < java . lang . String > expected = input ; final java . util . List < java . lang . String > actual = org . IDENT_0 . util . StringUtils . METHOD_1 ( input ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . util . List ) { if ( ( list . size ( ) ) <= 1 ) { return list ; } final int IDENT_1 = org . IDENT_0 . util . StringUtils . METHOD_2 ( list ) . length ( ) ; if ( IDENT_1 == 0 ) { return list ; } final java . util . List < java . lang . String > result = com . google . common . collect . Lists . newArrayList ( ) ; for ( final java . lang . String s : list ) { result . add ( s . substring ( IDENT_1 ) ) ; } return result ; }
org . junit . Assert . assertEquals ( expected , actual ) 