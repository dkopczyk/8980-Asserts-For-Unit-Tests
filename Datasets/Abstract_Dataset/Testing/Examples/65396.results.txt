METHOD_0 ( ) { java . lang . String IDENT_0 = codec . encode ( IDENT_1 , string ) ; "<AssertPlaceHolder>" ; } encode ( char [ ] , java . lang . String ) { java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; for ( int offset = 0 ; offset < ( input . length ( ) ) ; ) { final int IDENT_2 = input . METHOD_1 ( offset ) ; if ( java . lang . IDENT_3 . METHOD_2 ( IDENT_2 ) ) { sb . append ( METHOD_3 ( IDENT_4 , IDENT_2 ) ) ; } offset += java . lang . IDENT_3 . METHOD_4 ( IDENT_2 ) ; } return sb . toString ( ) ; }
org . junit . Assert . assertEquals ( string , IDENT_0 ) 