test ( ) { eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new eu . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_0 ( getClass ( ) . getResourceAsStream ( STRING_0 ) ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . IDENT_6 IDENT_7 = new eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . METHOD_1 ( ) ; IDENT_7 . METHOD_2 ( ) . METHOD_3 ( new java . util . Date ( ) ) ; IDENT_7 . METHOD_4 ( METHOD_5 ( ) ) ; IDENT_7 . METHOD_6 ( METHOD_7 ( ) ) ; IDENT_7 . METHOD_8 ( IDENT_8 . IDENT_9 ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . IDENT_10 . IDENT_11 service = new eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_5 . IDENT_10 . METHOD_9 ( METHOD_10 ( ) ) ; service . METHOD_11 ( METHOD_12 ( ) ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_12 IDENT_13 = service . METHOD_13 ( IDENT_4 , IDENT_7 ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_14 IDENT_15 = METHOD_14 ( ) . METHOD_15 ( IDENT_13 , IDENT_7 . METHOD_16 ( ) , METHOD_17 ( ) ) ; final eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_16 = service . METHOD_18 ( IDENT_4 , IDENT_7 , IDENT_15 ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . validation . IDENT_17 validator = eu . IDENT_0 . IDENT_1 . IDENT_2 . validation . IDENT_17 . METHOD_19 ( IDENT_16 ) ; validator . METHOD_20 ( METHOD_10 ( ) ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . validation . IDENT_18 . IDENT_19 report = validator . METHOD_21 ( ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . validation . IDENT_18 . IDENT_20 . IDENT_21 IDENT_22 = report . METHOD_22 ( ) ; java . lang . String IDENT_23 = IDENT_22 . METHOD_23 ( ) ; for ( eu . IDENT_0 . IDENT_1 . IDENT_2 . validation . IDENT_18 . IDENT_20 . IDENT_24 IDENT_20 : IDENT_22 . METHOD_24 ( IDENT_23 ) ) { boolean found = false ; for ( eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_25 . IDENT_22 . IDENT_26 IDENT_27 : IDENT_20 . METHOD_25 ( ) ) { if ( ( ( eu . IDENT_0 . IDENT_1 . IDENT_2 . validation . IDENT_28 . IDENT_29 ) == ( IDENT_27 . METHOD_26 ( ) ) ) && ( IDENT_23 . equals ( IDENT_27 . getId ( ) ) ) ) { found = true ; } } "<AssertPlaceHolder>" ; } } getId ( ) { if ( ( IDENT_23 ) == null ) { java . lang . String IDENT_30 = eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_31 . IDENT_32 . METHOD_27 ( IDENT_33 ) ; if ( IDENT_30 != null ) { IDENT_23 = IDENT_30 ; } else { final eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_34 . IDENT_35 IDENT_36 = METHOD_28 ( ) ; eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_37 IDENT_38 = ( IDENT_36 == null ) ? null : IDENT_36 . METHOD_29 ( ) ; IDENT_23 = eu . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_39 . METHOD_30 ( METHOD_31 ( ) , IDENT_38 ) ; } } return IDENT_23 ; }
org . junit . Assert . assertTrue ( found ) 