METHOD_0 ( ) { int [ ] actual = new int [ ] { 5 , 1 , 6 , 2 , 3 , 4 } ; int [ ] expected = new int [ ] { 1 , 2 , 3 , 4 , 5 , 6 } ; com . baeldung . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( actual , actual . length ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( int [ ] , int ) { if ( n < 2 ) return ; int IDENT_3 = n / 2 ; int [ ] l = new int [ IDENT_3 ] ; int [ ] r = new int [ n - IDENT_3 ] ; for ( int i = 0 ; i < IDENT_3 ; i ++ ) { l [ i ] = a [ i ] ; } for ( int i = IDENT_3 ; i < n ; i ++ ) { r [ ( i - IDENT_3 ) ] = a [ i ] ; } com . baeldung . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( l , IDENT_3 ) ; com . baeldung . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( r , ( n - IDENT_3 ) ) ; com . baeldung . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_2 ( a , l , r , IDENT_3 , ( n - IDENT_3 ) ) ; }
org . junit . Assert . assertArrayEquals ( expected , actual ) 