METHOD_0 ( ) { java . util . List < java . lang . String > headers = null ; java . lang . String expected = com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ; java . lang . String actual = IDENT_4 . METHOD_1 ( headers , com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . util . List , java . lang . String ) { if ( ( headers == null ) || ( headers . isEmpty ( ) ) ) { return IDENT_5 ; } java . lang . StringBuilder IDENT_6 = new java . lang . StringBuilder ( ) ; for ( int i = 0 ; i < ( headers . size ( ) ) ; i ++ ) { java . lang . String header = ( ( java . lang . String ) ( headers . get ( i ) ) ) ; IDENT_6 . append ( header ) ; IDENT_6 . append ( STRING_0 ) ; } IDENT_6 . append ( IDENT_5 ) ; return IDENT_6 . toString ( ) ; }
org . junit . Assert . assertThat ( actual , org . hamcrest . CoreMatchers . is ( expected ) ) 