METHOD_0 ( ) { java . util . List < com . baeldung . collection . IDENT_0 . IDENT_1 > IDENT_2 = new java . util . ArrayList ( ) ; java . util . List < com . baeldung . collection . IDENT_0 . IDENT_1 > IDENT_3 = METHOD_1 ( ) ; java . util . List < java . lang . String > IDENT_4 = METHOD_2 ( ) ; for ( com . baeldung . collection . IDENT_0 . IDENT_1 IDENT_5 : IDENT_3 ) { for ( java . lang . String name : IDENT_4 ) { if ( IDENT_5 . getName ( ) . equalsIgnoreCase ( name ) ) { IDENT_2 . add ( IDENT_5 ) ; } } } "<AssertPlaceHolder>" ; } size ( ) { return elements . size ( ) ; }
org . junit . Assert . assertThat ( IDENT_2 . size ( ) , org . hamcrest . Matchers . is ( IDENT_4 . size ( ) ) ) 