METHOD_0 ( ) { final java . io . IDENT_0 stream = new java . io . METHOD_1 ( IDENT_1 , STRING_0 ) ; final java . nio . IDENT_2 . IDENT_3 channel = stream . METHOD_2 ( ) ; final java . lang . String value = STRING_1 ; final byte [ ] IDENT_4 = value . getBytes ( ) ; final java . nio . ByteBuffer buffer = java . nio . ByteBuffer . METHOD_3 ( IDENT_4 . length ) ; buffer . put ( IDENT_4 ) ; buffer . METHOD_4 ( ) ; channel . write ( buffer ) ; stream . close ( ) ; channel . close ( ) ; final java . io . METHOD_1 reader = new java . io . METHOD_1 ( IDENT_1 , STRING_2 ) ; "<AssertPlaceHolder>" ; reader . close ( ) ; } METHOD_5 ( ) { try { if ( ( IDENT_5 ) == null ) METHOD_6 ( ) ; java . lang . String [ ] line = IDENT_5 . METHOD_7 ( ) ; if ( line == null ) return null ; return new org . baeldung . IDENT_6 . model . METHOD_8 ( line [ 0 ] , java . time . IDENT_7 . parse ( line [ 1 ] , java . time . format . IDENT_8 . METHOD_9 ( STRING_3 ) ) ) ; } catch ( java . lang . Exception e ) { logger . error ( ( STRING_4 + ( this . IDENT_9 ) ) ) ; return null ; } }
org . junit . Assert . assertEquals ( value , reader . METHOD_5 ( ) ) 