METHOD_0 ( ) { byte [ ] IDENT_0 = new byte [ 16 ] ; IDENT_1 . METHOD_1 ( IDENT_0 ) ; java . lang . String IDENT_2 = IDENT_3 . hash ( STRING_0 , IDENT_0 ) ; java . lang . String IDENT_4 = IDENT_3 . hash ( STRING_0 , IDENT_0 ) ; "<AssertPlaceHolder>" ; } hash ( java . lang . String , byte [ ] ) { java . lang . String IDENT_5 = null ; try { java . security . IDENT_6 IDENT_7 = java . security . IDENT_6 . getInstance ( STRING_1 ) ; IDENT_7 . update ( IDENT_0 ) ; byte [ ] bytes = IDENT_7 . METHOD_2 ( IDENT_8 . getBytes ( IDENT_9 . UTF_8 ) ) ; java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; for ( int i = 0 ; i < ( bytes . length ) ; i ++ ) { sb . append ( java . lang . Integer . toString ( ( ( ( bytes [ i ] ) & 255 ) + INT_0 ) , 16 ) . substring ( 1 ) ) ; } IDENT_5 = sb . toString ( ) ; } catch ( java . security . IDENT_10 e ) { e . printStackTrace ( ) ; } return IDENT_5 ; }
org . junit . Assert . assertEquals ( IDENT_2 , IDENT_4 ) 