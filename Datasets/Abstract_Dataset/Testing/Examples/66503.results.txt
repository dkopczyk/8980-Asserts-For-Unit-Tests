METHOD_0 ( ) { java . util . List < java . lang . Integer > IDENT_0 = java . util . stream . IDENT_1 . METHOD_1 ( 1 , 10 ) . filter ( ( i ) -> ( i OP_0 2 ) == 0 ) . METHOD_2 ( ) . collect ( java . util . stream . IDENT_2 . toList ( ) ) ; java . util . List < java . lang . Integer > expected = java . util . stream . IDENT_1 . of ( 2 , 4 , 6 , 8 , 10 ) . METHOD_2 ( ) . collect ( java . util . stream . IDENT_2 . toList ( ) ) ; "<AssertPlaceHolder>" ; } filter ( javax . ws . rs . container . IDENT_3 ) { com . baeldung . jersey . server . filter . IDENT_4 . LOG . info ( STRING_0 ) ; if ( ( ( ctx . METHOD_3 ( ) ) != null ) && ( STRING_1 . equals ( ctx . METHOD_3 ( ) . METHOD_3 ( ) ) ) ) { com . baeldung . jersey . server . filter . IDENT_4 . LOG . info ( STRING_2 ) ; ctx . METHOD_4 ( javax . ws . rs . core . Response . status ( Response . Status . IDENT_5 ) . entity ( STRING_3 ) . build ( ) ) ; } }
org . junit . Assert . assertEquals ( expected , IDENT_0 ) 