METHOD_0 ( ) { javax . servlet . http . IDENT_0 IDENT_1 = METHOD_1 ( javax . servlet . http . IDENT_0 . class ) ; expect ( IDENT_1 . METHOD_2 ( STRING_0 ) ) . andReturn ( null ) . METHOD_3 ( ) ; expect ( configuration . METHOD_4 ( ) ) . andReturn ( METHOD_5 ( true ) ) . METHOD_3 ( ) ; METHOD_6 ( ) ; org . apache . ambari . server . security . authentication . IDENT_2 . IDENT_3 filter = new org . apache . ambari . server . security . authentication . IDENT_2 . METHOD_7 ( IDENT_4 , IDENT_5 , configuration , IDENT_6 ) ; "<AssertPlaceHolder>" ; METHOD_8 ( ) ; } METHOD_9 ( javax . servlet . http . IDENT_0 ) { if ( org . apache . ambari . server . security . authentication . IDENT_7 . LOG . METHOD_10 ( ) ) { org . apache . ambari . server . utils . IDENT_8 . METHOD_11 ( IDENT_1 , org . apache . ambari . server . security . authentication . IDENT_7 . LOG ) ; } java . lang . String header = IDENT_1 . METHOD_2 ( STRING_0 ) ; if ( ( header != null ) && ( header . startsWith ( STRING_1 ) ) ) { java . lang . String IDENT_9 = org . apache . ambari . server . utils . IDENT_8 . METHOD_12 ( IDENT_1 , STRING_2 ) ; if ( org . apache . commons . lang . StringUtils . isEmpty ( IDENT_9 ) ) { return true ; } else { org . apache . ambari . server . security . authentication . IDENT_7 . LOG . warn ( ( STRING_3 + STRING_4 ) ) ; return false ; } } else { return false ; } }
org . junit . Assert . assertFalse ( filter . METHOD_9 ( IDENT_1 ) ) 