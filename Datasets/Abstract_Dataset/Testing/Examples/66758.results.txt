METHOD_0 ( ) { com . baeldung . solr . IDENT_0 . search . service . IDENT_1 . IDENT_2 . index ( STRING_0 , STRING_1 0 , STRING_2 , FLOAT_0 ) ; com . baeldung . solr . IDENT_0 . search . service . IDENT_1 . IDENT_2 . index ( STRING_3 , STRING_4 , STRING_2 , FLOAT_1 ) ; com . baeldung . solr . IDENT_0 . search . service . IDENT_1 . IDENT_2 . index ( STRING_1 , STRING_5 , STRING_2 , FLOAT_2 ) ; com . baeldung . solr . IDENT_0 . search . service . IDENT_1 . IDENT_2 . index ( STRING_1 2 , STRING_6 , STRING_7 , FLOAT_3 ) ; org . apache . solr . client . IDENT_3 . IDENT_4 query = new org . apache . solr . client . IDENT_3 . METHOD_1 ( ) ; query . METHOD_2 ( STRING_8 ) ; query . METHOD_3 ( STRING_9 , STRING_1 1 ) ; org . apache . solr . client . IDENT_3 . response . IDENT_5 response = com . baeldung . solr . IDENT_0 . search . service . IDENT_1 . IDENT_6 . query ( query ) ; java . util . List < com . baeldung . solr . IDENT_0 . search . model . IDENT_7 > IDENT_8 = response . METHOD_4 ( com . baeldung . solr . IDENT_0 . search . model . IDENT_7 . class ) ; "<AssertPlaceHolder>" ; } size ( ) { return elements . size ( ) ; }
org . junit . Assert . assertEquals ( 2 , IDENT_8 . size ( ) ) 