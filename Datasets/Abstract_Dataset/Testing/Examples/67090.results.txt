METHOD_0 ( ) { org . mockito . Mockito . when ( eu . IDENT_0 . IDENT_1 . rest . client . IDENT_2 . IDENT_3 . response . getStatus ( ) ) . thenReturn ( 200 ) ; org . mockito . Mockito . when ( eu . IDENT_0 . IDENT_1 . rest . client . IDENT_2 . IDENT_3 . response . METHOD_1 ( IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . class ) ) . thenReturn ( new IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_2 ( ) ) ; IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 dataset = eu . IDENT_0 . IDENT_1 . rest . client . IDENT_2 . IDENT_3 . IDENT_9 . METHOD_3 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String ) { javax . ws . rs . client . IDENT_10 target = client . target ( ( ( ( ( ( IDENT_11 ) + "/" ) + ( org . IDENT_12 . IDENT_1 . rest . IDENT_13 . IDENT_14 . IDENT_15 ) ) + "/" ) + IDENT_16 ) ) ; javax . ws . rs . core . Response response = target . request ( IDENT_17 . IDENT_18 ) . get ( ) ; if ( ( response . getStatus ( ) ) == INT_0 ) { org . IDENT_12 . IDENT_1 . rest . IDENT_13 . Result IDENT_19 = response . METHOD_1 ( org . IDENT_12 . IDENT_1 . rest . IDENT_13 . Result . class ) ; eu . IDENT_0 . IDENT_1 . rest . client . IDENT_2 . IDENT_20 . LOGGER . warn ( ( STRING_1 + ( IDENT_19 . METHOD_4 ( ) ) ) ) ; throw new IDENT_4 . IDENT_5 . IDENT_6 . util . exceptions . METHOD_5 ( IDENT_19 . METHOD_4 ( ) ) ; } IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 IDENT_21 = response . METHOD_1 ( IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . class ) ; eu . IDENT_0 . IDENT_1 . rest . client . IDENT_2 . IDENT_20 . LOGGER . info ( STRING_2 ) ; return IDENT_21 ; }
org . junit . Assert . assertNotNull ( dataset ) 