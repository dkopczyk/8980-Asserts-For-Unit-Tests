METHOD_0 ( ) { org . evosuite . IDENT_0 . IDENT_1 tc = METHOD_1 ( STRING_0 ) ; java . util . List < org . evosuite . IDENT_2 . IDENT_3 > IDENT_4 = METHOD_2 ( tc ) ; java . util . Collection < org . evosuite . IDENT_2 . expr . IDENT_5 < ? > > IDENT_6 = new java . util . ArrayList < org . evosuite . IDENT_2 . expr . IDENT_5 < ? > > ( ) ; for ( int i = 0 ; i < ( ( IDENT_4 . size ( ) ) - 2 ) ; i ++ ) { org . evosuite . IDENT_2 . IDENT_3 b = IDENT_4 . get ( i ) ; IDENT_6 . addAll ( b . METHOD_3 ( ) ) ; IDENT_6 . add ( b . METHOD_4 ( ) ) ; } org . evosuite . IDENT_2 . IDENT_3 IDENT_7 = IDENT_4 . get ( ( ( IDENT_4 . size ( ) ) - 2 ) ) ; IDENT_6 . addAll ( IDENT_7 . METHOD_3 ( ) ) ; IDENT_6 . add ( IDENT_7 . METHOD_4 ( ) . METHOD_5 ( ) ) ; org . evosuite . IDENT_2 . IDENT_8 . IDENT_9 . IDENT_10 IDENT_8 = new org . evosuite . IDENT_2 . IDENT_8 . IDENT_9 . METHOD_6 ( ) ; java . util . Map < java . lang . String , java . lang . Object > solution ; try { solution = org . evosuite . IDENT_2 . IDENT_8 . IDENT_11 . METHOD_7 ( IDENT_8 , IDENT_6 ) ; "<AssertPlaceHolder>" ; System . out . println ( solution ) ; } catch ( org . evosuite . IDENT_2 . IDENT_8 . IDENT_12 e ) { org . junit . Assert . fail ( ) ; } } METHOD_7 ( org . evosuite . IDENT_2 . IDENT_8 . IDENT_13 , java . util . Collection ) { if ( METHOD_8 ( IDENT_6 ) ) { org . evosuite . IDENT_2 . IDENT_8 . IDENT_14 IDENT_15 = METHOD_9 ( ) ; return IDENT_15 ; } org . evosuite . IDENT_2 . IDENT_8 . IDENT_14 IDENT_16 ; try { IDENT_16 = IDENT_8 . METHOD_7 ( IDENT_6 ) ; if ( IDENT_16 . METHOD_10 ( ) ) { METHOD_11 ( IDENT_6 , IDENT_16 ) ; } else { METHOD_12 ( IDENT_6 , IDENT_16 ) ; } } catch ( org . evosuite . IDENT_2 . IDENT_8 . IDENT_12 | java . io . IOException | org . evosuite . IDENT_2 . IDENT_8 . IDENT_17 | org . evosuite . IDENT_2 . IDENT_8 . IDENT_18 | org . evosuite . IDENT_2 . IDENT_8 . IDENT_19 e ) { IDENT_16 = null ; } return IDENT_16 ; }
org . junit . Assert . assertNotNull ( solution ) 