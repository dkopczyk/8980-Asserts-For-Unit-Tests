METHOD_0 ( ) { final org . IDENT_0 . api . IDENT_1 . IDENT_2 IDENT_3 = ( ( org . IDENT_0 . api . IDENT_1 . IDENT_2 ) ( org . exist . collections . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_1 ( org . exist . collections . IDENT_4 . IDENT_5 . IDENT_7 , STRING_0 ) ) ) ; ( ( org . exist . IDENT_0 . IDENT_8 ) ( IDENT_3 ) ) . METHOD_2 ( STRING_1 ) ; IDENT_3 . METHOD_3 ( org . exist . collections . IDENT_4 . IDENT_5 . IDENT_9 . getBytes ( ) ) ; org . exist . collections . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_4 ( IDENT_3 ) ; final org . exist . IDENT_0 . IDENT_10 IDENT_11 = ( ( org . exist . IDENT_0 . IDENT_10 ) ( org . exist . collections . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_5 ( STRING_2 , STRING_3 ) ) ) ; IDENT_11 . METHOD_6 ( org . exist . collections . IDENT_4 . IDENT_5 . IDENT_12 ) ; final int IDENT_13 = 10 ; int IDENT_14 = 0 ; for ( int i = 0 ; i < IDENT_13 ; i ++ ) { try { final org . IDENT_0 . api . IDENT_1 . IDENT_15 doc = ( ( org . IDENT_0 . api . IDENT_1 . IDENT_15 ) ( org . exist . collections . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_1 ( org . exist . collections . IDENT_4 . IDENT_5 . IDENT_16 , STRING_4 ) ) ) ; doc . METHOD_3 ( org . exist . collections . IDENT_4 . IDENT_5 . IDENT_17 ) ; org . exist . collections . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_4 ( doc ) ; } catch ( org . IDENT_0 . api . base . IDENT_18 IDENT_19 ) { if ( ( IDENT_19 . METHOD_7 ( ) ) instanceof org . exist . collections . IDENT_4 . IDENT_20 ) { if ( IDENT_19 . METHOD_7 ( ) . getMessage ( ) . equals ( IDENT_21 . IDENT_22 ) ) { IDENT_14 ++ ; } } } } "<AssertPlaceHolder>" ; } equals ( org . exist . IDENT_23 . IDENT_24 ) { return ( i ) == ( ( ( org . exist . util . IDENT_25 . IDENT_26 ) ( IDENT_27 ) ) . i ) ; }
org . junit . Assert . assertEquals ( IDENT_13 , IDENT_14 ) 