METHOD_0 ( ) { final org . exist . storage . IDENT_0 IDENT_1 = org . easymock . EasyMock . METHOD_1 ( org . exist . storage . IDENT_0 . class ) ; final org . exist . IDENT_2 IDENT_3 = org . easymock . EasyMock . METHOD_1 ( org . exist . IDENT_2 . class ) ; final org . exist . storage . IDENT_4 IDENT_5 = org . easymock . EasyMock . METHOD_1 ( org . exist . storage . IDENT_4 . class ) ; final org . exist . dom . IDENT_6 . IDENT_7 IDENT_8 = org . easymock . EasyMock . METHOD_1 ( org . exist . dom . IDENT_6 . IDENT_7 . class ) ; final org . exist . dom . IDENT_6 . IDENT_9 IDENT_10 = org . easymock . EasyMock . METHOD_1 ( org . exist . dom . IDENT_6 . IDENT_9 . class ) ; final org . exist . security . IDENT_11 IDENT_12 = org . easymock . EasyMock . METHOD_1 ( org . exist . security . IDENT_11 . class ) ; expect ( IDENT_1 . METHOD_2 ( ) ) . andReturn ( IDENT_12 ) . times ( 2 ) ; expect ( IDENT_12 . METHOD_3 ( ) ) . andReturn ( IDENT_3 ) . times ( 2 ) ; expect ( IDENT_3 . METHOD_4 ( ) ) . andReturn ( IDENT_5 ) . times ( 2 ) ; expect ( IDENT_5 . METHOD_5 ( ) ) . andReturn ( IDENT_8 ) . times ( 2 ) ; expect ( IDENT_8 . METHOD_6 ( ) ) . andReturn ( IDENT_13 . IDENT_14 ) . times ( 2 ) ; expect ( IDENT_8 . getId ( ) ) . andReturn ( IDENT_15 . IDENT_16 ) . times ( 2 ) ; expect ( IDENT_8 . METHOD_7 ( ) ) . andReturn ( IDENT_10 ) . times ( 2 ) ; expect ( IDENT_10 . getId ( ) ) . andReturn ( IDENT_15 . IDENT_17 ) . times ( 2 ) ; replay ( IDENT_1 , IDENT_3 , IDENT_5 , IDENT_8 , IDENT_10 , IDENT_12 ) ; final org . exist . dom . IDENT_6 . IDENT_18 doc = new org . exist . dom . IDENT_6 . METHOD_8 ( IDENT_1 ) ; doc . METHOD_9 ( INT_0 ) ; final org . exist . dom . IDENT_6 . METHOD_8 IDENT_19 = new org . exist . dom . IDENT_6 . METHOD_8 ( IDENT_1 ) ; IDENT_19 . METHOD_9 ( INT_1 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_1 , IDENT_3 , IDENT_5 , IDENT_8 , IDENT_10 , IDENT_12 ) ; } METHOD_10 ( org . w3c . dom . Node ) { if ( other instanceof org . exist . dom . IDENT_6 . METHOD_8 ) { return ( this . IDENT_20 ) == ( ( ( org . exist . dom . IDENT_6 . METHOD_8 ) ( other ) ) . METHOD_11 ( ) ) ; } else { return false ; } }
org . junit . Assert . assertFalse ( doc . METHOD_10 ( IDENT_19 ) ) 