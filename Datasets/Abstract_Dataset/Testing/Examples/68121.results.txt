METHOD_0 ( ) { io . IDENT_0 . maven . IDENT_1 . IDENT_2 . IDENT_3 a = IDENT_3 . Builder . get ( ) . METHOD_1 ( STRING_0 ) . METHOD_1 ( "foo" 3 ) . build ( ) ; io . IDENT_0 . maven . IDENT_1 . IDENT_2 . IDENT_3 b = IDENT_3 . Builder . get ( ) . METHOD_1 ( "foo" 8 ) . METHOD_1 ( "foo" 1 ) . build ( ) ; java . lang . String IDENT_4 = new io . IDENT_0 . maven . IDENT_1 . IDENT_2 . METHOD_2 ( ) . add ( STRING_1 , STRING_2 ) . METHOD_3 ( "foo" 4 ) . METHOD_4 ( a ) . METHOD_5 ( com . google . common . collect . ImmutableMap . of ( "foo" , "bar" ) ) . METHOD_6 ( "foo" 7 ) . METHOD_7 ( io . IDENT_0 . maven . IDENT_1 . IDENT_2 . Collections . singletonList ( STRING_3 ) ) . METHOD_8 ( STRING_4 ) . METHOD_9 ( "foo" 5 ) . METHOD_10 ( com . google . common . collect . ImmutableMap . of ( STRING_5 , STRING_6 ) ) . METHOD_11 ( io . IDENT_0 . maven . IDENT_1 . IDENT_2 . Collections . singletonList ( "foo" 0 ) ) . shell ( b ) . run ( io . IDENT_0 . maven . IDENT_1 . IDENT_2 . Arrays . asList ( "foo" 9 , "foo" 6 ) ) . content ( ) ; java . lang . String expected = METHOD_12 ( "foo" 2 ) ; "<AssertPlaceHolder>" ; } METHOD_13 ( java . lang . String ) { return input . replaceAll ( STRING_7 , "" ) ; }
org . junit . Assert . assertEquals ( expected , METHOD_13 ( IDENT_4 ) ) 