METHOD_0 ( ) { METHOD_1 ( new io . IDENT_0 . maven . IDENT_1 . util . IDENT_2 . METHOD_2 ( ) { @ io . IDENT_0 . maven . IDENT_1 . util . Override public void exec ( java . io . File IDENT_3 ) throws java . io . IOException , org . apache . maven . plugin . IDENT_4 { METHOD_3 ( METHOD_4 ( IDENT_3 ) , null , java . util . Collections . METHOD_5 ( STRING_0 , STRING_1 ) ) ; io . IDENT_0 . maven . IDENT_1 . IDENT_5 . IDENT_6 config = factory . METHOD_6 ( IDENT_7 , false , null , IDENT_8 , STRING_2 , STRING_3 ) ; "<AssertPlaceHolder>" ; } } ) ; } METHOD_6 ( boolean , boolean , java . util . Map , org . apache . maven . IDENT_8 . IDENT_9 , java . lang . String , java . lang . String ) { io . IDENT_0 . maven . IDENT_1 . IDENT_5 . IDENT_6 ret = METHOD_7 ( IDENT_7 , IDENT_10 , IDENT_8 , user , registry ) ; if ( ret != null ) { if ( ( registry == null ) || IDENT_11 ) { return ret ; } try { return METHOD_8 ( ret , registry ) ; } catch ( java . io . IOException e ) { throw new org . apache . maven . plugin . METHOD_9 ( e . getMessage ( ) , e ) ; } } ret = METHOD_10 ( registry ) ; if ( ret != null ) { log . debug ( STRING_4 ) ; return ret ; } log . debug ( STRING_5 ) ; return null ; }
org . junit . Assert . assertNull ( config ) 