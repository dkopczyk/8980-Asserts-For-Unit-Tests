METHOD_0 ( ) { java . lang . String IDENT_0 = io . IDENT_1 . maven . IDENT_2 . util . IDENT_3 . join ( io . IDENT_1 . maven . IDENT_2 . util . IDENT_4 . IDENT_5 , ( ( io . IDENT_1 . maven . IDENT_2 . util . IDENT_3 . IDENT_6 ) + ( io . IDENT_1 . maven . IDENT_2 . util . IDENT_3 . IDENT_6 ) ) , ( ( io . IDENT_1 . maven . IDENT_2 . util . IDENT_3 . IDENT_6 ) + ( io . IDENT_1 . maven . IDENT_2 . util . IDENT_3 . IDENT_6 ) ) , STRING_0 ) ; java . lang . String IDENT_7 = java . lang . String . format ( IDENT_8 , IDENT_0 , io . IDENT_1 . maven . IDENT_2 . util . IDENT_4 . IDENT_9 ) ; java . io . File IDENT_10 = io . IDENT_1 . maven . IDENT_2 . util . IDENT_3 . METHOD_1 ( io . IDENT_1 . maven . IDENT_2 . util . IDENT_4 . IDENT_11 ) ; java . lang . String IDENT_12 = io . IDENT_1 . maven . IDENT_2 . util . IDENT_13 . METHOD_2 ( IDENT_10 , IDENT_7 ) ; java . lang . String IDENT_14 = java . lang . String . format ( IDENT_8 , new java . io . File ( IDENT_10 . METHOD_3 ( ) , io . IDENT_1 . maven . IDENT_2 . util . IDENT_3 . METHOD_4 ( io . IDENT_1 . maven . IDENT_2 . util . IDENT_4 . IDENT_15 ) ) , io . IDENT_1 . maven . IDENT_2 . util . IDENT_4 . IDENT_9 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String ) { if ( path . startsWith ( io . IDENT_1 . maven . IDENT_2 . util . IDENT_3 . IDENT_6 ) ) { return path . substring ( 1 ) ; } return path ; }
org . junit . Assert . assertEquals ( IDENT_14 , IDENT_12 ) 