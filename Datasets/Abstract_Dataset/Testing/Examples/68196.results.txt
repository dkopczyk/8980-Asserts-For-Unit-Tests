METHOD_0 ( ) { java . net . URL IDENT_0 = io . IDENT_1 . maven . core . util . IDENT_2 . class . getResource ( STRING_0 ) ; io . IDENT_1 . maven . core . util . validator . IDENT_3 IDENT_4 = new io . IDENT_1 . maven . core . util . validator . METHOD_1 ( java . nio . file . IDENT_5 . get ( IDENT_0 . METHOD_2 ( ) ) . METHOD_3 ( ) , IDENT_6 . IDENT_7 , logger ) ; int resources = IDENT_4 . validate ( ) ; "<AssertPlaceHolder>" ; } validate ( ) { for ( java . io . File resource : resources ) { if ( ( resource . METHOD_4 ( ) ) && ( resource . exists ( ) ) ) { try { log . info ( STRING_1 , resource . toString ( ) ) ; com . fasterxml . jackson . databind . IDENT_8 IDENT_9 = METHOD_5 ( resource ) ; java . lang . String IDENT_10 = IDENT_9 . get ( STRING_2 ) . toString ( ) ; com . IDENT_11 . schema . IDENT_12 schema = METHOD_6 ( METHOD_7 ( io . IDENT_1 . maven . core . util . validator . METHOD_1 . IDENT_13 ) , IDENT_10 ) ; java . util . Set < com . IDENT_11 . schema . IDENT_14 > errors = schema . validate ( IDENT_9 ) ; METHOD_8 ( errors , resource ) ; } catch ( java . net . IDENT_15 e ) { throw new java . io . IOException ( e ) ; } } } return resources . length ; }
org . junit . Assert . assertEquals ( 2 , resources ) 