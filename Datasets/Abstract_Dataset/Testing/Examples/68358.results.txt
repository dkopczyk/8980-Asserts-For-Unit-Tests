METHOD_0 ( ) { ImmutableList . Builder < Map . Entry < com . facebook . buck . util . IDENT_0 , com . facebook . buck . util . IDENT_1 > > IDENT_2 = com . google . common . collect . ImmutableList . builder ( ) ; IDENT_2 . add ( new java . util . IDENT_3 . METHOD_1 ( com . facebook . buck . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 , new com . facebook . buck . util . METHOD_2 ( 0 , ( STRING_0 + STRING_1 ) , "" ) ) ) ; IDENT_2 . add ( new java . util . IDENT_3 . METHOD_1 ( com . facebook . buck . util . IDENT_0 . builder ( ) . METHOD_3 ( com . google . common . collect . ImmutableList . of ( STRING_2 , STRING_3 , com . facebook . buck . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_8 . toString ( ) , STRING_4 , STRING_5 , STRING_6 ) ) . build ( ) , new com . facebook . buck . util . METHOD_2 ( 0 ) ) ) ; IDENT_2 . add ( new java . util . IDENT_3 . METHOD_1 ( com . facebook . buck . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 , new com . facebook . buck . util . METHOD_2 ( 0 , ( STRING_0 + STRING_1 ) , "" ) ) ) ; com . facebook . buck . util . IDENT_9 IDENT_10 = new com . facebook . buck . util . METHOD_4 ( IDENT_2 . build ( ) ) ; com . facebook . buck . IDENT_4 . IDENT_5 . IDENT_11 IDENT_12 = new com . facebook . buck . IDENT_4 . IDENT_5 . METHOD_5 ( IDENT_10 , com . facebook . buck . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_13 , com . facebook . buck . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_8 ) ; java . util . Optional < java . lang . Long > result = IDENT_12 . METHOD_6 ( STRING_6 , 1000 ) ; "<AssertPlaceHolder>" ; } of ( com . facebook . buck . core . config . IDENT_14 ) { return new com . facebook . buck . IDENT_15 . java . METHOD_7 ( delegate ) ; }
org . junit . Assert . assertThat ( result , org . hamcrest . Matchers . is ( java . util . Optional . of ( 0L ) ) ) 