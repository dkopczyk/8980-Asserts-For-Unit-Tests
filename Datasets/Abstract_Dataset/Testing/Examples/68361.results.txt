METHOD_0 ( ) { com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_2 IDENT_1 = com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_2 . builder ( ) . setName ( STRING_0 ) . METHOD_1 ( STRING_1 ) . METHOD_2 ( IDENT_3 . IDENT_4 ) . build ( ) ; java . util . Optional < com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_5 > IDENT_6 = com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_7 . METHOD_3 ( IDENT_1 , com . facebook . buck . IDENT_8 . integration . IDENT_9 . METHOD_4 ( this ) ) ; java . util . Optional < com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_5 > expected = java . util . Optional . of ( com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_5 . builder ( ) . METHOD_5 ( 1 ) . METHOD_6 ( STRING_2 , STRING_3 ) . build ( ) ) ; "<AssertPlaceHolder>" ; } equalTo ( com . facebook . buck . query . IDENT_10 ) { return ( ( ( type . equals ( other . type ) ) && ( ( IDENT_11 ) == ( other . IDENT_11 ) ) ) && ( java . util . IDENT_12 . equals ( expression , other . expression ) ) ) && ( java . util . IDENT_12 . equals ( IDENT_13 , other . IDENT_13 ) ) ; }
org . junit . Assert . assertThat ( IDENT_6 , org . hamcrest . Matchers . is ( org . hamcrest . Matchers . equalTo ( expected ) ) ) 