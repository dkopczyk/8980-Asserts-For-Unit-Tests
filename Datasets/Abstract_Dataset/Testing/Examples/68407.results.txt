METHOD_0 ( ) { com . facebook . buck . io . IDENT_0 . IDENT_1 IDENT_2 = new com . facebook . buck . io . IDENT_0 . impl . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( "" , java . nio . file . IDENT_3 . get ( STRING_0 , IDENT_4 . IDENT_5 . IDENT_6 ) ) ; com . facebook . buck . core . model . IDENT_7 IDENT_8 = com . facebook . buck . core . model . IDENT_9 . newInstance ( STRING_1 ) ; com . facebook . buck . core . build . engine . IDENT_10 . IDENT_11 IDENT_12 = new com . facebook . buck . core . build . engine . IDENT_10 . METHOD_3 ( IDENT_8 , IDENT_2 , new com . facebook . buck . core . build . engine . IDENT_10 . METHOD_4 ( IDENT_2 ) ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . String ) { try { return METHOD_6 ( key ) . map ( IDENT_13 :: new ) ; } catch ( java . lang . IllegalArgumentException IDENT_14 ) { return java . util . Optional . empty ( ) ; } }
org . junit . Assert . assertThat ( IDENT_12 . METHOD_5 ( IDENT_4 . IDENT_5 . IDENT_6 ) , org . hamcrest . Matchers . equalTo ( java . util . Optional . empty ( ) ) ) 