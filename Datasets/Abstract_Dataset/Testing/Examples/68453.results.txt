METHOD_0 ( ) { com . google . common . collect . ImmutableMap < java . lang . String , com . facebook . buck . core . IDENT_0 . IDENT_1 . IDENT_2 > IDENT_3 = com . google . common . collect . ImmutableMap . of ( "foo" , new com . facebook . buck . core . IDENT_0 . IDENT_1 . METHOD_1 ( "foo" ) , "bar" , new com . facebook . buck . core . IDENT_0 . IDENT_1 . METHOD_1 ( "bar" ) ) ; com . facebook . buck . core . rules . IDENT_4 IDENT_5 = new com . facebook . buck . core . rules . METHOD_2 ( new com . facebook . buck . core . rules . resolver . impl . METHOD_3 ( ) ) ; com . facebook . buck . core . IDENT_6 . resolver . IDENT_7 resolver = com . facebook . buck . core . IDENT_6 . resolver . impl . IDENT_8 . from ( IDENT_5 ) ; com . facebook . buck . core . IDENT_0 . IDENT_9 IDENT_10 = METHOD_4 ( resolver , IDENT_5 ) . METHOD_5 ( STRING_0 , IDENT_3 ) . build ( IDENT_9 :: new ) ; com . facebook . buck . core . IDENT_0 . IDENT_9 IDENT_11 = METHOD_4 ( resolver , IDENT_5 ) . METHOD_5 ( STRING_0 , IDENT_3 ) . build ( IDENT_9 :: new ) ; "<AssertPlaceHolder>" ; } build ( com . facebook . buck . core . rules . IDENT_12 ) { return build ( IDENT_13 , IDENT_14 , IDENT_15 . IDENT_16 ) ; }
org . junit . Assert . assertEquals ( IDENT_10 , IDENT_11 ) 