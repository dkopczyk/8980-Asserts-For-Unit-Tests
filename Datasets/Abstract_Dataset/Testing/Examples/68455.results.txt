METHOD_0 ( ) { com . google . common . collect . ImmutableMap < java . lang . String , ? > map = com . google . common . collect . ImmutableMap . of ( STRING_0 , com . facebook . buck . core . IDENT_0 . IDENT_1 . of ( STRING_1 ) , STRING_2 , true ) ; com . facebook . buck . core . rules . IDENT_2 IDENT_3 = new com . facebook . buck . core . rules . METHOD_1 ( new com . facebook . buck . core . rules . resolver . impl . METHOD_2 ( ) ) ; com . facebook . buck . core . IDENT_0 . resolver . IDENT_4 resolver = com . facebook . buck . core . IDENT_0 . resolver . impl . IDENT_5 . from ( IDENT_3 ) ; com . facebook . buck . core . IDENT_6 . IDENT_7 key = METHOD_3 ( resolver , IDENT_3 ) . METHOD_4 ( STRING_3 , map ) . build ( IDENT_7 :: new ) ; "<AssertPlaceHolder>" ; } build ( com . facebook . buck . core . rules . IDENT_8 ) { return build ( IDENT_9 , IDENT_10 , IDENT_11 . IDENT_12 ) ; }
org . junit . Assert . assertNotNull ( key ) 