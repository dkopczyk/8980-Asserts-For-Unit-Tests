METHOD_0 ( ) { com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new com . facebook . buck . IDENT_0 . IDENT_1 . METHOD_1 ( METHOD_2 ( com . facebook . buck . IDENT_0 . IDENT_4 . IDENT_5 . METHOD_3 ( ) ) , IDENT_6 , java . util . Optional . of ( com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 ) , true ) ; com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_7 . METHOD_4 ( IDENT_3 , com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_9 , com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_10 , com . google . common . collect . ImmutableList . of ( ) , com . google . common . collect . ImmutableList . of ( com . google . common . collect . ImmutableList . of ( IDENT_5 . IDENT_11 , IDENT_5 . IDENT_12 ) ) ) ; com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_7 . METHOD_5 ( IDENT_3 , com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_9 ) ; com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_7 . METHOD_4 ( IDENT_3 , com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_13 , com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_10 , com . google . common . collect . ImmutableList . of ( ) , com . google . common . collect . ImmutableList . of ( ) ) ; com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_7 . METHOD_4 ( IDENT_3 , com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 , com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_14 , com . google . common . collect . ImmutableList . of ( ) , com . google . common . collect . ImmutableList . of ( com . google . common . collect . ImmutableList . of ( IDENT_5 . IDENT_11 , IDENT_5 . IDENT_12 ) ) ) ; java . util . List < com . facebook . buck . IDENT_0 . IDENT_15 . IDENT_16 > IDENT_17 = IDENT_3 . METHOD_6 ( com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 , com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_14 , com . google . common . collect . ImmutableList . of ( IDENT_5 . IDENT_11 , IDENT_5 . IDENT_12 ) , com . facebook . buck . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_18 ) . IDENT_19 ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_20 . size ( ) ; }
org . junit . Assert . assertEquals ( 2 , IDENT_17 . size ( ) ) 