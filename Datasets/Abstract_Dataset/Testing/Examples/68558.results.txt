METHOD_0 ( ) { com . facebook . buck . core . model . IDENT_0 IDENT_1 = com . facebook . buck . core . model . IDENT_2 . newInstance ( IDENT_3 , STRING_0 ) ; com . facebook . buck . core . model . IDENT_0 IDENT_4 = com . facebook . buck . core . model . IDENT_2 . newInstance ( IDENT_3 , STRING_1 ) ; com . facebook . buck . core . model . IDENT_0 IDENT_5 = com . facebook . buck . core . model . IDENT_2 . newInstance ( IDENT_3 , STRING_2 ) ; com . facebook . buck . core . model . IDENT_0 IDENT_6 = com . facebook . buck . core . model . IDENT_2 . newInstance ( IDENT_3 , STRING_3 ) ; com . facebook . buck . core . model . IDENT_7 . IDENT_8 < ? > IDENT_9 = com . facebook . buck . IDENT_10 . IDENT_11 . METHOD_1 ( IDENT_1 ) . METHOD_2 ( com . google . common . collect . IDENT_12 . of ( com . facebook . buck . core . IDENT_13 . IDENT_14 . of ( STRING_4 ) ) ) . build ( ) ; com . facebook . buck . core . model . IDENT_7 . IDENT_8 < ? > IDENT_15 = com . facebook . buck . IDENT_10 . IDENT_16 . METHOD_1 ( IDENT_4 ) . METHOD_3 ( IDENT_1 ) . METHOD_4 ( com . facebook . buck . util . types . IDENT_17 . METHOD_5 ( IDENT_18 . IDENT_19 ) ) . METHOD_6 ( com . facebook . buck . core . IDENT_13 . IDENT_14 . of ( STRING_5 ) ) . build ( ) ; com . facebook . buck . core . model . IDENT_7 . IDENT_8 < ? > IDENT_20 = com . facebook . buck . IDENT_10 . IDENT_11 . METHOD_1 ( IDENT_5 ) . METHOD_2 ( com . google . common . collect . IDENT_12 . of ( com . facebook . buck . core . IDENT_13 . IDENT_14 . of ( STRING_4 ) ) ) . build ( ) ; com . facebook . buck . core . model . IDENT_7 . IDENT_8 < ? > IDENT_21 = com . facebook . buck . IDENT_10 . IDENT_16 . METHOD_1 ( IDENT_6 ) . METHOD_3 ( IDENT_1 ) . METHOD_4 ( com . facebook . buck . util . types . IDENT_17 . METHOD_5 ( IDENT_18 . IDENT_19 ) ) . METHOD_6 ( com . facebook . buck . core . IDENT_13 . IDENT_14 . of ( STRING_5 ) ) . build ( ) ; com . google . common . collect . IDENT_22 < com . facebook . buck . core . model . IDENT_7 . IDENT_8 < ? > > nodes = com . google . common . collect . IDENT_22 . of ( IDENT_9 , IDENT_15 , IDENT_20 , IDENT_21 ) ; com . facebook . buck . IDENT_23 . IDENT_10 . project . IDENT_24 IDENT_25 = METHOD_7 ( nodes , nodes , com . facebook . buck . IDENT_23 . IDENT_10 . project . IDENT_26 . builder ( ) . build ( ) , com . google . common . collect . IDENT_22 . of ( com . facebook . buck . core . model . IDENT_27 . of ( STRING_6 ) , com . facebook . buck . core . model . IDENT_27 . of ( STRING_7 ) ) , java . util . Optional . empty ( ) ) ; IDENT_25 . METHOD_8 ( ) ; int count = 0 ; com . facebook . buck . IDENT_10 . IDENT_28 . IDENT_29 . IDENT_30 project = IDENT_25 . METHOD_9 ( ) ; for ( com . facebook . buck . IDENT_10 . IDENT_28 . IDENT_29 . IDENT_31 target : project . METHOD_10 ( ) ) { if ( target . METHOD_11 ( ) . equals ( STRING_8 ) ) { count ++ ; } } "<AssertPlaceHolder>" ; } equals ( java . lang . Object ) { return ( obj instanceof com . facebook . buck . IDENT_32 . IDENT_33 . impl . IDENT_34 . IDENT_35 ) && ( METHOD_12 ( ) . equals ( ( ( com . facebook . buck . IDENT_32 . IDENT_33 . impl . IDENT_34 . IDENT_35 ) ( obj ) ) . METHOD_12 ( ) ) ) ; }
org . junit . Assert . assertSame ( count , 1 ) 