METHOD_0 ( ) { com . facebook . buck . file . IDENT_0 . IDENT_1 IDENT_0 = new com . facebook . buck . file . IDENT_0 . impl . METHOD_1 ( ) ; boolean result = IDENT_0 . METHOD_2 ( IDENT_2 , new java . net . URI ( STRING_0 ) , IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( com . facebook . buck . event . IDENT_4 , java . net . URI , java . nio . file . Path ) { if ( ! ( STRING_1 . equals ( uri . METHOD_3 ( ) ) ) ) { return false ; } uri = com . facebook . buck . file . IDENT_0 . impl . IDENT_5 . METHOD_4 ( com . facebook . buck . file . IDENT_0 . impl . IDENT_6 . IDENT_7 , uri ) ; java . nio . file . Path target = root . resolve ( uri . getPath ( ) . substring ( 1 ) ) ; if ( ! ( java . nio . file . IDENT_8 . exists ( target ) ) ) { throw new java . io . IOException ( java . lang . String . format ( STRING_2 , target , uri ) ) ; } com . facebook . buck . file . IDENT_0 . impl . IDENT_9 . IDENT_10 IDENT_11 = com . facebook . buck . file . IDENT_0 . impl . IDENT_9 . METHOD_5 ( target . METHOD_6 ( ) ) ; IDENT_2 . METHOD_7 ( METHOD_5 ) ; try ( java . io . InputStream is = new java . io . METHOD_8 ( java . nio . file . IDENT_8 . METHOD_9 ( target ) ) ) { java . nio . file . IDENT_8 . METHOD_10 ( is , output ) ; } finally { IDENT_2 . METHOD_7 ( com . facebook . buck . file . IDENT_0 . impl . IDENT_9 . METHOD_11 ( METHOD_5 ) ) ; } return true ; }
org . junit . Assert . assertFalse ( result ) 