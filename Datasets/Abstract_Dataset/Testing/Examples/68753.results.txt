METHOD_0 ( ) { com . facebook . buck . core . select . IDENT_0 IDENT_1 = new com . facebook . buck . core . select . impl . METHOD_1 ( new com . facebook . buck . core . select . METHOD_2 ( ) ) ; com . facebook . buck . core . select . IDENT_2 IDENT_3 = new com . facebook . buck . core . select . METHOD_3 ( ) { } ; com . google . common . collect . IDENT_4 . Builder < com . facebook . buck . core . model . IDENT_5 > IDENT_6 = com . google . common . collect . IDENT_4 . builder ( ) ; com . facebook . buck . core . model . IDENT_5 IDENT_7 = com . facebook . buck . core . model . IDENT_8 . newInstance ( STRING_0 ) ; IDENT_9 . METHOD_4 ( METHOD_5 ( IDENT_10 ) , IDENT_10 , IDENT_1 , IDENT_3 , com . facebook . buck . rules . IDENT_11 . IDENT_12 . IDENT_13 , com . facebook . buck . rules . IDENT_11 . IDENT_14 . class , IDENT_6 , com . google . common . collect . ImmutableMap . < java . lang . String , java . lang . Object > of ( STRING_1 , com . google . common . collect . ImmutableList . of ( STRING_0 ) ) ) ; "<AssertPlaceHolder>" ; } of ( com . facebook . buck . core . config . IDENT_15 ) { return new com . facebook . buck . event . IDENT_16 . METHOD_6 ( delegate ) ; }
org . junit . Assert . assertEquals ( com . google . common . collect . IDENT_4 . of ( IDENT_7 ) , IDENT_6 . build ( ) ) 