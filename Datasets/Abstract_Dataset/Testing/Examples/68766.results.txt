METHOD_0 ( ) { java . lang . reflect . Type type = com . facebook . buck . rules . IDENT_0 . IDENT_1 . IDENT_2 . class . METHOD_1 ( STRING_0 ) . METHOD_2 ( ) ; @ com . facebook . buck . rules . IDENT_0 . METHOD_3 ( STRING_1 ) com . facebook . buck . rules . IDENT_0 . IDENT_3 < com . google . common . collect . ImmutableMap < java . lang . String , com . google . common . collect . ImmutableList < java . lang . String > > > IDENT_0 = ( ( com . facebook . buck . rules . IDENT_0 . IDENT_3 < com . google . common . collect . ImmutableMap < java . lang . String , com . google . common . collect . ImmutableList < java . lang . String > > > ) ( IDENT_4 . METHOD_4 ( type ) ) ) ; com . google . common . collect . ImmutableMap < java . lang . String , com . google . common . collect . ImmutableList < java . lang . String > > input = com . google . common . collect . ImmutableMap . of ( "foo" , com . google . common . collect . ImmutableList . of ( STRING_2 , STRING_3 ) , "bar" , com . google . common . collect . ImmutableList . of ( STRING_4 , STRING_5 ) ) ; com . facebook . buck . rules . IDENT_0 . IDENT_1 . IDENT_5 IDENT_6 = new com . facebook . buck . rules . IDENT_0 . IDENT_1 . METHOD_5 ( ) ; IDENT_0 . METHOD_6 ( IDENT_7 , input , IDENT_6 ) ; org . hamcrest . IDENT_8 < java . lang . IDENT_9 < ? > > matcher = org . hamcrest . Matchers . contains ( com . google . common . collect . ImmutableList . of ( org . hamcrest . Matchers . METHOD_7 ( ( ( java . lang . Object ) ( input ) ) ) , org . hamcrest . Matchers . is ( ( ( java . lang . Object ) ( "foo" ) ) ) , org . hamcrest . Matchers . METHOD_7 ( ( ( java . lang . Object ) ( input . get ( "foo" ) ) ) ) , org . hamcrest . Matchers . is ( ( ( java . lang . Object ) ( STRING_2 ) ) ) , org . hamcrest . Matchers . is ( ( ( java . lang . Object ) ( STRING_3 ) ) ) , org . hamcrest . Matchers . is ( ( ( java . lang . Object ) ( "bar" ) ) ) , org . hamcrest . Matchers . METHOD_7 ( ( ( java . lang . Object ) ( input . get ( "bar" ) ) ) ) , org . hamcrest . Matchers . is ( ( ( java . lang . Object ) ( STRING_4 ) ) ) , org . hamcrest . Matchers . is ( ( ( java . lang . Object ) ( STRING_5 ) ) ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( ) { java . lang . String IDENT_10 = STRING_6 + ( METHOD_9 ( ) ) ; com . google . common . collect . ImmutableList . Builder < com . facebook . buck . core . IDENT_11 . IDENT_12 > IDENT_13 = com . google . common . collect . ImmutableList . builder ( ) ; for ( java . lang . String module : IDENT_14 . METHOD_10 ( ) ) { IDENT_13 . add ( com . facebook . buck . core . IDENT_11 . IDENT_15 . of ( METHOD_11 ( ) , METHOD_12 ( ) . resolve ( ( ( module . replace ( STRING_7 , File . IDENT_16 ) ) + IDENT_10 ) ) ) ) ; } return IDENT_13 . build ( ) ; }
org . junit . Assert . assertThat ( IDENT_6 . METHOD_8 ( ) , matcher ) 