METHOD_0 ( ) { java . lang . reflect . Type type = com . facebook . buck . rules . IDENT_0 . IDENT_1 . IDENT_2 . class . METHOD_1 ( STRING_0 ) . METHOD_2 ( ) ; com . facebook . buck . rules . IDENT_0 . IDENT_3 < ? > IDENT_0 = IDENT_4 . METHOD_3 ( type ) ; com . google . common . collect . ImmutableList < ? > input = com . google . common . collect . ImmutableList . of ( com . google . common . collect . ImmutableList . of ( STRING_1 , com . google . common . collect . ImmutableList . of ( STRING_2 , STRING_3 ) ) , com . google . common . collect . ImmutableList . of ( STRING_4 , com . google . common . collect . ImmutableList . of ( STRING_5 ) ) ) ; java . lang . Object result = IDENT_0 . METHOD_4 ( IDENT_5 , IDENT_6 , java . nio . file . IDENT_7 . get ( "" ) , IDENT_8 . INSTANCE , input ) ; com . google . common . collect . ImmutableList < com . facebook . buck . core . IDENT_9 . IDENT_10 > IDENT_11 = com . google . common . collect . ImmutableList . of ( com . facebook . buck . core . IDENT_9 . IDENT_10 . of ( com . facebook . buck . core . IDENT_9 . IDENT_12 . of ( STRING_1 ) , com . google . common . collect . ImmutableList . of ( STRING_2 , STRING_3 ) ) , com . facebook . buck . core . IDENT_9 . IDENT_10 . of ( com . facebook . buck . core . IDENT_9 . IDENT_12 . of ( STRING_4 ) , com . google . common . collect . ImmutableList . of ( STRING_5 ) ) ) ; "<AssertPlaceHolder>" ; } of ( com . facebook . buck . core . config . IDENT_13 ) { return new com . facebook . buck . event . IDENT_14 . METHOD_5 ( delegate ) ; }
org . junit . Assert . assertEquals ( IDENT_11 , result ) 