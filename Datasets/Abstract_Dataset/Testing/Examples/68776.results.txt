METHOD_0 ( ) { java . lang . reflect . Type type = com . facebook . buck . rules . IDENT_0 . IDENT_1 . IDENT_2 . class . METHOD_1 ( STRING_0 ) . METHOD_2 ( ) ; com . facebook . buck . rules . IDENT_0 . IDENT_3 < ? > IDENT_0 = IDENT_4 . METHOD_3 ( type ) ; java . lang . String IDENT_5 = STRING_1 ; java . lang . String IDENT_6 = STRING_2 ; java . lang . String IDENT_7 = STRING_3 ; java . lang . String IDENT_8 = STRING_4 ; com . google . common . collect . ImmutableList < java . lang . String > input = com . google . common . collect . ImmutableList . of ( IDENT_5 , IDENT_6 , IDENT_7 , IDENT_8 ) ; com . google . common . collect . ImmutableList < com . facebook . buck . rules . IDENT_0 . IDENT_1 . IDENT_9 > expected = com . google . common . collect . ImmutableList . of ( com . facebook . buck . rules . IDENT_0 . IDENT_1 . IDENT_9 . IDENT_10 , com . facebook . buck . rules . IDENT_0 . IDENT_1 . IDENT_9 . IDENT_10 , com . facebook . buck . rules . IDENT_0 . IDENT_1 . IDENT_9 . IDENT_11 , com . facebook . buck . rules . IDENT_0 . IDENT_1 . IDENT_9 . IDENT_11 ) ; java . lang . Object result = IDENT_0 . METHOD_4 ( IDENT_12 , IDENT_13 , java . nio . file . IDENT_14 . get ( "" ) , IDENT_15 . INSTANCE , input ) ; "<AssertPlaceHolder>" ; } get ( com . android . IDENT_16 . IDENT_17 . IDENT_18 . IDENT_19 ) { if ( IDENT_18 == null ) { throw new java . lang . METHOD_5 ( STRING_5 ) ; } METHOD_6 ( ) ; com . android . IDENT_16 . IDENT_20 . file . IDENT_21 result = IDENT_22 . get ( ( ( com . android . IDENT_16 . IDENT_17 . IDENT_18 . IDENT_23 ) ( IDENT_18 ) ) ) ; if ( result == null ) { throw new java . lang . IllegalArgumentException ( STRING_6 ) ; } return result ; }
org . junit . Assert . assertEquals ( expected , result ) 