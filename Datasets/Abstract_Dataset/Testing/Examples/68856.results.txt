METHOD_0 ( ) { java . net . IDENT_0 IDENT_1 ; try ( com . facebook . buck . util . IDENT_2 IDENT_3 = new com . facebook . buck . util . METHOD_1 ( ) ) { java . lang . IDENT_4 IDENT_5 = java . lang . IDENT_4 . METHOD_2 ( ) ; com . google . common . collect . ImmutableList < java . net . URL > IDENT_6 = com . google . common . collect . ImmutableList . of ( IDENT_7 . METHOD_3 ( ) . METHOD_4 ( ) , IDENT_8 . METHOD_3 ( ) . METHOD_4 ( ) ) ; IDENT_1 = ( ( java . net . IDENT_0 ) ( IDENT_3 . METHOD_5 ( IDENT_5 , IDENT_6 ) ) ) ; org . junit . IDENT_9 . METHOD_6 ( IDENT_1 . getResource ( STRING_0 ) , org . hamcrest . Matchers . equalTo ( IDENT_10 . METHOD_3 ( ) . METHOD_4 ( ) ) ) ; IDENT_1 . close ( ) ; "<AssertPlaceHolder>" ; } } equalTo ( com . facebook . buck . query . IDENT_11 ) { return ( ( ( type . equals ( other . type ) ) && ( ( IDENT_12 ) == ( other . IDENT_12 ) ) ) && ( java . util . IDENT_13 . equals ( expression , other . expression ) ) ) && ( java . util . IDENT_13 . equals ( IDENT_14 , other . IDENT_14 ) ) ; }
org . junit . Assert . assertThat ( IDENT_1 . getResource ( STRING_0 ) , org . hamcrest . Matchers . equalTo ( IDENT_10 . METHOD_3 ( ) . METHOD_4 ( ) ) ) 