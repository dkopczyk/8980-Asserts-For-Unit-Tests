METHOD_0 ( ) { com . facebook . buck . core . config . IDENT_0 IDENT_1 = com . facebook . buck . core . config . IDENT_2 . builder ( ) . METHOD_1 ( com . google . common . collect . ImmutableMap . of ( IDENT_3 . IDENT_4 , com . google . common . collect . ImmutableMap . of ( IDENT_3 . IDENT_5 , STRING_0 , IDENT_3 . IDENT_6 , STRING_1 , IDENT_3 . IDENT_7 , STRING_2 , IDENT_3 . IDENT_8 , STRING_3 ) ) ) . build ( ) ; com . facebook . buck . util . IDENT_9 . IDENT_3 config = new com . facebook . buck . util . IDENT_9 . METHOD_2 ( IDENT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { com . google . common . collect . IDENT_10 < java . util . Optional < ? > > IDENT_11 = com . google . common . collect . IDENT_10 . of ( METHOD_4 ( ) , METHOD_5 ( ) , METHOD_6 ( ) , METHOD_7 ( ) ) ; if ( IDENT_11 . stream ( ) . METHOD_8 ( Optional :: IDENT_12 ) ) { if ( ! ( IDENT_11 . stream ( ) . METHOD_9 ( Optional :: IDENT_12 ) ) ) { throw new com . facebook . buck . core . exceptions . METHOD_10 ( ( ( STRING_4 + STRING_5 ) + ( java . lang . String . join ( STRING_6 , com . facebook . buck . util . IDENT_9 . METHOD_2 . IDENT_5 , com . facebook . buck . util . IDENT_9 . METHOD_2 . IDENT_6 , com . facebook . buck . util . IDENT_9 . METHOD_2 . IDENT_7 , com . facebook . buck . util . IDENT_9 . METHOD_2 . IDENT_8 ) ) ) ) ; } return java . util . Optional . of ( com . facebook . buck . util . IDENT_9 . IDENT_13 . of ( METHOD_4 ( ) . get ( ) , METHOD_5 ( ) . get ( ) , METHOD_6 ( ) . get ( ) , METHOD_7 ( ) . get ( ) ) ) ; } return java . util . Optional . empty ( ) ; }
org . junit . Assert . assertThat ( config . METHOD_3 ( ) . METHOD_11 ( ) , org . hamcrest . Matchers . is ( org . hamcrest . Matchers . equalTo ( true ) ) ) 