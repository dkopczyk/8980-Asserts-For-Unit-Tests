METHOD_0 ( ) { byte [ ] IDENT_0 = new byte [ com . facebook . IDENT_1 . image . IDENT_2 . IDENT_3 ] ; IDENT_0 [ ( ( com . facebook . IDENT_1 . image . IDENT_2 . IDENT_3 ) - 2 ) ] = ( ( byte ) ( com . facebook . IDENT_4 . IDENT_5 . IDENT_6 ) ) ; IDENT_0 [ ( ( com . facebook . IDENT_1 . image . IDENT_2 . IDENT_3 ) - 1 ) ] = ( ( byte ) ( com . facebook . IDENT_4 . IDENT_5 . IDENT_7 ) ) ; com . facebook . common . IDENT_8 . IDENT_9 buf = new com . facebook . IDENT_1 . testing . METHOD_1 ( IDENT_0 ) ; com . facebook . IDENT_1 . image . IDENT_10 IDENT_11 = new com . facebook . IDENT_1 . image . METHOD_2 ( com . facebook . common . IDENT_12 . IDENT_13 . of ( buf ) ) ; IDENT_11 . METHOD_3 ( IDENT_14 . IDENT_15 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( int ) { if ( ( IDENT_16 ) != ( com . facebook . IDENT_17 . IDENT_14 . IDENT_15 ) ) { return true ; } if ( ( IDENT_18 ) != null ) { return true ; } com . facebook . common . internal . IDENT_19 . METHOD_5 ( IDENT_20 ) ; com . facebook . common . IDENT_8 . IDENT_9 buf = IDENT_20 . get ( ) ; return ( ( buf . read ( ( length - 2 ) ) ) == ( ( byte ) ( com . facebook . IDENT_4 . IDENT_5 . IDENT_6 ) ) ) && ( ( buf . read ( ( length - 1 ) ) ) == ( ( byte ) ( com . facebook . IDENT_4 . IDENT_5 . IDENT_7 ) ) ) ; }
org . junit . Assert . assertTrue ( IDENT_11 . METHOD_4 ( com . facebook . IDENT_1 . image . IDENT_2 . IDENT_3 ) ) 