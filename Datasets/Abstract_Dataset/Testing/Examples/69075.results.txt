METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . util . List < com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . vo . IDENT_5 > info = IDENT_6 . METHOD_0 ( IDENT_0 ) ; System . out . println ( STRING_1 ) ; "<AssertPlaceHolder>" ; } METHOD_0 ( java . lang . String ) { java . util . List < com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . vo . IDENT_5 > IDENT_7 = IDENT_8 . METHOD_0 ( IDENT_9 ) ; java . util . List < com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . vo . IDENT_5 > IDENT_10 = new java . util . ArrayList < com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . vo . IDENT_5 > ( ) ; java . lang . String IDENT_11 = "" ; int count = 0 ; int IDENT_12 = 2 ; for ( com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . vo . IDENT_5 IDENT_13 : IDENT_7 ) { java . lang . String IDENT_14 = IDENT_13 . METHOD_1 ( ) ; if ( IDENT_11 . equals ( IDENT_14 ) ) { if ( count < IDENT_12 ) { IDENT_10 . add ( IDENT_13 ) ; count ++ ; } } else { IDENT_11 = IDENT_14 ; IDENT_10 . add ( IDENT_13 ) ; count = 1 ; } } return IDENT_10 ; }
org . junit . Assert . assertNotNull ( info ) 