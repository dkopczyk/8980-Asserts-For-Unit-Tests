METHOD_0 ( ) { java . util . Date IDENT_0 = new org . joda . time . METHOD_1 ( INT_0 , 10 , INT_1 , 5 , 10 , 0 ) . METHOD_2 ( ) ; java . util . Date IDENT_1 = new org . joda . time . METHOD_1 ( INT_0 , 10 , INT_2 , 5 , 10 , 0 ) . METHOD_2 ( ) ; java . util . Date IDENT_2 = new org . joda . time . METHOD_1 ( INT_0 , 10 , INT_2 , 5 , 10 , 0 ) . METHOD_2 ( ) ; java . util . Date IDENT_3 = new org . joda . time . METHOD_1 ( INT_0 , 10 , INT_3 , 5 , 10 , 0 ) . METHOD_2 ( ) ; boolean IDENT_4 = br . com . any . utils . IDENT_5 . METHOD_3 ( IDENT_0 , IDENT_1 , IDENT_2 , IDENT_3 , true ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . util . Date , java . util . Date , java . util . Date , java . util . Date , boolean ) { org . joda . time . IDENT_6 IDENT_7 = new org . joda . time . METHOD_4 ( new org . joda . time . METHOD_1 ( IDENT_0 ) , new org . joda . time . METHOD_1 ( IDENT_1 ) ) ; org . joda . time . METHOD_4 IDENT_8 = new org . joda . time . METHOD_4 ( new org . joda . time . METHOD_1 ( IDENT_2 ) , new org . joda . time . METHOD_1 ( IDENT_3 ) ) ; if ( IDENT_9 ) { return ( IDENT_7 . METHOD_5 ( IDENT_8 ) ) || ( IDENT_7 . METHOD_6 ( IDENT_8 ) ) ; } return IDENT_7 . METHOD_5 ( IDENT_8 ) ; }
org . junit . Assert . assertTrue ( IDENT_4 ) 