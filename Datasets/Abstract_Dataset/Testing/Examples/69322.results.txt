METHOD_0 ( ) { java . lang . String expr ; double expected ; double x = FLOAT_0 ; double y = FLOAT_1 ; expr = STRING_0 ; expected = ( java . lang . Math . Math . METHOD_1 ( x ) ) + ( ( 1 / y ) * ( java . lang . Math . Math . METHOD_2 ( FLOAT_2 ) ) ) ; net . IDENT_0 . IDENT_1 . IDENT_2 e = new net . IDENT_0 . IDENT_1 . METHOD_3 ( expr ) . METHOD_4 ( STRING_1 , STRING_2 ) . build ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . String , double ) { this . METHOD_6 ( name ) ; this . METHOD_4 . put ( name , java . lang . Double . valueOf ( value ) ) ; return this ; }
org . junit . Assert . assertTrue ( ( expected == ( e . METHOD_5 ( STRING_1 , x ) . METHOD_5 ( STRING_2 , y ) . evaluate ( ) ) ) ) 