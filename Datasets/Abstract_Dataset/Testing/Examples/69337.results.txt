METHOD_0 ( ) { net . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new net . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( STRING_0 , 1 , true , ( ( net . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 . IDENT_5 ) + 1 ) ) { @ net . IDENT_0 . IDENT_1 . Override public double apply ( double OP_0 args ) { final int IDENT_6 = ( ( int ) ( args [ 0 ] ) ) ; if ( ( ( double ) ( IDENT_6 ) ) != ( args [ 0 ] ) ) { throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } if ( IDENT_6 < 0 ) { throw new java . lang . IllegalArgumentException ( STRING_2 ) ; } double result = 1 ; for ( int i = 1 ; i <= IDENT_6 ; i ++ ) { result OP_1 i ; } return result ; } } ; net . IDENT_0 . IDENT_1 . IDENT_7 e = new net . IDENT_0 . IDENT_1 . METHOD_2 ( STRING_3 ) . build ( ) ; "<AssertPlaceHolder>" ; } validate ( ) { return validate ( true ) ; }
org . junit . Assert . assertFalse ( e . validate ( ) . isValid ( ) ) 