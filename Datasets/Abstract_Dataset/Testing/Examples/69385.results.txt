METHOD_0 ( ) { java . time . IDENT_0 now = java . time . IDENT_0 . now ( ) ; com . fasterxml . jackson . databind . IDENT_1 . IDENT_2 handler = new com . fasterxml . jackson . databind . IDENT_1 . METHOD_1 ( ) { @ com . fasterxml . jackson . IDENT_3 . IDENT_4 . Override public java . lang . Object METHOD_2 ( com . fasterxml . jackson . databind . IDENT_5 IDENT_6 , java . lang . Class < ? > IDENT_7 , java . lang . String IDENT_8 , java . lang . String IDENT_9 ) throws java . io . IOException { if ( ( java . time . IDENT_0 . class ) == IDENT_7 ) { if ( STRING_0 . equals ( IDENT_8 ) ) { return now ; } } return com . fasterxml . jackson . databind . IDENT_1 . METHOD_1 . IDENT_10 ; } } ; com . fasterxml . jackson . databind . IDENT_11 mapper = METHOD_3 ( ) . METHOD_4 ( handler ) . build ( ) ; java . util . Map < java . time . IDENT_0 , java . lang . String > value = mapper . METHOD_5 ( map ( STRING_0 , "test" ) , com . fasterxml . jackson . IDENT_3 . IDENT_4 . IDENT_12 . IDENT_13 ) ; java . util . Map < java . time . IDENT_0 , java . lang . String > map = new java . util . HashMap ( ) ; map . put ( now , "test" ) ; "<AssertPlaceHolder>" ; } map ( java . lang . String , java . lang . String ) { return java . lang . String . format ( STRING_1 , key , value ) ; }
org . junit . Assert . assertEquals ( map , value ) 