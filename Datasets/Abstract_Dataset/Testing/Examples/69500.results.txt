METHOD_0 ( ) { when ( node . getPath ( ) ) . thenReturn ( ( ( "/" + ( path ) ) + STRING_0 ) ) ; when ( node . METHOD_1 ( org . IDENT_0 . http . commons . api . IDENT_1 . IDENT_2 ) ) . thenReturn ( true ) ; final org . IDENT_0 . kernel . api . models . IDENT_3 IDENT_4 = new org . IDENT_0 . kernel . IDENT_5 . METHOD_2 ( node ) ; final org . apache . jena . IDENT_1 . model . IDENT_6 IDENT_7 = converter . METHOD_3 ( ) . convert ( IDENT_4 ) ; final org . apache . jena . IDENT_1 . model . IDENT_6 IDENT_8 = METHOD_4 ( ( ( IDENT_9 ) + STRING_1 ) ) ; "<AssertPlaceHolder>" ; } convert ( java . lang . String ) { final java . util . regex . IDENT_10 matcher = org . IDENT_0 . http . commons . domain . IDENT_11 . IDENT_12 . matcher ( source ) ; if ( ! ( matcher . matches ( ) ) ) { return new org . IDENT_0 . http . commons . domain . METHOD_5 ( ) ; } final java . lang . String from = matcher . group ( 1 ) ; final java . lang . String to = matcher . group ( 2 ) ; final long start ; if ( from . equals ( "" ) ) { start = 0 ; } else { start = java . lang . Long . METHOD_6 ( from ) ; } final long end ; if ( to . equals ( "" ) ) { end = - 1 ; } else { end = java . lang . Long . METHOD_6 ( to ) ; } return new org . IDENT_0 . http . commons . domain . METHOD_5 ( start , end ) ; }
org . junit . Assert . assertEquals ( IDENT_8 , IDENT_7 ) 