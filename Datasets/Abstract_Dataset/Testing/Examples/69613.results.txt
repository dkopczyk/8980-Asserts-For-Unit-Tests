METHOD_0 ( ) { org . springframework . context . IDENT_0 IDENT_1 = mock ( org . springframework . context . IDENT_0 . class ) ; org . IDENT_2 . model . IDENT_3 IDENT_4 = mock ( org . IDENT_2 . model . IDENT_3 . class ) ; java . lang . annotation . IDENT_5 [ ] IDENT_6 = new java . lang . annotation . IDENT_5 [ 1 ] ; org . IDENT_7 . api . mockito . IDENT_8 . METHOD_1 ( org . IDENT_2 . utils . IDENT_9 . class ) ; when ( org . IDENT_2 . utils . IDENT_9 . METHOD_2 ( IDENT_6 [ 0 ] , org . IDENT_2 . annotation . IDENT_10 . class ) ) . thenReturn ( false ) ; org . IDENT_2 . model . IDENT_11 IDENT_12 = new org . IDENT_2 . model . METHOD_3 ( IDENT_1 , IDENT_4 , IDENT_6 ) ; boolean result = IDENT_12 . evaluate ( ) ; "<AssertPlaceHolder>" ; verify ( IDENT_1 , METHOD_4 ( ) ) . METHOD_5 ( any ( java . lang . Class . class ) ) ; org . IDENT_7 . api . mockito . IDENT_8 . METHOD_6 ( ) ; org . IDENT_2 . utils . IDENT_9 . METHOD_2 ( IDENT_6 [ 0 ] , org . IDENT_2 . annotation . IDENT_10 . class ) ; } evaluate ( ) { return IDENT_13 . entrySet ( ) . stream ( ) . map ( ( entry ) -> METHOD_7 ( org . IDENT_2 . model . IDENT_1 , org . IDENT_2 . model . IDENT_4 , entry . getKey ( ) , entry . getValue ( ) ) ) . filter ( ( result ) -> result == Boolean . IDENT_14 ) . METHOD_8 ( ) . METHOD_9 ( true ) ; }
org . junit . Assert . assertEquals ( true , result ) 