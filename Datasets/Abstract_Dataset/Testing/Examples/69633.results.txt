METHOD_0 ( ) { java . lang . reflect . Method method = org . IDENT_0 . store . IDENT_1 . IDENT_2 . class . METHOD_1 ( STRING_0 ) ; org . IDENT_0 . model . IDENT_3 IDENT_4 = mock ( org . IDENT_0 . model . IDENT_3 . class ) ; java . util . Map < java . lang . reflect . Method , org . IDENT_0 . model . IDENT_3 > store = new java . util . HashMap < java . lang . reflect . Method , org . IDENT_0 . model . IDENT_3 > ( ) { { put ( null , IDENT_4 ) ; } } ; org . springframework . test . util . IDENT_5 . METHOD_2 ( IDENT_6 , STRING_1 , store ) ; when ( IDENT_7 . METHOD_3 ( ) ) . thenReturn ( IDENT_4 ) ; when ( IDENT_4 . evaluate ( ) ) . thenReturn ( true ) ; boolean IDENT_8 = IDENT_6 . METHOD_4 ( method ) ; "<AssertPlaceHolder>" ; verify ( IDENT_4 ) . evaluate ( ) ; } METHOD_4 ( java . lang . reflect . Method ) { return store . METHOD_5 ( method , IDENT_7 . METHOD_3 ( ) ) . evaluate ( ) ; }
org . junit . Assert . assertEquals ( true , IDENT_8 ) 