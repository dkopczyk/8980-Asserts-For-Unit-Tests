METHOD_0 ( ) { au . edu . IDENT_0 . utils . IDENT_1 IDENT_2 = new au . edu . IDENT_0 . utils . METHOD_1 ( FLOAT_0 , FLOAT_1 , FLOAT_1 ) ; float IDENT_3 = FLOAT_2 ; int IDENT_4 = 100 ; au . edu . IDENT_0 . IDENT_5 . IDENT_6 IDENT_7 = new au . edu . IDENT_0 . IDENT_5 . METHOD_2 ( ) ; au . edu . IDENT_0 . IDENT_5 . IDENT_8 IDENT_9 = new au . edu . IDENT_0 . IDENT_5 . METHOD_3 ( new au . edu . IDENT_0 . utils . METHOD_1 ( ) , new au . edu . IDENT_0 . utils . METHOD_1 ( IDENT_3 , FLOAT_1 , FLOAT_1 ) ) ; IDENT_7 . METHOD_4 ( IDENT_9 ) ; for ( int IDENT_10 = 1 ; IDENT_10 < IDENT_4 ; ++ IDENT_10 ) { IDENT_7 . METHOD_5 ( IDENT_2 , IDENT_3 ) ; } METHOD_6 ( IDENT_7 ) ; java . io . File file = IDENT_11 . METHOD_7 ( ) ; java . io . IDENT_12 IDENT_13 = new java . io . METHOD_8 ( file ) ; au . edu . IDENT_0 . utils . IDENT_14 . METHOD_9 ( IDENT_7 , IDENT_13 ) ; java . io . IDENT_15 IDENT_16 = new java . io . METHOD_10 ( file ) ; au . edu . IDENT_0 . IDENT_5 . METHOD_2 IDENT_17 = au . edu . IDENT_0 . utils . IDENT_14 . METHOD_11 ( IDENT_16 , au . edu . IDENT_0 . IDENT_5 . METHOD_2 . class ) ; "<AssertPlaceHolder>" ; } METHOD_11 ( java . io . InputStream , java . lang . Class ) { javax . xml . IDENT_18 . IDENT_19 context = javax . xml . IDENT_18 . IDENT_19 . newInstance ( clazz ) ; javax . xml . IDENT_18 . IDENT_20 m = context . METHOD_12 ( ) ; T IDENT_7 = ( ( T ) ( m . METHOD_13 ( is ) ) ) ; IDENT_7 . METHOD_14 ( ) ; return IDENT_7 ; }
org . junit . Assert . assertEquals ( IDENT_7 , IDENT_17 ) 