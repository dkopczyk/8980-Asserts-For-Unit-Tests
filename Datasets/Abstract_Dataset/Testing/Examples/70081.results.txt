METHOD_0 ( ) { java . util . List < com . github . IDENT_0 . metadata . IDENT_1 . IDENT_2 > IDENT_3 = new java . util . ArrayList < com . github . IDENT_0 . metadata . IDENT_1 . IDENT_2 > ( ) ; com . github . IDENT_0 . metadata . IDENT_1 . IDENT_2 IDENT_4 = new com . github . IDENT_0 . metadata . IDENT_1 . METHOD_1 ( ) ; IDENT_4 . METHOD_2 ( com . github . IDENT_0 . test . IDENT_5 . IDENT_6 . class . METHOD_3 ( ) [ 0 ] ) ; IDENT_4 . METHOD_4 ( IDENT_7 . IDENT_8 ) ; IDENT_4 . METHOD_5 ( STRING_0 ) ; IDENT_4 . METHOD_6 ( true ) ; IDENT_4 . METHOD_7 ( new com . github . IDENT_0 . metadata . METHOD_8 ( ) ) ; IDENT_4 . METHOD_9 ( 7 ) ; IDENT_4 . METHOD_10 ( 10 ) ; IDENT_3 . add ( IDENT_4 ) ; com . github . IDENT_0 . metadata . IDENT_1 . METHOD_1 IDENT_9 = new com . github . IDENT_0 . metadata . IDENT_1 . METHOD_1 ( ) ; IDENT_9 . METHOD_2 ( com . github . IDENT_0 . test . IDENT_5 . IDENT_6 . class . METHOD_3 ( ) [ 1 ] ) ; IDENT_9 . METHOD_4 ( IDENT_7 . IDENT_8 ) ; IDENT_9 . METHOD_5 ( STRING_0 ) ; IDENT_9 . METHOD_6 ( true ) ; IDENT_9 . METHOD_7 ( new com . github . IDENT_0 . metadata . METHOD_8 ( ) ) ; IDENT_9 . METHOD_9 ( 3 ) ; IDENT_9 . METHOD_10 ( 6 ) ; IDENT_3 . add ( IDENT_9 ) ; com . github . IDENT_0 . metadata . IDENT_1 . IDENT_10 IDENT_11 = new com . github . IDENT_0 . metadata . IDENT_1 . METHOD_11 ( com . github . IDENT_0 . test . IDENT_5 . IDENT_6 . class , IDENT_3 ) ; IDENT_11 . METHOD_12 ( ) ; com . github . IDENT_0 . metadata . IDENT_1 . METHOD_1 [ ] expected = new com . github . IDENT_0 . metadata . IDENT_1 . METHOD_1 [ ] { IDENT_9 , IDENT_4 } ; com . github . IDENT_0 . metadata . IDENT_1 . METHOD_1 [ ] actual = IDENT_11 . METHOD_13 ( ) . toArray ( new com . github . IDENT_0 . metadata . IDENT_1 . METHOD_1 [ IDENT_11 . METHOD_13 ( ) . size ( ) ] ) ; "<AssertPlaceHolder>" ; } METHOD_13 ( ) { return ( ( java . util . List < com . github . IDENT_0 . metadata . IDENT_1 . METHOD_1 > ) ( super . METHOD_13 ( ) ) ) ; }
org . junit . Assert . assertArrayEquals ( expected , actual ) 