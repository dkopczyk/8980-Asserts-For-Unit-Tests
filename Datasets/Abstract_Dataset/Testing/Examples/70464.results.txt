METHOD_0 ( ) { long IDENT_0 = INT_0 ; long IDENT_1 = 2 ; long IDENT_2 = INT_1 ; long IDENT_3 = INT_2 ; long IDENT_4 = INT_3 ; long IDENT_5 = ( ( ( IDENT_0 + ( ( org . finra . herd . core . IDENT_6 . IDENT_7 ) * IDENT_1 ) ) + ( ( org . finra . herd . core . IDENT_6 . IDENT_8 ) * IDENT_2 ) ) + ( ( org . finra . herd . core . IDENT_6 . IDENT_9 ) * IDENT_3 ) ) + ( ( org . finra . herd . core . IDENT_6 . IDENT_10 ) * IDENT_4 ) ; java . lang . String IDENT_11 = ( ( ( ( ( ( ( ( IDENT_4 + STRING_0 ) + IDENT_3 ) + STRING_1 ) + IDENT_2 ) + STRING_2 ) + IDENT_1 ) + STRING_3 ) + IDENT_0 ) + STRING_4 ; java . lang . String result = org . finra . herd . core . IDENT_6 . METHOD_1 ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( long ) { java . lang . StringBuilder result = new java . lang . StringBuilder ( ) ; long IDENT_12 = IDENT_5 ; if ( IDENT_12 == 0 ) { result . append ( STRING_5 ) ; } else { IDENT_12 = org . finra . herd . core . IDENT_6 . METHOD_2 ( IDENT_12 , org . apache . commons . lang3 . time . IDENT_13 . IDENT_10 , STRING_6 , result , false ) ; IDENT_12 = org . finra . herd . core . IDENT_6 . METHOD_2 ( IDENT_12 , org . apache . commons . lang3 . time . IDENT_13 . IDENT_9 , STRING_7 , result , false ) ; IDENT_12 = org . finra . herd . core . IDENT_6 . METHOD_2 ( IDENT_12 , org . apache . commons . lang3 . time . IDENT_13 . IDENT_8 , STRING_8 , result , false ) ; IDENT_12 = org . finra . herd . core . IDENT_6 . METHOD_2 ( IDENT_12 , org . apache . commons . lang3 . time . IDENT_13 . IDENT_7 , STRING_9 , result , false ) ; long IDENT_14 = IDENT_12 ; if ( IDENT_14 > 0 ) { org . finra . herd . core . IDENT_6 . METHOD_2 ( IDENT_12 , 1 , STRING_10 , result , true ) ; } } return result . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_11 , result ) 