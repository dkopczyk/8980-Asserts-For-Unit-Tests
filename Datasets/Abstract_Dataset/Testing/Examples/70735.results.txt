METHOD_0 ( ) { org . finra . herd . model . api . xml . IDENT_0 IDENT_1 = new org . finra . herd . model . api . xml . METHOD_1 ( java . util . Arrays . asList ( new org . finra . herd . model . api . xml . METHOD_2 ( IDENT_2 ) , new org . finra . herd . model . api . xml . METHOD_2 ( IDENT_3 ) ) ) ; when ( IDENT_4 . METHOD_3 ( ) ) . thenReturn ( IDENT_1 ) ; org . finra . herd . model . api . xml . METHOD_1 response = IDENT_5 . METHOD_3 ( ) ; verify ( IDENT_4 , times ( 1 ) ) . METHOD_3 ( ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { javax . persistence . criteria . IDENT_6 builder = IDENT_7 . METHOD_4 ( ) ; javax . persistence . criteria . IDENT_8 < java . lang . String > criteria = builder . METHOD_5 ( java . lang . String . class ) ; javax . persistence . criteria . IDENT_9 < org . finra . herd . model . jpa . IDENT_10 > IDENT_11 = criteria . from ( org . finra . herd . model . jpa . IDENT_10 . class ) ; javax . persistence . criteria . Path < java . lang . String > IDENT_12 = IDENT_11 . get ( IDENT_13 . name ) ; criteria . select ( IDENT_12 ) . METHOD_6 ( builder . METHOD_7 ( IDENT_12 ) ) ; java . util . List < java . lang . String > IDENT_14 = IDENT_7 . METHOD_5 ( criteria ) . METHOD_8 ( ) ; java . util . List < org . finra . herd . model . api . xml . METHOD_2 > IDENT_1 = new java . util . ArrayList ( ) ; for ( java . lang . String IDENT_15 : IDENT_14 ) { IDENT_1 . add ( new org . finra . herd . model . api . xml . METHOD_2 ( IDENT_15 ) ) ; } return IDENT_1 ; }
org . junit . Assert . assertEquals ( IDENT_1 , response ) 