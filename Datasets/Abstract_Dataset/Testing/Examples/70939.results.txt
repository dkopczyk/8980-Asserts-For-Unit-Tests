METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; try { IDENT_1 . METHOD_1 ( new org . finra . herd . model . api . xml . METHOD_2 ( IDENT_0 , null ) ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( org . finra . herd . model . IDENT_2 ex ) { "<AssertPlaceHolder>" ; } } METHOD_1 ( java . lang . String , java . util . List ) { org . finra . herd . service . IDENT_3 . IDENT_4 IDENT_5 ; try { IDENT_5 = ( ( org . finra . herd . service . IDENT_3 . IDENT_4 ) ( IDENT_6 . METHOD_3 ( IDENT_7 ) ) ) ; } catch ( java . lang . Exception e ) { throw new org . finra . herd . model . METHOD_4 ( java . lang . String . format ( STRING_2 , IDENT_7 ) , e ) ; } IDENT_5 . METHOD_5 ( parameters ) ; org . IDENT_8 . IDENT_9 IDENT_10 = org . IDENT_8 . IDENT_9 . METHOD_6 ( ( IDENT_7 + ( org . finra . herd . service . IDENT_3 . IDENT_4 . IDENT_11 ) ) ) ; org . IDENT_8 . IDENT_12 IDENT_13 = org . IDENT_8 . IDENT_14 . METHOD_7 ( ) . METHOD_8 ( METHOD_6 ) . METHOD_9 ( IDENT_7 ) . METHOD_10 ( IDENT_5 . METHOD_11 ( parameters ) ) . METHOD_12 ( ) . build ( ) ; org . finra . herd . service . helper . IDENT_15 . LOGGER . debug ( java . lang . String . format ( ( STRING_3 + STRING_4 ) , IDENT_13 . METHOD_13 ( ) , IDENT_13 . METHOD_14 ( ) , IDENT_13 . METHOD_15 ( ) , IDENT_13 . METHOD_16 ( ) , IDENT_13 . METHOD_17 ( ) , IDENT_13 . getKey ( ) , IDENT_13 . METHOD_18 ( ) , IDENT_13 . METHOD_19 ( ) , IDENT_13 . METHOD_20 ( ) , IDENT_13 . METHOD_21 ( ) , IDENT_13 . METHOD_22 ( ) ) ) ; IDENT_16 . METHOD_23 ( ) . METHOD_24 ( IDENT_13 ) ; }
org . junit . Assert . assertEquals ( java . lang . String . format ( STRING_2 , IDENT_0 ) , ex . getMessage ( ) ) 