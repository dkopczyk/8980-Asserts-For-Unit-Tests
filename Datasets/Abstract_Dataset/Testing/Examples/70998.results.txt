METHOD_0 ( ) { org . finra . herd . model . api . xml . IDENT_0 IDENT_1 = new org . finra . herd . model . api . xml . METHOD_1 ( IDENT_2 , IDENT_3 ) ; when ( IDENT_4 . METHOD_2 ( STRING_0 , org . finra . herd . service . helper . IDENT_2 ) ) . thenReturn ( org . finra . herd . service . helper . IDENT_2 ) ; when ( IDENT_4 . METHOD_2 ( STRING_1 , STRING_2 , org . finra . herd . service . helper . IDENT_3 ) ) . thenReturn ( org . finra . herd . service . helper . IDENT_3 ) ; IDENT_5 . METHOD_3 ( IDENT_1 ) ; verify ( IDENT_4 ) . METHOD_2 ( STRING_0 , org . finra . herd . service . helper . IDENT_2 ) ; verify ( IDENT_4 ) . METHOD_2 ( STRING_1 , STRING_2 , org . finra . herd . service . helper . IDENT_3 ) ; METHOD_4 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . String , java . lang . String , java . lang . String ) { org . springframework . util . Assert . METHOD_5 ( IDENT_6 , java . lang . String . format ( STRING_3 , IDENT_7 , IDENT_8 ) ) ; org . springframework . util . Assert . METHOD_6 ( IDENT_6 , "/" , java . lang . String . format ( STRING_4 , org . apache . commons . lang3 . StringUtils . METHOD_7 ( IDENT_8 ) ) ) ; return IDENT_6 . trim ( ) ; }
org . junit . Assert . assertEquals ( new org . finra . herd . model . api . xml . METHOD_1 ( IDENT_2 , IDENT_3 ) , IDENT_1 ) 