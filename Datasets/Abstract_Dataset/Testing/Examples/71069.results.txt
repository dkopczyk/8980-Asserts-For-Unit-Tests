METHOD_0 ( ) { org . finra . herd . model . api . xml . IDENT_0 IDENT_1 = new org . finra . herd . model . api . xml . METHOD_1 ( IDENT_2 , IDENT_3 , IDENT_4 , IDENT_5 , IDENT_6 , IDENT_7 , IDENT_8 , IDENT_9 , IDENT_10 , ( ( ( ( IDENT_11 ) + "/" ) + ( IDENT_12 ) ) + " " ) ) ; org . finra . herd . model . api . xml . IDENT_13 IDENT_14 = new org . finra . herd . model . api . xml . METHOD_2 ( IDENT_1 ) ; when ( IDENT_15 . METHOD_3 ( STRING_0 , org . finra . herd . service . helper . IDENT_2 ) ) . thenReturn ( org . finra . herd . service . helper . IDENT_16 ) ; when ( IDENT_15 . METHOD_3 ( STRING_1 , org . finra . herd . service . helper . IDENT_3 ) ) . thenReturn ( org . finra . herd . service . helper . IDENT_17 ) ; when ( IDENT_15 . METHOD_3 ( STRING_2 , org . finra . herd . service . helper . IDENT_4 ) ) . thenReturn ( org . finra . herd . service . helper . IDENT_18 ) ; when ( IDENT_15 . METHOD_3 ( STRING_3 , org . finra . herd . service . helper . IDENT_5 ) ) . thenReturn ( org . finra . herd . service . helper . IDENT_19 ) ; when ( IDENT_15 . METHOD_3 ( STRING_4 , org . finra . herd . service . helper . IDENT_7 ) ) . thenReturn ( org . finra . herd . service . helper . IDENT_20 ) ; for ( int i = 0 ; i < ( org . finra . herd . service . helper . IDENT_8 . size ( ) ) ; i ++ ) { when ( IDENT_15 . METHOD_3 ( STRING_5 , org . finra . herd . service . helper . IDENT_8 . get ( i ) ) ) . thenReturn ( org . finra . herd . service . helper . IDENT_21 . get ( i ) ) ; } when ( IDENT_15 . METHOD_3 ( STRING_6 , org . finra . herd . service . helper . IDENT_10 ) ) . thenReturn ( org . finra . herd . service . helper . IDENT_22 ) ; IDENT_23 . METHOD_4 ( IDENT_14 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_15 ) . METHOD_3 ( STRING_0 , org . finra . herd . service . helper . IDENT_2 ) ; verify ( IDENT_15 ) . METHOD_3 ( STRING_1 , org . finra . herd . service . helper . IDENT_3 ) ; verify ( IDENT_15 ) . METHOD_3 ( STRING_2 , org . finra . herd . service . helper . IDENT_4 ) ; verify ( IDENT_15 ) . METHOD_3 ( STRING_3 , org . finra . herd . service . helper . IDENT_5 ) ; verify ( IDENT_15 ) . METHOD_3 ( STRING_4 , org . finra . herd . service . helper . IDENT_7 ) ; for ( java . lang . String IDENT_24 : IDENT_8 ) { verify ( IDENT_15 ) . METHOD_3 ( STRING_5 , IDENT_24 ) ; } verify ( IDENT_15 ) . METHOD_3 ( STRING_6 , org . finra . herd . service . helper . IDENT_10 ) ; METHOD_5 ( IDENT_15 ) ; } METHOD_4 ( org . finra . herd . model . api . xml . METHOD_2 ) { org . springframework . util . Assert . METHOD_6 ( IDENT_14 , STRING_7 ) ; METHOD_7 ( IDENT_14 . METHOD_8 ( ) ) ; }
org . junit . Assert . assertEquals ( new org . finra . herd . model . api . xml . METHOD_2 ( new org . finra . herd . model . api . xml . METHOD_1 ( IDENT_16 , IDENT_17 , IDENT_18 , IDENT_19 , IDENT_6 , IDENT_20 , IDENT_21 , IDENT_9 , IDENT_22 , ( ( ( IDENT_11 ) + "/" ) + ( IDENT_12 ) ) ) ) , IDENT_14 ) 