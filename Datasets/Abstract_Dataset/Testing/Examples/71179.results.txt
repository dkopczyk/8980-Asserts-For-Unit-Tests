METHOD_0 ( ) { IDENT_0 . METHOD_1 ( org . finra . IDENT_1 . IDENT_2 . IDENT_3 . element . html . IDENT_4 . url ) ; java . util . List < java . lang . String > exp = java . util . Arrays . asList ( new java . lang . String [ ] { STRING_0 , STRING_1 , STRING_2 , STRING_3 } ) ; org . finra . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_5 d = new org . finra . IDENT_1 . IDENT_2 . IDENT_3 . element . html . METHOD_2 ( STRING_4 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { try { org . openqa . selenium . support . ui . IDENT_6 IDENT_7 = new org . openqa . selenium . support . ui . METHOD_4 ( METHOD_5 ( ) ) ; java . util . List < org . openqa . selenium . IDENT_8 > options = IDENT_7 . METHOD_3 ( ) ; java . util . List < java . lang . String > IDENT_9 = new java . util . ArrayList < java . lang . String > ( ) ; for ( org . openqa . selenium . IDENT_8 e : options ) { IDENT_9 . add ( e . getText ( ) ) ; } return IDENT_9 ; } catch ( java . lang . Exception e ) { throw new org . finra . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_6 ( STRING_5 , METHOD_7 ( ) , e ) ; } }
org . junit . Assert . assertEquals ( exp , d . METHOD_3 ( ) ) 