METHOD_0 ( ) { IDENT_0 . METHOD_1 ( org . finra . IDENT_1 . IDENT_2 . IDENT_3 . element . html . IDENT_4 . url ) ; org . finra . IDENT_1 . IDENT_2 . IDENT_3 . element . html . IDENT_5 in = new org . finra . IDENT_1 . IDENT_2 . IDENT_3 . element . html . METHOD_2 ( IDENT_6 ) ; boolean exception = false ; try { in . setValue ( 1 ) ; } catch ( org . finra . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_7 IDENT_8 ) { exception = true ; } "<AssertPlaceHolder>" ; } setValue ( java . lang . Object ) { try { if ( value instanceof java . lang . String ) { METHOD_3 ( ( ( java . lang . String ) ( value ) ) ) ; } else if ( value instanceof java . util . List < ? > ) { METHOD_4 ( ( ( java . util . List < java . lang . String > ) ( value ) ) ) ; } else { throw new org . finra . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_5 ( STRING_0 , METHOD_6 ( ) ) ; } } catch ( java . lang . Exception e ) { throw new org . finra . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_7 ( STRING_1 , METHOD_6 ( ) , e ) ; } }
org . junit . Assert . assertTrue ( exception ) 