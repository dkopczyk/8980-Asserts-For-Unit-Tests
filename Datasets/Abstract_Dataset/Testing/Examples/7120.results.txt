METHOD_0 ( ) { org . osgi . service . IDENT_0 . IDENT_1 IDENT_2 = org . mockito . Mockito . mock ( org . osgi . service . IDENT_0 . IDENT_1 . class ) ; org . osgi . service . IDENT_0 . User IDENT_3 = org . mockito . Mockito . mock ( org . osgi . service . IDENT_0 . User . class ) ; org . mockito . Mockito . when ( IDENT_4 . METHOD_1 ( STRING_0 ) ) . thenReturn ( IDENT_2 ) ; org . mockito . Mockito . when ( IDENT_4 . METHOD_1 ( STRING_1 ) ) . thenReturn ( IDENT_3 ) ; org . mockito . Mockito . when ( IDENT_2 . getType ( ) ) . thenReturn ( IDENT_5 . IDENT_6 ) ; org . mockito . Mockito . when ( IDENT_2 . METHOD_2 ( IDENT_3 ) ) . thenReturn ( true ) ; boolean IDENT_7 = IDENT_8 . METHOD_2 ( STRING_0 , STRING_1 ) ; "<AssertPlaceHolder>" ; org . mockito . Mockito . verify ( IDENT_2 ) . METHOD_2 ( IDENT_3 ) ; } METHOD_2 ( java . lang . String , java . lang . String ) { if ( IDENT_9 == null ) { throw new java . io . IOException ( STRING_2 ) ; } if ( IDENT_10 == null ) { throw new java . io . IOException ( STRING_3 ) ; } org . osgi . service . IDENT_0 . IDENT_5 group = IDENT_4 . METHOD_1 ( IDENT_9 ) ; org . osgi . service . IDENT_0 . IDENT_5 IDENT_11 = IDENT_4 . METHOD_1 ( IDENT_10 ) ; if ( group == null ) { throw new java . io . IOException ( ( ( STRING_4 + IDENT_9 ) + STRING_5 ) ) ; } METHOD_3 ( group , IDENT_5 . IDENT_6 ) ; return ( ( org . osgi . service . IDENT_0 . IDENT_1 ) ( group ) ) . METHOD_2 ( IDENT_11 ) ; }
org . junit . Assert . assertTrue ( IDENT_7 ) 