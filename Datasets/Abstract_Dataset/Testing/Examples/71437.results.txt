METHOD_0 ( ) { com . google . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = new com . google . IDENT_0 . IDENT_1 . METHOD_1 ( com . google . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 , IDENT_6 ) ; com . google . IDENT_0 . IDENT_1 . METHOD_1 IDENT_7 = new com . google . IDENT_0 . IDENT_1 . METHOD_1 ( com . google . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_8 , IDENT_6 ) ; com . google . IDENT_0 . IDENT_1 . METHOD_1 IDENT_9 = new com . google . IDENT_0 . IDENT_1 . METHOD_1 ( com . google . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_10 , IDENT_6 ) ; when ( IDENT_6 . METHOD_2 ( com . google . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_11 ) ) . thenReturn ( com . google . common . collect . ImmutableList . of ( IDENT_3 , IDENT_7 , IDENT_9 ) ) ; java . util . List < com . google . IDENT_0 . IDENT_1 . METHOD_1 > IDENT_12 = IDENT_13 . METHOD_2 ( ) ; com . google . common . collect . IDENT_14 . Builder < java . lang . String > IDENT_15 = com . google . common . collect . IDENT_14 . < java . lang . String > builder ( ) ; for ( com . google . IDENT_0 . IDENT_1 . METHOD_1 IDENT_16 : IDENT_12 ) { IDENT_15 . add ( IDENT_16 . METHOD_3 ( ) ) ; } "<AssertPlaceHolder>" ; } build ( ) { return new com . google . IDENT_0 . IDENT_17 . METHOD_4 ( this ) ; }
org . junit . Assert . assertEquals ( com . google . common . collect . IDENT_14 . of ( com . google . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 , com . google . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_8 , com . google . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_10 ) , IDENT_15 . build ( ) ) 