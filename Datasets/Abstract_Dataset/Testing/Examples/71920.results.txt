METHOD_0 ( ) { java . lang . Object result = this . IDENT_0 . create ( java . lang . String . class , IDENT_1 ) ; "<AssertPlaceHolder>" ; } create ( java . lang . Object , com . IDENT_2 . IDENT_3 . IDENT_4 ) { if ( ! ( request instanceof com . IDENT_2 . IDENT_3 . IDENT_5 . IDENT_6 ) ) { return new com . IDENT_2 . IDENT_3 . METHOD_1 ( ) ; } com . IDENT_2 . IDENT_3 . IDENT_5 . IDENT_6 type = ( ( com . IDENT_2 . IDENT_3 . IDENT_5 . IDENT_6 ) ( request ) ) ; if ( ! ( org . joda . time . base . IDENT_7 . class . METHOD_2 ( type . METHOD_3 ( ) ) ) ) { return new com . IDENT_2 . IDENT_3 . METHOD_1 ( ) ; } try { java . util . Date date = ( ( java . util . Date ) ( context . resolve ( java . util . Date . class ) ) ) ; long IDENT_8 = date . getTime ( ) ; org . joda . time . IDENT_9 IDENT_10 = ( ( org . joda . time . IDENT_9 ) ( context . resolve ( org . joda . time . IDENT_9 . class ) ) ) ; return type . METHOD_3 ( ) . METHOD_4 ( long . class , org . joda . time . IDENT_9 . class ) . newInstance ( IDENT_8 , IDENT_10 ) ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; return new com . IDENT_2 . IDENT_3 . METHOD_1 ( ) ; } }
org . junit . Assert . assertEquals ( new com . IDENT_2 . IDENT_3 . METHOD_1 ( ) , result ) 