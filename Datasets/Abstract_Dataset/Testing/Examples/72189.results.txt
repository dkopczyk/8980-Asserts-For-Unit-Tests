METHOD_0 ( ) { final java . lang . String url = STRING_0 ; final java . lang . String msg = STRING_1 ; METHOD_1 ( get ( METHOD_2 ( STRING_2 ) ) . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( STRING_3 , STRING_4 ) . METHOD_6 ( msg ) ) ) ; com . flow . platform . util . http . IDENT_0 . build ( url ) . get ( ) . METHOD_7 ( ( response ) -> { java . io . InputStream stream = response . METHOD_8 ( ) ; try ( java . io . IDENT_1 reader = new java . io . METHOD_9 ( new java . io . METHOD_10 ( stream ) ) ) { java . lang . StringBuilder content = new java . lang . StringBuilder ( ) ; java . lang . String line ; while ( ( line = reader . METHOD_11 ( ) ) != null ) { content . append ( line ) ; } "<AssertPlaceHolder>" ; } catch ( e ) { fail ( ) ; } } ) ; } toString ( ) { return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( STRING_5 + STRING_6 ) + ( IDENT_2 ) ) + STRING_7 ) + ( IDENT_3 ) ) + STRING_8 ) + ( IDENT_4 ) ) + STRING_9 ) + ( IDENT_5 ) ) + STRING_10 ) + ( IDENT_6 ) ) + STRING_11 ) + ( IDENT_7 ) ) + STRING_12 ) + ( IDENT_8 ) ) + STRING_13 ) + ( output . size ( ) ) ) + STRING_14 ; }
org . junit . Assert . assertEquals ( msg , content . toString ( ) ) 