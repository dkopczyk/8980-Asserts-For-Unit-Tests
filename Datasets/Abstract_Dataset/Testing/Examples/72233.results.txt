METHOD_0 ( ) { int port = org . IDENT_0 . logger . util . IDENT_1 . METHOD_1 ( ) ; org . IDENT_0 . logger . util . IDENT_1 IDENT_0 = new org . IDENT_0 . logger . util . METHOD_2 ( port , new org . IDENT_0 . logger . util . METHOD_2 . METHOD_3 ( ) { public void process ( org . IDENT_2 . IDENT_3 IDENT_2 , java . net . IDENT_4 IDENT_5 ) throws java . io . IOException { java . io . IDENT_6 in = new java . io . METHOD_4 ( IDENT_5 . METHOD_5 ( ) ) ; try { org . IDENT_2 . IDENT_7 . IDENT_8 IDENT_7 = IDENT_2 . METHOD_6 ( in ) ; while ( true ) { IDENT_7 . read ( org . IDENT_0 . logger . IDENT_9 . IDENT_10 . class ) ; } } catch ( java . io . IDENT_11 e ) { } } } ) ; IDENT_0 . start ( ) ; org . IDENT_0 . logger . IDENT_9 . IDENT_12 IDENT_9 = new org . IDENT_0 . logger . IDENT_9 . METHOD_7 ( STRING_0 , port , INT_0 , INT_1 ) ; org . IDENT_0 . logger . IDENT_9 . Map < java . lang . String , java . lang . Object > data = new org . IDENT_0 . logger . IDENT_9 . HashMap < java . lang . String , java . lang . Object > ( ) ; data . put ( STRING_1 , METHOD_8 ( INT_2 ) ) ; boolean IDENT_13 = IDENT_9 . METHOD_9 ( STRING_2 , data ) ; "<AssertPlaceHolder>" ; IDENT_9 . close ( ) ; IDENT_0 . close ( ) ; } METHOD_9 ( java . lang . String , java . util . Map ) { return METHOD_9 ( IDENT_14 , ( ( java . lang . System . currentTimeMillis ( ) ) / 1000 ) , data ) ; }
org . junit . Assert . assertFalse ( IDENT_13 ) 