METHOD_0 ( ) { java . lang . String IDENT_0 = ( ( STRING_0 + ( co . IDENT_1 . a . IDENT_2 . IDENT_3 ) ) + STRING_1 ) + STRING_2 ; a . run ( IDENT_0 . split ( " " ) ) ; javax . jms . IDENT_4 IDENT_5 = session . METHOD_1 ( IDENT_6 ) ; javax . jms . IDENT_7 msg = ( ( javax . jms . IDENT_7 ) ( IDENT_5 . METHOD_2 ( co . IDENT_1 . a . IDENT_8 ) ) ) ; "<AssertPlaceHolder>" ; } run ( java . lang . String [ ] ) { org . apache . commons . cli . IDENT_9 IDENT_10 = METHOD_3 ( ) ; if ( ( args . length ) == 0 ) { org . apache . commons . cli . IDENT_11 IDENT_12 = new org . apache . commons . cli . METHOD_4 ( ) ; IDENT_12 . METHOD_5 ( STRING_3 , IDENT_10 , true ) ; java . lang . System . METHOD_6 ( 0 ) ; } org . apache . commons . cli . IDENT_13 IDENT_14 = new org . apache . commons . cli . METHOD_7 ( ) ; try { IDENT_0 = IDENT_14 . parse ( IDENT_10 , args ) ; if ( IDENT_0 . METHOD_8 ( co . IDENT_1 . a . IDENT_2 . IDENT_15 ) ) { METHOD_9 ( ) ; return ; } co . IDENT_1 . a . IDENT_2 . IDENT_16 protocol = co . IDENT_1 . a . IDENT_2 . IDENT_16 . IDENT_17 ; if ( IDENT_0 . METHOD_8 ( co . IDENT_1 . a . IDENT_2 . IDENT_18 ) ) { protocol = co . IDENT_1 . a . IDENT_2 . IDENT_16 . IDENT_19 ; } else if ( IDENT_0 . METHOD_8 ( co . IDENT_1 . a . IDENT_2 . IDENT_20 ) ) { protocol = co . IDENT_1 . a . IDENT_2 . IDENT_16 . IDENT_21 ; } connect ( IDENT_0 . METHOD_10 ( co . IDENT_1 . a . IDENT_2 . IDENT_22 , STRING_4 ) , IDENT_0 . METHOD_10 ( co . IDENT_1 . a . IDENT_2 . IDENT_23 ) , IDENT_0 . METHOD_10 ( co . IDENT_1 . a . IDENT_2 . IDENT_24 ) , protocol , IDENT_0 . METHOD_10 ( co . IDENT_1 . a . IDENT_2 . IDENT_25 , "" ) , IDENT_0 . METHOD_8 ( co . IDENT_1 . a . IDENT_2 . IDENT_26 ) ) ; long IDENT_27 = java . lang . System . currentTimeMillis ( ) ; METHOD_11 ( IDENT_0 ) ; long IDENT_28 = java . lang . System . currentTimeMillis ( ) ; long IDENT_29 = IDENT_28 - IDENT_27 ; output ( STRING_5 , java . lang . Long . toString ( IDENT_29 ) , STRING_6 ) ; } finally { try { if ( ( IDENT_30 ) != null ) { IDENT_30 . close ( ) ; } if ( ( conn ) != null ) { conn . close ( ) ; } } catch ( javax . jms . IDENT_31 IDENT_32 ) { IDENT_32 . printStackTrace ( ) ; } } co . IDENT_1 . a . IDENT_2 . logger . debug ( STRING_7 , java . lang . Thread . METHOD_12 ( ) ) ; co . IDENT_1 . a . IDENT_2 . logger . debug ( STRING_8 ) ; }
org . junit . Assert . assertEquals ( "test" , msg . getText ( ) ) 