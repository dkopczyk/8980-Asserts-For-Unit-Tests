METHOD_0 ( ) { edu . IDENT_0 . IDENT_1 . graph . IDENT_2 < edu . IDENT_0 . IDENT_1 . graph . IDENT_3 > g = new edu . IDENT_0 . IDENT_1 . graph . METHOD_1 ( ) ; for ( int i = 0 ; i < 3 ; i ++ ) { for ( int j = i + 1 ; j < 3 ; j ++ ) { g . add ( new edu . IDENT_0 . IDENT_1 . graph . METHOD_2 ( i , j , FLOAT_0 ) ) ; g . add ( new edu . IDENT_0 . IDENT_1 . graph . METHOD_2 ( j , i , FLOAT_0 ) ) ; } } int IDENT_4 = 0 ; for ( edu . IDENT_0 . IDENT_1 . graph . IDENT_3 e : g . METHOD_3 ( ) ) { IDENT_4 ++ ; } "<AssertPlaceHolder>" ; } METHOD_3 ( ) { return g . METHOD_3 ( ) ; }
org . junit . Assert . assertEquals ( 3 , IDENT_4 ) 