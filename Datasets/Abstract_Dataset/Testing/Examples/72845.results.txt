METHOD_0 ( ) { de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_1 ( IDENT_7 . IDENT_8 ) ; org . json . JSONObject IDENT_9 = METHOD_2 ( ) ; java . lang . Object IDENT_10 = - 1 ; try { IDENT_10 = IDENT_9 . METHOD_3 ( STRING_0 ) . get ( IDENT_11 . IDENT_12 ) ; } catch ( org . json . IDENT_13 ex ) { de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . LOGGER . error ( STRING_1 , ex ) ; org . junit . Assert . fail ( ( STRING_2 + ( ex . getMessage ( ) ) ) ) ; } de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_14 . METHOD_4 ( de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . util . IDENT_15 . IDENT_16 . METHOD_5 ( IDENT_7 . IDENT_17 , IDENT_10 , STRING_3 ) , IDENT_9 . toString ( ) ) ; METHOD_6 ( de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_18 ) ; org . json . JSONObject IDENT_19 = de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_7 ( IDENT_7 . IDENT_8 , STRING_4 ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( org . json . JSONObject , org . json . JSONObject ) { if ( IDENT_20 == IDENT_21 ) { return true ; } if ( IDENT_20 == null ) { return false ; } if ( ( IDENT_20 . getClass ( ) ) != ( IDENT_21 . getClass ( ) ) ) { return false ; } if ( ( IDENT_20 . length ( ) ) != ( IDENT_21 . length ( ) ) ) { return false ; } java . util . Iterator iterator = IDENT_20 . keys ( ) ; while ( iterator . hasNext ( ) ) { java . lang . String key = iterator . next ( ) . toString ( ) ; if ( ! ( IDENT_21 . METHOD_9 ( key ) ) ) { return false ; } try { java . lang . Object IDENT_22 = IDENT_20 . get ( key ) ; else if ( IDENT_22 instanceof org . json . IDENT_23 ) { org . json . IDENT_23 IDENT_24 = ( ( org . json . IDENT_23 ) ( IDENT_22 ) ) ; org . json . IDENT_23 IDENT_25 = IDENT_21 . METHOD_10 ( key ) ; if ( ! ( de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_8 ( IDENT_24 , IDENT_25 ) ) ) { return false ; } } else if ( key . toLowerCase ( ) . METHOD_11 ( STRING_5 ) ) { if ( ! ( de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_12 ( IDENT_22 . toString ( ) , IDENT_21 . get ( key ) . toString ( ) ) ) ) { return false ; } } else if ( ! ( IDENT_22 . equals ( IDENT_21 . get ( key ) ) ) ) { return false ; } } catch ( org . json . IDENT_13 ex ) { return false ; } } return true ; }
org . junit . Assert . assertTrue ( de . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . METHOD_8 ( IDENT_19 , IDENT_9 ) ) 