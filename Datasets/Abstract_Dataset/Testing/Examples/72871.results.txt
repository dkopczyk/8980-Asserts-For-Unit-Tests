METHOD_0 ( ) { com . IDENT_0 . rules . IDENT_1 . LOG . info ( STRING_0 ) ; com . IDENT_0 . rules . IDENT_2 payload = new com . IDENT_0 . rules . METHOD_1 ( ) ; payload . METHOD_2 ( STRING_1 , STRING_2 ) ; payload . METHOD_2 ( STRING_3 , STRING_4 ) ; payload . METHOD_2 ( STRING_3 , STRING_5 ) ; payload . METHOD_2 ( STRING_1 , STRING_6 ) ; payload . METHOD_2 ( STRING_3 , STRING_7 ) ; payload . METHOD_2 ( STRING_3 , STRING_8 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . lang . String ) { java . util . List < com . IDENT_0 . rules . IDENT_3 > IDENT_4 = new java . util . ArrayList ( ) ; MOD_0 ( IDENT_5 ) { IDENT_5 . stream ( ) . filter ( ( i ) -> i . METHOD_4 ( ) . equalsIgnoreCase ( IDENT_6 ) ) . METHOD_5 ( ( i ) -> { IDENT_4 . add ( i ) ; } ) ; } return IDENT_4 ; }
org . junit . Assert . assertEquals ( 4 , payload . METHOD_3 ( STRING_3 ) . size ( ) ) 