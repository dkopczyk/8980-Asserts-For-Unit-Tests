METHOD_0 ( ) { java . util . List < me . IDENT_0 . IDENT_1 . parser . ast . IDENT_2 > IDENT_3 = com . google . common . collect . ImmutableList . of ( IDENT_4 , IDENT_5 , IDENT_6 , IDENT_6 ) ; me . IDENT_0 . IDENT_1 . parser . ast . expressions . IDENT_7 value = METHOD_1 ( me . IDENT_0 . IDENT_1 . parser . ast . expressions . IDENT_7 . class ) ; me . IDENT_0 . IDENT_1 . IDENT_8 . IDENT_9 resolver = METHOD_1 ( me . IDENT_0 . IDENT_1 . IDENT_8 . IDENT_9 . class ) ; me . IDENT_0 . IDENT_1 . parser . ast . IDENT_10 . IDENT_11 IDENT_12 = METHOD_1 ( me . IDENT_0 . IDENT_1 . parser . ast . IDENT_10 . IDENT_11 . class ) ; expect ( value . METHOD_2 ( ) ) . andReturn ( IDENT_12 ) ; expect ( IDENT_12 . METHOD_3 ( ) ) . andReturn ( false ) ; me . IDENT_0 . IDENT_1 . parser . ast . Node parent = new me . IDENT_0 . IDENT_1 . parser . ast . expressions . IDENT_13 . METHOD_4 ( 3 ) ; replay ( value , resolver , IDENT_12 ) ; me . IDENT_0 . IDENT_1 . util . IDENT_14 < java . lang . String , java . util . List < me . IDENT_0 . IDENT_1 . parser . ast . expressions . IDENT_15 > > res = METHOD_5 ( IDENT_3 , value , resolver , parent ) ; "<AssertPlaceHolder>" ; verify ( value , resolver , IDENT_12 ) ; } METHOD_6 ( ) { return ( IDENT_16 ) != null ; }
org . junit . Assert . assertEquals ( true , res . METHOD_6 ( ) ) 