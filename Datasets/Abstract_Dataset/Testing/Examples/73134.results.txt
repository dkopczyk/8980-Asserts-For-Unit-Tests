METHOD_0 ( ) { java . lang . String base = STRING_0 ; java . util . List < com . fujitsu . dc . common . auth . token . IDENT_0 > IDENT_1 = new java . util . ArrayList < com . fujitsu . dc . common . auth . token . IDENT_0 > ( ) ; IDENT_1 . add ( new com . fujitsu . dc . common . auth . token . METHOD_1 ( new java . net . URL ( ( base + STRING_1 ) ) ) ) ; IDENT_1 . add ( new com . fujitsu . dc . common . auth . token . METHOD_1 ( new java . net . URL ( ( base + STRING_2 ) ) ) ) ; IDENT_1 . add ( new com . fujitsu . dc . common . auth . token . METHOD_1 ( new java . net . URL ( ( base + STRING_3 ) ) ) ) ; java . lang . String id = STRING_4 ; com . fujitsu . dc . common . auth . token . IDENT_2 token = new com . fujitsu . dc . common . auth . token . METHOD_2 ( id , STRING_5 , STRING_6 , STRING_7 , IDENT_1 , STRING_8 ) ; java . lang . String IDENT_3 = token . METHOD_3 ( ) ; com . fujitsu . dc . common . auth . token . METHOD_2 IDENT_4 = null ; try { IDENT_4 = com . fujitsu . dc . common . auth . token . METHOD_2 . parse ( IDENT_3 , STRING_5 ) ; "<AssertPlaceHolder>" ; } catch ( com . fujitsu . dc . common . auth . token . IDENT_5 e ) { org . junit . Assert . fail ( e . getMessage ( ) ) ; } } METHOD_3 ( ) { java . lang . StringBuilder ret = new java . lang . StringBuilder ( com . fujitsu . dc . common . auth . token . IDENT_6 . IDENT_7 ) ; ret . append ( this . METHOD_4 ( ) ) ; return ret . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_3 , IDENT_4 . METHOD_3 ( ) ) 