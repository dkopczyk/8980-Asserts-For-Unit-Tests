METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . util . Map < java . lang . String , java . lang . Object > data = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; data . put ( STRING_1 , STRING_2 ) ; java . lang . reflect . IDENT_1 < com . fujitsu . dc . core . utils . IDENT_2 > c = com . fujitsu . dc . core . utils . IDENT_2 . class . METHOD_1 ( ) ; c . METHOD_2 ( true ) ; com . fujitsu . dc . core . utils . IDENT_2 IDENT_3 = org . mockito . Mockito . METHOD_3 ( c . newInstance ( ) ) ; org . mockito . Mockito . METHOD_4 ( new com . fujitsu . dc . core . utils . IDENT_2 . METHOD_5 ( null ) ) . when ( IDENT_3 ) . get ( org . mockito . Mockito . anyString ( ) , org . mockito . Mockito . any ( java . lang . Class . class ) ) ; org . IDENT_4 . api . mockito . IDENT_5 . METHOD_3 ( com . fujitsu . dc . core . model . impl . IDENT_6 . cache . IDENT_7 . class ) ; org . IDENT_4 . api . mockito . IDENT_5 . when ( com . fujitsu . dc . core . model . impl . IDENT_6 . cache . IDENT_7 . class , STRING_3 ) . thenReturn ( IDENT_3 ) ; org . IDENT_4 . api . mockito . IDENT_5 . METHOD_3 ( com . fujitsu . dc . core . IDENT_8 . class ) ; org . IDENT_4 . api . mockito . IDENT_5 . when ( com . fujitsu . dc . core . IDENT_8 . class , STRING_4 ) . thenReturn ( true ) ; boolean IDENT_9 = com . fujitsu . dc . core . model . impl . IDENT_6 . cache . IDENT_7 . METHOD_6 ( IDENT_0 , data ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( java . lang . String , java . util . Map ) { if ( ! ( com . fujitsu . dc . core . IDENT_8 . METHOD_7 ( ) ) ) { return false ; } java . util . Map < java . lang . String , java . lang . Object > IDENT_10 = null ; try { IDENT_10 = com . fujitsu . dc . core . model . impl . IDENT_6 . cache . IDENT_7 . METHOD_8 ( ) . get ( com . fujitsu . dc . core . model . impl . IDENT_6 . cache . IDENT_7 . METHOD_9 ( IDENT_0 ) , java . util . Map . class ) ; } catch ( com . fujitsu . dc . core . utils . IDENT_2 . METHOD_5 e ) { com . fujitsu . dc . core . model . impl . IDENT_6 . cache . IDENT_7 . log . info ( STRING_5 ) ; } if ( IDENT_10 == null ) { return true ; } long IDENT_11 = 0 ; if ( cache . containsKey ( STRING_6 ) ) { IDENT_11 = ( ( java . lang . Long ) ( cache . get ( STRING_6 ) ) ) ; } long IDENT_12 = 0 ; if ( IDENT_10 . containsKey ( STRING_6 ) ) { IDENT_12 = ( ( java . lang . Long ) ( IDENT_10 . get ( STRING_6 ) ) ) ; } if ( IDENT_11 != IDENT_12 ) { return true ; } return false ; }
org . junit . Assert . assertEquals ( true , METHOD_6 ) 