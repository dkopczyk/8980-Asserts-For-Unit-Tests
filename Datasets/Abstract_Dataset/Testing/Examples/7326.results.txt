METHOD_0 ( ) { org . apache . avro . Schema IDENT_0 = new org . apache . avro . Schema . METHOD_1 ( ) . parse ( STRING_0 ) ; org . apache . avro . Schema IDENT_1 = org . apache . avro . Schema . METHOD_2 ( java . util . Arrays . asList ( IDENT_0 , org . apache . avro . Schema . create ( Type . IDENT_2 ) ) ) ; org . apache . avro . Schema IDENT_3 = org . apache . avro . Schema . METHOD_3 ( STRING_1 , null , STRING_2 , false ) ; IDENT_3 . METHOD_4 ( java . util . Arrays . asList ( new org . apache . avro . Schema . Field ( STRING_3 , IDENT_1 , null , null ) , new org . apache . avro . Schema . Field ( STRING_4 , IDENT_1 , null , null ) ) ) ; "<AssertPlaceHolder>" ; } parse ( java . io . InputStream ) { try { org . apache . avro . io . IDENT_4 in = org . apache . avro . grpc . IDENT_5 . IDENT_6 . METHOD_5 ( stream , null ) ; org . apache . avro . Schema IDENT_7 = message . METHOD_6 ( ) ; org . apache . avro . IDENT_8 . IDENT_9 request = ( ( org . apache . avro . IDENT_8 . IDENT_9 ) ( new org . apache . avro . IDENT_10 . METHOD_7 ( IDENT_7 ) . read ( null , in ) ) ) ; java . lang . Object [ ] args = new java . lang . Object [ IDENT_7 . METHOD_8 ( ) . size ( ) ] ; int i = 0 ; for ( org . apache . avro . Schema . Field field : IDENT_7 . METHOD_8 ( ) ) { args [ ( i ++ ) ] = request . get ( field . name ( ) ) ; } return args ; } catch ( java . io . IOException e ) { throw Status . IDENT_11 . METHOD_9 ( e ) . METHOD_10 ( STRING_5 ) . METHOD_11 ( ) ; } finally { org . apache . avro . grpc . IDENT_12 . METHOD_12 ( stream ) ; } }
org . junit . Assert . assertEquals ( IDENT_3 , new org . apache . avro . Schema . METHOD_1 ( ) . parse ( IDENT_3 . toString ( ) ) ) 