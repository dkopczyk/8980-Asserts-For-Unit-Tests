METHOD_0 ( ) { com . fujitsu . dc . core . model . impl . IDENT_0 . IDENT_1 . IDENT_2 IDENT_1 = com . fujitsu . dc . core . model . impl . IDENT_0 . IDENT_1 . IDENT_2 . getInstance ( ) ; com . fujitsu . dc . common . IDENT_3 . IDENT_4 writer = com . fujitsu . dc . common . IDENT_3 . IDENT_4 . getInstance ( STRING_0 , com . fujitsu . dc . test . unit . core . model . impl . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_6 , true ) ; java . io . File IDENT_7 = new java . io . File ( com . fujitsu . dc . test . unit . core . model . impl . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_8 ) ; try { java . lang . Class < ? > clazz = com . fujitsu . dc . common . IDENT_3 . IDENT_9 . class ; java . lang . reflect . Field IDENT_10 = clazz . METHOD_1 ( STRING_1 ) ; IDENT_10 . METHOD_2 ( true ) ; IDENT_10 . set ( writer , com . fujitsu . dc . test . unit . core . model . impl . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_8 ) ; if ( ! ( IDENT_7 . METHOD_3 ( ) ) ) { org . junit . Assert . fail ( ( STRING_2 + ( IDENT_7 . getAbsolutePath ( ) ) ) ) ; } } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( STRING_3 ) ; } java . io . File file = null ; java . lang . String IDENT_11 = ( java . lang . String . format ( IDENT_9 . IDENT_12 , com . fujitsu . dc . test . unit . core . model . impl . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_6 , java . lang . System . currentTimeMillis ( ) ) ) + ( com . fujitsu . dc . common . IDENT_3 . IDENT_9 . IDENT_13 ) ; java . io . File IDENT_14 = new java . io . File ( IDENT_7 , IDENT_11 ) ; try { java . lang . Class < ? > clazz = com . fujitsu . dc . core . model . impl . IDENT_0 . IDENT_1 . IDENT_2 . class ; java . lang . reflect . Field IDENT_10 = clazz . METHOD_1 ( STRING_4 ) ; IDENT_10 . METHOD_2 ( true ) ; IDENT_10 . set ( IDENT_1 , new java . io . File ( com . fujitsu . dc . test . unit . core . model . impl . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_8 ) ) ; java . lang . reflect . Field version = clazz . METHOD_1 ( STRING_5 ) ; version . METHOD_2 ( true ) ; version . set ( IDENT_1 , com . fujitsu . dc . test . unit . core . model . impl . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_6 ) ; java . lang . reflect . Method method = clazz . METHOD_4 ( STRING_6 ) ; method . METHOD_2 ( true ) ; IDENT_14 . METHOD_5 ( ) ; file = METHOD_6 ( writer ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( STRING_7 ) ; } finally { try { writer . METHOD_7 ( ) ; } catch ( com . fujitsu . dc . common . IDENT_3 . IDENT_15 e ) { e . printStackTrace ( ) ; } if ( null != file ) { file . delete ( ) ; } if ( null != IDENT_14 ) { IDENT_14 . delete ( ) ; } if ( null != IDENT_7 ) { IDENT_7 . delete ( ) ; } } } METHOD_6 ( com . fujitsu . dc . common . IDENT_3 . IDENT_4 ) { java . io . File file = null ; try { java . lang . Class < ? > clazz = com . fujitsu . dc . common . IDENT_3 . IDENT_9 . class ; java . lang . reflect . Field IDENT_10 = clazz . METHOD_1 ( STRING_1 ) ; IDENT_10 . METHOD_2 ( true ) ; java . lang . String IDENT_16 = ( ( java . lang . String ) ( IDENT_10 . get ( writer ) ) ) ; clazz = writer . getClass ( ) ; java . lang . reflect . Field IDENT_17 = clazz . METHOD_1 ( STRING_8 ) ; IDENT_17 . METHOD_2 ( true ) ; java . lang . Long IDENT_18 = ( ( java . lang . Long ) ( IDENT_17 . get ( writer ) ) ) ; final java . lang . String IDENT_11 = ( java . lang . String . format ( IDENT_9 . IDENT_12 , com . fujitsu . dc . test . unit . core . model . impl . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_6 , IDENT_18 ) ) + ( com . fujitsu . dc . common . IDENT_3 . IDENT_9 . IDENT_13 ) ; file = new java . io . File ( IDENT_16 , IDENT_11 ) ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( STRING_3 ) ; } return file ; }
org . junit . Assert . assertFalse ( ( ( java . lang . Boolean ) ( method . invoke ( IDENT_1 ) ) ) ) 