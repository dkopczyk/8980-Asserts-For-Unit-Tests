METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . math . IDENT_2 IDENT_3 = IDENT_4 . add ( create ( 1 , 1 ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( com . IDENT_0 . IDENT_1 . math . IDENT_2 , com . IDENT_0 . IDENT_1 . math . IDENT_2 ) { boolean IDENT_5 = ( to . METHOD_2 ( ) ) < ( from . METHOD_2 ( ) ) ; boolean IDENT_6 = ( to . METHOD_2 ( ) ) > ( from . METHOD_2 ( ) ) ; boolean IDENT_7 = ( to . METHOD_3 ( ) ) < ( from . METHOD_3 ( ) ) ; boolean IDENT_8 = ( to . METHOD_3 ( ) ) > ( from . METHOD_3 ( ) ) ; if ( IDENT_7 && IDENT_5 ) return com . IDENT_0 . IDENT_1 . IDENT_9 . entities . IDENT_10 . IDENT_11 . IDENT_12 ; if ( IDENT_7 && IDENT_6 ) return com . IDENT_0 . IDENT_1 . IDENT_9 . entities . IDENT_10 . IDENT_11 . IDENT_13 ; if ( IDENT_8 && IDENT_5 ) return com . IDENT_0 . IDENT_1 . IDENT_9 . entities . IDENT_10 . IDENT_11 . IDENT_14 ; if ( IDENT_8 && IDENT_6 ) return com . IDENT_0 . IDENT_1 . IDENT_9 . entities . IDENT_10 . IDENT_11 . IDENT_15 ; if ( IDENT_7 ) return com . IDENT_0 . IDENT_1 . IDENT_9 . entities . IDENT_10 . IDENT_11 . IDENT_16 ; if ( IDENT_8 ) return com . IDENT_0 . IDENT_1 . IDENT_9 . entities . IDENT_10 . IDENT_11 . IDENT_17 ; if ( IDENT_5 ) return com . IDENT_0 . IDENT_1 . IDENT_9 . entities . IDENT_10 . IDENT_11 . IDENT_18 ; if ( IDENT_6 ) return com . IDENT_0 . IDENT_1 . IDENT_9 . entities . IDENT_10 . IDENT_11 . IDENT_19 ; return com . IDENT_0 . IDENT_1 . IDENT_9 . entities . IDENT_10 . IDENT_11 . IDENT_19 ; }
org . junit . Assert . assertEquals ( com . IDENT_0 . IDENT_1 . IDENT_9 . entities . IDENT_10 . IDENT_15 , METHOD_1 ( IDENT_4 , IDENT_3 ) ) 