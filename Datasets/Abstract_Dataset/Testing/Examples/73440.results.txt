METHOD_0 ( ) { try { com . IDENT_0 . IDENT_1 . IDENT_2 . entities . IDENT_3 . IDENT_4 unit = METHOD_1 ( IDENT_5 , com . IDENT_0 . IDENT_1 . math . IDENT_6 . create ( 2 , 2 ) , IDENT_7 . IDENT_8 ) ; com . IDENT_0 . IDENT_1 . IDENT_2 . entities . IDENT_9 . IDENT_10 IDENT_11 = METHOD_2 ( IDENT_5 , com . IDENT_0 . IDENT_1 . math . IDENT_6 . create ( 10 , 10 ) , IDENT_7 . IDENT_12 ) ; unit . METHOD_3 ( IDENT_11 ) ; org . junit . Assert . fail ( STRING_0 ) ; } catch ( java . lang . IllegalArgumentException IDENT_13 ) { "<AssertPlaceHolder>" ; } } METHOD_3 ( com . IDENT_0 . IDENT_1 . IDENT_2 . entities . IDENT_3 . Entity ) { if ( ! ( this . METHOD_4 ( ) ) ) throw new java . lang . IllegalStateException ( STRING_1 ) ; if ( ! ( IDENT_14 . METHOD_5 ( ) ) ) throw new java . lang . IllegalArgumentException ( STRING_2 ) ; if ( IDENT_15 . instance . METHOD_6 ( IDENT_14 , this ) ) { log ( ( STRING_3 + IDENT_14 ) ) ; com . IDENT_0 . IDENT_1 . math . IDENT_16 IDENT_17 = IDENT_14 . METHOD_7 ( METHOD_8 ( ) ) ; METHOD_9 ( IDENT_17 ) ; IDENT_15 . instance . METHOD_10 ( IDENT_14 , this ) ; } else { log ( ( STRING_4 + IDENT_14 ) ) ; com . IDENT_0 . IDENT_1 . math . IDENT_16 IDENT_17 = IDENT_14 . METHOD_11 ( METHOD_8 ( ) ) ; METHOD_9 ( IDENT_17 ) ; } }
org . junit . Assert . assertEquals ( STRING_2 , IDENT_13 . getMessage ( ) ) 