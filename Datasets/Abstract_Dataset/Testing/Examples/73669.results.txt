METHOD_0 ( ) { double a = this . random . METHOD_1 ( ) ; double b = this . random . METHOD_1 ( ) ; double c = this . random . METHOD_1 ( ) ; double d = this . random . METHOD_1 ( ) ; org . IDENT_0 . IDENT_1 . math . geometry . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = new org . IDENT_0 . IDENT_1 . math . geometry . IDENT_2 . IDENT_3 . METHOD_2 ( ) ; IDENT_5 . METHOD_3 ( a ) ; IDENT_5 . METHOD_4 ( b ) ; IDENT_5 . METHOD_5 ( c ) ; IDENT_5 . METHOD_6 ( d ) ; org . IDENT_0 . IDENT_1 . math . geometry . IDENT_2 . IDENT_3 . METHOD_2 IDENT_6 = new org . IDENT_0 . IDENT_1 . math . geometry . IDENT_2 . IDENT_3 . METHOD_2 ( b , c , d , a ) ; IDENT_5 . METHOD_0 ( ) ; "<AssertPlaceHolder>" ; } equals ( java . lang . Object ) { if ( ! ( object instanceof org . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 ) ) { return false ; } final byte [ ] IDENT_9 = ( ( org . IDENT_0 . IDENT_1 . IDENT_7 . IDENT_8 ) ( object ) ) . bytes ; if ( ( IDENT_9 . length ) != ( this . bytes . length ) ) { return false ; } for ( int i = 0 ; i < ( IDENT_9 . length ) ; ++ i ) { if ( ( IDENT_9 [ i ] ) != ( this . bytes [ i ] ) ) { return false ; } } return true ; }
org . junit . Assert . assertTrue ( IDENT_5 . equals ( IDENT_6 ) ) 