METHOD_0 ( ) { java . util . List < java . util . ArrayList < java . lang . String > > list = new java . util . ArrayList ( ) ; list . add ( new java . util . ArrayList ( java . util . Arrays . asList ( STRING_0 , STRING_1 , STRING_2 ) ) ) ; list . add ( new java . util . ArrayList ( java . util . Arrays . asList ( STRING_3 , STRING_4 ) ) ) ; list . add ( new java . util . ArrayList ( java . util . Arrays . asList ( STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 ) ) ) ; "<AssertPlaceHolder>" ; } collect ( java . util . stream . IDENT_0 ) { java . lang . String [ ] array = stream . METHOD_1 ( Collection :: stream ) . toArray ( java . lang . String [ ] :: new ) ; java . util . stream . IDENT_1 range = java . util . stream . IDENT_1 . range ( 0 , array . length ) ; java . util . List < java . lang . String > result = new java . util . ArrayList ( java . util . Arrays . asList ( new java . lang . String [ array . length ] ) ) ; range . METHOD_2 ( ) . METHOD_3 ( ( e ) -> result . set ( e , array [ e ] ) ) ; return result ; }
org . junit . Assert . assertEquals ( 10 , collect ( list . stream ( ) ) . size ( ) ) 