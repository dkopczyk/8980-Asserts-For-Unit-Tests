METHOD_0 ( ) { org . apache . shindig . common . uri . IDENT_0 uri = METHOD_1 ( ( ( ( org . apache . shindig . IDENT_1 . uri . IDENT_2 . IDENT_3 ) + STRING_0 ) + ( org . apache . shindig . IDENT_1 . uri . IDENT_2 . IDENT_4 ) ) , null ) ; org . apache . shindig . IDENT_1 . uri . IDENT_2 . IDENT_5 manager = METHOD_2 ( false , false ) ; manager . METHOD_3 ( true ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . apache . shindig . common . uri . IDENT_0 ) { org . apache . shindig . common . uri . IDENT_6 uri = new org . apache . shindig . common . uri . METHOD_5 ( IDENT_7 ) ; java . lang . String IDENT_8 = uri . METHOD_6 ( IDENT_9 . URL . getKey ( ) ) ; org . apache . shindig . common . uri . IDENT_0 IDENT_10 = null ; try { IDENT_10 = org . apache . shindig . common . uri . IDENT_0 . parse ( IDENT_8 ) ; } catch ( java . lang . Exception e ) { return IDENT_11 . IDENT_12 ; } java . lang . String container = uri . METHOD_6 ( IDENT_9 . IDENT_13 . getKey ( ) ) ; if ( container == null ) { container = org . apache . shindig . config . IDENT_14 . IDENT_15 ; } java . lang . String host = uri . METHOD_7 ( ) . toLowerCase ( ) ; java . lang . String IDENT_16 = IDENT_17 . METHOD_8 ( IDENT_10 ) . toLowerCase ( ) ; if ( ( IDENT_18 ) && ( ! ( METHOD_9 ( ) ) ) ) { if ( host . startsWith ( IDENT_16 ) ) { host = host . substring ( IDENT_16 . length ( ) ) ; java . lang . String IDENT_19 = METHOD_10 ( container , org . apache . shindig . IDENT_1 . uri . IDENT_20 . IDENT_21 ) ; if ( ! ( IDENT_19 . equalsIgnoreCase ( host ) ) ) { return IDENT_11 . IDENT_22 ; } } else { for ( java . lang . String IDENT_19 : IDENT_23 ) { if ( host . METHOD_11 ( IDENT_19 ) ) { return IDENT_11 . IDENT_22 ; } } } } java . lang . String version = uri . METHOD_6 ( IDENT_9 . IDENT_24 . getKey ( ) ) ; if ( ( ( IDENT_25 ) == null ) || ( version == null ) ) { return IDENT_11 . IDENT_26 ; } return IDENT_25 . validate ( IDENT_10 , container , version ) ; }
org . junit . Assert . assertEquals ( IDENT_11 . IDENT_26 , manager . METHOD_4 ( uri ) ) 