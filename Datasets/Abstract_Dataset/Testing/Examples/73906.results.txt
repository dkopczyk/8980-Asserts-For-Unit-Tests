METHOD_0 ( ) { final byte [ ] IDENT_0 = java . nio . file . IDENT_1 . METHOD_1 ( java . nio . file . IDENT_2 . get ( com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 ) ) ; final com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_8 . IDENT_9 IDENT_10 = new com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_8 . METHOD_2 ( 200 , STRING_0 , new java . lang . String ( IDENT_0 , java . nio . IDENT_11 . IDENT_12 . UTF_8 ) ) ; final java . util . Map < java . lang . String , java . lang . String > IDENT_13 = org . IDENT_14 . api . easymock . IDENT_15 . METHOD_3 ( java . util . Map . class ) ; expect ( IDENT_13 . put ( STRING_1 , com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_16 ) ) . METHOD_4 ( null ) ; expect ( IDENT_13 . put ( STRING_2 , com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_17 ) ) . METHOD_4 ( null ) ; final com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_18 IDENT_19 = org . IDENT_14 . api . easymock . IDENT_15 . METHOD_5 ( com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_18 . class , com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_20 , com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_21 ) ; org . IDENT_14 . api . easymock . IDENT_15 . METHOD_6 ( IDENT_19 , com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_21 ) . andReturn ( IDENT_13 ) ; org . IDENT_14 . api . easymock . IDENT_15 . METHOD_6 ( IDENT_19 , com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_20 , eq ( com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_22 ) , eq ( IDENT_13 ) ) . andReturn ( IDENT_10 ) ; org . IDENT_14 . api . easymock . IDENT_15 . METHOD_7 ( ) ; IDENT_19 . init ( IDENT_23 ) ; final boolean IDENT_24 = IDENT_19 . METHOD_8 ( com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_16 , com . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_17 ) ; "<AssertPlaceHolder>" ; org . IDENT_14 . api . easymock . IDENT_15 . METHOD_9 ( ) ; } METHOD_8 ( java . lang . String , java . lang . String ) { return false ; }
org . junit . Assert . assertTrue ( IDENT_24 ) 