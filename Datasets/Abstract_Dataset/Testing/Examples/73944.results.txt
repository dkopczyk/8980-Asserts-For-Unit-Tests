METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . Integer > IDENT_0 = com . google . common . collect . IDENT_1 . METHOD_1 ( ) ; IDENT_0 . put ( Constants . IDENT_2 , INT_0 ) ; IDENT_0 . put ( Constants . IDENT_3 , 100 ) ; IDENT_0 . put ( Constants . IDENT_4 , 10 ) ; action . METHOD_2 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { int count = 0 ; if ( ! ( IDENT_5 . isEmpty ( ) ) ) { for ( java . lang . String IDENT_6 : IDENT_5 . METHOD_4 ( ) ) { int IDENT_7 = IDENT_5 . get ( IDENT_6 ) ; count = ( IDENT_7 > count ) ? IDENT_7 : count ; } } return count ; }
org . junit . Assert . assertEquals ( 100 , action . METHOD_3 ( ) ) 