METHOD_0 ( ) { final uk . gov . gchq . gaffer . data . element . IDENT_0 . IDENT_1 IDENT_2 = new uk . gov . gchq . gaffer . data . element . IDENT_0 . METHOD_1 ( ) ; final int result = IDENT_2 . compare ( "1" , "1" ) ; "<AssertPlaceHolder>" ; } compare ( java . lang . Object , java . lang . Object ) { if ( ( null == IDENT_3 ) && ( null == IDENT_4 ) ) { throw new java . lang . IllegalArgumentException ( STRING_0 ) ; } if ( null == IDENT_3 ) { return - 1 ; } else if ( null == IDENT_4 ) { return 1 ; } if ( ( IDENT_3 instanceof java . lang . Object [ ] ) && ( IDENT_4 instanceof java . lang . Object [ ] ) ) { java . lang . Object [ ] IDENT_5 = ( ( java . lang . Object [ ] ) ( IDENT_3 ) ) ; java . lang . Object [ ] IDENT_6 = ( ( java . lang . Object [ ] ) ( IDENT_4 ) ) ; if ( ( IDENT_5 . length ) == ( IDENT_6 . length ) ) { return METHOD_2 ( IDENT_5 , IDENT_6 ) ; } if ( ( IDENT_5 . length ) < ( IDENT_6 . length ) ) { return METHOD_3 ( IDENT_5 , IDENT_6 ) ; } return - ( METHOD_3 ( IDENT_6 , IDENT_5 ) ) ; } uk . gov . gchq . gaffer . IDENT_7 . utils . IDENT_8 . LOGGER . error ( STRING_1 , IDENT_3 . getClass ( ) , IDENT_4 . getClass ( ) ) ; return Integer . MAX_VALUE ; }
org . junit . Assert . assertEquals ( 0 , result ) 