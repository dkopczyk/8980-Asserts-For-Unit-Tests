METHOD_0 ( ) { final uk . gov . gchq . gaffer . data . element . Entity IDENT_0 = new uk . gov . gchq . gaffer . data . element . Entity . Builder ( ) . group ( IDENT_1 . IDENT_2 ) . METHOD_1 ( STRING_0 ) . property ( IDENT_3 . IDENT_4 , uk . gov . gchq . gaffer . IDENT_5 . IDENT_6 . METHOD_2 ( STRING_1 ) ) . property ( IDENT_3 . IDENT_7 , INT_0 ) . build ( ) ; final uk . gov . gchq . gaffer . data . element . Entity IDENT_8 = IDENT_0 . METHOD_3 ( ) ; uk . gov . gchq . gaffer . data . element . IDENT_9 . IDENT_10 IDENT_11 = new uk . gov . gchq . gaffer . data . element . IDENT_9 . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } test ( uk . gov . gchq . gaffer . data . element . Element , uk . gov . gchq . gaffer . data . element . Element ) { if ( element == IDENT_12 ) { return true ; } if ( ( null == element ) || ( null == IDENT_12 ) ) { return false ; } if ( ! ( element . getClass ( ) . equals ( IDENT_12 . getClass ( ) ) ) ) { return false ; } if ( ! ( element . METHOD_5 ( ) . equals ( IDENT_12 . METHOD_5 ( ) ) ) ) { return false ; } if ( element instanceof uk . gov . gchq . gaffer . data . element . Entity ) { if ( ! ( ( ( uk . gov . gchq . gaffer . data . element . Entity ) ( element ) ) . METHOD_6 ( ) . equals ( ( ( uk . gov . gchq . gaffer . data . element . Entity ) ( IDENT_12 ) ) . METHOD_6 ( ) ) ) ) { return false ; } } else { if ( ! ( ( ( uk . gov . gchq . gaffer . data . element . IDENT_13 ) ( element ) ) . METHOD_7 ( ) . equals ( ( ( uk . gov . gchq . gaffer . data . element . IDENT_13 ) ( IDENT_12 ) ) . METHOD_7 ( ) ) ) ) { return false ; } if ( ! ( ( ( uk . gov . gchq . gaffer . data . element . IDENT_13 ) ( element ) ) . METHOD_8 ( ) . equals ( ( ( uk . gov . gchq . gaffer . data . element . IDENT_13 ) ( IDENT_12 ) ) . METHOD_8 ( ) ) ) ) { return false ; } if ( ! ( ( ( uk . gov . gchq . gaffer . data . element . IDENT_13 ) ( element ) ) . METHOD_9 ( ) . equals ( ( ( uk . gov . gchq . gaffer . data . element . IDENT_13 ) ( IDENT_12 ) ) . METHOD_9 ( ) ) ) ) { return false ; } } for ( final java . lang . String key : IDENT_14 ) { if ( ! ( java . util . IDENT_15 . equals ( element . getProperty ( key ) , IDENT_12 . getProperty ( key ) ) ) ) { return false ; } } return true ; }
org . junit . Assert . assertTrue ( IDENT_11 . test ( IDENT_0 , IDENT_8 ) ) 