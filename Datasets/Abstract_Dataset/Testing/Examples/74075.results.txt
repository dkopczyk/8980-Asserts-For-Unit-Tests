METHOD_0 ( ) { final uk . gov . gchq . gaffer . data . element . function . IDENT_0 function = new uk . gov . gchq . gaffer . data . element . function . METHOD_1 ( ) ; final java . lang . String group = STRING_0 ; final uk . gov . gchq . gaffer . data . element . IDENT_1 IDENT_2 = new uk . gov . gchq . gaffer . data . element . IDENT_1 . Builder ( ) . source ( STRING_1 ) . METHOD_2 ( STRING_2 ) . METHOD_3 ( true ) . group ( group ) . build ( ) ; final java . lang . String result = function . apply ( IDENT_2 ) ; "<AssertPlaceHolder>" ; } apply ( java . lang . Object ) { if ( null == value ) { return null ; } if ( value instanceof java . lang . IDENT_3 ) { return ( ( java . lang . IDENT_3 ) ( value ) ) . METHOD_4 ( ) ; } if ( value instanceof java . lang . String ) { return java . lang . Integer . valueOf ( ( ( java . lang . String ) ( value ) ) ) ; } throw new java . lang . IllegalArgumentException ( ( STRING_3 + value ) ) ; }
org . junit . Assert . assertEquals ( group , result ) 