METHOD_0 ( ) { org . apache . beam . runners . core . metrics . IDENT_0 IDENT_1 = new org . apache . beam . runners . core . metrics . METHOD_1 ( STRING_0 ) ; org . apache . beam . runners . core . metrics . IDENT_2 IDENT_3 = IDENT_1 . METHOD_2 ( org . apache . beam . sdk . metrics . IDENT_4 . METHOD_3 ( STRING_1 , STRING_2 ) ) ; org . apache . beam . runners . core . metrics . IDENT_2 IDENT_5 = IDENT_1 . METHOD_2 ( org . apache . beam . sdk . metrics . IDENT_4 . METHOD_3 ( STRING_1 , STRING_3 ) ) ; IDENT_3 . METHOD_4 ( INT_0 ) ; IDENT_5 . METHOD_4 ( INT_1 ) ; IDENT_3 . METHOD_4 ( INT_2 ) ; org . apache . beam . runners . core . metrics . IDENT_6 IDENT_7 = new org . apache . beam . runners . core . metrics . METHOD_5 ( ) ; IDENT_7 . METHOD_6 ( STRING_1 , STRING_2 ) ; IDENT_7 . METHOD_7 ( 5 ) ; IDENT_7 . METHOD_8 ( STRING_0 ) ; IDENT_7 . build ( ) ; org . apache . beam . runners . core . metrics . METHOD_5 IDENT_8 = new org . apache . beam . runners . core . metrics . METHOD_5 ( ) ; IDENT_8 . METHOD_6 ( STRING_1 , STRING_3 ) ; IDENT_8 . METHOD_7 ( 4 ) ; IDENT_8 . METHOD_8 ( STRING_0 ) ; IDENT_8 . build ( ) ; java . util . ArrayList < org . apache . beam . model . pipeline . v1 . IDENT_9 . IDENT_10 > IDENT_11 = new java . util . ArrayList < org . apache . beam . model . pipeline . v1 . IDENT_9 . IDENT_10 > ( ) ; for ( org . apache . beam . model . pipeline . v1 . IDENT_9 . IDENT_10 IDENT_12 : IDENT_1 . METHOD_9 ( ) ) { IDENT_11 . add ( org . apache . beam . runners . core . metrics . METHOD_5 . METHOD_10 ( IDENT_12 ) ) ; } "<AssertPlaceHolder>" ; } METHOD_11 ( org . apache . beam . sdk . IDENT_13 . IDENT_14 , T [ ] ) { final org . apache . beam . sdk . testing . IDENT_15 . IDENT_16 < T [ ] > IDENT_17 = new org . apache . beam . sdk . testing . IDENT_15 . METHOD_12 ( IDENT_18 , IDENT_19 ) ; return org . apache . beam . sdk . testing . IDENT_15 . METHOD_13 ( ( ) -> org . hamcrest . Matchers . METHOD_11 ( IDENT_17 . get ( ) ) ) ; }
org . junit . Assert . assertThat ( IDENT_11 , METHOD_11 ( IDENT_7 . build ( ) , IDENT_8 . build ( ) ) ) 