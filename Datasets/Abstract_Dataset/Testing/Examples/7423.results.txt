METHOD_0 ( ) { org . apache . beam . runners . core . metrics . IDENT_0 IDENT_1 = new org . apache . beam . runners . core . metrics . METHOD_1 ( STRING_0 ) ; java . util . HashMap < java . lang . String , java . lang . String > IDENT_2 = new java . util . HashMap < java . lang . String , java . lang . String > ( ) ; IDENT_2 . put ( IDENT_3 . IDENT_4 . IDENT_5 , STRING_1 ) ; org . apache . beam . sdk . metrics . IDENT_6 name = org . apache . beam . runners . core . metrics . IDENT_7 . METHOD_2 ( IDENT_3 . IDENT_8 . IDENT_9 , IDENT_2 ) ; org . apache . beam . runners . core . metrics . IDENT_10 IDENT_11 = IDENT_1 . METHOD_3 ( name ) ; IDENT_11 . METHOD_4 ( INT_0 ) ; org . apache . beam . runners . core . metrics . IDENT_12 IDENT_13 = new org . apache . beam . runners . core . metrics . METHOD_5 ( ) ; IDENT_13 . METHOD_6 ( IDENT_3 . IDENT_8 . IDENT_9 ) ; IDENT_13 . METHOD_7 ( STRING_1 ) ; IDENT_13 . METHOD_8 ( 2 ) ; IDENT_13 . build ( ) ; java . util . ArrayList < org . apache . beam . model . pipeline . v1 . IDENT_14 . IDENT_15 > IDENT_16 = new java . util . ArrayList < org . apache . beam . model . pipeline . v1 . IDENT_14 . IDENT_15 > ( ) ; for ( org . apache . beam . model . pipeline . v1 . IDENT_14 . IDENT_15 IDENT_17 : IDENT_1 . METHOD_9 ( ) ) { IDENT_16 . add ( org . apache . beam . runners . core . metrics . METHOD_5 . METHOD_10 ( IDENT_17 ) ) ; } "<AssertPlaceHolder>" ; } METHOD_11 ( T extends java . io . IDENT_18 [ ] ) { return org . apache . beam . sdk . testing . IDENT_19 . METHOD_12 ( ( ) -> org . hamcrest . Matchers . METHOD_11 ( IDENT_20 ) ) ; }
org . junit . Assert . assertThat ( IDENT_16 , METHOD_11 ( IDENT_13 . build ( ) ) ) 