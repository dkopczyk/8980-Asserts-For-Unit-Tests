METHOD_0 ( ) { final java . lang . Object [ ] input = new java . lang . Object [ ] { 1 , "2" , new uk . gov . gchq . gaffer . operation . data . METHOD_1 ( STRING_0 ) , new uk . gov . gchq . gaffer . data . element . Entity ( STRING_1 , STRING_2 ) , new uk . gov . gchq . gaffer . operation . data . METHOD_2 ( STRING_3 , 6 ) , new uk . gov . gchq . gaffer . data . element . METHOD_3 ( STRING_1 , INT_0 , 8 , true ) , null } ; final java . lang . IDENT_0 < ? extends uk . gov . gchq . gaffer . data . element . id . IDENT_1 > output = uk . gov . gchq . gaffer . operation . util . IDENT_2 . METHOD_4 ( input ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . Object [ ] ) { if ( null == input ) { return null ; } return java . util . Arrays . stream ( input ) . map ( new uk . gov . gchq . gaffer . operation . function . METHOD_5 ( ) ) . collect ( java . util . stream . IDENT_3 . toList ( ) ) ; }
org . junit . Assert . assertEquals ( com . google . common . collect . Lists . newArrayList ( new uk . gov . gchq . gaffer . operation . data . METHOD_1 ( 1 ) , new uk . gov . gchq . gaffer . operation . data . METHOD_1 ( "2" ) , new uk . gov . gchq . gaffer . operation . data . METHOD_1 ( STRING_0 ) , new uk . gov . gchq . gaffer . data . element . Entity ( STRING_1 , STRING_2 ) , new uk . gov . gchq . gaffer . operation . data . METHOD_2 ( STRING_3 , 6 ) , new uk . gov . gchq . gaffer . data . element . METHOD_3 ( STRING_1 , INT_0 , 8 , true ) , null ) , com . google . common . collect . Lists . newArrayList ( output ) ) 