METHOD_0 ( ) { final java . lang . Object input = java . util . Arrays . asList ( new uk . gov . gchq . gaffer . operation . data . METHOD_1 ( "1" ) , new uk . gov . gchq . gaffer . operation . data . METHOD_1 ( "2" ) ) ; final uk . gov . gchq . gaffer . operation . util . IDENT_0 IDENT_1 = mock ( uk . gov . gchq . gaffer . operation . util . IDENT_0 . class ) ; final java . util . function . IDENT_2 < java . lang . Object > IDENT_3 = mock ( java . util . function . IDENT_2 . class ) ; final uk . gov . gchq . gaffer . operation . impl . IDENT_4 IDENT_5 = null ; final uk . gov . gchq . gaffer . operation . impl . get . IDENT_6 IDENT_7 = null ; final uk . gov . gchq . gaffer . operation . impl . IDENT_8 filter = new uk . gov . gchq . gaffer . operation . impl . IDENT_8 . Builder < > ( ) . input ( input ) . METHOD_2 ( METHOD_2 ) . METHOD_3 ( METHOD_3 ) . METHOD_4 ( METHOD_4 ) . build ( ) ; METHOD_5 ( METHOD_2 . METHOD_6 ( ) ) . METHOD_7 ( IDENT_3 ) ; METHOD_5 ( IDENT_3 . test ( input ) ) . METHOD_7 ( true ) ; final uk . gov . gchq . gaffer . store . operation . handler . IDENT_9 handler = new uk . gov . gchq . gaffer . store . operation . handler . METHOD_8 ( ) ; final java . lang . Object result = handler . METHOD_9 ( filter , context , store ) ; "<AssertPlaceHolder>" ; verify ( IDENT_3 ) . test ( input ) ; verify ( store , METHOD_10 ( ) ) . execute ( METHOD_3 , context ) ; verify ( store , METHOD_10 ( ) ) . execute ( METHOD_4 , context ) ; } METHOD_9 ( uk . gov . gchq . gaffer . operation . impl . IDENT_10 , uk . gov . gchq . gaffer . store . Context , uk . gov . gchq . gaffer . store . IDENT_11 ) { if ( null == ( IDENT_12 . METHOD_11 ( ) ) ) { throw new uk . gov . gchq . gaffer . operation . METHOD_12 ( STRING_0 ) ; } if ( null == ( IDENT_12 . METHOD_13 ( ) ) ) { throw new uk . gov . gchq . gaffer . operation . METHOD_12 ( STRING_1 ) ; } final java . util . List < IDENT_13 > results = new java . util . ArrayList ( ) ; for ( final IDENT_14 input : IDENT_12 . METHOD_13 ( ) ) { final uk . gov . gchq . gaffer . operation . Operation IDENT_15 = IDENT_12 . METHOD_11 ( ) . METHOD_14 ( ) ; uk . gov . gchq . gaffer . store . operation . handler . util . IDENT_16 . METHOD_15 ( IDENT_15 , input ) ; results . add ( METHOD_16 ( IDENT_15 , context , store ) ) ; } return results ; }
org . junit . Assert . assertEquals ( result , input ) 