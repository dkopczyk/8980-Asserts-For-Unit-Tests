METHOD_0 ( ) { final java . util . List < uk . gov . gchq . gaffer . operation . data . IDENT_0 > input = java . util . Collections . singletonList ( mock ( uk . gov . gchq . gaffer . operation . data . IDENT_0 . class ) ) ; final boolean condition = true ; final int IDENT_1 = 3 ; final uk . gov . gchq . gaffer . operation . impl . get . IDENT_2 delegate = mock ( uk . gov . gchq . gaffer . operation . impl . get . IDENT_2 . class ) ; final uk . gov . gchq . gaffer . operation . impl . get . IDENT_2 IDENT_3 = mock ( uk . gov . gchq . gaffer . operation . impl . get . IDENT_2 . class ) ; final uk . gov . gchq . gaffer . operation . impl . get . IDENT_2 IDENT_4 = mock ( uk . gov . gchq . gaffer . operation . impl . get . IDENT_2 . class ) ; final uk . gov . gchq . gaffer . operation . impl . get . IDENT_2 IDENT_5 = mock ( uk . gov . gchq . gaffer . operation . impl . get . IDENT_2 . class ) ; final uk . gov . gchq . gaffer . store . Context context = mock ( uk . gov . gchq . gaffer . store . Context . class ) ; final uk . gov . gchq . gaffer . store . IDENT_6 store = mock ( uk . gov . gchq . gaffer . store . IDENT_6 . class ) ; METHOD_1 ( delegate . METHOD_2 ( ) ) . METHOD_3 ( IDENT_3 , IDENT_4 , IDENT_5 ) ; final uk . gov . gchq . gaffer . IDENT_7 . IDENT_8 . IDENT_9 IDENT_10 = mock ( uk . gov . gchq . gaffer . IDENT_7 . IDENT_8 . IDENT_9 . class ) ; final uk . gov . gchq . gaffer . IDENT_7 . IDENT_8 . IDENT_9 IDENT_11 = mock ( uk . gov . gchq . gaffer . IDENT_7 . IDENT_8 . IDENT_9 . class ) ; final uk . gov . gchq . gaffer . IDENT_7 . IDENT_8 . IDENT_9 IDENT_12 = mock ( uk . gov . gchq . gaffer . IDENT_7 . IDENT_8 . IDENT_9 . class ) ; METHOD_1 ( store . execute ( IDENT_3 , context ) ) . METHOD_3 ( IDENT_10 ) ; METHOD_1 ( store . execute ( IDENT_4 , context ) ) . METHOD_3 ( IDENT_11 ) ; METHOD_1 ( store . execute ( IDENT_5 , context ) ) . METHOD_3 ( IDENT_12 ) ; final uk . gov . gchq . gaffer . operation . impl . IDENT_13 operation = new uk . gov . gchq . gaffer . operation . impl . IDENT_13 . Builder < > ( ) . input ( input ) . condition ( condition ) . METHOD_4 ( METHOD_4 ) . operation ( delegate ) . build ( ) ; final uk . gov . gchq . gaffer . store . operation . handler . IDENT_14 handler = new uk . gov . gchq . gaffer . store . operation . handler . METHOD_5 ( ) ; final java . lang . Object result = handler . METHOD_6 ( operation , context , store ) ; verify ( IDENT_3 ) . METHOD_7 ( input ) ; verify ( IDENT_4 ) . METHOD_7 ( IDENT_10 ) ; verify ( IDENT_5 ) . METHOD_7 ( IDENT_11 ) ; verify ( store ) . execute ( ( ( uk . gov . gchq . gaffer . operation . io . IDENT_15 ) ( IDENT_3 ) ) , context ) ; verify ( store ) . execute ( ( ( uk . gov . gchq . gaffer . operation . io . IDENT_15 ) ( IDENT_4 ) ) , context ) ; verify ( store ) . execute ( ( ( uk . gov . gchq . gaffer . operation . io . IDENT_15 ) ( IDENT_5 ) ) , context ) ; "<AssertPlaceHolder>" ; } execute ( uk . gov . gchq . gaffer . operation . IDENT_16 , uk . gov . gchq . gaffer . store . Context ) { return uk . gov . gchq . gaffer . integration . store . IDENT_17 . IDENT_18 . execute ( IDENT_19 , context ) ; }
org . junit . Assert . assertSame ( IDENT_12 , result ) 