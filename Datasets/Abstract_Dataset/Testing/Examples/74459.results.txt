METHOD_0 ( ) { final uk . gov . gchq . gaffer . store . schema . IDENT_0 validator = new uk . gov . gchq . gaffer . store . schema . METHOD_1 ( ) ; final java . util . function . IDENT_1 < java . lang . Integer > IDENT_2 = mock ( java . util . function . IDENT_1 . class ) ; final uk . gov . gchq . gaffer . store . schema . Schema schema = new uk . gov . gchq . gaffer . store . schema . Schema . Builder ( ) . entity ( IDENT_3 . IDENT_4 , new uk . gov . gchq . gaffer . store . schema . IDENT_5 . Builder ( ) . METHOD_2 ( STRING_0 ) . property ( IDENT_6 . IDENT_7 , STRING_1 ) . property ( IDENT_6 . IDENT_8 , STRING_1 ) . METHOD_3 ( new uk . gov . gchq . gaffer . data . element . function . IDENT_9 . Builder ( ) . select ( IDENT_6 . IDENT_7 , IDENT_6 . IDENT_8 ) . execute ( IDENT_2 ) . build ( ) ) . build ( ) ) . METHOD_4 ( IDENT_6 . IDENT_8 ) . type ( STRING_0 , new uk . gov . gchq . gaffer . store . schema . IDENT_10 . Builder ( ) . clazz ( java . lang . String . class ) . build ( ) ) . type ( STRING_1 , new uk . gov . gchq . gaffer . store . schema . IDENT_10 . Builder ( ) . clazz ( java . lang . String . class ) . METHOD_5 ( IDENT_2 ) . build ( ) ) . build ( ) ; final uk . gov . gchq . IDENT_11 . IDENT_12 result = validator . validate ( schema . METHOD_6 ( IDENT_3 . IDENT_4 ) ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( java . lang . String ) { return ( ( uk . gov . gchq . gaffer . store . schema . IDENT_13 ) ( super . METHOD_6 ( group ) ) ) ; }
org . junit . Assert . assertTrue ( result . isValid ( ) ) 