METHOD_0 ( ) { final uk . gov . gchq . gaffer . store . schema . IDENT_0 validator = new uk . gov . gchq . gaffer . store . schema . METHOD_1 ( ) ; final uk . gov . gchq . gaffer . data . IDENT_1 . view . IDENT_2 view = new uk . gov . gchq . gaffer . data . IDENT_1 . view . IDENT_2 . Builder ( ) . build ( ) ; final uk . gov . gchq . gaffer . store . schema . Schema schema = new uk . gov . gchq . gaffer . store . schema . Schema ( ) ; final uk . gov . gchq . IDENT_3 . IDENT_4 result = validator . validate ( view , schema , uk . gov . gchq . gaffer . store . schema . IDENT_5 . IDENT_6 ) ; "<AssertPlaceHolder>" ; } validate ( uk . gov . gchq . gaffer . data . IDENT_1 . view . IDENT_2 , uk . gov . gchq . gaffer . store . schema . Schema , java . util . Set ) { final boolean IDENT_7 = IDENT_8 . contains ( IDENT_9 . IDENT_10 ) ; final uk . gov . gchq . IDENT_3 . IDENT_4 result = new uk . gov . gchq . IDENT_3 . METHOD_2 ( ) ; if ( null != view ) { final uk . gov . gchq . IDENT_3 . METHOD_2 IDENT_11 = new uk . gov . gchq . IDENT_3 . METHOD_2 ( ) ; METHOD_3 ( view , schema , IDENT_8 , IDENT_7 , result ) ; if ( ! ( IDENT_11 . isValid ( ) ) ) { result . add ( IDENT_11 ) ; final uk . gov . gchq . IDENT_3 . METHOD_2 IDENT_12 = new uk . gov . gchq . IDENT_3 . METHOD_2 ( ) ; METHOD_4 ( view , schema , IDENT_8 , IDENT_7 , result ) ; if ( ! ( IDENT_12 . isValid ( ) ) ) { result . add ( IDENT_12 ) ; } } } return result ; }
org . junit . Assert . assertTrue ( result . isValid ( ) ) 