METHOD_0 ( ) { final uk . gov . gchq . gaffer . store . schema . IDENT_0 validator = new uk . gov . gchq . gaffer . store . schema . METHOD_1 ( ) ; final uk . gov . gchq . gaffer . data . IDENT_1 . view . IDENT_2 view = new uk . gov . gchq . gaffer . data . IDENT_1 . view . IDENT_2 . Builder ( ) . METHOD_2 ( IDENT_3 . IDENT_4 , new uk . gov . gchq . gaffer . data . IDENT_1 . view . IDENT_5 . Builder ( ) . METHOD_3 ( IDENT_6 . IDENT_7 , java . lang . String . class ) . METHOD_4 ( new uk . gov . gchq . gaffer . data . element . function . IDENT_8 . Builder ( ) . select ( IDENT_6 . IDENT_9 , IDENT_6 . IDENT_10 ) . execute ( new uk . gov . gchq . gaffer . function . METHOD_5 ( ) ) . project ( IDENT_6 . IDENT_7 ) . build ( ) ) . build ( ) ) . build ( ) ; final uk . gov . gchq . gaffer . store . schema . Schema schema = new uk . gov . gchq . gaffer . store . schema . Schema . Builder ( ) . METHOD_2 ( IDENT_3 . IDENT_4 , new uk . gov . gchq . gaffer . store . schema . IDENT_11 . Builder ( ) . property ( IDENT_6 . IDENT_9 , STRING_0 ) . build ( ) ) . build ( ) ; final uk . gov . gchq . IDENT_12 . IDENT_13 result = validator . validate ( view , schema , uk . gov . gchq . gaffer . store . schema . IDENT_14 . IDENT_15 ) ; "<AssertPlaceHolder>" ; } validate ( uk . gov . gchq . gaffer . data . IDENT_1 . view . IDENT_2 , uk . gov . gchq . gaffer . store . schema . Schema , java . util . Set ) { final boolean IDENT_16 = IDENT_17 . contains ( IDENT_18 . IDENT_19 ) ; final uk . gov . gchq . IDENT_12 . IDENT_13 result = new uk . gov . gchq . IDENT_12 . METHOD_6 ( ) ; if ( null != view ) { final uk . gov . gchq . IDENT_12 . METHOD_6 IDENT_20 = new uk . gov . gchq . IDENT_12 . METHOD_6 ( ) ; METHOD_7 ( view , schema , IDENT_17 , IDENT_16 , result ) ; if ( ! ( IDENT_20 . isValid ( ) ) ) { result . add ( IDENT_20 ) ; final uk . gov . gchq . IDENT_12 . METHOD_6 IDENT_21 = new uk . gov . gchq . IDENT_12 . METHOD_6 ( ) ; METHOD_8 ( view , schema , IDENT_17 , IDENT_16 , result ) ; if ( ! ( IDENT_21 . isValid ( ) ) ) { result . add ( IDENT_21 ) ; } } } return result ; }
org . junit . Assert . assertTrue ( result . isValid ( ) ) 