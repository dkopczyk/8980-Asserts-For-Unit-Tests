METHOD_0 ( ) { METHOD_1 ( ) ; uk . gov . gchq . gaffer . cache . impl . IDENT_0 IDENT_1 = new uk . gov . gchq . gaffer . cache . impl . METHOD_2 ( ) ; IDENT_1 . METHOD_3 ( IDENT_2 ) ; IDENT_1 . METHOD_4 ( uk . gov . gchq . gaffer . cache . impl . IDENT_3 . IDENT_4 ) . put ( STRING_0 , 2 ) ; org . junit . IDENT_5 . METHOD_5 ( STRING_1 , ( 1 == ( uk . gov . gchq . gaffer . cache . impl . IDENT_3 . service . METHOD_4 ( uk . gov . gchq . gaffer . cache . impl . IDENT_3 . IDENT_4 ) . size ( ) ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String ) { org . apache . commons . IDENT_6 . engine . control . IDENT_7 cache = manager . METHOD_4 ( IDENT_8 ) ; try { return new uk . gov . gchq . gaffer . cache . impl . METHOD_6 ( cache ) ; } catch ( final org . apache . commons . IDENT_6 . IDENT_9 . exception . IDENT_10 e ) { throw new java . lang . IllegalArgumentException ( STRING_2 , e ) ; } }
org . junit . Assert . assertEquals ( 2 , uk . gov . gchq . gaffer . cache . impl . IDENT_3 . service . METHOD_4 ( uk . gov . gchq . gaffer . cache . impl . IDENT_3 . IDENT_4 ) . get ( STRING_0 ) ) 