METHOD_0 ( ) { com . google . api . services . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 IDENT_6 = mock ( IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . class ) ; when ( IDENT_7 . get ( eq ( org . apache . beam . runners . IDENT_0 . IDENT_8 . IDENT_9 ) , eq ( org . apache . beam . runners . IDENT_0 . IDENT_8 . IDENT_10 ) , eq ( org . apache . beam . runners . IDENT_0 . IDENT_8 . IDENT_11 ) ) ) . thenReturn ( IDENT_6 ) ; when ( IDENT_6 . execute ( ) ) . METHOD_1 ( java . io . IOException . class ) ; org . apache . beam . runners . IDENT_0 . IDENT_12 job = new org . apache . beam . runners . IDENT_0 . METHOD_2 ( org . apache . beam . runners . IDENT_0 . IDENT_13 . create ( options ) , org . apache . beam . runners . IDENT_0 . IDENT_8 . IDENT_11 , options , org . apache . beam . IDENT_14 . IDENT_15 . IDENT_16 . com . google . common . collect . ImmutableMap . of ( ) ) ; long IDENT_17 = IDENT_18 . METHOD_3 ( ) ; org . apache . beam . sdk . IDENT_19 . IDENT_20 state = job . METHOD_4 ( org . joda . time . IDENT_21 . METHOD_5 ( 5 ) , null , IDENT_18 , IDENT_18 ) ; "<AssertPlaceHolder>" ; long IDENT_22 = TimeUnit . IDENT_23 . METHOD_6 ( ( ( IDENT_18 . METHOD_3 ( ) ) - IDENT_17 ) ) ; METHOD_7 ( METHOD_2 . IDENT_24 , METHOD_2 . IDENT_25 , IDENT_22 ) ; } METHOD_4 ( org . joda . time . IDENT_21 , org . apache . beam . runners . IDENT_0 . util . IDENT_26 , com . google . api . client . util . IDENT_27 , com . google . api . client . util . IDENT_28 ) { return METHOD_4 ( IDENT_29 , IDENT_30 , IDENT_31 , IDENT_32 , new org . apache . beam . runners . IDENT_0 . util . METHOD_8 ( IDENT_33 ) ) ; }
org . junit . Assert . assertEquals ( null , state ) 