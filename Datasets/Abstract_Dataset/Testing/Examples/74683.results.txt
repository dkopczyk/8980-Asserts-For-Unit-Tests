METHOD_0 ( ) { final uk . gov . gchq . gaffer . IDENT_0 . key . core . impl . IDENT_1 . IDENT_2 filter = new uk . gov . gchq . gaffer . IDENT_0 . key . core . impl . IDENT_1 . METHOD_1 ( ) ; final java . util . Map < java . lang . String , java . lang . String > options = new java . util . HashMap ( ) ; options . put ( IDENT_3 . IDENT_4 , STRING_0 ) ; options . put ( IDENT_3 . IDENT_5 , STRING_0 ) ; try { filter . METHOD_2 ( options ) ; org . junit . Assert . fail ( STRING_1 ) ; } catch ( final java . lang . IllegalArgumentException e ) { "<AssertPlaceHolder>" ; } } getMessage ( ) { return ( ( ( ( super . getMessage ( ) ) + STRING_2 ) + ( this . IDENT_6 ) ) + STRING_3 ) + ( super . METHOD_3 ( ) ) ; }
org . junit . Assert . assertNotNull ( e . getMessage ( ) ) 