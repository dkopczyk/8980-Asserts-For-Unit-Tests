METHOD_0 ( ) { final uk . gov . gchq . gaffer . store . Context context = mock ( uk . gov . gchq . gaffer . store . Context . class ) ; final uk . gov . gchq . gaffer . user . User user = mock ( uk . gov . gchq . gaffer . user . User . class ) ; final uk . gov . gchq . gaffer . IDENT_0 . IDENT_1 store = mock ( uk . gov . gchq . gaffer . IDENT_0 . IDENT_1 . class ) ; final uk . gov . gchq . gaffer . IDENT_0 . IDENT_2 . IDENT_3 < uk . gov . gchq . gaffer . operation . impl . get . IDENT_4 > IDENT_5 = mock ( uk . gov . gchq . gaffer . IDENT_0 . IDENT_2 . IDENT_3 . class ) ; final uk . gov . gchq . gaffer . IDENT_0 . operation . handler . IDENT_6 handler = new uk . gov . gchq . gaffer . IDENT_0 . operation . handler . METHOD_1 ( ) ; final uk . gov . gchq . gaffer . operation . impl . get . IDENT_4 IDENT_7 = new uk . gov . gchq . gaffer . operation . impl . get . METHOD_2 ( ) ; METHOD_3 ( context . METHOD_4 ( ) ) . METHOD_5 ( user ) ; METHOD_3 ( store . METHOD_6 ( IDENT_7 , user , null , false , uk . gov . gchq . gaffer . IDENT_0 . IDENT_8 . processor . IDENT_9 . class ) ) . METHOD_5 ( IDENT_5 ) ; final uk . gov . gchq . gaffer . IDENT_0 . IDENT_2 . IDENT_3 < uk . gov . gchq . gaffer . operation . impl . get . METHOD_2 > result = ( ( uk . gov . gchq . gaffer . IDENT_0 . IDENT_2 . IDENT_3 < uk . gov . gchq . gaffer . operation . impl . get . METHOD_2 > ) ( handler . METHOD_7 ( IDENT_7 , context , store ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( uk . gov . gchq . gaffer . operation . impl . IDENT_10 , uk . gov . gchq . gaffer . store . Context , uk . gov . gchq . gaffer . store . IDENT_11 ) { if ( null == ( IDENT_12 . METHOD_8 ( ) ) ) { throw new uk . gov . gchq . gaffer . operation . METHOD_9 ( STRING_0 ) ; } if ( null == ( IDENT_12 . METHOD_10 ( ) ) ) { throw new uk . gov . gchq . gaffer . operation . METHOD_9 ( STRING_1 ) ; } final java . util . List < IDENT_13 > results = new java . util . ArrayList ( ) ; for ( final IDENT_14 input : IDENT_12 . METHOD_10 ( ) ) { final uk . gov . gchq . gaffer . operation . Operation IDENT_15 = IDENT_12 . METHOD_8 ( ) . METHOD_11 ( ) ; uk . gov . gchq . gaffer . store . operation . handler . util . IDENT_16 . METHOD_12 ( IDENT_15 , input ) ; results . add ( METHOD_13 ( IDENT_15 , context , store ) ) ; } return results ; }
org . junit . Assert . assertSame ( IDENT_5 , result ) 