METHOD_0 ( ) { final com . IDENT_0 . IDENT_1 . cache . IDENT_2 IDENT_3 = IDENT_4 . mock ( com . IDENT_0 . IDENT_1 . cache . IDENT_2 . class , STRING_0 ) ; final com . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_6 IDENT_7 = IDENT_4 . mock ( com . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_6 . class , STRING_1 ) ; final com . IDENT_0 . IDENT_1 . cache . execute . IDENT_8 IDENT_9 = IDENT_4 . mock ( com . IDENT_0 . IDENT_1 . cache . execute . IDENT_8 . class , STRING_2 ) ; IDENT_4 . METHOD_1 ( new org . IDENT_10 . METHOD_2 ( ) { { METHOD_3 ( IDENT_9 ) . execute ( with ( METHOD_4 ( com . IDENT_0 . IDENT_1 . management . internal . cli . IDENT_11 . IDENT_12 . class ) ) ) ; METHOD_5 ( METHOD_6 ( new java . lang . RuntimeException ( STRING_3 ) ) ) ; } } ) ; final com . IDENT_0 . IDENT_1 . management . internal . cli . commands . IDENT_13 commands = METHOD_7 ( IDENT_3 , IDENT_7 , IDENT_9 ) ; try { commands . METHOD_8 ( ) ; } catch ( java . lang . RuntimeException expected ) { "<AssertPlaceHolder>" ; throw expected ; } } getMessage ( ) { return ( METHOD_9 ( ) ) + STRING_4 ; }
org . junit . Assert . assertEquals ( STRING_3 , expected . getMessage ( ) ) 