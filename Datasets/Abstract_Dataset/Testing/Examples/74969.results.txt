METHOD_0 ( ) { long IDENT_0 = INT_0 ; int IDENT_1 = 10 ; int IDENT_2 = 50 ; double IDENT_3 = FLOAT_0 ; org . IDENT_4 . engine . IDENT_5 . IDENT_6 . IDENT_7 IDENT_8 = new org . IDENT_4 . engine . IDENT_5 . IDENT_6 . METHOD_1 ( org . IDENT_4 . engine . IDENT_5 . IDENT_6 . IDENT_9 . METHOD_2 ( IDENT_2 , IDENT_1 , IDENT_0 , IDENT_3 ) , org . IDENT_4 . engine . IDENT_5 . IDENT_6 . IDENT_9 . METHOD_3 ( IDENT_1 , IDENT_0 ) , true ) ; org . IDENT_4 . engine . IDENT_5 . IDENT_10 IDENT_11 = IDENT_8 . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { if ( ( IDENT_11 ) != null ) { return IDENT_11 ; } IDENT_11 = new org . IDENT_4 . engine . IDENT_5 . IDENT_6 . METHOD_5 ( size ) ; org . IDENT_4 . engine . IDENT_5 . IDENT_12 IDENT_13 = IDENT_14 . METHOD_6 ( ) ; while ( METHOD_6 . next ( ) ) { final double IDENT_15 = IDENT_16 . get ( METHOD_6 . METHOD_7 ( ) ) ; if ( IDENT_15 != 0.0 ) { final int row = METHOD_6 . row ( ) ; final double val = METHOD_6 . val ( ) ; double IDENT_17 = IDENT_11 . get ( row ) ; IDENT_17 += ( val * val ) * IDENT_15 ; IDENT_11 . set ( row , IDENT_17 ) ; } } return IDENT_11 ; }
org . junit . Assert . assertNotNull ( IDENT_11 ) 