METHOD_0 ( ) { org . apache . beam . runners . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 function = new org . apache . beam . runners . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( org . apache . beam . sdk . IDENT_4 . IDENT_5 . METHOD_2 ( ) ) ; com . google . api . services . IDENT_0 . model . IDENT_6 output = function . apply ( org . apache . beam . runners . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . METHOD_3 ( 2 , STRING_0 , STRING_1 ) ) ; "<AssertPlaceHolder>" ; } apply ( org . apache . beam . sdk . io . IDENT_8 , IDENT_9 . IDENT_10 , org . apache . spark . streaming . IDENT_11 ) { org . apache . beam . runners . core . metrics . IDENT_12 IDENT_13 = new org . apache . beam . runners . core . metrics . METHOD_4 ( ) ; org . apache . beam . sdk . metrics . IDENT_14 IDENT_15 = IDENT_13 . METHOD_5 ( IDENT_16 ) ; try ( java . io . IDENT_17 IDENT_18 = org . apache . beam . sdk . metrics . IDENT_19 . METHOD_6 ( IDENT_15 ) ) { org . apache . beam . runners . spark . io . IDENT_20 < T , IDENT_21 > IDENT_22 = ( ( org . apache . beam . runners . spark . io . IDENT_20 < T , IDENT_21 > ) ( source ) ) ; org . joda . time . IDENT_23 IDENT_24 = org . apache . beam . sdk . IDENT_25 . IDENT_26 . IDENT_27 . IDENT_28 ; final org . joda . time . IDENT_23 IDENT_29 ; org . apache . beam . sdk . IDENT_30 . IDENT_31 < IDENT_21 > IDENT_32 = IDENT_22 . METHOD_7 ( ) ; IDENT_21 IDENT_33 ; if ( state . exists ( ) ) { IDENT_24 = state . get ( ) . METHOD_8 ( ) ; IDENT_33 = org . apache . beam . runners . spark . IDENT_30 . IDENT_34 . METHOD_9 ( state . get ( ) . METHOD_10 ( ) , IDENT_32 ) ; org . apache . beam . runners . spark . IDENT_35 . IDENT_36 . LOG . info ( STRING_2 ) ; } else if ( ( IDENT_37 . METHOD_11 ( ) ) && ( ! ( IDENT_37 . get ( ) . equals ( org . apache . beam . runners . spark . io . IDENT_38 . get ( ) ) ) ) ) { IDENT_33 = IDENT_37 . get ( ) ; org . apache . beam . runners . spark . IDENT_35 . IDENT_36 . LOG . info ( STRING_3 ) ; } else { IDENT_33 = null ; org . apache . beam . runners . spark . IDENT_35 . IDENT_36 . LOG . info ( STRING_4 ) ; } final org . apache . beam . runners . spark . io . IDENT_20 . IDENT_39 IDENT_40 ; final org . apache . beam . IDENT_41 . IDENT_42 . IDENT_43 . com . google . common . base . IDENT_44 IDENT_45 = org . apache . beam . IDENT_41 . IDENT_42 . IDENT_43 . com . google . common . base . IDENT_44 . METHOD_12 ( ) ; long IDENT_46 = 0 ; try { IDENT_40 = ( ( org . apache . beam . runners . spark . io . IDENT_20 . IDENT_39 ) ( IDENT_22 . METHOD_13 ( options . get ( ) , IDENT_33 ) ) ) ; } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( e ) ; } final java . util . List < byte [ ] > IDENT_47 = new java . util . ArrayList ( ) ; org . apache . beam . sdk . util . IDENT_48 . IDENT_49 < T > IDENT_50 = IDENT_48 . IDENT_49 . of ( source . METHOD_14 ( ) , IDENT_51 . IDENT_31 . INSTANCE ) ; try { boolean IDENT_52 = ! ( IDENT_40 . start ( ) ) ; while ( ! IDENT_52 ) { final org . apache . beam . sdk . util . IDENT_48 < T > IDENT_53 = org . apache . beam . sdk . util . IDENT_48 . of ( ( ( T ) ( IDENT_40 . METHOD_15 ( ) ) ) , IDENT_40 . METHOD_16 ( ) , IDENT_51 . INSTANCE , IDENT_54 . IDENT_55 ) ; IDENT_47 . add ( org . apache . beam . runners . spark . IDENT_30 . IDENT_34 . toByteArray ( IDENT_53 , IDENT_50 ) ) ; IDENT_52 = ! ( IDENT_40 . METHOD_17 ( ) ) ; } final org . joda . time . IDENT_23 IDENT_56 = IDENT_40 . METHOD_18 ( ) ; IDENT_29 = ( IDENT_56 . METHOD_19 ( IDENT_24 ) ) ? IDENT_56 : IDENT_24 ; IDENT_46 = IDENT_45 . METHOD_20 ( ) . METHOD_21 ( TimeUnit . IDENT_57 ) ; org . apache . beam . runners . spark . IDENT_35 . IDENT_36 . LOG . info ( STRING_5 , IDENT_22 . getId ( ) , IDENT_46 ) ; @ org . apache . beam . runners . spark . IDENT_35 . METHOD_22 ( STRING_6 ) final IDENT_21 IDENT_58 = ( ( IDENT_21 ) ( IDENT_40 . METHOD_23 ( ) ) ) ; byte [ ] IDENT_59 = org . apache . beam . runners . spark . IDENT_30 . IDENT_34 . toByteArray ( IDENT_58 , IDENT_32 ) ; state . update ( new IDENT_9 . METHOD_24 ( IDENT_59 , IDENT_29 ) ) ; } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( STRING_7 , e ) ; } final java . util . ArrayList < byte [ ] > payload = org . apache . beam . IDENT_41 . IDENT_42 . IDENT_43 . com . google . common . collect . Lists . newArrayList ( org . apache . beam . IDENT_41 . IDENT_42 . IDENT_43 . com . google . common . collect . IDENT_60 . METHOD_25 ( IDENT_47 . iterator ( ) ) ) ; return new IDENT_9 . METHOD_24 ( payload , new org . apache . beam . runners . spark . io . IDENT_61 . METHOD_26 ( IDENT_47 . size ( ) , IDENT_24 , IDENT_29 , IDENT_46 , IDENT_13 ) ) ; } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( e ) ; } }
org . junit . Assert . assertEquals ( org . apache . beam . runners . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_7 . METHOD_3 ( 2 , STRING_0 , STRING_1 ) , output ) 