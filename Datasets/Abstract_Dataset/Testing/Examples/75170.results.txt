METHOD_0 ( ) { java . util . ArrayList < java . lang . Double > input = new java . util . ArrayList < java . lang . Double > ( java . util . Arrays . asList ( FLOAT_0 , FLOAT_1 , 0.0 , FLOAT_2 ) ) ; java . util . ArrayList < java . lang . Integer > IDENT_0 = new java . util . ArrayList < java . lang . Integer > ( java . util . Arrays . asList ( 4 , 5 , 3 , 8 ) ) ; org . IDENT_1 . common . IDENT_2 . IDENT_3 < java . lang . Double > IDENT_4 = new org . IDENT_1 . common . IDENT_2 . IDENT_5 < java . lang . Double > ( input ) ; org . IDENT_1 . common . IDENT_2 . IDENT_6 < java . lang . Integer > IDENT_7 = org . IDENT_1 . common . IDENT_2 . IDENT_8 . < java . lang . Double , java . lang . Integer > METHOD_1 ( ) . add ( IDENT_4 ) . add ( IDENT_9 ) . add ( IDENT_10 ) . METHOD_2 ( IDENT_11 ) ; int count = 0 ; for ( java . lang . Integer i : IDENT_7 ) { "<AssertPlaceHolder>" ; count ++ ; } } METHOD_2 ( org . IDENT_1 . common . IDENT_2 . IDENT_12 ) { IDENT_13 . IDENT_7 . add ( IDENT_14 ) ; return ( ( org . IDENT_1 . common . IDENT_2 . IDENT_12 < IDENT_15 , IDENT_16 > ) ( IDENT_13 ) ) ; }
org . junit . Assert . assertEquals ( IDENT_0 . get ( count ) , i ) 