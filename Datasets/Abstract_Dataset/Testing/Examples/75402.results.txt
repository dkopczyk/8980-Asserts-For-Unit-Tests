METHOD_0 ( ) { java . lang . String id = STRING_0 ; java . lang . String name = "name" ; java . lang . String description = STRING_1 ; au . gov . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_4 [ ] IDENT_5 = new au . gov . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_4 [ ] { new au . gov . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_2 , STRING_2 , java . math . BigInteger . IDENT_6 , 1 ) , new au . gov . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . METHOD_1 ( STRING_3 , STRING_3 , java . math . BigInteger . IDENT_7 , 0 ) } ; au . gov . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_8 IDENT_9 = IDENT_10 . Builder . METHOD_2 ( STRING_4 , STRING_4 , STRING_4 ) . METHOD_3 ( IDENT_5 [ 0 ] ) . build ( ) ; au . gov . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_8 IDENT_11 = IDENT_10 . Builder . METHOD_2 ( STRING_5 , STRING_5 , STRING_5 ) . METHOD_3 ( IDENT_5 [ 1 ] ) . METHOD_4 ( IDENT_9 ) . build ( ) ; au . gov . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_12 IDENT_13 = au . gov . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_12 . Builder . METHOD_5 ( id , name , description ) . METHOD_6 ( IDENT_5 ) . METHOD_7 ( IDENT_11 ) . build ( ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( au . gov . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_8 ) { if ( p == null ) { return false ; } for ( au . gov . IDENT_0 . IDENT_1 . core . IDENT_2 . IDENT_3 . IDENT_8 IDENT_11 : IDENT_14 ) { if ( ( IDENT_11 . equals ( p ) ) || ( IDENT_11 . METHOD_9 ( p ) ) ) { return true ; } } return false ; }
org . junit . Assert . assertTrue ( IDENT_13 . METHOD_8 ( IDENT_11 ) ) 