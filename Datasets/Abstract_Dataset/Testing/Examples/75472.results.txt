METHOD_0 ( ) { java . nio . ByteBuffer IDENT_0 = gov . IDENT_1 . IDENT_2 . util . IDENT_3 . METHOD_1 ( this . getClass ( ) . getResource ( STRING_0 ) ) ; gov . IDENT_1 . IDENT_2 . IDENT_4 . IDENT_5 IDENT_6 = new gov . IDENT_1 . IDENT_2 . IDENT_4 . METHOD_2 ( ) ; IDENT_6 . setValue ( IDENT_7 . IDENT_8 , IDENT_7 . IDENT_9 ) ; IDENT_6 . setValue ( IDENT_7 . IDENT_10 , IDENT_7 . IDENT_11 ) ; gov . IDENT_1 . IDENT_2 . util . IDENT_12 IDENT_13 = gov . IDENT_1 . IDENT_2 . util . IDENT_12 . METHOD_3 ( IDENT_0 , IDENT_6 ) ; int IDENT_14 = INT_0 ; int IDENT_15 = INT_0 ; java . util . List < gov . IDENT_1 . IDENT_2 . geom . IDENT_16 > IDENT_17 = new java . util . ArrayList < gov . IDENT_1 . IDENT_2 . geom . IDENT_16 > ( ( IDENT_14 * IDENT_15 ) ) ; for ( int y = 0 ; y < IDENT_15 ; y ++ ) { for ( int x = 0 ; x < IDENT_14 ; x ++ ) { IDENT_17 . add ( gov . IDENT_1 . IDENT_2 . geom . IDENT_16 . METHOD_4 ( y , x , IDENT_13 . METHOD_5 ( ( ( y * IDENT_14 ) + x ) ) ) ) ; } } au . gov . IDENT_18 . IDENT_2 . common . IDENT_19 . IDENT_20 . IDENT_21 . IDENT_22 IDENT_21 = new au . gov . IDENT_18 . IDENT_2 . common . IDENT_19 . IDENT_20 . IDENT_21 . METHOD_6 ( IDENT_17 , IDENT_14 , IDENT_15 ) ; au . gov . IDENT_18 . IDENT_2 . common . render . IDENT_23 . IDENT_24 IDENT_25 = IDENT_21 . METHOD_7 ( 1 , new java . awt . METHOD_8 ( INT_1 , INT_1 , INT_2 , INT_2 ) ) ; java . awt . image . IDENT_26 image = METHOD_9 ( IDENT_25 , IDENT_14 , IDENT_15 ) ; java . awt . image . IDENT_26 reference = javax . IDENT_27 . IDENT_28 . read ( this . getClass ( ) . getResourceAsStream ( STRING_1 ) ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( java . awt . image . IDENT_26 , java . awt . image . IDENT_26 ) { if ( ( ( IDENT_29 . METHOD_11 ( ) ) != ( IDENT_30 . METHOD_11 ( ) ) ) || ( ( IDENT_29 . METHOD_12 ( ) ) != ( IDENT_30 . METHOD_12 ( ) ) ) ) { return false ; } for ( int y = 0 ; y < ( IDENT_29 . METHOD_12 ( ) ) ; y ++ ) { for ( int x = 0 ; x < ( IDENT_29 . METHOD_11 ( ) ) ; x ++ ) { if ( ( IDENT_29 . METHOD_13 ( x , y ) ) != ( IDENT_30 . METHOD_13 ( x , y ) ) ) { return false ; } } } return true ; }
org . junit . Assert . assertTrue ( METHOD_10 ( image , reference ) ) 