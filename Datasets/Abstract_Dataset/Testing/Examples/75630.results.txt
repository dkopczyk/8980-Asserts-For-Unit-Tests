METHOD_0 ( ) { org . opengis . filter . IDENT_0 filter = org . IDENT_1 . IDENT_2 . store . simple . IDENT_3 . IDENT_4 . METHOD_1 ( "" , ( - INT_0 ) , ( - INT_1 ) , INT_0 , INT_1 , IDENT_5 . IDENT_6 ) ; org . geotools . feature . IDENT_7 records = store . METHOD_2 ( new org . geotools . data . Query ( STRING_0 , filter ) , IDENT_8 . IDENT_9 ) ; "<AssertPlaceHolder>" ; } size ( ) { if ( ( IDENT_10 ) != null ) { return IDENT_10 . size ( ) ; } if ( ( org . IDENT_1 . IDENT_11 . IDENT_12 . IDENT_13 ) > 0 ) { try { int count = IDENT_14 . METHOD_3 ( query ) ; if ( count == 0 ) { IDENT_10 = new java . util . ArrayList ( ) ; return count ; } if ( count > 0 ) { return count ; } java . util . List < org . opengis . feature . simple . IDENT_15 > IDENT_16 = new java . util . ArrayList ( ) ; try ( org . geotools . data . simple . IDENT_17 it = IDENT_14 . METHOD_4 ( query ) . METHOD_5 ( ) ) { count = 0 ; while ( it . hasNext ( ) ) { org . opengis . feature . simple . IDENT_15 feature = it . next ( ) ; if ( ( IDENT_16 . size ( ) ) < ( org . IDENT_1 . IDENT_11 . IDENT_12 . IDENT_13 ) ) { IDENT_16 . add ( feature ) ; } count ++ ; } if ( count <= ( org . IDENT_1 . IDENT_11 . IDENT_12 . IDENT_13 ) ) { IDENT_10 = IDENT_16 ; } else { IDENT_16 . METHOD_6 ( ) ; } return count ; } } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( e ) ; } } return super . size ( ) ; }
org . junit . Assert . assertEquals ( 3 , records . size ( ) ) 