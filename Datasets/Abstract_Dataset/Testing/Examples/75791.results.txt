METHOD_0 ( ) { org . IDENT_0 . security . impl . IDENT_1 catalog = METHOD_1 ( org . IDENT_0 . security . impl . IDENT_1 . class ) ; manager = METHOD_1 ( org . IDENT_0 . security . impl . IDENT_2 . class ) ; org . opengis . filter . IDENT_3 IDENT_4 = METHOD_1 ( org . opengis . filter . IDENT_3 . class ) ; expect ( manager . METHOD_2 ( eq ( IDENT_5 ) , eq ( org . IDENT_0 . security . impl . IDENT_6 . class ) ) ) . METHOD_3 ( IDENT_4 ) ; final org . easymock . IDENT_7 < org . opengis . filter . IDENT_3 > IDENT_8 = new org . easymock . IDENT_7 < org . opengis . filter . IDENT_3 > ( ) ; final java . util . List < org . IDENT_0 . security . impl . IDENT_6 > source = new java . util . ArrayList < org . IDENT_0 . security . impl . IDENT_6 > ( ) ; org . IDENT_0 . security . impl . IDENT_9 IDENT_10 = METHOD_1 ( org . IDENT_0 . security . impl . IDENT_9 . class ) ; expect ( manager . METHOD_4 ( eq ( IDENT_5 ) , eq ( IDENT_10 ) ) ) . METHOD_3 ( new org . IDENT_0 . security . impl . METHOD_5 ( IDENT_11 . IDENT_12 , true , false , false ) ) ; org . IDENT_0 . security . impl . IDENT_6 IDENT_13 = METHOD_6 ( "foo" , IDENT_10 , IDENT_11 . IDENT_12 , IDENT_4 , true , false ) ; source . add ( IDENT_13 ) ; replay ( IDENT_13 ) ; IDENT_13 = METHOD_6 ( "bar" , IDENT_10 , IDENT_11 . IDENT_12 , IDENT_4 , false , false ) ; source . add ( IDENT_13 ) ; replay ( IDENT_13 ) ; IDENT_13 = METHOD_6 ( STRING_0 , IDENT_10 , IDENT_11 . IDENT_14 , IDENT_4 , false , false ) ; source . add ( IDENT_13 ) ; replay ( IDENT_13 ) ; expect ( catalog . list ( eq ( org . IDENT_0 . security . impl . IDENT_6 . class ) , METHOD_7 ( IDENT_8 ) , ( ( java . lang . Integer ) ( METHOD_8 ( ) ) ) , ( ( java . lang . Integer ) ( METHOD_8 ( ) ) ) , ( ( org . opengis . filter . IDENT_15 . IDENT_16 ) ( METHOD_8 ( ) ) ) ) ) . METHOD_9 ( new org . easymock . IDENT_17 < org . IDENT_0 . catalog . util . IDENT_18 < org . IDENT_0 . security . impl . IDENT_6 > > ( ) { @ org . IDENT_0 . security . impl . Override public org . IDENT_0 . catalog . util . IDENT_18 < org . IDENT_0 . security . impl . IDENT_6 > METHOD_10 ( ) throws java . lang . Throwable { org . opengis . filter . IDENT_3 filter = IDENT_8 . getValue ( ) ; return org . IDENT_0 . catalog . util . IDENT_19 . filter ( source . iterator ( ) , filter ) ; } } ) ; replay ( catalog , manager , IDENT_4 ) ; @ org . IDENT_0 . security . impl . METHOD_11 ( STRING_1 ) org . IDENT_0 . security . impl . IDENT_20 IDENT_21 = new org . IDENT_0 . security . impl . METHOD_12 ( catalog , manager ) { @ org . IDENT_0 . security . impl . Override MOD_0 boolean METHOD_13 ( org . springframework . security . core . IDENT_22 authentication ) { return false ; } @ org . IDENT_0 . security . impl . Override MOD_0 < T extends org . IDENT_0 . security . impl . IDENT_23 > T METHOD_14 ( org . springframework . security . core . IDENT_22 user , T info , org . IDENT_0 . security . impl . IDENT_24 IDENT_25 ) { return info ; } } ; org . springframework . security . core . context . IDENT_26 . METHOD_15 ( ) . METHOD_16 ( IDENT_5 ) ; java . util . List < org . IDENT_0 . security . impl . IDENT_6 > IDENT_27 = org . IDENT_0 . security . impl . IDENT_28 . METHOD_17 ( IDENT_21 . list ( org . IDENT_0 . security . impl . IDENT_6 . class , org . IDENT_0 . security . impl . IDENT_29 . METHOD_18 ( ) ) ) ; org . IDENT_0 . security . impl . IDENT_9 IDENT_30 = IDENT_27 . get ( 0 ) . METHOD_19 ( ) . METHOD_20 ( ) ; "<AssertPlaceHolder>" ; verify ( catalog , manager ) ; } METHOD_21 ( java . lang . String , org . IDENT_0 . security . impl . IDENT_9 ) { return METHOD_22 ( METHOD_23 ( "name" , is ( name ) ) , METHOD_23 ( STRING_2 , METHOD_23 ( STRING_3 , is ( ws ) ) ) ) ; }
org . junit . Assert . assertThat ( IDENT_27 , contains ( org . IDENT_0 . security . impl . IDENT_28 . METHOD_21 ( "foo" , IDENT_10 ) , org . IDENT_0 . security . impl . IDENT_28 . METHOD_21 ( STRING_0 , IDENT_10 ) ) ) 