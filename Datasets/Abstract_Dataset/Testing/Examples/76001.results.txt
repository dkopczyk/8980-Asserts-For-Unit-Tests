METHOD_0 ( ) { System . out . println ( STRING_0 ) ; java . lang . String script = STRING_1 + ( ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_0 0 ) + STRING_7 ) ; java . lang . Integer [ ] IDENT_0 = new it . IDENT_1 . IDENT_2 . IDENT_3 . runtime . Integer [ ] { 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 1 , 1 , 0 , 0 , 0 , 0 , 0 } ; java . awt . image . IDENT_4 IDENT_5 = it . IDENT_1 . IDENT_2 . IDENT_6 . IDENT_7 . METHOD_1 ( IDENT_0 , 4 , 4 ) ; builder . script ( script ) . source ( STRING_8 , IDENT_5 ) . METHOD_2 ( STRING_9 , 4 , 4 ) . run ( ) ; java . awt . image . IDENT_4 result = builder . METHOD_3 ( STRING_9 ) ; int [ ] IDENT_8 = new int [ ] { 1 , 1 , 1 , 0 , 2 , 3 , 3 , 1 , 2 , 3 , 3 , 1 , 1 , 2 , 2 , 1 } ; int k = 0 ; java . awt . image . IDENT_9 IDENT_10 = result . METHOD_4 ( ) ; for ( int y = 0 ; y < 4 ; y ++ ) { for ( int x = 0 ; x < 4 ; x ++ ) { "<AssertPlaceHolder>" ; } } } METHOD_5 ( int , int , int ) { METHOD_6 ( ( x - ( IDENT_11 ) ) , ( y - ( IDENT_12 ) ) ) ; return IDENT_13 . METHOD_5 ( ( x - ( IDENT_14 ) ) , ( y - ( IDENT_15 ) ) , b , IDENT_16 ) ; }
org . junit . Assert . assertEquals ( IDENT_8 [ ( k ++ ) ] , IDENT_10 . METHOD_5 ( x , y , 0 ) ) 