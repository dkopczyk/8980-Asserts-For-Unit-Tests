METHOD_0 ( ) { org . opengis . IDENT_0 . IDENT_1 . IDENT_2 IDENT_1 = org . geotools . IDENT_0 . IDENT_3 . decode ( STRING_0 , true ) ; org . opengis . IDENT_0 . IDENT_1 . IDENT_2 IDENT_4 = org . geotools . IDENT_0 . IDENT_3 . METHOD_1 ( IDENT_1 ) ; org . opengis . filter . IDENT_5 . IDENT_6 IDENT_7 = IDENT_8 . METHOD_2 ( IDENT_8 . property ( STRING_1 ) , new org . geotools . geometry . jts . METHOD_3 ( ( - INT_0 ) , INT_0 , ( - INT_1 ) , INT_1 , 0 , 100 , null ) ) ; org . geotools . filter . IDENT_5 . IDENT_9 IDENT_10 = new org . geotools . filter . IDENT_5 . METHOD_4 ( IDENT_8 , IDENT_1 ) ; org . opengis . filter . IDENT_5 . IDENT_6 IDENT_11 = ( ( org . opengis . filter . IDENT_5 . IDENT_6 ) ( METHOD_2 . accept ( IDENT_10 , null ) ) ) ; org . opengis . filter . expression . IDENT_12 IDENT_13 = ( ( org . opengis . filter . expression . IDENT_12 ) ( IDENT_11 . METHOD_5 ( ) ) ) ; org . locationtech . jts . geom . IDENT_14 g = ( ( org . locationtech . jts . geom . IDENT_14 ) ( IDENT_13 . evaluate ( null ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( ) { return METHOD_7 ( ) . METHOD_6 ( ) ; }
org . junit . Assert . assertEquals ( IDENT_1 , g . METHOD_6 ( ) ) 