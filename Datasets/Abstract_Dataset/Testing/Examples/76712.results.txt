METHOD_0 ( ) { com . IDENT_0 . domain . IDENT_1 . entity . IDENT_2 IDENT_3 = new com . IDENT_0 . domain . IDENT_1 . entity . METHOD_1 ( ) ; java . lang . String IDENT_4 = generator . METHOD_2 ( IDENT_3 , true ) ; System . out . println ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( com . IDENT_0 . domain . IDENT_1 . entity . IDENT_5 , boolean ) { if ( IDENT_6 == null ) { return null ; } if ( ( IDENT_6 != null ) && ( ( IDENT_6 . getName ( ) ) != null ) ) { java . lang . StringBuilder IDENT_7 = new java . lang . StringBuilder ( ) ; java . lang . String IDENT_8 = "" ; java . lang . String IDENT_9 = "" ; if ( ( IDENT_6 . getName ( ) ) != null ) { IDENT_7 . append ( IDENT_6 . getName ( ) ) ; IDENT_8 = IDENT_6 . getName ( ) ; IDENT_9 = STRING_0 ; } java . lang . String IDENT_10 = IDENT_6 . METHOD_3 ( ) ; if ( ( ( IDENT_10 != null ) && ( ! ( IDENT_10 . trim ( ) . equals ( "" ) ) ) ) && ( ! ( IDENT_10 . equalsIgnoreCase ( IDENT_8 ) ) ) ) { IDENT_7 . append ( ( IDENT_9 + IDENT_10 ) ) ; IDENT_8 = IDENT_10 ; IDENT_9 = STRING_0 ; } java . lang . String IDENT_11 = IDENT_6 . METHOD_4 ( ) ; if ( ( ( IDENT_11 != null ) && ( ! ( IDENT_11 . trim ( ) . equals ( "" ) ) ) ) && ( ! ( IDENT_11 . equalsIgnoreCase ( IDENT_8 ) ) ) ) { IDENT_7 . append ( ( IDENT_9 + IDENT_11 ) ) ; IDENT_8 = IDENT_11 ; IDENT_9 = STRING_0 ; } java . lang . String IDENT_12 = IDENT_6 . METHOD_5 ( ) ; if ( ( ( IDENT_12 != null ) && ( ! ( IDENT_12 . trim ( ) . equals ( "" ) ) ) ) && ( ! ( IDENT_12 . equalsIgnoreCase ( IDENT_8 ) ) ) ) { IDENT_7 . append ( ( IDENT_9 + IDENT_12 ) ) ; IDENT_8 = IDENT_12 ; IDENT_9 = STRING_0 ; } java . lang . String IDENT_13 = IDENT_6 . METHOD_6 ( ) ; if ( ( ( IDENT_13 != null ) && ( ! ( IDENT_13 . trim ( ) . equals ( "" ) ) ) ) && ( ! ( IDENT_13 . equalsIgnoreCase ( IDENT_8 ) ) ) ) { IDENT_7 . append ( ( IDENT_9 + IDENT_13 ) ) ; IDENT_8 = IDENT_13 ; IDENT_9 = STRING_0 ; } java . lang . String IDENT_14 = IDENT_6 . METHOD_7 ( ) ; if ( ( ( IDENT_14 != null ) && ( ! ( IDENT_14 . trim ( ) . equals ( "" ) ) ) ) && ( ! ( IDENT_14 . equalsIgnoreCase ( IDENT_8 ) ) ) ) { IDENT_7 . append ( ( IDENT_9 + IDENT_14 ) ) ; IDENT_8 = IDENT_14 ; IDENT_9 = STRING_0 ; } java . lang . String IDENT_15 = IDENT_6 . METHOD_8 ( ) ; if ( ( ( IDENT_15 != null ) && ( ! ( IDENT_15 . trim ( ) . equals ( "" ) ) ) ) && ( ! ( IDENT_15 . equalsIgnoreCase ( IDENT_8 ) ) ) ) { IDENT_7 . append ( ( IDENT_9 + IDENT_15 ) ) ; IDENT_8 = IDENT_15 ; IDENT_9 = STRING_0 ; } java . lang . String IDENT_16 = IDENT_6 . METHOD_9 ( ) ; if ( ( ( IDENT_16 != null ) && ( ! ( IDENT_16 . trim ( ) . equals ( "" ) ) ) ) && ( ! ( IDENT_16 . equalsIgnoreCase ( IDENT_8 ) ) ) ) { if ( ( IDENT_6 . METHOD_10 ( ) ) != null ) { IDENT_7 . append ( IDENT_9 ) . append ( com . IDENT_0 . helper . IDENT_17 . METHOD_11 ( IDENT_6 . METHOD_10 ( ) , IDENT_16 ) ) ; IDENT_9 = STRING_0 ; } else { IDENT_7 . append ( IDENT_9 ) . append ( IDENT_16 ) ; IDENT_9 = STRING_0 ; } } java . lang . String IDENT_18 = null ; if ( ( IDENT_6 . METHOD_12 ( ) ) != null ) { IDENT_18 = IDENT_6 . METHOD_12 ( ) ; } else if ( ( IDENT_6 . METHOD_13 ( ) ) != null ) { IDENT_18 = METHOD_14 ( IDENT_6 . METHOD_13 ( ) ) ; } if ( IDENT_18 != null ) { IDENT_7 . append ( IDENT_9 ) . append ( STRING_1 ) ; IDENT_7 . append ( IDENT_18 ) ; IDENT_7 . append ( STRING_2 ) ; } if ( IDENT_19 && ( ( IDENT_6 . METHOD_10 ( ) ) != null ) ) { java . lang . String IDENT_20 = METHOD_15 ( IDENT_6 . METHOD_10 ( ) ) ; if ( IDENT_20 != null ) { IDENT_7 . append ( IDENT_9 ) . append ( IDENT_20 ) ; } } if ( ( IDENT_7 . length ( ) ) == 0 ) { return null ; } else { return IDENT_7 . toString ( ) ; } } return null ; }
org . junit . Assert . assertNull ( IDENT_4 ) 