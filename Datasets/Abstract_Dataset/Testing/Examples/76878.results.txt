METHOD_0 ( ) { iterator . METHOD_1 ( IDENT_0 ) ; iterator . METHOD_2 ( IDENT_1 ) ; when ( IDENT_0 . accept ( IDENT_1 ) ) . thenReturn ( false ) . thenReturn ( true ) ; IDENT_2 . IDENT_3 = 0 ; iterator . METHOD_3 ( IDENT_2 ) ; METHOD_4 ( ) . when ( iterator ) . METHOD_5 ( ) ; "<AssertPlaceHolder>" ; verify ( iterator ) . METHOD_5 ( ) ; verify ( IDENT_0 , METHOD_6 ( ) ) . accept ( IDENT_1 ) ; } hasNext ( ) { METHOD_5 ( ) ; if ( null != ( filter ) ) { try { while ( ( ( next . IDENT_3 ) != 0 ) && ( ! ( filter . accept ( IDENT_4 ) ) ) ) { METHOD_5 ( ) ; } } catch ( java . io . IOException e ) { IDENT_5 = null ; next = null ; return false ; } } if ( ( ( next ) != null ) && ( ( next . IDENT_3 ) == 0 ) ) { IDENT_5 = null ; next = null ; return false ; } return true ; }
org . junit . Assert . assertFalse ( iterator . hasNext ( ) ) 