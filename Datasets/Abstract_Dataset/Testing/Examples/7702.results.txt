METHOD_0 ( ) { org . apache . beam . sdk . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 options = new org . apache . beam . sdk . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; options . METHOD_2 ( 1 ) ; org . apache . beam . sdk . IDENT_0 . IDENT_1 . IDENT_2 IDENT_1 = org . apache . beam . sdk . IDENT_0 . IDENT_1 . IDENT_2 . create ( options ) ; org . apache . beam . sdk . values . IDENT_4 < byte [ ] , byte [ ] > IDENT_5 = org . apache . beam . sdk . values . IDENT_4 . of ( new byte [ 0 ] , new byte [ 0 ] ) ; boolean IDENT_6 = true ; for ( int i = 0 ; ( i < INT_0 ) && IDENT_6 ; i ++ ) { IDENT_6 = IDENT_1 . METHOD_3 ( IDENT_5 ) ; } "<AssertPlaceHolder>" ; } METHOD_3 ( org . apache . beam . sdk . values . IDENT_4 ) { METHOD_4 ( ( ! ( IDENT_7 ) ) , STRING_0 ) ; long IDENT_8 = METHOD_5 ( record ) ; if ( METHOD_6 ( ( ( IDENT_9 ) + IDENT_8 ) , ( ( records . size ( ) ) + 1L ) ) ) { records . add ( record ) ; IDENT_9 += IDENT_8 ; return true ; } else { return false ; } }
org . junit . Assert . assertFalse ( IDENT_6 ) 