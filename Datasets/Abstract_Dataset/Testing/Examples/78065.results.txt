METHOD_0 ( ) { com . google . cloud . IDENT_0 . hbase . IDENT_1 . filters . IDENT_2 adapter = com . google . cloud . IDENT_0 . hbase . IDENT_1 . filters . IDENT_2 . METHOD_1 ( ) ; org . apache . hadoop . hbase . filter . IDENT_3 IDENT_4 = new org . apache . hadoop . hbase . filter . METHOD_2 ( "a" . getBytes ( ) ) ; org . apache . hadoop . hbase . filter . METHOD_2 IDENT_5 = new org . apache . hadoop . hbase . filter . METHOD_2 ( STRING_0 . getBytes ( ) ) ; org . apache . hadoop . hbase . filter . IDENT_6 IDENT_7 = new org . apache . hadoop . hbase . filter . METHOD_3 ( org . apache . hadoop . hbase . filter . METHOD_3 . IDENT_8 . IDENT_9 , IDENT_4 , IDENT_5 ) ; com . google . common . collect . IDENT_10 < com . google . cloud . IDENT_0 . util . IDENT_11 > actual = adapter . METHOD_4 ( IDENT_7 ) ; com . google . common . collect . IDENT_10 < com . google . cloud . IDENT_0 . util . IDENT_11 > expected = com . google . common . collect . IDENT_12 . of ( com . google . common . collect . IDENT_13 . METHOD_5 ( new com . google . cloud . IDENT_0 . util . METHOD_6 ( com . google . IDENT_14 . IDENT_15 . METHOD_7 ( "a" ) ) , new com . google . cloud . IDENT_0 . util . METHOD_6 ( com . google . IDENT_14 . IDENT_15 . METHOD_7 ( "b" ) ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( org . apache . hadoop . hbase . filter . IDENT_16 ) { com . google . common . collect . IDENT_12 . Builder < com . google . cloud . IDENT_0 . util . METHOD_6 > IDENT_17 = com . google . common . collect . IDENT_12 . builder ( ) ; for ( org . apache . hadoop . hbase . filter . IDENT_16 . IDENT_18 IDENT_19 : filter . METHOD_8 ( ) ) { IDENT_17 . add ( METHOD_9 ( IDENT_19 ) ) ; } return IDENT_17 . build ( ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 