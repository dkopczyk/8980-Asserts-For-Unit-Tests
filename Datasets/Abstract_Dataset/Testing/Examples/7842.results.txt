METHOD_0 ( ) { org . apache . IDENT_0 . client . IDENT_1 IDENT_2 = IDENT_3 . METHOD_1 ( 1 , 1 , IDENT_4 . IDENT_5 , new byte [ 0 ] ) ; int n = 10 ; long IDENT_6 = IDENT_2 . getId ( ) ; for ( int i = 0 ; i < n ; i ++ ) { IDENT_2 . METHOD_2 ( ( STRING_0 + i ) . getBytes ( ) ) ; } METHOD_3 ( ) ; org . apache . IDENT_0 . client . IDENT_1 IDENT_7 = IDENT_3 . METHOD_4 ( IDENT_6 , IDENT_4 . IDENT_5 , new byte [ 0 ] ) ; java . util . IDENT_8 < org . apache . IDENT_0 . client . IDENT_9 > IDENT_10 = IDENT_7 . METHOD_5 ( 0 , ( n - 1 ) ) ; for ( int i = 0 ; i < n ; i ++ ) { org . apache . IDENT_0 . client . IDENT_9 entry = IDENT_10 . METHOD_6 ( ) ; "<AssertPlaceHolder>" ; } } METHOD_7 ( ) { return entry ; }
org . junit . Assert . assertEquals ( ( STRING_0 + i ) , new java . lang . String ( entry . METHOD_7 ( ) ) ) 