METHOD_0 ( ) { org . easymock . EasyMock . expect ( IDENT_0 . METHOD_1 ( com . google . cloud . compute . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( ) , com . google . cloud . compute . IDENT_1 . IDENT_2 . IDENT_4 ) ) . andReturn ( null ) ; org . easymock . EasyMock . replay ( IDENT_0 ) ; compute = options . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( com . google . cloud . compute . v1 . IDENT_5 ) { com . google . cloud . compute . v1 . IDENT_6 request = com . google . cloud . compute . v1 . IDENT_6 . METHOD_3 ( ) . METHOD_4 ( ( IDENT_7 == null ? null : IDENT_7 . toString ( ) ) ) . build ( ) ; return METHOD_1 ( request ) ; }
org . junit . Assert . assertNull ( compute . METHOD_1 ( com . google . cloud . compute . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( ) ) ) 