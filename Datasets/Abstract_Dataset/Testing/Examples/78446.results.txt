METHOD_0 ( ) { com . google . cloud . compute . IDENT_0 . IDENT_1 IDENT_2 = com . google . cloud . compute . IDENT_0 . IDENT_1 . of ( STRING_0 , STRING_1 ) ; org . easymock . EasyMock . expect ( IDENT_3 . METHOD_1 ( IDENT_2 . METHOD_2 ( ) , IDENT_2 . METHOD_1 ( ) , com . google . cloud . compute . IDENT_0 . IDENT_4 . IDENT_5 ) ) . andReturn ( com . google . cloud . compute . IDENT_0 . IDENT_4 . IDENT_6 . METHOD_3 ( ) ) ; org . easymock . EasyMock . replay ( IDENT_3 ) ; compute = options . METHOD_4 ( ) ; com . google . cloud . compute . IDENT_0 . IDENT_7 IDENT_8 = compute . METHOD_1 ( IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( com . google . cloud . compute . v1 . IDENT_9 ) { com . google . cloud . compute . v1 . IDENT_10 request = com . google . cloud . compute . v1 . IDENT_10 . METHOD_5 ( ) . METHOD_6 ( ( IDENT_8 == null ? null : IDENT_8 . toString ( ) ) ) . build ( ) ; return METHOD_1 ( request ) ; }
org . junit . Assert . assertEquals ( com . google . cloud . compute . IDENT_0 . IDENT_4 . IDENT_6 , IDENT_8 ) 