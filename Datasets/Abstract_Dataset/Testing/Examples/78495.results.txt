METHOD_0 ( ) { com . google . cloud . compute . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = com . google . cloud . compute . IDENT_0 . IDENT_1 . IDENT_2 . of ( STRING_0 ) ; org . easymock . EasyMock . expect ( IDENT_4 . METHOD_1 ( com . google . cloud . compute . IDENT_0 . IDENT_5 . IDENT_6 . METHOD_2 ( ) , com . google . cloud . compute . IDENT_0 . IDENT_5 . IDENT_6 . getInstance ( ) , STRING_1 , IDENT_3 . METHOD_3 ( ) , com . google . cloud . compute . IDENT_0 . IDENT_5 . IDENT_7 ) ) . andReturn ( IDENT_8 . METHOD_3 ( ) ) ; org . easymock . EasyMock . replay ( IDENT_4 ) ; compute = options . METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , com . google . cloud . compute . IDENT_0 . IDENT_1 . IDENT_2 , com . google . cloud . compute . IDENT_0 . IDENT_9 . IDENT_10 [ ] ) { return compute . METHOD_1 ( METHOD_5 ( ) , IDENT_11 , IDENT_3 , options ) ; }
org . junit . Assert . assertEquals ( IDENT_8 , compute . METHOD_1 ( com . google . cloud . compute . IDENT_0 . IDENT_5 . IDENT_6 , STRING_1 , IDENT_3 ) ) 