METHOD_0 ( ) { METHOD_1 ( 4 ) ; expect ( compute . METHOD_2 ( ) ) . andReturn ( IDENT_0 ) ; com . google . cloud . compute . IDENT_1 . Operation operation = new com . google . cloud . compute . IDENT_1 . Operation . Builder ( IDENT_2 ) . METHOD_3 ( com . google . cloud . compute . IDENT_1 . IDENT_3 . of ( STRING_0 , STRING_1 , STRING_2 ) ) . build ( ) ; expect ( compute . METHOD_4 ( com . google . cloud . compute . IDENT_1 . IDENT_4 . IDENT_5 , INT_0 ) ) . andReturn ( operation ) ; replay ( compute ) ; METHOD_5 ( ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( ) { IDENT_6 = new com . google . cloud . compute . IDENT_1 . IDENT_7 . Builder ( compute , com . google . cloud . compute . IDENT_1 . IDENT_4 . IDENT_5 , com . google . cloud . compute . IDENT_1 . IDENT_4 . IDENT_8 ) . METHOD_6 ( com . google . cloud . compute . IDENT_1 . IDENT_4 . IDENT_9 ) . METHOD_7 ( com . google . cloud . compute . IDENT_1 . IDENT_4 . IDENT_10 ) . METHOD_8 ( com . google . cloud . compute . IDENT_1 . IDENT_4 . IDENT_11 ) . METHOD_9 ( com . google . cloud . compute . IDENT_1 . IDENT_4 . IDENT_12 ) . METHOD_10 ( com . google . cloud . compute . IDENT_1 . IDENT_4 . IDENT_13 ) . METHOD_11 ( com . google . cloud . compute . IDENT_1 . IDENT_4 . IDENT_14 ) . build ( ) ; }
org . junit . Assert . assertSame ( operation , IDENT_6 . METHOD_4 ( INT_0 ) ) 