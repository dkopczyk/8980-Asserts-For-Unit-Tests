METHOD_0 ( ) { METHOD_1 ( 2 ) ; expect ( compute . METHOD_2 ( ) ) . andReturn ( IDENT_0 ) ; com . google . cloud . compute . IDENT_1 . Operation operation = new com . google . cloud . compute . IDENT_1 . Operation . Builder ( IDENT_2 ) . METHOD_3 ( com . google . cloud . compute . IDENT_1 . IDENT_3 . of ( STRING_0 , STRING_1 ) ) . build ( ) ; com . google . cloud . compute . IDENT_1 . IDENT_4 metadata = com . google . cloud . compute . IDENT_1 . IDENT_4 . METHOD_4 ( ) . add ( STRING_2 , STRING_3 ) . METHOD_5 ( STRING_4 ) . build ( ) ; expect ( compute . METHOD_6 ( com . google . cloud . compute . IDENT_1 . IDENT_5 . IDENT_6 , metadata , IDENT_7 . IDENT_8 . fields ( ) ) ) . andReturn ( operation ) ; replay ( compute ) ; METHOD_7 ( ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( java . util . Map , com . google . cloud . compute . IDENT_1 . IDENT_7 . IDENT_8 [ ] ) { return METHOD_6 ( METHOD_8 ( ) . METHOD_9 ( ) . METHOD_10 ( metadata ) . build ( ) , options ) ; }
org . junit . Assert . assertSame ( operation , instance . METHOD_6 ( metadata , IDENT_7 . IDENT_8 . fields ( ) ) ) 