METHOD_0 ( ) { com . google . cloud . IDENT_0 . testing . IDENT_1 . IDENT_2 . create ( com . google . cloud . IDENT_0 . testing . IDENT_1 . IDENT_3 ) ; com . google . api . services . IDENT_4 . model . IDENT_5 IDENT_6 = com . google . cloud . IDENT_0 . testing . IDENT_1 . IDENT_2 . get ( com . google . cloud . IDENT_0 . testing . IDENT_1 . IDENT_3 . METHOD_1 ( ) , com . google . cloud . IDENT_0 . testing . IDENT_1 . IDENT_7 ) ; METHOD_2 ( com . google . cloud . IDENT_0 . testing . IDENT_1 . IDENT_3 , IDENT_6 ) ; com . google . cloud . IDENT_0 . testing . IDENT_1 . IDENT_8 . METHOD_3 ( com . google . cloud . IDENT_0 . testing . IDENT_1 . IDENT_3 . METHOD_1 ( ) ) ; "<AssertPlaceHolder>" ; } get ( java . lang . String , java . lang . String [ ] ) { com . google . api . services . IDENT_4 . model . IDENT_5 project = IDENT_9 . get ( IDENT_10 ) ; if ( project != null ) { try { return new com . google . cloud . IDENT_0 . testing . IDENT_11 . Response ( IDENT_12 , com . google . cloud . IDENT_0 . testing . IDENT_11 . IDENT_13 . toString ( com . google . cloud . IDENT_0 . testing . IDENT_11 . METHOD_4 ( project , fields ) ) ) ; } catch ( java . io . IOException e ) { return com . google . cloud . IDENT_0 . testing . IDENT_11 . IDENT_14 . IDENT_15 . response ( ( STRING_0 + ( project . METHOD_1 ( ) ) ) ) ; } } else { return com . google . cloud . IDENT_0 . testing . IDENT_11 . IDENT_14 . IDENT_16 . response ( ( ( STRING_1 + IDENT_10 ) + STRING_2 ) ) ; } }
org . junit . Assert . assertNull ( com . google . cloud . IDENT_0 . testing . IDENT_1 . IDENT_2 . get ( com . google . cloud . IDENT_0 . testing . IDENT_1 . IDENT_3 . METHOD_1 ( ) , com . google . cloud . IDENT_0 . testing . IDENT_1 . IDENT_7 ) ) 