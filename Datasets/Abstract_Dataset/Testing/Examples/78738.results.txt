METHOD_0 ( ) { reader = new com . google . cloud . storage . METHOD_1 ( options , com . google . cloud . storage . IDENT_0 . IDENT_1 , com . google . cloud . storage . IDENT_0 . IDENT_2 ) ; byte [ ] result = new byte [ ] { } ; java . nio . ByteBuffer IDENT_3 = java . nio . ByteBuffer . METHOD_2 ( com . google . cloud . storage . IDENT_0 . IDENT_4 ) ; expect ( IDENT_5 . read ( com . google . cloud . storage . IDENT_0 . IDENT_1 . METHOD_3 ( ) , com . google . cloud . storage . IDENT_0 . IDENT_2 , 0 , com . google . cloud . storage . IDENT_0 . IDENT_4 ) ) . andReturn ( com . google . cloud . IDENT_6 . of ( STRING_0 , result ) ) ; replay ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } read ( com . google . IDENT_7 . v1 . IDENT_8 ) { return METHOD_4 ( ) . call ( request ) ; }
org . junit . Assert . assertEquals ( ( - 1 ) , reader . read ( IDENT_3 ) ) 