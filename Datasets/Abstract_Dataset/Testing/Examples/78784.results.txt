METHOD_0 ( ) { org . easymock . EasyMock . expect ( IDENT_0 . delete ( com . google . cloud . storage . IDENT_1 . of ( com . google . cloud . storage . IDENT_2 . IDENT_3 ) . METHOD_1 ( ) , com . google . cloud . storage . IDENT_2 . IDENT_4 ) ) . andReturn ( true ) ; org . easymock . EasyMock . replay ( IDENT_0 ) ; METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } delete ( java . nio . file . Path ) { METHOD_3 ( ) ; com . google . cloud . storage . IDENT_5 . nio . IDENT_6 IDENT_7 = com . google . cloud . storage . IDENT_5 . nio . IDENT_8 . METHOD_4 ( path ) ; if ( ! ( METHOD_5 ( IDENT_7 ) ) ) { throw new java . nio . file . METHOD_6 ( IDENT_7 . toString ( ) ) ; } }
org . junit . Assert . assertTrue ( storage . delete ( com . google . cloud . storage . IDENT_2 . IDENT_3 ) ) 