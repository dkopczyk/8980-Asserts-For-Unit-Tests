METHOD_0 ( ) { com . google . cloud . storage . IDENT_0 IDENT_1 = com . google . cloud . storage . IDENT_0 . of ( com . google . cloud . storage . IDENT_2 . IDENT_3 , com . google . cloud . storage . IDENT_2 . IDENT_4 , INT_0 ) ; org . easymock . EasyMock . expect ( IDENT_5 . METHOD_1 ( com . google . cloud . storage . IDENT_2 . IDENT_3 , com . google . cloud . storage . IDENT_2 . IDENT_4 , INT_0 , STRING_0 ) ) . andReturn ( com . google . cloud . storage . IDENT_2 . IDENT_6 . METHOD_2 ( ) ) ; org . easymock . EasyMock . replay ( IDENT_5 ) ; METHOD_3 ( ) ; com . google . cloud . storage . IDENT_7 IDENT_8 = storage . METHOD_1 ( IDENT_1 , com . google . cloud . storage . IDENT_7 . User . METHOD_4 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { return new com . google . cloud . storage . IDENT_7 . User ( com . google . cloud . storage . IDENT_7 . User . IDENT_9 ) ; }
org . junit . Assert . assertEquals ( com . google . cloud . storage . IDENT_2 . IDENT_6 , IDENT_8 ) 