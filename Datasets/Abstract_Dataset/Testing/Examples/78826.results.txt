METHOD_0 ( ) { IDENT_0 . METHOD_1 ( ) ; com . google . cloud . IDENT_1 . admin . v2 . models . IDENT_2 . IDENT_3 IDENT_4 = com . google . cloud . examples . IDENT_1 . IDENT_5 . METHOD_2 ( 5 , TimeUnit . IDENT_6 ) ; com . google . cloud . IDENT_1 . admin . v2 . models . IDENT_2 . IDENT_7 IDENT_8 = com . google . cloud . examples . IDENT_1 . IDENT_5 . METHOD_3 ( 2 ) ; com . google . cloud . IDENT_1 . admin . v2 . models . IDENT_2 . IDENT_9 IDENT_10 = com . google . cloud . examples . IDENT_1 . IDENT_5 . METHOD_4 ( ) . rule ( IDENT_4 ) . rule ( IDENT_8 ) ; boolean IDENT_11 = METHOD_5 ( IDENT_10 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( com . google . cloud . IDENT_1 . admin . v2 . models . IDENT_2 . IDENT_12 ) { boolean found = false ; java . util . List < com . google . cloud . IDENT_1 . admin . v2 . models . IDENT_13 > IDENT_14 = com . google . cloud . examples . IDENT_1 . IDENT_15 . IDENT_16 . METHOD_6 ( IDENT_17 ) . METHOD_7 ( ) ; for ( com . google . cloud . IDENT_1 . admin . v2 . models . IDENT_13 IDENT_18 : IDENT_14 ) { if ( IDENT_18 . METHOD_8 ( ) . equals ( condition ) ) { found = true ; break ; } } return found ; }
org . junit . Assert . assertTrue ( IDENT_11 ) 