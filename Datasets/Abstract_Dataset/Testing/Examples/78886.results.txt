METHOD_0 ( ) { java . lang . String json = STRING_0 ; METHOD_1 ( 200 , json ) ; com . google . android . IDENT_0 . server . Result result = IDENT_1 . METHOD_2 ( message , IDENT_2 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( com . google . android . IDENT_0 . server . Message , java . util . List ) { if ( com . google . android . IDENT_0 . server . IDENT_3 . METHOD_3 ( IDENT_4 ) . isEmpty ( ) ) { throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } java . util . Map < java . lang . Object , java . lang . Object > IDENT_5 = new java . util . HashMap < java . lang . Object , java . lang . Object > ( ) ; METHOD_4 ( message , IDENT_5 ) ; IDENT_5 . put ( com . google . android . IDENT_0 . server . Constants . IDENT_6 , IDENT_4 ) ; java . lang . String IDENT_7 = METHOD_5 ( IDENT_5 ) ; if ( IDENT_7 == null ) { return null ; } org . json . simple . parser . IDENT_8 parser = new org . json . simple . parser . METHOD_6 ( ) ; org . json . simple . JSONObject IDENT_9 ; try { IDENT_9 = ( ( org . json . simple . JSONObject ) ( parser . parse ( IDENT_7 ) ) ) ; int IDENT_10 = METHOD_7 ( IDENT_9 , com . google . android . IDENT_0 . server . Constants . IDENT_11 ) . METHOD_8 ( ) ; int IDENT_12 = METHOD_7 ( IDENT_9 , com . google . android . IDENT_0 . server . Constants . IDENT_13 ) . METHOD_8 ( ) ; int IDENT_14 = METHOD_7 ( IDENT_9 , com . google . android . IDENT_0 . server . Constants . IDENT_15 ) . METHOD_8 ( ) ; long IDENT_16 = METHOD_7 ( IDENT_9 , com . google . android . IDENT_0 . server . Constants . IDENT_17 ) . METHOD_9 ( ) ; com . google . android . IDENT_0 . server . IDENT_18 . Builder builder = new com . google . android . IDENT_0 . server . IDENT_18 . Builder ( IDENT_10 , IDENT_12 , IDENT_14 , IDENT_16 ) ; @ com . google . android . IDENT_0 . server . METHOD_10 ( STRING_2 ) java . util . List < java . util . Map < java . lang . String , java . lang . Object > > results = ( ( java . util . List < java . util . Map < java . lang . String , java . lang . Object > > ) ( IDENT_9 . get ( com . google . android . IDENT_0 . server . Constants . IDENT_19 ) ) ) ; if ( results != null ) { for ( java . util . Map < java . lang . String , java . lang . Object > IDENT_20 : results ) { java . lang . String IDENT_21 = ( ( java . lang . String ) ( IDENT_20 . get ( com . google . android . IDENT_0 . server . Constants . IDENT_22 ) ) ) ; java . lang . String IDENT_23 = ( ( java . lang . String ) ( IDENT_20 . get ( com . google . android . IDENT_0 . server . Constants . IDENT_24 ) ) ) ; java . lang . String error = ( ( java . lang . String ) ( IDENT_20 . get ( com . google . android . IDENT_0 . server . Constants . IDENT_25 ) ) ) ; com . google . android . IDENT_0 . server . Result result = new com . google . android . IDENT_0 . server . Result . Builder ( ) . METHOD_11 ( METHOD_11 ) . METHOD_12 ( IDENT_23 ) . METHOD_13 ( error ) . build ( ) ; builder . METHOD_14 ( result ) ; } } return builder . build ( ) ; } catch ( org . json . simple . parser . IDENT_26 e ) { throw METHOD_15 ( IDENT_7 , e ) ; } catch ( com . google . android . IDENT_0 . server . IDENT_3 . IDENT_27 e ) { throw METHOD_15 ( IDENT_7 , e ) ; } }
org . junit . Assert . assertNull ( result ) 