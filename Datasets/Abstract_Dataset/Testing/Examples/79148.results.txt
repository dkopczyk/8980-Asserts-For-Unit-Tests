METHOD_0 ( java . time . IDENT_0 , java . time . IDENT_0 , long ) { "<AssertPlaceHolder>" ; } METHOD_1 ( java . time . IDENT_1 . IDENT_2 , java . time . IDENT_1 . IDENT_2 ) { if ( ( IDENT_3 . getClass ( ) ) != ( IDENT_4 . getClass ( ) ) ) { return IDENT_3 . METHOD_2 ( IDENT_4 , this ) ; } switch ( this ) { case IDENT_5 : return java . lang . Math . METHOD_3 ( IDENT_4 . METHOD_4 ( java . time . IDENT_1 . IDENT_6 . IDENT_7 ) , IDENT_3 . METHOD_4 ( java . time . IDENT_1 . IDENT_6 . IDENT_7 ) ) ; case IDENT_8 : return ( IDENT_3 . METHOD_2 ( IDENT_4 , java . time . IDENT_1 . IDENT_9 . IDENT_10 ) ) / 3 ; default : throw new java . lang . IllegalStateException ( STRING_0 ) ; } }
org . junit . Assert . assertEquals ( test . java . time . IDENT_1 . IDENT_10 . METHOD_1 ( start , end ) , expected ) 