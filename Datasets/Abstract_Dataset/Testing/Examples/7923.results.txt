METHOD_0 ( ) { IDENT_0 . METHOD_1 ( IDENT_1 ) ; final java . util . concurrent . atomic . IDENT_2 IDENT_3 = new java . util . concurrent . atomic . METHOD_2 ( 3 ) ; io . grpc . IDENT_4 IDENT_5 = new io . grpc . METHOD_3 ( io . grpc . Status . IDENT_6 ) ; org . apache . IDENT_7 . stream . IDENT_8 . storage . IDENT_9 . IDENT_10 IDENT_11 = new org . apache . IDENT_7 . stream . IDENT_8 . storage . IDENT_9 . METHOD_4 ( ) { @ org . apache . IDENT_7 . IDENT_12 . impl . internal . Override public void METHOD_5 ( org . apache . IDENT_7 . stream . IDENT_8 . storage . IDENT_13 request , io . grpc . IDENT_14 . IDENT_15 < org . apache . IDENT_7 . stream . IDENT_8 . storage . IDENT_16 > IDENT_17 ) { if ( ( IDENT_3 . METHOD_6 ( ) ) == 0 ) { IDENT_18 . METHOD_5 ( request , IDENT_17 ) ; return ; } IDENT_17 . METHOD_7 ( IDENT_5 ) ; } } ; IDENT_0 . METHOD_8 ( IDENT_11 . METHOD_9 ( ) ) ; METHOD_10 ( ) ; "<AssertPlaceHolder>" ; } get ( ) { while ( true ) { try { return IDENT_19 . get ( 100 , TimeUnit . IDENT_20 ) ; } catch ( java . lang . IDENT_21 e ) { log . warn ( STRING_0 , e ) ; return - 1L ; } catch ( java . util . concurrent . IDENT_22 e ) { throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } catch ( java . util . concurrent . IDENT_23 e ) { continue ; } } }
org . junit . Assert . assertEquals ( 0 , IDENT_3 . get ( ) ) 