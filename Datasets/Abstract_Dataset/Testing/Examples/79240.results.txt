METHOD_0 ( ) { byte [ ] IDENT_0 = com . google . crypto . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( com . google . crypto . IDENT_1 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 ) ; byte [ ] IDENT_8 = com . google . crypto . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( com . google . crypto . IDENT_1 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_9 ) ; byte [ ] IDENT_10 = com . google . crypto . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( com . google . crypto . IDENT_1 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_11 ) ; byte [ ] IDENT_12 = com . google . crypto . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( com . google . crypto . IDENT_1 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_13 ) ; byte [ ] IDENT_14 = com . google . crypto . IDENT_1 . IDENT_2 . IDENT_3 . METHOD_1 ( com . google . crypto . IDENT_1 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_15 ) ; com . google . crypto . IDENT_1 . IDENT_16 IDENT_17 = new com . google . crypto . IDENT_1 . IDENT_4 . IDENT_5 . IDENT_18 . Builder ( ) . METHOD_2 ( com . google . crypto . IDENT_1 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_19 ) . METHOD_3 ( IDENT_12 ) . METHOD_4 ( IDENT_10 ) . METHOD_5 ( IDENT_8 ) . build ( ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( byte [ ] , byte [ ] ) { try { org . json . JSONObject json = new org . json . JSONObject ( new java . lang . String ( IDENT_14 , java . nio . IDENT_20 . IDENT_21 . UTF_8 ) ) ; validate ( json ) ; byte [ ] IDENT_22 = METHOD_7 ( json , IDENT_23 ) ; return METHOD_8 ( json , IDENT_22 ) ; } catch ( org . json . IDENT_24 e ) { throw new java . security . METHOD_9 ( STRING_0 ) ; } }
org . junit . Assert . assertArrayEquals ( IDENT_0 , IDENT_17 . METHOD_6 ( IDENT_14 , null ) ) 