METHOD_0 ( ) { for ( com . google . crypto . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 : IDENT_4 ) { com . google . crypto . IDENT_0 . IDENT_5 . IDENT_6 IDENT_7 = new com . google . crypto . IDENT_0 . IDENT_5 . METHOD_1 ( ) ; java . util . Set < java . lang . String > keys = new java . util . IDENT_8 < java . lang . String > ( ) ; int IDENT_9 = 10 ; for ( int i = 0 ; i < IDENT_9 ; i ++ ) { com . google . crypto . IDENT_0 . IDENT_1 . IDENT_10 key = ( ( com . google . crypto . IDENT_0 . IDENT_1 . IDENT_10 ) ( IDENT_7 . METHOD_2 ( IDENT_3 . getValue ( ) ) ) ) ; keys . add ( com . google . crypto . IDENT_0 . IDENT_11 . METHOD_3 ( key . METHOD_4 ( ) . toByteArray ( ) ) ) ; com . google . crypto . IDENT_0 . IDENT_1 . IDENT_12 IDENT_13 = IDENT_7 . METHOD_5 ( IDENT_3 . getValue ( ) ) ; key = com . google . crypto . IDENT_0 . IDENT_1 . IDENT_10 . METHOD_6 ( IDENT_13 . getValue ( ) ) ; keys . add ( com . google . crypto . IDENT_0 . IDENT_11 . METHOD_3 ( key . METHOD_4 ( ) . toByteArray ( ) ) ) ; } "<AssertPlaceHolder>" ; } } size ( ) { return IDENT_14 ; }
org . junit . Assert . assertEquals ( ( IDENT_9 * 2 ) , keys . size ( ) ) 