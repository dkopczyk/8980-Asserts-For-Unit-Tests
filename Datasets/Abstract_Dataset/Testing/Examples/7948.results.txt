METHOD_0 ( ) { java . lang . String name = STRING_0 ; org . apache . IDENT_0 . IDENT_1 IDENT_2 = METHOD_1 ( conf , ( name + STRING_1 ) ) ; org . apache . IDENT_0 . IDENT_1 IDENT_3 = METHOD_1 ( conf , ( name + STRING_1 ) ) ; org . apache . IDENT_0 . IDENT_1 IDENT_4 = METHOD_1 ( conf , ( name + STRING_2 ) ) ; org . apache . IDENT_0 . IDENT_1 IDENT_5 = METHOD_1 ( conf , ( name + STRING_2 ) ) ; org . apache . IDENT_0 . api . IDENT_6 IDENT_7 = null ; org . apache . IDENT_0 . api . IDENT_6 IDENT_8 = null ; long IDENT_9 = 1 ; int IDENT_10 = 0 ; org . apache . IDENT_0 . IDENT_11 IDENT_12 = IDENT_2 . METHOD_2 ( ) ; org . apache . IDENT_0 . IDENT_11 IDENT_13 = IDENT_4 . METHOD_2 ( ) ; for ( long j = 1 ; j <= 4 ; j ++ ) { for ( int k = 1 ; k <= 10 ; k ++ ) { org . apache . IDENT_0 . util . Utils . METHOD_3 ( IDENT_13 . write ( org . apache . IDENT_0 . IDENT_14 . METHOD_4 ( ( IDENT_9 ++ ) ) ) ) ; org . apache . IDENT_0 . util . Utils . METHOD_3 ( IDENT_12 . write ( org . apache . IDENT_0 . IDENT_14 . METHOD_4 ( ( IDENT_9 ++ ) ) ) ) ; } org . apache . IDENT_0 . util . Utils . METHOD_3 ( IDENT_13 . METHOD_5 ( org . apache . IDENT_0 . IDENT_14 . METHOD_4 ( ( IDENT_9 - 1 ) ) ) ) ; org . apache . IDENT_0 . util . Utils . METHOD_3 ( IDENT_12 . METHOD_5 ( org . apache . IDENT_0 . IDENT_14 . METHOD_4 ( ( IDENT_9 - 1 ) ) ) ) ; if ( null == IDENT_7 ) { IDENT_7 = IDENT_3 . METHOD_6 ( 1 ) ; } if ( null == IDENT_8 ) { IDENT_8 = IDENT_5 . METHOD_6 ( 1 ) ; } IDENT_10 += METHOD_7 ( IDENT_7 , 10 , IDENT_8 , 10 ) ; "<AssertPlaceHolder>" ; } IDENT_7 . close ( ) ; IDENT_8 . close ( ) ; IDENT_3 . close ( ) ; IDENT_2 . close ( ) ; IDENT_5 . close ( ) ; IDENT_4 . close ( ) ; } METHOD_7 ( org . apache . IDENT_0 . api . IDENT_6 , int , org . apache . IDENT_0 . api . IDENT_6 , int ) { java . lang . Thread . sleep ( 15 ) ; int IDENT_10 = 0 ; org . apache . IDENT_0 . IDENT_15 record ; int i = 0 ; while ( i < IDENT_16 ) { record = IDENT_7 . METHOD_8 ( false ) ; if ( null != record ) { org . junit . Assert . assertTrue ( ( ( ( record . METHOD_9 ( ) ) OP_0 2 ) == 0 ) ) ; org . apache . IDENT_0 . IDENT_14 . METHOD_10 ( record ) ; IDENT_10 ++ ; i ++ ; org . apache . IDENT_0 . IDENT_17 . LOG . info ( STRING_3 , record ) ; } } i = 0 ; while ( i < IDENT_18 ) { record = IDENT_8 . METHOD_8 ( false ) ; if ( null != record ) { org . junit . Assert . assertTrue ( ( ( ( record . METHOD_9 ( ) ) OP_0 2 ) == 1 ) ) ; org . apache . IDENT_0 . IDENT_14 . METHOD_10 ( record ) ; IDENT_10 ++ ; i ++ ; org . apache . IDENT_0 . IDENT_17 . LOG . info ( STRING_3 , record ) ; } } return IDENT_10 ; }
org . junit . Assert . assertEquals ( ( IDENT_9 - 1 ) , IDENT_10 ) 