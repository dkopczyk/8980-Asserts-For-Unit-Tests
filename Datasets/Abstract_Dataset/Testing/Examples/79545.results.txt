METHOD_0 ( ) { METHOD_1 ( ) ; METHOD_2 ( new com . IDENT_0 . tx . event . IDENT_1 . IDENT_2 . METHOD_3 ( ) { @ com . IDENT_0 . tx . event . IDENT_1 . Override public void METHOD_4 ( com . IDENT_0 . tx . event . IDENT_1 . api . IDENT_3 IDENT_4 ) { com . IDENT_0 . tx . event . IDENT_1 . Map < java . lang . Long , com . IDENT_0 . tx . event . IDENT_1 . Node > IDENT_5 = METHOD_5 ( IDENT_4 . METHOD_6 ( ) ) ; com . IDENT_0 . tx . event . IDENT_1 . Node IDENT_6 = IDENT_5 . get ( INT_0 ) ; METHOD_7 ( IDENT_6 ) ; } } ) ; try ( com . IDENT_0 . tx . event . IDENT_1 . IDENT_7 tx = database . METHOD_8 ( ) ) { "<AssertPlaceHolder>" ; } } METHOD_9 ( org . neo4j . IDENT_8 . IDENT_9 ) { return com . IDENT_0 . common . util . IDENT_10 . count ( database . METHOD_10 ( ) ) ; }
org . junit . Assert . assertEquals ( 5 , METHOD_9 ( database ) ) 