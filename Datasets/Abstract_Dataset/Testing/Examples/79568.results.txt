METHOD_0 ( ) { writer = new com . IDENT_0 . writer . neo4j . METHOD_1 ( METHOD_2 ( ) ) ; writer . start ( ) ; final java . lang . IDENT_1 task = ( ) -> METHOD_2 ( ) . METHOD_3 ( ) ; java . util . concurrent . IDENT_2 IDENT_3 = java . util . concurrent . IDENT_4 . METHOD_4 ( 20 ) ; for ( int i = 0 ; i < 100 ; i ++ ) { IDENT_3 . METHOD_5 ( ( ) -> writer . write ( task ) ) ; } IDENT_3 . METHOD_6 ( ) ; IDENT_3 . METHOD_7 ( 1 , TimeUnit . IDENT_5 ) ; writer . METHOD_8 ( ) ; try ( org . neo4j . IDENT_6 . IDENT_7 tx = METHOD_2 ( ) . METHOD_9 ( ) ) { "<AssertPlaceHolder>" ; tx . METHOD_10 ( ) ; } } METHOD_11 ( org . neo4j . IDENT_6 . IDENT_8 ) { return com . IDENT_0 . common . util . IDENT_9 . count ( database . METHOD_12 ( ) ) ; }
org . junit . Assert . assertEquals ( 100 , com . IDENT_0 . common . util . IDENT_9 . METHOD_11 ( METHOD_2 ( ) ) ) 