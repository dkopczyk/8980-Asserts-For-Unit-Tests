METHOD_0 ( ) { 7 < OP_0 / com . graphhopper . storage . IDENT_0 g = METHOD_1 ( em ) ; g . METHOD_2 ( 0 , 1 , 1 , false ) ; g . METHOD_2 ( 1 , 2 , 1 , false ) ; g . METHOD_2 ( 2 , 0 , 1 , false ) ; g . METHOD_2 ( 1 , 3 , 1 , false ) ; g . METHOD_2 ( 3 , 4 , 1 , false ) ; g . METHOD_2 ( 4 , 5 , 1 , false ) ; g . METHOD_2 ( 5 , 6 , 1 , false ) ; g . METHOD_2 ( 6 , 7 , 1 , false ) ; g . METHOD_2 ( 7 , 4 , 1 , false ) ; com . graphhopper . IDENT_1 . IDENT_2 . IDENT_3 instance = new com . graphhopper . IDENT_1 . IDENT_2 . METHOD_3 ( g , java . util . Collections . singletonList ( IDENT_4 ) ) . METHOD_4 ( 2 ) . METHOD_5 ( 4 ) ; instance . METHOD_6 ( ) ; java . util . List < com . IDENT_5 . IDENT_6 . IDENT_7 > components = instance . METHOD_7 ( new com . graphhopper . IDENT_1 . IDENT_2 . METHOD_3 . METHOD_8 ( IDENT_4 ) ) ; "<AssertPlaceHolder>" ; } size ( ) { return ( IDENT_8 ) - ( IDENT_9 ) ; }
org . junit . Assert . assertEquals ( 1 , components . size ( ) ) 