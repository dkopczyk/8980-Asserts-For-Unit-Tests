METHOD_0 ( ) { com . graphhopper . IDENT_0 . algorithm . IDENT_1 instance = new com . graphhopper . IDENT_0 . algorithm . METHOD_1 ( ) ; java . util . List < java . util . List < org . locationtech . jts . geom . IDENT_2 > > IDENT_3 = new java . util . ArrayList ( ) ; java . util . List < org . locationtech . jts . geom . IDENT_2 > list = new java . util . ArrayList ( ) ; IDENT_3 . add ( list ) ; list . add ( new org . locationtech . jts . geom . METHOD_2 ( 0.0 , 0.0 ) ) ; list . add ( new org . locationtech . jts . geom . METHOD_2 ( FLOAT_0 , 0.0 ) ) ; list . add ( new org . locationtech . jts . geom . METHOD_2 ( FLOAT_0 , FLOAT_0 ) ) ; list . add ( new org . locationtech . jts . geom . METHOD_2 ( FLOAT_0 , FLOAT_1 ) ) ; list . add ( new org . locationtech . jts . geom . METHOD_2 ( 0.0 , FLOAT_1 ) ) ; java . util . List < org . locationtech . jts . geom . METHOD_2 [ ] > res = instance . METHOD_3 ( IDENT_3 , IDENT_3 . size ( ) ) ; org . locationtech . jts . geom . METHOD_2 [ ] geometry = res . get ( 0 ) ; "<AssertPlaceHolder>" ; } get ( long ) { int IDENT_4 = ( ( int ) ( index / ( IDENT_5 ) ) ) ; int entry = ( ( int ) ( index OP_0 ( IDENT_5 ) ) ) ; try { if ( IDENT_4 >= ( IDENT_6 . size ( ) ) ) { return null ; } byte [ ] bytes = IDENT_6 . get ( IDENT_4 ) ; com . graphhopper . storage . IDENT_7 store = new com . graphhopper . storage . METHOD_4 ( com . graphhopper . IDENT_8 . IDENT_9 . METHOD_5 ( bytes ) ) ; long len = store . METHOD_6 ( ) ; for ( int i = 0 ; ( store . METHOD_7 ( ) ) < len ; i ++ ) { long IDENT_10 = store . METHOD_8 ( ) ; if ( i == entry ) { com . graphhopper . util . IDENT_11 . IDENT_12 IDENT_13 = new com . graphhopper . util . IDENT_11 . METHOD_9 ( ) ; IDENT_14 . decode ( IDENT_10 , IDENT_13 ) ; return IDENT_13 ; } } return null ; } catch ( java . lang . IDENT_15 ex ) { throw new java . lang . RuntimeException ( ( ( ( ( ( ( ( STRING_0 + index ) + STRING_1 ) + IDENT_4 ) + STRING_2 ) + entry ) + STRING_3 ) + ( IDENT_6 . size ( ) ) ) , ex ) ; } catch ( java . lang . Exception ex ) { throw new java . lang . RuntimeException ( ex ) ; } }
org . junit . Assert . assertEquals ( 9 , geometry . length ) 