METHOD_0 ( ) { IDENT_0 . METHOD_1 ( 0.0 ) ; IDENT_0 . METHOD_2 ( 1.0 ) ; IDENT_1 . METHOD_1 ( 0.0 ) ; IDENT_1 . METHOD_2 ( 1.0 ) ; com . graphhopper . jsprit . core . problem . IDENT_2 . IDENT_3 context = new com . graphhopper . jsprit . core . problem . IDENT_2 . METHOD_3 ( route , job , IDENT_4 , null , 0.0 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( com . graphhopper . jsprit . core . problem . solution . IDENT_5 ) { double c = 0.0 ; for ( com . graphhopper . jsprit . core . problem . solution . route . IDENT_6 r : solution . METHOD_5 ( ) ) { c += IDENT_7 . METHOD_6 ( r , IDENT_8 . IDENT_9 , com . graphhopper . jsprit . core . algorithm . Double . class ) ; c += METHOD_7 ( r . METHOD_8 ( ) ) ; } c += ( ( solution . METHOD_9 ( ) . size ( ) ) * c ) * FLOAT_0 ; return c ; }
org . junit . Assert . assertEquals ( 0.0 , ( ( IDENT_0 . METHOD_4 ( context ) ) + ( IDENT_1 . METHOD_4 ( context ) ) ) , FLOAT_0 ) 