METHOD_0 ( ) { io . IDENT_0 . IDENT_1 . policy . impl . IDENT_2 IDENT_3 = IDENT_4 . resolve ( IDENT_5 . IDENT_6 , request , response , IDENT_7 ) ; "<AssertPlaceHolder>" ; } resolve ( io . IDENT_0 . IDENT_1 . security . core . IDENT_5 , io . IDENT_0 . IDENT_1 . api . IDENT_8 , io . IDENT_0 . IDENT_1 . api . Response , io . IDENT_0 . IDENT_1 . api . IDENT_9 ) { if ( IDENT_10 == ( IDENT_5 . IDENT_11 ) ) { final io . IDENT_0 . IDENT_1 . security . core . IDENT_12 IDENT_13 = IDENT_14 . resolve ( request ) ; if ( IDENT_13 != null ) { logger . debug ( STRING_0 , IDENT_13 . name ( ) , request . id ( ) ) ; java . util . List < io . IDENT_0 . IDENT_1 . security . core . IDENT_15 > IDENT_16 = IDENT_13 . METHOD_1 ( IDENT_7 ) ; return io . IDENT_0 . IDENT_1 . policy . impl . IDENT_17 . create ( METHOD_2 ( IDENT_16 ) , IDENT_7 ) ; } logger . debug ( STRING_1 , request . id ( ) ) ; return new io . IDENT_0 . IDENT_1 . security . core . METHOD_3 ( io . IDENT_0 . policy . api . IDENT_18 . METHOD_4 ( IDENT_19 . IDENT_20 , STRING_2 ) , IDENT_7 ) ; } else { return new io . IDENT_0 . IDENT_1 . security . core . METHOD_5 ( IDENT_7 ) ; } }
org . junit . Assert . assertEquals ( io . IDENT_0 . IDENT_1 . security . core . METHOD_5 . class , IDENT_3 . getClass ( ) ) 