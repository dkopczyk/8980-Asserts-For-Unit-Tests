METHOD_0 ( ) { java . util . List < io . IDENT_0 . management . model . IDENT_1 > IDENT_2 = IDENT_3 . METHOD_1 ( io . IDENT_0 . management . service . IDENT_4 . IDENT_5 , IDENT_6 . IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , io . IDENT_0 . repository . management . model . IDENT_6 ) { if ( ( type == null ) || ( ( ( ! ( type . equals ( io . IDENT_0 . management . service . impl . IDENT_8 ) ) ) && ( ! ( type . equals ( io . IDENT_0 . management . service . impl . IDENT_9 ) ) ) ) && ( ! ( type . equals ( io . IDENT_0 . management . service . impl . IDENT_10 ) ) ) ) ) { return io . IDENT_0 . management . service . impl . Collections . emptyList ( ) ; } try { io . IDENT_0 . management . service . impl . Set < io . IDENT_0 . management . service . impl . IDENT_1 > IDENT_11 = IDENT_12 . METHOD_2 ( IDENT_13 , type ) . stream ( ) . map ( ( IDENT_14 ) -> { io . IDENT_0 . management . service . impl . IDENT_1 IDENT_15 = new io . IDENT_0 . management . service . impl . METHOD_3 ( ) ; IDENT_15 . METHOD_4 ( type . name ( ) ) ; IDENT_15 . METHOD_5 ( IDENT_14 . METHOD_6 ( ) ) ; return IDENT_15 ; } ) . collect ( java . util . stream . IDENT_16 . METHOD_7 ( ) ) ; if ( ( type . equals ( io . IDENT_0 . management . service . impl . IDENT_9 ) ) || ( type . equals ( io . IDENT_0 . management . service . impl . IDENT_8 ) ) ) { final io . IDENT_0 . management . service . impl . List < java . lang . String > IDENT_17 = IDENT_12 . METHOD_2 ( IDENT_13 , io . IDENT_0 . management . service . impl . IDENT_10 ) . stream ( ) . filter ( ( m ) -> m . METHOD_8 ( ) . METHOD_9 ( ) . contains ( ( type . equals ( io . IDENT_0 . management . service . impl . IDENT_8 ) ? IDENT_18 . IDENT_8 . getId ( ) : IDENT_18 . IDENT_9 . getId ( ) ) ) ) . map ( IDENT_19 :: METHOD_6 ) . collect ( java . util . stream . IDENT_16 . toList ( ) ) ; if ( ( ! ( IDENT_17 . isEmpty ( ) ) ) && ( type . equals ( io . IDENT_0 . management . service . impl . IDENT_8 ) ) ) { io . IDENT_0 . management . model . api . IDENT_20 IDENT_21 = new io . IDENT_0 . management . model . api . METHOD_10 ( ) ; IDENT_21 . METHOD_11 ( IDENT_17 ) ; IDENT_11 . addAll ( IDENT_22 . search ( IDENT_21 ) . stream ( ) . map ( ( IDENT_23 ) -> { io . IDENT_0 . management . service . impl . METHOD_3 IDENT_15 = new io . IDENT_0 . management . service . impl . METHOD_3 ( ) ; IDENT_15 . METHOD_5 ( IDENT_23 . getId ( ) ) ; IDENT_15 . METHOD_4 ( type . name ( ) ) ; return IDENT_15 ; } ) . collect ( java . util . stream . IDENT_16 . METHOD_7 ( ) ) ) ; } else if ( ( ! ( IDENT_17 . isEmpty ( ) ) ) && ( type . equals ( io . IDENT_0 . management . service . impl . IDENT_9 ) ) ) { IDENT_11 . addAll ( IDENT_24 . METHOD_12 ( IDENT_17 ) . stream ( ) . map ( ( IDENT_25 ) -> { io . IDENT_0 . management . service . impl . METHOD_3 IDENT_15 = new io . IDENT_0 . management . service . impl . METHOD_3 ( ) ; IDENT_15 . METHOD_5 ( IDENT_25 . getId ( ) ) ; IDENT_15 . METHOD_4 ( type . name ( ) ) ; return IDENT_15 ; } ) . collect ( java . util . stream . IDENT_16 . METHOD_7 ( ) ) ) ; } } return new io . IDENT_0 . management . service . impl . ArrayList ( IDENT_11 ) ; } catch ( io . IDENT_0 . repository . exceptions . IDENT_26 ex ) { LOGGER . error ( STRING_0 , IDENT_13 , ex ) ; throw new io . IDENT_0 . management . service . impl . METHOD_13 ( ( STRING_1 + IDENT_13 ) , ex ) ; } }
org . junit . Assert . assertTrue ( IDENT_2 . isEmpty ( ) ) 