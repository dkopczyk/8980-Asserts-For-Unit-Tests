METHOD_0 ( ) { final org . IDENT_0 . plugins . IDENT_1 . parser . IDENT_2 IDENT_3 = mock ( org . IDENT_0 . plugins . IDENT_1 . parser . IDENT_2 . class ) ; when ( IDENT_3 . host ( ) ) . thenReturn ( STRING_0 ) ; when ( IDENT_3 . METHOD_1 ( ) ) . thenReturn ( java . util . Collections . METHOD_2 ( ) ) ; final org . IDENT_4 . plugin . IDENT_5 . IDENT_6 IDENT_7 = new org . IDENT_4 . plugin . IDENT_5 . METHOD_3 ( new byte [ 0 ] , new java . net . METHOD_4 ( STRING_1 , INT_0 ) ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( org . IDENT_0 . plugins . IDENT_1 . parser . IDENT_2 , org . IDENT_4 . plugin . IDENT_5 . METHOD_3 ) { final java . util . Map < java . lang . String , java . lang . Object > fields = IDENT_1 . METHOD_1 ( ) ; if ( ( fields != null ) && ( ! ( fields . isEmpty ( ) ) ) ) { final java . lang . String IDENT_8 = ( ( java . lang . String ) ( fields . METHOD_6 ( IDENT_9 . IDENT_10 . METHOD_7 ( ) , fields . get ( IDENT_9 . IDENT_10 . METHOD_8 ( ) ) ) ) ) ; if ( ! ( METHOD_9 ( IDENT_8 ) ) ) { return IDENT_8 ; } } if ( ! ( METHOD_9 ( IDENT_1 . host ( ) ) ) ) { return IDENT_1 . host ( ) ; } final org . IDENT_4 . plugin . IDENT_11 address = IDENT_12 . METHOD_10 ( ) ; final java . net . METHOD_4 IDENT_13 ; if ( address == null ) { IDENT_13 = null ; } else { IDENT_13 = address . METHOD_11 ( ) ; } return IDENT_13 == null ? STRING_2 : IDENT_13 . METHOD_12 ( ) . toString ( ) ; }
org . junit . Assert . assertEquals ( STRING_0 , codec . METHOD_5 ( IDENT_3 , IDENT_7 ) ) 