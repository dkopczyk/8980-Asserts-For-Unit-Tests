METHOD_0 ( ) { METHOD_1 ( org . apache . IDENT_0 . stream . storage . impl . service . IDENT_1 . IDENT_2 ) ; org . apache . IDENT_0 . stream . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 IDENT_7 = org . apache . IDENT_0 . stream . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_2 ( ) ; when ( IDENT_8 . range ( any ( org . apache . IDENT_0 . stream . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 . class ) ) ) . thenReturn ( org . apache . IDENT_0 . common . concurrent . IDENT_10 . value ( IDENT_7 ) ) ; container . METHOD_3 ( ) . METHOD_4 ( ) . put ( org . apache . IDENT_0 . stream . storage . impl . service . IDENT_1 . IDENT_11 , IDENT_8 ) ; org . apache . IDENT_0 . stream . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 request = METHOD_5 ( ) ; org . apache . IDENT_0 . stream . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 response = org . apache . IDENT_0 . common . concurrent . IDENT_10 . result ( container . range ( request ) ) ; "<AssertPlaceHolder>" ; } range ( org . apache . IDENT_0 . stream . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 ) { org . apache . IDENT_0 . stream . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_12 header = request . METHOD_6 ( ) ; if ( ( header . METHOD_7 ( ) ) <= 0L ) { return java . util . concurrent . IDENT_13 . METHOD_8 ( org . apache . IDENT_0 . stream . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_9 ( ) . METHOD_10 ( org . apache . IDENT_0 . stream . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_14 . METHOD_9 ( ) . METHOD_11 ( IDENT_15 . IDENT_16 ) . METHOD_12 ( request . METHOD_6 ( ) ) . build ( ) ) . build ( ) ) ; } org . apache . IDENT_0 . stream . protocol . IDENT_17 IDENT_18 = org . apache . IDENT_0 . stream . protocol . IDENT_17 . of ( header . METHOD_13 ( ) , header . METHOD_7 ( ) ) ; org . apache . IDENT_0 . stream . storage . api . IDENT_4 . IDENT_19 store = IDENT_20 . METHOD_14 ( IDENT_18 ) ; if ( null != store ) { return store . range ( request ) ; } else { return IDENT_20 . METHOD_15 ( IDENT_21 , IDENT_18 ) . METHOD_16 ( ( s ) -> s . range ( request ) ) ; } }
org . junit . Assert . assertSame ( IDENT_7 , response ) 