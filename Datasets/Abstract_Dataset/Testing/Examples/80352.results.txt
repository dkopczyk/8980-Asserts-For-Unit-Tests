METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 extension = new org . IDENT_0 . IDENT_1 . METHOD_1 ( ) { @ org . IDENT_0 . store . Override public java . lang . String METHOD_2 ( ) { return "test" ; } @ org . IDENT_0 . store . Override public boolean METHOD_3 ( ) { return false ; } @ org . IDENT_0 . store . Override public byte [ ] METHOD_4 ( ) { return new byte [ 0 ] ; } @ org . IDENT_0 . store . Override public void METHOD_5 ( org . IDENT_0 . IDENT_1 . IDENT_3 IDENT_4 , byte [ ] data ) throws org . IDENT_0 . store . Exception { throw new java . lang . METHOD_6 ( ) ; } } ; IDENT_5 . METHOD_7 ( extension ) ; org . IDENT_0 . IDENT_1 . IDENT_6 . IDENT_3 IDENT_7 = new org . IDENT_0 . IDENT_1 . METHOD_8 ( ) . METHOD_9 ( IDENT_5 ) ; org . IDENT_0 . IDENT_1 . IDENT_3 IDENT_1 = new org . IDENT_0 . IDENT_1 . METHOD_8 ( ) . METHOD_10 ( org . IDENT_0 . store . IDENT_8 . IDENT_9 , new org . IDENT_0 . IDENT_1 . METHOD_1 [ ] { extension } , IDENT_7 ) ; "<AssertPlaceHolder>" ; } METHOD_11 ( ) { IDENT_10 . METHOD_12 ( ) ; try { return org . IDENT_0 . IDENT_1 . ImmutableMap . METHOD_13 ( IDENT_11 ) ; } finally { METHOD_12 . METHOD_14 ( ) ; } }
org . junit . Assert . assertEquals ( 0 , IDENT_1 . METHOD_11 ( ) . size ( ) ) 