METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 node = node ( STRING_0 ) ; org . IDENT_0 . IDENT_3 . interceptor . IDENT_4 . METHOD_1 ( ) . METHOD_2 ( org . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_6 . class ) . METHOD_3 ( STRING_1 ) . METHOD_4 ( new org . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_6 . METHOD_5 ( ( - INT_0 ) ) ) . apply ( node ) ; node . exec ( new java . util . concurrent . IDENT_7 < java . lang . IDENT_8 > ( ) { @ org . IDENT_0 . IDENT_1 . IDENT_5 . Override public org . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_8 call ( ) throws org . IDENT_0 . IDENT_1 . IDENT_5 . Exception { try { org . IDENT_0 . IDENT_1 . IDENT_5 . IDENT_6 . METHOD_6 ( "test" ) ; org . junit . Assert . fail ( STRING_2 ) ; } catch ( java . lang . IllegalStateException e ) { "<AssertPlaceHolder>" ; } return null ; } } ) ; } getMessage ( ) { return message ; }
org . junit . Assert . assertEquals ( "test" , e . getMessage ( ) ) 