METHOD_0 ( ) { org . IDENT_0 . factory . IDENT_1 . test . IDENT_2 . logger . info ( STRING_0 ) ; try { java . lang . String user = STRING_1 ; java . lang . String IDENT_3 = STRING_2 ; java . io . File file = new java . io . File ( STRING_3 ) ; byte [ ] IDENT_4 = new byte [ ( ( int ) ( file . length ( ) ) ) ] ; new java . io . METHOD_1 ( file ) . read ( IDENT_4 ) ; org . IDENT_0 . factory . IDENT_1 . test . IDENT_2 . IDENT_5 = port . METHOD_2 ( user , IDENT_3 , IDENT_4 ) ; org . IDENT_0 . factory . IDENT_1 . test . IDENT_2 . logger . info ( ( STRING_4 + ( org . IDENT_0 . factory . IDENT_1 . test . IDENT_2 . IDENT_5 ) ) ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; org . junit . Assert . fail ( e . getMessage ( ) ) ; } } METHOD_2 ( java . lang . String , java . lang . String , byte [ ] ) { org . IDENT_0 . factory . IDENT_1 . IDENT_6 . logger . debug ( STRING_5 ) ; init ( ) ; org . IDENT_0 . factory . IDENT_1 . IDENT_7 IDENT_8 = new org . IDENT_0 . factory . IDENT_1 . METHOD_3 ( new javax . mail . util . METHOD_4 ( IDENT_9 , STRING_6 ) ) ; java . io . File f = org . IDENT_0 . factory . IDENT_1 . ws . IDENT_10 . METHOD_5 ( IDENT_8 ) ; org . IDENT_0 . factory . IDENT_1 . ws . IDENT_11 IDENT_12 = new org . IDENT_0 . factory . IDENT_1 . ws . METHOD_6 ( ) ; if ( IDENT_12 . METHOD_7 ( f ) ) { try { org . IDENT_0 . factory . IDENT_1 . ws . IDENT_13 control = new org . IDENT_0 . factory . IDENT_1 . ws . METHOD_8 ( props ) ; java . lang . String [ ] ret = control . create ( IDENT_3 , f ) ; return ret [ 0 ] ; } catch ( java . lang . Exception e ) { org . IDENT_0 . factory . IDENT_1 . IDENT_6 . logger . error ( e ) ; e . printStackTrace ( ) ; throw new org . IDENT_0 . factory . IDENT_1 . METHOD_9 ( e ) ; } } else { org . IDENT_0 . factory . IDENT_1 . IDENT_14 e = new org . IDENT_0 . factory . IDENT_1 . METHOD_10 ( IDENT_12 . getMessage ( ) ) ; org . IDENT_0 . factory . IDENT_1 . IDENT_6 . logger . error ( e ) ; e . printStackTrace ( ) ; throw new org . IDENT_0 . factory . IDENT_1 . METHOD_9 ( e ) ; } }
org . junit . Assert . assertNotNull ( org . IDENT_0 . factory . IDENT_1 . test . IDENT_2 . IDENT_5 ) 