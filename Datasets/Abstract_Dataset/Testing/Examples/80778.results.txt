METHOD_0 ( ) { org . mockito . Mockito . when ( IDENT_0 . query ( org . mockito . Mockito . any ( ) , org . mockito . Mockito . any ( ) ) ) . thenReturn ( new com . github . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( STRING_0 ) . METHOD_2 ( ) ) ; "<AssertPlaceHolder>" ; verify ( IDENT_0 , times ( 1 ) ) . query ( org . mockito . Mockito . METHOD_3 ( org . hamcrest . Matchers . METHOD_4 ( org . hamcrest . Matchers . METHOD_5 ( STRING_1 , org . hamcrest . Matchers . METHOD_6 ( STRING_2 ) ) , org . hamcrest . Matchers . METHOD_5 ( STRING_3 , org . hamcrest . Matchers . equalTo ( com . github . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 ) ) ) ) , org . mockito . Mockito . eq ( TimeUnit . IDENT_7 ) ) ; METHOD_7 ( IDENT_0 ) ; } METHOD_0 ( ) { org . mockito . Mockito . when ( IDENT_0 . query ( org . mockito . Mockito . any ( ) , org . mockito . Mockito . any ( ) ) ) . thenReturn ( new com . github . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . METHOD_1 ( STRING_0 ) . METHOD_2 ( ) ) ; org . junit . Assert . assertThat ( IDENT_3 . METHOD_0 ( ) , org . hamcrest . Matchers . equalTo ( java . util . Optional . of ( new org . joda . time . METHOD_8 ( INT_0 , org . joda . time . IDENT_8 . IDENT_9 ) ) ) ) ; verify ( IDENT_0 , times ( 1 ) ) . query ( org . mockito . Mockito . METHOD_3 ( org . hamcrest . Matchers . METHOD_4 ( org . hamcrest . Matchers . METHOD_5 ( STRING_1 , org . hamcrest . Matchers . METHOD_6 ( STRING_2 ) ) , org . hamcrest . Matchers . METHOD_5 ( STRING_3 , org . hamcrest . Matchers . equalTo ( com . github . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 ) ) ) ) , org . mockito . Mockito . eq ( TimeUnit . IDENT_7 ) ) ; METHOD_7 ( IDENT_0 ) ; }
org . junit . Assert . assertThat ( IDENT_3 . METHOD_0 ( ) , org . hamcrest . Matchers . equalTo ( java . util . Optional . of ( new org . joda . time . METHOD_8 ( INT_0 , org . joda . time . IDENT_8 . IDENT_9 ) ) ) ) 