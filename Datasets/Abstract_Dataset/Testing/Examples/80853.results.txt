stream ( ) { final java . util . List < com . IDENT_0 . IDENT_1 . metrics . IDENT_2 . IDENT_3 > expected = com . IDENT_0 . IDENT_4 . remote . IDENT_5 . IDENT_6 . METHOD_0 ( ) . collect ( java . util . stream . IDENT_7 . toList ( ) ) ; when ( IDENT_5 . stream ( ) ) . METHOD_1 ( ( IDENT_8 ) -> METHOD_0 ( ) ) ; final java . util . List < com . IDENT_0 . IDENT_1 . metrics . IDENT_2 . IDENT_3 > result = client . stream ( ) . collect ( java . util . stream . IDENT_7 . toList ( ) ) ; "<AssertPlaceHolder>" ; verify ( IDENT_5 , times ( 1 ) ) . stream ( ) ; METHOD_2 ( IDENT_5 ) ; } collect ( java . util . stream . IDENT_9 ) { try ( final java . util . stream . IDENT_10 < T > s = stream . get ( ) ) { return s . collect ( IDENT_11 ) ; } }
org . junit . Assert . assertEquals ( expected , result ) 