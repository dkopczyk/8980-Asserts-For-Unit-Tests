METHOD_0 ( ) { METHOD_1 ( ) ; channel . pipeline ( ) . METHOD_2 ( new io . netty . channel . METHOD_3 ( ) { @ io . grpc . IDENT_0 . internal . Override public void write ( io . netty . channel . IDENT_1 ctx , java . lang . Object msg , io . netty . channel . IDENT_2 IDENT_3 ) throws java . lang . Exception { throw new java . lang . Exception ( STRING_0 ) ; } } ) ; java . lang . String message = STRING_1 ; final java . util . concurrent . atomic . IDENT_4 IDENT_5 = new java . util . concurrent . atomic . METHOD_4 ( ) ; for ( int IDENT_6 = 0 ; IDENT_6 < ( message . length ( ) ) ; ++ IDENT_6 ) { io . netty . buffer . IDENT_7 in = io . netty . buffer . IDENT_8 . METHOD_5 ( message , IDENT_6 , 1 , io . grpc . IDENT_0 . internal . UTF_8 ) ; @ io . grpc . IDENT_0 . internal . METHOD_6 ( STRING_2 ) java . util . concurrent . IDENT_9 < ? > IDENT_10 = channel . write ( in ) . METHOD_7 ( new io . netty . channel . METHOD_8 ( ) { @ io . grpc . IDENT_0 . internal . Override public void METHOD_9 ( io . netty . channel . IDENT_11 future ) throws java . lang . Exception { if ( ! ( future . METHOD_10 ( ) ) ) { IDENT_5 . METHOD_11 ( ) ; } } } ) ; } channel . METHOD_12 ( ) ; "<AssertPlaceHolder>" ; } get ( ) { return io . grpc . IDENT_12 . IDENT_13 . IDENT_14 ; }
org . junit . Assert . assertEquals ( message . length ( ) , IDENT_5 . get ( ) ) 