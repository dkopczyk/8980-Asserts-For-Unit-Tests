METHOD_0 ( ) { server . start ( IDENT_0 ) ; client = METHOD_1 ( server ) ; io . grpc . internal . IDENT_1 . METHOD_2 ( client , IDENT_2 ) ; io . grpc . internal . IDENT_1 . IDENT_3 IDENT_4 = IDENT_0 . METHOD_3 ( io . grpc . internal . IDENT_1 . IDENT_5 , TimeUnit . IDENT_6 ) ; IDENT_7 = IDENT_4 . transport ; io . grpc . IDENT_8 . IDENT_9 < java . lang . String > IDENT_10 = IDENT_8 . IDENT_9 . of ( STRING_0 , IDENT_8 . IDENT_11 ) ; io . grpc . IDENT_8 IDENT_12 = new io . grpc . METHOD_4 ( ) ; IDENT_12 . put ( IDENT_10 , STRING_1 ) ; IDENT_12 . put ( METHOD_4 . IDENT_9 . of ( STRING_2 , METHOD_4 . IDENT_13 ) , new byte [ IDENT_14 . IDENT_15 ] ) ; io . grpc . internal . IDENT_16 IDENT_17 = client . METHOD_5 ( IDENT_18 , new io . grpc . METHOD_4 ( ) , IDENT_19 ) ; io . grpc . internal . IDENT_1 . IDENT_20 IDENT_21 = new io . grpc . internal . IDENT_1 . METHOD_6 ( ) ; IDENT_17 . start ( IDENT_21 ) ; IDENT_17 . METHOD_7 ( IDENT_18 . METHOD_8 ( "foo" ) ) ; IDENT_17 . METHOD_9 ( ) ; IDENT_17 . request ( 1 ) ; io . grpc . internal . IDENT_1 . IDENT_22 IDENT_23 = IDENT_4 . METHOD_10 ( io . grpc . internal . IDENT_1 . IDENT_5 , TimeUnit . IDENT_6 ) ; IDENT_23 . stream . request ( 1 ) ; IDENT_23 . stream . METHOD_11 ( new io . grpc . METHOD_4 ( ) ) ; IDENT_23 . stream . METHOD_7 ( IDENT_18 . METHOD_12 ( STRING_3 ) ) ; IDENT_23 . stream . close ( Status . IDENT_24 , IDENT_12 ) ; io . grpc . Status status = IDENT_21 . status . get ( io . grpc . internal . IDENT_1 . IDENT_5 , TimeUnit . IDENT_6 ) ; java . util . List < io . grpc . Status . IDENT_25 > IDENT_26 = java . util . Arrays . asList ( Status . IDENT_25 . IDENT_27 , Status . IDENT_25 . IDENT_28 , Status . IDENT_25 . IDENT_29 ) ; if ( ! ( IDENT_26 . contains ( status . getCode ( ) ) ) ) { org . junit . Assert . fail ( ( STRING_4 + status ) ) ; } io . grpc . METHOD_4 metadata = IDENT_21 . IDENT_30 . get ( io . grpc . internal . IDENT_1 . IDENT_5 , TimeUnit . IDENT_6 ) ; "<AssertPlaceHolder>" ; } get ( int ) { return values [ id ] ; }
org . junit . Assert . assertNull ( metadata . get ( IDENT_10 ) ) 