METHOD_0 ( ) { IDENT_0 . request ( 1 ) ; IDENT_1 . METHOD_1 ( 10 , TimeUnit . IDENT_2 ) ; IDENT_0 . METHOD_2 ( io . grpc . internal . IDENT_3 . buffer ( new byte [ ] { 0 , 0 , 0 , 0 , 7 , 3 , INT_0 , 1 , 5 , 9 } ) ) ; verify ( listener , METHOD_3 ( ) ) . METHOD_4 ( METHOD_5 ( ) ) ; METHOD_6 ( listener ) ; IDENT_0 . METHOD_2 ( io . grpc . internal . IDENT_3 . buffer ( new byte [ ] { 2 , 6 } ) ) ; verify ( listener ) . METHOD_7 ( IDENT_4 . METHOD_8 ( ) ) ; "<AssertPlaceHolder>" ; verify ( listener , METHOD_3 ( ) ) . METHOD_4 ( METHOD_5 ( ) ) ; METHOD_6 ( listener ) ; if ( IDENT_5 ) { + 2 ) , 7 ) ; } else { io . grpc . internal . IDENT_3 . METHOD_9 ( IDENT_6 , IDENT_7 . METHOD_10 ( ) , IDENT_1 , 7 , 7 ) ; } } bytes ( java . io . InputStream ) { try { return com . google . common . IDENT_8 . IDENT_9 . asList ( com . google . common . io . IDENT_10 . toByteArray ( in ) ) ; } catch ( java . io . IOException ex ) { throw new java . lang . METHOD_11 ( ex ) ; } }
org . junit . Assert . assertEquals ( com . google . common . IDENT_8 . IDENT_9 . asList ( new byte [ ] { 3 , INT_0 , 1 , 5 , 9 , 2 , 6 } ) , io . grpc . internal . IDENT_3 . bytes ( IDENT_4 . getValue ( ) . next ( ) ) ) 