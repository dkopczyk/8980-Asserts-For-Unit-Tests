METHOD_0 ( ) { java . io . ByteArrayInputStream in = new java . io . ByteArrayInputStream ( "foo" . getBytes ( IDENT_0 . UTF_8 ) ) ; io . grpc . internal . IDENT_1 . IDENT_2 stream = new io . grpc . internal . IDENT_1 . METHOD_1 ( in , 3 , IDENT_3 ) ; byte [ ] buf = new byte [ 10 ] ; int read = stream . read ( buf , 0 , buf . length ) ; "<AssertPlaceHolder>" ; stream . close ( ) ; io . grpc . internal . IDENT_4 . METHOD_2 ( IDENT_5 , 3 ) ; } read ( byte [ ] , int , int ) { if ( ( message ) != null ) { int size = message . METHOD_3 ( ) ; if ( size == 0 ) { message = null ; IDENT_6 = null ; return - 1 ; } if ( len >= size ) { com . google . IDENT_7 . IDENT_8 . IDENT_9 output = com . google . IDENT_7 . IDENT_8 . IDENT_9 . newInstance ( b , IDENT_10 , size ) ; message . METHOD_4 ( output ) ; output . METHOD_5 ( ) ; message = null ; IDENT_6 = null ; return size ; } METHOD_6 ( ) ; } if ( ( IDENT_6 ) != null ) { return IDENT_6 . read ( b , IDENT_10 , len ) ; } return - 1 ; }
org . junit . Assert . assertEquals ( 3 , read ) 