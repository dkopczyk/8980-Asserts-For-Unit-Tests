METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_3 IDENT_4 = mock ( IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_3 . class ) ; when ( IDENT_4 . METHOD_1 ( ) ) . thenReturn ( STRING_0 ) ; when ( IDENT_4 . isEmpty ( ) ) . thenReturn ( false ) ; IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_3 IDENT_5 = mock ( IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_3 . class ) ; when ( IDENT_5 . isEmpty ( ) ) . thenReturn ( true ) ; when ( IDENT_4 . METHOD_1 ( ) ) . thenReturn ( STRING_1 ) ; session . add ( IDENT_4 ) ; session . add ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } isEmpty ( ) { return METHOD_2 ( streams . values ( ) , new com . google . common . base . IDENT_6 < IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_3 > ( ) { @ IDENT_0 . IDENT_1 . IDENT_2 . model . Override public boolean apply ( @ org . IDENT_7 . IDENT_8 . IDENT_9 IDENT_0 . IDENT_1 . IDENT_2 . model . IDENT_3 input ) { return input . isEmpty ( ) ; } } ) ; }
org . junit . Assert . assertThat ( session . isEmpty ( ) , org . hamcrest . CoreMatchers . equalTo ( false ) ) 