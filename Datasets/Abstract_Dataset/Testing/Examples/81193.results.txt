METHOD_0 ( ) { byte [ ] expected = new byte [ IDENT_0 . MAX_VALUE ] ; this . random . METHOD_1 ( expected ) ; net . sf . IDENT_1 . io . IDENT_2 < java . io . InputStream , IDENT_3 > channel = this . strategy . METHOD_2 ( ) ; IDENT_3 IDENT_4 = channel . write ( new java . io . ByteArrayInputStream ( expected ) ) ; try ( java . io . InputStream input = channel . read ( IDENT_4 ) ) { byte [ ] result = new byte [ IDENT_0 . MAX_VALUE ] ; input . read ( result ) ; "<AssertPlaceHolder>" ; } } read ( IDENT_5 extends net . sf . IDENT_1 . IDENT_6 ) { this . IDENT_7 = database . METHOD_3 ( ) ; this . IDENT_8 = database . METHOD_4 ( ) ; this . IDENT_9 = database . METHOD_5 ( ) ; this . IDENT_10 = database . METHOD_6 ( ) ; return this ; }
org . junit . Assert . assertArrayEquals ( expected , result ) 