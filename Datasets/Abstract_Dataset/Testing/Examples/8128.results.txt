METHOD_0 ( ) { final org . apache . calcite . tools . IDENT_0 builder = org . apache . calcite . tools . IDENT_0 . create ( org . apache . calcite . test . IDENT_1 . config ( ) . build ( ) ) ; org . apache . calcite . IDENT_2 . IDENT_3 root = builder . METHOD_1 ( STRING_0 ) . METHOD_2 ( builder . METHOD_3 ( builder . field ( 1 ) , builder . call ( IDENT_4 . IDENT_5 , builder . field ( 4 ) , builder . field ( 3 ) ) , builder . field ( 1 ) ) , builder . METHOD_4 ( STRING_1 ) , builder . METHOD_5 ( builder . call ( IDENT_4 . IDENT_5 , builder . field ( 3 ) , builder . METHOD_6 ( 1 ) ) ) . as ( STRING_2 ) ) . build ( ) ; final java . lang . String expected = "" + ( ( STRING_3 + STRING_4 ) + STRING_5 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( java . lang . String ) { return org . apache . calcite . test . Matchers . METHOD_8 ( org . hamcrest . core . Is . is ( value ) , ( input ) -> { return org . apache . calcite . util . IDENT_6 . METHOD_9 ( org . apache . calcite . plan . IDENT_7 . toString ( input ) ) ; } ) ; }
org . junit . Assert . assertThat ( root , org . apache . calcite . test . Matchers . METHOD_7 ( expected ) ) 