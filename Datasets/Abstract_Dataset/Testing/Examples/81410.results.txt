METHOD_0 ( ) { java . lang . String IDENT_0 = com . IDENT_1 . IDENT_2 . util . IDENT_3 . METHOD_1 ( STRING_0 , STRING_1 , STRING_2 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String , java . lang . String ) { if ( ( ! ( IDENT_4 . METHOD_2 ( "/" ) ) ) && ( ! ( file . startsWith ( "/" ) ) ) ) { IDENT_4 += "/" ; } java . net . URL url = null ; try { url = new java . net . URL ( new java . net . URL ( IDENT_4 ) , file ) ; if ( ( file . startsWith ( STRING_3 ) ) && ( IDENT_5 . startsWith ( STRING_3 ) ) ) { java . net . URL IDENT_6 = new java . net . URL ( IDENT_5 ) ; IDENT_5 = ( ( ( IDENT_6 . METHOD_3 ( ) ) + STRING_4 ) + ( IDENT_6 . METHOD_4 ( ) ) ) + ( ( IDENT_6 . METHOD_5 ( ) ) != ( - 1 ) ? STRING_5 + ( IDENT_6 . METHOD_5 ( ) ) : "" ) ; } } catch ( java . net . IDENT_7 e ) { com . IDENT_1 . IDENT_2 . util . IDENT_3 . IDENT_8 . error ( ( ( ( STRING_6 + IDENT_4 ) + file ) + STRING_7 ) , e ) ; } return IDENT_5 + ( url . getPath ( ) ) ; }
org . junit . Assert . assertEquals ( STRING_1 , IDENT_0 ) 