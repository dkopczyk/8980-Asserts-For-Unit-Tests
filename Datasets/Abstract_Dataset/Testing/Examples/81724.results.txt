METHOD_0 ( ) { byte [ ] data = new byte [ INT_0 ] ; java . nio . ByteBuffer buffer = java . nio . ByteBuffer . METHOD_1 ( data ) ; buffer . METHOD_2 ( ( ( short ) ( IDENT_0 . IDENT_1 ) ) ) ; buffer . METHOD_2 ( ( ( short ) ( 1 ) ) ) ; java . awt . geom . IDENT_2 path = new com . IDENT_3 . IDENT_4 . path . METHOD_3 ( data ) . path ( ) ; "<AssertPlaceHolder>" ; } path ( ) { java . util . List < java . util . List < com . IDENT_3 . IDENT_4 . path . IDENT_0 > > IDENT_5 = new java . util . ArrayList < java . util . List < com . IDENT_3 . IDENT_4 . path . IDENT_0 > > ( ) ; java . util . List < com . IDENT_3 . IDENT_4 . path . IDENT_0 > IDENT_6 = null ; int IDENT_7 = 0 ; com . IDENT_3 . IDENT_4 . path . IDENT_0 IDENT_8 ; while ( ( IDENT_8 = METHOD_4 ( ) ) != null ) { if ( com . IDENT_3 . IDENT_4 . path . METHOD_3 . IDENT_9 ) { System . out . println ( IDENT_8 ) ; } if ( ( ( IDENT_8 . IDENT_10 ) == ( IDENT_0 . IDENT_11 ) ) || ( ( IDENT_8 . IDENT_10 ) == ( IDENT_0 . IDENT_1 ) ) ) { if ( IDENT_6 != null ) { if ( IDENT_7 != ( IDENT_6 . size ( ) ) ) { throw new javax . IDENT_4 . METHOD_5 ( java . lang . String . format ( STRING_0 , IDENT_7 , IDENT_6 . size ( ) ) ) ; } IDENT_5 . add ( IDENT_6 ) ; } IDENT_6 = new java . util . ArrayList < com . IDENT_3 . IDENT_4 . path . IDENT_0 > ( IDENT_8 . length ) ; IDENT_7 = IDENT_8 . length ; } else if ( ( ( ( ( IDENT_8 . IDENT_10 ) == ( IDENT_0 . IDENT_12 ) ) || ( ( IDENT_8 . IDENT_10 ) == ( IDENT_0 . IDENT_13 ) ) ) || ( ( IDENT_8 . IDENT_10 ) == ( IDENT_0 . IDENT_14 ) ) ) || ( ( IDENT_8 . IDENT_10 ) == ( IDENT_0 . IDENT_15 ) ) ) { if ( IDENT_6 == null ) { throw new javax . IDENT_4 . METHOD_5 ( STRING_1 ) ; } if ( ( IDENT_6 . size ( ) ) >= IDENT_7 ) { throw new javax . IDENT_4 . METHOD_5 ( java . lang . String . format ( STRING_2 , IDENT_7 , IDENT_6 . size ( ) ) ) ; } IDENT_6 . add ( IDENT_8 ) ; } } if ( IDENT_6 != null ) { if ( IDENT_7 != ( IDENT_6 . size ( ) ) ) { throw new javax . IDENT_4 . METHOD_5 ( java . lang . String . format ( STRING_0 , IDENT_7 , IDENT_6 . size ( ) ) ) ; } IDENT_5 . add ( IDENT_6 ) ; } return METHOD_6 ( IDENT_5 ) ; }
org . junit . Assert . assertNotNull ( path ) 