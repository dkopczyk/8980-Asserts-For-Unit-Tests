METHOD_0 ( ) { com . IDENT_0 . servlet . image . IDENT_1 context = mock ( com . IDENT_0 . servlet . image . IDENT_1 . class ) ; com . IDENT_0 . servlet . image . IDENT_2 IDENT_3 = mock ( com . IDENT_0 . servlet . image . IDENT_2 . class ) ; when ( IDENT_3 . METHOD_1 ( ) ) . thenReturn ( STRING_0 ) ; when ( IDENT_3 . METHOD_2 ( ) ) . thenReturn ( context ) ; when ( IDENT_3 . METHOD_3 ( ) ) . thenReturn ( new com . IDENT_0 . util . METHOD_4 ( STRING_1 ) ) ; com . IDENT_0 . servlet . image . IDENT_4 . IDENT_5 filter = new com . IDENT_0 . servlet . image . IDENT_4 . METHOD_5 ( ) ; filter . init ( IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( javax . servlet . IDENT_6 ) { boolean METHOD_6 = false ; if ( IDENT_7 instanceof javax . servlet . http . IDENT_8 ) { javax . servlet . http . IDENT_8 request = ( ( javax . servlet . http . IDENT_8 ) ( IDENT_7 ) ) ; java . lang . String accept = METHOD_7 ( request ) ; java . lang . String IDENT_9 = METHOD_2 ( ) . METHOD_8 ( request . METHOD_9 ( ) ) ; if ( ! ( com . IDENT_0 . lang . IDENT_10 . contains ( accept , IDENT_9 ) ) ) { METHOD_6 = true ; } } return METHOD_6 || ( super . METHOD_6 ( IDENT_7 ) ) ; }
org . junit . Assert . assertTrue ( filter . METHOD_6 ( mock ( javax . servlet . http . IDENT_8 . class ) ) ) 