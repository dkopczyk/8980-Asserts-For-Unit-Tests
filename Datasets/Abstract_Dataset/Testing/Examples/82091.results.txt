METHOD_0 ( ) { java . util . List < org . IDENT_0 . IDENT_1 . api . model . events . IDENT_2 > IDENT_3 = new java . util . ArrayList < org . IDENT_0 . IDENT_1 . api . model . events . IDENT_2 > ( ) ; org . IDENT_0 . IDENT_1 . api . model . events . IDENT_2 IDENT_4 = new org . IDENT_0 . IDENT_1 . api . model . events . METHOD_1 ( ) ; IDENT_4 . METHOD_2 ( STRING_0 ) ; IDENT_3 . add ( IDENT_4 ) ; try { IDENT_5 . store ( null , IDENT_3 ) ; } catch ( org . IDENT_0 . IDENT_1 . server . api . services . IDENT_6 e ) { org . junit . Assert . fail ( ( STRING_1 + e ) ) ; } "<AssertPlaceHolder>" ; } get ( java . lang . String , java . lang . String ) { org . IDENT_0 . IDENT_1 . server . api . services . IDENT_7 < ? > property = IDENT_8 . get ( id ) ; if ( property == null ) { property = METHOD_3 ( id ) ; if ( property == null ) { return null ; } try { store ( IDENT_9 , property ) ; } catch ( org . IDENT_0 . IDENT_1 . server . api . services . IDENT_6 e ) { org . IDENT_0 . IDENT_1 . server . IDENT_10 . IDENT_11 . log . METHOD_4 ( java . lang . String . format ( STRING_2 , property ) ) ; } } if ( org . IDENT_0 . IDENT_1 . server . IDENT_10 . IDENT_11 . log . METHOD_5 ( IDENT_12 . IDENT_13 ) ) { org . IDENT_0 . IDENT_1 . server . IDENT_10 . IDENT_11 . log . METHOD_6 ( ( ( ( STRING_3 + id ) + STRING_4 ) + property ) ) ; } return property ; }
org . junit . Assert . assertEquals ( IDENT_4 , IDENT_5 . get ( null , STRING_0 ) ) 