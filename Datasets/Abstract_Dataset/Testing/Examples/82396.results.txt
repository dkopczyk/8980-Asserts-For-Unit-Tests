METHOD_0 ( ) { final java . util . concurrent . IDENT_0 IDENT_1 = new java . util . concurrent . METHOD_1 ( 1 ) ; final java . util . concurrent . atomic . IDENT_2 IDENT_3 = new java . util . concurrent . atomic . METHOD_2 ( ) ; final java . lang . Thread IDENT_4 = new java . lang . Thread ( ) { @ com . IDENT_5 . IDENT_6 . utils . Override public void run ( ) { com . IDENT_5 . IDENT_6 . utils . IDENT_7 . METHOD_3 ( IDENT_1 ) ; } } ; java . lang . Thread IDENT_8 = new java . lang . Thread ( ) { @ com . IDENT_5 . IDENT_6 . utils . Override public void run ( ) { com . IDENT_5 . IDENT_6 . utils . IDENT_7 . METHOD_4 ( IDENT_4 ) ; IDENT_3 . set ( java . lang . Thread . METHOD_5 ( ) . METHOD_6 ( ) ) ; } } ; IDENT_4 . start ( ) ; IDENT_8 . start ( ) ; IDENT_8 . METHOD_7 ( ) ; com . IDENT_5 . IDENT_6 . utils . IDENT_7 . METHOD_4 ( IDENT_8 ) ; IDENT_1 . METHOD_8 ( ) ; com . IDENT_5 . IDENT_6 . utils . IDENT_7 . METHOD_4 ( IDENT_4 ) ; "<AssertPlaceHolder>" ; } get ( ) { MOD_0 ( this ) { while ( ( result ) == null ) { METHOD_9 ( ) ; } } if ( ( result ) instanceof java . lang . Throwable ) { throw new java . util . concurrent . METHOD_10 ( ( ( java . lang . Throwable ) ( result ) ) ) ; } else { return ( ( java . lang . String ) ( result ) ) ; } }
org . junit . Assert . assertTrue ( METHOD_6 . get ( ) ) 