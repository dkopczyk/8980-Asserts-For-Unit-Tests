METHOD_0 ( ) { double [ ] IDENT_0 = new double [ ] { FLOAT_0 , FLOAT_0 , FLOAT_0 , FLOAT_0 , FLOAT_0 } ; for ( int IDENT_1 = 0 ; IDENT_1 < 5 ; ++ IDENT_1 ) { org . hipparchus . analysis . IDENT_2 . IDENT_3 factory = new org . hipparchus . analysis . IDENT_2 . METHOD_1 ( 1 , IDENT_1 ) ; for ( double x = FLOAT_1 ; x < FLOAT_2 ; x += FLOAT_3 ) { double IDENT_4 = org . hipparchus . util . IDENT_5 . exp ( x ) ; org . hipparchus . analysis . IDENT_2 . IDENT_6 exp = org . hipparchus . util . IDENT_5 . exp ( factory . METHOD_2 ( 0 , x ) ) ; for ( int n = 0 ; n <= IDENT_1 ; ++ n ) { "<AssertPlaceHolder>" ; } } } } METHOD_3 ( int [ ] ) { return data [ METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( IDENT_7 ) ] ; }
org . junit . Assert . assertEquals ( IDENT_4 , exp . METHOD_3 ( n ) , IDENT_0 [ n ] ) 