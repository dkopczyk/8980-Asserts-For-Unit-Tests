METHOD_0 ( ) { final org . hipparchus . IDENT_0 . IDENT_1 IDENT_2 = new org . hipparchus . IDENT_0 . IDENT_3 . METHOD_1 ( 0 , 1 ) ; double x = - 10 ; double expected = FLOAT_0 ; double v = IDENT_2 . METHOD_2 ( x ) ; double IDENT_4 = FLOAT_1 ; "<AssertPlaceHolder>" ; } METHOD_2 ( int ) { double ret ; int [ ] domain = METHOD_3 ( IDENT_5 , IDENT_6 , IDENT_7 ) ; if ( x < ( domain [ 0 ] ) ) { ret = 0.0 ; } else if ( x >= ( domain [ 1 ] ) ) { ret = 1.0 ; } else { ret = METHOD_4 ( domain [ 0 ] , x , 1 ) ; } return ret ; }
org . junit . Assert . assertEquals ( 1 , ( v / expected ) , IDENT_4 ) 