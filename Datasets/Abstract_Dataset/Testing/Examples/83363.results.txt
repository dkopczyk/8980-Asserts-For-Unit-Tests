METHOD_0 ( ) { final double [ ] IDENT_0 = new double [ ] { - FLOAT_0 } ; final double [ ] [ ] IDENT_1 = new double [ ] [ ] { new double [ ] { 1 } } ; final org . hipparchus . IDENT_2 . IDENT_3 . IDENT_4 IDENT_5 = new org . hipparchus . IDENT_2 . IDENT_3 . METHOD_1 ( IDENT_0 , IDENT_1 ) ; final org . hipparchus . IDENT_2 . IDENT_6 . IDENT_7 IDENT_8 = new org . hipparchus . IDENT_2 . IDENT_6 . METHOD_2 ( IDENT_0 [ 0 ] , IDENT_1 [ 0 ] [ 0 ] ) ; final java . util . IDENT_9 IDENT_10 = new java . util . METHOD_3 ( ) ; final int IDENT_11 = 100 ; final double IDENT_12 = java . lang . Math . METHOD_4 ( 1.0 ) ; for ( int i = 0 ; i < IDENT_11 ; i ++ ) { final double v = ( ( IDENT_10 . METHOD_5 ( ) ) * 10 ) - 5 ; "<AssertPlaceHolder>" ; } } METHOD_6 ( double ) { if ( x < ( IDENT_0 ) ) { return Double . IDENT_13 ; } final double IDENT_14 = x - ( IDENT_0 ) ; final double f = ( IDENT_15 ) / IDENT_14 ; return ( ( org . hipparchus . util . IDENT_16 . METHOD_7 ( ( f / ( org . hipparchus . util . IDENT_16 . IDENT_17 ) ) ) ) * ( org . hipparchus . util . IDENT_16 . exp ( ( - f ) ) ) ) / IDENT_14 ; }
org . junit . Assert . assertEquals ( IDENT_8 . METHOD_6 ( v ) , IDENT_5 . METHOD_6 ( new double [ ] { v } ) , IDENT_12 ) 