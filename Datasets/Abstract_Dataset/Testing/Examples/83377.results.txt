METHOD_0 ( ) { final int n = 5 ; final int IDENT_0 = 100 ; final org . hipparchus . linear . IDENT_1 a = new org . hipparchus . linear . METHOD_1 ( n ) ; final org . hipparchus . linear . IDENT_2 IDENT_3 = new org . hipparchus . linear . METHOD_2 ( n ) ; final org . hipparchus . linear . IDENT_4 IDENT_5 ; IDENT_5 = new org . hipparchus . linear . METHOD_3 ( IDENT_0 , FLOAT_0 , true ) ; final org . hipparchus . linear . IDENT_6 b = new org . hipparchus . linear . METHOD_4 ( n ) ; for ( int j = 0 ; j < n ; j ++ ) { b . set ( 0.0 ) ; b . METHOD_5 ( j , 1.0 ) ; final org . hipparchus . linear . IDENT_6 x = IDENT_5 . METHOD_6 ( a , b ) ; for ( int i = 0 ; i < n ; i ++ ) { final double actual = x . METHOD_7 ( i ) ; final double expected = IDENT_3 . METHOD_7 ( i , j ) ; final double IDENT_7 = FLOAT_0 * ( org . hipparchus . util . IDENT_8 . METHOD_8 ( expected ) ) ; final java . lang . String msg = java . lang . String . format ( STRING_0 , i , j ) ; "<AssertPlaceHolder>" ; } } } format ( org . hipparchus . geometry . IDENT_9 , java . lang . StringBuffer , java . text . IDENT_10 ) { final org . hipparchus . geometry . IDENT_11 . IDENT_12 . IDENT_13 IDENT_14 = ( ( org . hipparchus . geometry . IDENT_11 . IDENT_12 . IDENT_13 ) ( IDENT_15 ) ) ; return format ( IDENT_16 , pos , IDENT_14 . METHOD_9 ( ) , IDENT_14 . METHOD_10 ( ) ) ; }
org . junit . Assert . assertEquals ( msg , expected , actual , IDENT_7 ) 