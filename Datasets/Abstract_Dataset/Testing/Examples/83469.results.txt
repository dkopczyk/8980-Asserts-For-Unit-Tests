METHOD_0 ( ) { final double [ ] a = new double [ ] { FLOAT_0 } ; final double [ ] b = new double [ ] { FLOAT_1 } ; "<AssertPlaceHolder>" ; } METHOD_1 ( double [ ] , org . hipparchus . util . IDENT_0 [ ] ) { org . hipparchus . util . IDENT_1 . METHOD_2 ( a . length , b . length ) ; final double [ ] IDENT_2 = new double [ b . length ] ; for ( int i = 0 ; i < ( a . length ) ; ++ i ) { IDENT_2 [ i ] = b [ i ] . value ; } return new org . hipparchus . util . METHOD_3 ( org . hipparchus . util . IDENT_3 . METHOD_1 ( a , IDENT_2 ) ) ; }
org . junit . Assert . assertEquals ( ( ( a [ 0 ] ) * ( b [ 0 ] ) ) , org . hipparchus . util . IDENT_3 . METHOD_1 ( a , b ) , 0.0 ) 