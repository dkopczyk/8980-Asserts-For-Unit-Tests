METHOD_0 ( ) { org . hipparchus . geometry . IDENT_0 . IDENT_1 . IDENT_2 p = new org . hipparchus . geometry . IDENT_0 . IDENT_1 . METHOD_1 ( FLOAT_0 , new org . hipparchus . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( FLOAT_1 , ( - FLOAT_2 ) ) , new org . hipparchus . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( FLOAT_3 , ( - FLOAT_4 ) ) , new org . hipparchus . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( FLOAT_5 , ( - FLOAT_4 ) ) , new org . hipparchus . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( FLOAT_6 , ( - FLOAT_7 ) ) ) ; org . hipparchus . geometry . IDENT_0 . IDENT_1 . METHOD_1 IDENT_3 = new org . hipparchus . geometry . IDENT_0 . IDENT_1 . METHOD_1 ( FLOAT_0 , new org . hipparchus . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( FLOAT_8 , ( - FLOAT_9 ) ) , new org . hipparchus . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( FLOAT_8 , ( - FLOAT_10 ) ) , new org . hipparchus . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( FLOAT_8 , ( - FLOAT_11 ) ) , new org . hipparchus . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( FLOAT_12 , ( - FLOAT_11 ) ) , new org . hipparchus . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( FLOAT_12 , ( - FLOAT_9 ) ) ) ; "<AssertPlaceHolder>" ; } contains ( org . hipparchus . geometry . IDENT_0 . IDENT_4 . IDENT_5 ) { return ( METHOD_3 ( p ) . METHOD_4 ( ) ) < ( IDENT_6 ) ; }
org . junit . Assert . assertFalse ( p . contains ( IDENT_3 ) ) 