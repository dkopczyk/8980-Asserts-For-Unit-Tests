METHOD_0 ( ) { java . util . Locale IDENT_0 = java . util . Locale . METHOD_1 ( ) ; java . util . Locale . METHOD_2 ( METHOD_3 ( ) ) ; org . hipparchus . geometry . IDENT_1 . IDENT_2 . IDENT_3 c = new org . hipparchus . geometry . IDENT_1 . IDENT_2 . METHOD_4 ( FLOAT_0 , ( - FLOAT_1 ) ) ; java . lang . String expected = ( ( ( STRING_0 + ( METHOD_5 ( ) ) ) + STRING_1 ) + ( METHOD_5 ( ) ) ) + STRING_2 ; java . lang . String actual = new org . hipparchus . geometry . IDENT_1 . IDENT_2 . METHOD_6 ( ) . format ( c ) ; "<AssertPlaceHolder>" ; java . util . Locale . METHOD_2 ( IDENT_0 ) ; } format ( double ) { if ( d != d ) { return STRING_3 ; } else { return ( ( d >= 0 ? STRING_4 : "" ) + ( java . lang . Double . toString ( d ) ) ) + STRING_5 ; } }
org . junit . Assert . assertEquals ( expected , actual ) 