METHOD_0 ( ) { java . lang . String source = ( ( ( STRING_0 + ( METHOD_1 ( ) ) ) + STRING_1 ) + ( METHOD_1 ( ) ) ) + STRING_2 ; org . hipparchus . geometry . IDENT_0 . IDENT_1 . IDENT_2 expected = new org . hipparchus . geometry . IDENT_0 . IDENT_1 . METHOD_2 ( ( - FLOAT_0 ) , FLOAT_1 ) ; org . hipparchus . geometry . IDENT_0 . IDENT_1 . METHOD_2 actual = IDENT_3 . parse ( source ) ; "<AssertPlaceHolder>" ; } parse ( java . lang . String ) { java . text . IDENT_4 IDENT_5 = new java . text . METHOD_3 ( 0 ) ; org . hipparchus . geometry . IDENT_0 . IDENT_1 . METHOD_2 result = parse ( source , IDENT_5 ) ; if ( ( IDENT_5 . METHOD_4 ( ) ) == 0 ) { throw new org . hipparchus . exception . METHOD_5 ( org . hipparchus . exception . IDENT_6 . IDENT_7 , source , IDENT_5 . METHOD_6 ( ) , org . hipparchus . geometry . IDENT_0 . IDENT_1 . METHOD_2 . class ) ; } return result ; }
org . junit . Assert . assertEquals ( expected , actual ) 