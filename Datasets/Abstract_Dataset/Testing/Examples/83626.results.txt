METHOD_0 ( ) { net . IDENT_0 . message . IDENT_1 IDENT_2 = new org . IDENT_3 . core . security . METHOD_1 ( ) . METHOD_2 ( org . IDENT_3 . core . security . IDENT_4 . IDENT_5 . METHOD_3 ( ) , org . IDENT_3 . core . security . IDENT_4 . IDENT_6 . buffer ( ) . METHOD_4 ( ) ) ; int length = org . IDENT_3 . core . security . IDENT_4 . IDENT_6 . buffer ( ) . METHOD_5 ( ) ; io . netty . buffer . IDENT_7 IDENT_8 = org . IDENT_3 . core . security . IDENT_4 . IDENT_6 . buffer ( ) . METHOD_6 ( 0 , 3 ) ; io . netty . buffer . IDENT_7 IDENT_9 = org . IDENT_3 . core . security . IDENT_4 . IDENT_6 . buffer ( ) . METHOD_6 ( 3 , 4 ) ; io . netty . buffer . IDENT_7 IDENT_10 = org . IDENT_3 . core . security . IDENT_4 . IDENT_6 . buffer ( ) . METHOD_6 ( 7 , ( length - 7 ) ) ; org . IDENT_3 . core . security . METHOD_1 IDENT_11 = new org . IDENT_3 . core . security . METHOD_1 ( ) ; java . security . IDENT_12 IDENT_13 = IDENT_11 . update ( org . IDENT_3 . core . security . IDENT_4 . IDENT_5 . METHOD_7 ( ) , IDENT_8 . METHOD_4 ( ) ) ; IDENT_13 . update ( IDENT_9 . array ( ) ) ; IDENT_13 . update ( IDENT_10 . array ( ) ) ; "<AssertPlaceHolder>" ; } update ( java . security . IDENT_14 , java . nio . ByteBuffer [ ] ) { java . security . IDENT_12 IDENT_13 = METHOD_8 ( ) ; IDENT_13 . METHOD_9 ( IDENT_15 ) ; int IDENT_16 = IDENT_17 . length ; for ( int i = 0 ; i < IDENT_16 ; i ++ ) { IDENT_13 . update ( IDENT_17 [ i ] ) ; } return IDENT_13 ; }
org . junit . Assert . assertTrue ( IDENT_13 . verify ( IDENT_2 . encode ( ) ) ) 