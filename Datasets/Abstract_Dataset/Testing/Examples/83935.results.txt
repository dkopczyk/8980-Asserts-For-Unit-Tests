METHOD_0 ( ) { long IDENT_0 = 1000 ; System . out . println ( STRING_0 ) ; org . apache . hadoop . conf . Configuration conf = new org . apache . hadoop . hdfs . METHOD_1 ( ) ; conf . METHOD_2 ( org . apache . hadoop . hdfs . IDENT_1 , 1000 ) ; conf . METHOD_2 ( org . apache . hadoop . hdfs . IDENT_2 , 1 ) ; if ( IDENT_3 ) { org . apache . hadoop . hdfs . server . IDENT_4 . IDENT_5 . METHOD_3 ( conf ) ; } org . apache . hadoop . hdfs . IDENT_6 cluster = new org . apache . hadoop . hdfs . IDENT_6 . Builder ( conf ) . build ( ) ; org . apache . hadoop . hdfs . IDENT_7 IDENT_8 = null ; try { cluster . METHOD_4 ( ) ; IDENT_8 = cluster . METHOD_5 ( ) ; org . apache . hadoop . hdfs . IDENT_9 client = IDENT_8 . IDENT_8 ; org . apache . hadoop . fs . Path IDENT_10 = new org . apache . hadoop . fs . Path ( STRING_1 ) ; org . apache . hadoop . hdfs . IDENT_11 . METHOD_6 ( IDENT_8 , IDENT_10 , 1 ) ; System . out . println ( ( STRING_2 + STRING_3 ) ) ; org . apache . hadoop . hdfs . protocol . IDENT_12 IDENT_13 = client . METHOD_7 ( ) . METHOD_8 ( IDENT_10 . toString ( ) , 0 , Long . MAX_VALUE ) ; System . out . println ( ( ( ( STRING_2 + STRING_4 ) + ( IDENT_13 . METHOD_9 ( ) ) ) + STRING_5 ) ) ; org . apache . hadoop . hdfs . protocol . IDENT_14 location = client . METHOD_7 ( ) . METHOD_10 ( IDENT_10 . toString ( ) , client . IDENT_15 , null , null , IDENT_16 . IDENT_17 , null ) ; System . out . println ( ( ( STRING_2 + STRING_6 ) + ( location . METHOD_11 ( ) ) ) ) ; IDENT_13 = client . METHOD_7 ( ) . METHOD_8 ( IDENT_10 . toString ( ) , 0 , Long . MAX_VALUE ) ; int count = IDENT_13 . METHOD_9 ( ) ; System . out . println ( ( ( ( STRING_2 + STRING_7 ) + count ) + STRING_5 ) ) ; cluster . METHOD_12 ( IDENT_0 , IDENT_0 ) ; try { java . lang . Thread . sleep ( ( 6 * IDENT_0 ) ) ; } catch ( java . lang . IDENT_18 e ) { } IDENT_13 = client . METHOD_7 ( ) . METHOD_8 ( IDENT_10 . toString ( ) , 0 , Long . MAX_VALUE ) ; System . out . println ( ( ( STRING_2 + STRING_8 ) + ( IDENT_13 . METHOD_9 ( ) ) ) ) ; "<AssertPlaceHolder>" ; System . out . println ( STRING_9 ) ; } finally { org . apache . hadoop . io . IDENT_19 . METHOD_13 ( IDENT_8 ) ; cluster . METHOD_14 ( ) ; } } METHOD_9 ( ) { return ( IDENT_20 ) == null ? 0 : IDENT_20 . size ( ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_13 . METHOD_9 ( ) ) 