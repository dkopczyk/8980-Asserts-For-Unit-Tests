METHOD_0 ( ) { org . apache . camel . component . IDENT_0 . processor . IDENT_1 IDENT_2 = org . apache . camel . component . IDENT_0 . processor . IDENT_1 . newInstance ( ) ; javax . xml . transform . IDENT_3 factory = new net . sf . IDENT_4 . METHOD_1 ( ) ; factory . METHOD_2 ( new org . apache . camel . component . IDENT_0 . processor . METHOD_3 ( org . apache . camel . component . IDENT_0 . IDENT_5 . Constants . IDENT_6 , null ) ) ; javax . xml . transform . IDENT_7 IDENT_8 = IDENT_2 . METHOD_4 ( java . lang . IDENT_9 . METHOD_5 ( rules ) , factory ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . io . InputStream , javax . xml . transform . IDENT_3 ) { org . w3c . dom . Node node = null ; javax . xml . transform . IDENT_10 source = new javax . xml . transform . stream . METHOD_6 ( rules ) ; try { for ( java . lang . String template : org . apache . camel . component . IDENT_0 . processor . IDENT_1 . IDENT_11 ) { java . lang . String path = Constants . IDENT_6 . METHOD_7 ( "/" ) . METHOD_7 ( template ) ; java . io . InputStream IDENT_12 = this . getClass ( ) . METHOD_8 ( ) . getResourceAsStream ( path ) ; javax . xml . transform . IDENT_13 t = IDENT_2 . METHOD_9 ( new javax . xml . transform . stream . METHOD_6 ( IDENT_12 ) ) ; javax . xml . transform . dom . IDENT_14 result = new javax . xml . transform . dom . METHOD_10 ( ) ; t . transform ( source , result ) ; source = new javax . xml . transform . dom . METHOD_11 ( ( node = result . METHOD_12 ( ) ) ) ; } return IDENT_2 . METHOD_13 ( new javax . xml . transform . dom . METHOD_11 ( node ) ) ; } catch ( java . lang . Exception e ) { logger . error ( e . getMessage ( ) , e ) ; throw new org . apache . camel . component . IDENT_0 . exception . METHOD_14 ( e ) ; } }
org . junit . Assert . assertNotNull ( IDENT_8 ) 