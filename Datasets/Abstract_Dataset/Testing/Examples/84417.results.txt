METHOD_0 ( ) { java . util . List < com . IDENT_0 . IDENT_1 . streams . IDENT_2 . IDENT_3 > IDENT_4 = com . IDENT_0 . IDENT_1 . streams . IDENT_2 . util . IDENT_5 . METHOD_1 ( 10 ) ; for ( com . IDENT_0 . IDENT_1 . streams . IDENT_2 . IDENT_3 IDENT_2 : IDENT_4 ) { IDENT_6 . store ( IDENT_2 ) ; } java . util . List < com . IDENT_0 . IDENT_1 . streams . IDENT_2 . IDENT_3 > IDENT_7 = IDENT_6 . METHOD_2 ( com . google . common . collect . Lists . transform ( IDENT_4 , new com . google . common . base . IDENT_8 < com . IDENT_0 . IDENT_1 . streams . IDENT_2 . IDENT_3 , java . lang . String > ( ) { @ javax . annotation . IDENT_9 @ com . IDENT_0 . IDENT_1 . streams . IDENT_2 . store . hbase . Override public java . lang . String apply ( @ javax . annotation . IDENT_9 com . IDENT_0 . IDENT_1 . streams . IDENT_2 . IDENT_3 IDENT_2 ) { return IDENT_2 . getId ( ) ; } } ) ) ; "<AssertPlaceHolder>" ; } getId ( ) { return id ; }
org . junit . Assert . assertEquals ( IDENT_4 , IDENT_7 ) 