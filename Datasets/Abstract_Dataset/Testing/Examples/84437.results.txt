METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . streams . runtime . rule . sql . IDENT_2 condition = new com . IDENT_0 . IDENT_1 . streams . runtime . rule . sql . METHOD_1 ( ) ; com . IDENT_0 . IDENT_1 . streams . runtime . rule . sql . IDENT_3 x = new com . IDENT_0 . IDENT_1 . streams . runtime . rule . sql . METHOD_2 ( Schema . Field . of ( STRING_0 , Schema . Type . IDENT_4 ) ) ; condition . METHOD_3 ( new com . IDENT_0 . IDENT_1 . streams . runtime . rule . sql . METHOD_4 ( IDENT_5 . IDENT_6 , x , new com . IDENT_0 . IDENT_1 . streams . runtime . rule . sql . METHOD_5 ( STRING_1 ) ) ) ; IDENT_7 = new com . IDENT_0 . IDENT_1 . streams . runtime . rule . sql . METHOD_6 ( new com . IDENT_0 . IDENT_1 . streams . runtime . rule . condition . expression . METHOD_7 ( condition ) , new com . IDENT_0 . IDENT_1 . streams . runtime . rule . sql . METHOD_8 ( ) , new com . IDENT_0 . IDENT_1 . streams . runtime . rule . sql . METHOD_6 . METHOD_9 ( com . IDENT_0 . IDENT_1 . streams . runtime . rule . sql . Collections . singletonList ( STRING_0 ) ) ) ; com . IDENT_0 . IDENT_1 . streams . runtime . rule . sql . Map < java . lang . String , java . lang . Object > IDENT_8 = new com . IDENT_0 . IDENT_1 . streams . runtime . rule . sql . HashMap ( ) ; IDENT_8 . put ( STRING_0 , 100 ) ; com . IDENT_0 . IDENT_1 . streams . IDENT_9 event = com . IDENT_0 . IDENT_1 . streams . common . IDENT_10 . builder ( ) . METHOD_10 ( IDENT_8 ) . METHOD_11 ( "1" ) . build ( ) ; com . IDENT_0 . IDENT_1 . streams . runtime . rule . sql . Collection < com . IDENT_0 . IDENT_1 . streams . IDENT_9 > result = IDENT_7 . evaluate ( event ) ; "<AssertPlaceHolder>" ; } isEmpty ( ) { return IDENT_11 . isEmpty ( ) ; }
org . junit . Assert . assertTrue ( result . isEmpty ( ) ) 