METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final com . IDENT_1 . IDENT_2 . types . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 IDENT_8 = com . IDENT_1 . IDENT_2 . types . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . builder ( ) . build ( ) ; final com . IDENT_1 . IDENT_2 . IDENT_9 . core . IDENT_10 . IDENT_11 < java . time . IDENT_12 > IDENT_13 = new com . IDENT_1 . IDENT_2 . IDENT_9 . core . IDENT_10 . METHOD_1 ( 5 , java . time . IDENT_12 . now ( ) . METHOD_2 ( 5 ) , java . time . IDENT_12 . now ( ) ) ; when ( IDENT_14 . METHOD_0 ( org . mockito . Matchers . any ( ) , org . mockito . Matchers . any ( ) ) ) . METHOD_3 ( ( IDENT_15 ) -> { @ java . lang . METHOD_4 ( STRING_1 ) final Map < com . IDENT_1 . IDENT_2 . types . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_16 , METHOD_1 < java . time . IDENT_12 > > IDENT_17 = IDENT_15 . METHOD_5 ( 1 , . class ) ; final METHOD_1 < java . time . IDENT_12 > IDENT_18 = IDENT_17 . get ( IDENT_19 . METHOD_6 ( IDENT_0 ) ) ; return IDENT_13 . equals ( IDENT_18 ) ? java . util . Collections . singletonList ( IDENT_8 ) : java . util . Collections . emptyList ( ) ; } ) ; final com . IDENT_1 . IDENT_2 . types . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 output = IDENT_20 . METHOD_7 ( IDENT_19 . METHOD_6 ( IDENT_0 ) , IDENT_13 . METHOD_8 ( ) , IDENT_13 . METHOD_9 ( ) , IDENT_13 . METHOD_10 ( ) , STRING_2 , "" , java . util . Collections . emptyList ( ) , null , null , 0 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( com . IDENT_1 . IDENT_2 . types . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_16 , java . lang . Integer , java . time . IDENT_12 , java . time . IDENT_12 , java . lang . String , java . lang . String , java . util . Collection , java . time . IDENT_12 , java . time . IDENT_12 , java . lang . Integer ) { final IDENT_21 IDENT_22 = IDENT_23 . METHOD_11 ( ) . METHOD_12 ( METHOD_12 ) . METHOD_13 ( METHOD_13 ) . METHOD_14 ( METHOD_14 ) . METHOD_15 ( METHOD_15 ) . METHOD_16 ( METHOD_16 ) . METHOD_17 ( METHOD_17 ) . build ( ) ; final IDENT_24 IDENT_25 = IDENT_26 . METHOD_11 ( ) . METHOD_18 ( METHOD_18 ) . METHOD_19 ( null ) . METHOD_20 ( METHOD_20 ) . build ( ) ; final com . IDENT_1 . IDENT_2 . IDENT_9 . core . IDENT_10 . METHOD_1 < java . time . IDENT_12 > IDENT_18 = new com . IDENT_1 . IDENT_2 . IDENT_9 . core . IDENT_10 . METHOD_1 ( IDENT_27 , IDENT_28 , IDENT_29 ) ; final java . util . Map < com . IDENT_1 . IDENT_2 . types . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_16 , com . IDENT_1 . IDENT_2 . IDENT_9 . core . IDENT_10 . METHOD_1 < java . time . IDENT_12 > > IDENT_17 = java . util . Collections . METHOD_21 ( METHOD_18 , IDENT_18 ) ; return IDENT_14 . METHOD_0 ( IDENT_25 , IDENT_17 ) . get ( 0 ) ; }
org . junit . Assert . assertThat ( output , org . hamcrest . core . Is . is ( IDENT_8 ) ) 