METHOD_0 ( ) { final org . apache . camel . impl . cluster . IDENT_0 . IDENT_1 service = new org . apache . camel . impl . cluster . IDENT_0 . METHOD_1 ( java . util . UUID . METHOD_2 ( ) . toString ( ) ) ; final org . apache . camel . impl . cluster . IDENT_0 . IDENT_2 view = service . METHOD_3 ( STRING_0 ) . METHOD_4 ( org . apache . camel . impl . cluster . IDENT_0 . IDENT_2 . class ) ; final int events = 1 + ( new java . util . METHOD_5 ( ) . METHOD_6 ( 10 ) ) ; final java . util . Set < java . lang . Integer > results = new java . util . HashSet ( ) ; final java . util . concurrent . IDENT_3 IDENT_4 = new java . util . concurrent . METHOD_7 ( events ) ; java . util . stream . IDENT_5 . range ( 0 , events ) . METHOD_8 ( ( i ) -> view . METHOD_9 ( ( ( org . apache . camel . cluster . IDENT_6 . IDENT_7 ) ( ( v , l ) -> { results . add ( i ) ; IDENT_4 . METHOD_10 ( ) ; } ) ) ) ) ; service . start ( ) ; view . METHOD_11 ( true ) ; IDENT_4 . METHOD_12 ( 10 , TimeUnit . IDENT_8 ) ; java . util . stream . IDENT_5 . range ( 0 , events ) . METHOD_8 ( ( i ) -> "<AssertPlaceHolder>" ) ; } contains ( java . lang . String ) { log . debug ( STRING_1 , key ) ; boolean containsKey = cache . containsKey ( key ) ; if ( containsKey ) { IDENT_9 . METHOD_13 ( ) ; } return containsKey ; }
org . junit . Assert . assertTrue ( results . contains ( i ) ) 