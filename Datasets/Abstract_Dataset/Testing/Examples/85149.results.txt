METHOD_0 ( ) { java . time . IDENT_0 base = java . time . IDENT_0 . of ( INT_0 , 2 , 3 , 10 , 0 , 0 , 0 ) ; org . IDENT_1 . IDENT_2 . cache . IDENT_3 headers = new org . IDENT_1 . IDENT_2 . cache . METHOD_1 ( ) ; org . IDENT_1 . IDENT_2 . cache . IDENT_4 IDENT_5 = new org . IDENT_1 . IDENT_2 . cache . IDENT_4 . Builder ( ) . METHOD_2 ( 50 ) . METHOD_3 ( ) . build ( ) ; headers = headers . add ( IDENT_5 . METHOD_4 ( ) ) ; headers = headers . add ( org . IDENT_1 . IDENT_2 . cache . IDENT_6 . METHOD_5 ( IDENT_7 . IDENT_8 , base ) ) ; headers = headers . METHOD_6 ( new org . IDENT_1 . IDENT_2 . cache . METHOD_7 ( "foo" ) ) ; org . IDENT_1 . IDENT_2 . cache . IDENT_9 IDENT_10 = new org . IDENT_1 . IDENT_2 . cache . METHOD_8 ( org . IDENT_1 . IDENT_2 . cache . IDENT_11 . METHOD_9 ( ) , Status . IDENT_12 , headers ) ; org . IDENT_1 . IDENT_2 . cache . IDENT_13 item = new org . IDENT_1 . IDENT_2 . cache . METHOD_10 ( IDENT_10 ) { @ org . IDENT_1 . IDENT_2 . cache . Override public boolean METHOD_11 ( java . time . IDENT_0 IDENT_14 ) { return true ; } } ; when ( IDENT_15 . get ( METHOD_12 ( org . IDENT_1 . IDENT_2 . cache . IDENT_16 . class ) ) ) . thenReturn ( item ) ; org . IDENT_1 . IDENT_2 . cache . IDENT_16 request = new org . IDENT_1 . IDENT_2 . cache . METHOD_13 ( org . IDENT_1 . IDENT_2 . cache . IDENT_11 . IDENT_17 , IDENT_18 . IDENT_19 ) ; base = base . METHOD_14 ( 1 ) ; org . IDENT_1 . IDENT_2 . cache . METHOD_8 IDENT_20 = new org . IDENT_1 . IDENT_2 . cache . METHOD_8 ( Status . IDENT_21 , new org . IDENT_1 . IDENT_2 . cache . METHOD_1 ( ) . METHOD_15 ( base ) . METHOD_16 ( IDENT_5 ) ) ; when ( IDENT_22 . resolve ( request ) ) . thenReturn ( IDENT_20 ) ; when ( IDENT_15 . update ( METHOD_12 ( org . IDENT_1 . IDENT_2 . cache . METHOD_13 . class ) , METHOD_12 ( org . IDENT_1 . IDENT_2 . cache . METHOD_8 . class ) ) ) . thenReturn ( new org . IDENT_1 . IDENT_2 . cache . METHOD_8 ( org . IDENT_1 . IDENT_2 . cache . IDENT_11 . METHOD_9 ( ) , Status . IDENT_12 , IDENT_20 . METHOD_17 ( ) ) ) ; org . IDENT_1 . IDENT_2 . cache . METHOD_8 response = cache . execute ( request ) ; verify ( IDENT_15 , METHOD_18 ( ) ) . METHOD_19 ( org . IDENT_1 . IDENT_2 . cache . IDENT_11 . IDENT_17 ) ; verify ( IDENT_15 , METHOD_20 ( ) ) . update ( METHOD_12 ( org . IDENT_1 . IDENT_2 . cache . METHOD_13 . class ) , METHOD_12 ( org . IDENT_1 . IDENT_2 . cache . METHOD_8 . class ) ) ; "<AssertPlaceHolder>" ; } METHOD_21 ( ) { return payload . METHOD_22 ( ) ; }
org . junit . Assert . assertFalse ( response . METHOD_21 ( ) ) 