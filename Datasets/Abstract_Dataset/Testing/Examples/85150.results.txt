METHOD_0 ( ) { final java . util . concurrent . atomic . IDENT_0 IDENT_1 = new java . util . concurrent . atomic . METHOD_1 ( ) ; map . METHOD_2 ( new IDENT_2 . IDENT_3 < java . lang . String , java . lang . Integer > ( ) { @ java . lang . Override public void METHOD_3 ( java . lang . String key , java . lang . Integer value ) { IDENT_1 . METHOD_4 ( ) ; } @ java . lang . Override public void METHOD_5 ( java . lang . String key , java . lang . Integer value ) { } } ) ; map . put ( STRING_0 , 1 ) ; map . put ( STRING_1 , 2 ) ; "<AssertPlaceHolder>" ; } put ( java . lang . String , org . IDENT_4 . IDENT_5 . List ) { return super . put ( new org . IDENT_4 . IDENT_5 . util . METHOD_6 ( key ) , value ) ; }
org . junit . Assert . assertThat ( IDENT_1 . get ( ) , org . hamcrest . CoreMatchers . equalTo ( 2 ) ) 