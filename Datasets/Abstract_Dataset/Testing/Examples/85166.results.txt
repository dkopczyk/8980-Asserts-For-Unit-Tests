METHOD_0 ( ) { java . util . concurrent . IDENT_0 < java . net . IDENT_1 > IDENT_2 = this . executor . METHOD_1 ( new java . util . concurrent . IDENT_3 < java . net . IDENT_1 > ( ) { @ de . IDENT_4 . in . IDENT_5 . IDENT_6 . manager . Override public java . net . IDENT_1 call ( ) throws de . IDENT_4 . in . IDENT_5 . IDENT_6 . manager . Exception { return IDENT_7 . METHOD_2 ( ) ; } } ) ; java . util . concurrent . IDENT_0 < java . net . IDENT_1 > IDENT_8 = this . executor . METHOD_1 ( new java . util . concurrent . IDENT_3 < java . net . IDENT_1 > ( ) { @ de . IDENT_4 . in . IDENT_5 . IDENT_6 . manager . Override public java . net . IDENT_1 call ( ) throws de . IDENT_4 . in . IDENT_5 . IDENT_6 . manager . Exception { return IDENT_9 . METHOD_2 ( ) ; } } ) ; final java . net . IDENT_1 IDENT_10 = IDENT_2 . get ( INT_0 , TimeUnit . IDENT_11 ) ; final java . net . IDENT_1 IDENT_12 = IDENT_8 . get ( INT_0 , TimeUnit . IDENT_11 ) ; final boolean result = ( IDENT_10 . METHOD_3 ( ) ) && ( IDENT_12 . METHOD_3 ( ) ) ; IDENT_10 . close ( ) ; IDENT_12 . close ( ) ; "<AssertPlaceHolder>" ; } close ( ) { try { this . IDENT_13 . METHOD_4 ( ) ; this . IDENT_14 . close ( ) ; } catch ( final java . lang . Exception e ) { logger . error ( e . getMessage ( ) ) ; } }
org . junit . Assert . assertTrue ( result ) 