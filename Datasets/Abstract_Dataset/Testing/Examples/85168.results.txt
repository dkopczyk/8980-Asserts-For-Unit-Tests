METHOD_0 ( ) { final java . util . List < de . IDENT_0 . in . IDENT_1 . IDENT_2 . IDENT_3 > IDENT_4 = new java . util . ArrayList < de . IDENT_0 . in . IDENT_1 . IDENT_2 . IDENT_3 > ( ) ; IDENT_4 . add ( new de . IDENT_0 . in . IDENT_1 . IDENT_5 . METHOD_1 ( STRING_0 , 3 , true ) ) ; IDENT_4 . add ( new de . IDENT_0 . in . IDENT_1 . IDENT_5 . METHOD_1 ( STRING_1 , 3 , true ) ) ; IDENT_4 . add ( new de . IDENT_0 . in . IDENT_1 . IDENT_5 . METHOD_1 ( STRING_2 , 3 , true ) ) ; IDENT_4 . add ( new de . IDENT_0 . in . IDENT_1 . IDENT_5 . METHOD_1 ( STRING_3 , 7 , false ) ) ; final java . util . List < de . IDENT_0 . in . IDENT_1 . IDENT_2 . IDENT_3 > IDENT_6 = this . registry . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( java . util . Collection , java . util . Collection ) { int count = 0 ; for ( java . lang . Object IDENT_7 : IDENT_8 ) { for ( java . lang . Object IDENT_9 : IDENT_10 ) { if ( IDENT_7 . equals ( IDENT_9 ) ) { count ++ ; } } } return ( count == ( IDENT_8 . size ( ) ) ) && ( count == ( IDENT_10 . size ( ) ) ) ; }
org . junit . Assert . assertTrue ( this . METHOD_3 ( IDENT_4 , IDENT_6 ) ) 