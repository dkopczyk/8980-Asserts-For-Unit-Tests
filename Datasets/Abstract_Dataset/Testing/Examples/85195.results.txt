METHOD_0 ( ) { METHOD_1 ( ) ; boolean IDENT_0 = false ; while ( ! IDENT_0 ) { IDENT_0 = METHOD_2 ( de . IDENT_1 . in . test . IDENT_2 . path ) ; } METHOD_3 ( ) ; int code = METHOD_4 ( ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { byte [ ] IDENT_3 = new byte [ INT_0 ] ; System . out . println ( ( STRING_0 + STRING_1 ) ) ; de . IDENT_1 . in . test . IDENT_2 . IDENT_4 . read ( IDENT_3 ) ; java . lang . String IDENT_5 = new java . lang . String ( IDENT_3 ) . trim ( ) ; int IDENT_6 = java . lang . Integer . METHOD_5 ( IDENT_5 ) ; switch ( IDENT_6 ) { case - 2 : System . err . println ( STRING_2 ) ; break ; case - 1 : System . err . println ( STRING_3 ) ; break ; case - 3 : System . err . println ( STRING_4 ) ; break ; case - 5 : System . err . println ( STRING_5 ) ; break ; case 0 : System . out . println ( STRING_6 ) ; break ; } return IDENT_6 ; }
org . junit . Assert . assertTrue ( ( code == 0 ) ) 