METHOD_0 ( ) { java . lang . String out = org . apache . camel . util . IDENT_0 . METHOD_1 ( STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { java . net . URI IDENT_1 = new java . net . URI ( org . apache . camel . util . IDENT_2 . encode ( uri , true ) ) ; java . lang . String path = IDENT_1 . METHOD_2 ( ) ; java . lang . String IDENT_3 = IDENT_1 . METHOD_3 ( ) ; if ( ( IDENT_3 == null ) || ( path == null ) ) { return uri ; } if ( path . startsWith ( STRING_1 ) ) { path = path . substring ( 2 ) ; } int IDENT_4 = path . indexOf ( STRING_2 ) ; if ( IDENT_4 != ( - 1 ) ) { path = path . substring ( 0 , IDENT_4 ) ; } if ( IDENT_1 . METHOD_3 ( ) . startsWith ( STRING_3 ) ) { path = org . apache . camel . util . IDENT_2 . METHOD_4 ( path ) ; } else { path = org . apache . camel . util . IDENT_2 . encode ( path ) ; } java . lang . String IDENT_5 = path ; if ( IDENT_5 . contains ( "/" ) ) { IDENT_5 = IDENT_5 . substring ( 0 , IDENT_5 . indexOf ( "/" ) ) ; } if ( ( org . apache . camel . util . IDENT_6 . METHOD_5 ( IDENT_5 , STRING_4 ) ) > 1 ) { int max = IDENT_5 . METHOD_6 ( STRING_4 ) ; java . lang . String IDENT_7 = IDENT_5 . substring ( 0 , max ) ; java . lang . String IDENT_8 = path . substring ( max ) ; IDENT_7 = org . apache . camel . util . IDENT_6 . replaceAll ( IDENT_7 , STRING_5 , STRING_6 ) ; path = IDENT_7 + IDENT_8 ; } java . util . Map < java . lang . String , java . lang . Object > parameters = org . apache . camel . util . IDENT_0 . METHOD_7 ( IDENT_1 ) ; if ( parameters . isEmpty ( ) ) { return org . apache . camel . util . IDENT_0 . METHOD_8 ( IDENT_3 , path , null ) ; } else { java . util . List < java . lang . String > keys = new java . util . ArrayList ( parameters . METHOD_9 ( ) ) ; keys . METHOD_10 ( null ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_9 = new java . util . METHOD_11 ( parameters . size ( ) ) ; for ( java . lang . String key : keys ) { IDENT_9 . put ( key , parameters . get ( key ) ) ; } java . lang . String query = org . apache . camel . util . IDENT_0 . METHOD_12 ( IDENT_9 ) ; return org . apache . camel . util . IDENT_0 . METHOD_8 ( IDENT_3 , path , query ) ; } }
org . junit . Assert . assertNotNull ( out ) 