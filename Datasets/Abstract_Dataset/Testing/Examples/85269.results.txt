METHOD_0 ( ) { com . IDENT_0 . streaming . expression . IDENT_1 IDENT_2 = new com . IDENT_0 . streaming . expression . METHOD_1 ( IDENT_3 . IDENT_4 , new com . IDENT_0 . streaming . expression . METHOD_2 ( com . IDENT_0 . streaming . expression . IDENT_5 . IDENT_6 ) , new com . IDENT_0 . streaming . expression . METHOD_2 ( null , com . IDENT_0 . streaming . expression . Double . class ) ) ; com . IDENT_0 . streaming . event . IDENT_7 IDENT_8 = new com . IDENT_0 . streaming . event . METHOD_3 ( ) ; java . lang . Object IDENT_9 = IDENT_2 . evaluate ( IDENT_8 ) ; java . lang . Double IDENT_10 = null ; "<AssertPlaceHolder>" ; } evaluate ( com . IDENT_0 . streaming . event . IDENT_7 [ ] ) { if ( ( null == IDENT_11 ) || ( 0 == ( IDENT_11 . length ) ) ) { com . IDENT_0 . streaming . expression . METHOD_1 . LOG . error ( STRING_0 ) ; throw new com . IDENT_0 . streaming . exception . METHOD_4 ( STRING_0 ) ; } com . IDENT_0 . streaming . expression . IDENT_12 IDENT_13 = METHOD_5 ( ) ; com . IDENT_0 . streaming . expression . IDENT_12 IDENT_14 = METHOD_6 ( ) ; java . lang . Object IDENT_15 = IDENT_13 . evaluate ( IDENT_11 ) ; java . lang . Object IDENT_16 = IDENT_14 . evaluate ( IDENT_11 ) ; return compute ( IDENT_15 , IDENT_16 ) ; }
org . junit . Assert . assertEquals ( IDENT_10 , IDENT_9 ) 