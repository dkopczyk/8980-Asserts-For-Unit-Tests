METHOD_0 ( ) { java . lang . Class < ? > IDENT_0 = java . lang . Class . METHOD_1 ( STRING_0 ) ; java . lang . String IDENT_1 = STRING_1 ; java . lang . Class < ? > [ ] IDENT_2 = new java . lang . Class < ? > [ ] { int . class } ; java . lang . reflect . Method IDENT_3 = com . IDENT_4 . streaming . expression . IDENT_5 . METHOD_2 ( IDENT_0 , IDENT_1 , IDENT_2 ) ; java . lang . reflect . Method IDENT_6 = IDENT_0 . METHOD_3 ( IDENT_1 , float . class ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . Class , java . lang . String , com . IDENT_4 . streaming . expression . Class [ ] ) { java . lang . reflect . Method [ ] IDENT_7 = IDENT_0 . METHOD_4 ( ) ; java . lang . reflect . Method IDENT_8 = null ; int IDENT_9 = - 1 ; for ( java . lang . reflect . Method method : IDENT_7 ) { if ( ! ( com . IDENT_4 . streaming . expression . IDENT_5 . METHOD_5 ( method ) ) ) { continue ; } if ( ! ( method . getName ( ) . equals ( IDENT_1 ) ) ) { continue ; } int IDENT_10 = com . IDENT_4 . streaming . expression . IDENT_5 . METHOD_6 ( method . METHOD_7 ( ) , IDENT_2 ) ; if ( IDENT_10 == ( - 1 ) ) { continue ; } if ( IDENT_10 == 0 ) { IDENT_8 = method ; break ; } if ( null == IDENT_8 ) { IDENT_8 = method ; IDENT_9 = IDENT_10 ; } else { if ( IDENT_10 < IDENT_9 ) { IDENT_8 = method ; IDENT_9 = IDENT_10 ; } } } return IDENT_8 ; }
org . junit . Assert . assertEquals ( IDENT_6 , IDENT_3 ) 