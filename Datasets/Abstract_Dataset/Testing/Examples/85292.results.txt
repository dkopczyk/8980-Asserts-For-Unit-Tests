METHOD_0 ( ) { java . util . Map < java . lang . String , java . lang . Object > values = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; values . put ( "a" , 1 ) ; values . put ( "b" , 1 ) ; values . put ( STRING_0 , null ) ; com . IDENT_0 . streaming . event . IDENT_1 event = new com . IDENT_0 . streaming . event . METHOD_1 ( STRING_1 , STRING_2 , values , IDENT_2 ) ; com . IDENT_0 . streaming . expression . IDENT_3 IDENT_4 = new com . IDENT_0 . streaming . expression . METHOD_2 ( "a" , com . IDENT_0 . streaming . expression . Integer . class ) ; java . lang . Object IDENT_5 = IDENT_4 . evaluate ( event ) ; "<AssertPlaceHolder>" ; } evaluate ( com . IDENT_0 . streaming . event . IDENT_1 [ ] ) { if ( ( null == IDENT_6 ) || ( 0 == ( IDENT_6 . length ) ) ) { com . IDENT_0 . streaming . expression . IDENT_7 . LOG . error ( STRING_3 ) ; throw new com . IDENT_0 . streaming . exception . METHOD_3 ( STRING_3 ) ; } com . IDENT_0 . streaming . expression . IDENT_8 IDENT_9 = METHOD_4 ( ) ; com . IDENT_0 . streaming . expression . IDENT_8 IDENT_10 = METHOD_5 ( ) ; java . lang . Object IDENT_11 = IDENT_9 . evaluate ( IDENT_6 ) ; java . lang . Object IDENT_12 = IDENT_10 . evaluate ( IDENT_6 ) ; return compute ( IDENT_11 , IDENT_12 ) ; }
org . junit . Assert . assertFalse ( ( ( java . lang . Boolean ) ( IDENT_5 ) ) ) 