METHOD_0 ( ) { java . util . List < java . lang . String > results = new java . util . ArrayList ( ) ; final com . IDENT_0 . IDENT_1 . models . IDENT_2 IDENT_3 = METHOD_1 ( STRING_0 ) ; final com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 . IDENT_6 helper = new com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 . METHOD_2 ( com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_7 . IDENT_8 , IDENT_3 ) ; for ( java . lang . String IDENT_9 : com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_7 . IDENT_10 ) { final com . IDENT_0 . IDENT_1 . models . IDENT_11 IDENT_12 = new com . IDENT_0 . IDENT_1 . models . METHOD_3 ( STRING_1 , com . google . common . base . Optional . of ( STRING_2 ) , com . google . common . base . Optional . of ( IDENT_9 ) ) ; java . lang . IDENT_13 result = helper . METHOD_4 ( com . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_7 . IDENT_14 , IDENT_12 , null ) ; results . add ( result . toString ( ) ) ; } "<AssertPlaceHolder>" ; } toString ( ) { return ( ( ( ( ( ( ( ( ( ( ( STRING_3 + ( IDENT_15 ) ) + STRING_4 ) + ( IDENT_16 ) ) + STRING_5 ) + ( IDENT_17 ) ) + STRING_6 ) + ( IDENT_18 ) ) + STRING_7 ) + ( IDENT_19 ) ) + STRING_8 ) + ( IDENT_20 ) ) + "]" ; }
org . junit . Assert . assertEquals ( java . util . Arrays . asList ( "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" ) , results ) 