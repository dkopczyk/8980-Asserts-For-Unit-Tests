METHOD_0 ( ) { cache = new org . IDENT_0 . cache . map . METHOD_1 ( config ) ; cache . METHOD_2 ( ) ; for ( int i = 0 ; i < ( IDENT_1 ) ; i ++ ) { org . IDENT_0 . cache . test . domain . IDENT_2 IDENT_3 = new org . IDENT_0 . cache . test . domain . METHOD_3 ( i , ( "name" + i ) , null ) ; org . IDENT_0 . cache . to . IDENT_4 key = new org . IDENT_0 . cache . to . METHOD_4 ( ( ( IDENT_3 . getId ( ) ) + "" ) ) ; org . IDENT_0 . cache . to . IDENT_5 IDENT_6 = new org . IDENT_0 . cache . to . METHOD_5 ( IDENT_3 ) ; cache . set ( key , IDENT_6 ) ; java . lang . Thread . sleep ( 50 ) ; } java . lang . Thread . sleep ( 50 ) ; for ( int i = IDENT_1 ; i < ( ( IDENT_1 ) + 5 ) ; i ++ ) { org . IDENT_0 . cache . test . domain . METHOD_3 IDENT_3 = new org . IDENT_0 . cache . test . domain . METHOD_3 ( i , ( "name" + i ) , null ) ; org . IDENT_0 . cache . to . METHOD_4 key = new org . IDENT_0 . cache . to . METHOD_4 ( ( ( IDENT_3 . getId ( ) ) + "" ) ) ; org . IDENT_0 . cache . to . METHOD_5 IDENT_6 = new org . IDENT_0 . cache . to . METHOD_5 ( IDENT_3 ) ; cache . set ( key , IDENT_6 ) ; java . lang . Thread . sleep ( 50 ) ; } "<AssertPlaceHolder>" ; } METHOD_6 ( ) { return cache ; }
org . junit . Assert . assertTrue ( ( ( cache . METHOD_6 ( ) . size ( ) ) == ( IDENT_1 ) ) ) 