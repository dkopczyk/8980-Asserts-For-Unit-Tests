METHOD_0 ( ) { "<AssertPlaceHolder>" ; } METHOD_1 ( int ) { if ( n <= 0 ) return - 1 ; int IDENT_0 = n ; int IDENT_1 = 0 ; int IDENT_2 = 0 ; while ( ( IDENT_0 != 0 ) && ( ( IDENT_0 & 1 ) == 0 ) ) { IDENT_1 ++ ; IDENT_0 OP_0 1 ; } while ( ( IDENT_0 & 1 ) == 1 ) { IDENT_2 ++ ; IDENT_0 OP_0 1 ; } if ( ( IDENT_1 + IDENT_2 ) == INT_0 ) return - 1 ; n = n | ( 1 << ( IDENT_1 + IDENT_2 ) ) ; n = n & ( OP_1 ( ( 1 << ( IDENT_1 + IDENT_2 ) ) - 1 ) ) ; n = n | ( ( 1 << ( IDENT_2 - 1 ) ) - 1 ) ; return n ; }
org . junit . Assert . assertEquals ( 2 , s . METHOD_1 ( 1 ) ) 