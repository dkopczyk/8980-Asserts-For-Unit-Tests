METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . lang . String IDENT_1 = STRING_1 ; int IDENT_2 = METHOD_1 ( IDENT_0 , IDENT_1 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , java . lang . String ) { IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 = IDENT_7 . IDENT_8 . getInstance ( ) . METHOD_2 ( ) ; IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 = IDENT_7 . IDENT_8 . getInstance ( ) . METHOD_3 ( ) ; java . util . HashSet < java . lang . String > IDENT_10 = IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 . METHOD_4 ( IDENT_0 ) ; java . util . HashSet < java . lang . String > IDENT_11 = IDENT_3 . IDENT_4 . IDENT_5 . IDENT_9 . METHOD_4 ( IDENT_1 ) ; java . util . ArrayList < IDENT_7 . common . dto . IDENT_12 > IDENT_13 = new java . util . ArrayList < IDENT_7 . common . dto . IDENT_12 > ( ) ; for ( java . lang . String IDENT_14 : IDENT_10 ) { for ( java . lang . String IDENT_15 : IDENT_11 ) { for ( IDENT_7 . common . dto . IDENT_12 IDENT_16 : IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . METHOD_5 ( IDENT_14 , IDENT_15 ) ) { IDENT_13 . add ( IDENT_16 ) ; } } } int IDENT_2 = IDENT_13 . size ( ) ; return IDENT_2 ; }
org . junit . Assert . assertTrue ( ( IDENT_2 == 16 ) ) 