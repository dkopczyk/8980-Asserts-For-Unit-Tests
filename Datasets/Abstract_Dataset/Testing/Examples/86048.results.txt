METHOD_0 ( ) { java . lang . Object IDENT_0 = com . alibaba . dubbo . common . utils . IDENT_1 . METHOD_1 ( IDENT_2 ) ; java . lang . reflect . Type IDENT_3 = getType ( STRING_0 ) ; java . lang . Object IDENT_4 = com . alibaba . dubbo . common . utils . IDENT_1 . METHOD_2 ( METHOD_1 , com . alibaba . dubbo . common . model . person . IDENT_5 . class , IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . Object [ ] , com . alibaba . dubbo . common . utils . Class [ ] , java . lang . reflect . Type [ ] ) { if ( ( ( IDENT_6 . length ) != ( types . length ) ) || ( ( IDENT_6 . length ) != ( IDENT_7 . length ) ) ) throw new java . lang . IllegalArgumentException ( STRING_1 ) ; java . lang . Object [ ] IDENT_8 = new java . lang . Object [ IDENT_6 . length ] ; for ( int i = 0 ; i < ( IDENT_6 . length ) ; i ++ ) { IDENT_8 [ i ] = com . alibaba . dubbo . common . utils . IDENT_1 . METHOD_2 ( IDENT_6 [ i ] , types [ i ] , IDENT_7 [ i ] ) ; } return IDENT_8 ; }
org . junit . Assert . assertEquals ( IDENT_2 , METHOD_2 ) 