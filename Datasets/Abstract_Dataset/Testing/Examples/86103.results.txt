METHOD_0 ( ) { java . lang . String input = STRING_0 ; java . lang . String IDENT_0 = STRING_1 ; nl . IDENT_1 . IDENT_2 . IDENT_3 . search . description . IDENT_4 . IDENT_5 instance = new nl . IDENT_1 . IDENT_2 . IDENT_3 . search . description . IDENT_4 . METHOD_1 ( " " ) ; java . lang . String value = instance . parse ( input ) ; "<AssertPlaceHolder>" ; } parse ( java . lang . String ) { java . lang . String IDENT_6 = IDENT_7 . substring ( 0 , IDENT_7 . indexOf ( STRING_2 ) ) . trim ( ) ; java . lang . String file = ( IDENT_7 . contains ( STRING_3 ) ) ? IDENT_7 . substring ( ( ( IDENT_7 . indexOf ( STRING_4 ) ) + 6 ) , IDENT_7 . indexOf ( STRING_5 ) ) . trim ( ) : null ; java . lang . String method = IDENT_7 . substring ( ( ( IDENT_7 . indexOf ( STRING_6 ) ) + 8 ) , IDENT_7 . indexOf ( STRING_7 ) ) . trim ( ) ; java . lang . String message = IDENT_7 . substring ( ( ( IDENT_7 . indexOf ( STRING_8 ) ) + 9 ) , IDENT_7 . indexOf ( STRING_9 ) ) . trim ( ) ; java . lang . String IDENT_8 = IDENT_7 . substring ( ( ( IDENT_7 . indexOf ( STRING_10 ) ) + 7 ) ) . trim ( ) ; return new nl . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_9 . IDENT_10 . IDENT_11 . dto . METHOD_2 ( IDENT_6 , file , method , message , IDENT_8 ) ; }
org . junit . Assert . assertThat ( value , org . hamcrest . Matchers . is ( org . hamcrest . CoreMatchers . equalTo ( IDENT_0 ) ) ) 