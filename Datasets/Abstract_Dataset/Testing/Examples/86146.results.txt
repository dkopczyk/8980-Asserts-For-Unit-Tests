METHOD_0 ( ) { com . IDENT_0 . codec . IDENT_1 . IDENT_2 . IDENT_3 ctx = new com . IDENT_0 . codec . IDENT_1 . IDENT_2 . METHOD_1 ( 0 ) ; com . IDENT_0 . codec . IDENT_1 . model . IDENT_4 field = new com . IDENT_0 . codec . IDENT_1 . model . METHOD_2 ( "foo" , "bar" ) ; "<AssertPlaceHolder>" ; } add ( IDENT_5 ) { @ com . IDENT_0 . utils . collection . METHOD_3 ( STRING_0 ) com . IDENT_0 . utils . collection . IDENT_6 . Entry < IDENT_7 , IDENT_5 > IDENT_8 = new com . IDENT_0 . utils . collection . IDENT_6 . Entry < IDENT_7 , IDENT_5 > ( ( ( IDENT_7 ) ( key ) ) , value ) ; com . IDENT_0 . utils . collection . IDENT_6 . IDENT_9 < IDENT_7 , IDENT_5 > IDENT_10 = this . IDENT_11 . METHOD_4 ( IDENT_8 , hash , IDENT_12 ) ; this . IDENT_13 [ index ] = IDENT_10 ; ( this . count ) ++ ; }
org . junit . Assert . assertNull ( ctx . add ( field ) ) 