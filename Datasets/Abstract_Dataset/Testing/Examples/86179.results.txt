METHOD_0 ( ) { org . easymock . EasyMock . expect ( IDENT_0 . METHOD_1 ( ( ( IDENT_1 ) + STRING_0 ) ) ) . andReturn ( ( - 1L ) ) ; org . easymock . EasyMock . expect ( IDENT_2 . getName ( ) ) . andReturn ( STRING_1 ) ; org . easymock . EasyMock . expect ( IDENT_0 . METHOD_2 ( org . easymock . EasyMock . METHOD_3 ( new java . lang . String [ ] { ( IDENT_1 ) + STRING_2 } ) , org . easymock . EasyMock . eq ( IDENT_1 ) , org . easymock . EasyMock . eq ( false ) , org . easymock . EasyMock . eq ( IDENT_3 . IDENT_4 ) ) ) . andReturn ( 0 ) ; org . easymock . EasyMock . expect ( IDENT_0 . METHOD_4 ( INT_0 , 10 ) ) . andReturn ( true ) ; replay ( ) ; boolean IDENT_5 = IDENT_6 . METHOD_5 ( ) ; verify ( ) ; "<AssertPlaceHolder>" ; } verify ( ) { org . easymock . EasyMock . verify ( IDENT_0 ) ; org . easymock . IDENT_7 . EasyMock . verify ( IDENT_2 ) ; }
org . junit . Assert . assertTrue ( IDENT_5 ) 