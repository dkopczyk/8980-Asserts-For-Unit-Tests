METHOD_0 ( ) { org . neo4j . IDENT_0 . IDENT_1 . Map < java . lang . String , java . lang . Boolean > IDENT_2 = new org . neo4j . IDENT_0 . IDENT_1 . METHOD_1 ( ) ; IDENT_2 . put ( STRING_0 , true ) ; IDENT_2 . put ( STRING_1 0 , true ) ; IDENT_2 . put ( STRING_2 , false ) ; IDENT_2 . put ( STRING_3 , false ) ; IDENT_2 . put ( STRING_4 , false ) ; IDENT_2 . put ( STRING_1 , false ) ; IDENT_2 . put ( STRING_5 , false ) ; IDENT_2 . put ( STRING_6 , false ) ; IDENT_2 . put ( STRING_7 , true ) ; IDENT_2 . put ( STRING_8 , true ) ; for ( Map . Entry < java . lang . String , java . lang . Boolean > entry : IDENT_2 . entrySet ( ) ) { org . neo4j . IDENT_3 . IDENT_4 . IDENT_5 results = IDENT_1 . METHOD_2 ( STRING_9 , entry . getKey ( ) ) ; "<AssertPlaceHolder>" ; } } METHOD_3 ( org . neo4j . IDENT_3 . IDENT_4 . IDENT_5 ) { org . neo4j . IDENT_0 . IDENT_1 . Iterator < java . lang . Long > IDENT_6 = result . METHOD_4 ( STRING_10 ) ; boolean METHOD_3 = false ; while ( IDENT_6 . hasNext ( ) ) { METHOD_3 OP_0 ( IDENT_6 . next ( ) ) > 0L ; } return METHOD_3 ; }
org . junit . Assert . assertEquals ( entry . getKey ( ) , entry . getValue ( ) , METHOD_3 ( results ) ) 