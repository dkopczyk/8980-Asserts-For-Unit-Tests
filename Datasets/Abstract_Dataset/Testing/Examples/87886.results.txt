METHOD_0 ( ) { unit . METHOD_1 ( false ) ; unit . METHOD_2 ( false ) ; java . lang . Long IDENT_0 = 1L ; org . lnu . is . domain . IDENT_1 . subject . IDENT_2 parent = new org . lnu . is . domain . IDENT_1 . subject . METHOD_3 ( ) ; parent . setId ( IDENT_0 ) ; java . lang . String IDENT_3 = STRING_0 ; java . lang . String name = STRING_1 ; java . lang . Integer IDENT_4 = 1 ; org . lnu . is . domain . IDENT_1 . subject . METHOD_3 entity = new org . lnu . is . domain . IDENT_1 . subject . METHOD_3 ( ) ; entity . METHOD_4 ( parent ) ; entity . METHOD_5 ( IDENT_3 ) ; entity . setName ( name ) ; entity . METHOD_6 ( IDENT_4 ) ; java . util . Map < java . lang . String , java . lang . Object > expected = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; expected . put ( STRING_2 , parent ) ; expected . put ( STRING_3 , IDENT_3 ) ; expected . put ( "name" , name ) ; expected . put ( STRING_4 , IDENT_4 ) ; when ( IDENT_5 . METHOD_7 ( METHOD_8 ( ) ) ) . thenReturn ( parent ) ; java . util . Map < java . lang . String , java . lang . Object > actual = unit . METHOD_9 ( entity ) ; verify ( IDENT_5 ) . METHOD_7 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( IDENT_6 ) { org . lnu . is . dao . dao . IDENT_7 . LOG . info ( STRING_5 , METHOD_10 ( ) . METHOD_11 ( ) , id ) ; return IDENT_8 . METHOD_12 ( METHOD_10 ( ) , id ) ; }
org . junit . Assert . assertEquals ( expected , actual ) 