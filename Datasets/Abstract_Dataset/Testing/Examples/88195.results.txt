METHOD_0 ( ) { com . IDENT_0 . jts . io . IDENT_1 reader = new com . IDENT_0 . jts . io . METHOD_1 ( ) ; try { com . IDENT_0 . jts . geom . IDENT_2 IDENT_3 = reader . read ( STRING_0 ) ; com . IDENT_0 . jts . geom . IDENT_2 IDENT_4 = reader . read ( STRING_1 ) ; fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_10 IDENT_11 = ( ( fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_10 ) ( fr . IDENT_5 . IDENT_6 . IDENT_7 . util . IDENT_12 . IDENT_13 . METHOD_2 ( IDENT_3 ) ) ) ; fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_10 IDENT_14 = ( ( fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_10 ) ( fr . IDENT_5 . IDENT_6 . IDENT_7 . util . IDENT_12 . IDENT_13 . METHOD_2 ( IDENT_4 ) ) ) ; java . util . List < fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_10 > list = new java . util . ArrayList < fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_10 > ( ) ; list . add ( IDENT_11 ) ; list . add ( IDENT_14 ) ; fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_10 result = fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_15 . IDENT_16 . IDENT_17 . METHOD_3 ( list , 1.0 ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; } } METHOD_3 ( java . util . List , double ) { fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_15 . IDENT_16 . IDENT_17 . logger . debug ( STRING_2 ) ; for ( fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_10 l : IDENT_18 ) { fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_15 . IDENT_16 . IDENT_17 . logger . debug ( ( STRING_3 + l ) ) ; } fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_19 IDENT_20 = new fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . METHOD_4 ( ) ; if ( IDENT_18 . isEmpty ( ) ) { fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_15 . IDENT_16 . IDENT_17 . logger . error ( STRING_4 ) ; return null ; } fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_10 IDENT_21 = IDENT_18 . get ( 0 ) ; if ( ( IDENT_18 . size ( ) ) == 1 ) { return IDENT_21 ; } fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_10 IDENT_22 = IDENT_18 . get ( 1 ) ; fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_23 IDENT_24 = null ; if ( ( fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_15 . IDENT_16 . IDENT_25 . METHOD_5 ( IDENT_21 . METHOD_6 ( ) , IDENT_22 . METHOD_6 ( ) , IDENT_26 ) ) || ( fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_15 . IDENT_16 . IDENT_25 . METHOD_5 ( IDENT_21 . METHOD_6 ( ) , IDENT_22 . METHOD_7 ( ) , IDENT_26 ) ) ) { IDENT_20 . addAll ( ( ( fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_10 ) ( IDENT_21 . METHOD_8 ( ) ) ) . METHOD_9 ( ) ) ; IDENT_24 = IDENT_21 . METHOD_6 ( ) ; } else if ( ( fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_15 . IDENT_16 . IDENT_25 . METHOD_5 ( IDENT_21 . METHOD_7 ( ) , IDENT_22 . METHOD_6 ( ) , IDENT_26 ) ) || ( fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_15 . IDENT_16 . IDENT_25 . METHOD_5 ( IDENT_21 . METHOD_7 ( ) , IDENT_22 . METHOD_7 ( ) , IDENT_26 ) ) ) { IDENT_20 . addAll ( IDENT_21 . METHOD_9 ( ) ) ; IDENT_24 = IDENT_21 . METHOD_7 ( ) ; } else { fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_15 . IDENT_16 . IDENT_17 . logger . error ( STRING_5 ) ; for ( fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_10 l : IDENT_18 ) { fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_15 . IDENT_16 . IDENT_17 . logger . error ( l ) ; } return null ; } fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_15 . IDENT_16 . IDENT_17 . logger . debug ( ( STRING_6 + ( IDENT_24 . METHOD_10 ( ) ) ) ) ; for ( int i = 1 ; i < ( IDENT_18 . size ( ) ) ; i ++ ) { IDENT_22 = IDENT_18 . get ( i ) ; fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_15 . IDENT_16 . IDENT_17 . logger . debug ( ( ( ( STRING_7 + ( IDENT_22 . METHOD_9 ( ) . size ( ) ) ) + STRING_8 ) + IDENT_22 ) ) ; fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_10 IDENT_27 = new fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . METHOD_11 ( IDENT_22 . METHOD_9 ( ) ) ; if ( fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_15 . IDENT_16 . IDENT_25 . METHOD_5 ( IDENT_24 , IDENT_22 . METHOD_6 ( ) , IDENT_26 ) ) { IDENT_27 . METHOD_12 ( IDENT_27 . METHOD_6 ( ) ) ; IDENT_20 . addAll ( IDENT_27 . METHOD_9 ( ) ) ; IDENT_24 = IDENT_27 . METHOD_7 ( ) ; } else if ( fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_15 . IDENT_16 . IDENT_25 . METHOD_5 ( IDENT_24 , IDENT_22 . METHOD_7 ( ) , IDENT_26 ) ) { fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_23 IDENT_28 = IDENT_27 . METHOD_7 ( ) ; fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_10 METHOD_8 = ( ( fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_10 ) ( IDENT_27 . METHOD_8 ( ) ) ) ; METHOD_8 . METHOD_12 ( IDENT_28 ) ; IDENT_20 . addAll ( METHOD_8 . METHOD_9 ( ) ) ; IDENT_24 = IDENT_27 . METHOD_6 ( ) ; } else { fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_15 . IDENT_16 . IDENT_17 . logger . error ( STRING_5 ) ; for ( fr . IDENT_5 . IDENT_6 . IDENT_7 . api . IDENT_8 . IDENT_9 . IDENT_10 l : IDENT_18 ) { fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_15 . IDENT_16 . IDENT_17 . logger . error ( l ) ; } return null ; } } fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_15 . IDENT_16 . IDENT_17 . logger . debug ( ( STRING_9 + ( IDENT_20 . size ( ) ) ) ) ; return new fr . IDENT_5 . IDENT_6 . IDENT_7 . IDENT_8 . IDENT_9 . METHOD_11 ( IDENT_20 , false ) ; }
org . junit . Assert . assertNotNull ( result ) 