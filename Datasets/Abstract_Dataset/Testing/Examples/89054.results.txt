METHOD_0 ( ) { final byte [ ] data = new byte [ ] { 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 } ; final net . IDENT_0 . IDENT_1 . IDENT_2 < net . IDENT_0 . type . IDENT_3 . IDENT_4 . IDENT_5 > in = net . IDENT_0 . IDENT_1 . array . IDENT_6 . bytes ( data , 2 , 2 ) ; final net . IDENT_0 . IDENT_1 . IDENT_2 < net . IDENT_0 . type . IDENT_3 . IDENT_4 . IDENT_5 > out = METHOD_1 ( false , 2 , 2 , 2 ) ; IDENT_7 . run ( net . IDENT_8 . IDENT_7 . filter . IDENT_9 . IDENT_10 . class , out , in , 15 , 5 , 2 ) ; final byte [ ] expected = new byte [ ] { 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 } ; net . IDENT_0 . IDENT_11 < net . IDENT_0 . type . IDENT_3 . IDENT_4 . IDENT_5 > IDENT_12 = out . METHOD_2 ( ) ; for ( int i = 0 ; i < ( expected . length ) ; i ++ ) { "<AssertPlaceHolder>" ; } } next ( ) { ( k ) ++ ; IDENT_13 . METHOD_3 ( k , IDENT_14 ) ; return IDENT_13 . get ( ) ; }
org . junit . Assert . assertEquals ( IDENT_12 . next ( ) . get ( ) , expected [ i ] ) 