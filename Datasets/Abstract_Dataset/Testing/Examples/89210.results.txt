METHOD_0 ( ) { final long [ ] size = new long [ ] { 5 , 10 } ; final net . IDENT_0 . IDENT_1 . array . IDENT_2 < net . IDENT_0 . type . IDENT_3 . IDENT_4 . IDENT_5 , net . IDENT_0 . IDENT_1 . IDENT_6 . array . IDENT_7 > IDENT_1 = net . IDENT_0 . IDENT_1 . array . IDENT_8 . METHOD_1 ( size ) ; int IDENT_9 = 1 ; int IDENT_10 = 1 ; for ( final net . IDENT_0 . type . IDENT_3 . IDENT_4 . IDENT_5 t : IDENT_1 ) { t . set ( ( IDENT_10 OP_0 16 ) ) ; final int next = IDENT_10 + IDENT_9 ; IDENT_9 = IDENT_10 ; IDENT_10 = next ; } final long [ ] expected = new long [ ] { - INT_0 , INT_1 , INT_2 , INT_3 } ; final long [ ] actual = IDENT_1 . update ( null ) . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( ) { return data ; }
org . junit . Assert . assertArrayEquals ( expected , actual ) 