METHOD_0 ( ) { java . lang . String query = STRING_0 ; com . IDENT_0 . IDENT_1 . query . IDENT_2 IDENT_3 = new com . IDENT_0 . IDENT_1 . query . METHOD_1 ( query , IDENT_4 ) ; com . IDENT_0 . IDENT_1 . query . IDENT_5 IDENT_6 = new com . IDENT_0 . IDENT_1 . query . METHOD_2 ( IDENT_3 ) ; IDENT_6 . parse ( ) ; IDENT_3 . METHOD_3 ( ) ; IDENT_3 . METHOD_4 ( 1 , STRING_1 ) ; IDENT_3 . METHOD_4 ( 2 , INT_0 ) ; try { IDENT_3 . METHOD_5 ( STRING_2 ) ; org . junit . Assert . fail ( STRING_3 ) ; } catch ( java . lang . IllegalArgumentException IDENT_7 ) { "<AssertPlaceHolder>" ; } } METHOD_5 ( javax . persistence . IDENT_8 ) { javax . persistence . IDENT_8 match = null ; if ( ( ( IDENT_9 ) != null ) && ( ( IDENT_9 . IDENT_10 ) != null ) ) { for ( javax . persistence . IDENT_8 p : IDENT_9 . IDENT_10 ) { if ( p . equals ( param ) ) { match = p ; if ( IDENT_9 . getType ( ) . equals ( com . IDENT_0 . IDENT_1 . query . METHOD_1 . Type . IDENT_11 ) ) { java . util . List < com . IDENT_0 . IDENT_1 . query . METHOD_1 . IDENT_12 > IDENT_13 = IDENT_9 . METHOD_6 ( ) . get ( ( STRING_4 + ( p . getName ( ) ) ) ) ; if ( IDENT_13 != null ) { return IDENT_13 . get ( 0 ) . getValue ( ) ; } } else { java . util . List < com . IDENT_0 . IDENT_1 . query . METHOD_1 . IDENT_12 > IDENT_13 = IDENT_9 . METHOD_6 ( ) . get ( ( STRING_5 + ( p . METHOD_7 ( ) ) ) ) ; if ( IDENT_13 != null ) { return IDENT_13 . get ( 0 ) . getValue ( ) ; } else { com . IDENT_0 . IDENT_1 . query . METHOD_1 . IDENT_14 IDENT_15 = IDENT_9 . METHOD_8 ( ) . get ( ( STRING_5 + ( p . METHOD_7 ( ) ) ) ) ; if ( IDENT_15 != null ) { java . util . List < java . lang . Object > value = new java . util . ArrayList < java . lang . Object > ( ) ; value . add ( IDENT_15 . getValue ( ) ) ; return value ; } } } break ; } } if ( match == null ) { throw new java . lang . IllegalArgumentException ( STRING_6 ) ; } } com . IDENT_0 . IDENT_1 . query . METHOD_1 . logger . error ( STRING_7 , param ) ; throw new java . lang . IllegalArgumentException ( STRING_6 ) ; }
org . junit . Assert . assertEquals ( STRING_6 , IDENT_7 . getMessage ( ) ) 