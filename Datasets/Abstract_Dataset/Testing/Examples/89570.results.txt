METHOD_0 ( ) { METHOD_1 ( IDENT_0 ) ; org . slc . sli . api . security . context . validator . Set < java . lang . String > IDENT_1 = new org . slc . sli . api . security . context . validator . HashSet < java . lang . String > ( org . slc . sli . api . security . context . validator . Arrays . asList ( IDENT_2 . METHOD_2 ( ) , IDENT_3 . METHOD_2 ( ) ) ) ; "<AssertPlaceHolder>" ; } validate ( java . lang . String , org . slc . sli . api . security . context . validator . Set ) { if ( ! ( METHOD_3 ( IDENT_4 . IDENT_5 , IDENT_6 , IDENT_7 ) ) ) { return Collections . IDENT_8 ; } org . slc . sli . api . security . context . validator . Set < java . lang . String > IDENT_9 = new org . slc . sli . api . security . context . validator . HashSet < java . lang . String > ( ) ; org . slc . sli . domain . IDENT_10 IDENT_11 = new org . slc . sli . domain . METHOD_4 ( new org . slc . sli . domain . METHOD_5 ( STRING_0 , org . slc . sli . domain . METHOD_5 . IDENT_12 , IDENT_7 ) ) ; IDENT_11 . METHOD_6 ( org . slc . sli . api . security . context . validator . Arrays . asList ( STRING_1 , STRING_0 ) ) ; org . slc . sli . api . security . context . validator . IDENT_13 . LOG . info ( STRING_2 , IDENT_7 ) ; METHOD_7 ( IDENT_11 ) ; java . lang . IDENT_14 < org . slc . sli . domain . Entity > IDENT_15 = repo . METHOD_8 ( IDENT_4 . IDENT_16 , IDENT_11 ) ; org . slc . sli . api . security . context . validator . Map < java . lang . String , org . slc . sli . api . security . context . validator . Set < java . lang . String > > IDENT_17 = new org . slc . sli . api . security . context . validator . HashMap < java . lang . String , org . slc . sli . api . security . context . validator . Set < java . lang . String > > ( ) ; METHOD_9 ( IDENT_17 , IDENT_15 ) ; org . slc . sli . api . security . context . validator . Set < java . lang . String > IDENT_18 = METHOD_10 ( ) ; if ( ( IDENT_18 . isEmpty ( ) ) || ( IDENT_17 . isEmpty ( ) ) ) { return Collections . IDENT_8 ; } for ( java . util . Map . Entry < java . lang . String , org . slc . sli . api . security . context . validator . Set < java . lang . String > > entry : IDENT_17 . entrySet ( ) ) { org . slc . sli . api . security . context . validator . Set < java . lang . String > IDENT_19 = new org . slc . sli . api . security . context . validator . HashSet < java . lang . String > ( entry . getValue ( ) ) ; IDENT_19 . METHOD_11 ( IDENT_18 ) ; if ( ( IDENT_19 . size ( ) ) != 0 ) { IDENT_9 . add ( entry . getKey ( ) ) ; } } IDENT_9 . addAll ( METHOD_12 ( IDENT_4 . IDENT_20 , STRING_3 ) ) ; IDENT_9 . addAll ( METHOD_12 ( IDENT_4 . IDENT_21 , STRING_4 ) ) ; IDENT_11 = new org . slc . sli . domain . METHOD_4 ( new org . slc . sli . domain . METHOD_5 ( STRING_5 , STRING_6 , IDENT_18 ) ) ; java . lang . IDENT_14 < org . slc . sli . domain . Entity > IDENT_22 = repo . METHOD_8 ( IDENT_4 . IDENT_23 , IDENT_11 ) ; org . slc . sli . api . security . context . validator . List < java . lang . String > IDENT_24 = new org . slc . sli . api . security . context . validator . ArrayList < java . lang . String > ( ) ; for ( org . slc . sli . domain . Entity e : IDENT_22 ) { java . lang . Object value = e . METHOD_13 ( ) . get ( STRING_7 ) ; if ( value != null ) { if ( org . slc . sli . api . security . context . validator . List . class . METHOD_14 ( value . getClass ( ) ) ) { IDENT_24 . addAll ( ( ( org . slc . sli . api . security . context . validator . List < java . lang . String > ) ( value ) ) ) ; } else if ( java . lang . String . class . METHOD_14 ( value . getClass ( ) ) ) { IDENT_24 . add ( ( ( java . lang . String ) ( value ) ) ) ; } } } IDENT_9 . addAll ( METHOD_15 ( IDENT_4 . IDENT_20 , STRING_3 , IDENT_24 ) ) ; IDENT_11 = new org . slc . sli . domain . METHOD_4 ( new org . slc . sli . domain . METHOD_5 ( STRING_8 , STRING_6 , IDENT_18 ) ) ; org . slc . sli . api . security . context . validator . List < java . lang . String > IDENT_25 = ( ( org . slc . sli . api . security . context . validator . List < java . lang . String > ) ( repo . METHOD_16 ( IDENT_4 . IDENT_26 , IDENT_11 ) ) ) ; IDENT_9 . addAll ( METHOD_15 ( IDENT_4 . IDENT_21 , STRING_4 , IDENT_25 ) ) ; IDENT_9 . METHOD_11 ( IDENT_7 ) ; return IDENT_9 ; }
org . junit . Assert . assertTrue ( validator . validate ( IDENT_4 . IDENT_5 , IDENT_1 ) . equals ( IDENT_1 ) ) 