METHOD_0 ( ) { org . slc . sli . domain . Entity IDENT_0 = METHOD_1 ( ) ; IDENT_0 . METHOD_2 ( ) . remove ( STRING_0 ) ; IDENT_0 . METHOD_2 ( ) . remove ( STRING_1 ) ; IDENT_0 . METHOD_2 ( ) . remove ( STRING_2 ) ; IDENT_0 . METHOD_2 ( ) . remove ( STRING_3 ) ; "<AssertPlaceHolder>" ; } validate ( org . slc . sli . domain . Entity ) { org . slc . sli . validation . schema . IDENT_1 schema = IDENT_2 . METHOD_3 ( entity . getType ( ) ) ; if ( schema == null ) { org . slc . sli . validation . schema . IDENT_3 . LOG . warn ( STRING_4 , entity . getType ( ) ) ; return true ; } java . util . List < org . slc . sli . validation . IDENT_4 > errors = new java . util . IDENT_5 < org . slc . sli . validation . IDENT_4 > ( ) ; boolean IDENT_6 = schema . validate ( "" , entity . METHOD_2 ( ) , errors , IDENT_7 ) ; if ( ! IDENT_6 ) { org . slc . sli . validation . schema . IDENT_3 . LOG . debug ( STRING_5 , new java . lang . Object [ ] { entity . METHOD_4 ( ) , errors } ) ; throw new org . slc . sli . validation . METHOD_5 ( entity . METHOD_4 ( ) , entity . getType ( ) , errors ) ; } IDENT_6 = IDENT_8 . validate ( entity , errors ) ; if ( ! IDENT_6 ) { org . slc . sli . validation . schema . IDENT_3 . LOG . debug ( STRING_5 , new java . lang . Object [ ] { entity . METHOD_4 ( ) , errors } ) ; throw new org . slc . sli . validation . METHOD_5 ( entity . METHOD_4 ( ) , entity . getType ( ) , errors ) ; } return true ; }
org . junit . Assert . assertTrue ( validator . validate ( IDENT_0 ) ) 