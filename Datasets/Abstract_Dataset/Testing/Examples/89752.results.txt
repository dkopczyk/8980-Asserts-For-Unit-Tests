METHOD_0 ( ) { final java . io . File table = new java . io . File ( IDENT_0 , STRING_0 ) ; final com . IDENT_1 . IDENT_2 . IDENT_3 < java . lang . Long , java . lang . Long > config = new com . IDENT_1 . IDENT_2 . METHOD_1 ( ) . METHOD_2 ( new com . IDENT_1 . IDENT_2 . IDENT_4 . METHOD_3 ( ) ) . METHOD_4 ( new com . IDENT_1 . IDENT_2 . IDENT_4 . METHOD_3 ( ) ) ; final java . util . List < com . IDENT_1 . util . core . IDENT_5 < java . lang . Long , java . lang . Long > > IDENT_6 = new java . util . ArrayList ( ) ; for ( long i = 0 ; i < 20 ; ++ i ) { IDENT_6 . add ( new com . IDENT_1 . util . core . METHOD_5 ( i , ( i * i ) ) ) ; } IDENT_6 . add ( new com . IDENT_1 . util . core . METHOD_5 ( null , INT_0 ) ) ; boolean IDENT_7 = false ; try { com . IDENT_1 . IDENT_2 . IDENT_8 . write ( table , config , IDENT_6 ) ; } catch ( final java . lang . IllegalArgumentException e ) { IDENT_7 = true ; } "<AssertPlaceHolder>" ; } write ( java . io . File , com . IDENT_1 . IDENT_2 . METHOD_1 , java . lang . IDENT_9 ) { long IDENT_10 = 0 ; for ( final com . IDENT_1 . util . core . METHOD_5 < IDENT_11 , IDENT_12 > e : IDENT_6 ) { if ( ( ( e . METHOD_6 ( ) ) == null ) || ( ( ( e . METHOD_7 ( ) ) == null ) && ( ( config . METHOD_8 ( ) ) != null ) ) ) { throw new java . lang . IllegalArgumentException ( ( STRING_1 + e ) ) ; } IDENT_10 += config . METHOD_9 ( e . METHOD_6 ( ) , e . METHOD_7 ( ) ) ; } com . IDENT_1 . IDENT_2 . IDENT_8 . write ( IDENT_13 , config , IDENT_6 , IDENT_10 ) ; }
org . junit . Assert . assertTrue ( IDENT_7 ) 