METHOD_0 ( ) { eu . IDENT_0 . android . lib . IDENT_1 . IDENT_2 . IDENT_3 model = new eu . IDENT_0 . android . lib . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; model . view . METHOD_2 ( "" ) ; final boolean IDENT_4 = eu . IDENT_0 . android . lib . IDENT_1 . IDENT_5 . IDENT_6 . validate ( IDENT_7 . application , model , null ) ; "<AssertPlaceHolder>" ; } validate ( android . content . Context , java . lang . Object , eu . IDENT_0 . android . lib . IDENT_1 . IDENT_5 . IDENT_8 . IDENT_9 ) { if ( context == null ) { throw new java . lang . IllegalArgumentException ( STRING_0 ) ; } if ( target == null ) { throw new java . lang . IllegalArgumentException ( STRING_1 ) ; } final java . util . List < eu . IDENT_0 . android . lib . IDENT_1 . IDENT_5 . IDENT_6 . IDENT_10 > IDENT_11 = new java . util . ArrayList ( ) ; final java . util . List < android . view . IDENT_12 > IDENT_13 = new java . util . ArrayList ( ) ; boolean result = true ; final java . util . Map < android . view . IDENT_12 , eu . IDENT_0 . android . lib . IDENT_1 . IDENT_5 . IDENT_6 . IDENT_14 > IDENT_15 = eu . IDENT_0 . android . lib . IDENT_1 . IDENT_5 . IDENT_16 . METHOD_3 ( target ) ; for ( Map . Entry < android . view . IDENT_12 , eu . IDENT_0 . android . lib . IDENT_1 . IDENT_5 . IDENT_6 . IDENT_14 > entry : IDENT_15 . entrySet ( ) ) { final eu . IDENT_0 . android . lib . IDENT_1 . IDENT_5 . IDENT_6 . IDENT_14 IDENT_17 = entry . getValue ( ) ; final android . view . IDENT_12 view = entry . getKey ( ) ; if ( ( ( view . METHOD_4 ( ) ) == ( android . view . IDENT_12 . IDENT_18 ) ) || ( ( view . METHOD_4 ( ) ) == ( android . view . IDENT_12 . IDENT_19 ) ) ) { continue ; } eu . IDENT_0 . android . lib . IDENT_1 . IDENT_5 . IDENT_6 . IDENT_10 IDENT_20 = eu . IDENT_0 . android . lib . IDENT_1 . IDENT_5 . IDENT_6 . METHOD_5 ( context , IDENT_17 , view ) ; if ( IDENT_20 != null ) { IDENT_11 . add ( IDENT_20 ) ; result = false ; } else { IDENT_13 . add ( view ) ; } } if ( IDENT_21 != null ) { java . util . Collections . METHOD_6 ( IDENT_11 , new java . util . IDENT_22 < eu . IDENT_0 . android . lib . IDENT_1 . IDENT_5 . IDENT_6 . IDENT_10 > ( ) { @ eu . IDENT_0 . android . lib . IDENT_1 . IDENT_5 . Override public int compare ( eu . IDENT_0 . android . lib . IDENT_1 . IDENT_5 . IDENT_6 . IDENT_10 IDENT_23 , eu . IDENT_0 . android . lib . IDENT_1 . IDENT_5 . IDENT_6 . IDENT_10 IDENT_24 ) { return ( IDENT_23 . order ) < ( IDENT_24 . order ) ? - 1 : ( IDENT_23 . order ) == ( IDENT_24 . order ) ? 0 : 1 ; } } ) ; IDENT_21 . METHOD_7 ( result , java . util . Collections . METHOD_8 ( IDENT_11 ) , java . util . Collections . METHOD_8 ( IDENT_13 ) ) ; } return result ; }
org . junit . Assert . assertFalse ( IDENT_4 ) 