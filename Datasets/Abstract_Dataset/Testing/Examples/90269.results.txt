METHOD_0 ( ) { METHOD_1 ( ) . execute ( new org . springframework . transaction . support . METHOD_2 ( ) { @ org . IDENT_0 . IDENT_1 . service . dto . impl . Override public void METHOD_3 ( org . springframework . transaction . IDENT_2 status ) { try { java . util . List < org . IDENT_0 . IDENT_1 . domain . dto . IDENT_3 > list = IDENT_4 . METHOD_4 ( INT_0 ) ; "<AssertPlaceHolder>" ; } catch ( java . lang . Exception e ) { org . junit . Assert . fail ( org . apache . commons . lang . exception . IDENT_5 . METHOD_5 ( e ) ) ; } status . METHOD_6 ( ) ; } } ) ; } METHOD_4 ( long ) { final org . IDENT_0 . IDENT_1 . domain . dto . IDENT_6 IDENT_7 = IDENT_8 . METHOD_7 ( IDENT_9 ) ; if ( ( IDENT_7 != null ) && ( IDENT_10 . METHOD_8 ( IDENT_7 . getCode ( ) ) ) ) { final java . util . List < org . IDENT_0 . IDENT_1 . domain . dto . IDENT_3 > IDENT_11 = IDENT_12 . METHOD_4 ( IDENT_9 ) ; return IDENT_13 . METHOD_9 ( org . IDENT_0 . IDENT_1 . domain . vo . IDENT_14 . class , org . IDENT_0 . IDENT_1 . domain . dto . IDENT_3 . class , IDENT_11 ) ; } else { throw new org . springframework . security . IDENT_15 . METHOD_10 ( STRING_0 ) ; } }
org . junit . Assert . assertNull ( list ) 