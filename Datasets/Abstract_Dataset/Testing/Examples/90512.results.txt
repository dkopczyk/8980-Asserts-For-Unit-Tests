METHOD_0 ( ) { when ( IDENT_0 . METHOD_1 ( ) ) . thenReturn ( null ) ; java . util . List < com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 > IDENT_5 = IDENT_6 . METHOD_1 ( ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( ) { com . IDENT_1 . IDENT_2 . repository . cassandra . impl . IDENT_7 . LOGGER . debug ( STRING_0 ) ; java . util . List < com . IDENT_1 . IDENT_2 . repository . cassandra . IDENT_8 . IDENT_4 > IDENT_9 = IDENT_10 . METHOD_2 ( ) . METHOD_3 ( ) ; com . IDENT_1 . IDENT_2 . repository . cassandra . impl . IDENT_7 . LOGGER . debug ( STRING_1 , IDENT_9 ) ; java . util . List < com . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 > IDENT_11 = IDENT_9 . stream ( ) . filter ( ( IDENT_12 ) -> ( IDENT_13 . IDENT_14 . toString ( ) . equalsIgnoreCase ( IDENT_12 . METHOD_4 ( ) . toString ( ) ) ) && ( com . IDENT_1 . IDENT_2 . repository . cassandra . impl . IDENT_7 . IDENT_15 . equals ( IDENT_12 . METHOD_5 ( ) ) ) ) . map ( ( IDENT_12 ) -> METHOD_6 ( IDENT_12 ) ) . collect ( java . util . stream . IDENT_16 . toList ( ) ) ; com . IDENT_1 . IDENT_2 . repository . cassandra . impl . IDENT_7 . LOGGER . debug ( STRING_2 , IDENT_11 ) ; return IDENT_11 ; }
org . junit . Assert . assertEquals ( null , IDENT_5 ) 