METHOD_0 ( ) { java . lang . String xml = STRING_0 ; java . lang . String expResult = STRING_1 + ( ( STRING_2 + STRING_3 ) + STRING_4 ) ; java . lang . String result = edu . IDENT_0 . IDENT_1 . IDENT_2 . util . xml . IDENT_3 . METHOD_1 ( xml ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { try { javax . xml . transform . IDENT_4 IDENT_5 = javax . xml . transform . IDENT_6 . IDENT_7 . newInstance ( ) . METHOD_2 ( ) ; IDENT_5 . METHOD_3 ( IDENT_8 . IDENT_9 , STRING_5 ) ; IDENT_5 . METHOD_3 ( STRING_6 , "2" ) ; javax . xml . transform . IDENT_10 source = new javax . xml . transform . IDENT_6 . METHOD_4 ( new org . xml . IDENT_6 . METHOD_5 ( new java . io . ByteArrayInputStream ( xml . getBytes ( ) ) ) ) ; javax . xml . transform . stream . IDENT_11 IDENT_12 = new javax . xml . transform . stream . METHOD_6 ( new java . io . ByteArrayOutputStream ( ) ) ; IDENT_5 . transform ( source , IDENT_12 ) ; return new java . lang . String ( ( ( java . io . ByteArrayOutputStream ) ( IDENT_12 . METHOD_7 ( ) ) ) . toByteArray ( ) ) ; } catch ( java . lang . IllegalArgumentException | javax . xml . transform . IDENT_13 ex ) { edu . IDENT_0 . IDENT_1 . IDENT_2 . util . xml . IDENT_3 . logger . info ( ( STRING_7 + ( ex . toString ( ) ) ) ) ; return xml ; } }
org . junit . Assert . assertEquals ( expResult , result ) 