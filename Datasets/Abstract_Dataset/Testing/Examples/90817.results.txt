test ( ) { java . lang . String IDENT_0 = STRING_0 ; IDENT_1 . IDENT_2 m = new IDENT_1 . METHOD_0 ( ) ; IDENT_1 . IDENT_3 fr = new IDENT_1 . METHOD_1 ( ) ; IDENT_4 . IDENT_5 IDENT_6 = new IDENT_4 . METHOD_2 ( ) ; java . util . HashMap < java . lang . String , IDENT_1 . IDENT_7 > IDENT_8 = new java . util . HashMap < java . lang . String , IDENT_1 . IDENT_7 > ( ) ; java . util . HashMap < java . lang . String , IDENT_1 . IDENT_9 > IDENT_10 = new java . util . HashMap < java . lang . String , IDENT_1 . IDENT_9 > ( ) ; java . util . HashMap < java . lang . String , IDENT_1 . IDENT_11 > IDENT_12 = m . METHOD_3 ( false ) ; m . METHOD_4 ( IDENT_12 , IDENT_8 , IDENT_10 ) ; java . lang . String IDENT_13 = IDENT_6 . METHOD_5 ( IDENT_10 ) ; IDENT_4 . IDENT_14 IDENT_15 = new IDENT_4 . METHOD_6 ( ) ; java . lang . String IDENT_16 = IDENT_15 . METHOD_7 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( java . lang . String ) { java . lang . StringBuilder s = new java . lang . StringBuilder ( ) ; java . io . IDENT_17 IDENT_18 ; try { IDENT_18 = new java . io . METHOD_8 ( IDENT_19 ) ; java . io . IDENT_20 in = new java . io . METHOD_9 ( IDENT_18 ) ; java . io . IDENT_21 br = new java . io . METHOD_10 ( new java . io . METHOD_11 ( in , STRING_1 ) ) ; java . lang . String IDENT_22 ; while ( ( IDENT_22 = br . METHOD_12 ( ) ) != null ) { s . append ( ( ( IDENT_22 . trim ( ) ) + "\n" ) ) ; } br . close ( ) ; in . close ( ) ; IDENT_18 . close ( ) ; } catch ( java . io . IDENT_23 e ) { e . printStackTrace ( ) ; } catch ( java . io . IDENT_24 e ) { e . printStackTrace ( ) ; } catch ( java . io . IOException e ) { e . printStackTrace ( ) ; } return s . toString ( ) ; }
org . junit . Assert . assertEquals ( IDENT_13 , IDENT_16 . substring ( 1 ) ) 