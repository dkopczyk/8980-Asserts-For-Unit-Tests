METHOD_0 ( ) { final ch . cyberduck . core . Path container = new ch . cyberduck . core . Path ( STRING_0 , java . util . IDENT_0 . of ( Path . Type . directory , Path . Type . IDENT_1 ) ) ; final ch . cyberduck . core . Path test = new ch . cyberduck . core . Path ( container , java . util . UUID . METHOD_1 ( ) . toString ( ) , java . util . IDENT_0 . of ( Path . Type . file ) ) ; new ch . cyberduck . core . IDENT_2 . METHOD_2 ( session ) . METHOD_3 ( test , new ch . cyberduck . core . IDENT_3 . METHOD_4 ( ) ) ; final ch . cyberduck . core . IDENT_2 . IDENT_4 f = new ch . cyberduck . core . IDENT_2 . METHOD_5 ( session ) ; { final ch . cyberduck . core . IDENT_5 IDENT_6 = new ch . cyberduck . core . METHOD_6 ( ) ; IDENT_6 . addAll ( new ch . cyberduck . core . METHOD_6 . METHOD_7 ( METHOD_6 . METHOD_7 . IDENT_7 ) , new ch . cyberduck . core . METHOD_6 . METHOD_8 ( METHOD_6 . METHOD_8 . IDENT_8 ) ) ; IDENT_6 . addAll ( new ch . cyberduck . core . METHOD_6 . METHOD_7 ( METHOD_6 . METHOD_7 . IDENT_9 ) , new ch . cyberduck . core . METHOD_6 . METHOD_8 ( METHOD_6 . METHOD_8 . IDENT_8 ) ) ; f . METHOD_9 ( test , IDENT_6 ) ; } { final ch . cyberduck . core . METHOD_6 IDENT_6 = new ch . cyberduck . core . METHOD_6 ( ) ; IDENT_6 . addAll ( new ch . cyberduck . core . METHOD_6 . METHOD_7 ( STRING_1 ) , new ch . cyberduck . core . METHOD_6 . METHOD_8 ( METHOD_6 . METHOD_8 . IDENT_8 ) ) ; IDENT_6 . addAll ( new ch . cyberduck . core . METHOD_6 . METHOD_7 ( STRING_2 ) , new ch . cyberduck . core . METHOD_6 . METHOD_8 ( METHOD_6 . METHOD_8 . IDENT_8 ) ) ; IDENT_6 . addAll ( new ch . cyberduck . core . METHOD_6 . METHOD_10 ( STRING_3 ) , new ch . cyberduck . core . METHOD_6 . METHOD_8 ( METHOD_6 . METHOD_8 . IDENT_10 ) ) ; "<AssertPlaceHolder>" ; } new ch . cyberduck . core . IDENT_2 . METHOD_11 ( session ) . delete ( java . util . Collections . singletonList ( test ) , new ch . cyberduck . core . METHOD_12 ( ) , new ch . cyberduck . core . IDENT_11 . IDENT_12 . METHOD_13 ( ) ) ; } METHOD_14 ( ch . cyberduck . core . Path ) { return new ch . cyberduck . core . IDENT_13 . METHOD_15 ( session , IDENT_14 ) . find ( file ) . METHOD_16 ( ) ; }
org . junit . Assert . assertEquals ( IDENT_6 , f . METHOD_14 ( test ) ) 