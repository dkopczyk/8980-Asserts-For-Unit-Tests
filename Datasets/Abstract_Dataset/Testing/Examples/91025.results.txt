METHOD_0 ( ) { final ch . cyberduck . core . IDENT_0 . IDENT_1 host = new ch . cyberduck . core . IDENT_0 . METHOD_1 ( new ch . cyberduck . core . IDENT_0 . METHOD_2 ( ) , new ch . cyberduck . core . IDENT_0 . METHOD_2 ( ) . METHOD_3 ( ) , new ch . cyberduck . core . IDENT_0 . METHOD_4 ( java . lang . System . METHOD_5 ( ) . getProperty ( STRING_0 ) , java . lang . System . METHOD_5 ( ) . getProperty ( STRING_1 ) ) ) ; final ch . cyberduck . core . IDENT_2 . IDENT_3 IDENT_4 = new ch . cyberduck . core . IDENT_2 . METHOD_6 ( new ch . cyberduck . core . IDENT_2 . METHOD_7 ( host ) , new ch . cyberduck . core . IDENT_0 . METHOD_8 ( ) { @ ch . cyberduck . core . IDENT_0 . Override public boolean METHOD_9 ( final java . lang . String IDENT_5 , final java . util . List < java . security . IDENT_6 . IDENT_7 > IDENT_8 ) { "<AssertPlaceHolder>" ; return true ; } } ) ; final ch . cyberduck . core . IDENT_0 . IDENT_9 session = new ch . cyberduck . core . IDENT_0 . METHOD_10 ( host , new ch . cyberduck . core . IDENT_2 . METHOD_11 ( ) , new ch . cyberduck . core . IDENT_2 . METHOD_12 ( host , new ch . cyberduck . core . IDENT_0 . METHOD_8 ( ) ) ) ; final ch . cyberduck . core . IDENT_0 . IDENT_10 IDENT_11 = new ch . cyberduck . core . IDENT_0 . METHOD_13 ( new ch . cyberduck . core . IDENT_0 . METHOD_14 ( ) { @ ch . cyberduck . core . IDENT_0 . Override public ch . cyberduck . core . IDENT_0 . METHOD_4 METHOD_15 ( final ch . cyberduck . core . IDENT_0 . METHOD_1 IDENT_12 , final java . lang . String IDENT_13 , final java . lang . String IDENT_14 , final java . lang . String IDENT_15 , final ch . cyberduck . core . IDENT_0 . IDENT_16 options ) { org . junit . Assert . fail ( IDENT_15 ) ; return null ; } } , new ch . cyberduck . core . IDENT_0 . METHOD_16 ( ) , new ch . cyberduck . core . IDENT_0 . METHOD_17 ( ) , new ch . cyberduck . core . IDENT_0 . METHOD_18 ( ) ) ; IDENT_11 . METHOD_19 ( session , ch . cyberduck . core . IDENT_0 . IDENT_17 . empty ( ) , new ch . cyberduck . core . IDENT_0 . METHOD_20 ( ) ) ; new ch . cyberduck . core . IDENT_0 . METHOD_21 ( session ) . list ( new ch . cyberduck . core . IDENT_0 . Path ( STRING_2 , java . util . IDENT_18 . of ( Path . Type . IDENT_19 , Path . Type . directory ) ) , new ch . cyberduck . core . IDENT_0 . METHOD_22 ( ) ) ; } METHOD_9 ( java . lang . String , java . util . List ) { org . junit . Assert . assertEquals ( STRING_3 , IDENT_5 ) ; return true ; }
org . junit . Assert . assertEquals ( STRING_3 , IDENT_5 ) 