METHOD_0 ( ) { final ch . cyberduck . core . IDENT_0 IDENT_1 = new ch . cyberduck . core . METHOD_1 ( java . lang . System . getProperty ( STRING_0 ) , java . util . UUID . METHOD_2 ( ) . toString ( ) ) ; final byte [ ] content = new byte [ INT_0 ] ; new java . util . METHOD_3 ( ) . METHOD_4 ( content ) ; final java . io . IDENT_2 out = IDENT_1 . METHOD_5 ( false ) ; org . apache . commons . io . IDENT_3 . write ( content , out ) ; out . close ( ) ; final ch . cyberduck . core . Path test = new ch . cyberduck . core . Path ( new ch . cyberduck . core . IDENT_4 . METHOD_6 ( session ) . find ( ) , java . util . UUID . METHOD_2 ( ) . toString ( ) , java . util . IDENT_5 . of ( Path . Type . file ) ) ; { final ch . cyberduck . core . IDENT_6 . IDENT_7 status = new ch . cyberduck . core . IDENT_6 . METHOD_7 ( ) . length ( ( ( content . length ) / 2 ) ) ; new ch . cyberduck . core . shared . IDENT_8 < java . lang . IDENT_9 > ( new ch . cyberduck . core . IDENT_4 . METHOD_8 ( session ) ) . METHOD_9 ( test , IDENT_1 , new ch . cyberduck . core . io . METHOD_10 ( ch . cyberduck . core . io . METHOD_10 . IDENT_10 ) , new ch . cyberduck . core . io . METHOD_11 ( ) , status , new ch . cyberduck . core . METHOD_12 ( ) ) ; } { final ch . cyberduck . core . IDENT_6 . METHOD_7 status = new ch . cyberduck . core . IDENT_6 . METHOD_7 ( ) . length ( ( ( content . length ) / 2 ) ) . METHOD_13 ( ( ( content . length ) / 2 ) ) . append ( true ) ; new ch . cyberduck . core . shared . IDENT_8 < java . lang . IDENT_9 > ( new ch . cyberduck . core . IDENT_4 . METHOD_8 ( session ) ) . METHOD_9 ( test , IDENT_1 , new ch . cyberduck . core . io . METHOD_10 ( ch . cyberduck . core . io . METHOD_10 . IDENT_10 ) , new ch . cyberduck . core . io . METHOD_11 ( ) , status , new ch . cyberduck . core . METHOD_12 ( ) ) ; } final byte [ ] buffer = new byte [ content . length ] ; final ch . cyberduck . core . IDENT_11 . IDENT_12 read = session . METHOD_14 ( ch . cyberduck . core . IDENT_11 . IDENT_12 . class ) ; final java . io . InputStream in = read . read ( test , new ch . cyberduck . core . IDENT_6 . METHOD_7 ( ) . length ( content . length ) , new ch . cyberduck . core . METHOD_12 ( ) ) ; org . apache . commons . io . IDENT_3 . METHOD_15 ( in , buffer ) ; in . close ( ) ; "<AssertPlaceHolder>" ; final ch . cyberduck . core . IDENT_11 . IDENT_13 delete = session . METHOD_14 ( ch . cyberduck . core . IDENT_11 . IDENT_13 . class ) ; delete . delete ( java . util . Collections . singletonList ( test ) , new ch . cyberduck . core . METHOD_16 ( ) , new ch . cyberduck . core . IDENT_11 . IDENT_13 . METHOD_17 ( ) ) ; IDENT_1 . delete ( ) ; } close ( ) { try { super . close ( ) ; } finally { METHOD_18 ( IDENT_14 ) ; } }
org . junit . Assert . assertArrayEquals ( content , buffer ) 