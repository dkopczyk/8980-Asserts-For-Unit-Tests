METHOD_0 ( ) { com . itextpdf . kernel . pdf . IDENT_0 IDENT_1 = new com . itextpdf . kernel . pdf . METHOD_1 ( new com . itextpdf . kernel . pdf . METHOD_2 ( new com . itextpdf . io . source . ByteArrayOutputStream ( ) ) ) ; com . itextpdf . IDENT_2 . IDENT_3 IDENT_4 = com . itextpdf . IDENT_2 . IDENT_3 . METHOD_3 ( IDENT_1 , true ) ; com . itextpdf . IDENT_2 . fields . IDENT_5 root = com . itextpdf . IDENT_2 . fields . IDENT_5 . METHOD_4 ( IDENT_1 ) ; root . METHOD_5 ( STRING_0 ) ; com . itextpdf . IDENT_2 . fields . IDENT_5 child = com . itextpdf . IDENT_2 . fields . IDENT_5 . METHOD_4 ( IDENT_1 ) ; child . METHOD_5 ( STRING_1 ) ; root . METHOD_6 ( child ) ; com . itextpdf . IDENT_2 . fields . IDENT_6 IDENT_7 = com . itextpdf . IDENT_2 . fields . IDENT_5 . METHOD_7 ( IDENT_1 , new com . itextpdf . kernel . geom . METHOD_8 ( 100 , INT_0 , 200 , 20 ) , STRING_2 , "test" ) ; child . METHOD_6 ( IDENT_7 ) ; IDENT_4 . METHOD_9 ( root ) ; "<AssertPlaceHolder>" ; } METHOD_10 ( ) { if ( ( fields . size ( ) ) == 0 ) { fields = METHOD_11 ( METHOD_12 ( ) ) ; } return fields ; }
org . junit . Assert . assertEquals ( 3 , IDENT_4 . METHOD_10 ( ) . size ( ) ) 