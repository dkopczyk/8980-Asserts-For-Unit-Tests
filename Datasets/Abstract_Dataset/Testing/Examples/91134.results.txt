METHOD_0 ( ) { java . lang . String IDENT_0 = ( com . itextpdf . kernel . pdf . IDENT_1 . IDENT_2 ) + STRING_0 ; com . itextpdf . kernel . pdf . IDENT_3 IDENT_4 = new com . itextpdf . kernel . pdf . METHOD_1 ( new com . itextpdf . kernel . pdf . METHOD_2 ( IDENT_0 ) ) ; com . itextpdf . kernel . pdf . IDENT_5 IDENT_6 = IDENT_4 . METHOD_3 ( true ) ; java . util . List < java . lang . String > IDENT_7 = new java . util . ArrayList ( 6 ) ; for ( com . itextpdf . kernel . pdf . IDENT_5 child : IDENT_6 . METHOD_4 ( ) ) { IDENT_7 . add ( child . METHOD_5 ( ) ) ; for ( com . itextpdf . kernel . pdf . IDENT_5 IDENT_8 : child . METHOD_4 ( ) ) IDENT_7 . add ( IDENT_8 . METHOD_5 ( ) ) ; } IDENT_4 . close ( ) ; java . util . List < java . lang . String > expected = new java . util . ArrayList ( 6 ) ; expected . add ( STRING_1 ) ; expected . add ( STRING_2 ) ; expected . add ( STRING_3 ) ; expected . add ( STRING_4 ) ; expected . add ( STRING_5 ) ; expected . add ( STRING_6 ) ; for ( int i = 0 ; i < 6 ; i ++ ) "<AssertPlaceHolder>" ; } get ( int ) { return IDENT_9 [ index ] ; }
org . junit . Assert . assertEquals ( expected . get ( i ) , IDENT_7 . get ( i ) ) 