METHOD_0 ( ) { com . itextpdf . IDENT_0 . jsoup . nodes . Element IDENT_1 = new com . itextpdf . IDENT_0 . jsoup . nodes . Element ( com . itextpdf . IDENT_0 . jsoup . parser . IDENT_2 . valueOf ( STRING_0 ) , STRING_1 2 ) ; com . itextpdf . IDENT_0 . jsoup . nodes . IDENT_3 IDENT_4 = new com . itextpdf . IDENT_0 . jsoup . nodes . METHOD_1 ( ( STRING_1 1 + ( ( ( ( ( STRING_1 3 + STRING_2 ) + STRING_1 4 ) + STRING_1 0 ) + STRING_1 ) + " " ) ) , STRING_1 2 ) ; com . itextpdf . IDENT_0 . node . impl . jsoup . node . IDENT_5 IDENT_6 = new com . itextpdf . IDENT_0 . node . impl . jsoup . node . METHOD_2 ( IDENT_1 ) ; IDENT_6 . METHOD_3 ( new com . itextpdf . IDENT_0 . node . impl . jsoup . node . METHOD_4 ( IDENT_4 ) ) ; com . itextpdf . IDENT_0 . jsoup . nodes . Element IDENT_7 = new com . itextpdf . IDENT_0 . jsoup . nodes . Element ( com . itextpdf . IDENT_0 . jsoup . parser . IDENT_2 . valueOf ( STRING_3 ) , STRING_1 2 ) ; com . itextpdf . IDENT_0 . node . impl . jsoup . node . METHOD_2 IDENT_8 = new com . itextpdf . IDENT_0 . node . impl . jsoup . node . METHOD_2 ( IDENT_7 ) ; com . itextpdf . IDENT_9 . IDENT_10 . impl . IDENT_11 context = new com . itextpdf . IDENT_9 . IDENT_10 . impl . METHOD_5 ( new com . itextpdf . IDENT_9 . IDENT_10 . impl . METHOD_6 ( ) ) ; com . itextpdf . IDENT_9 . IDENT_12 . impl . IDENT_13 resolver = new com . itextpdf . IDENT_9 . IDENT_12 . impl . METHOD_7 ( IDENT_6 , context ) ; com . itextpdf . IDENT_0 . IDENT_12 . resolve . IDENT_14 IDENT_15 = new com . itextpdf . IDENT_9 . IDENT_12 . METHOD_8 ( ) ; java . util . Map < java . lang . String , java . lang . String > actual = resolver . METHOD_9 ( IDENT_8 , IDENT_15 ) ; java . util . Map < java . lang . String , java . lang . String > expected = new java . util . HashMap ( ) ; expected . put ( STRING_4 , STRING_5 ) ; expected . put ( STRING_6 , STRING_7 ) ; expected . put ( STRING_8 , STRING_1 5 ) ; "<AssertPlaceHolder>" ; } put ( com . itextpdf . kernel . pdf . IDENT_16 , com . itextpdf . kernel . pdf . IDENT_17 ) { METHOD_10 ( ) . put ( key , value ) ; METHOD_11 ( ) ; return this ; }
org . junit . Assert . assertEquals ( expected , actual ) 