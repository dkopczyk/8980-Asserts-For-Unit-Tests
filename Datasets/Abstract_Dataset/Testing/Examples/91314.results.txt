METHOD_0 ( ) { com . itextpdf . IDENT_0 . IDENT_1 . impl . IDENT_2 path = new com . itextpdf . IDENT_0 . IDENT_1 . impl . METHOD_1 ( ) ; java . lang . String IDENT_3 = STRING_0 ; path . METHOD_2 ( IDENT_4 . IDENT_5 . IDENT_6 , IDENT_3 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( ) { java . util . Collection < java . lang . String > IDENT_7 = METHOD_4 ( ) ; java . util . List < com . itextpdf . IDENT_0 . IDENT_1 . path . IDENT_8 > IDENT_9 = new java . util . ArrayList ( ) ; for ( java . lang . String IDENT_10 : IDENT_7 ) { java . lang . String [ ] IDENT_11 = IDENT_10 . split ( STRING_1 ) ; com . itextpdf . IDENT_0 . IDENT_1 . path . IDENT_8 IDENT_12 = ( ( IDENT_9 . size ( ) ) == 0 ) ? null : IDENT_9 . get ( ( ( IDENT_9 . size ( ) ) - 1 ) ) ; java . util . List < com . itextpdf . IDENT_0 . IDENT_1 . path . IDENT_8 > IDENT_13 = METHOD_5 ( IDENT_11 , IDENT_12 ) ; IDENT_9 . addAll ( IDENT_13 ) ; } return IDENT_9 ; }
org . junit . Assert . assertTrue ( path . METHOD_3 ( ) . isEmpty ( ) ) 