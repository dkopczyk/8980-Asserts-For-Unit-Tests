METHOD_0 ( ) { com . itextpdf . kernel . geom . IDENT_0 expected = com . itextpdf . kernel . geom . IDENT_0 . METHOD_1 ( java . lang . Math . METHOD_2 ( ( - INT_0 ) ) , com . itextpdf . IDENT_1 . IDENT_2 . util . IDENT_3 . METHOD_3 ( STRING_0 ) , com . itextpdf . IDENT_1 . IDENT_2 . util . IDENT_3 . METHOD_3 ( STRING_1 ) ) ; com . itextpdf . kernel . geom . IDENT_0 actual = com . itextpdf . IDENT_4 . utils . IDENT_5 . METHOD_4 ( STRING_2 ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String ) { if ( transform == null ) { throw new com . itextpdf . IDENT_4 . exceptions . METHOD_5 ( com . itextpdf . IDENT_4 . exceptions . IDENT_6 . IDENT_7 ) ; } if ( transform . isEmpty ( ) ) { throw new com . itextpdf . IDENT_4 . exceptions . METHOD_5 ( com . itextpdf . IDENT_4 . exceptions . IDENT_6 . IDENT_8 ) ; } com . itextpdf . kernel . geom . IDENT_0 IDENT_9 = new com . itextpdf . kernel . geom . METHOD_6 ( ) ; java . util . List < java . lang . String > IDENT_10 = com . itextpdf . IDENT_4 . utils . IDENT_5 . METHOD_7 ( transform ) ; for ( java . lang . String IDENT_11 : IDENT_10 ) { com . itextpdf . kernel . geom . METHOD_6 IDENT_12 = com . itextpdf . IDENT_4 . utils . IDENT_5 . METHOD_8 ( IDENT_11 ) ; if ( IDENT_12 != null ) { IDENT_9 . METHOD_9 ( IDENT_12 ) ; } } return IDENT_9 ; }
org . junit . Assert . assertEquals ( expected , actual ) 