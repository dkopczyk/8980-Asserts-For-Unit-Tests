METHOD_0 ( ) { java . io . InputStream in = org . IDENT_0 . core . test . IDENT_1 . METHOD_1 ( getClass ( ) ) ; java . io . IDENT_2 out = new java . io . ByteArrayOutputStream ( ) ; int count = IDENT_3 . METHOD_2 ( in , out , STRING_0 ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . io . InputStream , java . io . IDENT_2 , java . lang . String ) { final org . IDENT_0 . core . internal . IDENT_4 IDENT_5 ; try { IDENT_5 = new org . IDENT_0 . core . internal . METHOD_3 ( input ) ; } catch ( final java . io . IOException e ) { throw METHOD_4 ( name , e ) ; } switch ( IDENT_5 . getType ( ) ) { case org . IDENT_0 . core . internal . METHOD_3 . IDENT_6 : METHOD_5 ( IDENT_5 . METHOD_6 ( ) , output , name ) ; return 1 ; case org . IDENT_0 . core . internal . METHOD_3 . IDENT_7 : return METHOD_7 ( IDENT_5 . METHOD_6 ( ) , output , name ) ; case org . IDENT_0 . core . internal . METHOD_3 . IDENT_8 : return METHOD_8 ( IDENT_5 . METHOD_6 ( ) , output , name ) ; case org . IDENT_0 . core . internal . METHOD_3 . IDENT_9 : return METHOD_9 ( IDENT_5 . METHOD_6 ( ) , output , name ) ; default : METHOD_10 ( IDENT_5 . METHOD_6 ( ) , output , name ) ; return 0 ; } }
org . junit . Assert . assertEquals ( 1 , count ) 