METHOD_0 ( ) { @ net . IDENT_0 . METHOD_1 ( STRING_0 ) final org . hamcrest . IDENT_1 < ? super net . IDENT_0 . IDENT_2 > IDENT_3 = mock ( org . hamcrest . IDENT_1 . class ) ; when ( IDENT_3 . matches ( METHOD_2 ( ) ) ) . thenReturn ( true ) ; final net . IDENT_0 . IDENT_4 IDENT_5 = new net . IDENT_0 . METHOD_3 ( mock ( net . IDENT_0 . IDENT_6 . server . IDENT_7 . class ) ) ; @ net . IDENT_0 . METHOD_1 ( STRING_1 ) final int IDENT_8 = IDENT_5 . METHOD_4 ( java . util . Collections . < org . hamcrest . IDENT_1 < ? super net . IDENT_0 . IDENT_2 > > singletonList ( IDENT_3 ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( java . util . Collection ) { org . apache . commons . lang . IDENT_9 . METHOD_5 ( IDENT_10 , STRING_2 ) ; METHOD_6 ( ) ; final org . hamcrest . IDENT_1 < net . IDENT_0 . IDENT_2 > IDENT_11 = org . hamcrest . Matchers . METHOD_7 ( IDENT_10 ) ; int IDENT_8 = 0 ; MOD_0 ( this ) { for ( final net . IDENT_0 . IDENT_2 req : this . IDENT_12 ) { if ( IDENT_11 . matches ( req ) ) { IDENT_8 ++ ; } } } return IDENT_8 ; }
org . junit . Assert . assertThat ( IDENT_8 , org . hamcrest . Matchers . is ( 0 ) ) 