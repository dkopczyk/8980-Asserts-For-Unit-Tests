METHOD_0 ( ) { org . IDENT_0 . services . content . IDENT_1 session = org . IDENT_0 . services . content . IDENT_2 . getInstance ( ) . METHOD_1 ( Constants . IDENT_3 , org . IDENT_0 . utils . IDENT_4 . METHOD_2 ( org . IDENT_0 . services . query . IDENT_5 . IDENT_6 ) ) ; org . IDENT_0 . services . query . IDENT_7 res ; res = METHOD_3 ( session , ( ( STRING_0 0 + ( org . IDENT_0 . services . query . IDENT_5 . IDENT_8 ) ) + STRING_1 ) , Query . IDENT_9 ) ; METHOD_4 ( res , INT_0 ) ; res = METHOD_3 ( session , ( ( ( ( STRING_0 6 + ( org . IDENT_0 . services . query . IDENT_5 . IDENT_8 ) ) + STRING_0 9 ) + ( org . IDENT_0 . services . query . IDENT_5 . IDENT_8 ) ) + STRING_0 ) , Query . IDENT_9 ) ; METHOD_4 ( res , 50 ) ; res = METHOD_3 ( session , ( ( STRING_2 + ( org . IDENT_0 . services . query . IDENT_5 . IDENT_8 ) ) + STRING_3 ) , Query . IDENT_9 ) ; int size = METHOD_5 ( res , org . IDENT_0 . services . query . IDENT_5 . IDENT_10 , ( ( org . IDENT_0 . services . query . IDENT_5 . IDENT_8 ) + STRING_4 ) ) ; res = METHOD_3 ( session , ( ( ( ( STRING_0 2 + ( org . IDENT_0 . services . query . IDENT_5 . IDENT_8 ) ) + STRING_0 8 ) + ( org . IDENT_0 . services . query . IDENT_5 . IDENT_8 ) ) + STRING_5 ) , Query . IDENT_9 ) ; int IDENT_11 = METHOD_5 ( res , org . IDENT_0 . services . query . IDENT_5 . IDENT_10 , ( ( org . IDENT_0 . services . query . IDENT_5 . IDENT_8 ) + STRING_6 ) , ( ( org . IDENT_0 . services . query . IDENT_5 . IDENT_8 ) + STRING_4 ) ) ; "<AssertPlaceHolder>" ; res = METHOD_3 ( session , ( ( ( ( STRING_0 6 + ( org . IDENT_0 . services . query . IDENT_5 . IDENT_8 ) ) + STRING_0 1 ) + ( org . IDENT_0 . services . query . IDENT_5 . IDENT_8 ) ) + STRING_3 ) , Query . IDENT_9 ) ; METHOD_4 ( res , INT_1 ) ; res = METHOD_3 ( session , ( ( STRING_0 6 + ( org . IDENT_0 . services . query . IDENT_5 . IDENT_8 ) ) + STRING_0 3 ) , Query . IDENT_9 ) ; METHOD_4 ( res , INT_2 ) ; res = METHOD_3 ( session , ( ( STRING_0 6 + ( org . IDENT_0 . services . query . IDENT_5 . IDENT_8 ) ) + STRING_7 ) , Query . IDENT_9 ) ; METHOD_4 ( res , INT_3 ) ; res = METHOD_3 ( session , ( ( ( ( ( ( STRING_8 + ( org . IDENT_0 . services . query . IDENT_5 . IDENT_8 ) ) + STRING_9 ) + ( org . IDENT_0 . services . query . IDENT_5 . IDENT_8 ) ) + STRING_0 5 ) + ( org . IDENT_0 . services . query . IDENT_5 . IDENT_12 ) ) + STRING_0 7 ) , Query . IDENT_9 ) ; METHOD_4 ( res , ( 7 + 12 ) ) ; } METHOD_3 ( java . lang . String , int , boolean ) { if ( org . IDENT_0 . services . query . IDENT_13 . logger . METHOD_6 ( ) ) { org . IDENT_0 . services . query . IDENT_13 . logger . debug ( STRING_10 , statement ) ; } org . IDENT_0 . services . query . IDENT_13 . METHOD_7 ( true ) ; long IDENT_14 = java . lang . System . currentTimeMillis ( ) ; java . util . List < org . IDENT_0 . services . content . IDENT_15 > IDENT_16 = null ; try { javax . jcr . query . Query query = session . METHOD_8 ( ) . METHOD_9 ( ) . METHOD_10 ( statement , Query . IDENT_9 ) ; org . IDENT_0 . services . query . IDENT_7 res = ( ( org . IDENT_0 . services . query . IDENT_7 ) ( query . execute ( ) ) ) ; IDENT_16 = METHOD_4 ( res , IDENT_17 ) ; } finally { IDENT_14 = ( java . lang . System . currentTimeMillis ( ) ) - IDENT_14 ; if ( org . IDENT_0 . services . query . IDENT_13 . logger . METHOD_6 ( ) ) { org . IDENT_0 . services . query . IDENT_13 . logger . debug ( STRING_11 , IDENT_14 ) ; } } org . IDENT_0 . services . query . IDENT_13 . METHOD_7 ( false ) ; long IDENT_18 = java . lang . System . currentTimeMillis ( ) ; java . util . List < org . IDENT_0 . services . content . IDENT_15 > nodes = null ; try { javax . jcr . query . Query query = session . METHOD_8 ( ) . METHOD_9 ( ) . METHOD_10 ( statement , Query . IDENT_9 ) ; org . IDENT_0 . services . query . IDENT_7 res = ( ( org . IDENT_0 . services . query . IDENT_7 ) ( query . execute ( ) ) ) ; nodes = METHOD_4 ( res , IDENT_17 ) ; } finally { IDENT_18 = ( java . lang . System . currentTimeMillis ( ) ) - IDENT_18 ; if ( org . IDENT_0 . services . query . IDENT_13 . logger . METHOD_6 ( ) ) { org . IDENT_0 . services . query . IDENT_13 . logger . debug ( STRING_12 , IDENT_18 ) ; } } METHOD_11 ( nodes , IDENT_16 , statement ) ; if ( IDENT_19 ) { if ( IDENT_14 > IDENT_18 ) { org . IDENT_0 . services . query . IDENT_13 . logger . warn ( STRING_13 , new java . lang . Object [ ] { ( java . lang . Math . METHOD_12 ( ( ( ( ( float ) ( IDENT_14 ) ) / ( ( float ) ( IDENT_18 ) ) ) * FLOAT_0 ) ) ) - 100 , IDENT_14 , IDENT_18 , statement } ) ; } else { org . IDENT_0 . services . query . IDENT_13 . logger . info ( STRING_14 , new java . lang . Object [ ] { ( java . lang . Math . METHOD_12 ( ( ( ( ( float ) ( IDENT_18 ) ) / ( ( float ) ( IDENT_14 ) ) ) * FLOAT_0 ) ) ) - 100 , IDENT_14 , IDENT_18 } ) ; } } }
org . junit . Assert . assertEquals ( STRING_0 4 , INT_1 , ( size - IDENT_11 ) ) 