METHOD_0 ( ) { java . lang . String IDENT_0 = org . apache . commons . lang3 . IDENT_1 . METHOD_1 ( ( ( ca . uhn . fhir . jpa . model . entity . IDENT_2 . IDENT_3 ) + 100 ) ) ; java . lang . String IDENT_4 = org . apache . commons . lang3 . IDENT_1 . METHOD_1 ( ( ( ca . uhn . fhir . jpa . model . entity . IDENT_2 . IDENT_3 ) + 100 ) ) ; ca . uhn . fhir . jpa . dao . IDENT_5 . IDENT_6 org = new ca . uhn . fhir . jpa . dao . IDENT_5 . METHOD_2 ( ) ; org . METHOD_3 ( ) . setValue ( STRING_0 ) ; org . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( IDENT_0 ) . METHOD_7 ( IDENT_4 ) ; java . lang . String IDENT_7 = IDENT_0 . substring ( 0 , IDENT_2 . IDENT_3 ) ; java . lang . String IDENT_8 = IDENT_4 . substring ( 0 , IDENT_2 . IDENT_3 ) ; ca . uhn . fhir . jpa . dao . IDENT_5 . Set < java . lang . Long > val = IDENT_9 . METHOD_8 ( new ca . uhn . fhir . jpa . IDENT_10 . METHOD_9 ( STRING_1 , new ca . uhn . fhir . jpa . dao . IDENT_5 . METHOD_10 ( IDENT_7 , IDENT_8 ) ) ) ; int IDENT_11 = val . size ( ) ; IDENT_9 . create ( org , IDENT_12 ) ; val = IDENT_9 . METHOD_8 ( new ca . uhn . fhir . jpa . IDENT_10 . METHOD_9 ( STRING_1 , new ca . uhn . fhir . jpa . dao . IDENT_5 . METHOD_10 ( IDENT_7 , IDENT_8 ) ) ) ; "<AssertPlaceHolder>" ; try { IDENT_9 . METHOD_8 ( new ca . uhn . fhir . jpa . IDENT_10 . METHOD_9 ( STRING_1 , new ca . uhn . fhir . jpa . dao . IDENT_5 . METHOD_10 ( IDENT_0 , IDENT_8 ) ) ) ; org . junit . Assert . fail ( ) ; } catch ( ca . uhn . fhir . jpa . dao . IDENT_5 . IDENT_13 e ) { } try { IDENT_9 . METHOD_8 ( new ca . uhn . fhir . jpa . IDENT_10 . METHOD_9 ( STRING_1 , new ca . uhn . fhir . jpa . dao . IDENT_5 . METHOD_10 ( IDENT_7 , IDENT_4 ) ) ) ; org . junit . Assert . fail ( ) ; } catch ( ca . uhn . fhir . jpa . dao . IDENT_5 . IDENT_13 e ) { } } size ( ) { return IDENT_14 . size ( ) ; }
org . junit . Assert . assertEquals ( ( IDENT_11 + 1 ) , val . size ( ) ) 