METHOD_0 ( ) { ca . uhn . fhir . util . IDENT_0 source = new ca . uhn . fhir . util . METHOD_1 ( STRING_0 ) ; ca . uhn . fhir . util . IDENT_1 target = new ca . uhn . fhir . util . METHOD_2 ( ) ; ca . uhn . fhir . util . IDENT_2 . IDENT_3 . METHOD_3 ( ) . METHOD_4 ( source , target , true ) ; "<AssertPlaceHolder>" ; try { ca . uhn . fhir . util . IDENT_2 . IDENT_3 . METHOD_3 ( ) . METHOD_4 ( source , target , false ) ; org . junit . Assert . fail ( ) ; } catch ( ca . uhn . fhir . parser . IDENT_4 e ) { } } isEmpty ( ) { return ( super . METHOD_5 ( ) ) && ( ca . uhn . fhir . util . IDENT_5 . isEmpty ( IDENT_6 , IDENT_7 , IDENT_8 , IDENT_9 , IDENT_10 ) ) ; }
org . junit . Assert . assertTrue ( target . isEmpty ( ) ) 