METHOD_0 ( ) { java . lang . Object data = new examples . IDENT_0 . METHOD_1 ( INT_0 ) ; java . io . ByteArrayOutputStream out = new java . io . ByteArrayOutputStream ( ) ; java . io . IDENT_1 IDENT_2 = new java . io . METHOD_2 ( out ) ; org . IDENT_3 . IDENT_4 . IDENT_5 serializer = new org . IDENT_3 . IDENT_4 . METHOD_3 ( ) . METHOD_4 ( ) ; serializer . serialize ( IDENT_2 , data ) ; int IDENT_6 = out . toByteArray ( ) . length ; out = new java . io . ByteArrayOutputStream ( ) ; IDENT_2 = new java . io . METHOD_2 ( out ) ; serializer = new org . IDENT_3 . IDENT_4 . METHOD_3 ( ) . METHOD_5 ( examples . IDENT_0 . METHOD_1 . class ) . METHOD_4 ( ) ; serializer . serialize ( IDENT_2 , data ) ; int IDENT_7 = out . toByteArray ( ) . length ; System . out . println ( ( STRING_0 + IDENT_6 ) ) ; System . out . println ( ( STRING_1 + IDENT_7 ) ) ; "<AssertPlaceHolder>" ; } METHOD_4 ( ) { return new org . IDENT_3 . IDENT_4 . METHOD_6 ( IDENT_8 , IDENT_9 , IDENT_10 , IDENT_11 , IDENT_12 , IDENT_13 , IDENT_14 , new org . IDENT_3 . IDENT_4 . IDENT_15 . METHOD_7 ( classes . toArray ( new java . lang . Class [ 0 ] ) , IDENT_8 ) ) ; }
org . junit . Assert . assertTrue ( ( IDENT_6 > IDENT_7 ) ) 