METHOD_0 ( ) { java . lang . String IDENT_0 = java . io . File . IDENT_1 ; java . lang . String IDENT_2 = com . sun . IDENT_3 . IDENT_4 . io . IDENT_5 . METHOD_1 ( STRING_0 ) ; java . lang . String IDENT_6 = ( ( ( ( ( ( ( ( ( ( ( ( ( STRING_1 + IDENT_0 ) + STRING_2 ) + IDENT_0 ) + STRING_2 ) + IDENT_0 ) + STRING_2 ) + IDENT_0 ) + STRING_2 ) + IDENT_0 ) + STRING_2 ) + IDENT_0 ) + STRING_3 ) + IDENT_0 ) + STRING_4 ; java . lang . String IDENT_7 = ( ( ( ( ( STRING_1 + IDENT_0 ) + IDENT_2 ) + STRING_5 ) + IDENT_0 ) + IDENT_2 ) + STRING_6 ; if ( IDENT_0 . equals ( STRING_7 ) ) { java . lang . String IDENT_8 = IDENT_2 . substring ( 0 , 2 ) ; IDENT_7 = ( ( ( ( IDENT_8 + STRING_8 ) + IDENT_2 ) + STRING_9 ) + IDENT_2 ) + STRING_6 ; } "<AssertPlaceHolder>" ; } METHOD_0 ( java . lang . String ) { if ( ! ( com . sun . IDENT_3 . IDENT_4 . io . IDENT_5 . METHOD_2 ( IDENT_9 ) ) ) return IDENT_9 ; try { java . lang . String [ ] IDENT_10 = IDENT_9 . split ( File . IDENT_1 ) ; java . lang . StringBuilder sb = new java . lang . StringBuilder ( ) ; com . sun . IDENT_3 . IDENT_4 . io . Set < java . lang . String > IDENT_11 = new com . sun . IDENT_3 . IDENT_4 . io . HashSet < java . lang . String > ( ) ; com . sun . IDENT_3 . IDENT_4 . io . List < java . lang . String > IDENT_12 = new com . sun . IDENT_3 . IDENT_4 . io . IDENT_13 < java . lang . String > ( ) ; for ( int i = 0 ; i < ( IDENT_10 . length ) ; i ++ ) { java . lang . String path = IDENT_10 [ i ] ; if ( ! ( com . sun . IDENT_3 . IDENT_4 . io . IDENT_5 . METHOD_2 ( path ) ) ) continue ; path = com . sun . IDENT_3 . IDENT_4 . io . IDENT_5 . METHOD_1 ( path ) ; if ( IDENT_11 . add ( path ) ) IDENT_12 . add ( path ) ; } boolean IDENT_14 = true ; for ( java . lang . String path : IDENT_12 ) { if ( IDENT_14 ) IDENT_14 = false ; else sb . append ( File . IDENT_1 ) ; sb . append ( path ) ; } return sb . toString ( ) ; } catch ( java . lang . Exception e ) { return IDENT_9 ; } }
org . junit . Assert . assertEquals ( IDENT_7 , com . sun . IDENT_3 . IDENT_4 . io . IDENT_5 . METHOD_0 ( IDENT_6 ) ) 