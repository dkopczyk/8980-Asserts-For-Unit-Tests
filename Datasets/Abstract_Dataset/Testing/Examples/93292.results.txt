METHOD_0 ( ) { java . lang . String IDENT_0 = STRING_0 ; java . util . Properties IDENT_1 = new java . util . Properties ( ) ; IDENT_1 . put ( STRING_1 , STRING_2 ) ; java . util . Properties IDENT_2 = null ; IDENT_2 = org . glassfish . common . util . admin . IDENT_3 . METHOD_1 ( IDENT_0 , STRING_3 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String , char ) { final java . util . Properties properties = new java . util . Properties ( ) ; if ( IDENT_4 != null ) { org . glassfish . common . util . admin . IDENT_5 IDENT_6 = new org . glassfish . common . util . admin . METHOD_2 ( IDENT_4 , IDENT_7 ) ; while ( IDENT_6 . METHOD_3 ( ) ) { java . lang . String token = IDENT_6 . METHOD_4 ( ) ; final org . glassfish . common . util . admin . METHOD_2 IDENT_8 = new org . glassfish . common . util . admin . METHOD_2 ( token , STRING_4 ) ; java . lang . String name = null ; java . lang . String value = null ; if ( IDENT_8 . METHOD_3 ( ) ) name = IDENT_8 . METHOD_5 ( ) . trim ( ) ; if ( IDENT_8 . METHOD_3 ( ) ) value = IDENT_8 . METHOD_5 ( ) ; if ( name == null ) throw new java . lang . IllegalArgumentException ( org . glassfish . common . util . admin . IDENT_3 . IDENT_9 . METHOD_6 ( STRING_5 , STRING_6 , IDENT_4 ) ) ; if ( value == null ) throw new java . lang . IllegalArgumentException ( org . glassfish . common . util . admin . IDENT_3 . IDENT_9 . METHOD_6 ( STRING_7 , STRING_8 , token ) ) ; if ( IDENT_8 . METHOD_3 ( ) ) throw new java . lang . IllegalArgumentException ( org . glassfish . common . util . admin . IDENT_3 . IDENT_9 . METHOD_6 ( STRING_9 , STRING_10 , token ) ) ; properties . setProperty ( name , value ) ; } } return properties ; }
org . junit . Assert . assertEquals ( IDENT_1 , IDENT_2 ) 