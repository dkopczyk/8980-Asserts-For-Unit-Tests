METHOD_0 ( ) { java . util . List < org . glassfish . api . event . IDENT_0 > IDENT_1 = org . glassfish . tests . kernel . IDENT_2 . IDENT_3 . METHOD_1 ( ) ; java . util . Iterator < org . glassfish . api . event . IDENT_0 > IDENT_4 = IDENT_1 . iterator ( ) ; while ( IDENT_4 . hasNext ( ) ) { org . glassfish . api . event . IDENT_0 IDENT_5 = IDENT_4 . next ( ) ; for ( org . glassfish . api . event . IDENT_6 . IDENT_7 IDENT_8 : org . glassfish . tests . kernel . IDENT_2 . IDENT_3 . IDENT_9 ) { if ( IDENT_8 . is ( IDENT_5 ) ) { IDENT_4 . remove ( ) ; } } } for ( org . glassfish . api . event . IDENT_0 IDENT_5 : IDENT_1 ) { System . out . println ( ( ( STRING_0 + ( IDENT_5 . type ( ) ) ) + STRING_1 ) ) ; } "<AssertPlaceHolder>" ; } size ( ) { return IDENT_10 . size ( ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_1 . size ( ) ) == 0 ) ) 