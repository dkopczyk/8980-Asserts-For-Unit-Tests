METHOD_0 ( ) { final org . glassfish . IDENT_0 . http . server . IDENT_1 IDENT_2 = new org . glassfish . IDENT_0 . http . server . METHOD_1 ( ) ; IDENT_2 . METHOD_2 ( STRING_0 ) ; final org . glassfish . IDENT_0 . http . server . IDENT_3 request = METHOD_3 ( STRING_1 , null ) ; java . util . Map < java . lang . String , java . lang . String > props = METHOD_4 ( new org . glassfish . IDENT_0 . http . server . METHOD_5 ( ) { @ org . glassfish . IDENT_0 . http . server . Override public void service ( org . glassfish . IDENT_0 . http . server . IDENT_4 request , org . glassfish . IDENT_0 . http . server . Response response ) throws org . glassfish . IDENT_0 . http . server . Exception { if ( ( request . METHOD_6 ( ) ) != null ) { response . METHOD_7 ( ) . write ( ( ( STRING_2 + ( request . METHOD_6 ( ) ) ) + "\n" ) ) ; } } } , IDENT_2 , request ) ; java . lang . String IDENT_5 = props . get ( STRING_3 ) ; "<AssertPlaceHolder>" ; } get ( org . glassfish . IDENT_0 . http . IDENT_3 ) { final org . glassfish . IDENT_0 . impl . IDENT_6 < org . glassfish . IDENT_0 . http . IDENT_3 > IDENT_7 = org . glassfish . IDENT_0 . impl . IDENT_8 . create ( ) ; IDENT_9 = IDENT_7 ; connection . write ( request , new org . glassfish . IDENT_0 . METHOD_8 ( ) { @ org . glassfish . IDENT_0 . servlet . IDENT_10 . Override public void METHOD_9 ( java . lang . Throwable IDENT_11 ) { IDENT_7 . METHOD_10 ( IDENT_11 ) ; } } ) ; connection . METHOD_11 ( new org . glassfish . IDENT_0 . METHOD_12 ( ) { @ org . glassfish . IDENT_0 . servlet . IDENT_10 . Override public void METHOD_13 ( org . glassfish . IDENT_0 . IDENT_12 IDENT_13 , org . glassfish . IDENT_0 . IDENT_14 type ) throws java . io . IOException { IDENT_7 . METHOD_10 ( new java . io . IOException ( ) ) ; } } ) ; return IDENT_7 ; }
org . junit . Assert . assertNull ( IDENT_5 ) 