METHOD_0 ( ) { org . glassfish . IDENT_0 . api . IDENT_1 IDENT_2 = org . glassfish . IDENT_0 . IDENT_3 . tests . IDENT_4 . IDENT_5 . METHOD_1 ( org . glassfish . IDENT_0 . IDENT_3 . tests . IDENT_6 . IDENT_7 . class ) ; org . glassfish . IDENT_0 . api . IDENT_8 < ? > IDENT_9 = org . glassfish . IDENT_0 . IDENT_4 . IDENT_10 . METHOD_2 ( org . glassfish . IDENT_0 . IDENT_3 . tests . IDENT_6 . IDENT_11 . class ) . to ( org . glassfish . IDENT_0 . IDENT_3 . tests . IDENT_6 . IDENT_11 . class ) . in ( org . glassfish . IDENT_0 . IDENT_3 . IDENT_12 . METHOD_3 ( 5 , IDENT_13 . IDENT_14 ) ) . build ( ) ; org . glassfish . IDENT_0 . IDENT_4 . IDENT_15 . METHOD_4 ( IDENT_2 , IDENT_9 ) ; org . glassfish . IDENT_0 . IDENT_3 . IDENT_16 controller = IDENT_2 . METHOD_5 ( org . glassfish . IDENT_0 . IDENT_3 . IDENT_16 . class ) ; controller . METHOD_6 ( 0 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( org . glassfish . IDENT_0 . api . IDENT_17 ) { if ( ( root ) instanceof org . IDENT_18 . IDENT_0 . internal . IDENT_19 ) { org . IDENT_18 . IDENT_0 . internal . IDENT_19 IDENT_20 = ( ( org . IDENT_18 . IDENT_0 . internal . IDENT_19 ) ( root ) ) ; if ( IDENT_20 . METHOD_7 ( ) ) { throw new java . lang . IllegalStateException ( ( STRING_0 + ( root ) ) ) ; } } MOD_0 ( IDENT_21 ) { if ( IDENT_22 ) throw new java . lang . IllegalStateException ( STRING_1 ) ; if ( IDENT_23 ) return service ; org . glassfish . IDENT_0 . api . IDENT_24 IDENT_25 = METHOD_8 ( ) ; java . lang . Class < ? > IDENT_26 = ( IDENT_25 == null ) ? null : org . glassfish . IDENT_0 . IDENT_4 . IDENT_27 . IDENT_28 . METHOD_9 ( IDENT_25 . METHOD_10 ( ) ) ; service = org . IDENT_18 . IDENT_0 . internal . IDENT_5 . METHOD_11 ( root , IDENT_25 , IDENT_2 , IDENT_29 , IDENT_26 ) ; IDENT_23 = true ; return service ; } }
org . junit . Assert . assertNotNull ( IDENT_2 . METHOD_5 ( org . glassfish . IDENT_0 . IDENT_3 . tests . IDENT_6 . IDENT_11 . class ) ) 