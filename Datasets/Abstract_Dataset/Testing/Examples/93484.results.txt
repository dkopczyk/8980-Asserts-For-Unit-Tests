METHOD_0 ( ) { com . sun . mail . util . logging . IDENT_0 instance = this . METHOD_1 ( ) ; com . sun . mail . util . logging . IDENT_1 . IDENT_2 em = new com . sun . mail . util . logging . IDENT_1 . METHOD_2 ( ) ; instance . METHOD_3 ( em ) ; final com . sun . mail . util . logging . IDENT_3 expect = IDENT_3 . IDENT_4 ; instance . METHOD_4 ( expect ) ; instance . METHOD_5 ( new com . sun . mail . util . logging . IDENT_1 . METHOD_6 ( expect ) ) ; instance . close ( ) ; for ( java . lang . Exception exception : em . exceptions ) { java . lang . Throwable t = exception ; if ( t instanceof com . sun . mail . util . logging . IDENT_5 ) { if ( ! ( com . sun . mail . util . logging . IDENT_1 . METHOD_7 ( t ) ) ) { METHOD_8 ( t ) ; org . junit . Assert . fail ( t . toString ( ) ) ; } } else { METHOD_8 ( t ) ; org . junit . Assert . fail ( t . toString ( ) ) ; } } "<AssertPlaceHolder>" ; } isEmpty ( ) { return parameters . isEmpty ( ) ; }
org . junit . Assert . assertFalse ( em . exceptions . isEmpty ( ) ) 