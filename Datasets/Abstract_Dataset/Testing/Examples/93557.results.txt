METHOD_0 ( ) { de . IDENT_0 . obj . IDENT_1 obj = de . IDENT_0 . obj . IDENT_2 . read ( getClass ( ) . getResourceAsStream ( STRING_0 ) ) ; java . util . Map < java . lang . String , de . IDENT_0 . obj . IDENT_1 > IDENT_3 = de . IDENT_0 . obj . IDENT_4 . METHOD_1 ( obj ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( de . IDENT_0 . obj . IDENT_5 ) { java . util . Map < java . lang . String , de . IDENT_0 . obj . IDENT_1 > IDENT_3 = new java . util . IDENT_6 < java . lang . String , de . IDENT_0 . obj . IDENT_1 > ( ) ; int IDENT_7 = obj . METHOD_2 ( ) ; for ( int i = 0 ; i < IDENT_7 ; i ++ ) { de . IDENT_0 . obj . IDENT_8 IDENT_9 = obj . METHOD_3 ( i ) ; if ( ( IDENT_9 . METHOD_4 ( ) ) > 0 ) { java . lang . String IDENT_10 = IDENT_9 . getName ( ) ; de . IDENT_0 . obj . IDENT_1 IDENT_11 = de . IDENT_0 . obj . IDENT_12 . METHOD_5 ( obj , IDENT_9 , null ) ; IDENT_3 . put ( IDENT_10 , IDENT_11 ) ; } } return IDENT_3 ; }
org . junit . Assert . assertEquals ( 0 , IDENT_3 . size ( ) ) 