METHOD_0 ( ) { final java . lang . Object [ ] [ ] expected = new java . lang . Object [ ] [ ] { new java . lang . Object [ ] { null , "bar" 7 , STRING_0 2 , STRING_0 3 , null , "bar" 7 , STRING_0 2 , "bar" 0 , 0L , true , com . IDENT_0 . server . service . is . IDENT_1 . IDENT_2 } , new java . lang . Object [ ] { null , "bar" 7 , "b" , STRING_0 3 , null , "bar" 7 , "b" , "bar" 0 , 0L , true , com . IDENT_0 . server . service . is . IDENT_1 . IDENT_2 } , new java . lang . Object [ ] { null , "bar" 7 , STRING_1 , STRING_0 3 , null , "bar" 7 , STRING_1 , "bar" 0 , 0L , true , com . IDENT_0 . server . service . is . IDENT_1 . IDENT_2 } , new java . lang . Object [ ] { null , "bar" 7 , STRING_2 , STRING_0 3 , null , "bar" 7 , STRING_2 , "bar" 0 , 0L , true , com . IDENT_0 . server . service . is . IDENT_1 . IDENT_2 } , new java . lang . Object [ ] { null , "bar" 3 , "bar" , STRING_0 3 , null , "bar" 3 , "bar" , STRING_0 7 , 0L , true , com . IDENT_0 . server . service . is . IDENT_1 . IDENT_2 } , new java . lang . Object [ ] { null , "bar" 3 , STRING_0 , STRING_3 , null , "bar" 3 , STRING_0 , "foo" , 0L , true , com . IDENT_0 . server . service . is . IDENT_1 . IDENT_2 } , new java . lang . Object [ ] { null , "bar" 3 , STRING_0 , STRING_3 , null , "bar" 3 , "bar" , "bar" 2 , 1L , true , com . IDENT_0 . server . service . is . IDENT_1 . IDENT_2 } , new java . lang . Object [ ] { null , "bar" 3 , "bar" 1 , STRING_0 3 , null , "bar" 3 , "bar" 1 , STRING_0 6 , 0L , true , com . IDENT_0 . server . service . is . IDENT_1 . IDENT_2 } , new java . lang . Object [ ] { null , "bar" 3 , "bar" 1 , STRING_0 0 , null , "bar" 3 , "bar" 1 , STRING_0 1 , 0L , true , com . IDENT_0 . server . service . is . IDENT_1 . IDENT_2 } , new java . lang . Object [ ] { null , "bar" 3 , "bar" 5 , STRING_0 3 , null , "bar" 3 , "bar" 5 , STRING_0 6 , 0L , true , com . IDENT_0 . server . service . is . IDENT_1 . IDENT_2 } , new java . lang . Object [ ] { null , "bar" 3 , STRING_4 , STRING_0 3 , null , "bar" 3 , STRING_4 , STRING_0 7 , 0L , true , com . IDENT_0 . server . service . is . IDENT_1 . IDENT_2 } , new java . lang . Object [ ] { null , STRING_0 4 , "bar" 4 , "bar" 6 , null , STRING_0 4 , "bar" 4 , "bar" 2 , 0L , true , com . IDENT_0 . server . service . is . IDENT_1 . IDENT_2 } , new java . lang . Object [ ] { null , STRING_0 4 , "bar" 4 , "bar" 6 , null , STRING_0 4 , "bar" 4 , "value" , 1L , true , com . IDENT_0 . server . service . is . IDENT_1 . IDENT_2 } , new java . lang . Object [ ] { null , STRING_5 , STRING_0 5 , STRING_0 3 , null , STRING_5 , STRING_0 5 , "bar" 0 , 0L , true , com . IDENT_0 . server . service . is . IDENT_1 . IDENT_2 } , new java . lang . Object [ ] { null , STRING_5 , STRING_0 9 , STRING_0 3 , null , STRING_5 , STRING_0 9 , "bar" 0 , 0L , true , com . IDENT_0 . server . service . is . IDENT_1 . IDENT_2 } } ; com . IDENT_0 . server . service . is . IDENT_3 IDENT_4 = METHOD_1 ( IDENT_5 . IDENT_6 ) . METHOD_2 ( adapter , IDENT_7 . METHOD_3 ( IDENT_5 . IDENT_6 ) . METHOD_4 ( ) ) ; int IDENT_8 = com . IDENT_0 . server . service . is . IDENT_1 . METHOD_5 ( expected , IDENT_4 ) ; "<AssertPlaceHolder>" ; } METHOD_5 ( java . lang . Object [ ] [ ] , com . IDENT_0 . server . service . is . IDENT_3 ) { int IDENT_9 = 0 ; com . IDENT_0 . IDENT_10 . row . IDENT_11 row ; int IDENT_12 = 0 ; while ( ( row = IDENT_4 . next ( ) ) != null ) { if ( IDENT_12 == ( IDENT_13 . length ) ) { org . junit . Assert . fail ( STRING_6 ) ; } org . junit . Assert . assertEquals ( ( STRING_7 + IDENT_12 ) , IDENT_13 [ IDENT_12 ] . length , row . METHOD_6 ( ) . METHOD_7 ( ) ) ; for ( int IDENT_14 = 0 ; IDENT_14 < ( IDENT_13 [ IDENT_12 ] . length ) ; ++ IDENT_14 ) { final java . lang . String msg = ( ( STRING_8 + IDENT_12 ) + STRING_9 ) + IDENT_14 ; final java . lang . Object expected = IDENT_13 [ IDENT_12 ] [ IDENT_14 ] ; final com . IDENT_0 . server . types . value . IDENT_15 actual = row . value ( IDENT_14 ) ; if ( ( expected == null ) || ( actual . METHOD_8 ( ) ) ) { com . IDENT_0 . IDENT_7 . model . IDENT_16 column = row . METHOD_6 ( ) . table ( ) . METHOD_9 ( IDENT_14 ) ; if ( ! ( Boolean . IDENT_17 . equals ( column . METHOD_10 ( ) ) ) ) { org . junit . Assert . fail ( java . lang . String . format ( STRING_10 , expected , actual , column ) ) ; } } if ( expected == null ) { org . junit . Assert . assertEquals ( ( msg + STRING_11 ) , true , actual . METHOD_8 ( ) ) ; } else if ( expected instanceof com . IDENT_0 . server . types . IDENT_18 ) { org . junit . Assert . assertEquals ( ( msg + STRING_12 ) , expected , actual . getType ( ) ) ; } else if ( expected instanceof java . lang . String ) { if ( ( IDENT_14 == 1 ) && ( actual . getString ( ) . equals ( com . IDENT_0 . server . service . is . IDENT_1 . IDENT_19 ) ) ) { OP_0 IDENT_12 ; ++ IDENT_9 ; break ; } org . junit . Assert . assertEquals ( msg , expected , actual . getString ( ) ) ; } else if ( expected instanceof java . lang . Integer ) { org . junit . Assert . assertEquals ( msg , expected , actual . METHOD_11 ( ) ) ; } else if ( expected instanceof java . lang . Long ) { org . junit . Assert . assertEquals ( msg , expected , actual . METHOD_12 ( ) ) ; } else if ( expected instanceof java . lang . Boolean ) { org . junit . Assert . assertEquals ( msg , ( ( ( java . lang . Boolean ) ( expected ) ) ? STRING_13 : STRING_10 0 ) , actual . getString ( ) ) ; } else if ( expected instanceof com . IDENT_0 . server . service . is . IDENT_1 . IDENT_20 ) { org . junit . Assert . assertEquals ( msg , ( ( com . IDENT_0 . server . service . is . IDENT_1 . IDENT_20 ) ( expected ) ) . getText ( ) , actual . getString ( ) ) ; } else { org . junit . Assert . fail ( ( STRING_14 + ( expected . getClass ( ) ) ) ) ; } } ++ IDENT_12 ; } if ( IDENT_12 < ( IDENT_13 . length ) ) { org . junit . Assert . fail ( STRING_15 ) ; } IDENT_4 . close ( ) ; return IDENT_9 ; }
org . junit . Assert . assertEquals ( STRING_0 8 , 0 , IDENT_8 ) 