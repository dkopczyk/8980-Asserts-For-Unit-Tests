METHOD_0 ( ) { org . apache . hadoop . conf . Configuration conf = METHOD_1 ( ) ; long [ ] IDENT_0 = new long [ ] { org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . IDENT_3 , org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . IDENT_3 } ; java . lang . String [ ] IDENT_4 = new java . lang . String [ ] { org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . IDENT_5 , org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . IDENT_6 } ; java . lang . String [ ] IDENT_7 = new java . lang . String [ ] { org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . IDENT_8 , org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . IDENT_9 } ; int IDENT_10 = IDENT_0 . length ; "<AssertPlaceHolder>" ; org . apache . hadoop . hdfs . IDENT_11 . METHOD_2 ( IDENT_7 ) ; cluster = new org . apache . hadoop . hdfs . METHOD_3 ( 0 , conf , IDENT_0 . length , true , true , null , IDENT_4 , IDENT_0 ) ; try { cluster . METHOD_4 ( ) ; client = org . apache . hadoop . hdfs . IDENT_12 . METHOD_5 ( conf ) ; long IDENT_13 = 0L ; for ( long IDENT_14 : IDENT_0 ) { IDENT_13 += IDENT_14 ; } long IDENT_15 = ( IDENT_13 * 3 ) / 10 ; METHOD_6 ( ( IDENT_15 / IDENT_10 ) , ( ( short ) ( IDENT_10 ) ) ) ; long IDENT_16 = org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . IDENT_3 ; java . lang . String IDENT_17 = org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . IDENT_6 ; java . lang . String IDENT_18 = org . apache . hadoop . hdfs . server . IDENT_1 . IDENT_2 . IDENT_19 ; cluster . METHOD_7 ( conf , 1 , true , null , new java . lang . String [ ] { IDENT_17 } , new java . lang . String [ ] { IDENT_18 } , new long [ ] { IDENT_16 } ) ; IDENT_13 += IDENT_16 ; METHOD_8 ( conf , IDENT_15 , IDENT_13 ) ; } finally { cluster . METHOD_9 ( ) ; } } METHOD_1 ( ) { final org . apache . hadoop . conf . Configuration conf = new org . apache . hadoop . conf . Configuration ( ) ; conf . METHOD_10 ( IDENT_20 . IDENT_21 , true ) ; return conf ; }
org . junit . Assert . assertEquals ( IDENT_10 , IDENT_4 . length ) 