METHOD_0 ( ) { int port = METHOD_1 ( ) ; org . apache . IDENT_0 . server . IDENT_1 IDENT_2 = METHOD_2 ( port ) ; org . apache . IDENT_3 . framework . IDENT_4 . Builder builder = org . apache . IDENT_3 . framework . IDENT_4 . builder ( ) . METHOD_3 ( ( STRING_0 + port ) ) . METHOD_4 ( INT_0 ) . METHOD_5 ( INT_0 ) . METHOD_6 ( new org . apache . IDENT_3 . IDENT_5 . METHOD_7 ( 10 , 100 ) ) ; org . apache . IDENT_3 . framework . IDENT_6 IDENT_3 = builder . build ( ) ; IDENT_3 . start ( ) ; IDENT_3 . METHOD_8 ( ) . METHOD_9 ( ) ; java . lang . String IDENT_7 = STRING_1 + ( java . lang . System . currentTimeMillis ( ) ) ; IDENT_3 . create ( ) . METHOD_10 ( ) . METHOD_11 ( IDENT_7 ) ; for ( int i = 0 ; i < 100 ; i ++ ) { io . IDENT_8 . IDENT_9 . internal . IDENT_10 < io . IDENT_8 . IDENT_9 . IDENT_11 > group = new io . IDENT_8 . IDENT_9 . internal . IDENT_10 < io . IDENT_8 . IDENT_9 . IDENT_11 > ( IDENT_3 , IDENT_7 , io . IDENT_8 . IDENT_9 . IDENT_11 . class ) ; group . add ( listener ) ; group . update ( new io . IDENT_8 . IDENT_9 . METHOD_12 ( "foo" ) ) ; group . start ( ) ; group . close ( ) ; java . util . List < java . lang . String > IDENT_12 = IDENT_3 . METHOD_13 ( ) . METHOD_11 ( IDENT_7 ) ; "<AssertPlaceHolder>" ; if ( group . METHOD_14 ( ) ) { IDENT_3 . close ( ) ; IDENT_3 = builder . build ( ) ; IDENT_3 . start ( ) ; IDENT_3 . METHOD_8 ( ) . METHOD_9 ( ) ; } } IDENT_3 . close ( ) ; IDENT_2 . METHOD_15 ( ) ; IDENT_2 . join ( ) ; } isEmpty ( ) { return filters . isEmpty ( ) ; }
org . junit . Assert . assertTrue ( ( ( IDENT_12 . isEmpty ( ) ) || ( group . METHOD_14 ( ) ) ) ) 