METHOD_0 ( ) { io . IDENT_0 . api . IDENT_1 container = METHOD_1 ( io . IDENT_0 . api . IDENT_1 . class ) ; expect ( container . getId ( ) ) . andReturn ( STRING_0 ) . METHOD_2 ( ) ; expect ( container . METHOD_3 ( ) ) . andReturn ( true ) . METHOD_2 ( ) ; expect ( container . METHOD_4 ( ) ) . andReturn ( true ) . METHOD_2 ( ) ; expect ( container . METHOD_5 ( ) ) . andReturn ( STRING_1 ) . METHOD_2 ( ) ; expect ( container . METHOD_6 ( ) ) . andReturn ( STRING_2 ) . METHOD_2 ( ) ; expect ( container . METHOD_7 ( ) ) . andReturn ( null ) . METHOD_2 ( ) ; replay ( container ) ; io . IDENT_0 . IDENT_2 . IDENT_3 . support . IDENT_4 task = new io . IDENT_0 . IDENT_2 . IDENT_3 . support . METHOD_8 ( container , STRING_1 , INT_0 ) ; "<AssertPlaceHolder>" ; verify ( container ) ; } call ( ) { java . lang . String IDENT_5 = METHOD_9 ( ) ; if ( IDENT_5 == null ) { IDENT_5 = java . lang . System . METHOD_10 ( io . IDENT_0 . camel . IDENT_6 . IDENT_7 ) ; } if ( IDENT_5 == null ) { java . lang . String IDENT_8 = java . lang . System . METHOD_10 ( io . IDENT_0 . camel . IDENT_6 . IDENT_9 ) ; if ( IDENT_8 != null ) { java . lang . String IDENT_10 = java . lang . System . METHOD_10 ( io . IDENT_0 . camel . IDENT_6 . IDENT_11 ) ; IDENT_5 = ( IDENT_8 + STRING_3 ) + ( IDENT_10 == null ? STRING_4 : IDENT_10 ) ; } } if ( IDENT_5 == null ) { IDENT_5 = java . lang . System . getProperty ( io . IDENT_0 . camel . IDENT_6 . IDENT_12 , STRING_5 ) ; } java . lang . String IDENT_13 = METHOD_11 ( ) ; if ( IDENT_13 == null ) { java . lang . System . getProperty ( io . IDENT_0 . camel . IDENT_6 . IDENT_14 ) ; } io . IDENT_0 . camel . IDENT_6 . LOG . debug ( ( STRING_6 + IDENT_5 ) ) ; org . apache . IDENT_15 . framework . IDENT_16 . Builder builder = org . apache . IDENT_15 . framework . IDENT_16 . builder ( ) . METHOD_12 ( METHOD_12 ) . METHOD_13 ( new org . apache . IDENT_15 . IDENT_17 . METHOD_14 ( 1000 ) ) . METHOD_15 ( METHOD_16 ( ) ) ; if ( ( IDENT_13 != null ) && ( ! ( IDENT_13 . isEmpty ( ) ) ) ) { builder . authorization ( STRING_7 , ( STRING_8 + IDENT_13 ) . getBytes ( ) ) ; } IDENT_15 = builder . build ( ) ; io . IDENT_0 . camel . IDENT_6 . LOG . debug ( ( STRING_9 + ( IDENT_15 ) ) ) ; IDENT_15 . start ( ) ; return IDENT_15 ; }
org . junit . Assert . assertTrue ( task . call ( ) ) 