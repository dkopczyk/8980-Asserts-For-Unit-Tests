METHOD_0 ( ) { final java . util . Properties IDENT_0 = new java . util . Properties ( ) ; IDENT_0 . put ( STRING_0 , STRING_1 ) ; final org . wildfly . security . auth . server . IDENT_1 IDENT_2 = org . jboss . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . batch . IDENT_8 . METHOD_1 ( STRING_2 , STRING_3 ) ; final org . wildfly . security . auth . server . IDENT_1 IDENT_9 = org . jboss . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . batch . IDENT_8 . METHOD_1 ( STRING_4 , STRING_5 ) ; final java . lang . Long IDENT_10 = IDENT_2 . METHOD_2 ( ( ( java . util . concurrent . IDENT_11 < java . lang . Long > ) ( ( ) -> IDENT_12 . start ( STRING_6 , IDENT_0 ) ) ) ) ; final java . util . Properties IDENT_13 = IDENT_9 . METHOD_2 ( ( ( java . util . concurrent . IDENT_11 < java . util . Properties > ) ( ( ) -> IDENT_12 . METHOD_3 ( IDENT_10 ) . METHOD_4 ( ) ) ) ) ; "<AssertPlaceHolder>" ; } start ( org . jboss . IDENT_14 . container . test . api . IDENT_15 , java . lang . String ) { try { org . jboss . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_16 . IDENT_17 . IDENT_18 . IDENT_19 . log . info ( ( STRING_7 + container ) ) ; controller . start ( container ) ; } catch ( java . lang . Throwable e ) { org . jboss . IDENT_3 . IDENT_4 . IDENT_5 . IDENT_16 . IDENT_17 . IDENT_18 . IDENT_19 . log . error ( e ) ; } }
org . junit . Assert . assertEquals ( IDENT_0 , IDENT_13 ) 