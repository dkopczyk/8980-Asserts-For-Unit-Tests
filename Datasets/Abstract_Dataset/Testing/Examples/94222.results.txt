METHOD_0 ( ) { final java . util . concurrent . atomic . IDENT_0 IDENT_1 = new java . util . concurrent . atomic . METHOD_1 ( ) ; final org . IDENT_2 . component . bpm . service . IDENT_3 . IDENT_4 IDENT_5 = new org . IDENT_2 . component . bpm . service . IDENT_3 . METHOD_2 ( ) ; org . IDENT_2 . IDENT_6 IDENT_7 = IDENT_8 . METHOD_3 ( new javax . xml . IDENT_9 . METHOD_4 ( STRING_0 ) , new org . IDENT_2 . metadata . METHOD_5 ( ) , new org . IDENT_2 . METHOD_6 ( ) { public void METHOD_7 ( org . IDENT_2 . IDENT_10 IDENT_11 ) throws org . IDENT_2 . IDENT_12 { int count = IDENT_1 . METHOD_8 ( ) ; IDENT_5 . setValue ( java . lang . String . valueOf ( count ) ) ; } } ) ; IDENT_8 . METHOD_9 ( IDENT_7 . getName ( ) , IDENT_7 . METHOD_10 ( ) , IDENT_7 . METHOD_11 ( ) ) ; org . IDENT_2 . component . bpm . config . model . IDENT_13 IDENT_14 = ( ( org . IDENT_2 . component . bpm . config . model . IDENT_13 ) ( new org . IDENT_2 . component . bpm . config . model . METHOD_12 ( ) . METHOD_13 ( org . IDENT_2 . component . bpm . service . IDENT_3 . IDENT_15 . class ) . METHOD_14 ( ) ) ) ; IDENT_14 . METHOD_15 ( ) . setName ( null ) ; javax . xml . IDENT_9 . METHOD_4 IDENT_16 = new javax . xml . IDENT_9 . METHOD_4 ( STRING_1 ) ; org . IDENT_2 . component . bpm . IDENT_11 . IDENT_17 handler = new org . IDENT_2 . component . bpm . IDENT_11 . METHOD_16 ( IDENT_14 , IDENT_8 , IDENT_16 ) ; org . IDENT_2 . IDENT_6 IDENT_18 = IDENT_8 . METHOD_3 ( IDENT_16 , org . IDENT_2 . IDENT_19 . java . IDENT_20 . METHOD_17 ( org . IDENT_2 . component . bpm . service . IDENT_3 . IDENT_15 . class ) , handler ) ; IDENT_8 . METHOD_9 ( IDENT_18 . getName ( ) , IDENT_18 . METHOD_10 ( ) , IDENT_18 . METHOD_11 ( ) ) ; handler . start ( ) ; new org . IDENT_2 . test . METHOD_18 ( IDENT_8 , IDENT_16 ) . operation ( STRING_2 ) . METHOD_19 ( null ) ; new org . IDENT_2 . test . METHOD_18 ( IDENT_8 , IDENT_16 ) . operation ( STRING_2 ) . METHOD_19 ( null ) ; new org . IDENT_2 . test . METHOD_18 ( IDENT_8 , IDENT_16 ) . operation ( STRING_3 ) . METHOD_19 ( null ) ; handler . METHOD_20 ( ) ; "<AssertPlaceHolder>" ; } getValue ( ) { return METHOD_21 ( ) ; }
org . junit . Assert . assertEquals ( "2" , IDENT_5 . getValue ( ) ) 