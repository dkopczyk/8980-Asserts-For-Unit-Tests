METHOD_0 ( ) { int len = 7 ; IDENT_0 . ByteBuffer IDENT_1 = new IDENT_0 . ByteBuffer ( data ) ; long expected = ( ( ( data [ 0 ] ) << INT_0 ) | ( IDENT_0 . ByteBuffer . METHOD_1 ( data [ 1 ] , data [ 2 ] ) ) ) | ( IDENT_0 . ByteBuffer . METHOD_2 ( data [ 3 ] , data [ 4 ] , data [ 5 ] , data [ 6 ] ) ) ; long actual = IDENT_1 . METHOD_3 ( len ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( int ) { long value = 0 ; switch ( len ) { case 0 : value = 0 ; break ; case 1 : value = METHOD_4 ( ) ; break ; case 2 : value = METHOD_5 ( ) ; break ; case 3 : value = ( ( METHOD_4 ( ) ) << 16 ) | ( METHOD_6 ( ) ) ; break ; case 4 : value = METHOD_7 ( ) ; break ; case 5 : value = ( METHOD_4 ( ) ) | ( METHOD_8 ( ) ) ; break ; case 6 : value = ( METHOD_5 ( ) ) | ( METHOD_8 ( ) ) ; break ; case 7 : value = ( ( ( METHOD_4 ( ) ) << INT_0 ) | ( METHOD_6 ( ) ) ) | ( METHOD_8 ( ) ) ; break ; case 8 : value = METHOD_9 ( ) ; break ; default : throw new java . lang . RuntimeException ( ( ( ( ( STRING_0 + len ) + STRING_1 ) + ( this ) ) + STRING_2 ) ) ; } return value ; }
org . junit . Assert . assertEquals ( expected , actual ) 