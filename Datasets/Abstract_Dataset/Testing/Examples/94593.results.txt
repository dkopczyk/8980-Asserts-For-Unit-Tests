METHOD_0 ( ) { int [ ] IDENT_0 = new int [ ] { INT_0 , INT_0 , INT_0 , INT_0 } ; int [ ] IDENT_1 = new int [ ] { INT_1 , INT_1 , INT_1 , INT_2 } ; int IDENT_2 = INT_3 ; int [ ] IDENT_3 = new int [ ] { INT_4 , INT_4 , INT_4 , INT_4 } ; int [ ] p = new int [ ] { INT_5 , INT_5 , INT_5 , INT_5 , INT_1 , INT_1 , INT_1 , INT_1 , INT_1 , INT_1 , INT_1 , INT_1 , INT_2 , INT_2 , INT_2 , INT_2 } ; "<AssertPlaceHolder>" ; } METHOD_1 ( int [ ] , int ) { int [ ] p = new int [ 16 ] ; p [ ( ( 3 * 4 ) + 0 ) ] = p [ ( ( 3 * 4 ) + 1 ) ] = p [ ( ( 3 * 4 ) + 2 ) ] = p [ ( ( 3 * 4 ) + 3 ) ] = org . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_2 ( IDENT_1 [ 2 ] , IDENT_1 [ 3 ] , IDENT_1 [ 3 ] ) ; p [ ( ( 2 * 4 ) + 0 ) ] = p [ ( ( 2 * 4 ) + 1 ) ] = p [ ( ( 2 * 4 ) + 2 ) ] = p [ ( ( 2 * 4 ) + 3 ) ] = org . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_2 ( IDENT_1 [ 1 ] , IDENT_1 [ 2 ] , IDENT_1 [ 3 ] ) ; p [ ( ( 1 * 4 ) + 0 ) ] = p [ ( ( 1 * 4 ) + 1 ) ] = p [ ( ( 1 * 4 ) + 2 ) ] = p [ ( ( 1 * 4 ) + 3 ) ] = org . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_2 ( IDENT_1 [ 0 ] , IDENT_1 [ 1 ] , IDENT_1 [ 2 ] ) ; p [ ( ( 0 * 4 ) + 0 ) ] = p [ ( ( 0 * 4 ) + 1 ) ] = p [ ( ( 0 * 4 ) + 2 ) ] = p [ ( ( 0 * 4 ) + 3 ) ] = org . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_2 ( IDENT_2 , IDENT_1 [ 0 ] , IDENT_1 [ 1 ] ) ; return p ; }
org . junit . Assert . assertArrayEquals ( p , org . IDENT_4 . IDENT_5 . IDENT_6 . IDENT_7 . METHOD_1 ( IDENT_1 , IDENT_2 ) ) 