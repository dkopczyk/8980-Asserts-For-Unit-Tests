METHOD_0 ( ) { com . couchbase . jdbc . IDENT_0 . METHOD_1 ( null ) ; org . json . simple . JSONObject obj = new org . json . simple . JSONObject ( ) ; java . lang . String IDENT_1 = STRING_0 ; com . couchbase . jdbc . IDENT_0 . METHOD_2 ( IDENT_1 ) ; java . util . HashMap < java . lang . String , java . lang . Object > map = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; for ( int i = 1 ; i < INT_0 ; i ++ ) { map . put ( ( i + "" ) , INT_1 ) ; } obj . METHOD_3 ( map ) ; org . json . simple . IDENT_2 IDENT_3 = new org . json . simple . METHOD_4 ( ) ; java . util . HashMap < java . lang . String , org . json . simple . JSONObject > IDENT_4 = new java . util . HashMap < java . lang . String , org . json . simple . JSONObject > ( ) ; IDENT_4 . put ( "1" , obj ) ; IDENT_3 . add ( obj ) ; com . couchbase . jdbc . IDENT_0 . METHOD_5 ( IDENT_4 , STRING_1 ) ; java . lang . String query = STRING_2 ; org . json . simple . METHOD_4 IDENT_5 = com . couchbase . jdbc . IDENT_0 . METHOD_6 ( query ) ; "<AssertPlaceHolder>" ; } METHOD_6 ( java . lang . String ) { com . couchbase . jdbc . IDENT_0 . METHOD_1 ( null ) ; org . json . simple . METHOD_4 IDENT_6 = new org . json . simple . METHOD_4 ( ) ; try ( com . couchbase . jdbc . IDENT_7 IDENT_8 = com . couchbase . jdbc . IDENT_0 . IDENT_8 ) { try ( com . couchbase . jdbc . IDENT_9 stmt = IDENT_8 . METHOD_7 ( ) ) { try ( com . couchbase . jdbc . ResultSet rs = stmt . METHOD_8 ( query ) ) { return com . couchbase . jdbc . IDENT_0 . METHOD_9 ( rs ) ; } } catch ( java . lang . Exception e ) { e . printStackTrace ( ) ; } } return IDENT_6 ; }
org . junit . Assert . assertEquals ( IDENT_3 , IDENT_5 ) 