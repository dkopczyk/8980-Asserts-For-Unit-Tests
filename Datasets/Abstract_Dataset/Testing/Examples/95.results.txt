METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final int IDENT_1 = INT_0 ; final int IDENT_2 = INT_1 ; final java . lang . String IDENT_3 = org . springframework . data . IDENT_4 . IDENT_5 . IDENT_6 . encode ( IDENT_1 ) ; final java . lang . String IDENT_7 = org . springframework . data . IDENT_4 . IDENT_5 . IDENT_6 . encode ( IDENT_2 ) ; java . lang . String IDENT_8 = ( ( ( STRING_1 + IDENT_3 ) + STRING_2 ) + IDENT_7 ) + STRING_3 ; final org . springframework . data . repository . query . IDENT_9 parameters = METHOD_1 ( new java . lang . String [ ] { STRING_4 , STRING_5 } , new java . lang . Class [ ] { java . lang . String . class , int [ ] . class } ) ; java . lang . String IDENT_10 = org . springframework . data . IDENT_4 . query . IDENT_11 . METHOD_2 ( IDENT_0 , parameters , "name" , new int [ ] { IDENT_1 , IDENT_2 } ) ; "<AssertPlaceHolder>" ; } encode ( java . lang . Object ) { java . lang . String IDENT_12 = org . springframework . data . IDENT_4 . IDENT_5 . IDENT_13 . METHOD_3 ( IDENT_14 ) ; if ( IDENT_12 != null ) { return IDENT_12 ; } java . lang . String IDENT_15 = org . springframework . data . IDENT_4 . IDENT_5 . IDENT_13 . METHOD_4 ( IDENT_14 ) ; if ( IDENT_15 != null ) { return IDENT_15 ; } if ( IDENT_14 instanceof java . util . Date ) { java . util . Date d = ( ( java . util . Date ) ( IDENT_14 ) ) ; return org . springframework . data . IDENT_4 . IDENT_5 . IDENT_13 . METHOD_5 ( d ) ; } return IDENT_14 . toString ( ) ; }
org . junit . Assert . assertThat ( IDENT_10 , org . hamcrest . CoreMatchers . is ( IDENT_8 ) ) 