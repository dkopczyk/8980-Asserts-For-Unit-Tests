METHOD_0 ( ) { METHOD_1 ( ) ; java . util . List < java . lang . String > IDENT_0 = METHOD_2 ( 20 ) ; java . lang . String IDENT_1 = STRING_0 ; boolean IDENT_2 = false ; try { j . jenkins . METHOD_3 ( ) . METHOD_4 ( IDENT_1 ) ; } catch ( java . lang . Exception e ) { } finally { java . util . Collection < java . lang . String > filter = com . google . common . collect . IDENT_3 . filter ( IDENT_0 , com . google . common . base . IDENT_4 . METHOD_5 ( STRING_1 ) ) ; IDENT_2 = ! ( filter . isEmpty ( ) ) ; } "<AssertPlaceHolder>" ; } METHOD_4 ( java . lang . String ) { try { return IDENT_5 . get ( IDENT_6 , new java . util . concurrent . IDENT_7 < hudson . plugins . IDENT_8 . IDENT_9 > ( ) { public hudson . plugins . IDENT_8 . IDENT_9 call ( ) throws javax . IDENT_10 . IDENT_11 { for ( hudson . plugins . IDENT_8 . IDENT_12 domain : IDENT_13 ) { if ( domain == null ) { throw new hudson . security . METHOD_6 ( STRING_2 2 ) ; } java . lang . IDENT_14 IDENT_15 = java . lang . Thread . METHOD_7 ( ) . METHOD_8 ( ) ; java . lang . Thread . METHOD_7 ( ) . METHOD_9 ( getClass ( ) . METHOD_10 ( ) ) ; try { javax . IDENT_10 . directory . IDENT_16 context = IDENT_17 . METHOD_11 ( domain . METHOD_12 ( ) , domain . METHOD_13 ( ) . METHOD_14 ( ) , METHOD_15 ( domain ) , props , domain . METHOD_16 ( ) ) ; try { final java . lang . String IDENT_18 = hudson . plugins . IDENT_8 . IDENT_19 . METHOD_17 ( domain . getName ( ) ) ; javax . IDENT_10 . directory . IDENT_20 group = new hudson . plugins . IDENT_8 . METHOD_18 ( context , IDENT_18 ) . METHOD_19 ( ) . METHOD_20 ( STRING_3 , IDENT_6 ) ; if ( group == null ) { hudson . plugins . IDENT_8 . IDENT_19 . LOGGER . log ( IDENT_21 . IDENT_22 , STRING_2 , IDENT_6 ) ; group = new hudson . plugins . IDENT_8 . METHOD_18 ( context , IDENT_18 ) . METHOD_19 ( ) . METHOD_20 ( STRING_4 , IDENT_6 ) ; if ( group != null ) { java . lang . String IDENT_23 = group . get ( STRING_5 ) . get ( ) . toString ( ) ; hudson . plugins . IDENT_8 . IDENT_19 . LOGGER . log ( IDENT_21 . IDENT_24 , java . lang . String . format ( STRING_2 0 , IDENT_6 , IDENT_23 ) ) ; group = null ; } continue ; } hudson . plugins . IDENT_8 . IDENT_19 . LOGGER . log ( IDENT_21 . IDENT_22 , STRING_6 , new java . lang . Object [ ] { IDENT_6 , group } ) ; return new hudson . plugins . IDENT_8 . METHOD_21 ( IDENT_6 ) ; } catch ( javax . IDENT_10 . IDENT_11 e ) { hudson . plugins . IDENT_8 . IDENT_19 . LOGGER . log ( IDENT_21 . IDENT_24 , java . lang . String . format ( STRING_7 , IDENT_6 ) , e ) ; throw new org . IDENT_25 . METHOD_22 ( ( STRING_8 + IDENT_6 ) , e ) ; } finally { METHOD_23 ( context ) ; } } catch ( org . IDENT_25 . IDENT_26 . IDENT_27 e ) { hudson . plugins . IDENT_8 . IDENT_19 . LOGGER . log ( IDENT_21 . IDENT_24 , java . lang . String . format ( STRING_9 , IDENT_6 , domain . getName ( ) ) , e ) ; } catch ( org . IDENT_25 . IDENT_28 e ) { hudson . plugins . IDENT_8 . IDENT_19 . LOGGER . log ( IDENT_21 . IDENT_24 , java . lang . String . format ( STRING_9 , IDENT_6 , domain . getName ( ) ) , e ) ; } finally { java . lang . Thread . METHOD_7 ( ) . METHOD_9 ( IDENT_15 ) ; } } hudson . plugins . IDENT_8 . IDENT_19 . LOGGER . log ( IDENT_21 . IDENT_24 , STRING_10 ) ; throw new hudson . security . METHOD_6 ( IDENT_6 ) ; } } ) ; } catch ( com . google . common . util . concurrent . IDENT_29 e ) { java . lang . Throwable t = e . METHOD_24 ( ) ; if ( t instanceof org . IDENT_25 . IDENT_28 ) { org . IDENT_25 . IDENT_28 IDENT_30 = ( ( org . IDENT_25 . IDENT_28 ) ( t ) ) ; throw IDENT_30 ; } else { throw new hudson . plugins . IDENT_8 . METHOD_25 ( ( STRING_2 1 + IDENT_6 ) , e ) ; } } catch ( java . util . concurrent . IDENT_31 e ) { hudson . plugins . IDENT_8 . IDENT_19 . LOGGER . log ( IDENT_21 . IDENT_32 , java . lang . String . format ( STRING_11 , IDENT_6 ) , e ) ; throw new hudson . plugins . IDENT_8 . METHOD_25 ( ( STRING_2 1 + IDENT_6 ) , e ) ; } }
org . junit . Assert . assertTrue ( IDENT_2 ) 