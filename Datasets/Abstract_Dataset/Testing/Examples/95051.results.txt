METHOD_0 ( ) { com . IDENT_0 . hudson . plugins . IDENT_1 . IDENT_2 f = METHOD_1 ( ) ; hudson . model . IDENT_3 project = f . METHOD_2 ( hudson . model . IDENT_3 . class , "foo" ) ; project . METHOD_3 ( ) . add ( new com . IDENT_4 . jenkins . plugins . IDENT_5 . test . utils . METHOD_4 ( com . IDENT_4 . jenkins . plugins . IDENT_5 . model . IDENT_6 . IDENT_7 . IDENT_8 ) ) ; hudson . model . IDENT_9 build = r . METHOD_5 ( project ) ; com . IDENT_4 . jenkins . plugins . IDENT_5 . model . IDENT_6 . IDENT_10 IDENT_6 = new com . IDENT_4 . jenkins . plugins . IDENT_5 . model . IDENT_6 . METHOD_6 ( STRING_0 ) ; com . IDENT_4 . jenkins . plugins . IDENT_5 . model . IDENT_11 reader = new com . IDENT_4 . jenkins . plugins . IDENT_5 . model . METHOD_7 ( IDENT_6 ) ; com . IDENT_4 . jenkins . plugins . IDENT_5 . model . IDENT_6 . IDENT_12 found = reader . METHOD_8 ( build ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( hudson . model . IDENT_13 ) { java . lang . String IDENT_14 = build . METHOD_9 ( ) . getName ( ) ; java . io . IDENT_15 reader = null ; try { reader = new java . io . METHOD_10 ( build . METHOD_11 ( ) ) ; return METHOD_12 ( build , reader , IDENT_14 ) ; } finally { if ( reader != null ) { try { reader . close ( ) ; } catch ( java . io . IOException e ) { com . IDENT_4 . jenkins . plugins . IDENT_5 . model . IDENT_16 . logger . log ( IDENT_17 . IDENT_18 , STRING_1 , e ) ; } } } }
org . junit . Assert . assertNotNull ( found ) 