METHOD_0 ( ) { hudson . plugins . IDENT_0 . IDENT_1 . model . IDENT_2 [ ] components = new hudson . plugins . IDENT_0 . IDENT_1 . model . IDENT_2 [ 2 ] ; components [ 0 ] = hudson . plugins . IDENT_0 . IDENT_1 . model . IDENT_3 . parse ( STRING_0 , hudson . plugins . IDENT_0 . IDENT_1 . model . IDENT_2 . class ) ; components [ 1 ] = hudson . plugins . IDENT_0 . IDENT_1 . model . IDENT_3 . parse ( STRING_1 , hudson . plugins . IDENT_0 . IDENT_1 . model . IDENT_2 . class ) ; when ( IDENT_4 . METHOD_1 ( eq ( STRING_2 ) , anyString ( ) , eq ( STRING_0 ) ) ) . thenReturn ( new java . io . METHOD_2 ( STRING_3 ) ) ; when ( IDENT_4 . METHOD_1 ( eq ( STRING_2 ) , anyString ( ) , eq ( STRING_1 ) ) ) . thenReturn ( new java . io . METHOD_2 ( "" ) ) ; java . lang . String [ ] IDENT_5 = instance . METHOD_3 ( components ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( hudson . plugins . IDENT_0 . IDENT_1 . model . IDENT_2 [ ] ) { java . util . List < java . lang . String > IDENT_5 = new java . util . ArrayList < java . lang . String > ( ) ; for ( int i = 0 ; i < ( components . length ) ; i ++ ) { java . lang . String IDENT_6 = METHOD_3 ( components [ i ] ) ; if ( org . apache . commons . lang . StringUtils . METHOD_4 ( IDENT_6 ) ) { IDENT_5 . add ( IDENT_6 ) ; } } return IDENT_5 . toArray ( new java . lang . String [ IDENT_5 . size ( ) ] ) ; }
org . junit . Assert . assertArrayEquals ( new java . lang . String [ ] { STRING_3 } , IDENT_5 ) 