METHOD_0 ( ) { com . IDENT_0 . tools . IDENT_1 . IDENT_2 . dto . events . IDENT_3 event = new com . IDENT_0 . tools . IDENT_1 . IDENT_2 . dto . events . METHOD_1 ( ) ; com . IDENT_0 . tools . IDENT_1 . IDENT_2 . dto . IDENT_4 . IDENT_5 IDENT_6 = new com . IDENT_0 . tools . IDENT_1 . IDENT_2 . dto . IDENT_4 . METHOD_2 ( ) ; IDENT_6 . METHOD_3 ( STRING_0 ) ; event . METHOD_4 ( IDENT_6 ) ; com . IDENT_0 . tools . IDENT_1 . IDENT_2 . dto . IDENT_4 . IDENT_7 IDENT_8 = new com . IDENT_0 . tools . IDENT_1 . IDENT_2 . dto . IDENT_4 . METHOD_5 ( ) ; IDENT_8 . METHOD_3 ( "1" ) ; event . METHOD_6 ( IDENT_8 ) ; java . lang . String expResult = ( com . IDENT_9 . hudson . plugins . IDENT_1 . IDENT_10 . utils . IDENT_11 . IDENT_12 ) + STRING_1 ; java . lang . String result = com . IDENT_9 . hudson . plugins . IDENT_1 . IDENT_10 . utils . IDENT_11 . METHOD_7 ( event ) ; "<AssertPlaceHolder>" ; } METHOD_7 ( com . IDENT_0 . tools . IDENT_1 . IDENT_2 . dto . events . IDENT_13 ) { if ( ( ( event . METHOD_8 ( ) ) != null ) && ( ( event . METHOD_8 ( ) . METHOD_9 ( ) ) != null ) ) { if ( ( event . METHOD_8 ( ) . METHOD_9 ( ) . length ( ) ) > 0 ) { return event . METHOD_8 ( ) . METHOD_9 ( ) ; } } java . lang . StringBuilder str = new java . lang . StringBuilder ( com . IDENT_9 . hudson . plugins . IDENT_1 . IDENT_10 . utils . IDENT_11 . IDENT_12 ) ; java . lang . String IDENT_14 = event . METHOD_10 ( ) . METHOD_11 ( ) ; if ( ( IDENT_14 . length ( ) ) < 2 ) { str . append ( STRING_2 ) . append ( IDENT_14 ) ; } else if ( ( IDENT_14 . length ( ) ) == 2 ) { str . append ( IDENT_14 ) ; } else { str . append ( IDENT_14 . substring ( ( ( IDENT_14 . length ( ) ) - 2 ) ) ) ; } str . append ( "/" ) . append ( IDENT_14 ) ; str . append ( "/" ) . append ( event . METHOD_8 ( ) . METHOD_11 ( ) ) ; return str . toString ( ) ; }
org . junit . Assert . assertEquals ( expResult , result ) 