METHOD_0 ( ) { final hudson . model . IDENT_0 IDENT_1 = IDENT_2 . getInstance ( ) . METHOD_1 ( hudson . model . IDENT_0 . class , com . IDENT_3 . jenkins . integration . IDENT_4 . IDENT_5 ) ; final java . util . Map < java . lang . String , com . IDENT_3 . jenkins . model . IDENT_6 > IDENT_7 = server . METHOD_2 ( ) ; "<AssertPlaceHolder>" ; server . close ( ) ; server . METHOD_2 ( ) ; } get ( java . lang . String ) { org . apache . http . client . methods . IDENT_8 IDENT_9 = new org . apache . http . client . methods . METHOD_3 ( com . IDENT_3 . jenkins . client . util . IDENT_10 . METHOD_4 ( uri , context , path ) ) ; org . apache . http . IDENT_11 response = client . execute ( IDENT_9 , IDENT_12 ) ; IDENT_13 = com . IDENT_3 . jenkins . client . util . IDENT_14 . METHOD_5 ( response ) ; LOGGER . debug ( STRING_0 , path , this . IDENT_13 , response . METHOD_6 ( ) . getStatusCode ( ) ) ; try { IDENT_15 . METHOD_7 ( response ) ; return org . apache . commons . io . IDENT_16 . toString ( response . METHOD_8 ( ) . METHOD_9 ( ) ) ; } finally { org . apache . http . util . IDENT_17 . METHOD_10 ( response . METHOD_8 ( ) ) ; METHOD_11 ( IDENT_9 ) ; } }
org . junit . Assert . assertNotNull ( IDENT_7 . get ( IDENT_1 . getName ( ) ) ) 