METHOD_0 ( ) { final java . net . URI input = java . net . URI . create ( STRING_0 ) ; final java . net . URI actual = hudson . plugins . IDENT_0 . model . IDENT_1 . METHOD_1 ( input ) ; final java . net . URI expected = java . net . URI . create ( STRING_1 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . net . URI ) { final java . lang . String path = IDENT_2 . getPath ( ) ; final int i = path . indexOf ( STRING_2 ) ; if ( i == ( - 1 ) ) { final java . lang . String template = STRING_3 ; throw new java . lang . IllegalArgumentException ( java . lang . String . format ( template , IDENT_2 ) ) ; } final java . lang . String IDENT_3 = path . substring ( 0 , i ) ; final java . net . URI uri ; try { uri = new java . net . URI ( IDENT_2 . METHOD_2 ( ) , IDENT_2 . METHOD_3 ( ) , IDENT_3 , IDENT_2 . METHOD_4 ( ) , IDENT_2 . METHOD_5 ( ) ) ; } catch ( final java . net . IDENT_4 e ) { throw new java . lang . METHOD_6 ( e ) ; } return uri ; }
org . junit . Assert . assertEquals ( expected , actual ) 