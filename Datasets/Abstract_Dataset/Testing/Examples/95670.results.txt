METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final java . util . Date IDENT_1 = org . IDENT_2 . hudson . plugins . IDENT_3 . utils . Utils . METHOD_1 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . lang . String ) { java . util . Date result = null ; java . lang . String IDENT_4 = "" ; try { if ( ( IDENT_5 . startsWith ( IDENT_6 . IDENT_7 . toString ( ) ) ) || ( IDENT_5 . startsWith ( IDENT_6 . IDENT_8 . toString ( ) ) ) ) { IDENT_4 = IDENT_5 . METHOD_2 ( org . IDENT_2 . hudson . plugins . IDENT_3 . utils . Utils . IDENT_9 , "" ) ; if ( ! ( IDENT_4 . isEmpty ( ) ) ) { result = org . IDENT_2 . hudson . plugins . IDENT_3 . utils . Utils . IDENT_10 . parse ( IDENT_4 ) ; } } } catch ( final java . lang . IDENT_11 IDENT_12 ) { org . IDENT_2 . hudson . plugins . IDENT_3 . utils . Utils . LOGGER . log ( IDENT_13 . IDENT_14 , STRING_1 , IDENT_12 ) ; } catch ( final java . lang . Exception e ) { org . IDENT_2 . hudson . plugins . IDENT_3 . utils . Utils . LOGGER . log ( IDENT_13 . IDENT_15 , java . lang . String . format ( STRING_2 , IDENT_5 ) ) ; } return result ; }
org . junit . Assert . assertNull ( IDENT_1 ) 