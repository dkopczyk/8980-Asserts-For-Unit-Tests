METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . IDENT_2 . IDENT_3 IDENT_4 = new com . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_1 ( ) ; byte [ ] message = STRING_0 . getBytes ( IDENT_5 . UTF_8 ) ; java . security . IDENT_6 factory = java . security . IDENT_6 . getInstance ( STRING_1 , new net . IDENT_7 . crypto . IDENT_8 . METHOD_2 ( ) ) ; java . security . IDENT_9 IDENT_10 = factory . METHOD_3 ( ) ; net . IDENT_7 . crypto . IDENT_8 . IDENT_11 IDENT_12 = ( ( net . IDENT_7 . crypto . IDENT_8 . IDENT_11 ) ( IDENT_10 . METHOD_4 ( ) ) ) ; net . IDENT_7 . crypto . IDENT_8 . IDENT_13 IDENT_14 = ( ( net . IDENT_7 . crypto . IDENT_8 . IDENT_13 ) ( IDENT_10 . METHOD_5 ( ) ) ) ; byte [ ] IDENT_2 = IDENT_4 . METHOD_6 ( message , IDENT_12 , new java . security . METHOD_7 ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_8 ( byte [ ] , byte [ ] , IDENT_15 extends java . security . IDENT_16 ) { try { java . security . IDENT_17 IDENT_2 = ( null == ( provider ) ) ? java . security . IDENT_17 . getInstance ( IDENT_18 ) : java . security . IDENT_17 . getInstance ( IDENT_18 , provider ) ; IDENT_2 . METHOD_9 ( IDENT_19 ) ; IDENT_2 . update ( message ) ; return IDENT_2 . verify ( IDENT_20 ) ; } catch ( java . security . IDENT_21 ex ) { throw new java . io . IOException ( STRING_2 , ex ) ; } }
org . junit . Assert . assertTrue ( IDENT_4 . METHOD_8 ( message , IDENT_2 , IDENT_14 ) ) 