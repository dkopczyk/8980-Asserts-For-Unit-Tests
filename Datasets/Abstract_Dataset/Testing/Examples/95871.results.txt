METHOD_0 ( ) { byte [ ] IDENT_0 = new byte [ ] { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , INT_0 , 12 , INT_1 , INT_2 , 15 , 16 } ; java . lang . String expResult = STRING_0 ; java . lang . String result = org . IDENT_1 . IDENT_2 . utils . IDENT_3 . METHOD_1 ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( byte [ ] ) { if ( IDENT_0 == null ) { return null ; } final java . lang . StringBuilder IDENT_4 = new java . lang . StringBuilder ( ( 2 * ( IDENT_0 . length ) ) ) ; for ( final byte b : IDENT_0 ) { IDENT_4 . append ( org . IDENT_1 . IDENT_2 . utils . IDENT_3 . IDENT_5 . charAt ( ( ( b & INT_3 ) > > 4 ) ) ) . append ( org . IDENT_1 . IDENT_2 . utils . IDENT_3 . IDENT_5 . charAt ( ( b & 15 ) ) ) ; } return IDENT_4 . toString ( ) ; }
org . junit . Assert . assertEquals ( expResult , result ) 