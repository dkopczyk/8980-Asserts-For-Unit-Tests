METHOD_0 ( ) { IDENT_0 . remove ( ) ; METHOD_1 ( IDENT_1 . IDENT_2 . base . IDENT_3 . < java . lang . Integer > METHOD_2 ( new java . lang . Throwable ( ) ) , IDENT_4 ) ; IDENT_4 . METHOD_2 ( new java . lang . Throwable ( ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . Throwable ) { if ( METHOD_3 ( ) ) { throw new java . lang . IllegalStateException ( STRING_0 ) ; } IDENT_5 = IDENT_6 ; IDENT_7 = true ; for ( IDENT_1 . IDENT_2 . base . function . IDENT_8 < java . lang . Throwable > handler : IDENT_9 ) { try { handler . accept ( IDENT_6 ) ; } catch ( java . lang . Throwable t ) { IDENT_1 . IDENT_2 . base . IDENT_10 . METHOD_4 ( t ) ; } } METHOD_5 ( ) ; }
org . junit . Assert . assertNotNull ( error ) 