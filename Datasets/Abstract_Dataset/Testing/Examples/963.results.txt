METHOD_0 ( ) { IDENT_0 . METHOD_1 ( STRING_0 ) ; com . IDENT_1 . metrics . core . IDENT_2 IDENT_3 = ( ( com . IDENT_1 . metrics . core . IDENT_2 ) ( IDENT_4 . METHOD_2 ( IDENT_0 ) ) ) ; IDENT_4 . METHOD_3 ( IDENT_3 , 7 ) ; "<AssertPlaceHolder>" ; } METHOD_3 ( com . IDENT_1 . metrics . core . IDENT_5 , double ) { if ( IDENT_3 instanceof com . IDENT_1 . metrics . core . IDENT_6 ) { ( ( com . IDENT_7 . IDENT_8 . IDENT_9 ) ( IDENT_3 ) ) . setValue ( ( ( long ) ( value ) ) ) ; } else if ( IDENT_3 instanceof com . IDENT_1 . metrics . core . IDENT_2 ) { if ( value > 0 ) { ( ( com . IDENT_1 . metrics . core . IDENT_2 ) ( IDENT_3 ) ) . METHOD_4 ( ( ( long ) ( value ) ) ) ; } else if ( value < 0 ) { ( ( com . IDENT_1 . metrics . core . IDENT_2 ) ( IDENT_3 ) ) . METHOD_5 ( ( ( ( long ) ( value ) ) * ( - 1 ) ) ) ; } else { ( ( com . IDENT_1 . metrics . core . IDENT_2 ) ( IDENT_3 ) ) . METHOD_6 ( ) ; } } else if ( IDENT_3 instanceof com . IDENT_1 . metrics . core . IDENT_10 ) { ( ( com . IDENT_1 . metrics . core . IDENT_10 ) ( IDENT_3 ) ) . METHOD_7 ( ( ( long ) ( value ) ) ) ; } else if ( IDENT_3 instanceof com . IDENT_1 . metrics . core . IDENT_11 ) { ( ( com . IDENT_1 . metrics . core . IDENT_11 ) ( IDENT_3 ) ) . update ( ( ( long ) ( value ) ) ) ; } else if ( IDENT_3 instanceof com . IDENT_1 . metrics . core . IDENT_12 ) { ( ( com . IDENT_1 . metrics . core . IDENT_12 ) ( IDENT_3 ) ) . update ( ( ( long ) ( value * FLOAT_0 ) ) , TimeUnit . IDENT_13 ) ; } else { com . IDENT_7 . IDENT_8 . IDENT_14 . logger . debug ( STRING_1 ) ; } }
org . junit . Assert . assertEquals ( 7 , IDENT_3 . count ( ) ) 