METHOD_0 ( ) { org . jfree . data . IDENT_0 . IDENT_1 dataset = new org . jfree . data . IDENT_0 . METHOD_1 ( ) ; org . jfree . chart . IDENT_2 chart = org . jfree . chart . IDENT_3 . METHOD_2 ( STRING_0 , STRING_1 , STRING_2 , dataset ) ; org . jfree . chart . IDENT_4 . IDENT_5 IDENT_4 = ( ( org . jfree . chart . IDENT_4 . IDENT_5 ) ( chart . METHOD_3 ( ) ) ) ; IDENT_4 . METHOD_4 ( new org . jfree . chart . IDENT_4 . METHOD_5 ( 1.0 ) , IDENT_6 . IDENT_7 ) ; IDENT_4 . METHOD_4 ( new org . jfree . chart . IDENT_4 . METHOD_6 ( 2.0 , FLOAT_0 ) , IDENT_6 . IDENT_8 ) ; IDENT_4 . METHOD_7 ( new org . jfree . chart . IDENT_4 . METHOD_5 ( FLOAT_1 ) , IDENT_6 . IDENT_7 ) ; IDENT_4 . METHOD_7 ( new org . jfree . chart . IDENT_4 . METHOD_6 ( FLOAT_2 , FLOAT_3 ) , IDENT_6 . IDENT_8 ) ; org . jfree . chart . IDENT_2 IDENT_9 = ( ( org . jfree . chart . IDENT_2 ) ( org . jfree . chart . TestUtils . METHOD_8 ( chart ) ) ) ; "<AssertPlaceHolder>" ; IDENT_9 . METHOD_9 ( INT_0 , 200 ) ; } METHOD_8 ( T extends java . io . IDENT_10 ) { T result = null ; java . io . ByteArrayOutputStream buffer = new java . io . ByteArrayOutputStream ( ) ; java . io . IDENT_11 out ; try { out = new java . io . METHOD_10 ( buffer ) ; out . METHOD_11 ( original ) ; out . close ( ) ; java . io . IDENT_12 in = new java . io . METHOD_12 ( new java . io . ByteArrayInputStream ( buffer . toByteArray ( ) ) ) ; result = ( ( T ) ( in . METHOD_13 ( ) ) ) ; in . close ( ) ; } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( e ) ; } catch ( java . lang . IDENT_13 e ) { throw new java . lang . RuntimeException ( e ) ; } return result ; }
org . junit . Assert . assertEquals ( chart , IDENT_9 ) 