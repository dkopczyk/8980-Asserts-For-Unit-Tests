METHOD_0 ( ) { org . jfree . chart . IDENT_0 . IDENT_1 IDENT_2 = new org . jfree . chart . IDENT_0 . METHOD_1 ( ) ; java . util . Map < java . lang . IDENT_3 , java . lang . String > IDENT_4 = new java . util . HashMap < java . lang . IDENT_3 , java . lang . String > ( ) ; IDENT_4 . put ( STRING_0 , STRING_1 ) ; IDENT_2 . METHOD_2 ( IDENT_4 ) ; java . io . ByteArrayOutputStream buffer = new java . io . ByteArrayOutputStream ( ) ; java . io . IDENT_5 out = new java . io . METHOD_3 ( buffer ) ; out . METHOD_4 ( IDENT_2 ) ; out . close ( ) ; java . io . IDENT_6 in = new java . io . METHOD_5 ( new java . io . ByteArrayInputStream ( buffer . toByteArray ( ) ) ) ; org . jfree . chart . IDENT_0 . METHOD_1 IDENT_7 = ( ( org . jfree . chart . IDENT_0 . METHOD_1 ) ( in . METHOD_6 ( ) ) ) ; in . close ( ) ; "<AssertPlaceHolder>" ; } close ( ) { try { this . connection . close ( ) ; } catch ( java . lang . Exception e ) { System . err . println ( STRING_2 ) ; } }
org . junit . Assert . assertEquals ( IDENT_2 , IDENT_7 ) 