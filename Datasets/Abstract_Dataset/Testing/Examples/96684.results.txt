METHOD_0 ( ) { org . jfree . data . time . IDENT_0 IDENT_1 = new org . jfree . data . time . METHOD_1 ( INT_0 , new org . jfree . data . time . METHOD_2 ( INT_1 , org . jfree . chart . date . IDENT_2 . IDENT_3 , INT_2 ) ) ; org . jfree . data . time . METHOD_1 next = ( ( org . jfree . data . time . METHOD_1 ) ( IDENT_1 . next ( ) ) ) ; "<AssertPlaceHolder>" ; } next ( ) { org . jfree . data . time . IDENT_4 result ; if ( ( this . IDENT_5 ) != ( org . jfree . chart . date . IDENT_2 . IDENT_3 ) ) { result = new org . jfree . data . time . METHOD_3 ( ( ( this . IDENT_5 ) + 1 ) , this . IDENT_6 ) ; } else { if ( ( this . IDENT_6 ) < INT_2 ) { result = new org . jfree . data . time . METHOD_3 ( org . jfree . chart . date . IDENT_2 . IDENT_7 , ( ( this . IDENT_6 ) + 1 ) ) ; } else { result = null ; } } return result ; }
org . junit . Assert . assertNull ( next ) 