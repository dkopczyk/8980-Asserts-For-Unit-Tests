METHOD_0 ( ) { final java . lang . String IDENT_0 = STRING_0 ; final java . io . File input = this . METHOD_1 ( IDENT_0 ) ; org . apache . commons . IDENT_1 . IDENT_2 . IDENT_3 out = null ; org . apache . commons . IDENT_1 . IDENT_2 . IDENT_4 IDENT_5 = null ; final java . io . File result = java . io . File . METHOD_2 ( "test" , ( STRING_1 + IDENT_0 ) ) ; result . METHOD_3 ( ) ; try { final java . io . InputStream is = new java . io . METHOD_4 ( input ) ; IDENT_5 = factory . METHOD_5 ( IDENT_0 , is ) ; out = factory . METHOD_6 ( IDENT_0 , new java . io . METHOD_7 ( result ) ) ; final org . apache . commons . IDENT_1 . IDENT_6 . IDENT_7 IDENT_6 = new org . apache . commons . IDENT_1 . IDENT_6 . METHOD_8 ( ) ; final java . io . File IDENT_8 = METHOD_9 ( STRING_2 ) ; final org . apache . commons . IDENT_1 . IDENT_2 . IDENT_9 entry = new org . apache . commons . IDENT_1 . IDENT_2 . IDENT_10 . METHOD_10 ( STRING_3 ) ; IDENT_6 . add ( entry , new java . io . METHOD_4 ( IDENT_8 ) , true ) ; final org . apache . commons . IDENT_1 . IDENT_6 . IDENT_11 IDENT_12 = new org . apache . commons . IDENT_1 . IDENT_6 . METHOD_11 ( IDENT_6 ) ; final org . apache . commons . IDENT_1 . IDENT_6 . IDENT_13 results = IDENT_12 . METHOD_12 ( IDENT_5 , out ) ; "<AssertPlaceHolder>" ; is . close ( ) ; } finally { if ( out != null ) { out . close ( ) ; } if ( IDENT_5 != null ) { IDENT_5 . close ( ) ; } } this . METHOD_13 ( result , IDENT_14 ) ; } METHOD_14 ( ) { return IDENT_15 ; }
org . junit . Assert . assertTrue ( results . METHOD_14 ( ) . contains ( STRING_3 ) ) 