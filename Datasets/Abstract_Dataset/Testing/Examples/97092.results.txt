METHOD_0 ( ) { org . jfree . data . IDENT_0 . IDENT_1 IDENT_2 = new org . jfree . data . IDENT_0 . METHOD_1 ( ) ; IDENT_2 . add ( FLOAT_0 , FLOAT_1 , STRING_0 , STRING_1 ) ; IDENT_2 . add ( FLOAT_2 , FLOAT_3 , STRING_0 , STRING_2 ) ; IDENT_2 . add ( null , new java . lang . Double ( FLOAT_4 ) , STRING_0 , STRING_3 ) ; IDENT_2 . add ( new java . lang . Double ( FLOAT_5 ) , null , STRING_4 , STRING_3 ) ; org . jfree . data . IDENT_0 . METHOD_1 IDENT_3 = ( ( org . jfree . data . IDENT_0 . METHOD_1 ) ( org . jfree . chart . TestUtils . METHOD_2 ( IDENT_2 ) ) ) ; "<AssertPlaceHolder>" ; } METHOD_2 ( java . lang . Object ) { java . lang . Object result = null ; java . io . ByteArrayOutputStream buffer = new java . io . ByteArrayOutputStream ( ) ; java . io . IDENT_4 out ; try { out = new java . io . METHOD_3 ( buffer ) ; out . METHOD_4 ( original ) ; out . close ( ) ; java . io . IDENT_5 in = new java . io . METHOD_5 ( new java . io . ByteArrayInputStream ( buffer . toByteArray ( ) ) ) ; result = in . METHOD_6 ( ) ; in . close ( ) ; } catch ( java . io . IOException e ) { throw new java . lang . RuntimeException ( e ) ; } catch ( java . lang . IDENT_6 e ) { throw new java . lang . RuntimeException ( e ) ; } return result ; }
org . junit . Assert . assertEquals ( IDENT_2 , IDENT_3 ) 