METHOD_0 ( ) { com . IDENT_0 . IDENT_1 . stream . IDENT_2 < java . lang . Integer > IDENT_3 = new com . IDENT_0 . IDENT_1 . stream . IDENT_2 < java . lang . Integer > ( 10 ) ; IDENT_4 . IDENT_5 . random . engine . IDENT_6 IDENT_7 = IDENT_4 . IDENT_5 . random . engine . IDENT_6 . METHOD_1 ( ) ; for ( int i = 0 ; i < ( com . IDENT_0 . IDENT_1 . stream . IDENT_8 . IDENT_9 ) ; i ++ ) { int IDENT_10 = IDENT_4 . IDENT_5 . random . IDENT_11 . METHOD_2 ( FLOAT_0 , IDENT_7 ) ; IDENT_3 . METHOD_3 ( IDENT_10 ) ; } java . util . List < java . lang . Integer > IDENT_12 = IDENT_3 . METHOD_4 ( 5 ) ; System . out . println ( STRING_0 ) ; for ( java . lang . Integer e : IDENT_12 ) { System . out . println ( e ) ; } int IDENT_13 = IDENT_12 . get ( 0 ) ; "<AssertPlaceHolder>" ; System . out . println ( IDENT_3 ) ; } get ( long ) { return IDENT_14 . get ( node ) ; }
org . junit . Assert . assertEquals ( 0 , IDENT_13 ) 