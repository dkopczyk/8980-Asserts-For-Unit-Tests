METHOD_0 ( ) { try ( java . io . InputStream is = new java . io . METHOD_1 ( METHOD_2 ( STRING_0 ) ) ) { final byte [ ] IDENT_0 = new byte [ 4 ] ; is . read ( IDENT_0 ) ; "<AssertPlaceHolder>" ; } } matches ( byte [ ] , int ) { if ( length < ( org . apache . commons . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 ) ) { return false ; } for ( int i = 0 ; i < ( org . apache . commons . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_5 ) ; i ++ ) { if ( ( IDENT_6 [ i ] ) != ( org . apache . commons . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . IDENT_7 [ i ] ) ) { return false ; } } return true ; }
org . junit . Assert . assertFalse ( org . apache . commons . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . matches ( IDENT_0 , 4 ) ) 