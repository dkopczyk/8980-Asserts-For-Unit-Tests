METHOD_0 ( ) { byte [ ] bytes = new byte [ ] { ( ( byte ) ( INT_0 ) ) , ( ( byte ) ( INT_0 ) ) } ; org . IDENT_0 . impl . IDENT_1 . transform . IDENT_2 . IDENT_3 IDENT_4 = org . IDENT_0 . impl . IDENT_1 . transform . IDENT_2 . IDENT_3 . valueOf ( bytes ) ; byte [ ] result = IDENT_4 . toByteArray ( ) ; "<AssertPlaceHolder>" ; } toByteArray ( ) { byte [ ] bytes = new byte [ METHOD_1 ( ) ] ; for ( int IDENT_5 = 0 ; IDENT_5 < ( IDENT_6 ) ; ++ IDENT_5 ) { int IDENT_7 = IDENT_5 / 8 ; int IDENT_8 = IDENT_5 OP_0 8 ; if ( get ( IDENT_5 ) ) { bytes [ IDENT_7 ] OP_1 INT_1 > > IDENT_8 ; } } return bytes ; }
org . junit . Assert . assertArrayEquals ( bytes , result ) 