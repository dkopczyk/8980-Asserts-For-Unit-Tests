METHOD_0 ( ) { java . lang . String name = STRING_0 ; java . math . BigDecimal result = java . math . BigDecimal . IDENT_0 ; com . fasterxml . jackson . databind . IDENT_1 node = METHOD_1 ( com . fasterxml . jackson . databind . IDENT_1 . class ) ; com . fasterxml . jackson . databind . IDENT_1 value = com . fasterxml . jackson . databind . node . IDENT_2 . valueOf ( result ) ; expect ( node . get ( name ) ) . andReturn ( value ) ; java . lang . Object [ ] IDENT_3 = new java . lang . Object [ ] { node } ; replay ( IDENT_3 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_3 ) ; } resolve ( java . lang . Object , java . lang . String ) { java . lang . Object value = null ; if ( context instanceof com . fasterxml . jackson . databind . node . IDENT_4 ) { try { if ( name . equals ( STRING_1 ) ) { return ( ( com . fasterxml . jackson . databind . node . IDENT_4 ) ( context ) ) . size ( ) ; } value = com . github . IDENT_5 . IDENT_6 . IDENT_7 . resolve ( ( ( com . fasterxml . jackson . databind . node . IDENT_4 ) ( context ) ) . get ( java . lang . Integer . METHOD_2 ( name ) ) ) ; } catch ( java . lang . IDENT_8 ex ) { value = null ; } } else if ( context instanceof com . fasterxml . jackson . databind . IDENT_1 ) { value = com . github . IDENT_5 . IDENT_6 . IDENT_7 . resolve ( ( ( com . fasterxml . jackson . databind . IDENT_1 ) ( context ) ) . get ( name ) ) ; } return value == null ? IDENT_9 : value ; }
org . junit . Assert . assertEquals ( result , IDENT_7 . INSTANCE . resolve ( node , name ) ) 