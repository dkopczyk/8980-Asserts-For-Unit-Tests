METHOD_0 ( ) { javax . servlet . IDENT_0 IDENT_1 = METHOD_1 ( javax . servlet . IDENT_0 . class ) ; METHOD_2 ( IDENT_1 , STRING_0 ) ; replay ( IDENT_1 ) ; com . github . IDENT_2 . IDENT_3 . io . IDENT_4 source = new com . github . IDENT_2 . IDENT_3 . io . METHOD_3 ( IDENT_1 , "/" , null ) . METHOD_4 ( STRING_1 ) ; "<AssertPlaceHolder>" ; verify ( IDENT_1 ) ; } METHOD_4 ( java . lang . String ) { try { return cache . get ( location , ( ) -> delegate . METHOD_4 ( location ) ) ; } catch ( java . util . concurrent . IDENT_5 e ) { com . google . common . base . IDENT_6 . METHOD_5 ( e . METHOD_6 ( ) , java . io . IOException . class ) ; throw com . google . common . base . IDENT_6 . METHOD_7 ( e . METHOD_6 ( ) ) ; } }
org . junit . Assert . assertNotNull ( source ) 