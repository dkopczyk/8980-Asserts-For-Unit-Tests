METHOD_0 ( ) { java . util . List < java . lang . Thread > IDENT_0 = new java . util . ArrayList < java . lang . Thread > ( ) ; for ( int i = 0 ; i < 100 ; i ++ ) { final int IDENT_1 = i ; java . lang . Thread process = new java . lang . Thread ( ) { @ de . IDENT_2 . IDENT_3 . IDENT_4 . test . Override public void run ( ) { try { METHOD_1 ( ( ( byte ) ( IDENT_1 ) ) ) ; } catch ( java . lang . Exception e ) { throw new java . lang . RuntimeException ( ( ( ( STRING_0 + ( java . lang . Thread . METHOD_2 ( ) . getName ( ) ) ) + STRING_1 ) + ( e . getMessage ( ) ) ) ) ; } } } ; process . setName ( ( STRING_2 + i ) ) ; process . start ( ) ; IDENT_0 . add ( process ) ; java . lang . Thread . sleep ( 100 ) ; } boolean IDENT_5 = true ; while ( IDENT_5 ) { IDENT_5 = false ; for ( java . lang . Thread t : IDENT_0 ) { if ( t . METHOD_3 ( ) ) { IDENT_5 = true ; } } java . lang . Thread . sleep ( 100 ) ; } "<AssertPlaceHolder>" ; } setName ( java . lang . String ) { if ( ( IDENT_6 == null ) || ( IDENT_6 . trim ( ) . isEmpty ( ) ) ) { throw new java . lang . IllegalArgumentException ( STRING_3 ) ; } this . name = IDENT_6 ; }
org . junit . Assert . assertTrue ( true ) 