METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . util . IDENT_2 . impl . IDENT_3 < org . IDENT_0 . IDENT_1 . solution . IDENT_4 > IDENT_2 ; IDENT_2 = new org . IDENT_0 . IDENT_1 . util . IDENT_2 . impl . METHOD_1 ( ) ; org . IDENT_0 . IDENT_1 . solution . IDENT_4 solution = mock ( org . IDENT_0 . IDENT_1 . solution . IDENT_4 . class ) ; when ( solution . METHOD_2 ( ) ) . thenReturn ( 2 ) ; when ( solution . METHOD_3 ( 0 ) ) . thenReturn ( 1.0 ) ; when ( solution . METHOD_3 ( 1 ) ) . thenReturn ( 1.0 ) ; IDENT_2 . add ( solution ) ; org . IDENT_0 . IDENT_1 . solution . IDENT_4 IDENT_5 = mock ( org . IDENT_0 . IDENT_1 . solution . IDENT_4 . class ) ; when ( IDENT_5 . METHOD_2 ( ) ) . thenReturn ( 2 ) ; when ( IDENT_5 . METHOD_3 ( 0 ) ) . thenReturn ( 2.0 ) ; when ( IDENT_5 . METHOD_3 ( 1 ) ) . thenReturn ( 0.0 ) ; IDENT_2 . add ( IDENT_5 ) ; "<AssertPlaceHolder>" ; } size ( ) { return IDENT_6 . size ( ) ; }
org . junit . Assert . assertEquals ( 2 , IDENT_2 . size ( ) ) 