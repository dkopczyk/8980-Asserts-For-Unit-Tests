METHOD_0 ( ) { org . junit . IDENT_0 . METHOD_1 ( ( ( org . apache . commons . crypto . IDENT_1 . IDENT_2 . METHOD_2 ( ) ) == null ) ) ; org . apache . commons . crypto . IDENT_1 . IDENT_2 IDENT_1 = org . apache . commons . crypto . IDENT_1 . IDENT_2 . getInstance ( STRING_0 ) ; "<AssertPlaceHolder>" ; final byte [ ] IDENT_3 = new byte [ ] { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , INT_0 , 12 , INT_1 , INT_2 , 15 , INT_3 } ; IDENT_1 . init ( IDENT_2 . IDENT_4 , IDENT_3 , new javax . crypto . spec . METHOD_3 ( IDENT_5 ) ) ; } getInstance ( java . lang . String ) { if ( ( org . apache . commons . crypto . IDENT_1 . IDENT_2 . IDENT_6 ) != null ) { throw new java . lang . IllegalStateException ( org . apache . commons . crypto . IDENT_1 . IDENT_2 . IDENT_6 ) ; } org . apache . commons . crypto . IDENT_1 . IDENT_2 . IDENT_7 transform = org . apache . commons . crypto . IDENT_1 . IDENT_2 . METHOD_4 ( IDENT_8 ) ; int IDENT_9 = org . apache . commons . crypto . IDENT_1 . IDENT_2 . IDENT_10 . get ( transform . algorithm , transform . IDENT_11 ) ; int IDENT_12 = org . apache . commons . crypto . IDENT_1 . IDENT_2 . IDENT_13 . get ( transform . IDENT_12 ) ; long context = org . apache . commons . crypto . IDENT_1 . IDENT_14 . METHOD_5 ( IDENT_9 , IDENT_12 ) ; return new org . apache . commons . crypto . IDENT_1 . METHOD_6 ( context , IDENT_9 , IDENT_12 ) ; }
org . junit . Assert . assertNotNull ( IDENT_1 ) 