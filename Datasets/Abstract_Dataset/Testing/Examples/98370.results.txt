METHOD_0 ( ) { IDENT_0 . IDENT_1 . IDENT_2 p = new IDENT_0 . IDENT_1 . METHOD_1 ( ) ; p . METHOD_2 ( 1 ) ; byte [ ] data = "test" . getBytes ( ) ; p . METHOD_3 ( data ) ; byte [ ] IDENT_3 = p . METHOD_4 ( ) ; byte [ ] IDENT_4 = new byte [ data . length ] ; java . lang . System . METHOD_5 ( IDENT_3 , 16 , IDENT_4 , 0 , data . length ) ; java . lang . String s = new java . lang . String ( IDENT_4 ) ; "<AssertPlaceHolder>" ; System . out . println ( ( STRING_0 + s ) ) ; } METHOD_4 ( ) { byte [ ] result = new byte [ 16 + ( IDENT_5 ) ] ; java . lang . System . METHOD_5 ( IDENT_0 . IDENT_1 . IDENT_6 . encode ( IDENT_7 ) , 0 , result , 0 , 4 ) ; java . lang . System . METHOD_5 ( IDENT_0 . IDENT_1 . IDENT_6 . encode ( IDENT_8 ) , 0 , result , 4 , 4 ) ; java . lang . System . METHOD_5 ( IDENT_0 . IDENT_1 . IDENT_6 . encode ( IDENT_9 ) , 0 , result , 8 , 4 ) ; java . lang . System . METHOD_5 ( IDENT_0 . IDENT_1 . IDENT_6 . encode ( IDENT_10 ) , 0 , result , 12 , 4 ) ; java . lang . System . METHOD_5 ( data , 0 , result , 16 , IDENT_5 ) ; return result ; }
org . junit . Assert . assertEquals ( "test" , s ) 