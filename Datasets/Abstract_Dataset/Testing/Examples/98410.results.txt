METHOD_0 ( ) { org . IDENT_0 . adapter . IDENT_1 IDENT_2 = new org . IDENT_0 . adapter . METHOD_1 ( STRING_0 , STRING_1 ) ; org . IDENT_0 . adapter . METHOD_1 IDENT_3 = new org . IDENT_0 . adapter . METHOD_1 ( STRING_0 , STRING_2 ) ; org . IDENT_0 . adapter . METHOD_1 IDENT_4 = new org . IDENT_0 . adapter . METHOD_1 ( STRING_0 , STRING_3 ) ; final java . lang . String IDENT_5 = org . apache . commons . io . IDENT_6 . toString ( org . IDENT_0 . adapter . IDENT_7 . class . METHOD_2 ( ) . getResourceAsStream ( ( ( IDENT_2 . METHOD_3 ( ) . replace ( STRING_4 , "/" ) ) + STRING_5 ) ) ) ; final java . lang . String IDENT_8 = org . apache . commons . io . IDENT_6 . toString ( org . IDENT_0 . adapter . IDENT_7 . class . METHOD_2 ( ) . getResourceAsStream ( ( ( IDENT_3 . METHOD_3 ( ) . replace ( STRING_4 , "/" ) ) + STRING_5 ) ) ) ; final java . lang . String IDENT_9 = org . apache . commons . io . IDENT_6 . toString ( org . IDENT_0 . adapter . IDENT_7 . class . METHOD_2 ( ) . getResourceAsStream ( ( ( IDENT_4 . METHOD_3 ( ) . replace ( STRING_4 , "/" ) ) + STRING_5 ) ) ) ; org . IDENT_0 . adapter . IDENT_10 . IDENT_11 IDENT_12 = new org . IDENT_0 . adapter . IDENT_10 . METHOD_4 ( ) ; org . IDENT_0 . adapter . Map < org . IDENT_0 . adapter . METHOD_1 , java . lang . String > IDENT_13 = new org . IDENT_0 . adapter . HashMap < org . IDENT_0 . adapter . METHOD_1 , java . lang . String > ( ) ; IDENT_13 . put ( IDENT_2 , IDENT_5 ) ; IDENT_13 . put ( IDENT_3 , IDENT_8 ) ; IDENT_13 . put ( IDENT_4 , IDENT_9 ) ; IDENT_12 . add ( IDENT_13 ) ; java . lang . Class < ? > IDENT_14 = java . lang . Class . METHOD_5 ( IDENT_2 . METHOD_3 ( ) , true , IDENT_12 ) ; org . IDENT_0 . adapter . IDENT_15 IDENT_16 = IDENT_17 . getType ( IDENT_14 ) ; org . IDENT_0 . adapter . IDENT_10 . METHOD_4 IDENT_18 = new org . IDENT_0 . adapter . IDENT_10 . METHOD_4 ( ) ; javax . tools . IDENT_19 < javax . tools . IDENT_20 > IDENT_21 = new javax . tools . IDENT_19 < javax . tools . IDENT_20 > ( ) ; boolean IDENT_22 = IDENT_18 . add ( IDENT_13 , IDENT_21 , org . IDENT_0 . adapter . Collections . singletonList ( new org . IDENT_0 . adapter . IDENT_7 . METHOD_6 ( IDENT_16 ) ) ) ; java . lang . StringBuilder builder = new java . lang . StringBuilder ( ) ; for ( javax . tools . IDENT_23 < ? extends javax . tools . IDENT_20 > IDENT_24 : IDENT_21 . METHOD_7 ( ) ) { builder . append ( IDENT_24 . getMessage ( Locale . IDENT_25 ) ) ; } "<AssertPlaceHolder>" ; } toString ( ) { return IDENT_26 ; }
org . junit . Assert . assertTrue ( builder . toString ( ) , IDENT_22 ) 