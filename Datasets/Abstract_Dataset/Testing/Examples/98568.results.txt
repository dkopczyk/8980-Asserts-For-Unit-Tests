METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . IDENT_2 IDENT_3 = org . IDENT_0 . IDENT_1 . IDENT_2 . parse ( new org . IDENT_0 . IDENT_1 . METHOD_1 ( new java . io . ByteArrayInputStream ( org . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 ) ) , org . IDENT_0 . IDENT_1 . IDENT_4 . IDENT_5 . length ) ; "<AssertPlaceHolder>" ; } parse ( org . IDENT_0 . IDENT_1 . IDENT_6 , int ) { java . lang . String url ; java . lang . String IDENT_7 ; java . lang . String IDENT_8 ; di . METHOD_2 ( ( INT_0 * 4 ) ) ; length OP_0 INT_0 * 4 ; if ( length <= 0 ) { return null ; } int len = di . METHOD_3 ( ) ; java . lang . String type = org . IDENT_0 . IDENT_1 . IDENT_9 . toString ( di . METHOD_3 ( ) ) ; len OP_0 8 ; org . IDENT_0 . IDENT_1 . IDENT_9 . assertEquals ( STRING_0 , type ) ; di . METHOD_2 ( 12 ) ; len OP_0 12 ; byte [ ] IDENT_10 ; IDENT_10 = new byte [ len ] ; di . METHOD_4 ( IDENT_10 ) ; url = org . IDENT_0 . IDENT_1 . IDENT_2 . toString ( IDENT_10 ) ; di . METHOD_2 ( ( 15 * 4 ) ) ; len = di . METHOD_3 ( ) ; type = org . IDENT_0 . IDENT_1 . IDENT_9 . toString ( di . METHOD_3 ( ) ) ; len OP_0 8 ; org . IDENT_0 . IDENT_1 . IDENT_9 . assertEquals ( STRING_1 , type ) ; di . METHOD_2 ( 12 ) ; len OP_0 12 ; IDENT_10 = new byte [ len ] ; di . METHOD_4 ( IDENT_10 ) ; IDENT_7 = org . IDENT_0 . IDENT_1 . IDENT_2 . toString ( IDENT_10 ) ; len = di . METHOD_3 ( ) ; type = org . IDENT_0 . IDENT_1 . IDENT_9 . toString ( di . METHOD_3 ( ) ) ; len OP_0 8 ; while ( ! ( STRING_2 . equals ( type ) ) ) { System . out . println ( type ) ; if ( type . equals ( STRING_3 ) ) { System . out . println ( STRING_4 ) ; org . IDENT_0 . IDENT_1 . IDENT_2 . METHOD_5 ( di , len ) ; } else { IDENT_10 = new byte [ len ] ; di . METHOD_4 ( IDENT_10 ) ; System . out . println ( new java . lang . String ( IDENT_10 ) ) ; } len = di . METHOD_3 ( ) ; type = org . IDENT_0 . IDENT_1 . IDENT_9 . toString ( di . METHOD_3 ( ) ) ; len OP_0 8 ; } org . IDENT_0 . IDENT_1 . IDENT_9 . assertEquals ( STRING_2 , type ) ; di . METHOD_2 ( 12 ) ; len OP_0 12 ; IDENT_10 = new byte [ len ] ; di . METHOD_4 ( IDENT_10 ) ; IDENT_8 = org . IDENT_0 . IDENT_1 . IDENT_2 . toString ( IDENT_10 ) ; return new org . IDENT_0 . IDENT_1 . METHOD_6 ( url , IDENT_7 , IDENT_8 ) ; }
org . junit . Assert . assertNull ( IDENT_3 ) 