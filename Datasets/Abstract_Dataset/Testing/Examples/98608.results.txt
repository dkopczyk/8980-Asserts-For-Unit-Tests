METHOD_0 ( ) { long count ; boolean IDENT_0 = false ; org . IDENT_1 . model . IDENT_2 IDENT_3 = IDENT_4 . METHOD_1 ( ) ; org . IDENT_1 . model . IDENT_5 IDENT_6 = IDENT_3 . METHOD_2 ( STRING_0 ) ; org . IDENT_1 . IDENT_4 . IDENT_7 IDENT_8 = IDENT_4 . METHOD_3 ( ) ; try { IDENT_8 . METHOD_4 ( ) ; count = net . IDENT_9 . IDENT_10 . IDENT_11 . METHOD_5 ( IDENT_8 . METHOD_6 ( IDENT_6 , IDENT_12 . IDENT_13 , null , IDENT_0 ) ) ; "<AssertPlaceHolder>" ; } finally { IDENT_8 . METHOD_7 ( ) ; IDENT_8 . close ( ) ; } } METHOD_6 ( org . IDENT_1 . model . IDENT_14 , org . IDENT_1 . model . IDENT_14 , org . IDENT_1 . model . IDENT_14 , net . IDENT_9 . flow . IDENT_15 ) { METHOD_8 ( ) ; org . IDENT_1 . model . IDENT_14 IDENT_16 = ( null == IDENT_17 ) ? null : IDENT_17 ; org . IDENT_1 . model . IDENT_14 IDENT_18 = ( null == IDENT_19 ) ? null : IDENT_19 ; org . IDENT_1 . model . IDENT_14 IDENT_20 = ( null == obj ) ? null : obj ; if ( ( ( null == IDENT_16 ) || ( IDENT_16 instanceof org . IDENT_1 . model . IDENT_21 ) ) && ( ( null == IDENT_18 ) || ( IDENT_18 instanceof org . IDENT_1 . model . IDENT_5 ) ) ) { net . IDENT_9 . flow . IDENT_22 < org . IDENT_1 . model . IDENT_23 > buffer = new net . IDENT_9 . flow . METHOD_9 ( IDENT_24 ) ; info . IDENT_25 . IDENT_26 . IDENT_27 < ? extends org . IDENT_1 . model . IDENT_23 , org . IDENT_1 . IDENT_4 . IDENT_28 > IDENT_29 ; try { IDENT_29 = IDENT_30 . METHOD_6 ( ( ( org . IDENT_1 . model . IDENT_21 ) ( IDENT_16 ) ) , ( ( org . IDENT_1 . model . IDENT_5 ) ( IDENT_18 ) ) , IDENT_20 , false ) ; try { while ( IDENT_29 . hasNext ( ) ) { org . IDENT_1 . model . IDENT_23 IDENT_31 = IDENT_29 . next ( ) ; try { buffer . accept ( IDENT_31 ) ; } catch ( net . IDENT_9 . IDENT_32 . IDENT_33 e ) { net . IDENT_9 . IDENT_32 . model . impl . IDENT_34 . IDENT_35 . logger . warn ( STRING_1 , e ) ; } } } finally { IDENT_29 . close ( ) ; } } catch ( org . IDENT_1 . IDENT_4 . IDENT_28 e ) { throw new net . IDENT_9 . IDENT_32 . METHOD_10 ( e ) ; } buffer . METHOD_11 ( ) ; } }
org . junit . Assert . assertEquals ( 1 , count ) 