METHOD_0 ( ) { org . springframework . web . client . IDENT_0 IDENT_1 = new org . springframework . web . client . METHOD_1 ( ) ; org . springframework . test . web . client . IDENT_2 IDENT_3 = org . springframework . test . web . client . IDENT_2 . METHOD_2 ( IDENT_1 ) ; org . springframework . http . IDENT_4 IDENT_5 = new org . springframework . http . METHOD_3 ( ) ; IDENT_5 . METHOD_4 ( IDENT_6 . IDENT_7 ) ; IDENT_3 . expect ( METHOD_5 ( STRING_0 ) ) . METHOD_6 ( method ( org . springframework . IDENT_8 . IDENT_9 . api . client . IDENT_10 ) ) . METHOD_6 ( content ( ) . string ( STRING_1 ) ) . METHOD_7 ( METHOD_8 ( IDENT_11 . IDENT_12 ) . body ( METHOD_9 ( STRING_2 ) ) . headers ( IDENT_5 ) ) ; org . springframework . IDENT_8 . IDENT_9 . api . IDENT_13 template = new org . springframework . IDENT_8 . IDENT_9 . client . METHOD_10 ( STRING_3 , STRING_4 , IDENT_1 ) . create ( STRING_5 , STRING_6 , STRING_7 ) ; "<AssertPlaceHolder>" ; } create ( java . lang . String , java . lang . String , java . lang . String ) { org . springframework . util . IDENT_14 < java . lang . String , java . lang . String > map = new org . springframework . util . IDENT_15 < java . lang . String , java . lang . String > ( ) ; map . add ( STRING_8 , STRING_9 ) ; map . add ( STRING_10 , this . IDENT_16 ) ; map . add ( STRING_11 , this . IDENT_17 ) ; map . add ( STRING_12 , IDENT_18 ) ; map . add ( STRING_9 , ( IDENT_19 + ( IDENT_20 == null ? "" : IDENT_20 ) ) ) ; java . util . Map < java . lang . String , java . lang . String > token = IDENT_1 . METHOD_11 ( this . IDENT_21 , map , java . util . Map . class ) ; org . springframework . IDENT_8 . IDENT_9 . api . impl . IDENT_22 template = new org . springframework . IDENT_8 . IDENT_9 . api . impl . METHOD_12 ( token . get ( STRING_13 ) ) ; java . lang . String IDENT_23 = token . get ( STRING_14 ) ; if ( IDENT_23 != null ) { template . METHOD_13 ( IDENT_23 ) ; } return template ; }
org . junit . Assert . assertNotNull ( template ) 