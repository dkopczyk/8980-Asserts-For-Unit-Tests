METHOD_0 ( ) { IDENT_0 . expect ( METHOD_1 ( ( ( STRING_0 + ( IDENT_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ) + STRING_1 ) ) ) . METHOD_4 ( method ( org . springframework . IDENT_2 . IDENT_1 . api . impl . IDENT_3 ) ) . METHOD_5 ( METHOD_6 ( IDENT_4 . IDENT_5 ) . body ( STRING_2 ) . headers ( IDENT_6 ) ) ; java . util . Map < java . lang . String , java . lang . Object > IDENT_7 = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; IDENT_7 . put ( STRING_3 , STRING_4 ) ; IDENT_7 . put ( STRING_5 , STRING_6 ) ; IDENT_7 . put ( STRING_7 , STRING_4 0 ) ; java . util . Map < ? , ? > result = IDENT_1 . METHOD_7 ( ) . update ( STRING_8 , STRING_9 , IDENT_7 ) ; "<AssertPlaceHolder>" ; } update ( java . lang . String , java . lang . String , java . util . Map ) { METHOD_8 ( ) ; org . springframework . http . IDENT_8 headers = new org . springframework . http . METHOD_9 ( ) ; headers . METHOD_10 ( IDENT_9 . IDENT_10 ) ; org . springframework . http . IDENT_11 < java . util . Map < java . lang . String , java . lang . Object > > entity = new org . springframework . http . IDENT_11 < java . util . Map < java . lang . String , java . lang . Object > > ( fields , headers ) ; java . util . Map < java . lang . String , java . lang . Object > result = IDENT_12 . METHOD_11 ( ( ( api . METHOD_12 ( ) ) + STRING_10 ) , entity , java . util . Map . class , METHOD_3 ( ) , IDENT_13 , IDENT_14 ) ; if ( result == null ) { result = new java . util . HashMap < java . lang . String , java . lang . Object > ( ) ; result . put ( STRING_11 , IDENT_14 ) ; result . put ( STRING_12 , true ) ; result . put ( STRING_13 , new java . util . ArrayList < java . lang . String > ( ) ) ; } return result ; }
org . junit . Assert . assertTrue ( ( ( result . size ( ) ) == 0 ) ) 