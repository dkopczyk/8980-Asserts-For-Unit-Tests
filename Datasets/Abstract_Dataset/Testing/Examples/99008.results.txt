METHOD_0 ( ) { org . mockito . Mockito . when ( request . METHOD_1 ( STRING_0 ) ) . thenReturn ( STRING_1 ) ; java . lang . String actual = IDENT_0 . get ( STRING_2 ) ; java . lang . String expected = "" ; "<AssertPlaceHolder>" ; } get ( java . lang . String ) { if ( ( name == null ) || ( ( name . length ( ) ) == 0 ) ) { throw new java . lang . IllegalArgumentException ( com . github . IDENT_1 . IDENT_2 . IDENT_3 . IDENT_4 . getString ( STRING_3 ) ) ; } java . lang . String IDENT_5 = request . METHOD_1 ( STRING_0 ) ; if ( IDENT_5 == null ) { return null ; } java . util . Map < java . lang . String , java . lang . String > IDENT_0 = METHOD_2 ( IDENT_5 ) ; for ( java . lang . String IDENT_6 : IDENT_0 . METHOD_3 ( ) ) { if ( ! ( name . equals ( IDENT_6 ) ) ) { continue ; } return IDENT_0 . get ( IDENT_6 ) ; } return null ; }
org . junit . Assert . assertEquals ( expected , actual ) 