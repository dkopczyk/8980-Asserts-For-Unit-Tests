delete ( ) { IDENT_0 . delete ( ) . METHOD_0 ( ( IDENT_1 ) -> IDENT_0 . create ( ) ) . METHOD_0 ( ( IDENT_1 ) -> IDENT_0 . delete ( ) ) . METHOD_1 ( ( IDENT_1 ) -> { if ( IDENT_1 . error ( ) ) { com . IDENT_2 . IDENT_3 . admin . IDENT_4 . model . response . IDENT_5 IDENT_6 = ( ( com . IDENT_2 . IDENT_3 . admin . IDENT_4 . model . response . IDENT_5 ) ( IDENT_1 ) ) ; org . junit . Assert . fail ( IDENT_6 . METHOD_2 ( ) ) ; } else if ( IDENT_1 . METHOD_3 ( ) ) { com . IDENT_2 . IDENT_3 . admin . IDENT_4 . model . response . IDENT_7 IDENT_8 = ( ( com . IDENT_2 . IDENT_3 . admin . IDENT_4 . model . response . IDENT_7 ) ( IDENT_1 ) ) ; org . junit . Assert . fail ( IDENT_8 . getMessage ( ) ) ; } else { com . IDENT_2 . IDENT_3 . admin . IDENT_4 . model . response . IDENT_9 . IDENT_10 IDENT_11 = ( ( com . IDENT_2 . IDENT_3 . admin . IDENT_4 . model . response . IDENT_9 . IDENT_10 ) ( IDENT_1 ) ) ; "<AssertPlaceHolder>" ; } } ) . join ( ) ; } METHOD_4 ( ) { return IDENT_12 ; }
org . junit . Assert . assertTrue ( IDENT_11 . METHOD_4 ( ) ) 