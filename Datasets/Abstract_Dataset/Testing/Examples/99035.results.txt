METHOD_0 ( ) { final java . lang . Object IDENT_0 = com . github . IDENT_1 . utils . IDENT_2 . METHOD_1 ( getClass ( ) . getResourceAsStream ( STRING_0 ) ) ; final java . lang . Object in = com . github . IDENT_1 . utils . IDENT_2 . METHOD_1 ( getClass ( ) . getResourceAsStream ( STRING_1 ) ) ; com . github . IDENT_1 . core . IDENT_3 IDENT_4 = new com . github . IDENT_1 . core . METHOD_2 ( ) ; final java . util . Map < java . lang . String , java . lang . Object > IDENT_5 = com . github . IDENT_1 . core . IDENT_6 . METHOD_3 ( in , METHOD_3 , IDENT_4 ) ; final java . lang . Object out = com . github . IDENT_1 . utils . IDENT_2 . METHOD_1 ( getClass ( ) . getResourceAsStream ( STRING_2 ) ) ; "<AssertPlaceHolder>" ; } METHOD_1 ( java . io . InputStream ) { try ( final org . apache . commons . io . input . IDENT_7 IDENT_8 = new org . apache . commons . io . input . METHOD_4 ( input , false , org . apache . commons . io . IDENT_9 . UTF_8 , org . apache . commons . io . IDENT_9 . IDENT_10 , org . apache . commons . io . IDENT_9 . IDENT_11 , org . apache . commons . io . IDENT_9 . IDENT_12 , org . apache . commons . io . IDENT_9 . IDENT_13 ) ) { java . nio . IDENT_14 . IDENT_15 IDENT_14 = java . nio . IDENT_14 . IDENT_16 . UTF_8 ; if ( IDENT_8 . METHOD_5 ( ) ) { try { IDENT_14 = java . nio . IDENT_14 . IDENT_15 . METHOD_6 ( IDENT_8 . METHOD_7 ( ) ) ; } catch ( final java . lang . IllegalArgumentException e ) { IDENT_14 = java . nio . IDENT_14 . IDENT_16 . UTF_8 ; } } return com . github . IDENT_1 . utils . IDENT_2 . METHOD_1 ( IDENT_8 , IDENT_14 ) ; } }
org . junit . Assert . assertEquals ( out , IDENT_5 ) 