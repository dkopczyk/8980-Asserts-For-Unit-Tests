METHOD_0 ( ) { org . IDENT_0 . IDENT_1 . route . IDENT_2 IDENT_3 = new org . IDENT_0 . IDENT_1 . route . METHOD_1 ( ) ; boolean IDENT_4 = true ; try { IDENT_3 . parse ( ( STRING_0 + ( ( ( STRING_0 + STRING_1 ) + STRING_2 ) + STRING_3 ) ) ) ; } catch ( org . IDENT_0 . IDENT_1 . IDENT_5 ex ) { IDENT_4 = false ; } "<AssertPlaceHolder>" ; } parse ( java . lang . String ) { s = s . trim ( ) ; if ( ( ( type ) == STRING_4 ) || ( ( type ) == STRING_5 ) ) { if ( s . equals ( "" ) ) { s = STRING_6 ; } try { if ( ( METHOD_2 ( ) ) == 0 ) { return new java . lang . Long ( s ) ; } else { return new java . lang . Double ( s ) ; } } catch ( java . lang . IDENT_6 IDENT_7 ) { throw new org . IDENT_0 . IDENT_1 . route . parse . METHOD_3 ( IDENT_7 ) ; } } if ( ( type ) == STRING_7 ) { return s ; } if ( ( type ) == STRING_8 ) { if ( ( ( ( s . equals ( STRING_9 ) ) || ( s . equals ( STRING_10 ) ) ) || ( s . equals ( STRING_11 ) ) ) || ( s . equals ( STRING_12 ) ) ) { return new java . lang . Boolean ( true ) ; } if ( ( ( ( s . equals ( STRING_13 ) ) || ( s . equals ( STRING_14 ) ) ) || ( s . equals ( STRING_11 0 ) ) ) || ( s . equals ( STRING_11 2 ) ) ) { return new java . lang . Boolean ( false ) ; } else { throw new org . IDENT_0 . IDENT_1 . route . parse . METHOD_3 ( ( STRING_15 + s ) ) ; } } if ( ( type ) == STRING_16 ) { org . IDENT_0 . IDENT_1 . route . parse . IDENT_8 IDENT_9 = new org . IDENT_0 . IDENT_1 . route . parse . METHOD_4 ( STRING_11 1 ) ; try { if ( "" . equals ( s ) ) { return null ; } else { return IDENT_9 . parse ( s ) ; } } catch ( org . IDENT_0 . IDENT_1 . route . parse . IDENT_10 IDENT_11 ) { throw new org . IDENT_0 . IDENT_1 . route . parse . METHOD_3 ( IDENT_11 ) ; } } else { throw new org . IDENT_0 . IDENT_1 . route . parse . METHOD_3 ( ( STRING_17 + ( type ) ) ) ; } }
org . junit . Assert . assertEquals ( false , IDENT_4 ) 