METHOD_0 ( ) { final org . IDENT_0 . IDENT_1 . client . persistence . IDENT_2 IDENT_3 = org . mockito . Mockito . mock ( org . IDENT_0 . IDENT_1 . client . persistence . IDENT_2 . class ) ; org . mockito . Mockito . METHOD_1 ( new org . mockito . IDENT_4 . IDENT_5 < java . lang . IDENT_6 > ( ) { @ org . IDENT_0 . IDENT_1 . client . channel . Override public org . IDENT_0 . IDENT_1 . client . channel . IDENT_6 METHOD_2 ( org . mockito . IDENT_7 . IDENT_8 IDENT_7 ) throws java . lang . Throwable { java . lang . Object [ ] args = IDENT_7 . METHOD_3 ( ) ; org . mockito . Mockito . when ( IDENT_3 . METHOD_4 ( ) ) . thenReturn ( ( ( java . lang . Integer ) ( args [ 0 ] ) ) ) ; return null ; } } ) . when ( IDENT_3 ) . METHOD_5 ( org . mockito . Mockito . METHOD_6 ( ) ) ; org . IDENT_0 . IDENT_1 . client . IDENT_9 . IDENT_10 IDENT_11 = org . mockito . Mockito . mock ( org . IDENT_0 . IDENT_1 . client . IDENT_9 . IDENT_10 . class ) ; org . IDENT_0 . IDENT_1 . common . IDENT_12 . gen . IDENT_13 response = new org . IDENT_0 . IDENT_1 . common . IDENT_12 . gen . METHOD_7 ( ) ; response . METHOD_8 ( IDENT_14 . IDENT_15 ) ; java . util . List < org . IDENT_0 . IDENT_1 . common . IDENT_12 . gen . IDENT_16 > IDENT_17 = new java . util . ArrayList ( ) ; IDENT_17 . add ( new org . IDENT_0 . IDENT_1 . common . IDENT_12 . gen . METHOD_9 ( INT_0 , null , org . IDENT_0 . IDENT_1 . common . IDENT_12 . gen . IDENT_18 . IDENT_19 ) ) ; IDENT_17 . add ( new org . IDENT_0 . IDENT_1 . common . IDENT_12 . gen . METHOD_9 ( 1L , null , org . IDENT_0 . IDENT_1 . common . IDENT_12 . gen . IDENT_18 . IDENT_20 ) ) ; response . METHOD_10 ( IDENT_17 ) ; org . IDENT_0 . IDENT_1 . client . channel . IDENT_21 IDENT_22 = org . mockito . Mockito . mock ( org . IDENT_0 . IDENT_1 . client . channel . IDENT_21 . class ) ; org . IDENT_0 . IDENT_1 . client . channel . IDENT_23 transport = new org . IDENT_0 . IDENT_1 . client . channel . impl . IDENT_24 . METHOD_11 ( ) ; transport . METHOD_12 ( IDENT_22 ) ; transport . METHOD_13 ( IDENT_11 ) ; transport . METHOD_14 ( IDENT_3 ) ; transport . METHOD_15 ( response ) ; org . IDENT_0 . IDENT_1 . common . IDENT_12 . gen . IDENT_25 request = transport . METHOD_16 ( ) ; "<AssertPlaceHolder>" ; } METHOD_17 ( java . util . List ) { if ( IDENT_26 == null ) { return org . IDENT_0 . IDENT_1 . client . IDENT_9 . IDENT_27 . IDENT_28 ; } int result = org . IDENT_0 . IDENT_1 . client . IDENT_9 . IDENT_27 . IDENT_29 ; if ( ! ( IDENT_26 . isEmpty ( ) ) ) { java . util . List < org . IDENT_0 . IDENT_1 . common . IDENT_12 . gen . METHOD_9 > IDENT_30 = new java . util . METHOD_18 ( IDENT_26 ) ; java . util . Collections . METHOD_19 ( IDENT_30 , new java . util . IDENT_31 < org . IDENT_0 . IDENT_1 . common . IDENT_12 . gen . METHOD_9 > ( ) { @ org . IDENT_0 . IDENT_1 . client . IDENT_9 . Override public int compare ( org . IDENT_0 . IDENT_1 . common . IDENT_12 . gen . METHOD_9 IDENT_32 , org . IDENT_0 . IDENT_1 . common . IDENT_12 . gen . METHOD_9 IDENT_33 ) { return ( IDENT_32 . getId ( ) ) < ( IDENT_33 . getId ( ) ) ? - 1 : ( IDENT_32 . getId ( ) ) > ( IDENT_33 . getId ( ) ) ? 1 : 0 ; } } ) ; for ( org . IDENT_0 . IDENT_1 . common . IDENT_12 . gen . METHOD_9 IDENT_34 : IDENT_30 ) { long IDENT_35 = IDENT_34 . getId ( ) ; int IDENT_36 = ( ( int ) ( IDENT_35 OP_0 ( IDENT_35 > > > INT_1 ) ) ) ; result = ( INT_2 * result ) + IDENT_36 ; } } return result ; }
org . junit . Assert . assertEquals ( org . IDENT_0 . IDENT_1 . client . IDENT_9 . IDENT_27 . METHOD_17 ( IDENT_17 ) , request . METHOD_4 ( ) ) 